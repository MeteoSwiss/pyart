!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module _echo_steiner ! in 
    interface  ! in :echo_steiner
        subroutine convective_radius(ze_bkg,area_relation,conv_rad) ! in :echo_steiner:echo_steiner.f90
            real(kind=8) intent(in) :: ze_bkg
            character*16 intent(in) :: area_relation
            real(kind=8) intent(out) :: conv_rad
        end subroutine convective_radius
        subroutine peakedness(ze_bkg,peak_relation,peak) ! in :echo_steiner:echo_steiner.f90
            real(kind=8) intent(in) :: ze_bkg
            character*16 intent(in) :: peak_relation
            real(kind=8) intent(out) :: peak
        end subroutine peakedness
        subroutine classify(ze,x,y,z,dx,dy,intense,bkg_rad,work_level,area_relation,peak_relation,use_intense,fill_value,nx,ny,nz,sclass) ! in :echo_steiner:echo_steiner.f90
            real(kind=8) dimension(nz,ny,nx),intent(in) :: ze
            real(kind=8) dimension(nx),intent(in),depend(nx) :: x
            real(kind=8) dimension(ny),intent(in),depend(ny) :: y
            real(kind=8) dimension(nz),intent(in),depend(nz) :: z
            real(kind=8) intent(in) :: dx
            real(kind=8) intent(in) :: dy
            real(kind=8) intent(in) :: intense
            real(kind=8) intent(in) :: bkg_rad
            real(kind=8) intent(in) :: work_level
            character*16 intent(in) :: area_relation
            character*16 intent(in) :: peak_relation
            logical intent(in) :: use_intense
            real(kind=8) intent(in) :: fill_value
            integer(kind=4), optional,intent(in),check(shape(ze,2)==nx),depend(ze) :: nx=shape(ze,2)
            integer(kind=4), optional,intent(in),check(shape(ze,1)==ny),depend(ze) :: ny=shape(ze,1)
            integer(kind=4), optional,intent(in),check(shape(ze,0)==nz),depend(ze) :: nz=shape(ze,0)
            integer(kind=4) dimension(ny,nx),intent(out),depend(ny,nx) :: sclass
        end subroutine classify
    end interface 
end python module _echo_steiner

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
