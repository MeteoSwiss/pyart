Search.setIndex({"docnames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/generated/pyart.aux_io.read_bin", "API/generated/generated/pyart.aux_io.read_bin_mf", "API/generated/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/generated/pyart.aux_io.read_cf1", "API/generated/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/generated/pyart.aux_io.read_dat_mf", "API/generated/generated/pyart.aux_io.read_gamic", "API/generated/generated/pyart.aux_io.read_gif", "API/generated/generated/pyart.aux_io.read_grib", "API/generated/generated/pyart.aux_io.read_hpl", "API/generated/generated/pyart.aux_io.read_iq", "API/generated/generated/pyart.aux_io.read_kazr", "API/generated/generated/pyart.aux_io.read_metranet", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/generated/pyart.aux_io.read_odim_h5", "API/generated/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/generated/pyart.aux_io.read_pattern", "API/generated/generated/pyart.aux_io.read_png", "API/generated/generated/pyart.aux_io.read_radx", "API/generated/generated/pyart.aux_io.read_rainbow_psr", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/generated/pyart.aux_io.read_skyecho", "API/generated/generated/pyart.aux_io.read_spectra", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/generated/pyart.aux_io.write_odim_h5", "API/generated/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/generated/pyart.aux_io.write_spectra", "API/generated/generated/pyart.bridge.texture_of_complex_phase", "API/generated/generated/pyart.config.FileMetadata", "API/generated/generated/pyart.config.FileMetadata.__call__", "API/generated/generated/pyart.config.FileMetadata.get_field_name", "API/generated/generated/pyart.config.FileMetadata.get_metadata", "API/generated/generated/pyart.config.get_field_colormap", "API/generated/generated/pyart.config.get_field_limits", "API/generated/generated/pyart.config.get_field_mapping", "API/generated/generated/pyart.config.get_field_name", "API/generated/generated/pyart.config.get_fillvalue", "API/generated/generated/pyart.config.get_metadata", "API/generated/generated/pyart.config.load_config", "API/generated/generated/pyart.core.Grid", "API/generated/generated/pyart.core.Grid.add_field", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.get_projparams", "API/generated/generated/pyart.core.Grid.init_point_altitude", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/generated/pyart.core.Grid.projection_proj", "API/generated/generated/pyart.core.Grid.to_xarray", "API/generated/generated/pyart.core.Grid.write", "API/generated/generated/pyart.core.HorizontalWindProfile", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/generated/pyart.core.Radar", "API/generated/generated/pyart.core.Radar.add_field", "API/generated/generated/pyart.core.Radar.add_field_like", "API/generated/generated/pyart.core.Radar.add_filter", "API/generated/generated/pyart.core.Radar.check_field_exists", "API/generated/generated/pyart.core.Radar.extract_sweeps", "API/generated/generated/pyart.core.Radar.get_azimuth", "API/generated/generated/pyart.core.Radar.get_elevation", "API/generated/generated/pyart.core.Radar.get_end", "API/generated/generated/pyart.core.Radar.get_field", "API/generated/generated/pyart.core.Radar.get_gate_area", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/generated/pyart.core.Radar.get_slice", "API/generated/generated/pyart.core.Radar.get_start", "API/generated/generated/pyart.core.Radar.get_start_end", "API/generated/generated/pyart.core.Radar.info", "API/generated/generated/pyart.core.Radar.init_gate_altitude", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/generated/pyart.core.Radar.iter_azimuth", "API/generated/generated/pyart.core.Radar.iter_elevation", "API/generated/generated/pyart.core.Radar.iter_end", "API/generated/generated/pyart.core.Radar.iter_field", "API/generated/generated/pyart.core.Radar.iter_slice", "API/generated/generated/pyart.core.Radar.iter_start", "API/generated/generated/pyart.core.Radar.iter_start_end", "API/generated/generated/pyart.core.RadarSpectra", "API/generated/generated/pyart.core.RadarSpectra.add_field", "API/generated/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/generated/pyart.core.RadarSpectra.add_filter", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/generated/pyart.core.RadarSpectra.get_end", "API/generated/generated/pyart.core.RadarSpectra.get_field", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/generated/pyart.core.RadarSpectra.get_slice", "API/generated/generated/pyart.core.RadarSpectra.get_start", "API/generated/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/generated/pyart.core.RadarSpectra.info", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/generated/pyart.core.RadarSpectra.iter_end", "API/generated/generated/pyart.core.RadarSpectra.iter_field", "API/generated/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/generated/pyart.core.RadarSpectra.iter_start", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/generated/pyart.core.antenna_to_cartesian", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/generated/pyart.core.cartesian_to_antenna", "API/generated/generated/pyart.core.cartesian_to_geographic", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/generated/pyart.core.geographic_to_cartesian", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/generated/pyart.correct.compute_apparent_vpr", "API/generated/generated/pyart.correct.compute_theoretical_vpr", "API/generated/generated/pyart.correct.correct_sys_phase", "API/generated/generated/pyart.correct.dealias_fourdd", "API/generated/generated/pyart.correct.dealias_region_based", "API/generated/generated/pyart.correct.dealias_unwrap_phase", "API/generated/generated/pyart.correct.det_sys_phase_ray", "API/generated/generated/pyart.correct.find_objects", "API/generated/generated/pyart.correct.get_mask_fzl", "API/generated/generated/pyart.correct.phase_proc_lp", "API/generated/generated/pyart.correct.phase_proc_lp_gf", "API/generated/generated/pyart.correct.ptoa_to_sf", "API/generated/generated/pyart.correct.scanning_losses", "API/generated/generated/pyart.correct.smooth_masked", "API/generated/generated/pyart.correct.smooth_phidp_double_window", "API/generated/generated/pyart.correct.smooth_phidp_single_window", "API/generated/generated/pyart.correct.solar_flux_lookup", "API/generated/generated/pyart.correct.sun_position_mfr", "API/generated/generated/pyart.correct.sun_position_pysolar", "API/generated/generated/pyart.correct.sun_power", "API/generated/generated/pyart.exceptions.DeprecatedAttribute", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName", "API/generated/generated/pyart.exceptions.MissingOptionalDependency", "API/generated/generated/pyart.exceptions._deprecated_alias", "API/generated/generated/pyart.filters.GateFilter", "API/generated/generated/pyart.filters.GateFilter.copy", "API/generated/generated/pyart.filters.GateFilter.exclude_above", "API/generated/generated/pyart.filters.GateFilter.exclude_all", "API/generated/generated/pyart.filters.GateFilter.exclude_below", "API/generated/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/generated/pyart.filters.GateFilter.exclude_none", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/generated/pyart.filters.GateFilter.gate_included", "API/generated/generated/pyart.filters.GateFilter.include_above", "API/generated/generated/pyart.filters.GateFilter.include_all", "API/generated/generated/pyart.filters.GateFilter.include_below", "API/generated/generated/pyart.filters.GateFilter.include_equal", "API/generated/generated/pyart.filters.GateFilter.include_gates", "API/generated/generated/pyart.filters.GateFilter.include_inside", "API/generated/generated/pyart.filters.GateFilter.include_none", "API/generated/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/generated/pyart.filters.GateFilter.include_outside", "API/generated/generated/pyart.filters.GateFilter.include_valid", "API/generated/generated/pyart.filters.birds_gate_filter", "API/generated/generated/pyart.filters.class_based_gate_filter", "API/generated/generated/pyart.filters.iso0_based_gate_filter", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/generated/pyart.filters.moment_based_gate_filter", "API/generated/generated/pyart.filters.snr_based_gate_filter", "API/generated/generated/pyart.filters.temp_based_gate_filter", "API/generated/generated/pyart.filters.visibility_based_gate_filter", "API/generated/generated/pyart.graph.AirborneRadarDisplay", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/generated/pyart.graph.GridMapDisplay", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/generated/pyart.graph.RadarDisplay", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarDisplay.plot", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplay", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/generated/pyart.io.make_time_unit_str", "API/generated/generated/pyart.io.prepare_for_read", "API/generated/generated/pyart.io.read", "API/generated/generated/pyart.io.read_arm_sonde", "API/generated/generated/pyart.io.read_arm_sonde_vap", "API/generated/generated/pyart.io.read_cfradial", "API/generated/generated/pyart.io.read_cfradial2", "API/generated/generated/pyart.io.read_chl", "API/generated/generated/pyart.io.read_grid", "API/generated/generated/pyart.io.read_grid_mdv", "API/generated/generated/pyart.io.read_mdv", "API/generated/generated/pyart.io.read_nexrad_archive", "API/generated/generated/pyart.io.read_nexrad_cdm", "API/generated/generated/pyart.io.read_nexrad_level3", "API/generated/generated/pyart.io.read_rsl", "API/generated/generated/pyart.io.read_sigmet", "API/generated/generated/pyart.io.read_uf", "API/generated/generated/pyart.io.write_cfradial", "API/generated/generated/pyart.io.write_grid", "API/generated/generated/pyart.io.write_grid_geotiff", "API/generated/generated/pyart.io.write_grid_mdv", "API/generated/generated/pyart.io.write_uf", "API/generated/generated/pyart.lazydict.LazyLoadDict", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/generated/pyart.retrieve._destandardize", "API/generated/generated/pyart.retrieve._get_res_vol_sides", "API/generated/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/generated/pyart.retrieve.composite_reflectivity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/generated/pyart.retrieve.compute_Doppler_width", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/generated/pyart.retrieve.compute_apparent_profile", "API/generated/generated/pyart.retrieve.compute_bird_density", "API/generated/generated/pyart.retrieve.compute_ccor", "API/generated/generated/pyart.retrieve.compute_cdr", "API/generated/generated/pyart.retrieve.compute_centroids", "API/generated/generated/pyart.retrieve.compute_differential_phase", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_evp", "API/generated/generated/pyart.retrieve.compute_iq", "API/generated/generated/pyart.retrieve.compute_l", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/generated/pyart.retrieve.compute_noise_power", "API/generated/generated/pyart.retrieve.compute_noisedBZ", "API/generated/generated/pyart.retrieve.compute_pol_variables", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/generated/pyart.retrieve.compute_qvp", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/generated/pyart.retrieve.compute_rcs", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/generated/pyart.retrieve.compute_reflectivity", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_rhohv", "API/generated/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/generated/pyart.retrieve.compute_rqvp", "API/generated/generated/pyart.retrieve.compute_signal_power", "API/generated/generated/pyart.retrieve.compute_snr", "API/generated/generated/pyart.retrieve.compute_spectra", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_noise", "API/generated/generated/pyart.retrieve.compute_spectral_phase", "API/generated/generated/pyart.retrieve.compute_spectral_power", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/generated/pyart.retrieve.compute_st1_iq", "API/generated/generated/pyart.retrieve.compute_st2_iq", "API/generated/generated/pyart.retrieve.compute_svp", "API/generated/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/generated/pyart.retrieve.compute_vol_refl", "API/generated/generated/pyart.retrieve.compute_vp", "API/generated/generated/pyart.retrieve.compute_wbn_iq", "API/generated/generated/pyart.retrieve.conv_strat_raut", "API/generated/generated/pyart.retrieve.conv_strat_yuter", "API/generated/generated/pyart.retrieve.data_for_centroids", "API/generated/generated/pyart.retrieve.dealias_spectra", "API/generated/generated/pyart.retrieve.detect_ml", "API/generated/generated/pyart.retrieve.determine_medoids", "API/generated/generated/pyart.retrieve.est_rain_rate_a", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/generated/pyart.retrieve.est_rain_rate_z", "API/generated/generated/pyart.retrieve.est_rain_rate_za", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/generated/pyart.retrieve.est_vertical_windshear", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/generated/pyart.retrieve.est_wind_profile", "API/generated/generated/pyart.retrieve.est_wind_vel", "API/generated/generated/pyart.retrieve.feature_detection", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/generated/pyart.retrieve.gecsx", "API/generated/generated/pyart.retrieve.get_coeff_attg", "API/generated/generated/pyart.retrieve.get_freq_band", "API/generated/generated/pyart.retrieve.get_iso0_val", "API/generated/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/generated/pyart.retrieve.grid_displacement_pc", "API/generated/generated/pyart.retrieve.grid_shift", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/generated/pyart.retrieve.kdp_maesaka", "API/generated/generated/pyart.retrieve.kdp_schneebeli", "API/generated/generated/pyart.retrieve.kdp_vulpiani", "API/generated/generated/pyart.retrieve.map_profile_to_gates", "API/generated/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/generated/pyart.retrieve.melting_layer_mf", "API/generated/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/generated/pyart.retrieve.select_samples", "API/generated/generated/pyart.retrieve.steiner_conv_strat", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/generated/pyart.retrieve.vad_browning", "API/generated/generated/pyart.retrieve.vad_michelson", "API/generated/generated/pyart.util.EPOCH_UNITS", "API/generated/generated/pyart.util.angular_mean", "API/generated/generated/pyart.util.angular_mean_deg", "API/generated/generated/pyart.util.angular_std", "API/generated/generated/pyart.util.angular_std_deg", "API/generated/generated/pyart.util.angular_texture_2d", "API/generated/generated/pyart.util.colocated_gates", "API/generated/generated/pyart.util.colocated_gates2", "API/generated/generated/pyart.util.compute_azimuthal_average", "API/generated/generated/pyart.util.compute_corr", "API/generated/generated/pyart.util.compute_directional_stats", "API/generated/generated/pyart.util.compute_mse", "API/generated/generated/pyart.util.compute_nse", "API/generated/generated/pyart.util.cross_section_ppi", "API/generated/generated/pyart.util.cross_section_rhi", "API/generated/generated/pyart.util.datetime_from_dataset", "API/generated/generated/pyart.util.datetime_from_grid", "API/generated/generated/pyart.util.datetime_from_radar", "API/generated/generated/pyart.util.datetimes_from_dataset", "API/generated/generated/pyart.util.datetimes_from_radar", "API/generated/generated/pyart.util.determine_sweeps", "API/generated/generated/pyart.util.estimate_noise_hs74", "API/generated/generated/pyart.util.estimate_noise_ivic13", "API/generated/generated/pyart.util.find_neighbour_gates", "API/generated/generated/pyart.util.for_azimuth", "API/generated/generated/pyart.util.get_column_rays", "API/generated/generated/pyart.util.get_field_location", "API/generated/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/generated/pyart.util.get_ivic_pct", "API/generated/generated/pyart.util.get_ivic_snr_thr", "API/generated/generated/pyart.util.get_target_elevations", "API/generated/generated/pyart.util.grid_texture_2d", "API/generated/generated/pyart.util.image_mute_radar", "API/generated/generated/pyart.util.interpol_spectra", "API/generated/generated/pyart.util.intersection", "API/generated/generated/pyart.util.interval_mean", "API/generated/generated/pyart.util.interval_std", "API/generated/generated/pyart.util.is_vpt", "API/generated/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/generated/pyart.util.ivic_pct_table", "API/generated/generated/pyart.util.ivic_snr_thr_table", "API/generated/generated/pyart.util.join_radar", "API/generated/generated/pyart.util.join_spectra", "API/generated/generated/pyart.util.ma_broadcast_to", "API/generated/generated/pyart.util.mean_of_two_angles", "API/generated/generated/pyart.util.mean_of_two_angles_deg", "API/generated/generated/pyart.util.radar_from_spectra", "API/generated/generated/pyart.util.rolling_window", "API/generated/generated/pyart.util.simulated_vel_from_profile", "API/generated/generated/pyart.util.sphere_distance", "API/generated/generated/pyart.util.subset_radar", "API/generated/generated/pyart.util.subset_radar_spectra", "API/generated/generated/pyart.util.texture", "API/generated/generated/pyart.util.texture_along_ray", "API/generated/generated/pyart.util.to_vpt", "API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.convert_data", "API/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/pyart.aux_io.get_library", "API/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/pyart.aux_io.read_bin", "API/generated/pyart.aux_io.read_bin_mf", "API/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/pyart.aux_io.read_cf1", "API/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_dat_mf", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_file_c", "API/generated/pyart.aux_io.read_file_py", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_gif", "API/generated/pyart.aux_io.read_grib", "API/generated/pyart.aux_io.read_hpl", "API/generated/pyart.aux_io.read_iq", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_knmi_grid_h5", "API/generated/pyart.aux_io.read_mch_vad", "API/generated/pyart.aux_io.read_metranet", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_png", "API/generated/pyart.aux_io.read_product_c", "API/generated/pyart.aux_io.read_product_py", "API/generated/pyart.aux_io.read_psr_cpi_header", "API/generated/pyart.aux_io.read_psr_header", "API/generated/pyart.aux_io.read_psr_spectra", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_rainbow_psr", "API/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.read_skyecho", "API/generated/pyart.aux_io.read_spectra", "API/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/pyart.aux_io.write_odim_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.aux_io.write_spectra", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_KE", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.add_field", "API/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/pyart.core.RadarSpectra.add_filter", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_field", "API/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.info", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.compute_apparent_vpr", "API/generated/pyart.correct.compute_theoretical_vpr", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.correct_sys_phase", "API/generated/pyart.correct.correct_visibility", "API/generated/pyart.correct.correct_vpr", "API/generated/pyart.correct.correct_vpr_spatialised", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.det_sys_phase_ray", "API/generated/pyart.correct.est_rhohv_rain", "API/generated/pyart.correct.est_zdr_precip", "API/generated/pyart.correct.est_zdr_snow", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.gauss_fit", "API/generated/pyart.correct.get_mask_fzl", "API/generated/pyart.correct.get_sun_hits", "API/generated/pyart.correct.get_sun_hits_ivic", "API/generated/pyart.correct.get_sun_hits_psr", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.ptoa_to_sf", "API/generated/pyart.correct.retrieval_result", "API/generated/pyart.correct.scanning_losses", "API/generated/pyart.correct.selfconsistency_bias", "API/generated/pyart.correct.selfconsistency_bias2", "API/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/pyart.correct.smooth_masked", "API/generated/pyart.correct.smooth_phidp_double_window", "API/generated/pyart.correct.smooth_phidp_single_window", "API/generated/pyart.correct.solar_flux_lookup", "API/generated/pyart.correct.sun_position_mfr", "API/generated/pyart.correct.sun_position_pysolar", "API/generated/pyart.correct.sun_power", "API/generated/pyart.correct.sun_retrieval", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.birds_gate_filter", "API/generated/pyart.filters.class_based_gate_filter", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.snr_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.filters.visibility_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.make_time_unit_str", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_cfradial2", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/pyart.retrieve.compute_Doppler_width", "API/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/pyart.retrieve.compute_apparent_profile", "API/generated/pyart.retrieve.compute_bird_density", "API/generated/pyart.retrieve.compute_ccor", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_centroids", "API/generated/pyart.retrieve.compute_differential_phase", "API/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_iq", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/pyart.retrieve.compute_noise_power", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_pol_variables", "API/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/pyart.retrieve.compute_rcs", "API/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/pyart.retrieve.compute_reflectivity", "API/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/pyart.retrieve.compute_rhohv", "API/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_signal_power", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_spectra", "API/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/pyart.retrieve.compute_spectral_noise", "API/generated/pyart.retrieve.compute_spectral_phase", "API/generated/pyart.retrieve.compute_spectral_power", "API/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/pyart.retrieve.compute_st1_iq", "API/generated/pyart.retrieve.compute_st2_iq", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vol_refl", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.compute_wbn_iq", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.data_for_centroids", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.detect_ml", "API/generated/pyart.retrieve.determine_medoids", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.est_vertical_windshear", "API/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/pyart.retrieve.est_wind_profile", "API/generated/pyart.retrieve.est_wind_vel", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.gecsx", "API/generated/pyart.retrieve.get_coeff_attg", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.get_iso0_val", "API/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/pyart.retrieve.melting_layer_mf", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.select_samples", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.add_field", "API/generated/pyart.testing.RadarSpectra.add_field_like", "API/generated/pyart.testing.RadarSpectra.add_filter", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.extract_sweeps", "API/generated/pyart.testing.RadarSpectra.get_azimuth", "API/generated/pyart.testing.RadarSpectra.get_elevation", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_field", "API/generated/pyart.testing.RadarSpectra.get_gate_area", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.info", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.colocated_gates", "API/generated/pyart.util.colocated_gates2", "API/generated/pyart.util.compute_azimuthal_average", "API/generated/pyart.util.compute_corr", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.compute_mse", "API/generated/pyart.util.compute_nse", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.estimate_noise_ivic13", "API/generated/pyart.util.find_neighbour_gates", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/pyart.util.get_ivic_pct", "API/generated/pyart.util.get_ivic_snr_thr", "API/generated/pyart.util.get_target_elevations", "API/generated/pyart.util.grid_texture_2d", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interpol_spectra", "API/generated/pyart.util.intersection", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/pyart.util.ivic_pct_table", "API/generated/pyart.util.ivic_snr_thr_table", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.join_spectra", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.radar_from_spectra", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.subset_radar_spectra", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "changelog", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/read_mch_metranet_data", "notebooks/swiss_doppler", "notebooks/swiss_thunderstorm", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/generated/pyart.aux_io.read_bin.rst", "API/generated/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/generated/pyart.aux_io.read_cf1.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/generated/pyart.aux_io.read_gamic.rst", "API/generated/generated/pyart.aux_io.read_gif.rst", "API/generated/generated/pyart.aux_io.read_grib.rst", "API/generated/generated/pyart.aux_io.read_hpl.rst", "API/generated/generated/pyart.aux_io.read_iq.rst", "API/generated/generated/pyart.aux_io.read_kazr.rst", "API/generated/generated/pyart.aux_io.read_metranet.rst", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/generated/pyart.aux_io.read_pattern.rst", "API/generated/generated/pyart.aux_io.read_png.rst", "API/generated/generated/pyart.aux_io.read_radx.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/generated/pyart.aux_io.read_skyecho.rst", "API/generated/generated/pyart.aux_io.read_spectra.rst", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/generated/pyart.aux_io.write_spectra.rst", "API/generated/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/generated/pyart.config.FileMetadata.rst", "API/generated/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/generated/pyart.config.get_field_colormap.rst", "API/generated/generated/pyart.config.get_field_limits.rst", "API/generated/generated/pyart.config.get_field_mapping.rst", "API/generated/generated/pyart.config.get_field_name.rst", "API/generated/generated/pyart.config.get_fillvalue.rst", "API/generated/generated/pyart.config.get_metadata.rst", "API/generated/generated/pyart.config.load_config.rst", "API/generated/generated/pyart.core.Grid.rst", "API/generated/generated/pyart.core.Grid.add_field.rst", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.get_projparams.rst", "API/generated/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/generated/pyart.core.Grid.projection_proj.rst", "API/generated/generated/pyart.core.Grid.to_xarray.rst", "API/generated/generated/pyart.core.Grid.write.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/generated/pyart.core.Radar.rst", "API/generated/generated/pyart.core.Radar.add_field.rst", "API/generated/generated/pyart.core.Radar.add_field_like.rst", "API/generated/generated/pyart.core.Radar.add_filter.rst", "API/generated/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/generated/pyart.core.Radar.get_elevation.rst", "API/generated/generated/pyart.core.Radar.get_end.rst", "API/generated/generated/pyart.core.Radar.get_field.rst", "API/generated/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/generated/pyart.core.Radar.get_slice.rst", "API/generated/generated/pyart.core.Radar.get_start.rst", "API/generated/generated/pyart.core.Radar.get_start_end.rst", "API/generated/generated/pyart.core.Radar.info.rst", "API/generated/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/generated/pyart.core.Radar.iter_end.rst", "API/generated/generated/pyart.core.Radar.iter_field.rst", "API/generated/generated/pyart.core.Radar.iter_slice.rst", "API/generated/generated/pyart.core.Radar.iter_start.rst", "API/generated/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.info.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/generated/pyart.correct.correct_sys_phase.rst", "API/generated/generated/pyart.correct.dealias_fourdd.rst", "API/generated/generated/pyart.correct.dealias_region_based.rst", "API/generated/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/generated/pyart.correct.find_objects.rst", "API/generated/generated/pyart.correct.get_mask_fzl.rst", "API/generated/generated/pyart.correct.phase_proc_lp.rst", "API/generated/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/generated/pyart.correct.scanning_losses.rst", "API/generated/generated/pyart.correct.smooth_masked.rst", "API/generated/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/generated/pyart.correct.sun_position_mfr.rst", "API/generated/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/generated/pyart.correct.sun_power.rst", "API/generated/generated/pyart.exceptions.DeprecatedAttribute.rst", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName.rst", "API/generated/generated/pyart.exceptions.MissingOptionalDependency.rst", "API/generated/generated/pyart.exceptions._deprecated_alias.rst", "API/generated/generated/pyart.filters.GateFilter.rst", "API/generated/generated/pyart.filters.GateFilter.copy.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/generated/pyart.filters.birds_gate_filter.rst", "API/generated/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.GridMapDisplay.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.RadarDisplay.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/generated/pyart.io.make_time_unit_str.rst", "API/generated/generated/pyart.io.prepare_for_read.rst", "API/generated/generated/pyart.io.read.rst", "API/generated/generated/pyart.io.read_arm_sonde.rst", "API/generated/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/generated/pyart.io.read_cfradial.rst", "API/generated/generated/pyart.io.read_cfradial2.rst", "API/generated/generated/pyart.io.read_chl.rst", "API/generated/generated/pyart.io.read_grid.rst", "API/generated/generated/pyart.io.read_grid_mdv.rst", "API/generated/generated/pyart.io.read_mdv.rst", "API/generated/generated/pyart.io.read_nexrad_archive.rst", "API/generated/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/generated/pyart.io.read_nexrad_level3.rst", "API/generated/generated/pyart.io.read_rsl.rst", "API/generated/generated/pyart.io.read_sigmet.rst", "API/generated/generated/pyart.io.read_uf.rst", "API/generated/generated/pyart.io.write_cfradial.rst", "API/generated/generated/pyart.io.write_grid.rst", "API/generated/generated/pyart.io.write_grid_geotiff.rst", "API/generated/generated/pyart.io.write_grid_mdv.rst", "API/generated/generated/pyart.io.write_uf.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/generated/pyart.retrieve._destandardize.rst", "API/generated/generated/pyart.retrieve._get_res_vol_sides.rst", "API/generated/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/generated/pyart.retrieve.compute_ccor.rst", "API/generated/generated/pyart.retrieve.compute_cdr.rst", "API/generated/generated/pyart.retrieve.compute_centroids.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_evp.rst", "API/generated/generated/pyart.retrieve.compute_iq.rst", "API/generated/generated/pyart.retrieve.compute_l.rst", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/generated/pyart.retrieve.compute_qvp.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/generated/pyart.retrieve.compute_rcs.rst", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/generated/pyart.retrieve.compute_snr.rst", "API/generated/generated/pyart.retrieve.compute_spectra.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/generated/pyart.retrieve.compute_svp.rst", "API/generated/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/generated/pyart.retrieve.compute_vp.rst", "API/generated/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/generated/pyart.retrieve.detect_ml.rst", "API/generated/generated/pyart.retrieve.determine_medoids.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/generated/pyart.retrieve.feature_detection.rst", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/generated/pyart.retrieve.gecsx.rst", "API/generated/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/generated/pyart.retrieve.get_freq_band.rst", "API/generated/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/generated/pyart.retrieve.grid_shift.rst", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/generated/pyart.retrieve.select_samples.rst", "API/generated/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/generated/pyart.retrieve.vad_browning.rst", "API/generated/generated/pyart.retrieve.vad_michelson.rst", "API/generated/generated/pyart.util.EPOCH_UNITS.rst", "API/generated/generated/pyart.util.angular_mean.rst", "API/generated/generated/pyart.util.angular_mean_deg.rst", "API/generated/generated/pyart.util.angular_std.rst", "API/generated/generated/pyart.util.angular_std_deg.rst", "API/generated/generated/pyart.util.angular_texture_2d.rst", "API/generated/generated/pyart.util.colocated_gates.rst", "API/generated/generated/pyart.util.colocated_gates2.rst", "API/generated/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/generated/pyart.util.compute_corr.rst", "API/generated/generated/pyart.util.compute_directional_stats.rst", "API/generated/generated/pyart.util.compute_mse.rst", "API/generated/generated/pyart.util.compute_nse.rst", "API/generated/generated/pyart.util.cross_section_ppi.rst", "API/generated/generated/pyart.util.cross_section_rhi.rst", "API/generated/generated/pyart.util.datetime_from_dataset.rst", "API/generated/generated/pyart.util.datetime_from_grid.rst", "API/generated/generated/pyart.util.datetime_from_radar.rst", "API/generated/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/generated/pyart.util.datetimes_from_radar.rst", "API/generated/generated/pyart.util.determine_sweeps.rst", "API/generated/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/generated/pyart.util.find_neighbour_gates.rst", "API/generated/generated/pyart.util.for_azimuth.rst", "API/generated/generated/pyart.util.get_column_rays.rst", "API/generated/generated/pyart.util.get_field_location.rst", "API/generated/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/generated/pyart.util.get_ivic_pct.rst", "API/generated/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/generated/pyart.util.get_target_elevations.rst", "API/generated/generated/pyart.util.grid_texture_2d.rst", "API/generated/generated/pyart.util.image_mute_radar.rst", "API/generated/generated/pyart.util.interpol_spectra.rst", "API/generated/generated/pyart.util.intersection.rst", "API/generated/generated/pyart.util.interval_mean.rst", "API/generated/generated/pyart.util.interval_std.rst", "API/generated/generated/pyart.util.is_vpt.rst", "API/generated/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/generated/pyart.util.ivic_pct_table.rst", "API/generated/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/generated/pyart.util.join_radar.rst", "API/generated/generated/pyart.util.join_spectra.rst", "API/generated/generated/pyart.util.ma_broadcast_to.rst", "API/generated/generated/pyart.util.mean_of_two_angles.rst", "API/generated/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/generated/pyart.util.radar_from_spectra.rst", "API/generated/generated/pyart.util.rolling_window.rst", "API/generated/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/generated/pyart.util.sphere_distance.rst", "API/generated/generated/pyart.util.subset_radar.rst", "API/generated/generated/pyart.util.subset_radar_spectra.rst", "API/generated/generated/pyart.util.texture.rst", "API/generated/generated/pyart.util.texture_along_ray.rst", "API/generated/generated/pyart.util.to_vpt.rst", "API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.convert_data.rst", "API/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/pyart.aux_io.get_library.rst", "API/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/pyart.aux_io.read_bin.rst", "API/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/pyart.aux_io.read_cf1.rst", "API/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_file_c.rst", "API/generated/pyart.aux_io.read_file_py.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_gif.rst", "API/generated/pyart.aux_io.read_grib.rst", "API/generated/pyart.aux_io.read_hpl.rst", "API/generated/pyart.aux_io.read_iq.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_knmi_grid_h5.rst", "API/generated/pyart.aux_io.read_mch_vad.rst", "API/generated/pyart.aux_io.read_metranet.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_png.rst", "API/generated/pyart.aux_io.read_product_c.rst", "API/generated/pyart.aux_io.read_product_py.rst", "API/generated/pyart.aux_io.read_psr_cpi_header.rst", "API/generated/pyart.aux_io.read_psr_header.rst", "API/generated/pyart.aux_io.read_psr_spectra.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.read_skyecho.rst", "API/generated/pyart.aux_io.read_spectra.rst", "API/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.aux_io.write_spectra.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_KE.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.info.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.correct_sys_phase.rst", "API/generated/pyart.correct.correct_visibility.rst", "API/generated/pyart.correct.correct_vpr.rst", "API/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/pyart.correct.est_zdr_precip.rst", "API/generated/pyart.correct.est_zdr_snow.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.gauss_fit.rst", "API/generated/pyart.correct.get_mask_fzl.rst", "API/generated/pyart.correct.get_sun_hits.rst", "API/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/pyart.correct.retrieval_result.rst", "API/generated/pyart.correct.scanning_losses.rst", "API/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/pyart.correct.smooth_masked.rst", "API/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/pyart.correct.sun_position_mfr.rst", "API/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/pyart.correct.sun_power.rst", "API/generated/pyart.correct.sun_retrieval.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.birds_gate_filter.rst", "API/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.make_time_unit_str.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_cfradial2.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/pyart.retrieve.compute_ccor.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_centroids.rst", "API/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_iq.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/pyart.retrieve.compute_rcs.rst", "API/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_spectra.rst", "API/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.detect_ml.rst", "API/generated/pyart.retrieve.determine_medoids.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.gecsx.rst", "API/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.select_samples.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.add_field.rst", "API/generated/pyart.testing.RadarSpectra.add_field_like.rst", "API/generated/pyart.testing.RadarSpectra.add_filter.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.testing.RadarSpectra.get_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.get_elevation.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_field.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_area.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.info.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.colocated_gates.rst", "API/generated/pyart.util.colocated_gates2.rst", "API/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/pyart.util.compute_corr.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.compute_mse.rst", "API/generated/pyart.util.compute_nse.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/pyart.util.find_neighbour_gates.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/pyart.util.get_ivic_pct.rst", "API/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/pyart.util.get_target_elevations.rst", "API/generated/pyart.util.grid_texture_2d.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interpol_spectra.rst", "API/generated/pyart.util.intersection.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/pyart.util.ivic_pct_table.rst", "API/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.join_spectra.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.radar_from_spectra.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.subset_radar_spectra.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "changelog.md", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/read_mch_metranet_data.ipynb", "notebooks/swiss_doppler.ipynb", "notebooks/swiss_thunderstorm.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge.texture_of_complex_phase", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_sys_phase", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.det_sys_phase_ray", "pyart.correct.find_objects", "pyart.correct.get_mask_fzl", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.scanning_losses", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.exceptions.DeprecatedAttribute", "pyart.exceptions.DeprecatedFunctionName", "pyart.exceptions.MissingOptionalDependency", "pyart.exceptions._deprecated_alias", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.__contains__", "pyart.lazydict.LazyLoadDict.__delattr__", "pyart.lazydict.LazyLoadDict.__delitem__", "pyart.lazydict.LazyLoadDict.__dir__", "pyart.lazydict.LazyLoadDict.__eq__", "pyart.lazydict.LazyLoadDict.__format__", "pyart.lazydict.LazyLoadDict.__ge__", "pyart.lazydict.LazyLoadDict.__getattribute__", "pyart.lazydict.LazyLoadDict.__getitem__", "pyart.lazydict.LazyLoadDict.__getstate__", "pyart.lazydict.LazyLoadDict.__gt__", "pyart.lazydict.LazyLoadDict.__init__", "pyart.lazydict.LazyLoadDict.__init_subclass__", "pyart.lazydict.LazyLoadDict.__iter__", "pyart.lazydict.LazyLoadDict.__le__", "pyart.lazydict.LazyLoadDict.__len__", "pyart.lazydict.LazyLoadDict.__lt__", "pyart.lazydict.LazyLoadDict.__ne__", "pyart.lazydict.LazyLoadDict.__new__", "pyart.lazydict.LazyLoadDict.__reduce__", "pyart.lazydict.LazyLoadDict.__reduce_ex__", "pyart.lazydict.LazyLoadDict.__repr__", "pyart.lazydict.LazyLoadDict.__setattr__", "pyart.lazydict.LazyLoadDict.__setitem__", "pyart.lazydict.LazyLoadDict.__sizeof__", "pyart.lazydict.LazyLoadDict.__str__", "pyart.lazydict.LazyLoadDict.__subclasshook__", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.retrieve._destandardize", "pyart.retrieve._get_res_vol_sides", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.util.EPOCH_UNITS", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "pyart._debug_info", "pyart.aux_io", "pyart.aux_io.convert_data", "pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_library", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_file_c", "pyart.aux_io.read_file_py", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_knmi_grid_h5", "pyart.aux_io.read_mch_vad", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_product_c", "pyart.aux_io.read_product_py", "pyart.aux_io.read_psr_cpi_header", "pyart.aux_io.read_psr_header", "pyart.aux_io.read_psr_spectra", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_KE", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.gauss_fit", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.retrieval_result", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.add_field", "pyart.testing.RadarSpectra.add_field_like", "pyart.testing.RadarSpectra.add_filter", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.extract_sweeps", "pyart.testing.RadarSpectra.get_azimuth", "pyart.testing.RadarSpectra.get_elevation", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_field", "pyart.testing.RadarSpectra.get_gate_area", "pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "pyart.testing.RadarSpectra.get_gate_x_y_z", "pyart.testing.RadarSpectra.get_nyquist_vel", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.info", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Manual", "Changelog", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "About the MeteoSwiss fork of Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "Reading MeteoSwiss Metranet data with Py-ART", "Processing of Doppler wind data from a Swiss volumetric scan", "Filtering and retrievals on raw Swiss C-band data", "The Py-ART Radar object and indexing", "Computation times", "Installation", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"filenam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 55, 189, 225, 241, 256, 289, 315, 326, 352, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 638, 649, 833, 869, 885, 900, 933, 959, 970, 996, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1172, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1361], "basepath": [0, 578], "none": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 40, 45, 46, 56, 60, 63, 71, 72, 89, 92, 100, 101, 118, 119, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 411, 413, 421, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 525, 526, 527, 528, 530, 531, 532, 533, 542, 551, 553, 568, 570, 571, 575, 578, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 607, 608, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 625, 627, 629, 633, 638, 640, 650, 654, 657, 665, 666, 683, 686, 694, 695, 712, 713, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 781, 782, 783, 785, 786, 791, 822, 823, 824, 825, 826, 827, 828, 829, 835, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 935, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 957, 958, 959, 961, 962, 963, 964, 965, 966, 967, 968, 972, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 988, 989, 990, 991, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1033, 1041, 1044, 1045, 1051, 1054, 1062, 1063, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1159, 1160, 1161, 1163, 1173, 1175, 1178, 1186, 1187, 1204, 1207, 1215, 1216, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1271, 1280, 1282, 1297, 1299, 1300, 1323, 1332, 1342, 1355, 1357, 1358, 1361], "sweep_dir": [0, 578], "dir_timeformat": [0, 578], "y": [0, 3, 9, 22, 46, 52, 54, 72, 80, 101, 109, 118, 119, 120, 121, 122, 123, 124, 125, 187, 189, 201, 204, 206, 209, 211, 214, 215, 216, 217, 218, 220, 231, 233, 237, 239, 249, 251, 253, 254, 256, 268, 271, 273, 276, 278, 281, 282, 283, 284, 286, 287, 289, 301, 304, 306, 309, 312, 314, 318, 319, 320, 321, 323, 324, 326, 338, 341, 343, 346, 349, 351, 355, 356, 357, 358, 360, 478, 494, 501, 502, 515, 550, 578, 582, 588, 606, 640, 646, 648, 666, 674, 695, 703, 712, 713, 714, 715, 716, 717, 718, 719, 831, 833, 845, 848, 850, 853, 855, 858, 859, 860, 861, 862, 864, 875, 877, 881, 883, 893, 895, 897, 898, 900, 912, 915, 917, 920, 922, 925, 926, 927, 928, 930, 931, 933, 945, 948, 950, 953, 956, 958, 962, 963, 964, 965, 967, 968, 970, 982, 985, 987, 990, 993, 995, 999, 1000, 1001, 1002, 1004, 1054, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1120, 1136, 1143, 1144, 1157, 1163, 1169, 1171, 1187, 1195, 1216, 1224, 1235, 1279, 1316, 1322, 1323, 1332, 1333, 1340, 1342, 1356], "m": [0, 3, 9, 14, 16, 22, 24, 25, 70, 73, 99, 102, 120, 126, 127, 128, 132, 135, 138, 143, 146, 179, 181, 185, 189, 256, 289, 326, 433, 442, 447, 450, 452, 459, 472, 473, 475, 477, 483, 494, 496, 500, 501, 503, 506, 507, 510, 512, 513, 515, 525, 526, 541, 542, 551, 553, 570, 571, 578, 579, 582, 588, 596, 600, 606, 613, 614, 664, 667, 693, 696, 714, 720, 753, 754, 759, 760, 763, 771, 772, 778, 781, 782, 783, 787, 790, 822, 824, 828, 833, 900, 933, 970, 1061, 1065, 1075, 1084, 1089, 1092, 1094, 1101, 1114, 1115, 1117, 1119, 1125, 1136, 1138, 1142, 1143, 1145, 1148, 1149, 1152, 1154, 1155, 1157, 1185, 1188, 1214, 1217, 1254, 1255, 1270, 1271, 1280, 1282, 1299, 1300, 1312, 1324, 1333, 1342, 1344, 1347, 1355, 1356, 1357, 1360, 1361], "d": [0, 3, 9, 22, 132, 189, 256, 289, 326, 383, 411, 413, 415, 416, 417, 418, 420, 421, 422, 459, 472, 477, 481, 508, 518, 578, 582, 588, 606, 752, 763, 833, 900, 933, 970, 1030, 1031, 1033, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1101, 1114, 1119, 1123, 1150, 1161, 1340, 1361], "file_prefix": [0, 578], "file_sufix": [0, 578], "file_timeformat": [0, 578], "dt": [0, 144, 145, 578, 788, 789, 1308], "h": [0, 9, 14, 132, 189, 246, 256, 289, 326, 352, 432, 439, 445, 446, 450, 451, 465, 470, 471, 476, 488, 513, 540, 578, 588, 596, 763, 772, 773, 774, 833, 890, 900, 933, 970, 996, 1074, 1081, 1087, 1088, 1092, 1093, 1107, 1112, 1113, 1118, 1130, 1155, 1269, 1316, 1323, 1357], "": [0, 9, 45, 46, 60, 73, 77, 89, 102, 106, 118, 119, 122, 125, 131, 132, 136, 137, 138, 146, 189, 191, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 256, 258, 271, 278, 282, 283, 284, 289, 291, 304, 314, 319, 320, 321, 326, 328, 341, 351, 356, 357, 358, 415, 416, 422, 437, 446, 450, 451, 452, 453, 465, 478, 483, 484, 494, 498, 501, 506, 507, 508, 510, 513, 515, 516, 518, 540, 541, 551, 578, 588, 638, 640, 654, 667, 671, 683, 696, 700, 712, 713, 716, 719, 762, 763, 776, 777, 778, 790, 833, 835, 848, 855, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 900, 902, 915, 922, 926, 927, 928, 933, 935, 948, 958, 963, 964, 965, 970, 972, 985, 995, 1000, 1001, 1002, 1035, 1036, 1042, 1046, 1047, 1052, 1054, 1056, 1061, 1079, 1088, 1092, 1093, 1094, 1095, 1107, 1120, 1125, 1126, 1136, 1140, 1143, 1148, 1149, 1150, 1152, 1155, 1157, 1158, 1161, 1163, 1175, 1188, 1192, 1204, 1217, 1221, 1269, 1270, 1280, 1312, 1313, 1316, 1321, 1323, 1324, 1333, 1340, 1342, 1344, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1362], "sweep_start_tim": [0, 578], "sweep_end_tim": [0, 27, 578, 617], "field_nam": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 35, 37, 47, 61, 62, 64, 69, 85, 90, 91, 93, 98, 114, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 423, 442, 450, 459, 472, 473, 475, 527, 570, 571, 578, 582, 584, 585, 586, 587, 588, 592, 594, 596, 597, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 617, 618, 619, 620, 621, 627, 629, 641, 655, 656, 658, 663, 679, 684, 685, 687, 692, 708, 755, 758, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1084, 1092, 1101, 1114, 1115, 1117, 1164, 1176, 1177, 1179, 1184, 1200, 1205, 1206, 1208, 1213, 1229, 1256, 1299, 1300, 1316, 1353], "additional_metadata": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 35, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 578, 581, 582, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 617, 618, 619, 627, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "file_field_nam": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 37, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 578, 584, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 627, 629, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1028], "fals": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 30, 31, 33, 35, 47, 48, 55, 61, 62, 63, 66, 67, 69, 71, 72, 73, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 126, 130, 131, 132, 136, 137, 151, 153, 155, 157, 163, 164, 167, 169, 171, 176, 177, 189, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 246, 249, 251, 253, 256, 271, 273, 278, 281, 282, 283, 284, 289, 304, 306, 314, 315, 318, 319, 320, 321, 326, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 410, 414, 427, 437, 441, 448, 449, 451, 452, 454, 456, 457, 458, 463, 464, 467, 468, 469, 477, 478, 481, 482, 484, 493, 494, 503, 504, 505, 506, 507, 508, 510, 511, 534, 535, 536, 537, 538, 539, 541, 546, 548, 556, 560, 574, 578, 579, 584, 585, 586, 587, 590, 591, 592, 596, 597, 598, 600, 601, 602, 603, 604, 607, 608, 613, 614, 615, 616, 617, 618, 620, 621, 623, 627, 641, 642, 649, 655, 656, 657, 660, 661, 663, 665, 666, 667, 684, 685, 686, 689, 690, 692, 694, 695, 696, 713, 717, 720, 722, 724, 726, 728, 734, 735, 738, 740, 742, 747, 748, 750, 759, 761, 762, 763, 776, 777, 781, 782, 791, 794, 796, 798, 800, 806, 807, 810, 812, 814, 819, 820, 833, 848, 850, 855, 858, 859, 860, 861, 862, 865, 875, 877, 878, 879, 881, 883, 884, 890, 893, 895, 897, 900, 915, 917, 922, 925, 926, 927, 928, 933, 948, 950, 958, 959, 962, 963, 964, 965, 970, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1005, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1034, 1064, 1065, 1069, 1079, 1083, 1090, 1091, 1093, 1094, 1096, 1098, 1099, 1100, 1105, 1106, 1109, 1110, 1111, 1119, 1120, 1123, 1124, 1126, 1135, 1136, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1164, 1165, 1172, 1173, 1176, 1177, 1178, 1181, 1182, 1184, 1186, 1187, 1188, 1205, 1206, 1207, 1210, 1211, 1213, 1215, 1216, 1217, 1246, 1247, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1275, 1277, 1285, 1289, 1303, 1323, 1330, 1332, 1333, 1335, 1342, 1349, 1350, 1354, 1355, 1358, 1361], "exclude_field": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 578, 584, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 627, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1028], "include_field": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 63, 92, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 578, 584, 587, 592, 596, 597, 598, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 627, 657, 686, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1178, 1207], "verbos": [0, 496, 506, 578, 579, 590, 591, 607, 608, 1138, 1148, 1361], "kwarg": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 130, 131, 132, 203, 204, 205, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 246, 249, 250, 251, 252, 253, 270, 271, 272, 278, 282, 283, 284, 303, 304, 305, 311, 312, 313, 314, 315, 316, 319, 320, 321, 340, 341, 342, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 402, 506, 534, 535, 536, 537, 538, 578, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 596, 598, 600, 601, 602, 603, 604, 605, 606, 612, 613, 614, 615, 616, 617, 618, 761, 762, 763, 847, 848, 849, 855, 859, 860, 861, 862, 874, 875, 877, 878, 879, 880, 881, 882, 883, 890, 893, 894, 895, 896, 897, 914, 915, 916, 922, 926, 927, 928, 947, 948, 949, 955, 956, 957, 958, 959, 960, 963, 964, 965, 984, 985, 986, 992, 993, 994, 995, 996, 997, 1000, 1001, 1002, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1061, 1062, 1063, 1064, 1065, 1148, 1263, 1264, 1265, 1266, 1267, 1356], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 106, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 197, 201, 202, 203, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 311, 312, 313, 315, 316, 324, 348, 349, 350, 352, 353, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 392, 395, 397, 399, 407, 409, 412, 414, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 688, 700, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 841, 845, 846, 847, 860, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 955, 956, 957, 959, 960, 968, 992, 993, 994, 996, 997, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1032, 1034, 1039, 1054, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1209, 1221, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1307, 1308, 1310, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361, 1363], "read": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 151, 204, 215, 271, 282, 304, 319, 341, 356, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 627, 629, 722, 794, 848, 859, 915, 926, 948, 963, 985, 1000, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1028, 1305, 1307, 1308, 1310, 1311, 1314, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1327, 1329, 1332, 1333, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1358, 1359], "skyecho": [0, 1, 27, 578, 580, 617, 1305], "netcdf": [0, 1, 5, 6, 7, 8, 13, 15, 17, 21, 27, 28, 33, 55, 364, 365, 366, 367, 369, 373, 378, 379, 495, 534, 537, 578, 580, 584, 585, 586, 587, 589, 595, 597, 601, 605, 617, 618, 623, 649, 1010, 1011, 1012, 1013, 1015, 1019, 1024, 1025, 1137, 1172, 1263, 1266, 1305, 1347, 1348], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 45, 55, 60, 77, 89, 106, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 426, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 455, 456, 457, 458, 463, 464, 465, 466, 467, 468, 469, 470, 471, 476, 478, 479, 480, 481, 494, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 568, 575, 576, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 629, 632, 633, 634, 635, 638, 649, 654, 671, 683, 700, 750, 751, 752, 757, 761, 762, 763, 765, 766, 767, 768, 771, 775, 776, 777, 781, 782, 783, 785, 786, 822, 823, 824, 825, 826, 827, 828, 829, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1068, 1071, 1072, 1073, 1074, 1080, 1081, 1082, 1083, 1087, 1088, 1090, 1091, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1118, 1120, 1121, 1122, 1123, 1136, 1138, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1159, 1162, 1172, 1175, 1192, 1204, 1221, 1234, 1297, 1305, 1307, 1309, 1310, 1312, 1313, 1314, 1317, 1319, 1320, 1321, 1324, 1326, 1329, 1335, 1336, 1337, 1338, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1354, 1356, 1357, 1358, 1359, 1360, 1363], "creat": [0, 30, 31, 33, 46, 57, 60, 62, 65, 89, 91, 94, 130, 131, 132, 150, 179, 180, 181, 182, 183, 184, 185, 186, 187, 203, 217, 221, 240, 254, 270, 283, 287, 303, 315, 320, 324, 340, 352, 357, 373, 378, 379, 380, 381, 382, 442, 450, 459, 472, 473, 475, 492, 513, 517, 518, 519, 567, 568, 578, 620, 621, 623, 640, 651, 654, 656, 659, 683, 685, 688, 761, 762, 763, 764, 775, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 847, 861, 865, 884, 898, 914, 927, 931, 947, 959, 964, 968, 984, 996, 1001, 1019, 1024, 1025, 1026, 1027, 1028, 1064, 1065, 1084, 1092, 1101, 1114, 1115, 1117, 1134, 1155, 1160, 1161, 1163, 1173, 1175, 1177, 1180, 1204, 1206, 1209, 1296, 1297, 1307, 1308, 1310, 1313, 1316, 1317, 1318, 1320, 1321, 1323, 1337, 1338, 1342, 1347, 1348, 1350, 1353, 1356, 1357, 1359, 1361], "new": [0, 45, 62, 63, 65, 91, 92, 94, 155, 157, 164, 171, 176, 442, 450, 459, 472, 473, 475, 502, 513, 517, 519, 527, 551, 566, 570, 571, 578, 638, 656, 657, 659, 685, 686, 688, 726, 728, 735, 742, 747, 764, 798, 800, 807, 814, 819, 1084, 1092, 1101, 1114, 1115, 1117, 1144, 1155, 1160, 1177, 1178, 1180, 1206, 1207, 1209, 1256, 1280, 1295, 1299, 1300, 1316, 1340, 1343, 1347, 1350, 1351, 1361, 1363], "cf": [0, 5, 6, 7, 13, 23, 28, 33, 60, 89, 366, 367, 378, 379, 495, 578, 584, 585, 586, 595, 612, 618, 623, 654, 683, 1012, 1013, 1024, 1025, 1137, 1175, 1204, 1310, 1320, 1338, 1347, 1358, 1359], "radial": [0, 5, 6, 7, 13, 23, 28, 33, 60, 89, 130, 131, 366, 367, 378, 427, 451, 452, 492, 493, 506, 517, 518, 524, 541, 568, 578, 584, 585, 586, 595, 612, 618, 623, 654, 683, 761, 762, 1012, 1013, 1024, 1069, 1093, 1094, 1134, 1135, 1148, 1160, 1161, 1175, 1204, 1253, 1270, 1297, 1306, 1310, 1312, 1320, 1338, 1347, 1351, 1356, 1358, 1359], "singl": [0, 31, 45, 131, 132, 134, 209, 210, 212, 214, 276, 277, 279, 281, 309, 310, 316, 318, 346, 347, 353, 355, 380, 539, 574, 578, 621, 638, 762, 763, 764, 769, 781, 853, 854, 856, 858, 920, 921, 923, 925, 953, 954, 960, 962, 990, 991, 997, 999, 1026, 1065, 1241, 1268, 1303, 1310, 1312, 1315, 1316, 1319, 1340, 1355, 1356, 1359, 1361], "sweep": [0, 1, 27, 31, 40, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 130, 131, 132, 134, 164, 176, 179, 182, 183, 189, 191, 203, 204, 206, 211, 215, 216, 217, 218, 256, 258, 270, 271, 273, 278, 282, 283, 284, 289, 291, 303, 304, 306, 314, 315, 319, 320, 321, 326, 328, 340, 341, 343, 351, 352, 356, 357, 358, 372, 373, 374, 376, 427, 450, 472, 517, 532, 533, 539, 578, 580, 617, 621, 633, 654, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 676, 677, 678, 679, 680, 681, 682, 683, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 705, 706, 707, 708, 709, 710, 711, 735, 747, 761, 762, 763, 766, 769, 772, 773, 775, 807, 819, 822, 825, 826, 833, 835, 847, 848, 850, 855, 859, 860, 861, 862, 900, 902, 914, 915, 917, 922, 926, 927, 928, 933, 935, 947, 948, 950, 958, 959, 963, 964, 965, 970, 972, 984, 985, 987, 995, 996, 1000, 1001, 1002, 1018, 1019, 1020, 1022, 1054, 1062, 1063, 1069, 1092, 1114, 1160, 1175, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1236, 1237, 1261, 1262, 1268, 1305, 1308, 1312, 1316, 1332, 1333, 1335, 1340, 1342, 1344, 1351, 1354, 1355, 1356, 1357, 1358], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 77, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 106, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 628, 629, 630, 633, 634, 637, 638, 640, 641, 642, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 671, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 700, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 726, 728, 735, 742, 747, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 794, 798, 800, 807, 814, 819, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 967, 968, 969, 970, 971, 972, 973, 974, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1005, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1054, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1165, 1172, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1192, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1221, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1299, 1300, 1302, 1303, 1336, 1342, 1350, 1351, 1353, 1358, 1360, 1361], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 45, 46, 47, 55, 60, 61, 62, 64, 69, 89, 90, 91, 93, 98, 121, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 150, 155, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 389, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 519, 527, 529, 551, 568, 570, 571, 573, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 629, 630, 633, 634, 638, 640, 641, 649, 654, 655, 656, 658, 663, 683, 684, 685, 687, 692, 715, 717, 718, 726, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 781, 782, 783, 784, 785, 786, 798, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 847, 848, 849, 850, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 936, 937, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 968, 969, 970, 971, 972, 973, 974, 984, 985, 986, 987, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1056, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1141, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1158, 1159, 1163, 1164, 1172, 1175, 1176, 1177, 1179, 1184, 1204, 1205, 1206, 1208, 1213, 1234, 1256, 1258, 1280, 1297, 1299, 1300, 1302], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 37, 39, 40, 41, 42, 45, 46, 47, 60, 61, 62, 64, 69, 77, 89, 90, 91, 93, 98, 106, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 150, 155, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 385, 391, 406, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 525, 526, 527, 551, 568, 573, 576, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 625, 627, 629, 632, 633, 634, 635, 638, 640, 641, 654, 655, 656, 658, 663, 671, 683, 684, 685, 687, 692, 700, 726, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 781, 782, 783, 785, 786, 798, 822, 823, 824, 825, 826, 827, 828, 829, 848, 850, 855, 858, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 959, 962, 963, 964, 965, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1141, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1158, 1159, 1163, 1164, 1175, 1176, 1177, 1179, 1184, 1192, 1204, 1205, 1206, 1208, 1213, 1221, 1234, 1248, 1254, 1255, 1256, 1280, 1297, 1302, 1305, 1312, 1350, 1355, 1357, 1358], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 46, 47, 60, 61, 62, 65, 66, 67, 69, 70, 71, 72, 73, 82, 83, 85, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 111, 112, 114, 130, 131, 132, 135, 140, 141, 142, 155, 164, 176, 179, 187, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 249, 251, 253, 254, 271, 273, 278, 281, 282, 283, 284, 287, 304, 306, 314, 315, 318, 319, 320, 321, 324, 341, 343, 351, 352, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 423, 428, 430, 432, 434, 437, 439, 441, 442, 443, 445, 446, 450, 456, 458, 459, 462, 465, 470, 471, 472, 473, 475, 476, 477, 479, 480, 481, 491, 492, 494, 495, 496, 499, 504, 505, 506, 507, 508, 510, 513, 514, 515, 516, 517, 518, 519, 525, 526, 539, 551, 570, 571, 574, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 633, 639, 640, 641, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 676, 677, 679, 683, 684, 685, 688, 689, 690, 692, 693, 694, 695, 696, 705, 706, 708, 726, 735, 747, 755, 756, 759, 760, 761, 762, 763, 767, 768, 770, 771, 772, 773, 774, 779, 781, 782, 783, 784, 785, 786, 791, 798, 807, 819, 822, 831, 848, 850, 855, 858, 859, 860, 861, 862, 865, 875, 877, 878, 879, 881, 883, 884, 893, 895, 897, 898, 915, 917, 922, 925, 926, 927, 928, 931, 948, 950, 958, 959, 962, 963, 964, 965, 968, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1053, 1054, 1061, 1062, 1063, 1065, 1070, 1072, 1074, 1076, 1079, 1081, 1083, 1084, 1085, 1087, 1088, 1092, 1098, 1100, 1101, 1104, 1107, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1121, 1122, 1123, 1133, 1134, 1136, 1137, 1138, 1141, 1146, 1147, 1148, 1149, 1150, 1152, 1155, 1156, 1157, 1158, 1160, 1161, 1163, 1164, 1175, 1176, 1177, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1197, 1198, 1200, 1204, 1205, 1206, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1226, 1227, 1229, 1234, 1239, 1241, 1254, 1255, 1268, 1280, 1299, 1300, 1303, 1305, 1307, 1308, 1310, 1311, 1314, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1324, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1335, 1337, 1339, 1340, 1342, 1344, 1347, 1348, 1349, 1350, 1351, 1358, 1359, 1361], "from": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 45, 46, 49, 54, 57, 60, 62, 65, 69, 70, 71, 72, 89, 91, 94, 98, 99, 100, 101, 118, 119, 120, 122, 125, 126, 130, 131, 132, 135, 136, 137, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 204, 205, 206, 211, 214, 215, 216, 217, 218, 221, 229, 231, 233, 234, 235, 237, 239, 240, 246, 247, 249, 251, 253, 254, 271, 272, 273, 278, 281, 282, 283, 284, 287, 304, 305, 306, 312, 314, 315, 318, 319, 320, 321, 324, 341, 342, 343, 349, 351, 352, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 411, 419, 421, 426, 427, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 485, 486, 487, 488, 489, 492, 494, 495, 496, 501, 502, 504, 505, 506, 508, 509, 510, 513, 515, 517, 518, 519, 524, 532, 533, 539, 540, 543, 544, 545, 550, 551, 553, 554, 555, 556, 557, 559, 560, 566, 568, 575, 576, 578, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 632, 633, 634, 635, 638, 640, 643, 648, 651, 654, 656, 659, 663, 664, 665, 666, 683, 685, 688, 692, 693, 694, 695, 712, 713, 714, 716, 719, 720, 722, 726, 728, 735, 742, 747, 750, 751, 752, 756, 761, 762, 763, 766, 767, 771, 772, 773, 774, 775, 776, 777, 779, 781, 782, 783, 791, 793, 794, 798, 800, 807, 814, 819, 822, 823, 824, 825, 826, 827, 828, 829, 831, 848, 849, 850, 855, 858, 859, 860, 861, 862, 865, 873, 875, 877, 878, 879, 881, 883, 884, 890, 891, 893, 895, 897, 898, 915, 916, 917, 922, 925, 926, 927, 928, 931, 948, 949, 950, 956, 958, 959, 962, 963, 964, 965, 968, 985, 986, 987, 993, 995, 996, 999, 1000, 1001, 1002, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1039, 1041, 1044, 1051, 1053, 1056, 1058, 1059, 1060, 1064, 1065, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1134, 1136, 1137, 1138, 1143, 1144, 1146, 1147, 1148, 1150, 1151, 1152, 1155, 1157, 1159, 1160, 1161, 1163, 1166, 1171, 1175, 1177, 1180, 1184, 1185, 1186, 1187, 1204, 1206, 1209, 1213, 1214, 1215, 1216, 1241, 1253, 1261, 1262, 1268, 1269, 1272, 1273, 1274, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1295, 1297, 1305, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1326, 1329, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1363], "base": [0, 60, 65, 66, 67, 69, 70, 71, 72, 73, 89, 94, 95, 96, 98, 99, 100, 101, 102, 131, 132, 151, 179, 180, 181, 182, 183, 184, 185, 186, 217, 283, 320, 357, 380, 432, 452, 459, 477, 478, 481, 494, 506, 541, 551, 578, 654, 659, 660, 661, 663, 664, 665, 666, 667, 683, 688, 689, 690, 692, 693, 694, 695, 696, 722, 762, 763, 775, 794, 822, 823, 824, 825, 826, 827, 828, 829, 861, 927, 964, 1001, 1026, 1060, 1064, 1065, 1074, 1094, 1101, 1119, 1120, 1123, 1136, 1148, 1175, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1204, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1270, 1280, 1306, 1309, 1310, 1312, 1347, 1351, 1354, 1357, 1358, 1359, 1361], "path": [0, 23, 32, 132, 578, 612, 622, 751, 752, 763, 1173, 1234, 1312, 1313, 1347, 1357, 1360, 1361], "where": [0, 5, 6, 7, 28, 32, 71, 72, 100, 101, 118, 122, 125, 129, 130, 131, 132, 133, 135, 137, 141, 142, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 182, 183, 204, 211, 214, 215, 216, 217, 218, 232, 248, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 366, 367, 428, 442, 450, 451, 459, 472, 473, 475, 478, 493, 494, 509, 510, 512, 518, 527, 532, 533, 542, 543, 551, 573, 578, 584, 585, 586, 618, 622, 665, 666, 694, 695, 712, 716, 719, 724, 726, 727, 728, 729, 730, 731, 733, 734, 735, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 751, 752, 757, 759, 760, 761, 762, 763, 765, 766, 767, 768, 771, 775, 777, 785, 786, 796, 798, 799, 800, 801, 802, 803, 805, 806, 807, 810, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 825, 826, 848, 855, 858, 859, 860, 861, 862, 876, 892, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002, 1005, 1012, 1013, 1070, 1084, 1092, 1093, 1101, 1114, 1115, 1117, 1120, 1135, 1136, 1151, 1152, 1154, 1161, 1186, 1187, 1215, 1216, 1256, 1261, 1262, 1271, 1272, 1280, 1302, 1312, 1313, 1316, 1321, 1324, 1340, 1342, 1347, 1350, 1354, 1363], "store": [0, 3, 9, 14, 16, 22, 26, 30, 31, 33, 46, 60, 89, 130, 131, 132, 383, 407, 428, 442, 450, 459, 472, 473, 475, 512, 578, 582, 588, 596, 600, 606, 615, 620, 621, 623, 640, 654, 683, 761, 762, 763, 781, 782, 1030, 1065, 1070, 1084, 1092, 1101, 1114, 1115, 1117, 1154, 1163, 1175, 1204, 1307, 1312, 1340, 1347, 1350, 1353, 1355, 1356, 1357, 1358, 1363], "extract": [0, 10, 204, 271, 304, 341, 376, 473, 477, 495, 532, 533, 545, 578, 592, 848, 915, 948, 985, 1022, 1115, 1119, 1137, 1261, 1262, 1274, 1310, 1316, 1337, 1339, 1342, 1345, 1347, 1359], "If": [0, 6, 7, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 29, 30, 31, 45, 46, 47, 60, 62, 63, 64, 71, 89, 91, 92, 93, 100, 121, 123, 124, 126, 127, 130, 134, 164, 176, 179, 182, 183, 189, 191, 204, 205, 210, 211, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 271, 272, 277, 278, 282, 283, 284, 289, 291, 304, 305, 310, 313, 314, 315, 319, 320, 321, 326, 328, 341, 342, 347, 350, 351, 352, 356, 357, 358, 363, 365, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 410, 417, 421, 425, 432, 437, 441, 442, 443, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 462, 463, 464, 467, 468, 469, 472, 473, 475, 477, 478, 481, 482, 483, 484, 485, 487, 488, 492, 493, 494, 495, 496, 503, 506, 507, 508, 509, 510, 511, 514, 515, 519, 527, 532, 533, 540, 541, 559, 560, 561, 570, 571, 578, 579, 585, 586, 587, 590, 591, 596, 598, 600, 601, 602, 603, 604, 607, 608, 613, 614, 615, 616, 617, 619, 620, 621, 638, 640, 641, 654, 656, 657, 658, 665, 683, 685, 686, 687, 694, 715, 717, 718, 720, 735, 747, 753, 755, 759, 760, 761, 764, 768, 769, 773, 775, 781, 782, 783, 807, 819, 822, 825, 826, 833, 835, 848, 849, 854, 855, 859, 860, 861, 862, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 890, 891, 892, 893, 894, 895, 896, 897, 900, 902, 915, 916, 921, 922, 926, 927, 928, 933, 935, 948, 949, 954, 957, 958, 959, 963, 964, 965, 970, 972, 985, 986, 991, 994, 995, 996, 1000, 1001, 1002, 1005, 1009, 1011, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1037, 1041, 1048, 1051, 1065, 1067, 1074, 1079, 1083, 1084, 1085, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1104, 1105, 1106, 1109, 1110, 1111, 1114, 1115, 1117, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1134, 1135, 1136, 1137, 1138, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1156, 1157, 1163, 1164, 1175, 1177, 1178, 1179, 1186, 1204, 1206, 1207, 1208, 1215, 1256, 1261, 1262, 1269, 1270, 1288, 1289, 1290, 1299, 1300, 1342, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1360, 1361, 1363], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 45, 46, 47, 48, 53, 60, 62, 63, 70, 71, 72, 73, 77, 89, 91, 92, 99, 100, 101, 102, 106, 118, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 149, 151, 153, 155, 156, 157, 158, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 176, 177, 179, 182, 183, 189, 191, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 271, 272, 273, 276, 277, 278, 281, 282, 283, 284, 287, 289, 291, 304, 305, 306, 309, 310, 314, 315, 318, 319, 320, 321, 324, 326, 328, 341, 342, 343, 346, 347, 351, 352, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 389, 396, 410, 417, 418, 421, 425, 427, 428, 433, 435, 437, 441, 442, 443, 446, 450, 451, 452, 456, 459, 463, 465, 472, 473, 475, 477, 478, 480, 482, 483, 484, 487, 488, 493, 494, 495, 496, 499, 503, 504, 506, 507, 508, 510, 511, 512, 514, 515, 517, 519, 524, 525, 526, 532, 533, 539, 540, 541, 543, 550, 551, 553, 556, 559, 560, 561, 563, 569, 570, 571, 573, 574, 578, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 633, 638, 640, 641, 642, 647, 654, 656, 657, 664, 665, 666, 667, 671, 683, 685, 686, 693, 694, 695, 696, 700, 712, 715, 716, 717, 718, 719, 722, 724, 726, 727, 728, 729, 731, 733, 734, 735, 738, 740, 741, 742, 743, 745, 747, 748, 750, 751, 752, 753, 755, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771, 773, 775, 776, 777, 780, 781, 782, 783, 784, 785, 791, 794, 796, 798, 799, 800, 801, 803, 805, 806, 807, 810, 812, 813, 814, 815, 817, 819, 820, 822, 825, 826, 833, 835, 848, 849, 850, 853, 854, 855, 858, 859, 860, 861, 862, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 890, 891, 892, 893, 894, 895, 896, 897, 900, 902, 915, 916, 917, 920, 921, 922, 925, 926, 927, 928, 931, 933, 935, 948, 949, 950, 953, 954, 958, 959, 962, 963, 964, 965, 968, 970, 972, 985, 986, 987, 990, 991, 995, 996, 999, 1000, 1001, 1002, 1005, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1037, 1038, 1041, 1043, 1048, 1049, 1051, 1054, 1061, 1062, 1063, 1064, 1065, 1067, 1069, 1070, 1075, 1077, 1079, 1083, 1084, 1085, 1088, 1092, 1093, 1094, 1098, 1101, 1105, 1107, 1114, 1115, 1117, 1119, 1120, 1122, 1124, 1125, 1126, 1129, 1130, 1135, 1136, 1137, 1138, 1141, 1145, 1146, 1148, 1149, 1150, 1152, 1153, 1154, 1156, 1157, 1160, 1163, 1164, 1165, 1170, 1175, 1177, 1178, 1185, 1186, 1187, 1188, 1192, 1204, 1206, 1207, 1214, 1215, 1216, 1217, 1221, 1241, 1253, 1254, 1255, 1261, 1262, 1268, 1269, 1270, 1272, 1279, 1280, 1282, 1285, 1288, 1289, 1290, 1292, 1298, 1299, 1300, 1302, 1303, 1304, 1307, 1312, 1313, 1316, 1321, 1322, 1323, 1324, 1327, 1332, 1333, 1340, 1342, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363], "current": [0, 43, 48, 130, 155, 157, 164, 171, 176, 189, 191, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 229, 231, 232, 233, 234, 235, 237, 239, 246, 247, 248, 249, 251, 253, 256, 258, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 291, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 326, 328, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 371, 424, 442, 450, 459, 472, 473, 475, 496, 506, 539, 578, 631, 636, 642, 726, 728, 735, 742, 747, 759, 760, 761, 798, 800, 807, 814, 819, 833, 835, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 873, 875, 876, 877, 878, 879, 881, 883, 890, 891, 892, 893, 895, 897, 900, 902, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 933, 935, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 963, 964, 965, 967, 970, 972, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1004, 1017, 1055, 1057, 1084, 1092, 1101, 1114, 1115, 1117, 1138, 1148, 1165, 1268, 1305, 1361], "directori": [0, 45, 575, 578, 638, 1173, 1304, 1312, 1360, 1361], "time": [0, 1, 3, 9, 18, 22, 27, 30, 33, 46, 54, 55, 60, 89, 130, 144, 145, 189, 191, 204, 206, 211, 215, 216, 217, 218, 256, 258, 271, 273, 278, 282, 283, 284, 289, 291, 304, 306, 314, 315, 319, 320, 321, 326, 328, 341, 343, 351, 352, 356, 357, 358, 361, 364, 365, 376, 378, 379, 432, 441, 442, 449, 450, 458, 459, 472, 473, 475, 477, 495, 501, 510, 512, 534, 537, 578, 580, 582, 588, 598, 602, 606, 617, 620, 623, 640, 648, 649, 654, 683, 759, 760, 761, 788, 789, 833, 835, 848, 850, 855, 859, 860, 861, 862, 900, 902, 915, 917, 922, 926, 927, 928, 933, 935, 948, 950, 958, 959, 963, 964, 965, 970, 972, 985, 987, 995, 996, 1000, 1001, 1002, 1007, 1010, 1011, 1022, 1024, 1025, 1054, 1057, 1065, 1074, 1083, 1084, 1091, 1092, 1100, 1101, 1114, 1115, 1117, 1119, 1137, 1143, 1152, 1154, 1163, 1171, 1172, 1175, 1204, 1263, 1266, 1305, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1349, 1355, 1356, 1358, 1361, 1363], "format": [0, 3, 9, 22, 26, 33, 54, 55, 60, 89, 189, 191, 204, 206, 211, 214, 215, 216, 217, 218, 256, 258, 271, 273, 278, 281, 282, 283, 284, 289, 291, 304, 306, 314, 315, 318, 319, 320, 321, 326, 328, 341, 343, 351, 352, 355, 356, 357, 358, 363, 373, 375, 377, 378, 379, 381, 576, 577, 578, 582, 588, 606, 615, 623, 648, 649, 654, 683, 833, 835, 848, 850, 855, 858, 859, 860, 861, 862, 900, 902, 915, 917, 922, 925, 926, 927, 928, 933, 935, 948, 950, 958, 959, 962, 963, 964, 965, 970, 972, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1006, 1009, 1019, 1021, 1023, 1024, 1025, 1027, 1171, 1172, 1175, 1204, 1305, 1333, 1347, 1349, 1355], "prefix": [0, 63, 92, 578, 657, 686, 1173, 1178, 1207], "add": [0, 3, 9, 22, 47, 61, 62, 90, 91, 137, 204, 206, 211, 214, 215, 216, 217, 218, 231, 232, 233, 234, 235, 237, 239, 246, 248, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 439, 442, 450, 459, 472, 475, 578, 582, 588, 606, 641, 655, 656, 684, 685, 764, 777, 848, 850, 855, 858, 859, 860, 861, 862, 875, 876, 877, 878, 879, 881, 883, 890, 892, 893, 895, 897, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 959, 962, 963, 964, 965, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1081, 1084, 1092, 1101, 1114, 1117, 1164, 1176, 1177, 1205, 1206, 1305, 1316, 1321, 1322, 1323, 1332, 1333, 1335, 1340, 1342, 1343, 1351, 1357, 1360, 1361, 1363], "contain": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 34, 40, 45, 46, 47, 48, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 127, 130, 131, 132, 134, 135, 136, 137, 179, 180, 181, 182, 183, 184, 185, 186, 193, 204, 211, 214, 215, 216, 217, 218, 220, 230, 260, 271, 278, 281, 282, 283, 284, 286, 293, 304, 314, 315, 318, 319, 320, 321, 323, 330, 341, 351, 352, 355, 356, 357, 358, 360, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 455, 456, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 503, 506, 507, 508, 509, 510, 511, 512, 513, 515, 518, 524, 525, 526, 532, 533, 539, 541, 545, 568, 570, 571, 574, 578, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 625, 633, 638, 640, 641, 642, 654, 655, 659, 660, 661, 663, 664, 665, 666, 667, 683, 684, 688, 689, 690, 692, 693, 694, 695, 696, 750, 751, 752, 753, 759, 760, 761, 762, 763, 769, 771, 772, 773, 774, 775, 776, 777, 781, 782, 783, 822, 823, 824, 825, 826, 827, 828, 829, 837, 848, 855, 858, 859, 860, 861, 862, 864, 874, 904, 915, 922, 925, 926, 927, 928, 930, 937, 948, 958, 959, 962, 963, 964, 965, 967, 974, 985, 995, 996, 999, 1000, 1001, 1002, 1004, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1030, 1043, 1061, 1062, 1063, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1159, 1161, 1163, 1164, 1165, 1175, 1176, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1204, 1205, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1253, 1254, 1255, 1261, 1262, 1268, 1270, 1274, 1297, 1299, 1300, 1303, 1313, 1325, 1326, 1347, 1349, 1350, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1363], "sufix": [0, 578], "datetim": [0, 1, 27, 144, 145, 189, 191, 211, 215, 217, 256, 258, 278, 282, 283, 289, 291, 314, 319, 320, 326, 328, 351, 356, 357, 361, 364, 365, 382, 442, 450, 459, 472, 473, 475, 534, 535, 536, 537, 538, 578, 580, 617, 788, 789, 833, 835, 855, 859, 861, 900, 902, 922, 926, 927, 933, 935, 958, 963, 964, 970, 972, 995, 1000, 1001, 1007, 1010, 1011, 1028, 1084, 1092, 1101, 1114, 1115, 1117, 1263, 1264, 1265, 1266, 1267], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 46, 47, 54, 55, 61, 62, 63, 65, 66, 67, 69, 77, 86, 89, 90, 91, 92, 94, 95, 96, 98, 106, 115, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 144, 145, 151, 179, 180, 181, 182, 183, 184, 185, 186, 187, 205, 218, 221, 229, 233, 234, 240, 247, 254, 272, 284, 287, 305, 315, 321, 324, 342, 358, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 389, 408, 409, 415, 416, 419, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 503, 504, 505, 510, 511, 512, 513, 517, 518, 519, 525, 526, 527, 539, 540, 542, 544, 545, 549, 551, 552, 553, 556, 561, 562, 566, 567, 570, 571, 573, 574, 575, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 625, 629, 640, 641, 648, 649, 655, 656, 657, 659, 660, 661, 663, 671, 680, 683, 684, 685, 686, 688, 689, 690, 692, 700, 709, 722, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 781, 782, 783, 785, 786, 788, 789, 794, 822, 823, 824, 825, 826, 827, 828, 829, 831, 849, 862, 865, 873, 877, 878, 884, 891, 898, 916, 928, 931, 949, 959, 965, 968, 986, 1002, 1007, 1008, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1035, 1036, 1039, 1042, 1046, 1047, 1052, 1054, 1061, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1152, 1153, 1154, 1155, 1159, 1160, 1161, 1162, 1163, 1164, 1171, 1172, 1176, 1177, 1178, 1180, 1181, 1182, 1184, 1192, 1201, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1213, 1221, 1230, 1235, 1236, 1237, 1238, 1241, 1254, 1255, 1256, 1268, 1269, 1271, 1273, 1274, 1278, 1280, 1281, 1282, 1285, 1290, 1291, 1295, 1296, 1299, 1300, 1302, 1303, 1312, 1316, 1323, 1324, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1340, 1342, 1343, 1347, 1348, 1349, 1353, 1354, 1355, 1356, 1357, 1361], "The": [0, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 45, 46, 60, 89, 118, 122, 125, 126, 129, 130, 131, 132, 133, 135, 139, 140, 141, 142, 150, 180, 181, 185, 209, 234, 276, 309, 346, 352, 362, 363, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 396, 423, 424, 427, 428, 430, 433, 437, 442, 443, 446, 447, 449, 450, 459, 461, 462, 465, 467, 472, 473, 475, 477, 478, 479, 480, 481, 493, 494, 496, 499, 501, 503, 504, 505, 506, 507, 508, 510, 511, 514, 515, 516, 517, 520, 521, 524, 527, 528, 529, 530, 531, 539, 540, 541, 542, 546, 547, 548, 550, 552, 554, 555, 557, 558, 559, 560, 563, 566, 568, 570, 571, 573, 577, 578, 582, 583, 587, 588, 595, 596, 598, 600, 601, 602, 603, 604, 606, 611, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 638, 640, 654, 683, 712, 716, 719, 720, 750, 751, 752, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772, 773, 774, 780, 781, 782, 783, 784, 785, 786, 823, 824, 828, 853, 878, 920, 953, 990, 996, 1008, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1030, 1054, 1055, 1056, 1057, 1061, 1064, 1065, 1069, 1070, 1072, 1075, 1079, 1084, 1085, 1088, 1089, 1091, 1092, 1101, 1103, 1104, 1107, 1109, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1135, 1136, 1138, 1141, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1156, 1157, 1158, 1160, 1163, 1175, 1204, 1234, 1248, 1249, 1250, 1253, 1256, 1257, 1258, 1259, 1260, 1268, 1269, 1270, 1271, 1275, 1276, 1277, 1279, 1281, 1283, 1284, 1286, 1287, 1288, 1289, 1292, 1295, 1297, 1299, 1300, 1302, 1310, 1313, 1324, 1335, 1342, 1347, 1348, 1351, 1354, 1355, 1356, 1357, 1360], "start": [0, 1, 18, 30, 46, 60, 75, 76, 87, 88, 89, 104, 105, 116, 117, 230, 376, 382, 451, 473, 495, 510, 535, 578, 580, 590, 598, 602, 620, 640, 654, 669, 670, 681, 682, 683, 698, 699, 710, 711, 874, 1022, 1028, 1093, 1115, 1137, 1152, 1163, 1175, 1190, 1191, 1202, 1203, 1204, 1219, 1220, 1231, 1232, 1264, 1312, 1321, 1322, 1332, 1333, 1347, 1349, 1355, 1357, 1361, 1362], "end": [0, 1, 18, 27, 30, 45, 68, 76, 84, 88, 97, 105, 113, 117, 131, 132, 135, 137, 230, 510, 578, 580, 598, 602, 617, 620, 638, 662, 670, 678, 682, 691, 699, 707, 711, 750, 751, 752, 762, 763, 766, 767, 771, 777, 781, 782, 783, 874, 1152, 1183, 1191, 1199, 1203, 1212, 1220, 1228, 1232, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1356], "period": [0, 134, 539, 578, 769, 1268, 1351], "we": [0, 493, 578, 772, 1135, 1305, 1312, 1313, 1316, 1321, 1340, 1342, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1362, 1363], "want": [0, 8, 578, 587, 1313, 1347, 1354, 1358, 1361, 1363], "dict": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 34, 35, 38, 41, 46, 47, 49, 54, 60, 61, 89, 90, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 141, 142, 187, 254, 287, 315, 324, 362, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 381, 382, 383, 423, 427, 433, 434, 436, 437, 444, 447, 451, 452, 453, 454, 460, 461, 474, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 525, 526, 527, 553, 568, 578, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 609, 610, 613, 614, 615, 616, 617, 618, 619, 625, 627, 630, 634, 640, 641, 643, 648, 654, 655, 683, 684, 715, 717, 718, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 772, 773, 774, 776, 777, 781, 782, 783, 785, 786, 831, 898, 931, 959, 968, 1008, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1030, 1064, 1065, 1069, 1075, 1076, 1078, 1079, 1086, 1089, 1093, 1094, 1095, 1096, 1102, 1103, 1116, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1158, 1159, 1163, 1164, 1166, 1171, 1175, 1176, 1204, 1205, 1254, 1255, 1256, 1282, 1297, 1349], "option": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 46, 47, 48, 55, 56, 60, 61, 62, 63, 66, 67, 69, 71, 72, 77, 89, 92, 95, 96, 98, 100, 101, 118, 119, 120, 122, 123, 125, 130, 131, 132, 134, 135, 136, 137, 149, 151, 155, 157, 164, 171, 176, 204, 211, 215, 216, 217, 218, 220, 231, 233, 235, 237, 239, 246, 249, 251, 253, 271, 278, 282, 283, 284, 286, 304, 312, 313, 314, 315, 319, 320, 321, 323, 341, 349, 350, 351, 352, 356, 357, 358, 360, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 423, 426, 427, 436, 444, 446, 447, 461, 465, 466, 467, 468, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 501, 502, 503, 506, 507, 508, 509, 515, 517, 518, 532, 533, 540, 556, 568, 573, 574, 578, 581, 582, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 625, 633, 640, 641, 642, 649, 650, 654, 655, 656, 657, 660, 661, 663, 665, 666, 671, 683, 686, 689, 690, 692, 694, 695, 712, 713, 714, 716, 717, 719, 722, 726, 728, 735, 742, 747, 750, 751, 752, 755, 756, 761, 762, 763, 764, 769, 771, 776, 777, 794, 798, 800, 807, 814, 819, 848, 855, 859, 860, 861, 862, 864, 875, 877, 879, 881, 883, 890, 893, 895, 897, 915, 922, 926, 927, 928, 930, 948, 956, 957, 958, 959, 963, 964, 965, 967, 985, 993, 994, 995, 996, 1000, 1001, 1002, 1004, 1005, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1065, 1068, 1069, 1078, 1086, 1088, 1089, 1103, 1107, 1108, 1109, 1110, 1119, 1120, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1136, 1137, 1138, 1143, 1144, 1145, 1148, 1149, 1150, 1151, 1157, 1159, 1160, 1161, 1163, 1164, 1165, 1172, 1175, 1176, 1177, 1178, 1181, 1182, 1184, 1186, 1187, 1192, 1204, 1207, 1210, 1211, 1213, 1215, 1216, 1261, 1262, 1269, 1285, 1297, 1302, 1303, 1305, 1342, 1358], "dictionari": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 37, 38, 41, 44, 46, 47, 60, 61, 62, 64, 89, 90, 91, 93, 121, 123, 124, 127, 128, 130, 131, 132, 134, 136, 137, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 386, 412, 414, 426, 427, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 445, 446, 451, 455, 456, 457, 458, 463, 464, 465, 466, 467, 468, 469, 470, 471, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 503, 509, 510, 511, 512, 515, 516, 525, 526, 527, 568, 578, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 596, 597, 598, 600, 601, 602, 603, 604, 606, 609, 610, 613, 614, 615, 616, 617, 618, 619, 623, 625, 627, 629, 630, 634, 637, 640, 641, 654, 655, 656, 658, 683, 684, 685, 687, 715, 717, 718, 750, 751, 752, 753, 754, 759, 760, 761, 762, 763, 764, 769, 772, 773, 774, 776, 777, 781, 782, 783, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1032, 1034, 1061, 1064, 1065, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1077, 1079, 1080, 1081, 1082, 1083, 1087, 1088, 1093, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1118, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1145, 1151, 1152, 1153, 1154, 1157, 1158, 1159, 1163, 1164, 1175, 1176, 1177, 1179, 1204, 1205, 1206, 1208, 1233, 1254, 1255, 1256, 1297, 1313, 1350, 1358], "map": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 41, 46, 60, 89, 122, 125, 209, 233, 234, 235, 246, 276, 287, 309, 311, 312, 313, 315, 316, 324, 346, 348, 349, 350, 352, 353, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 421, 428, 509, 578, 584, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 627, 634, 640, 654, 683, 716, 719, 853, 877, 878, 879, 890, 920, 931, 953, 955, 956, 957, 959, 960, 968, 990, 992, 993, 994, 996, 997, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1041, 1051, 1070, 1151, 1163, 1175, 1204, 1316, 1319, 1320, 1322, 1323, 1338, 1340, 1342, 1347, 1348, 1355, 1356, 1357, 1359, 1361], "field": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 46, 47, 54, 60, 61, 62, 63, 64, 69, 72, 85, 89, 90, 91, 92, 93, 98, 101, 114, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 167, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 203, 204, 205, 206, 211, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 270, 271, 272, 273, 278, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 299, 303, 304, 305, 306, 314, 315, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 336, 340, 341, 342, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 423, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 524, 525, 526, 527, 529, 545, 550, 551, 553, 568, 570, 571, 572, 573, 578, 582, 584, 585, 586, 587, 588, 592, 594, 596, 597, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 629, 632, 633, 634, 635, 640, 641, 648, 654, 655, 656, 657, 658, 663, 666, 679, 683, 684, 685, 686, 687, 692, 695, 708, 721, 722, 724, 726, 727, 728, 729, 730, 731, 733, 734, 738, 740, 741, 742, 743, 745, 746, 748, 749, 750, 751, 752, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 775, 776, 777, 781, 782, 783, 785, 786, 794, 796, 798, 799, 800, 801, 802, 803, 805, 806, 810, 812, 813, 814, 815, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 843, 847, 848, 849, 850, 855, 858, 859, 860, 861, 862, 869, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 910, 914, 915, 916, 917, 922, 925, 926, 927, 928, 931, 932, 933, 934, 935, 936, 937, 943, 947, 948, 949, 950, 958, 959, 962, 963, 964, 965, 968, 969, 970, 971, 972, 973, 974, 980, 984, 985, 986, 987, 995, 996, 999, 1000, 1001, 1002, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1056, 1061, 1062, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1159, 1160, 1161, 1163, 1164, 1171, 1175, 1176, 1177, 1178, 1179, 1184, 1187, 1200, 1204, 1205, 1206, 1207, 1208, 1213, 1216, 1229, 1235, 1236, 1237, 1238, 1239, 1241, 1244, 1245, 1246, 1247, 1253, 1254, 1255, 1256, 1258, 1274, 1279, 1280, 1282, 1297, 1299, 1300, 1301, 1302, 1305, 1307, 1310, 1312, 1316, 1317, 1318, 1321, 1322, 1324, 1335, 1339, 1340, 1341, 1342, 1343, 1347, 1348, 1349, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1361], "radar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 40, 46, 54, 89, 91, 92, 94, 95, 96, 98, 101, 106, 118, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 151, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 203, 204, 209, 211, 215, 216, 217, 218, 231, 235, 237, 239, 249, 251, 253, 254, 270, 271, 276, 278, 282, 283, 284, 287, 303, 304, 309, 312, 314, 315, 319, 320, 321, 324, 340, 341, 346, 349, 351, 352, 356, 357, 358, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 525, 526, 527, 529, 532, 533, 536, 538, 539, 541, 542, 543, 544, 545, 549, 551, 553, 556, 561, 566, 568, 569, 570, 571, 572, 573, 574, 578, 581, 582, 584, 585, 586, 587, 588, 589, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 625, 627, 629, 633, 639, 640, 648, 683, 685, 686, 688, 689, 690, 692, 695, 700, 712, 713, 714, 722, 735, 747, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 780, 781, 782, 783, 785, 786, 787, 790, 791, 794, 807, 819, 822, 823, 824, 825, 826, 827, 828, 829, 831, 847, 848, 853, 855, 859, 860, 861, 862, 875, 879, 881, 883, 893, 895, 897, 898, 914, 915, 920, 922, 926, 927, 928, 931, 947, 948, 953, 956, 958, 959, 963, 964, 965, 968, 984, 985, 990, 993, 995, 996, 1000, 1001, 1002, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1053, 1054, 1056, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1163, 1171, 1204, 1206, 1207, 1209, 1210, 1211, 1213, 1216, 1221, 1236, 1237, 1238, 1241, 1244, 1245, 1246, 1247, 1254, 1255, 1256, 1258, 1261, 1262, 1265, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1278, 1280, 1282, 1285, 1290, 1295, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1315, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1351, 1353, 1354, 1355, 1356, 1357, 1359, 1362], "unlik": [0, 5, 10, 15, 27, 28, 366, 367, 578, 584, 592, 597, 617, 618, 1012, 1013], "other": [0, 5, 10, 15, 26, 27, 28, 46, 54, 56, 60, 89, 130, 131, 132, 134, 179, 183, 204, 206, 211, 214, 215, 216, 217, 218, 233, 234, 235, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 369, 372, 374, 376, 380, 388, 478, 494, 496, 510, 512, 513, 517, 578, 584, 592, 597, 615, 617, 618, 640, 648, 650, 654, 683, 761, 762, 763, 764, 769, 775, 822, 826, 848, 850, 855, 858, 859, 860, 861, 862, 877, 878, 879, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 959, 962, 963, 964, 965, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1009, 1012, 1013, 1015, 1018, 1020, 1022, 1026, 1054, 1065, 1120, 1136, 1138, 1152, 1154, 1155, 1160, 1163, 1171, 1175, 1204, 1236, 1237, 1238, 1305, 1342, 1347, 1349, 1356, 1360, 1361, 1363], "function": [0, 5, 10, 13, 15, 27, 28, 32, 45, 71, 100, 134, 148, 150, 179, 180, 181, 182, 183, 184, 185, 186, 203, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 270, 271, 278, 282, 283, 284, 287, 303, 304, 314, 319, 320, 321, 324, 340, 341, 351, 356, 357, 358, 363, 366, 367, 370, 371, 377, 380, 423, 428, 437, 443, 459, 462, 477, 478, 494, 506, 508, 514, 516, 517, 545, 551, 556, 557, 558, 567, 568, 574, 576, 578, 584, 592, 595, 597, 617, 618, 622, 626, 638, 639, 665, 694, 769, 772, 773, 774, 775, 793, 822, 823, 824, 825, 826, 827, 828, 829, 830, 847, 848, 855, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 914, 915, 922, 926, 927, 928, 931, 947, 948, 958, 963, 964, 965, 968, 984, 985, 995, 1000, 1001, 1002, 1005, 1006, 1009, 1012, 1013, 1016, 1017, 1023, 1026, 1053, 1054, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1070, 1079, 1085, 1101, 1104, 1119, 1120, 1136, 1148, 1150, 1156, 1158, 1160, 1162, 1186, 1215, 1248, 1274, 1280, 1285, 1286, 1287, 1296, 1297, 1303, 1304, 1305, 1321, 1340, 1342, 1347, 1351, 1353, 1355, 1356, 1357, 1358, 1360, 1361], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 45, 46, 48, 60, 62, 63, 66, 67, 69, 71, 72, 73, 89, 91, 92, 95, 96, 98, 100, 101, 102, 121, 123, 124, 130, 131, 132, 134, 135, 136, 137, 151, 155, 164, 179, 180, 181, 182, 183, 184, 185, 186, 203, 235, 270, 287, 303, 315, 324, 340, 352, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 396, 410, 421, 425, 427, 428, 437, 442, 450, 452, 459, 472, 473, 475, 477, 478, 492, 493, 494, 495, 496, 506, 507, 508, 512, 515, 517, 518, 524, 539, 540, 550, 551, 556, 559, 560, 561, 574, 575, 578, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 633, 638, 640, 642, 654, 656, 657, 660, 661, 663, 665, 666, 667, 683, 685, 686, 689, 690, 692, 694, 695, 696, 715, 717, 718, 722, 726, 735, 750, 751, 752, 756, 761, 762, 763, 766, 767, 768, 769, 771, 773, 775, 776, 777, 781, 782, 783, 794, 798, 807, 822, 823, 824, 825, 826, 827, 828, 829, 847, 879, 914, 931, 947, 959, 968, 984, 996, 1005, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1030, 1041, 1043, 1051, 1054, 1056, 1062, 1063, 1064, 1065, 1067, 1069, 1070, 1079, 1084, 1092, 1094, 1101, 1114, 1115, 1117, 1119, 1120, 1134, 1135, 1136, 1137, 1138, 1148, 1149, 1150, 1154, 1157, 1160, 1161, 1163, 1165, 1175, 1177, 1178, 1181, 1182, 1184, 1186, 1187, 1188, 1204, 1206, 1207, 1210, 1211, 1213, 1215, 1216, 1217, 1241, 1253, 1268, 1269, 1279, 1280, 1285, 1288, 1289, 1290, 1303, 1304, 1307, 1308, 1312, 1313, 1316, 1317, 1321, 1322, 1323, 1324, 1327, 1333, 1340, 1342, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363], "have": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 48, 60, 63, 71, 89, 92, 100, 130, 136, 155, 157, 164, 171, 176, 204, 215, 240, 271, 282, 304, 315, 319, 341, 356, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 425, 433, 473, 478, 494, 496, 501, 510, 511, 527, 539, 541, 561, 578, 584, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 642, 654, 657, 665, 683, 686, 694, 726, 728, 735, 742, 747, 750, 751, 752, 761, 776, 798, 800, 807, 814, 819, 848, 859, 884, 915, 926, 948, 959, 963, 985, 1000, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1067, 1075, 1115, 1120, 1136, 1138, 1143, 1152, 1153, 1165, 1175, 1178, 1186, 1204, 1207, 1215, 1239, 1256, 1268, 1270, 1290, 1312, 1313, 1340, 1342, 1347, 1353, 1355, 1356, 1357, 1360, 1361, 1362, 1363], "valu": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 43, 45, 46, 60, 63, 89, 92, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 153, 155, 156, 157, 159, 162, 164, 167, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 271, 272, 273, 275, 278, 279, 280, 281, 282, 283, 284, 304, 305, 306, 308, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 341, 342, 343, 345, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 388, 390, 392, 394, 398, 400, 401, 406, 407, 417, 418, 423, 425, 427, 428, 433, 437, 442, 447, 450, 454, 459, 460, 472, 473, 475, 477, 478, 479, 480, 481, 484, 487, 488, 492, 494, 496, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 515, 517, 518, 524, 529, 539, 540, 547, 551, 554, 555, 557, 559, 561, 577, 578, 581, 582, 583, 584, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 607, 608, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 631, 633, 636, 638, 640, 654, 657, 683, 686, 715, 716, 717, 718, 719, 722, 724, 726, 727, 728, 730, 733, 735, 738, 740, 741, 742, 745, 747, 749, 750, 751, 752, 753, 754, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 775, 776, 777, 779, 781, 782, 783, 785, 786, 791, 794, 796, 798, 799, 800, 802, 805, 807, 810, 812, 813, 814, 817, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 848, 849, 850, 852, 855, 856, 857, 858, 859, 860, 861, 862, 873, 875, 877, 878, 879, 881, 883, 890, 891, 893, 895, 897, 915, 916, 917, 919, 922, 923, 924, 925, 926, 927, 928, 948, 949, 950, 952, 955, 956, 957, 958, 959, 961, 962, 963, 964, 965, 985, 986, 987, 989, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1005, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1037, 1038, 1043, 1048, 1049, 1064, 1065, 1067, 1069, 1070, 1075, 1079, 1084, 1089, 1092, 1096, 1101, 1102, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1126, 1129, 1130, 1134, 1136, 1138, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1157, 1160, 1161, 1163, 1175, 1178, 1204, 1207, 1236, 1237, 1238, 1239, 1253, 1258, 1268, 1269, 1276, 1280, 1283, 1284, 1286, 1288, 1290, 1305, 1313, 1316, 1321, 1324, 1340, 1341, 1342, 1350, 1351, 1354, 1355, 1356, 1361], "ar": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 45, 46, 60, 71, 73, 89, 100, 102, 122, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 164, 176, 179, 181, 182, 183, 184, 185, 186, 204, 210, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 271, 277, 278, 282, 283, 284, 304, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 412, 427, 428, 437, 443, 446, 451, 462, 463, 465, 467, 473, 477, 478, 483, 484, 485, 487, 488, 492, 494, 496, 503, 506, 508, 515, 517, 518, 532, 533, 540, 543, 554, 555, 557, 559, 560, 569, 574, 576, 578, 584, 587, 591, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 638, 640, 654, 665, 667, 683, 694, 696, 716, 719, 720, 735, 747, 750, 751, 752, 759, 760, 761, 762, 763, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 781, 782, 783, 793, 807, 819, 822, 824, 825, 826, 827, 828, 829, 848, 854, 855, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 890, 893, 895, 897, 915, 921, 922, 926, 927, 928, 948, 954, 955, 956, 957, 958, 959, 960, 963, 964, 965, 985, 991, 992, 993, 994, 995, 996, 997, 1000, 1001, 1002, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1030, 1032, 1060, 1061, 1064, 1065, 1069, 1070, 1079, 1085, 1088, 1093, 1104, 1105, 1107, 1109, 1115, 1119, 1120, 1125, 1126, 1127, 1129, 1130, 1134, 1136, 1138, 1145, 1148, 1150, 1157, 1160, 1161, 1163, 1175, 1186, 1188, 1204, 1215, 1217, 1236, 1237, 1238, 1261, 1262, 1269, 1272, 1283, 1284, 1286, 1288, 1289, 1298, 1303, 1308, 1310, 1312, 1313, 1316, 1321, 1323, 1324, 1332, 1335, 1340, 1342, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363], "still": [0, 5, 10, 15, 27, 28, 130, 287, 324, 366, 367, 382, 556, 578, 584, 592, 597, 617, 618, 761, 931, 968, 1012, 1013, 1028, 1065, 1285, 1312, 1361], "includ": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 33, 35, 37, 60, 65, 71, 72, 89, 94, 100, 101, 130, 131, 132, 134, 135, 151, 155, 157, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 502, 517, 527, 563, 578, 581, 582, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 617, 618, 619, 622, 623, 627, 629, 654, 659, 665, 666, 683, 688, 694, 695, 722, 726, 728, 732, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 761, 762, 763, 764, 766, 767, 769, 771, 775, 781, 782, 783, 793, 794, 798, 800, 804, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 848, 855, 859, 860, 861, 862, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1062, 1063, 1064, 1065, 1144, 1160, 1175, 1180, 1186, 1187, 1204, 1209, 1215, 1216, 1256, 1292, 1312, 1316, 1335, 1347, 1354, 1355, 1360, 1361], "exclud": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 63, 92, 136, 137, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 171, 173, 176, 179, 181, 182, 183, 184, 185, 186, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 477, 481, 506, 507, 508, 510, 513, 517, 518, 578, 584, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 627, 657, 686, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 742, 744, 747, 750, 751, 752, 775, 776, 777, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 814, 816, 819, 822, 824, 825, 826, 827, 828, 829, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1027, 1028, 1119, 1123, 1148, 1149, 1150, 1152, 1155, 1160, 1161, 1178, 1207, 1308, 1317, 1354], "them": [0, 5, 10, 15, 18, 19, 20, 27, 28, 71, 100, 130, 131, 132, 221, 240, 315, 366, 367, 376, 481, 492, 511, 541, 576, 578, 584, 590, 592, 597, 602, 603, 604, 617, 618, 665, 694, 761, 762, 763, 764, 865, 884, 959, 1012, 1013, 1022, 1065, 1123, 1134, 1153, 1186, 1215, 1270, 1305, 1321, 1347, 1355, 1356, 1363], "us": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 40, 45, 46, 48, 60, 62, 69, 71, 72, 89, 91, 98, 100, 101, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 151, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 291, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 328, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 354, 355, 356, 357, 358, 360, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 410, 423, 426, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 494, 496, 499, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 524, 526, 527, 529, 532, 533, 539, 540, 541, 556, 557, 561, 563, 568, 570, 571, 572, 573, 574, 575, 578, 581, 582, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 625, 627, 633, 638, 640, 642, 654, 656, 663, 665, 666, 683, 685, 692, 694, 695, 715, 716, 717, 718, 719, 722, 735, 747, 750, 751, 752, 753, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 794, 807, 819, 822, 823, 824, 825, 826, 827, 828, 829, 831, 833, 835, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 902, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 935, 947, 948, 949, 950, 951, 952, 953, 954, 957, 958, 959, 961, 962, 963, 964, 965, 967, 968, 970, 972, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1004, 1005, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1054, 1061, 1062, 1063, 1064, 1065, 1068, 1070, 1071, 1072, 1073, 1074, 1076, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1136, 1138, 1141, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1163, 1165, 1175, 1177, 1184, 1186, 1187, 1204, 1206, 1213, 1215, 1216, 1241, 1248, 1253, 1255, 1256, 1258, 1261, 1262, 1268, 1269, 1270, 1285, 1286, 1290, 1292, 1297, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1315, 1319, 1320, 1321, 1322, 1324, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1338, 1340, 1342, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363], "which": [0, 5, 10, 13, 15, 27, 28, 30, 31, 34, 46, 48, 56, 57, 60, 65, 69, 82, 83, 85, 86, 89, 94, 98, 111, 112, 114, 115, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 147, 148, 150, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 204, 205, 209, 210, 211, 214, 215, 216, 217, 218, 221, 229, 231, 233, 234, 237, 239, 240, 246, 247, 249, 251, 253, 271, 272, 276, 277, 278, 281, 282, 283, 284, 304, 305, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 362, 363, 365, 366, 367, 372, 373, 376, 377, 379, 380, 381, 382, 383, 407, 426, 427, 430, 432, 433, 437, 446, 448, 449, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 473, 479, 480, 482, 492, 493, 495, 496, 503, 504, 505, 506, 507, 508, 510, 512, 515, 517, 518, 524, 527, 528, 529, 530, 531, 532, 533, 540, 541, 544, 545, 550, 551, 554, 555, 568, 573, 578, 584, 592, 595, 597, 617, 618, 620, 621, 625, 640, 642, 650, 651, 654, 659, 663, 676, 677, 679, 680, 683, 688, 692, 705, 706, 708, 709, 722, 726, 728, 735, 742, 747, 753, 754, 757, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772, 775, 776, 777, 781, 782, 783, 785, 786, 794, 798, 800, 807, 814, 819, 822, 823, 824, 825, 826, 827, 828, 829, 848, 849, 853, 854, 855, 858, 859, 860, 861, 862, 865, 873, 875, 877, 878, 881, 883, 884, 890, 891, 893, 895, 897, 915, 916, 920, 921, 922, 925, 926, 927, 928, 948, 949, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 985, 986, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1008, 1009, 1011, 1012, 1013, 1018, 1019, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1068, 1069, 1072, 1074, 1075, 1079, 1088, 1090, 1091, 1099, 1100, 1101, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1115, 1121, 1122, 1124, 1134, 1135, 1137, 1138, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1154, 1157, 1159, 1160, 1161, 1163, 1165, 1175, 1180, 1184, 1197, 1198, 1200, 1201, 1204, 1209, 1213, 1226, 1227, 1229, 1230, 1253, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1269, 1270, 1273, 1274, 1279, 1280, 1283, 1284, 1297, 1302, 1305, 1308, 1312, 1313, 1316, 1321, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1340, 1347, 1351, 1353, 1355, 1356, 1357, 1358, 1360, 1361], "renam": [0, 5, 10, 15, 27, 28, 45, 147, 148, 150, 366, 367, 377, 578, 584, 592, 597, 617, 618, 638, 1012, 1013, 1023], "kei": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 33, 46, 47, 60, 61, 62, 89, 90, 91, 121, 123, 124, 130, 131, 132, 315, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 386, 392, 397, 399, 407, 412, 414, 417, 418, 419, 421, 446, 465, 467, 468, 495, 496, 578, 584, 585, 586, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 623, 640, 641, 654, 655, 656, 683, 684, 685, 715, 717, 718, 761, 762, 763, 959, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1027, 1028, 1029, 1030, 1032, 1034, 1037, 1038, 1039, 1041, 1043, 1048, 1049, 1051, 1064, 1065, 1088, 1107, 1109, 1110, 1137, 1138, 1163, 1164, 1175, 1176, 1177, 1204, 1205, 1206, 1241, 1349, 1350, 1354], "uniform": [0, 5, 10, 13, 15, 27, 28, 73, 102, 131, 132, 366, 367, 375, 427, 477, 516, 552, 578, 584, 592, 595, 597, 617, 618, 667, 696, 762, 763, 1012, 1013, 1021, 1069, 1119, 1158, 1188, 1217, 1281, 1321, 1324, 1347, 1349], "bool": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 47, 48, 55, 61, 62, 63, 66, 67, 69, 71, 72, 73, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 126, 130, 131, 132, 136, 137, 151, 155, 157, 164, 171, 176, 189, 191, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 246, 249, 251, 253, 256, 258, 271, 273, 278, 281, 282, 283, 284, 289, 291, 304, 306, 314, 315, 318, 319, 320, 321, 326, 328, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 427, 432, 437, 441, 448, 449, 451, 452, 454, 456, 457, 458, 463, 464, 467, 468, 469, 477, 478, 481, 482, 484, 487, 488, 494, 496, 503, 504, 505, 506, 507, 508, 510, 511, 512, 514, 515, 539, 541, 556, 574, 578, 584, 585, 586, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 627, 641, 642, 649, 655, 656, 657, 660, 661, 663, 665, 666, 667, 684, 685, 686, 689, 690, 692, 694, 695, 696, 713, 717, 720, 722, 726, 728, 735, 742, 747, 750, 759, 760, 761, 762, 763, 776, 777, 781, 782, 783, 794, 798, 800, 807, 814, 819, 833, 835, 848, 850, 855, 858, 859, 860, 861, 862, 865, 875, 877, 878, 879, 881, 883, 884, 890, 893, 895, 897, 900, 902, 915, 917, 922, 925, 926, 927, 928, 933, 935, 948, 950, 958, 959, 962, 963, 964, 965, 970, 972, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1005, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1061, 1062, 1065, 1069, 1074, 1079, 1083, 1090, 1091, 1093, 1094, 1096, 1098, 1099, 1100, 1105, 1106, 1109, 1110, 1111, 1119, 1120, 1123, 1124, 1126, 1129, 1130, 1136, 1138, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1156, 1157, 1164, 1165, 1172, 1176, 1177, 1178, 1181, 1182, 1184, 1186, 1187, 1188, 1205, 1206, 1207, 1210, 1211, 1213, 1215, 1216, 1217, 1268, 1270, 1285, 1303, 1305], "true": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 46, 47, 48, 55, 60, 61, 62, 63, 66, 67, 69, 71, 72, 73, 89, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 130, 131, 132, 136, 137, 144, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 189, 191, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 246, 249, 251, 253, 256, 258, 271, 273, 278, 281, 282, 283, 284, 289, 291, 304, 306, 314, 315, 318, 319, 320, 321, 326, 328, 341, 343, 351, 352, 355, 356, 357, 358, 362, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 410, 414, 427, 432, 437, 441, 448, 449, 451, 452, 456, 457, 458, 463, 464, 467, 468, 469, 477, 478, 481, 482, 484, 487, 488, 493, 494, 496, 503, 506, 507, 508, 510, 511, 512, 514, 515, 539, 541, 556, 574, 578, 579, 584, 585, 586, 587, 590, 591, 592, 596, 597, 598, 600, 601, 602, 603, 604, 607, 608, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 627, 640, 641, 642, 649, 654, 655, 656, 657, 660, 661, 663, 665, 666, 667, 683, 684, 685, 686, 689, 690, 692, 694, 695, 696, 713, 717, 722, 724, 726, 727, 728, 729, 730, 731, 733, 734, 735, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 759, 760, 761, 762, 763, 770, 776, 777, 781, 782, 783, 788, 794, 796, 798, 799, 800, 801, 802, 803, 805, 806, 807, 810, 812, 813, 814, 815, 817, 818, 819, 820, 821, 833, 835, 848, 850, 855, 858, 859, 860, 861, 862, 865, 875, 877, 878, 879, 881, 883, 884, 890, 893, 895, 897, 900, 902, 915, 917, 922, 925, 926, 927, 928, 933, 935, 948, 950, 958, 959, 962, 963, 964, 965, 970, 972, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1005, 1008, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1034, 1061, 1062, 1064, 1065, 1069, 1074, 1079, 1083, 1090, 1091, 1093, 1094, 1098, 1099, 1100, 1105, 1106, 1109, 1110, 1111, 1119, 1120, 1123, 1124, 1126, 1129, 1130, 1135, 1136, 1138, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1156, 1157, 1163, 1164, 1165, 1172, 1173, 1175, 1176, 1177, 1178, 1181, 1182, 1184, 1186, 1187, 1188, 1204, 1205, 1206, 1207, 1210, 1211, 1213, 1215, 1216, 1217, 1246, 1247, 1268, 1270, 1285, 1303, 1323, 1330, 1331, 1332, 1333, 1342, 1344, 1350, 1351, 1355, 1356, 1357, 1358, 1361], "forc": [0, 5, 10, 15, 18, 19, 20, 27, 28, 366, 367, 377, 427, 511, 561, 578, 584, 592, 597, 602, 603, 604, 617, 618, 1012, 1013, 1023, 1069, 1153, 1290], "case": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 40, 121, 123, 124, 130, 132, 164, 176, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 421, 496, 578, 584, 585, 586, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 620, 621, 633, 715, 717, 718, 735, 747, 761, 763, 807, 819, 1006, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1041, 1051, 1138, 1305, 1312, 1313, 1316, 1333, 1355, 1361], "ignor": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 130, 131, 132, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 427, 578, 584, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 761, 762, 763, 848, 850, 855, 858, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 959, 962, 963, 964, 965, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1062, 1063, 1069, 1307, 1316, 1357], "list": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 35, 63, 92, 180, 187, 206, 210, 213, 234, 240, 254, 273, 277, 280, 287, 306, 310, 317, 324, 343, 347, 354, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 437, 442, 443, 448, 449, 450, 459, 462, 472, 473, 475, 480, 495, 502, 527, 532, 533, 544, 578, 584, 585, 586, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 620, 621, 627, 657, 686, 759, 760, 768, 823, 831, 850, 854, 857, 878, 884, 898, 917, 921, 924, 931, 950, 954, 961, 968, 987, 991, 998, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1056, 1062, 1063, 1065, 1079, 1084, 1085, 1090, 1091, 1092, 1101, 1104, 1114, 1115, 1117, 1122, 1137, 1144, 1178, 1207, 1256, 1261, 1262, 1273, 1312, 1361, 1362], "appli": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 60, 63, 89, 92, 131, 132, 134, 136, 137, 138, 146, 179, 182, 183, 204, 205, 211, 214, 215, 216, 217, 218, 229, 247, 271, 272, 278, 281, 282, 283, 284, 304, 305, 314, 315, 318, 319, 320, 321, 341, 342, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 428, 432, 446, 448, 451, 464, 465, 467, 468, 478, 484, 494, 510, 512, 540, 541, 578, 584, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 654, 657, 683, 686, 755, 758, 759, 760, 762, 763, 769, 775, 776, 777, 778, 790, 822, 825, 826, 848, 849, 855, 858, 859, 860, 861, 862, 873, 891, 915, 916, 922, 925, 926, 927, 928, 948, 949, 958, 959, 962, 963, 964, 965, 985, 986, 995, 996, 999, 1000, 1001, 1002, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1027, 1054, 1061, 1065, 1070, 1074, 1088, 1090, 1093, 1106, 1107, 1109, 1110, 1120, 1126, 1136, 1152, 1154, 1175, 1178, 1204, 1207, 1269, 1270, 1312, 1321, 1332, 1342, 1351], "after": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 130, 131, 150, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 496, 506, 541, 578, 584, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 761, 762, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1030, 1138, 1148, 1270, 1313, 1342, 1356, 1357, 1360, 1361, 1363], "set": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 46, 60, 71, 72, 73, 89, 100, 101, 102, 121, 122, 123, 124, 125, 126, 130, 131, 132, 136, 137, 151, 155, 157, 164, 171, 176, 179, 181, 182, 183, 184, 185, 186, 204, 206, 211, 214, 215, 216, 217, 218, 219, 220, 233, 234, 235, 271, 273, 278, 281, 282, 283, 284, 285, 286, 304, 306, 314, 315, 318, 319, 320, 321, 322, 323, 341, 343, 351, 352, 355, 356, 357, 358, 359, 360, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 407, 415, 416, 419, 420, 451, 459, 477, 483, 484, 485, 487, 488, 496, 506, 507, 508, 524, 527, 539, 561, 564, 565, 578, 584, 587, 592, 596, 597, 598, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 638, 640, 654, 665, 666, 667, 683, 694, 695, 696, 715, 716, 717, 718, 719, 720, 722, 726, 728, 735, 742, 747, 750, 751, 752, 761, 762, 763, 775, 776, 777, 781, 782, 794, 798, 800, 807, 814, 819, 822, 824, 825, 826, 827, 828, 829, 848, 850, 855, 858, 859, 860, 861, 862, 863, 864, 877, 878, 879, 915, 917, 922, 925, 926, 927, 928, 929, 930, 948, 950, 958, 959, 962, 963, 964, 965, 966, 967, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1035, 1036, 1039, 1040, 1046, 1047, 1050, 1065, 1093, 1101, 1119, 1125, 1126, 1127, 1129, 1130, 1138, 1148, 1149, 1150, 1163, 1175, 1186, 1187, 1188, 1204, 1215, 1216, 1217, 1236, 1237, 1238, 1246, 1247, 1253, 1256, 1268, 1290, 1293, 1294, 1305, 1313, 1316, 1322, 1329, 1332, 1333, 1336, 1337, 1342, 1347, 1351, 1356, 1360, 1361, 1362], "all": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 46, 48, 60, 63, 71, 72, 89, 92, 100, 101, 119, 130, 131, 132, 134, 136, 137, 151, 154, 161, 164, 168, 173, 176, 179, 183, 204, 210, 211, 214, 215, 216, 217, 218, 233, 234, 271, 277, 278, 281, 282, 283, 284, 304, 310, 314, 315, 318, 319, 320, 321, 341, 347, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 397, 411, 427, 442, 450, 459, 472, 475, 477, 478, 480, 494, 495, 496, 502, 506, 508, 527, 540, 576, 578, 584, 585, 586, 587, 592, 596, 597, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 640, 642, 654, 657, 665, 666, 683, 686, 694, 695, 713, 722, 725, 732, 735, 739, 744, 747, 761, 762, 763, 767, 768, 769, 775, 776, 777, 781, 782, 783, 794, 797, 804, 807, 811, 816, 819, 822, 826, 848, 854, 855, 858, 859, 860, 861, 862, 877, 878, 915, 921, 922, 925, 926, 927, 928, 948, 954, 958, 959, 962, 963, 964, 965, 985, 991, 995, 996, 999, 1000, 1001, 1002, 1005, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1031, 1043, 1044, 1061, 1062, 1063, 1064, 1065, 1069, 1084, 1092, 1101, 1114, 1117, 1119, 1120, 1122, 1136, 1137, 1138, 1144, 1148, 1150, 1163, 1165, 1175, 1178, 1186, 1187, 1204, 1207, 1215, 1216, 1256, 1269, 1304, 1310, 1321, 1340, 1341, 1342, 1344, 1347, 1355, 1356, 1357, 1358, 1359, 1361, 1363], "specifi": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 53, 60, 63, 71, 72, 89, 92, 100, 101, 121, 123, 124, 130, 131, 132, 155, 157, 171, 204, 206, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 246, 249, 250, 251, 252, 253, 271, 273, 278, 282, 283, 284, 304, 306, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 343, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 417, 481, 506, 507, 508, 519, 527, 568, 573, 578, 581, 582, 583, 584, 587, 588, 592, 593, 594, 596, 597, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 640, 647, 654, 657, 665, 666, 683, 686, 694, 695, 715, 717, 718, 726, 728, 742, 761, 762, 763, 793, 798, 800, 814, 848, 850, 855, 859, 860, 861, 862, 874, 875, 877, 878, 879, 880, 881, 882, 883, 890, 893, 894, 895, 896, 897, 915, 917, 922, 926, 927, 928, 948, 950, 955, 956, 957, 958, 959, 960, 963, 964, 965, 985, 987, 992, 993, 994, 995, 996, 997, 1000, 1001, 1002, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1029, 1030, 1037, 1048, 1054, 1064, 1065, 1123, 1148, 1149, 1150, 1163, 1170, 1175, 1178, 1186, 1187, 1204, 1207, 1215, 1216, 1256, 1297, 1302, 1305, 1308, 1312, 1353, 1354, 1356, 1360], "Be": [0, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 578, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002], "about": [0, 60, 89, 496, 578, 654, 683, 1138, 1175, 1204], "process": [0, 30, 31, 131, 136, 137, 234, 437, 496, 578, 620, 621, 762, 776, 777, 878, 1079, 1138, 1305, 1312, 1347, 1348, 1357, 1361], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 152, 165, 166, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 225, 226, 227, 228, 241, 242, 243, 244, 255, 256, 257, 258, 259, 260, 288, 289, 290, 291, 292, 293, 325, 326, 327, 328, 329, 330, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 388, 389, 390, 391, 394, 398, 399, 400, 401, 405, 409, 410, 412, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 568, 569, 570, 571, 573, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 625, 629, 630, 631, 632, 633, 634, 635, 636, 637, 642, 643, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 676, 677, 678, 679, 680, 681, 682, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 736, 737, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 795, 808, 809, 822, 823, 824, 825, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 869, 870, 871, 872, 885, 886, 887, 888, 899, 900, 901, 902, 903, 904, 932, 933, 934, 935, 936, 937, 969, 970, 971, 972, 973, 974, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1032, 1037, 1038, 1048, 1049, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1165, 1166, 1173, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1302, 1340, 1342, 1350, 1353, 1358, 1361], "note": [0, 5, 13, 27, 28, 62, 91, 118, 130, 134, 155, 157, 164, 171, 176, 233, 234, 315, 366, 367, 370, 371, 381, 477, 501, 506, 517, 539, 578, 584, 595, 617, 618, 656, 685, 712, 726, 728, 735, 742, 747, 761, 769, 798, 800, 807, 814, 819, 877, 878, 959, 1012, 1013, 1016, 1017, 1027, 1062, 1063, 1065, 1119, 1143, 1148, 1160, 1177, 1206, 1268, 1312, 1313, 1323, 1342, 1356, 1357, 1360, 1361], "ha": [0, 5, 8, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 32, 60, 89, 130, 147, 148, 150, 189, 225, 240, 241, 256, 289, 324, 326, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 414, 421, 482, 484, 487, 488, 540, 552, 573, 578, 584, 587, 595, 596, 598, 600, 601, 602, 603, 604, 607, 608, 613, 614, 615, 616, 617, 618, 619, 622, 654, 683, 756, 761, 833, 869, 884, 885, 900, 933, 968, 970, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1027, 1034, 1041, 1051, 1053, 1124, 1126, 1129, 1130, 1175, 1204, 1241, 1269, 1281, 1302, 1305, 1312, 1321, 1342, 1347, 1353, 1355, 1356, 1358, 1360, 1361, 1363], "been": [0, 5, 13, 26, 27, 28, 130, 147, 148, 150, 155, 157, 164, 171, 176, 240, 324, 366, 367, 369, 372, 373, 374, 376, 482, 527, 540, 578, 584, 595, 607, 608, 615, 617, 618, 726, 728, 735, 742, 747, 756, 761, 798, 800, 807, 814, 819, 884, 968, 1012, 1013, 1015, 1018, 1019, 1020, 1022, 1124, 1256, 1269, 1312, 1342, 1347, 1353, 1357, 1360, 1361], "test": [0, 5, 13, 26, 27, 28, 130, 366, 367, 372, 374, 383, 437, 470, 471, 576, 578, 584, 595, 615, 617, 618, 761, 1012, 1013, 1018, 1020, 1030, 1079, 1112, 1113, 1305, 1307, 1308, 1316, 1317, 1318, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1347, 1349], "stream": [0, 5, 13, 27, 28, 77, 106, 366, 367, 575, 578, 584, 595, 617, 618, 671, 700, 1012, 1013, 1192, 1221], "cfradial": [0, 5, 13, 27, 28, 32, 366, 367, 578, 584, 595, 617, 618, 622, 1012, 1013, 1305, 1310, 1320, 1321, 1335, 1337, 1338, 1349, 1357, 1359], "get": [1, 25, 40, 138, 146, 222, 223, 224, 245, 366, 383, 392, 420, 497, 500, 510, 516, 546, 547, 548, 549, 557, 558, 559, 560, 580, 614, 633, 772, 773, 774, 778, 790, 866, 867, 868, 889, 1012, 1030, 1040, 1050, 1054, 1139, 1142, 1152, 1158, 1275, 1276, 1277, 1278, 1286, 1287, 1288, 1289, 1305, 1313, 1332, 1333, 1342, 1349, 1351, 1354, 1356, 1358, 1360, 1361, 1362, 1363], "each": [1, 2, 3, 9, 11, 22, 32, 46, 54, 56, 60, 70, 89, 99, 128, 131, 132, 133, 135, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 376, 380, 382, 437, 473, 479, 481, 482, 492, 499, 500, 503, 510, 511, 512, 514, 516, 517, 546, 547, 548, 550, 557, 558, 559, 560, 580, 581, 582, 588, 593, 606, 622, 640, 648, 650, 654, 664, 683, 693, 750, 751, 752, 754, 762, 763, 764, 765, 766, 767, 771, 781, 782, 783, 791, 848, 855, 859, 860, 861, 875, 881, 883, 893, 895, 897, 915, 922, 926, 927, 948, 958, 959, 963, 964, 985, 995, 996, 1000, 1001, 1022, 1026, 1028, 1054, 1061, 1064, 1065, 1079, 1115, 1121, 1123, 1124, 1134, 1141, 1142, 1145, 1152, 1153, 1154, 1156, 1158, 1160, 1163, 1171, 1175, 1185, 1204, 1214, 1236, 1237, 1238, 1275, 1276, 1277, 1279, 1286, 1287, 1288, 1289, 1312, 1317, 1332, 1335, 1342, 1354, 1358, 1361], "assum": [1, 3, 9, 60, 89, 118, 119, 130, 133, 453, 454, 480, 493, 496, 501, 506, 508, 509, 539, 580, 582, 588, 654, 683, 712, 713, 761, 764, 765, 766, 767, 781, 782, 783, 1095, 1096, 1122, 1135, 1138, 1143, 1148, 1150, 1151, 1175, 1204, 1268, 1357], "clockwis": [1, 60, 89, 580, 654, 683, 1175, 1204], "rotat": [1, 60, 89, 187, 580, 654, 683, 831, 1175, 1204], "north": [1, 56, 60, 89, 233, 234, 246, 315, 352, 545, 580, 650, 654, 683, 877, 878, 890, 959, 996, 1175, 1204, 1274, 1325, 1357, 1358], "tstart": [1, 580], "tend": [1, 580, 1356], "arrai": [1, 8, 14, 16, 26, 46, 48, 54, 56, 57, 62, 66, 67, 69, 70, 71, 72, 73, 91, 95, 96, 98, 99, 100, 101, 102, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 134, 135, 140, 143, 146, 151, 155, 157, 164, 171, 176, 187, 193, 204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 254, 260, 271, 272, 273, 278, 282, 283, 284, 287, 293, 304, 305, 306, 311, 312, 314, 315, 319, 320, 321, 324, 330, 341, 342, 343, 348, 349, 351, 352, 356, 357, 358, 423, 424, 425, 437, 447, 478, 479, 482, 494, 500, 503, 507, 508, 509, 514, 516, 517, 518, 520, 521, 522, 523, 524, 528, 530, 531, 537, 538, 540, 541, 546, 547, 548, 549, 550, 554, 555, 557, 558, 559, 560, 563, 564, 565, 567, 577, 580, 587, 590, 591, 596, 600, 607, 608, 615, 640, 642, 648, 650, 651, 656, 660, 661, 663, 664, 665, 666, 667, 685, 689, 690, 692, 693, 694, 695, 696, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 726, 728, 735, 742, 747, 761, 762, 763, 769, 770, 771, 779, 784, 787, 790, 791, 794, 798, 800, 807, 814, 819, 831, 837, 848, 849, 850, 855, 859, 860, 861, 862, 873, 875, 877, 878, 879, 881, 883, 890, 891, 893, 895, 897, 898, 904, 915, 916, 917, 922, 926, 927, 928, 931, 937, 948, 949, 950, 955, 956, 958, 959, 963, 964, 965, 968, 974, 985, 986, 987, 992, 993, 995, 996, 1000, 1001, 1002, 1054, 1064, 1065, 1067, 1079, 1089, 1120, 1121, 1124, 1136, 1142, 1145, 1149, 1150, 1151, 1156, 1158, 1160, 1161, 1163, 1165, 1171, 1177, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1206, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1249, 1250, 1251, 1252, 1253, 1257, 1259, 1260, 1266, 1267, 1269, 1270, 1275, 1276, 1277, 1278, 1279, 1283, 1284, 1286, 1287, 1288, 1289, 1292, 1293, 1294, 1296, 1316, 1329, 1342, 1344, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1361], "sweep_start": [1, 580], "sweep_end": [1, 580], "indic": [1, 37, 46, 60, 84, 87, 88, 89, 113, 116, 117, 137, 151, 155, 164, 176, 231, 376, 481, 506, 507, 508, 513, 517, 518, 541, 542, 544, 580, 629, 640, 654, 678, 681, 682, 683, 707, 710, 711, 722, 726, 735, 747, 770, 777, 781, 782, 794, 798, 807, 819, 875, 1022, 1123, 1148, 1149, 1150, 1155, 1160, 1161, 1163, 1175, 1199, 1202, 1203, 1204, 1228, 1231, 1232, 1270, 1271, 1273, 1312, 1329, 1356, 1357], "chy0": [2, 4, 6, 7, 11, 581, 583, 585, 586, 593], "255": [2, 4, 6, 11, 380, 581, 583, 585, 593, 1026, 1355], "0": [2, 3, 4, 6, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 30, 31, 40, 48, 60, 65, 66, 67, 69, 70, 71, 72, 73, 89, 94, 95, 96, 98, 99, 100, 101, 102, 122, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 141, 142, 145, 151, 176, 179, 181, 182, 183, 184, 185, 186, 187, 203, 204, 211, 214, 215, 216, 217, 218, 219, 233, 234, 235, 249, 254, 270, 271, 278, 281, 282, 283, 284, 285, 287, 303, 304, 313, 314, 315, 318, 319, 320, 321, 322, 324, 340, 341, 350, 351, 352, 355, 356, 357, 358, 359, 376, 380, 423, 426, 428, 433, 437, 439, 441, 442, 446, 449, 450, 451, 453, 454, 458, 459, 460, 465, 472, 473, 474, 475, 477, 478, 481, 482, 484, 486, 487, 488, 490, 491, 492, 494, 496, 499, 502, 503, 504, 506, 507, 510, 511, 512, 513, 514, 515, 516, 518, 525, 526, 529, 539, 541, 546, 547, 548, 552, 553, 556, 561, 581, 582, 583, 585, 588, 593, 596, 600, 602, 603, 604, 606, 613, 614, 620, 621, 633, 642, 654, 659, 660, 661, 663, 664, 665, 666, 667, 683, 688, 689, 690, 692, 693, 694, 695, 696, 716, 719, 722, 747, 750, 751, 753, 754, 755, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 781, 782, 783, 785, 786, 789, 794, 819, 822, 824, 825, 826, 827, 828, 829, 831, 847, 848, 855, 858, 859, 860, 861, 862, 863, 877, 878, 879, 893, 898, 914, 915, 922, 925, 926, 927, 928, 929, 931, 947, 948, 957, 958, 959, 962, 963, 964, 965, 966, 968, 984, 985, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1022, 1026, 1054, 1062, 1063, 1064, 1065, 1068, 1070, 1075, 1079, 1081, 1083, 1084, 1088, 1091, 1092, 1093, 1095, 1096, 1100, 1101, 1102, 1107, 1114, 1115, 1116, 1117, 1119, 1120, 1123, 1124, 1126, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1138, 1141, 1144, 1145, 1146, 1148, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1165, 1175, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1204, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1239, 1254, 1255, 1258, 1268, 1270, 1275, 1276, 1277, 1281, 1282, 1285, 1290, 1304, 1307, 1308, 1309, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361], "chx0": [2, 4, 6, 7, 11, 581, 583, 585, 586, 593], "160": [2, 4, 6, 11, 581, 583, 585, 593, 1344, 1353, 1355, 1356], "xre": [2, 3, 9, 11, 22, 581, 582, 588, 593, 606], "1": [2, 3, 5, 6, 7, 9, 11, 14, 18, 19, 20, 22, 26, 30, 31, 46, 60, 70, 89, 99, 118, 122, 125, 127, 128, 130, 132, 136, 137, 138, 146, 164, 179, 218, 234, 254, 284, 321, 358, 366, 372, 373, 374, 379, 425, 432, 433, 437, 442, 444, 446, 450, 451, 454, 459, 460, 465, 472, 473, 477, 478, 480, 482, 484, 492, 494, 496, 497, 503, 506, 508, 510, 512, 514, 517, 518, 525, 526, 527, 529, 539, 540, 541, 547, 553, 559, 560, 567, 581, 582, 584, 585, 586, 588, 593, 596, 602, 603, 604, 606, 615, 620, 621, 640, 654, 664, 683, 693, 712, 716, 719, 735, 753, 754, 759, 760, 761, 763, 772, 773, 774, 776, 777, 778, 790, 807, 822, 862, 878, 898, 928, 965, 1002, 1012, 1018, 1019, 1020, 1025, 1064, 1065, 1067, 1074, 1075, 1079, 1084, 1086, 1088, 1092, 1093, 1096, 1101, 1102, 1107, 1114, 1115, 1119, 1120, 1122, 1124, 1126, 1134, 1136, 1138, 1139, 1145, 1148, 1150, 1152, 1154, 1156, 1160, 1161, 1163, 1175, 1185, 1204, 1214, 1239, 1254, 1255, 1256, 1258, 1268, 1269, 1270, 1276, 1282, 1288, 1289, 1296, 1307, 1308, 1312, 1316, 1317, 1318, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1340, 1342, 1343, 1344, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1361], "yre": [2, 3, 9, 11, 22, 581, 582, 588, 593, 606], "nx": [2, 3, 9, 11, 22, 46, 581, 582, 588, 593, 606, 640, 1163, 1356], "710": [2, 11, 581, 593], "ny": [2, 3, 9, 11, 22, 46, 581, 582, 588, 593, 606, 640, 1163, 1356], "640": [2, 11, 581, 593], "nz": [2, 3, 9, 11, 22, 46, 581, 582, 588, 593, 606, 640, 1163, 1356], "meteoswiss": [2, 11, 30, 31, 581, 593, 620, 621, 1305, 1343, 1344, 1348, 1356, 1357, 1360, 1361], "oper": [2, 3, 9, 11, 155, 157, 164, 171, 176, 376, 494, 508, 515, 581, 582, 588, 593, 726, 728, 735, 742, 747, 759, 760, 798, 800, 807, 814, 819, 1022, 1061, 1065, 1136, 1150, 1157, 1342, 1356, 1357, 1360], "binari": [2, 3, 9, 18, 19, 20, 30, 31, 33, 362, 494, 581, 582, 588, 602, 603, 604, 620, 621, 623, 1008, 1136, 1355], "retriev": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 36, 38, 46, 66, 67, 69, 70, 71, 72, 73, 95, 96, 98, 99, 100, 101, 102, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 525, 526, 541, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 628, 630, 640, 660, 661, 663, 664, 665, 666, 667, 689, 690, 692, 693, 694, 695, 696, 759, 760, 773, 779, 791, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1163, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1254, 1255, 1270, 1305, 1341, 1342, 1343, 1344, 1345, 1348, 1351, 1356, 1359, 1361], "metadata": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 38, 44, 45, 46, 47, 60, 61, 62, 89, 90, 91, 130, 131, 132, 133, 136, 137, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 426, 428, 434, 453, 454, 460, 474, 477, 481, 496, 504, 505, 506, 507, 508, 509, 510, 511, 512, 568, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 620, 621, 623, 625, 627, 628, 630, 637, 638, 640, 641, 654, 655, 656, 683, 684, 685, 750, 751, 752, 761, 762, 763, 765, 766, 767, 768, 776, 777, 781, 782, 783, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1027, 1068, 1070, 1076, 1095, 1096, 1102, 1116, 1119, 1123, 1138, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1159, 1163, 1164, 1175, 1176, 1177, 1204, 1205, 1206, 1233, 1235, 1241, 1297, 1313, 1330, 1331, 1335, 1358], "dure": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 35, 130, 131, 132, 164, 176, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 478, 506, 515, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 627, 735, 747, 756, 761, 762, 763, 807, 819, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1120, 1148, 1157, 1356, 1357, 1360, 1363], "ani": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 33, 45, 61, 62, 90, 91, 130, 131, 132, 136, 137, 151, 155, 157, 164, 171, 176, 179, 182, 183, 287, 324, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 428, 479, 503, 510, 511, 574, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 618, 619, 620, 621, 623, 638, 655, 656, 684, 685, 722, 726, 728, 735, 742, 747, 750, 751, 752, 761, 762, 763, 764, 775, 776, 777, 794, 798, 800, 807, 814, 819, 822, 825, 826, 931, 968, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1062, 1063, 1065, 1070, 1121, 1145, 1152, 1153, 1176, 1177, 1205, 1206, 1235, 1303, 1349, 1355], "success": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "unless": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 73, 102, 121, 123, 124, 132, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 667, 696, 715, 717, 718, 763, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1027, 1188, 1217], "explicitli": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1062, 1063], "A": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 35, 46, 60, 62, 89, 91, 122, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 150, 151, 179, 180, 181, 182, 183, 184, 185, 186, 187, 221, 234, 240, 254, 287, 313, 324, 350, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 383, 427, 428, 432, 433, 442, 450, 477, 478, 479, 480, 481, 483, 492, 494, 496, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 515, 517, 518, 551, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 625, 627, 640, 654, 656, 683, 685, 716, 719, 722, 750, 751, 752, 753, 754, 757, 759, 760, 761, 762, 763, 765, 766, 767, 768, 771, 775, 776, 777, 781, 782, 783, 785, 786, 794, 822, 823, 824, 825, 826, 827, 828, 829, 831, 865, 878, 884, 898, 931, 957, 968, 994, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1029, 1030, 1043, 1061, 1062, 1063, 1064, 1065, 1069, 1070, 1074, 1075, 1084, 1092, 1119, 1120, 1121, 1122, 1123, 1125, 1134, 1136, 1138, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1159, 1160, 1161, 1163, 1175, 1177, 1204, 1206, 1239, 1280, 1324, 1342, 1346, 1347, 1355, 1357, 1361], "default": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 34, 41, 45, 46, 60, 66, 67, 69, 71, 72, 77, 89, 95, 96, 98, 100, 101, 106, 121, 122, 123, 124, 125, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 211, 214, 215, 216, 217, 218, 220, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 278, 281, 282, 283, 284, 286, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 314, 315, 318, 319, 320, 321, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 351, 352, 355, 356, 357, 358, 360, 363, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 387, 389, 396, 413, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 452, 455, 456, 457, 458, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 480, 481, 484, 487, 488, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 517, 519, 527, 529, 539, 540, 541, 568, 581, 582, 583, 587, 588, 592, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 620, 621, 623, 625, 634, 638, 640, 654, 660, 661, 663, 665, 666, 671, 683, 689, 690, 692, 694, 695, 700, 715, 716, 717, 718, 719, 722, 726, 728, 735, 742, 747, 750, 751, 752, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 773, 775, 776, 777, 781, 782, 783, 785, 786, 794, 798, 800, 807, 814, 819, 822, 823, 824, 825, 826, 827, 828, 829, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 858, 859, 860, 861, 862, 864, 873, 875, 877, 878, 879, 881, 883, 890, 891, 893, 895, 897, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 922, 925, 926, 927, 928, 930, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 958, 959, 962, 963, 964, 965, 967, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 995, 996, 999, 1000, 1001, 1002, 1004, 1009, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1033, 1045, 1065, 1068, 1070, 1071, 1072, 1073, 1074, 1080, 1081, 1082, 1083, 1087, 1088, 1090, 1091, 1094, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1126, 1129, 1130, 1136, 1137, 1138, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1159, 1160, 1163, 1175, 1181, 1182, 1184, 1186, 1187, 1192, 1204, 1210, 1211, 1213, 1215, 1216, 1221, 1236, 1237, 1238, 1256, 1258, 1268, 1269, 1270, 1297, 1332, 1333, 1342, 1347, 1357, 1360, 1361, 1363], "introduct": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 616, 619, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1361], "addit": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 35, 130, 131, 132, 134, 203, 204, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 249, 250, 251, 252, 253, 270, 271, 278, 282, 283, 284, 303, 304, 311, 312, 313, 314, 315, 316, 319, 320, 321, 340, 341, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 451, 452, 478, 494, 551, 576, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 627, 761, 762, 763, 769, 847, 848, 855, 859, 860, 861, 862, 874, 875, 877, 878, 879, 880, 881, 882, 883, 893, 894, 895, 896, 897, 914, 915, 922, 926, 927, 928, 947, 948, 955, 956, 957, 958, 959, 960, 963, 964, 965, 984, 985, 992, 993, 994, 995, 996, 997, 1000, 1001, 1002, 1005, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1054, 1061, 1062, 1063, 1065, 1093, 1094, 1120, 1136, 1280, 1310, 1312, 1339, 1342, 1347], "specif": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 137, 164, 176, 324, 352, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 479, 483, 484, 485, 487, 488, 495, 496, 503, 504, 505, 506, 507, 508, 551, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 735, 747, 750, 751, 752, 767, 768, 777, 781, 782, 783, 807, 819, 968, 996, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1065, 1121, 1125, 1126, 1127, 1129, 1130, 1137, 1138, 1145, 1146, 1147, 1148, 1149, 1150, 1280, 1307, 1321, 1342, 1347, 1357, 1361, 1363], "py": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 34, 45, 46, 60, 89, 121, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 287, 304, 306, 314, 315, 319, 320, 321, 324, 341, 343, 351, 352, 356, 357, 358, 368, 369, 370, 371, 375, 377, 380, 426, 427, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 455, 456, 457, 458, 463, 464, 465, 466, 467, 468, 469, 470, 471, 476, 477, 478, 479, 480, 481, 494, 496, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 544, 545, 568, 575, 576, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 620, 621, 624, 625, 626, 638, 639, 640, 654, 683, 715, 717, 718, 722, 750, 751, 752, 757, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 775, 776, 777, 781, 782, 783, 785, 786, 792, 794, 822, 823, 824, 825, 826, 827, 828, 829, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 931, 948, 950, 958, 959, 963, 964, 965, 968, 985, 987, 995, 996, 1000, 1001, 1002, 1014, 1015, 1016, 1017, 1021, 1023, 1026, 1053, 1068, 1069, 1071, 1072, 1073, 1074, 1080, 1081, 1082, 1083, 1087, 1088, 1090, 1091, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1118, 1119, 1120, 1121, 1122, 1123, 1136, 1138, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1159, 1163, 1175, 1204, 1239, 1248, 1273, 1274, 1297, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1348, 1349, 1350, 1351, 1353, 1356, 1357, 1359, 1360, 1363], "art": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 34, 45, 46, 60, 89, 121, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 287, 304, 306, 314, 315, 319, 320, 321, 324, 341, 343, 351, 352, 356, 357, 358, 368, 369, 370, 371, 375, 377, 380, 426, 427, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 455, 456, 457, 458, 463, 464, 465, 466, 467, 468, 469, 470, 471, 476, 477, 478, 479, 480, 481, 494, 496, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 544, 545, 568, 576, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 620, 621, 624, 625, 626, 638, 639, 640, 654, 683, 715, 717, 718, 722, 750, 751, 752, 757, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 775, 776, 777, 781, 782, 783, 785, 786, 792, 794, 822, 823, 824, 825, 826, 827, 828, 829, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 931, 948, 950, 958, 959, 963, 964, 965, 968, 985, 987, 995, 996, 1000, 1001, 1002, 1014, 1015, 1016, 1017, 1021, 1023, 1026, 1053, 1068, 1069, 1071, 1072, 1073, 1074, 1080, 1081, 1082, 1083, 1087, 1088, 1090, 1091, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1118, 1119, 1120, 1121, 1122, 1123, 1136, 1138, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1159, 1163, 1175, 1204, 1239, 1248, 1273, 1274, 1297, 1304, 1305, 1307, 1308, 1310, 1311, 1312, 1313, 1320, 1321, 1323, 1340, 1348, 1349, 1350, 1351, 1353, 1356, 1357, 1360, 1363], "configur": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 39, 40, 42, 45, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 426, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 455, 456, 457, 458, 463, 464, 465, 466, 467, 468, 469, 470, 471, 476, 478, 479, 480, 481, 494, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 568, 581, 582, 583, 587, 588, 593, 594, 596, 598, 600, 601, 602, 603, 604, 606, 613, 614, 615, 616, 619, 625, 626, 632, 633, 635, 638, 750, 751, 752, 757, 761, 762, 763, 765, 766, 767, 768, 771, 775, 776, 777, 781, 782, 783, 785, 786, 822, 823, 824, 825, 826, 827, 828, 829, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1068, 1071, 1072, 1073, 1074, 1080, 1081, 1082, 1083, 1087, 1088, 1090, 1091, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1118, 1120, 1121, 1122, 1123, 1136, 1138, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1157, 1159, 1297, 1312, 1316, 1341, 1357, 1361], "float": [2, 3, 4, 6, 7, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 40, 73, 102, 118, 119, 120, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 179, 181, 182, 183, 184, 185, 186, 187, 188, 204, 206, 207, 211, 212, 214, 215, 216, 217, 218, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 248, 249, 250, 251, 252, 253, 254, 255, 271, 273, 274, 278, 279, 281, 282, 283, 284, 287, 288, 304, 306, 307, 313, 314, 315, 316, 318, 319, 320, 321, 324, 325, 341, 343, 344, 350, 351, 352, 353, 355, 356, 357, 358, 380, 423, 425, 426, 427, 433, 434, 437, 439, 442, 447, 449, 450, 451, 453, 454, 459, 460, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 561, 569, 570, 571, 577, 581, 582, 583, 585, 586, 588, 593, 596, 600, 602, 603, 604, 606, 613, 614, 615, 619, 620, 621, 633, 667, 696, 712, 713, 714, 716, 719, 726, 750, 751, 752, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 798, 822, 824, 825, 826, 827, 828, 829, 831, 832, 848, 850, 851, 855, 856, 858, 859, 860, 861, 862, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 890, 892, 893, 894, 895, 896, 897, 898, 899, 915, 917, 918, 922, 923, 925, 926, 927, 928, 931, 932, 948, 950, 951, 957, 958, 959, 960, 962, 963, 964, 965, 968, 969, 985, 987, 988, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1005, 1026, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1067, 1068, 1069, 1075, 1076, 1079, 1081, 1084, 1089, 1091, 1092, 1093, 1095, 1096, 1101, 1102, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1188, 1217, 1235, 1239, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1290, 1298, 1299, 1300, 1305, 1356], "swiss": [2, 4, 6, 7, 11, 126, 581, 583, 585, 586, 593, 720, 1348], "coordin": [2, 3, 4, 6, 7, 9, 11, 22, 46, 48, 54, 60, 71, 89, 100, 118, 119, 120, 121, 122, 123, 124, 125, 126, 145, 193, 204, 211, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 260, 271, 278, 282, 283, 284, 293, 304, 314, 315, 319, 320, 321, 330, 341, 351, 352, 356, 357, 358, 379, 473, 481, 496, 524, 550, 581, 582, 583, 585, 586, 588, 593, 606, 640, 642, 648, 654, 665, 683, 694, 712, 713, 714, 715, 716, 717, 718, 719, 720, 789, 837, 848, 855, 859, 860, 861, 862, 875, 881, 883, 893, 895, 897, 904, 915, 922, 926, 927, 928, 937, 948, 958, 959, 963, 964, 965, 974, 985, 995, 996, 1000, 1001, 1002, 1025, 1053, 1054, 1056, 1061, 1065, 1115, 1123, 1138, 1163, 1165, 1171, 1175, 1186, 1204, 1215, 1235, 1253, 1279, 1305, 1306, 1310, 1313, 1315, 1316, 1317, 1318, 1340, 1347, 1353, 1358], "posit": [2, 4, 6, 7, 11, 25, 26, 60, 89, 122, 125, 130, 139, 144, 145, 428, 452, 454, 460, 480, 481, 492, 506, 510, 511, 512, 517, 518, 525, 526, 581, 583, 585, 586, 593, 614, 615, 654, 683, 716, 719, 751, 752, 761, 772, 773, 774, 779, 780, 788, 789, 791, 1070, 1094, 1096, 1102, 1122, 1123, 1134, 1148, 1152, 1153, 1154, 1160, 1161, 1175, 1204, 1254, 1255, 1316, 1321, 1323, 1356, 1357, 1358], "south": [2, 4, 6, 7, 11, 581, 583, 585, 586, 593, 1325, 1356], "western": [2, 4, 6, 7, 11, 581, 583, 585, 586, 593], "point": [2, 3, 4, 6, 7, 9, 11, 22, 45, 46, 48, 62, 91, 123, 135, 136, 137, 139, 140, 193, 207, 212, 218, 230, 231, 232, 248, 260, 274, 279, 284, 287, 293, 307, 312, 313, 316, 321, 330, 344, 349, 350, 353, 358, 370, 371, 374, 376, 380, 424, 433, 442, 450, 453, 454, 459, 460, 472, 475, 478, 492, 494, 510, 515, 527, 529, 540, 541, 545, 547, 556, 559, 574, 581, 582, 583, 585, 586, 588, 593, 606, 638, 640, 642, 656, 685, 717, 750, 751, 752, 766, 767, 771, 772, 773, 774, 776, 777, 780, 781, 782, 783, 784, 837, 851, 856, 862, 874, 875, 876, 892, 904, 918, 923, 928, 931, 937, 951, 956, 957, 960, 965, 974, 988, 993, 994, 997, 1002, 1016, 1017, 1020, 1022, 1026, 1061, 1064, 1065, 1075, 1084, 1092, 1095, 1096, 1101, 1102, 1114, 1117, 1120, 1134, 1136, 1152, 1157, 1163, 1165, 1177, 1206, 1235, 1256, 1258, 1269, 1270, 1274, 1276, 1285, 1288, 1303, 1305, 1310, 1322, 1329, 1339, 1342, 1345, 1347, 1351, 1353, 1356, 1357, 1358, 1359], "grid": [2, 3, 4, 6, 7, 9, 11, 12, 18, 22, 30, 40, 60, 89, 206, 208, 216, 218, 221, 225, 230, 232, 233, 234, 235, 236, 238, 240, 241, 246, 248, 249, 250, 252, 273, 275, 284, 306, 308, 315, 321, 343, 345, 358, 369, 370, 379, 380, 381, 442, 450, 459, 472, 475, 477, 478, 494, 496, 501, 502, 515, 535, 550, 552, 570, 571, 581, 582, 583, 585, 586, 588, 593, 594, 598, 602, 606, 620, 633, 654, 683, 850, 852, 860, 862, 865, 869, 874, 876, 877, 878, 879, 880, 882, 884, 885, 890, 892, 893, 894, 896, 917, 919, 928, 950, 952, 959, 965, 987, 989, 1002, 1015, 1016, 1025, 1026, 1027, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1084, 1092, 1101, 1114, 1117, 1119, 1120, 1136, 1138, 1143, 1144, 1157, 1175, 1204, 1235, 1239, 1240, 1242, 1243, 1264, 1279, 1281, 1299, 1300, 1305, 1310, 1315, 1319, 1320, 1323, 1333, 1336, 1338, 1342, 1347, 1348, 1355, 1356, 1357, 1359], "resolut": [2, 3, 9, 11, 22, 60, 89, 127, 128, 204, 206, 207, 211, 212, 215, 216, 217, 218, 234, 246, 271, 273, 274, 278, 279, 282, 283, 284, 304, 306, 307, 314, 315, 316, 319, 320, 321, 341, 343, 344, 351, 352, 353, 356, 357, 358, 372, 424, 433, 442, 450, 459, 472, 475, 477, 478, 494, 496, 500, 506, 512, 515, 541, 581, 582, 588, 593, 606, 654, 683, 753, 754, 759, 760, 848, 850, 851, 855, 856, 859, 860, 861, 862, 878, 890, 915, 917, 918, 922, 923, 926, 927, 928, 948, 950, 951, 958, 959, 960, 963, 964, 965, 985, 987, 988, 995, 996, 997, 1000, 1001, 1002, 1018, 1065, 1075, 1084, 1092, 1101, 1114, 1117, 1119, 1120, 1136, 1138, 1142, 1148, 1154, 1157, 1175, 1204, 1239, 1270, 1313, 1326, 1329, 1351, 1353, 1354, 1355, 1356, 1357], "km": [2, 3, 9, 11, 22, 118, 122, 125, 187, 207, 212, 213, 220, 254, 274, 279, 280, 286, 287, 307, 316, 317, 323, 324, 344, 352, 353, 354, 360, 425, 434, 447, 474, 477, 478, 479, 494, 496, 499, 500, 503, 506, 541, 543, 569, 581, 582, 588, 593, 606, 712, 716, 719, 831, 851, 856, 857, 864, 898, 918, 923, 924, 930, 931, 951, 960, 961, 967, 968, 988, 996, 997, 998, 1004, 1063, 1067, 1076, 1089, 1116, 1119, 1120, 1121, 1136, 1138, 1141, 1142, 1145, 1148, 1239, 1270, 1272, 1298, 1325, 1330, 1331, 1333, 1340, 1353, 1356, 1357], "int": [2, 3, 9, 11, 14, 16, 22, 26, 40, 46, 48, 60, 66, 67, 69, 70, 71, 72, 73, 89, 95, 96, 98, 99, 100, 101, 102, 129, 130, 131, 133, 134, 136, 137, 141, 142, 164, 176, 180, 182, 189, 190, 191, 203, 207, 211, 212, 214, 215, 216, 218, 225, 226, 227, 228, 233, 234, 235, 241, 242, 243, 244, 246, 249, 256, 257, 258, 270, 274, 278, 279, 281, 282, 284, 289, 290, 291, 303, 307, 314, 315, 316, 318, 319, 321, 326, 327, 328, 340, 344, 351, 352, 353, 355, 356, 358, 380, 427, 432, 433, 437, 441, 442, 446, 447, 448, 449, 450, 451, 452, 458, 459, 464, 465, 467, 468, 472, 478, 479, 482, 492, 494, 496, 504, 505, 506, 508, 510, 512, 514, 516, 517, 518, 524, 527, 529, 540, 541, 542, 544, 546, 550, 573, 577, 581, 582, 588, 593, 596, 600, 606, 615, 633, 640, 642, 654, 660, 661, 663, 664, 665, 666, 667, 683, 689, 690, 692, 693, 694, 695, 696, 735, 747, 752, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 772, 773, 776, 777, 779, 781, 782, 783, 785, 786, 791, 807, 819, 823, 825, 833, 834, 835, 847, 851, 855, 856, 858, 859, 860, 862, 869, 870, 871, 872, 877, 878, 879, 885, 886, 887, 888, 890, 893, 900, 901, 902, 914, 918, 922, 923, 925, 926, 928, 933, 934, 935, 947, 951, 958, 959, 960, 962, 963, 965, 970, 971, 972, 984, 988, 995, 996, 997, 999, 1000, 1002, 1026, 1062, 1063, 1065, 1069, 1074, 1075, 1079, 1083, 1084, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1100, 1101, 1106, 1107, 1109, 1110, 1114, 1120, 1121, 1124, 1134, 1136, 1138, 1146, 1147, 1148, 1150, 1152, 1154, 1156, 1158, 1160, 1161, 1163, 1165, 1175, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1204, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1236, 1237, 1238, 1239, 1253, 1256, 1258, 1269, 1270, 1271, 1273, 1275, 1279, 1302, 1305, 1356, 1361], "dimens": [2, 3, 9, 11, 22, 46, 89, 130, 370, 428, 478, 494, 495, 501, 506, 508, 515, 550, 570, 571, 581, 582, 588, 593, 606, 640, 683, 761, 1016, 1062, 1063, 1065, 1070, 1120, 1136, 1137, 1143, 1148, 1150, 1157, 1163, 1204, 1279, 1299, 1300, 1340, 1342, 1349, 1353, 1356, 1358], "1536": [3, 9, 582, 588], "dtype": [3, 8, 151, 582, 587, 722, 794, 1061, 1065, 1305, 1349, 1351, 1358], "float32": [3, 16, 26, 381, 582, 600, 615, 1027, 1305, 1340, 1349, 1351, 1358], "date_format": [3, 9, 22, 582, 588, 606], "added_tim": [3, 9, 22, 582, 588, 606], "86400": [3, 582], "x_offset": [3, 9, 22, 582, 588, 606], "619652": [3, 9, 582, 588], "074056": [3, 9, 582, 588], "y_offset": [3, 9, 22, 582, 588, 606], "3526818": [3, 9, 582, 588], "337932": [3, 9, 582, 588], "lat_0": [3, 9, 22, 46, 60, 89, 122, 125, 315, 352, 582, 588, 606, 640, 654, 683, 716, 719, 959, 996, 1163, 1175, 1204, 1329, 1357], "90": [3, 9, 493, 556, 582, 588, 1135, 1285, 1361], "lon_0": [3, 9, 22, 46, 60, 89, 122, 125, 315, 352, 582, 588, 606, 640, 654, 683, 716, 719, 959, 996, 1163, 1175, 1204, 1329, 1357], "proj": [3, 22, 46, 53, 60, 89, 121, 123, 124, 246, 324, 582, 606, 640, 647, 654, 683, 715, 717, 718, 890, 968, 1163, 1170, 1175, 1204], "gnom": [3, 582], "rainfall_accumul": [3, 582], "meteofr": [3, 9, 12, 22, 582, 588, 594, 606, 1347], "stereopolar": [3, 9, 582, 588], "project": [3, 9, 21, 22, 46, 49, 53, 60, 89, 121, 122, 123, 124, 125, 209, 221, 233, 234, 235, 246, 276, 287, 309, 315, 346, 352, 370, 379, 380, 442, 450, 459, 472, 475, 493, 582, 588, 605, 606, 624, 640, 643, 647, 654, 683, 715, 716, 717, 718, 719, 853, 865, 877, 878, 879, 890, 920, 931, 953, 959, 990, 996, 1016, 1025, 1026, 1065, 1084, 1092, 1101, 1114, 1117, 1135, 1163, 1166, 1170, 1175, 1204, 1312, 1313, 1316, 1322, 1323, 1329, 1336, 1340, 1342, 1347, 1350, 1351, 1353, 1354, 1356, 1357, 1360], "type": [3, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 35, 41, 60, 89, 131, 132, 140, 187, 254, 287, 324, 363, 368, 370, 371, 372, 373, 375, 376, 377, 381, 382, 423, 437, 442, 450, 459, 472, 475, 477, 482, 484, 503, 506, 516, 527, 529, 539, 582, 587, 596, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 619, 620, 621, 627, 634, 654, 683, 762, 763, 781, 782, 783, 784, 831, 898, 931, 968, 1009, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1027, 1028, 1079, 1084, 1092, 1101, 1114, 1117, 1119, 1124, 1126, 1145, 1148, 1158, 1175, 1204, 1256, 1258, 1268, 1355, 1357, 1358, 1361], "date": [3, 9, 22, 364, 365, 582, 588, 606, 1010, 1011, 1304, 1312, 1313], "second": [3, 9, 22, 56, 57, 58, 59, 62, 73, 91, 102, 118, 130, 376, 383, 492, 508, 517, 519, 539, 564, 565, 582, 588, 606, 650, 651, 652, 653, 656, 667, 685, 696, 712, 761, 1022, 1030, 1054, 1134, 1150, 1160, 1177, 1188, 1206, 1217, 1268, 1293, 1294, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1354, 1355, 1358, 1361], "nomin": [3, 9, 14, 22, 24, 25, 582, 588, 596, 606, 613, 614], "24h": [3, 9, 582, 588], "accumul": [3, 9, 510, 582, 588, 1152, 1305, 1342], "mf": [3, 9, 582, 588, 772, 773, 774], "x": [3, 9, 21, 22, 46, 52, 54, 72, 80, 89, 101, 109, 118, 119, 120, 121, 122, 123, 124, 125, 187, 193, 197, 204, 206, 209, 211, 214, 215, 216, 217, 218, 220, 231, 233, 237, 239, 249, 251, 253, 254, 260, 264, 271, 273, 276, 278, 281, 282, 283, 284, 286, 287, 293, 297, 304, 306, 309, 312, 314, 318, 319, 320, 321, 323, 324, 330, 334, 341, 343, 346, 349, 351, 355, 356, 357, 358, 360, 437, 478, 483, 494, 498, 501, 502, 506, 507, 508, 515, 516, 550, 582, 588, 605, 606, 640, 646, 648, 666, 674, 683, 695, 703, 712, 713, 714, 715, 716, 717, 718, 719, 831, 837, 841, 848, 850, 853, 855, 858, 859, 860, 861, 862, 864, 875, 877, 881, 883, 893, 895, 897, 898, 904, 908, 915, 917, 920, 922, 925, 926, 927, 928, 930, 931, 937, 941, 948, 950, 953, 956, 958, 962, 963, 964, 965, 967, 968, 974, 978, 985, 987, 990, 993, 995, 999, 1000, 1001, 1002, 1004, 1054, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1079, 1120, 1125, 1136, 1140, 1143, 1144, 1148, 1149, 1150, 1157, 1158, 1163, 1169, 1171, 1187, 1195, 1204, 1216, 1224, 1235, 1239, 1279, 1316, 1322, 1323, 1332, 1333, 1342, 1353, 1354, 1356, 1357, 1358, 1360], "offset": [3, 9, 18, 19, 20, 22, 30, 31, 33, 129, 136, 137, 141, 142, 187, 254, 287, 313, 324, 350, 439, 449, 478, 494, 539, 556, 582, 588, 602, 603, 604, 606, 620, 621, 623, 750, 757, 776, 777, 785, 786, 831, 898, 931, 957, 968, 994, 1081, 1091, 1120, 1136, 1268, 1285], "origin": [3, 9, 22, 46, 54, 130, 131, 132, 187, 254, 287, 324, 376, 378, 379, 383, 412, 494, 532, 533, 552, 582, 588, 606, 640, 648, 761, 762, 763, 831, 898, 931, 968, 1022, 1024, 1025, 1030, 1032, 1061, 1065, 1136, 1163, 1171, 1261, 1262, 1281, 1316, 1317, 1318, 1341, 1342, 1347, 1361], "stereo": [3, 9, 582, 588], "polar": [3, 9, 26, 138, 179, 370, 371, 481, 496, 508, 582, 588, 607, 615, 766, 767, 768, 772, 773, 774, 778, 781, 782, 783, 822, 1016, 1017, 1123, 1138, 1150, 1305, 1357], "correspond": [3, 9, 13, 22, 122, 125, 151, 203, 233, 234, 235, 249, 270, 303, 340, 364, 417, 443, 462, 516, 540, 544, 546, 547, 548, 557, 558, 559, 560, 577, 582, 588, 595, 606, 716, 719, 722, 794, 847, 877, 878, 879, 893, 914, 947, 984, 1010, 1037, 1048, 1062, 1065, 1085, 1104, 1158, 1269, 1273, 1275, 1276, 1277, 1286, 1287, 1288, 1289, 1312, 1324, 1351, 1355, 1357, 1358, 1361], "northwest": [3, 9, 22, 582, 588, 606], "corner": [3, 9, 22, 206, 273, 306, 313, 343, 350, 582, 588, 606, 850, 917, 950, 957, 987, 994, 1356], "metropolitan": [3, 9, 22, 582, 588, 606], "french": [3, 9, 22, 582, 588, 606], "composit": [3, 9, 22, 380, 428, 582, 588, 606, 1026, 1070, 1310, 1339, 1345, 1359], "9": [3, 9, 22, 30, 31, 127, 179, 218, 284, 321, 358, 370, 503, 510, 512, 540, 582, 588, 606, 620, 621, 753, 759, 760, 822, 862, 928, 965, 1002, 1016, 1145, 1152, 1154, 1269, 1313, 1324, 1333, 1340, 1341, 1342, 1349, 1354, 1355, 1357, 1358], "965": [3, 9, 22, 582, 588, 606], "53": [3, 9, 22, 136, 137, 582, 588, 606, 776, 777], "670": [3, 9, 22, 582, 588, 606], "deg": [3, 9, 14, 22, 24, 25, 126, 134, 139, 146, 179, 181, 185, 425, 442, 472, 473, 475, 479, 493, 496, 499, 503, 506, 525, 542, 553, 570, 571, 582, 588, 596, 606, 613, 614, 720, 764, 769, 780, 790, 822, 824, 828, 1067, 1084, 1114, 1115, 1117, 1121, 1135, 1138, 1141, 1145, 1148, 1254, 1271, 1282, 1299, 1300, 1344, 1356], "latitud": [3, 9, 22, 29, 46, 48, 51, 54, 56, 60, 71, 89, 100, 121, 122, 123, 125, 126, 144, 145, 187, 209, 210, 230, 232, 233, 234, 236, 237, 238, 246, 248, 250, 251, 252, 254, 276, 277, 287, 309, 310, 311, 313, 315, 324, 346, 347, 348, 350, 352, 442, 472, 475, 525, 543, 544, 545, 553, 569, 582, 588, 606, 619, 640, 642, 645, 648, 650, 654, 665, 683, 694, 715, 716, 717, 719, 720, 788, 789, 831, 853, 854, 874, 876, 877, 878, 880, 881, 882, 890, 892, 894, 895, 896, 898, 920, 921, 931, 953, 954, 955, 957, 959, 968, 990, 991, 992, 994, 996, 1065, 1084, 1114, 1117, 1163, 1165, 1168, 1171, 1175, 1186, 1204, 1215, 1254, 1272, 1273, 1274, 1282, 1298, 1305, 1310, 1311, 1314, 1322, 1329, 1336, 1340, 1342, 1349, 1350, 1356, 1357, 1358, 1359], "longitud": [3, 9, 22, 29, 46, 48, 51, 54, 56, 60, 71, 89, 100, 121, 122, 123, 125, 126, 144, 145, 187, 209, 210, 230, 232, 233, 234, 236, 238, 239, 246, 248, 250, 252, 253, 254, 276, 277, 287, 309, 310, 311, 313, 315, 324, 346, 347, 348, 350, 352, 442, 472, 475, 525, 543, 544, 545, 553, 569, 582, 588, 606, 619, 640, 642, 645, 648, 650, 654, 665, 683, 694, 715, 716, 717, 719, 720, 788, 789, 831, 853, 854, 874, 876, 877, 878, 880, 882, 883, 890, 892, 894, 896, 897, 898, 920, 921, 931, 953, 954, 955, 957, 959, 968, 990, 991, 992, 994, 996, 1065, 1084, 1114, 1117, 1163, 1165, 1168, 1171, 1175, 1186, 1204, 1215, 1254, 1272, 1273, 1274, 1282, 1298, 1310, 1311, 1314, 1322, 1329, 1336, 1340, 1342, 1349, 1350, 1356, 1357, 1358, 1359], "stereograph": [3, 9, 582, 588], "can": [3, 4, 13, 14, 16, 18, 22, 24, 25, 26, 30, 31, 33, 45, 60, 69, 72, 89, 98, 101, 121, 123, 124, 130, 135, 140, 151, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 203, 270, 303, 340, 362, 370, 371, 373, 376, 380, 381, 382, 410, 430, 433, 437, 442, 446, 449, 450, 459, 465, 467, 472, 473, 475, 479, 481, 494, 496, 499, 503, 506, 507, 508, 510, 512, 513, 516, 518, 527, 557, 563, 575, 582, 583, 595, 596, 598, 600, 602, 606, 613, 614, 615, 620, 621, 623, 624, 638, 654, 663, 666, 683, 692, 695, 715, 717, 718, 722, 735, 747, 751, 752, 759, 760, 761, 764, 766, 767, 771, 772, 773, 774, 775, 781, 782, 783, 784, 794, 807, 819, 822, 823, 824, 825, 826, 827, 828, 829, 847, 914, 947, 984, 1008, 1016, 1017, 1019, 1022, 1026, 1027, 1028, 1064, 1065, 1072, 1075, 1079, 1084, 1088, 1091, 1092, 1101, 1107, 1109, 1114, 1115, 1117, 1121, 1123, 1136, 1138, 1141, 1145, 1148, 1149, 1150, 1152, 1154, 1155, 1158, 1161, 1175, 1184, 1187, 1204, 1213, 1216, 1256, 1286, 1292, 1305, 1312, 1313, 1316, 1321, 1340, 1342, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363], "webmerc": [3, 22, 582, 606], "stere": [3, 22, 352, 582, 606, 996], "reader": [4, 14, 16, 583, 596, 600, 1305, 1313, 1347], "c": [4, 14, 16, 77, 106, 118, 122, 125, 130, 132, 246, 352, 410, 432, 437, 442, 450, 452, 477, 483, 498, 506, 507, 508, 513, 516, 518, 541, 579, 583, 596, 600, 671, 700, 712, 716, 719, 750, 752, 756, 761, 763, 890, 996, 1074, 1079, 1084, 1092, 1094, 1119, 1125, 1140, 1148, 1149, 1150, 1155, 1158, 1161, 1192, 1221, 1241, 1270, 1305, 1316, 1347, 1348, 1350, 1353, 1355, 1356, 1360, 1361, 1363], "metranet": [4, 6, 7, 14, 16, 579, 583, 585, 586, 590, 591, 596, 600, 607, 608, 1305, 1348], "product": [4, 374, 376, 428, 496, 518, 583, 1020, 1022, 1070, 1138, 1161, 1305], "librari": [4, 14, 16, 145, 363, 373, 376, 379, 380, 579, 583, 596, 600, 789, 1009, 1019, 1022, 1025, 1026, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1360, 1361], "either": [4, 14, 16, 18, 30, 31, 130, 131, 132, 135, 204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 281, 282, 283, 284, 304, 305, 306, 314, 318, 319, 320, 321, 341, 342, 343, 351, 355, 356, 357, 358, 365, 421, 442, 450, 459, 472, 479, 480, 484, 487, 488, 496, 503, 583, 596, 598, 600, 602, 620, 621, 751, 752, 761, 762, 763, 766, 767, 771, 781, 782, 783, 791, 848, 849, 850, 855, 858, 859, 860, 861, 862, 873, 875, 877, 878, 879, 881, 883, 891, 893, 895, 897, 915, 916, 917, 922, 925, 926, 927, 928, 948, 949, 950, 958, 962, 963, 964, 965, 985, 986, 987, 995, 999, 1000, 1001, 1002, 1011, 1041, 1051, 1084, 1092, 1101, 1114, 1121, 1122, 1126, 1129, 1130, 1138, 1145, 1342, 1347, 1355, 1356, 1357, 1360, 1361], "python": [4, 14, 16, 45, 380, 575, 583, 596, 600, 638, 1026, 1305, 1307, 1308, 1310, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1360, 1363], "delay_field_load": [5, 6, 7, 28, 363, 366, 367, 370, 371, 372, 375, 377, 584, 585, 586, 618, 1009, 1012, 1013, 1016, 1017, 1018, 1021, 1023], "delai": [5, 6, 7, 28, 363, 366, 367, 370, 371, 372, 375, 541, 584, 585, 586, 618, 1009, 1012, 1013, 1016, 1017, 1018, 1021, 1270], "load": [5, 6, 7, 28, 45, 363, 366, 367, 370, 371, 372, 375, 383, 419, 579, 584, 585, 586, 618, 638, 1009, 1012, 1013, 1016, 1017, 1018, 1021, 1029, 1030, 1039, 1355, 1356, 1357, 1358], "until": [5, 6, 7, 28, 45, 131, 363, 366, 367, 370, 371, 372, 375, 584, 585, 586, 618, 638, 762, 1009, 1012, 1013, 1016, 1017, 1018, 1021, 1356], "particular": [5, 6, 7, 28, 363, 366, 367, 370, 371, 372, 375, 473, 497, 510, 584, 585, 586, 618, 1009, 1012, 1013, 1016, 1017, 1018, 1021, 1065, 1115, 1139, 1152, 1347], "access": [5, 6, 7, 28, 35, 46, 60, 71, 72, 89, 100, 101, 151, 363, 366, 367, 370, 371, 372, 375, 383, 584, 585, 586, 618, 627, 640, 654, 665, 666, 683, 694, 695, 722, 794, 1009, 1012, 1013, 1016, 1017, 1018, 1021, 1030, 1163, 1175, 1186, 1187, 1204, 1215, 1216, 1234, 1312, 1313, 1353, 1358], "In": [5, 6, 7, 28, 30, 31, 121, 123, 124, 132, 134, 363, 366, 367, 370, 371, 372, 374, 375, 421, 428, 473, 506, 518, 524, 584, 585, 586, 618, 620, 621, 715, 717, 718, 763, 769, 1006, 1009, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1041, 1051, 1054, 1070, 1115, 1148, 1161, 1253, 1307, 1308, 1313, 1342, 1347, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1360, 1361], "attribut": [5, 6, 7, 18, 19, 20, 28, 30, 31, 33, 46, 49, 50, 51, 52, 53, 60, 71, 72, 78, 79, 80, 81, 89, 100, 101, 107, 108, 109, 110, 130, 147, 151, 164, 176, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 375, 378, 379, 382, 454, 584, 585, 586, 598, 602, 603, 604, 618, 620, 621, 623, 640, 643, 644, 645, 646, 647, 654, 665, 666, 672, 673, 674, 675, 683, 694, 695, 701, 702, 703, 704, 722, 735, 747, 761, 794, 807, 819, 848, 855, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1009, 1012, 1013, 1014, 1016, 1017, 1018, 1021, 1024, 1025, 1028, 1096, 1163, 1166, 1167, 1168, 1169, 1170, 1175, 1186, 1187, 1193, 1194, 1195, 1196, 1204, 1215, 1216, 1222, 1223, 1224, 1225, 1340, 1349, 1355, 1358], "lazyloaddict": [5, 6, 7, 28, 46, 60, 89, 363, 366, 367, 370, 371, 372, 375, 584, 585, 586, 618, 640, 654, 683, 1009, 1012, 1013, 1016, 1017, 1018, 1021, 1163, 1175, 1204], "provid": [5, 6, 7, 8, 13, 28, 60, 63, 89, 92, 130, 210, 234, 277, 310, 315, 347, 365, 366, 367, 368, 373, 376, 380, 381, 382, 383, 415, 416, 422, 496, 503, 551, 568, 584, 585, 586, 587, 595, 618, 654, 657, 683, 686, 761, 854, 878, 921, 954, 959, 991, 1011, 1012, 1013, 1014, 1019, 1022, 1026, 1027, 1028, 1030, 1035, 1036, 1042, 1043, 1046, 1047, 1052, 1054, 1138, 1145, 1175, 1178, 1204, 1207, 1280, 1297, 1304, 1313, 1340, 1342, 1347, 1354, 1355, 1357, 1360, 1361], "speedup": [5, 6, 7, 28, 233, 234, 315, 352, 366, 367, 584, 585, 586, 618, 877, 878, 959, 996, 1012, 1013], "number": [5, 6, 7, 14, 16, 26, 28, 33, 45, 46, 60, 66, 67, 69, 70, 71, 72, 73, 89, 95, 96, 98, 99, 100, 101, 102, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 203, 207, 211, 212, 214, 215, 216, 217, 234, 270, 274, 278, 279, 281, 282, 283, 303, 307, 314, 315, 316, 318, 319, 320, 340, 344, 351, 352, 353, 355, 356, 357, 366, 367, 374, 380, 381, 399, 433, 437, 442, 446, 447, 450, 451, 452, 459, 465, 472, 479, 481, 482, 492, 502, 504, 505, 506, 508, 510, 512, 514, 516, 527, 529, 539, 540, 541, 546, 547, 548, 557, 558, 559, 560, 574, 576, 584, 585, 586, 596, 600, 615, 618, 623, 638, 640, 654, 660, 661, 663, 664, 665, 666, 667, 683, 689, 690, 692, 693, 694, 695, 696, 750, 751, 752, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 773, 776, 777, 779, 781, 782, 783, 784, 785, 786, 791, 847, 851, 855, 856, 858, 859, 860, 861, 878, 914, 918, 922, 923, 925, 926, 927, 947, 951, 958, 959, 960, 962, 963, 964, 984, 988, 995, 996, 997, 999, 1000, 1001, 1006, 1012, 1013, 1020, 1026, 1027, 1061, 1064, 1065, 1075, 1079, 1084, 1088, 1089, 1092, 1093, 1094, 1101, 1107, 1114, 1121, 1123, 1124, 1134, 1144, 1146, 1147, 1148, 1150, 1152, 1154, 1156, 1158, 1163, 1175, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1204, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1235, 1236, 1237, 1238, 1239, 1256, 1258, 1268, 1269, 1270, 1275, 1276, 1277, 1286, 1287, 1288, 1289, 1303, 1321, 1323, 1347, 1355, 1356, 1358, 1361], "gate": [5, 6, 7, 28, 60, 70, 71, 72, 89, 99, 100, 101, 118, 119, 120, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 254, 271, 278, 282, 283, 287, 304, 314, 315, 319, 320, 324, 341, 351, 352, 356, 357, 366, 367, 372, 373, 374, 375, 451, 452, 480, 481, 490, 491, 492, 506, 507, 508, 509, 510, 511, 512, 513, 517, 518, 524, 525, 526, 541, 542, 544, 545, 550, 553, 584, 585, 586, 618, 654, 664, 665, 666, 683, 693, 694, 695, 712, 713, 714, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 757, 761, 762, 763, 764, 765, 766, 767, 769, 771, 773, 775, 776, 777, 781, 782, 783, 785, 786, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 848, 855, 859, 860, 861, 875, 881, 883, 893, 895, 897, 898, 915, 922, 926, 927, 931, 948, 958, 959, 963, 964, 968, 985, 995, 996, 1000, 1001, 1012, 1013, 1018, 1019, 1020, 1021, 1054, 1061, 1064, 1065, 1093, 1094, 1122, 1123, 1132, 1133, 1134, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1160, 1161, 1175, 1185, 1186, 1187, 1204, 1214, 1215, 1216, 1236, 1237, 1238, 1253, 1254, 1255, 1270, 1271, 1273, 1274, 1279, 1282, 1308, 1313, 1316, 1317, 1318, 1322, 1349, 1351, 1353, 1354, 1355, 1357, 1358], "vari": [5, 6, 7, 28, 366, 367, 370, 477, 561, 584, 585, 586, 618, 1012, 1013, 1016, 1119, 1290, 1342, 1355], "between": [5, 6, 7, 14, 24, 25, 28, 30, 31, 48, 60, 71, 72, 89, 100, 101, 119, 122, 123, 130, 131, 134, 164, 176, 179, 182, 183, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 366, 367, 372, 375, 381, 382, 435, 437, 477, 478, 484, 492, 494, 496, 511, 512, 526, 528, 530, 531, 539, 559, 560, 569, 584, 585, 586, 596, 613, 614, 618, 620, 621, 642, 654, 665, 666, 683, 694, 695, 713, 716, 717, 735, 747, 759, 760, 761, 762, 764, 769, 772, 773, 774, 775, 783, 807, 819, 822, 825, 826, 848, 855, 859, 860, 861, 862, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1005, 1012, 1013, 1018, 1021, 1027, 1028, 1054, 1077, 1079, 1119, 1120, 1126, 1134, 1136, 1138, 1153, 1154, 1165, 1175, 1186, 1187, 1204, 1215, 1216, 1248, 1255, 1257, 1259, 1260, 1268, 1288, 1289, 1298, 1305, 1316, 1322, 1332, 1342, 1351, 1353, 1356, 1357, 1361, 1363], "rai": [5, 6, 7, 28, 31, 60, 68, 71, 72, 73, 74, 75, 76, 89, 97, 100, 101, 102, 103, 104, 105, 119, 130, 131, 132, 133, 134, 135, 137, 164, 176, 182, 188, 190, 193, 195, 196, 204, 211, 214, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 255, 257, 260, 262, 263, 271, 278, 281, 282, 283, 284, 288, 290, 293, 295, 296, 304, 314, 315, 318, 319, 320, 321, 325, 327, 330, 332, 333, 341, 351, 352, 355, 356, 357, 358, 365, 366, 367, 372, 375, 376, 424, 427, 447, 452, 481, 510, 511, 512, 517, 529, 536, 538, 541, 542, 544, 546, 547, 548, 557, 558, 559, 560, 573, 574, 584, 585, 586, 618, 621, 654, 662, 665, 666, 667, 668, 669, 670, 683, 691, 694, 695, 696, 697, 698, 699, 713, 735, 747, 750, 751, 752, 759, 760, 761, 762, 763, 765, 766, 767, 769, 771, 772, 773, 777, 781, 782, 783, 807, 819, 825, 832, 834, 837, 839, 840, 848, 855, 858, 859, 860, 861, 862, 875, 881, 883, 893, 895, 897, 899, 901, 904, 906, 907, 915, 922, 925, 926, 927, 928, 932, 934, 937, 939, 940, 948, 958, 959, 962, 963, 964, 965, 969, 971, 974, 976, 977, 985, 995, 996, 999, 1000, 1001, 1002, 1011, 1012, 1013, 1018, 1021, 1022, 1054, 1069, 1089, 1094, 1123, 1152, 1153, 1154, 1160, 1175, 1183, 1186, 1187, 1188, 1189, 1190, 1191, 1204, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1236, 1237, 1238, 1241, 1258, 1265, 1267, 1270, 1271, 1273, 1275, 1276, 1277, 1286, 1287, 1288, 1289, 1302, 1303, 1305, 1317, 1349, 1358, 1361], "ngates_vari": [5, 6, 7, 28, 366, 367, 584, 585, 586, 618, 1012, 1013], "recommend": [5, 6, 7, 28, 45, 60, 89, 130, 132, 352, 366, 367, 376, 477, 478, 494, 506, 524, 584, 585, 586, 618, 638, 654, 683, 761, 763, 996, 1012, 1013, 1022, 1065, 1119, 1120, 1136, 1148, 1175, 1204, 1253, 1321, 1347, 1360, 1361, 1362, 1363], "read_altitude_from_nc": [8, 587], "d3r": [8, 587], "gcpex": [8, 587], "odim_h5": [8, 18, 19, 20, 30, 31, 587, 598, 602, 603, 604, 620, 621, 1305], "found": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 45, 133, 149, 363, 368, 370, 371, 372, 373, 375, 376, 377, 417, 428, 482, 495, 557, 587, 596, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 619, 638, 759, 760, 764, 765, 1009, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1037, 1048, 1061, 1064, 1065, 1070, 1124, 1137, 1286, 1313, 1347, 1355, 1360, 1361, 1363], "doe": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 64, 93, 121, 123, 124, 130, 131, 132, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 396, 421, 574, 587, 596, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 619, 658, 687, 715, 717, 718, 761, 762, 763, 848, 850, 855, 858, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 959, 962, 963, 964, 965, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1041, 1051, 1179, 1208, 1303, 1305, 1333, 1347, 1349, 1355, 1360, 1361, 1363], "appear": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 556, 587, 596, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 619, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1285], "place": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 135, 205, 209, 210, 229, 232, 247, 248, 272, 276, 277, 305, 309, 310, 342, 346, 347, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 433, 512, 574, 587, 596, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 619, 771, 849, 853, 854, 873, 876, 891, 892, 916, 920, 921, 949, 953, 954, 986, 990, 991, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1027, 1028, 1075, 1154, 1303, 1353, 1360], "defin": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 46, 60, 89, 121, 123, 124, 129, 130, 133, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 209, 210, 214, 276, 277, 281, 309, 310, 318, 346, 347, 355, 363, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 382, 427, 459, 473, 479, 496, 503, 504, 505, 506, 510, 511, 512, 515, 519, 524, 587, 596, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 619, 620, 621, 640, 654, 683, 715, 717, 718, 750, 751, 752, 757, 759, 760, 761, 764, 765, 766, 767, 768, 771, 775, 776, 777, 781, 782, 783, 785, 786, 822, 823, 824, 825, 826, 827, 828, 829, 853, 854, 858, 920, 921, 925, 953, 954, 962, 990, 991, 999, 1009, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1028, 1064, 1065, 1069, 1101, 1115, 1121, 1138, 1145, 1146, 1147, 1148, 1152, 1153, 1154, 1157, 1163, 1175, 1204, 1253, 1322, 1323, 1340, 1342, 1357], "mdv": [8, 14, 16, 18, 19, 20, 24, 25, 26, 29, 370, 371, 381, 587, 596, 598, 600, 602, 603, 604, 613, 614, 615, 616, 619, 1016, 1017, 1027, 1308, 1310, 1317, 1320, 1338, 1347, 1351, 1353, 1359], "like": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 40, 56, 57, 77, 106, 121, 122, 124, 125, 126, 131, 132, 362, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 415, 416, 428, 481, 510, 511, 512, 520, 521, 522, 523, 540, 541, 554, 575, 587, 596, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 619, 633, 650, 651, 671, 700, 715, 716, 718, 719, 720, 762, 763, 1008, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1029, 1030, 1035, 1036, 1046, 1047, 1070, 1123, 1152, 1153, 1154, 1192, 1221, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1269, 1270, 1283, 1312, 1313, 1316, 1347, 1349, 1351, 1353, 1357, 1361], "onli": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 32, 65, 71, 72, 94, 100, 101, 130, 132, 133, 135, 136, 137, 151, 204, 215, 233, 234, 271, 282, 304, 315, 319, 341, 352, 356, 363, 368, 370, 371, 372, 373, 374, 375, 376, 480, 481, 496, 506, 532, 533, 546, 556, 563, 570, 571, 587, 596, 598, 600, 601, 602, 603, 604, 613, 614, 615, 616, 619, 622, 659, 665, 666, 688, 694, 695, 722, 750, 751, 752, 756, 761, 763, 765, 771, 776, 777, 781, 782, 783, 794, 848, 859, 877, 878, 915, 926, 948, 959, 963, 985, 996, 1000, 1009, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1062, 1063, 1065, 1122, 1123, 1138, 1148, 1180, 1186, 1187, 1209, 1215, 1216, 1261, 1262, 1275, 1285, 1292, 1299, 1300, 1305, 1316, 1323, 1333, 1342, 1350, 1351, 1353, 1355, 1356, 1357, 1361], "you": [8, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 481, 587, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1123, 1312, 1342, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1360, 1361, 1363], "altitud": [8, 29, 46, 60, 71, 89, 100, 126, 127, 128, 136, 137, 187, 218, 284, 321, 358, 428, 433, 496, 499, 500, 512, 515, 525, 543, 553, 569, 587, 619, 640, 654, 665, 683, 694, 720, 753, 754, 759, 760, 772, 776, 777, 831, 862, 928, 965, 1002, 1062, 1065, 1070, 1075, 1138, 1141, 1142, 1154, 1157, 1163, 1175, 1186, 1204, 1215, 1254, 1272, 1282, 1298, 1305, 1333, 1344, 1349, 1353, 1356, 1358], "np": [8, 14, 16, 26, 447, 518, 567, 587, 596, 600, 615, 1054, 1089, 1161, 1296, 1305, 1316, 1317, 1321, 1324, 1329, 1332, 1333, 1335, 1340, 1342, 1343, 1344, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1361], "295": [8, 587], "float64": [8, 587, 1064, 1065, 1340, 1358], "nd": [9, 588], "65535": [9, 588], "radar_estimated_rain_r": [9, 588, 1355, 1357], "integ": [9, 204, 271, 304, 341, 382, 501, 502, 588, 848, 915, 948, 985, 1028, 1143, 1144], "repres": [9, 60, 89, 129, 130, 133, 141, 142, 479, 492, 496, 503, 504, 505, 510, 512, 517, 518, 574, 588, 654, 683, 757, 761, 765, 766, 767, 768, 781, 782, 783, 785, 786, 1062, 1063, 1121, 1134, 1138, 1145, 1146, 1147, 1152, 1154, 1160, 1161, 1175, 1204, 1236, 1237, 1303], "No": [9, 71, 72, 100, 101, 132, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 380, 432, 496, 588, 665, 666, 694, 695, 763, 848, 855, 859, 860, 861, 862, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1026, 1065, 1074, 1138, 1186, 1187, 1215, 1216, 1355, 1357], "valid_range_from_fil": [10, 592], "units_from_fil": [10, 592], "pulse_width": [10, 138, 146, 382, 453, 592, 778, 790, 1028, 1095], "gamic": [10, 592], "hdf5": [10, 19, 30, 31, 592, 603, 620, 621, 1347], "valid": [10, 46, 60, 89, 130, 133, 135, 136, 140, 141, 142, 178, 205, 229, 247, 272, 305, 342, 372, 381, 382, 425, 437, 442, 446, 450, 451, 452, 459, 465, 472, 479, 481, 492, 504, 505, 510, 512, 527, 529, 532, 533, 540, 541, 592, 640, 654, 683, 749, 750, 759, 760, 761, 765, 771, 772, 773, 774, 776, 781, 782, 783, 784, 785, 786, 821, 849, 873, 891, 916, 949, 986, 1018, 1027, 1028, 1062, 1063, 1065, 1067, 1079, 1084, 1088, 1092, 1093, 1094, 1101, 1107, 1114, 1121, 1123, 1134, 1146, 1147, 1152, 1154, 1163, 1175, 1204, 1256, 1258, 1261, 1262, 1269, 1270, 1361], "rang": [10, 14, 16, 24, 25, 26, 60, 70, 72, 89, 99, 101, 118, 119, 120, 129, 133, 141, 142, 179, 187, 204, 206, 211, 212, 213, 215, 216, 217, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 254, 271, 273, 278, 279, 280, 282, 283, 287, 304, 306, 314, 315, 316, 317, 319, 320, 324, 341, 343, 351, 352, 353, 354, 356, 357, 375, 424, 425, 433, 442, 446, 447, 459, 465, 472, 473, 477, 480, 481, 492, 496, 500, 506, 508, 510, 511, 512, 529, 539, 542, 553, 559, 560, 570, 571, 592, 596, 600, 613, 614, 615, 654, 664, 666, 683, 693, 695, 712, 713, 714, 752, 757, 759, 760, 765, 766, 767, 768, 772, 785, 786, 822, 831, 848, 850, 855, 856, 857, 859, 860, 861, 875, 877, 878, 879, 881, 883, 890, 893, 895, 897, 898, 915, 917, 922, 923, 924, 926, 927, 931, 948, 950, 958, 959, 960, 961, 963, 964, 968, 985, 987, 995, 996, 997, 998, 1000, 1001, 1021, 1062, 1063, 1065, 1067, 1075, 1084, 1088, 1089, 1101, 1107, 1114, 1115, 1119, 1122, 1123, 1134, 1138, 1142, 1148, 1150, 1152, 1153, 1154, 1175, 1185, 1187, 1204, 1214, 1216, 1258, 1268, 1271, 1282, 1288, 1289, 1299, 1300, 1305, 1321, 1326, 1329, 1335, 1344, 1349, 1356, 1358], "valid_min": [10, 130, 131, 132, 368, 592, 761, 762, 763, 1014, 1342, 1358], "valid_max": [10, 130, 131, 132, 368, 592, 761, 762, 763, 1014, 1342, 1358], "when": [10, 18, 19, 20, 33, 35, 46, 60, 61, 62, 66, 67, 69, 71, 72, 89, 90, 91, 95, 96, 98, 100, 101, 130, 131, 132, 136, 137, 144, 145, 149, 150, 151, 155, 157, 164, 171, 176, 204, 211, 215, 216, 217, 218, 233, 234, 240, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 324, 341, 351, 352, 356, 357, 358, 372, 373, 375, 376, 378, 382, 383, 396, 427, 437, 442, 450, 459, 472, 475, 480, 484, 487, 488, 492, 496, 499, 504, 506, 507, 508, 512, 517, 518, 540, 561, 592, 602, 603, 604, 623, 627, 640, 654, 655, 656, 660, 661, 663, 665, 666, 683, 684, 685, 689, 690, 692, 694, 695, 722, 726, 728, 735, 742, 747, 759, 760, 761, 762, 763, 776, 777, 781, 788, 789, 794, 798, 800, 807, 814, 819, 848, 855, 859, 860, 861, 862, 877, 878, 884, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 968, 985, 995, 996, 1000, 1001, 1002, 1018, 1019, 1021, 1022, 1024, 1028, 1030, 1054, 1065, 1069, 1079, 1084, 1092, 1101, 1114, 1117, 1122, 1126, 1129, 1130, 1134, 1138, 1141, 1146, 1148, 1149, 1150, 1154, 1160, 1161, 1162, 1163, 1175, 1176, 1177, 1181, 1182, 1184, 1186, 1187, 1204, 1205, 1206, 1210, 1211, 1213, 1215, 1216, 1269, 1290, 1305, 1321, 1342, 1347, 1350, 1351, 1354, 1356, 1360, 1361, 1363], "thei": [10, 73, 102, 130, 131, 132, 134, 155, 157, 164, 352, 368, 376, 382, 437, 473, 477, 506, 576, 590, 592, 667, 696, 726, 728, 735, 761, 762, 763, 769, 781, 782, 783, 798, 800, 807, 996, 1014, 1022, 1028, 1079, 1115, 1119, 1148, 1188, 1217, 1342, 1355, 1361], "present": [10, 45, 46, 60, 89, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 381, 382, 421, 592, 638, 640, 654, 683, 848, 855, 859, 860, 861, 862, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1027, 1028, 1041, 1051, 1065, 1163, 1175, 1204, 1349, 1354], "unit": [10, 18, 19, 20, 70, 99, 121, 122, 123, 124, 125, 131, 132, 194, 197, 198, 199, 200, 201, 202, 209, 261, 264, 265, 266, 267, 268, 269, 276, 294, 297, 298, 299, 300, 301, 302, 309, 331, 334, 335, 336, 337, 338, 339, 346, 361, 368, 370, 446, 465, 467, 494, 501, 527, 540, 541, 592, 602, 603, 604, 664, 693, 715, 716, 717, 718, 719, 759, 760, 762, 763, 838, 841, 842, 843, 844, 845, 846, 853, 905, 908, 909, 910, 911, 912, 913, 920, 938, 941, 942, 943, 944, 945, 946, 953, 975, 978, 979, 980, 981, 982, 983, 990, 1007, 1014, 1016, 1088, 1107, 1109, 1136, 1143, 1162, 1185, 1214, 1241, 1256, 1269, 1270, 1305, 1330, 1335, 1342, 1347, 1350, 1355, 1358, 1361], "avail": [10, 18, 19, 20, 60, 71, 72, 73, 89, 100, 101, 102, 134, 135, 164, 176, 231, 233, 234, 235, 237, 239, 249, 251, 253, 370, 380, 496, 527, 563, 592, 602, 603, 604, 624, 654, 665, 666, 667, 683, 694, 695, 696, 735, 747, 750, 751, 752, 769, 771, 781, 782, 783, 807, 819, 875, 877, 878, 879, 881, 883, 893, 895, 897, 1016, 1026, 1138, 1175, 1186, 1187, 1188, 1204, 1215, 1216, 1217, 1256, 1292, 1310, 1312, 1321, 1347, 1355], "mandatori": [10, 592], "processor": [10, 592], "pulsewidth": [10, 496, 592, 1138], "enum": [10, 592], "should": [10, 26, 37, 46, 60, 62, 69, 89, 91, 98, 130, 131, 132, 135, 137, 151, 155, 187, 232, 248, 315, 352, 362, 376, 379, 381, 382, 410, 478, 481, 492, 494, 496, 504, 505, 506, 507, 508, 513, 515, 517, 518, 539, 540, 541, 576, 592, 615, 629, 640, 654, 656, 663, 683, 685, 692, 722, 726, 756, 761, 762, 763, 771, 777, 794, 798, 831, 876, 892, 959, 996, 1005, 1006, 1008, 1022, 1025, 1027, 1028, 1062, 1063, 1064, 1065, 1120, 1123, 1134, 1136, 1138, 1146, 1147, 1148, 1149, 1150, 1155, 1157, 1160, 1161, 1163, 1175, 1177, 1184, 1204, 1206, 1213, 1268, 1269, 1270, 1321, 1342, 1347, 1360, 1361, 1363], "u": [10, 56, 57, 58, 122, 125, 503, 517, 518, 592, 650, 651, 652, 716, 719, 1145, 1160, 1161, 1313, 1344, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1361], "gif": [11, 593, 1305], "precipitation_typ": [12, 22, 594, 606], "grib": [12, 594], "locat": [13, 46, 48, 60, 70, 71, 72, 89, 99, 100, 101, 187, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 254, 271, 272, 273, 276, 277, 278, 279, 280, 282, 283, 284, 287, 304, 305, 306, 309, 310, 312, 314, 315, 316, 317, 319, 320, 321, 324, 341, 342, 343, 346, 347, 349, 351, 352, 353, 354, 356, 357, 358, 372, 373, 375, 381, 526, 543, 544, 545, 595, 640, 642, 654, 664, 665, 666, 683, 693, 694, 695, 831, 848, 849, 850, 853, 854, 855, 856, 857, 859, 860, 861, 862, 873, 875, 877, 878, 879, 881, 883, 890, 891, 893, 895, 897, 898, 915, 916, 917, 920, 921, 922, 923, 924, 926, 927, 928, 931, 948, 949, 950, 953, 954, 956, 958, 959, 960, 961, 963, 964, 965, 968, 985, 986, 987, 990, 991, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1018, 1019, 1021, 1027, 1054, 1061, 1064, 1065, 1163, 1165, 1175, 1185, 1186, 1187, 1204, 1214, 1215, 1216, 1235, 1248, 1255, 1272, 1273, 1274, 1327, 1329, 1340, 1347, 1353, 1356, 1360, 1361], "hpl": [13, 595], "ascii": [13, 595], "halo": [13, 595], "photono": [13, 595], "steamlin": [13, 595], "lidar": [13, 491, 595, 1133, 1305, 1347], "come": [13, 510, 595, 1152, 1342], "assign": [13, 130, 503, 595, 761, 781, 1145, 1342], "lat": [13, 55, 71, 100, 121, 122, 123, 124, 125, 126, 144, 145, 193, 218, 231, 232, 233, 234, 236, 237, 238, 239, 248, 250, 251, 252, 253, 260, 284, 293, 311, 313, 315, 321, 330, 348, 350, 358, 379, 380, 442, 472, 475, 595, 649, 665, 694, 715, 716, 717, 718, 719, 720, 788, 789, 837, 862, 875, 876, 877, 878, 880, 881, 882, 883, 892, 894, 895, 896, 897, 904, 928, 937, 955, 957, 959, 965, 974, 992, 994, 1002, 1025, 1026, 1084, 1114, 1117, 1172, 1186, 1215, 1322, 1323, 1336, 1353, 1356], "lon": [13, 55, 71, 100, 121, 122, 123, 124, 125, 126, 144, 145, 193, 218, 231, 232, 233, 234, 236, 237, 238, 239, 248, 250, 251, 252, 253, 260, 284, 293, 311, 313, 315, 321, 330, 348, 350, 358, 379, 380, 442, 472, 475, 595, 649, 665, 694, 715, 716, 717, 718, 719, 720, 788, 789, 837, 862, 875, 876, 877, 878, 880, 881, 882, 883, 892, 894, 895, 896, 897, 904, 928, 937, 955, 957, 959, 965, 974, 992, 994, 1002, 1025, 1026, 1084, 1114, 1117, 1172, 1186, 1215, 1323, 1336, 1356], "alt": [13, 55, 71, 100, 126, 379, 595, 649, 665, 694, 720, 1025, 1172, 1186, 1215, 1356], "ad": [13, 46, 60, 62, 89, 91, 134, 136, 137, 240, 313, 350, 477, 478, 494, 496, 595, 640, 654, 656, 683, 685, 769, 776, 777, 884, 957, 994, 1062, 1064, 1119, 1120, 1136, 1138, 1163, 1175, 1177, 1204, 1206, 1239, 1305, 1332, 1333, 1349, 1350, 1360, 1361], "global": [13, 60, 89, 595, 654, 683, 1175, 1204, 1358, 1360], "variabl": [13, 33, 45, 46, 54, 55, 56, 60, 70, 89, 99, 151, 187, 221, 240, 254, 287, 324, 378, 379, 437, 448, 449, 482, 484, 495, 503, 506, 509, 513, 514, 516, 540, 595, 623, 638, 640, 648, 649, 650, 654, 664, 683, 693, 722, 794, 831, 865, 884, 898, 931, 968, 1024, 1025, 1054, 1062, 1079, 1090, 1091, 1124, 1126, 1137, 1145, 1148, 1151, 1155, 1156, 1158, 1163, 1171, 1172, 1175, 1185, 1204, 1214, 1269, 1305, 1312, 1316, 1340, 1342, 1347, 1349, 1350, 1355, 1357, 1358, 1360], "location_campaign": [13, 595], "script": [13, 45, 575, 595, 638, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344], "filenames_iq": [14, 596], "nbyte": [14, 16, 26, 596, 600, 615], "4": [14, 16, 26, 30, 31, 60, 89, 118, 119, 126, 366, 370, 427, 477, 509, 510, 559, 596, 600, 615, 620, 621, 654, 683, 712, 713, 720, 759, 760, 781, 782, 1012, 1016, 1061, 1069, 1119, 1151, 1152, 1175, 1204, 1288, 1312, 1313, 1321, 1323, 1330, 1331, 1332, 1333, 1335, 1336, 1340, 1342, 1344, 1347, 1354, 1355, 1356, 1357, 1361], "prf": [14, 596, 1356], "ang_tol": [14, 24, 25, 450, 472, 473, 596, 613, 614, 1092, 1114, 1115], "noise_h": [14, 596], "noise_v": [14, 596], "rconst_h": [14, 596], "rconst_v": [14, 596], "radconst_h": [14, 596], "radconst_v": [14, 596], "mfloss_h": [14, 596], "mfloss_v": [14, 596], "azi_min": [14, 24, 25, 570, 571, 596, 613, 614, 1299, 1300], "azi_max": [14, 24, 25, 570, 571, 596, 613, 614, 1299, 1300], "ele_min": [14, 24, 25, 570, 571, 596, 613, 614, 1299, 1300], "ele_max": [14, 24, 25, 570, 571, 596, 613, 614, 1299, 1300], "rng_min": [14, 24, 25, 500, 570, 571, 596, 613, 614, 1142, 1299, 1300], "rng_max": [14, 24, 25, 500, 570, 571, 596, 613, 614, 1142, 1299, 1300], "rad4alp": [14, 596, 1305], "iq": [14, 430, 432, 439, 441, 443, 445, 449, 456, 458, 462, 470, 471, 476, 596, 1072, 1074, 1081, 1083, 1085, 1087, 1091, 1098, 1100, 1104, 1112, 1113, 1118, 1347], "refer": [14, 18, 24, 25, 30, 34, 46, 60, 62, 89, 91, 118, 122, 125, 127, 128, 130, 131, 132, 135, 136, 137, 138, 139, 143, 146, 193, 218, 260, 284, 293, 321, 330, 358, 372, 373, 374, 428, 432, 433, 437, 442, 446, 447, 450, 451, 452, 454, 459, 460, 465, 472, 473, 475, 477, 478, 479, 481, 483, 494, 496, 499, 503, 506, 507, 508, 510, 512, 513, 515, 517, 518, 540, 541, 551, 566, 596, 598, 602, 613, 614, 620, 625, 640, 654, 656, 683, 685, 712, 716, 719, 750, 751, 752, 753, 754, 756, 759, 760, 761, 762, 763, 766, 767, 771, 776, 777, 778, 780, 781, 782, 783, 787, 790, 837, 862, 904, 928, 937, 965, 974, 1002, 1018, 1019, 1020, 1061, 1070, 1074, 1075, 1079, 1084, 1088, 1089, 1092, 1093, 1094, 1096, 1101, 1102, 1107, 1114, 1115, 1117, 1119, 1120, 1121, 1123, 1125, 1136, 1138, 1141, 1145, 1148, 1149, 1150, 1152, 1154, 1155, 1157, 1159, 1160, 1161, 1163, 1175, 1177, 1204, 1206, 1269, 1270, 1280, 1295, 1347, 1358, 1361], "rainbow": [14, 24, 25, 26, 596, 613, 614, 615], "byte": [14, 16, 26, 380, 408, 596, 600, 615, 1026, 1305, 1355], "numpi": [14, 16, 26, 62, 91, 157, 171, 563, 590, 591, 596, 600, 607, 608, 615, 656, 685, 728, 742, 800, 814, 1177, 1206, 1292, 1305, 1307, 1316, 1317, 1321, 1324, 1329, 1332, 1333, 1335, 1340, 1342, 1343, 1344, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363], "e": [14, 16, 26, 31, 132, 134, 136, 137, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 364, 380, 421, 435, 473, 477, 478, 494, 506, 510, 512, 515, 525, 526, 551, 553, 596, 600, 615, 621, 763, 769, 776, 777, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1010, 1026, 1041, 1051, 1077, 1115, 1119, 1120, 1136, 1148, 1152, 1154, 1157, 1254, 1255, 1280, 1282, 1312, 1324, 1342, 1356, 1360, 1361], "g": [14, 16, 26, 31, 134, 380, 472, 494, 496, 506, 508, 518, 596, 600, 615, 621, 769, 1026, 1061, 1114, 1136, 1138, 1148, 1150, 1161], "go": [14, 16, 26, 135, 136, 437, 463, 483, 484, 485, 487, 488, 503, 512, 525, 526, 553, 570, 571, 596, 600, 615, 771, 776, 781, 782, 783, 1079, 1105, 1125, 1126, 1127, 1129, 1130, 1145, 1154, 1254, 1255, 1282, 1299, 1300, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1350], "float6432": [14, 596], "scan": [14, 18, 30, 31, 60, 89, 130, 131, 132, 139, 187, 203, 204, 206, 217, 254, 270, 271, 273, 283, 287, 303, 304, 306, 320, 324, 340, 341, 343, 357, 372, 428, 481, 510, 512, 539, 543, 556, 561, 568, 574, 596, 598, 602, 620, 621, 654, 683, 761, 762, 763, 764, 767, 780, 831, 847, 848, 850, 861, 898, 914, 915, 917, 927, 931, 947, 948, 950, 964, 968, 984, 985, 987, 1001, 1018, 1062, 1070, 1123, 1152, 1154, 1175, 1204, 1236, 1237, 1268, 1272, 1285, 1290, 1297, 1303, 1305, 1313, 1316, 1326, 1327, 1337, 1348, 1357], "toler": [14, 24, 25, 442, 450, 472, 473, 475, 490, 491, 525, 532, 533, 549, 553, 596, 613, 614, 1054, 1055, 1057, 1084, 1092, 1114, 1115, 1117, 1132, 1133, 1254, 1261, 1262, 1278, 1282], "angl": [14, 24, 25, 60, 66, 67, 89, 95, 96, 118, 119, 120, 138, 139, 143, 144, 145, 146, 187, 204, 216, 254, 271, 287, 304, 324, 341, 425, 450, 472, 473, 493, 496, 500, 508, 510, 512, 513, 520, 521, 522, 523, 527, 532, 533, 539, 543, 544, 549, 553, 561, 564, 565, 574, 591, 596, 613, 614, 654, 660, 661, 683, 689, 690, 712, 713, 714, 759, 760, 772, 773, 774, 778, 780, 787, 788, 789, 790, 831, 848, 860, 898, 915, 931, 948, 968, 985, 1067, 1092, 1114, 1115, 1135, 1138, 1142, 1150, 1152, 1154, 1155, 1175, 1181, 1182, 1204, 1210, 1211, 1249, 1250, 1251, 1252, 1256, 1261, 1262, 1268, 1272, 1273, 1278, 1282, 1290, 1293, 1294, 1303, 1305, 1335, 1337, 1344, 1349, 1358], "distanc": [14, 24, 25, 46, 54, 72, 101, 118, 119, 120, 204, 215, 271, 282, 304, 319, 341, 356, 442, 447, 472, 481, 501, 503, 508, 510, 511, 512, 526, 532, 533, 541, 543, 544, 545, 569, 596, 613, 614, 640, 648, 666, 695, 712, 713, 714, 848, 859, 915, 926, 948, 963, 985, 1000, 1054, 1055, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1084, 1089, 1114, 1123, 1143, 1145, 1150, 1152, 1153, 1154, 1163, 1171, 1187, 1216, 1255, 1261, 1262, 1270, 1272, 1273, 1274, 1298, 1316, 1325, 1330, 1331, 1332, 1356], "psr": [14, 24, 25, 552, 566, 596, 609, 610, 611, 613, 614, 774, 1281, 1295], "estim": [14, 133, 181, 185, 206, 273, 306, 343, 434, 446, 447, 449, 451, 452, 454, 465, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 506, 507, 508, 511, 513, 540, 541, 596, 752, 765, 766, 767, 768, 770, 772, 773, 781, 782, 783, 791, 824, 828, 850, 917, 950, 987, 1062, 1076, 1088, 1089, 1091, 1093, 1094, 1096, 1107, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1148, 1149, 1150, 1153, 1155, 1269, 1270, 1342, 1356], "v": [14, 26, 56, 57, 59, 417, 418, 421, 439, 445, 470, 471, 476, 477, 493, 510, 517, 518, 596, 615, 650, 651, 653, 772, 773, 774, 1037, 1038, 1041, 1048, 1049, 1051, 1081, 1087, 1112, 1113, 1118, 1119, 1135, 1152, 1160, 1161, 1332, 1333, 1344, 1361], "nois": [14, 24, 25, 184, 426, 432, 441, 446, 447, 448, 449, 451, 452, 456, 457, 458, 461, 464, 465, 467, 468, 469, 476, 480, 540, 541, 546, 557, 596, 613, 614, 756, 768, 772, 773, 774, 827, 1068, 1074, 1083, 1088, 1089, 1090, 1091, 1093, 1094, 1098, 1099, 1100, 1103, 1106, 1107, 1109, 1110, 1111, 1118, 1122, 1269, 1270, 1275, 1286, 1351], "power": [14, 24, 25, 136, 138, 146, 183, 441, 446, 448, 451, 452, 454, 456, 457, 459, 460, 464, 465, 467, 468, 480, 483, 484, 485, 486, 487, 488, 496, 541, 546, 596, 613, 614, 750, 752, 772, 773, 774, 775, 776, 778, 790, 791, 826, 1083, 1088, 1090, 1093, 1094, 1096, 1098, 1099, 1101, 1102, 1106, 1107, 1109, 1110, 1122, 1125, 1126, 1127, 1128, 1129, 1130, 1138, 1270, 1275], "adu": [14, 446, 448, 449, 463, 464, 465, 466, 467, 468, 469, 596, 1088, 1090, 1091, 1105, 1106, 1107, 1108, 1109, 1110, 1111], "dynam": [14, 131, 596, 762], "factor": [14, 118, 119, 120, 127, 136, 137, 382, 428, 433, 474, 480, 483, 484, 485, 486, 487, 488, 496, 512, 514, 524, 596, 631, 712, 713, 714, 753, 776, 777, 1028, 1070, 1075, 1116, 1122, 1125, 1126, 1127, 1128, 1129, 1130, 1138, 1154, 1156, 1253, 1323, 1331, 1337, 1353], "convers": [14, 30, 31, 450, 472, 477, 524, 596, 620, 621, 1092, 1114, 1119, 1253, 1355], "dbadu": [14, 446, 465, 467, 596, 1088, 1107, 1109], "dbm": [14, 138, 146, 446, 451, 452, 454, 460, 465, 467, 596, 772, 773, 774, 778, 790, 791, 1088, 1093, 1094, 1096, 1102, 1107, 1109], "dbz": [14, 26, 136, 137, 423, 433, 437, 447, 461, 477, 478, 494, 503, 510, 515, 596, 615, 750, 756, 776, 777, 1075, 1079, 1089, 1103, 1119, 1120, 1136, 1145, 1152, 1157, 1312, 1316, 1323, 1330, 1331, 1337, 1342, 1355, 1357, 1358], "constant": [14, 372, 453, 454, 460, 474, 501, 506, 596, 760, 1018, 1058, 1064, 1065, 1095, 1096, 1102, 1116, 1143, 1148, 1313, 1356], "match": [14, 130, 134, 187, 254, 287, 324, 376, 454, 460, 492, 517, 518, 596, 761, 764, 769, 831, 898, 931, 968, 1022, 1054, 1096, 1102, 1134, 1160, 1161, 1305, 1316, 1323, 1356], "filter": [14, 63, 92, 130, 131, 132, 134, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 435, 454, 460, 504, 505, 506, 507, 508, 596, 657, 686, 722, 726, 728, 735, 742, 747, 759, 760, 761, 762, 763, 764, 767, 768, 769, 775, 781, 782, 783, 848, 855, 859, 860, 861, 862, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1054, 1064, 1065, 1077, 1096, 1102, 1146, 1147, 1148, 1149, 1150, 1178, 1207, 1308, 1316, 1317, 1318, 1322, 1341, 1348, 1351, 1354, 1355, 1356], "loss": [14, 139, 454, 460, 496, 596, 780, 1096, 1102, 1138], "receiv": [14, 138, 139, 143, 146, 454, 460, 596, 778, 780, 787, 790, 1062, 1063, 1096, 1102, 1351], "db": [14, 135, 138, 139, 146, 181, 185, 425, 426, 454, 460, 496, 510, 546, 596, 771, 772, 773, 778, 780, 790, 791, 824, 828, 1067, 1068, 1096, 1102, 1138, 1152, 1275, 1332, 1357, 1358], "minimum": [14, 24, 25, 129, 133, 135, 136, 137, 140, 141, 142, 179, 182, 183, 184, 185, 186, 204, 206, 211, 214, 215, 216, 217, 218, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 437, 442, 446, 450, 452, 459, 465, 472, 473, 477, 478, 482, 492, 494, 496, 500, 504, 505, 510, 512, 527, 529, 540, 541, 553, 596, 613, 614, 750, 757, 759, 760, 765, 766, 767, 768, 771, 772, 773, 774, 775, 776, 777, 781, 782, 783, 784, 785, 786, 822, 825, 826, 827, 828, 829, 848, 850, 855, 858, 859, 860, 861, 862, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 959, 962, 963, 964, 965, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1026, 1061, 1065, 1079, 1084, 1088, 1092, 1094, 1101, 1107, 1114, 1115, 1119, 1120, 1124, 1134, 1136, 1138, 1142, 1146, 1147, 1152, 1154, 1235, 1239, 1256, 1258, 1269, 1270, 1282, 1342, 1353], "maximum": [14, 16, 24, 25, 89, 127, 128, 129, 130, 131, 133, 135, 136, 137, 141, 142, 179, 181, 182, 183, 184, 204, 206, 211, 214, 215, 216, 217, 218, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 428, 433, 437, 442, 450, 459, 472, 473, 475, 478, 479, 481, 484, 487, 488, 492, 494, 500, 506, 510, 511, 512, 524, 539, 541, 546, 556, 557, 558, 596, 600, 613, 614, 683, 753, 754, 757, 759, 760, 761, 762, 765, 766, 767, 768, 771, 772, 773, 774, 775, 776, 777, 781, 782, 783, 785, 786, 822, 824, 825, 826, 827, 848, 850, 855, 858, 859, 860, 861, 862, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 959, 962, 963, 964, 965, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1005, 1026, 1061, 1062, 1063, 1065, 1070, 1075, 1079, 1084, 1092, 1101, 1114, 1115, 1117, 1120, 1121, 1123, 1126, 1129, 1130, 1134, 1136, 1142, 1148, 1152, 1153, 1154, 1204, 1235, 1239, 1253, 1268, 1270, 1275, 1285, 1286, 1287, 1341, 1342, 1358], "keep": [14, 24, 25, 35, 130, 180, 376, 479, 570, 571, 590, 596, 613, 614, 627, 761, 768, 823, 1022, 1121, 1299, 1300, 1316, 1342, 1361, 1363], "k": [15, 125, 208, 209, 210, 212, 213, 214, 234, 275, 276, 277, 279, 280, 281, 308, 309, 310, 316, 317, 318, 345, 346, 347, 353, 354, 355, 413, 417, 418, 420, 421, 437, 477, 496, 506, 517, 597, 719, 852, 853, 854, 856, 857, 858, 878, 919, 920, 921, 923, 924, 925, 952, 953, 954, 960, 961, 962, 989, 990, 991, 997, 998, 999, 1033, 1037, 1038, 1040, 1041, 1045, 1048, 1049, 1050, 1051, 1079, 1119, 1138, 1148, 1160, 1322, 1329, 1332, 1333, 1361], "band": [15, 21, 380, 437, 442, 476, 483, 498, 506, 507, 508, 515, 516, 597, 605, 750, 752, 756, 1026, 1079, 1084, 1118, 1125, 1140, 1148, 1149, 1150, 1157, 1158, 1348, 1356], "arm": [15, 33, 55, 364, 365, 366, 378, 379, 495, 597, 623, 649, 1010, 1011, 1012, 1024, 1025, 1065, 1137, 1172, 1235, 1241, 1305, 1318, 1333, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1360, 1363], "zenith": [15, 597], "kazr": [15, 597], "ingest": [15, 597, 1347, 1348], "rmax": [16, 179, 459, 553, 600, 822, 1101, 1282], "noxp": [17, 601], "iphex": [17, 601], "gain": [18, 19, 20, 30, 31, 33, 138, 146, 454, 496, 602, 603, 604, 620, 621, 623, 778, 790, 1096, 1138], "nodata": [18, 19, 20, 30, 31, 602, 603, 604, 620, 621, 1305], "nan": [18, 19, 20, 130, 159, 178, 179, 183, 508, 590, 591, 602, 603, 604, 607, 608, 730, 749, 761, 775, 802, 821, 822, 826, 1150, 1340, 1355, 1356], "undetect": [18, 19, 20, 30, 31, 602, 603, 604, 620, 621, 1305], "use_file_convers": [18, 19, 20, 602, 603, 604], "time_ref": [18, 30, 598, 602, 620], "convert": [18, 19, 20, 23, 30, 31, 54, 126, 138, 478, 494, 556, 574, 577, 602, 603, 604, 612, 620, 621, 648, 720, 778, 1120, 1136, 1171, 1285, 1303, 1342, 1356], "what": [18, 19, 20, 30, 130, 598, 602, 603, 604, 620, 761, 793, 1065, 1312, 1321, 1349, 1351, 1354, 1361, 1363], "user": [18, 19, 20, 26, 45, 63, 92, 352, 380, 464, 468, 477, 573, 602, 603, 604, 615, 638, 657, 686, 751, 752, 764, 996, 1026, 1106, 1110, 1119, 1178, 1207, 1302, 1313, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363], "physic": [18, 19, 20, 30, 31, 33, 428, 478, 494, 590, 591, 602, 603, 604, 607, 608, 620, 621, 623, 779, 1054, 1070, 1120, 1136, 1342, 1355, 1357], "otherwis": [18, 19, 20, 130, 389, 410, 417, 437, 442, 448, 450, 457, 459, 463, 464, 468, 472, 473, 475, 482, 484, 487, 488, 493, 496, 501, 519, 531, 563, 590, 591, 602, 603, 604, 607, 608, 761, 781, 782, 1037, 1048, 1079, 1084, 1090, 1092, 1099, 1101, 1105, 1106, 1110, 1114, 1115, 1117, 1124, 1126, 1129, 1130, 1135, 1138, 1143, 1260, 1292], "pass": [18, 19, 20, 121, 123, 124, 130, 131, 132, 203, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 270, 271, 278, 282, 283, 284, 303, 304, 311, 312, 313, 314, 315, 316, 319, 320, 321, 340, 341, 348, 349, 350, 351, 352, 353, 356, 357, 358, 362, 363, 372, 374, 492, 506, 602, 603, 604, 715, 717, 718, 761, 762, 763, 847, 848, 855, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 890, 893, 895, 897, 914, 915, 922, 926, 927, 928, 947, 948, 955, 956, 957, 958, 959, 960, 963, 964, 965, 984, 985, 992, 993, 994, 995, 996, 997, 1000, 1001, 1002, 1008, 1009, 1018, 1020, 1061, 1065, 1134, 1148, 1312, 1313, 1350, 1353, 1356], "mid": [18, 30, 598, 602, 620], "expect": [18, 30, 218, 284, 321, 358, 508, 598, 602, 620, 862, 928, 965, 1002, 1150, 1357, 1361], "starttim": [18, 30, 598, 602, 620], "middl": [18, 25, 30, 598, 602, 614, 620], "endtim": [18, 30, 598, 602, 620], "include_dataset": [19, 603], "exclude_dataset": [19, 603], "dataset": [19, 30, 31, 235, 315, 352, 372, 374, 449, 495, 534, 537, 545, 603, 620, 621, 879, 959, 996, 1018, 1020, 1062, 1063, 1091, 1137, 1263, 1266, 1274, 1305, 1312, 1340, 1343, 1344, 1347, 1349], "given": [19, 37, 40, 41, 42, 44, 46, 48, 60, 66, 67, 68, 69, 72, 73, 74, 75, 76, 89, 95, 96, 97, 98, 101, 102, 103, 104, 105, 130, 139, 143, 144, 146, 153, 155, 156, 157, 158, 160, 162, 163, 167, 169, 170, 171, 172, 174, 175, 177, 179, 182, 183, 204, 209, 210, 230, 231, 232, 236, 237, 238, 239, 248, 250, 251, 252, 253, 271, 276, 277, 304, 309, 310, 311, 312, 341, 346, 347, 348, 349, 417, 437, 459, 464, 468, 493, 496, 503, 509, 519, 539, 544, 545, 554, 555, 568, 603, 629, 633, 634, 635, 637, 640, 642, 654, 660, 661, 662, 663, 666, 667, 668, 669, 670, 683, 689, 690, 691, 692, 695, 696, 697, 698, 699, 724, 726, 727, 728, 729, 731, 733, 734, 738, 740, 741, 742, 743, 745, 746, 748, 759, 760, 761, 775, 780, 787, 788, 790, 796, 798, 799, 800, 801, 803, 805, 806, 810, 812, 813, 814, 815, 817, 818, 820, 822, 825, 826, 848, 853, 854, 874, 875, 876, 880, 881, 882, 883, 892, 894, 895, 896, 897, 915, 920, 921, 948, 953, 954, 955, 956, 985, 990, 991, 992, 993, 1037, 1048, 1054, 1062, 1063, 1064, 1065, 1079, 1101, 1106, 1110, 1135, 1138, 1145, 1151, 1163, 1165, 1175, 1181, 1182, 1183, 1184, 1187, 1188, 1189, 1190, 1191, 1204, 1210, 1211, 1212, 1213, 1216, 1217, 1218, 1219, 1220, 1233, 1268, 1273, 1274, 1283, 1284, 1297, 1340, 1342, 1347, 1356], "dataset1": [19, 603], "dataset2": [19, 603], "vertic": [20, 60, 89, 128, 130, 204, 205, 206, 211, 215, 216, 217, 218, 226, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 319, 320, 321, 341, 342, 343, 351, 356, 357, 358, 380, 433, 439, 440, 441, 442, 445, 450, 457, 458, 459, 470, 471, 472, 475, 476, 479, 490, 491, 492, 493, 499, 501, 503, 512, 513, 556, 574, 604, 654, 683, 754, 756, 761, 767, 848, 849, 850, 855, 859, 860, 861, 862, 870, 873, 875, 877, 879, 881, 883, 891, 893, 895, 897, 915, 916, 917, 922, 926, 927, 928, 948, 949, 950, 958, 963, 964, 965, 985, 986, 987, 995, 1000, 1001, 1002, 1026, 1062, 1063, 1075, 1081, 1082, 1083, 1084, 1087, 1092, 1099, 1100, 1101, 1112, 1113, 1114, 1117, 1118, 1121, 1132, 1133, 1134, 1135, 1141, 1143, 1145, 1154, 1155, 1175, 1204, 1285, 1303, 1333, 1343, 1344, 1347, 1356, 1357], "profil": [20, 31, 56, 127, 128, 130, 364, 365, 433, 442, 450, 459, 472, 475, 492, 495, 507, 508, 509, 512, 513, 531, 568, 604, 621, 650, 753, 754, 759, 760, 761, 1010, 1011, 1075, 1084, 1092, 1101, 1114, 1117, 1134, 1137, 1149, 1150, 1151, 1154, 1155, 1260, 1297, 1308, 1310, 1339, 1345, 1347, 1355, 1356, 1359, 1361], "those": [20, 63, 70, 92, 99, 131, 132, 151, 376, 451, 559, 576, 604, 657, 664, 686, 693, 722, 762, 763, 794, 1022, 1064, 1065, 1093, 1178, 1185, 1207, 1214, 1288, 1304, 1363], "vol2bird": [20, 604], "pattern": [21, 512, 605, 759, 760, 1154, 1239, 1332], "25": [22, 477, 606, 781, 782, 1062, 1063, 1119, 1312, 1316, 1332, 1333, 1336, 1340, 1349, 1354, 1355, 1356, 1357], "889375": [22, 606], "418": [22, 606], "4794775": [22, 606], "243": [22, 606], "png": [22, 189, 225, 241, 256, 289, 326, 606, 833, 869, 885, 900, 933, 970], "web": [22, 362, 372, 380, 606, 1008, 1018, 1026, 1312, 1313], "mercat": [22, 246, 606, 890], "radx_dir": [23, 612], "first": [23, 27, 33, 60, 73, 89, 102, 130, 132, 133, 135, 137, 364, 365, 375, 378, 454, 478, 494, 506, 507, 508, 515, 534, 536, 539, 564, 565, 612, 617, 623, 654, 667, 683, 696, 761, 763, 765, 771, 777, 1010, 1011, 1021, 1024, 1054, 1065, 1096, 1120, 1136, 1148, 1149, 1150, 1157, 1175, 1188, 1204, 1217, 1263, 1265, 1268, 1293, 1294, 1305, 1308, 1312, 1313, 1326, 1335, 1340, 1342, 1351, 1353, 1354, 1355, 1356, 1358, 1361], "radxconvert": [23, 612], "radx": [23, 612], "instal": [23, 121, 123, 124, 134, 380, 576, 612, 715, 717, 718, 764, 769, 1026, 1355, 1362, 1363], "filenames_psr": [24, 25, 613, 614], "undo_txcorr": [24, 25, 613, 614], "cpi": [24, 25, 609, 613, 614], "mean": [24, 29, 118, 140, 430, 432, 442, 445, 449, 450, 459, 472, 480, 517, 520, 521, 527, 529, 530, 540, 541, 546, 554, 564, 565, 613, 619, 712, 784, 1072, 1074, 1084, 1087, 1091, 1092, 1101, 1114, 1122, 1160, 1239, 1249, 1250, 1256, 1258, 1259, 1269, 1270, 1275, 1283, 1293, 1294, 1312, 1313, 1354, 1355, 1356, 1358, 1361], "5": [24, 25, 26, 46, 130, 134, 136, 183, 204, 211, 214, 215, 216, 217, 218, 234, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 379, 437, 477, 478, 479, 482, 484, 490, 491, 494, 499, 503, 510, 512, 514, 539, 556, 613, 614, 615, 640, 750, 752, 759, 760, 761, 764, 769, 772, 773, 774, 775, 776, 781, 782, 783, 791, 826, 848, 855, 858, 859, 860, 861, 862, 878, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002, 1025, 1079, 1119, 1120, 1121, 1124, 1126, 1132, 1133, 1136, 1141, 1145, 1152, 1154, 1156, 1163, 1239, 1268, 1285, 1307, 1308, 1313, 1317, 1321, 1324, 1326, 1327, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1340, 1341, 1342, 1343, 1344, 1345, 1349, 1351, 1354, 1355, 1356, 1357, 1358, 1361], "correct": [24, 25, 69, 72, 98, 101, 151, 179, 180, 181, 182, 183, 184, 185, 186, 370, 435, 495, 496, 506, 613, 614, 663, 666, 692, 695, 794, 822, 823, 824, 825, 826, 827, 828, 829, 1016, 1077, 1137, 1138, 1148, 1184, 1187, 1213, 1216, 1241, 1305, 1308, 1309, 1313, 1323, 1343, 1347, 1351, 1356, 1359, 1361], "transmit": [24, 25, 454, 613, 614, 1096, 1351], "remov": [24, 25, 46, 60, 71, 72, 89, 100, 101, 130, 135, 179, 180, 181, 182, 183, 184, 185, 186, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 386, 411, 417, 418, 449, 478, 492, 494, 541, 613, 614, 640, 654, 665, 666, 683, 694, 695, 750, 751, 752, 761, 766, 767, 771, 775, 781, 782, 783, 822, 823, 824, 825, 826, 827, 828, 829, 848, 855, 859, 860, 861, 862, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1031, 1037, 1038, 1044, 1048, 1049, 1091, 1120, 1134, 1136, 1163, 1175, 1186, 1187, 1204, 1215, 1216, 1270, 1307, 1317, 1323, 1332, 1342, 1351, 1354, 1361], "signal": [24, 25, 26, 183, 184, 426, 430, 432, 435, 441, 443, 446, 448, 449, 451, 452, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 480, 496, 540, 541, 546, 613, 614, 615, 756, 768, 772, 773, 774, 775, 791, 826, 827, 1068, 1072, 1074, 1077, 1083, 1085, 1088, 1090, 1091, 1093, 1094, 1098, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1122, 1138, 1269, 1270, 1275], "low_prf": [24, 25, 613, 614], "intermediate_prf": [24, 25, 613, 614], "high_prf": [24, 25, 613, 614], "within": [24, 45, 62, 63, 91, 92, 129, 130, 131, 132, 133, 137, 141, 142, 151, 179, 218, 284, 321, 358, 427, 442, 450, 459, 472, 475, 479, 503, 504, 505, 510, 532, 533, 542, 543, 545, 554, 555, 613, 638, 656, 657, 685, 686, 722, 757, 761, 762, 763, 764, 765, 766, 767, 768, 777, 781, 782, 783, 785, 786, 794, 822, 862, 928, 965, 1002, 1061, 1064, 1065, 1069, 1084, 1092, 1101, 1114, 1117, 1121, 1145, 1146, 1147, 1152, 1177, 1178, 1206, 1207, 1248, 1261, 1262, 1271, 1272, 1274, 1283, 1284, 1304, 1312, 1313, 1323, 1324, 1347, 1351, 1353, 1357, 1361, 1363], "step": [24, 218, 284, 321, 358, 380, 442, 450, 452, 459, 472, 473, 475, 510, 512, 541, 548, 560, 613, 759, 760, 773, 862, 928, 965, 1002, 1026, 1084, 1092, 1094, 1101, 1114, 1115, 1117, 1152, 1154, 1270, 1277, 1289, 1312, 1332, 1333, 1342, 1363], "taken": [24, 118, 126, 136, 137, 204, 271, 304, 341, 532, 533, 540, 554, 555, 613, 712, 720, 776, 777, 848, 915, 948, 985, 1241, 1261, 1262, 1269, 1283, 1284, 1325], "fold": [25, 130, 131, 480, 614, 761, 762, 1122, 1312, 1356], "positive_awai": [25, 614], "complex": [25, 34, 446, 448, 457, 463, 464, 465, 466, 467, 468, 469, 611, 614, 625, 1088, 1090, 1099, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1159], "spectra": [25, 28, 29, 33, 89, 429, 431, 432, 438, 440, 443, 446, 448, 451, 455, 457, 462, 463, 464, 465, 466, 467, 468, 469, 480, 540, 552, 562, 571, 611, 614, 618, 619, 623, 683, 1071, 1073, 1074, 1080, 1082, 1085, 1088, 1090, 1093, 1097, 1099, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1122, 1204, 1238, 1245, 1269, 1281, 1291, 1300], "so": [25, 131, 204, 215, 271, 282, 304, 319, 341, 356, 376, 425, 552, 614, 762, 770, 848, 859, 915, 926, 948, 963, 985, 1000, 1022, 1065, 1067, 1281, 1305, 1312, 1313, 1342, 1355, 1356, 1357, 1361, 1363], "doppler": [25, 89, 118, 130, 131, 132, 179, 429, 430, 431, 432, 435, 446, 449, 451, 465, 480, 492, 517, 540, 541, 614, 683, 712, 761, 762, 763, 822, 1071, 1072, 1073, 1074, 1077, 1088, 1091, 1093, 1107, 1122, 1134, 1160, 1204, 1269, 1270, 1305, 1306, 1309, 1310, 1325, 1335, 1347, 1348, 1358, 1359, 1361], "revers": [25, 204, 215, 271, 282, 304, 319, 341, 356, 376, 506, 614, 848, 859, 915, 926, 948, 963, 985, 1000, 1022, 1148], "veloc": [25, 26, 40, 73, 89, 102, 130, 131, 132, 179, 427, 429, 430, 480, 490, 491, 492, 493, 501, 517, 518, 524, 568, 614, 615, 633, 667, 683, 696, 761, 762, 763, 822, 1069, 1071, 1072, 1122, 1132, 1133, 1134, 1135, 1143, 1160, 1161, 1188, 1204, 1217, 1253, 1297, 1305, 1306, 1309, 1310, 1312, 1321, 1325, 1333, 1335, 1347, 1348, 1354, 1355, 1358, 1359, 1361], "awai": [25, 614, 1356], "routin": [26, 30, 31, 33, 378, 576, 615, 620, 621, 623, 793, 1024, 1064, 1305, 1347, 1355, 1357], "rainbow5": [26, 615], "version": [26, 46, 150, 503, 504, 505, 517, 575, 615, 640, 760, 1056, 1145, 1146, 1147, 1160, 1163, 1248, 1305, 1347, 1355, 1358, 1360, 1361, 1363], "22": [26, 138, 143, 146, 615, 767, 778, 787, 790, 1312, 1314, 1321, 1340, 1359], "3": [26, 60, 89, 118, 119, 127, 128, 130, 131, 135, 139, 146, 179, 181, 182, 185, 216, 370, 374, 380, 434, 474, 477, 478, 492, 494, 510, 512, 541, 548, 560, 615, 654, 683, 712, 713, 753, 754, 761, 762, 771, 780, 790, 822, 824, 825, 828, 860, 1016, 1020, 1026, 1061, 1062, 1063, 1065, 1076, 1116, 1119, 1120, 1134, 1136, 1152, 1154, 1175, 1204, 1235, 1239, 1270, 1277, 1289, 1307, 1308, 1310, 1313, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363], "34": [26, 494, 515, 615, 1136, 1157, 1342, 1345, 1357, 1359], "16": [26, 141, 477, 483, 504, 517, 615, 781, 785, 1119, 1125, 1146, 1160, 1307, 1308, 1316, 1328, 1334, 1341, 1351, 1355, 1357, 1358, 1361], "35": [26, 132, 136, 137, 437, 615, 763, 776, 777, 1079, 1321, 1330, 1332, 1333, 1354], "sinc": [26, 428, 493, 506, 519, 615, 1070, 1135, 1148, 1342, 1350, 1353, 1356, 1357, 1358], "evolv": [26, 615], "constantli": [26, 615], "guaranti": [26, 615], "work": [26, 122, 125, 233, 234, 287, 315, 324, 352, 372, 374, 480, 515, 615, 716, 719, 877, 878, 931, 959, 968, 996, 1018, 1020, 1122, 1157, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363], "necessari": [26, 615], "adapt": [26, 118, 138, 139, 143, 146, 615, 712, 778, 780, 787, 790, 1305, 1363], "code": [26, 45, 130, 501, 517, 615, 638, 761, 1143, 1160, 1305, 1307, 1308, 1310, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1357, 1360, 1363], "accord": [26, 376, 425, 437, 444, 451, 452, 483, 484, 485, 487, 488, 548, 560, 615, 756, 758, 1022, 1065, 1067, 1079, 1086, 1093, 1094, 1125, 1126, 1127, 1129, 1130, 1277, 1289], "its": [26, 231, 506, 563, 615, 779, 791, 875, 1148, 1292, 1347, 1356, 1360, 1361, 1363], "own": [26, 576, 615, 1321, 1347, 1357, 1360], "rais": [26, 46, 47, 53, 61, 62, 64, 73, 90, 91, 93, 102, 149, 363, 375, 389, 417, 418, 615, 640, 641, 647, 655, 656, 658, 667, 684, 685, 687, 696, 1009, 1021, 1037, 1038, 1048, 1049, 1163, 1164, 1170, 1176, 1177, 1179, 1188, 1205, 1206, 1208, 1217], "an": [26, 30, 31, 40, 44, 45, 46, 54, 60, 62, 63, 66, 67, 73, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 96, 102, 111, 112, 113, 114, 115, 116, 117, 128, 130, 131, 132, 136, 137, 147, 150, 159, 179, 181, 182, 183, 184, 185, 186, 187, 209, 276, 309, 346, 352, 376, 379, 380, 422, 443, 450, 451, 452, 472, 482, 495, 524, 533, 537, 538, 554, 555, 559, 560, 572, 574, 577, 590, 591, 607, 608, 615, 620, 621, 633, 637, 638, 640, 648, 654, 656, 657, 660, 661, 667, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 689, 690, 696, 705, 706, 707, 708, 709, 710, 711, 730, 754, 761, 762, 763, 764, 775, 776, 777, 802, 822, 824, 825, 826, 827, 828, 829, 831, 853, 920, 953, 990, 996, 1022, 1025, 1026, 1042, 1052, 1054, 1061, 1062, 1064, 1065, 1085, 1092, 1093, 1094, 1114, 1124, 1137, 1163, 1171, 1175, 1177, 1178, 1181, 1182, 1188, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1210, 1211, 1217, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1253, 1262, 1266, 1267, 1283, 1284, 1288, 1289, 1301, 1303, 1305, 1310, 1313, 1316, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1334, 1335, 1336, 1337, 1338, 1340, 1342, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1358, 1359, 1360, 1361, 1362], "issu": [26, 45, 150, 287, 324, 376, 379, 615, 638, 931, 968, 1022, 1025, 1305, 1310, 1311, 1314, 1347, 1359, 1360, 1361, 1363], "upstream": [26, 615, 1361], "reflect": [26, 62, 91, 127, 128, 129, 133, 136, 137, 141, 142, 151, 179, 182, 183, 206, 273, 306, 343, 426, 428, 429, 431, 433, 434, 438, 440, 441, 447, 453, 454, 455, 456, 457, 460, 461, 463, 464, 468, 474, 477, 478, 479, 481, 484, 486, 487, 488, 489, 494, 496, 503, 504, 506, 510, 512, 514, 515, 551, 615, 656, 685, 722, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 764, 765, 766, 767, 768, 772, 773, 775, 776, 777, 781, 782, 783, 785, 786, 794, 822, 825, 826, 850, 917, 950, 987, 1005, 1054, 1065, 1068, 1070, 1071, 1073, 1075, 1076, 1080, 1082, 1083, 1089, 1095, 1096, 1097, 1098, 1099, 1102, 1103, 1105, 1106, 1110, 1116, 1119, 1120, 1121, 1123, 1126, 1128, 1129, 1130, 1131, 1136, 1138, 1145, 1146, 1148, 1152, 1154, 1156, 1157, 1177, 1206, 1244, 1246, 1247, 1280, 1306, 1308, 1309, 1310, 1312, 1313, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1325, 1328, 1331, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1345, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359], "dbuz": [26, 615], "dbzv": [26, 615], "dbuzv": [26, 615], "vu": [26, 615], "vv": [26, 615], "vvu": [26, 615], "spectrum": [26, 29, 431, 432, 480, 540, 541, 615, 619, 1073, 1074, 1122, 1269, 1270, 1305, 1358], "width": [26, 127, 138, 139, 146, 232, 234, 248, 315, 352, 431, 432, 433, 453, 615, 753, 778, 779, 780, 790, 791, 876, 878, 892, 959, 996, 1065, 1073, 1074, 1075, 1095, 1358], "w": [26, 77, 106, 132, 138, 143, 146, 437, 477, 481, 496, 503, 510, 512, 615, 671, 700, 763, 778, 787, 790, 1079, 1119, 1123, 1138, 1145, 1152, 1154, 1192, 1221, 1343, 1355, 1356, 1357], "wu": [26, 615, 1061, 1353], "wv": [26, 615], "wvu": [26, 615], "differenti": [26, 34, 129, 133, 136, 137, 141, 142, 179, 182, 438, 439, 440, 441, 445, 449, 463, 464, 479, 481, 485, 488, 503, 504, 505, 506, 507, 508, 510, 513, 615, 625, 750, 751, 752, 757, 765, 767, 768, 772, 773, 776, 777, 781, 782, 783, 785, 786, 822, 825, 1080, 1081, 1082, 1083, 1087, 1091, 1105, 1106, 1121, 1123, 1127, 1130, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1155, 1159, 1325, 1347, 1357], "zdr": [26, 182, 423, 436, 437, 503, 615, 751, 752, 756, 767, 768, 772, 773, 781, 782, 783, 791, 825, 1078, 1079, 1145, 1355, 1357], "zdru": [26, 615], "co": [26, 118, 122, 125, 179, 478, 493, 494, 526, 615, 712, 716, 719, 766, 767, 768, 781, 782, 783, 822, 1120, 1135, 1136, 1255, 1342], "correl": [26, 179, 182, 183, 479, 481, 501, 503, 510, 512, 528, 530, 551, 615, 766, 767, 768, 775, 781, 782, 783, 822, 825, 826, 1121, 1123, 1143, 1145, 1152, 1154, 1257, 1259, 1280, 1324, 1325, 1341, 1342], "coeffici": [26, 136, 138, 146, 179, 437, 477, 479, 481, 482, 503, 510, 528, 530, 531, 551, 615, 750, 751, 752, 772, 773, 774, 776, 778, 790, 822, 1079, 1119, 1121, 1123, 1124, 1145, 1152, 1257, 1259, 1260, 1280, 1324, 1325, 1341], "rhohv": [26, 182, 183, 423, 433, 436, 437, 444, 448, 457, 458, 469, 503, 510, 512, 615, 756, 766, 767, 768, 775, 781, 782, 783, 825, 826, 1075, 1078, 1079, 1086, 1090, 1099, 1100, 1111, 1145, 1152, 1154, 1324, 1357, 1358], "rhohvu": [26, 615], "phase": [26, 34, 129, 132, 133, 136, 137, 141, 142, 182, 438, 439, 445, 449, 463, 466, 472, 479, 481, 485, 488, 501, 503, 504, 505, 506, 507, 508, 513, 615, 625, 750, 751, 752, 757, 763, 765, 767, 768, 776, 777, 781, 782, 783, 785, 786, 825, 1080, 1081, 1087, 1091, 1105, 1108, 1114, 1121, 1123, 1127, 1130, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1155, 1159, 1325, 1347, 1351, 1357], "phidp": [26, 129, 133, 136, 137, 141, 142, 182, 504, 505, 506, 615, 751, 752, 757, 765, 767, 768, 776, 777, 781, 782, 783, 785, 786, 825, 1146, 1147, 1148, 1347, 1357], "uphidp": [26, 615], "uphidpu": [26, 615], "kdp": [26, 136, 137, 423, 437, 485, 488, 503, 504, 505, 506, 507, 508, 615, 768, 776, 777, 781, 782, 783, 1079, 1127, 1130, 1145, 1146, 1147, 1148, 1149, 1150, 1343, 1347], "ukdp": [26, 615], "ukdpu": [26, 615], "qualiti": [26, 138, 139, 143, 146, 183, 507, 508, 615, 756, 775, 778, 780, 787, 790, 826, 1149, 1150, 1312], "sqi": [26, 615], "sqiu": [26, 615], "sqiv": [26, 615], "sqivu": [26, 615], "temperatur": [26, 135, 185, 479, 499, 503, 510, 512, 615, 751, 752, 759, 760, 766, 767, 768, 771, 781, 782, 783, 828, 1121, 1141, 1145, 1152, 1154, 1343, 1357], "temp": [26, 615, 1305, 1357], "bin": [26, 60, 89, 118, 119, 120, 133, 141, 142, 375, 442, 450, 459, 472, 475, 480, 500, 504, 505, 514, 539, 540, 546, 557, 615, 654, 683, 712, 713, 714, 752, 765, 766, 767, 768, 772, 785, 786, 1021, 1084, 1092, 1101, 1114, 1117, 1122, 1142, 1146, 1147, 1156, 1175, 1204, 1268, 1269, 1275, 1286, 1316, 1351, 1358], "respect": [26, 60, 89, 144, 145, 425, 478, 479, 481, 494, 503, 510, 511, 512, 514, 515, 615, 654, 683, 779, 788, 789, 791, 1067, 1120, 1121, 1123, 1136, 1145, 1152, 1153, 1154, 1156, 1157, 1175, 1204], "iso0": [26, 135, 181, 437, 479, 481, 499, 503, 510, 511, 512, 516, 615, 751, 759, 760, 766, 767, 771, 781, 782, 783, 824, 1079, 1121, 1123, 1141, 1145, 1152, 1153, 1154, 1158], "visibl": [26, 186, 496, 553, 615, 758, 829, 1138, 1282, 1347], "digit": [26, 218, 284, 321, 358, 496, 590, 591, 607, 608, 615, 862, 928, 965, 1002, 1138, 1305, 1355], "elev": [26, 31, 60, 67, 72, 83, 89, 96, 101, 112, 118, 119, 120, 138, 139, 143, 144, 145, 146, 179, 187, 204, 206, 211, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 254, 271, 273, 278, 282, 283, 284, 287, 304, 306, 314, 315, 319, 320, 321, 324, 341, 343, 351, 352, 356, 357, 358, 376, 425, 450, 472, 473, 493, 496, 500, 508, 510, 533, 539, 549, 553, 556, 561, 615, 621, 654, 661, 666, 677, 683, 690, 695, 706, 712, 713, 714, 759, 760, 767, 768, 770, 772, 773, 774, 778, 779, 780, 781, 782, 783, 787, 788, 789, 790, 791, 822, 831, 848, 850, 855, 859, 860, 861, 862, 875, 881, 883, 893, 895, 897, 898, 915, 917, 922, 926, 927, 928, 931, 948, 950, 958, 959, 963, 964, 965, 968, 985, 987, 995, 996, 1000, 1001, 1002, 1022, 1062, 1067, 1092, 1114, 1115, 1135, 1138, 1142, 1150, 1152, 1175, 1182, 1187, 1198, 1204, 1211, 1216, 1227, 1262, 1268, 1278, 1282, 1285, 1290, 1305, 1316, 1341, 1349, 1355, 1356, 1357, 1358], "model": [26, 30, 31, 60, 89, 118, 119, 131, 218, 284, 321, 358, 373, 379, 477, 496, 510, 512, 531, 615, 620, 621, 654, 683, 712, 713, 759, 760, 762, 862, 928, 965, 1002, 1019, 1025, 1119, 1138, 1152, 1154, 1175, 1204, 1260, 1343, 1357], "dem": [26, 218, 284, 321, 358, 496, 615, 862, 928, 965, 1002, 1138, 1347], "vi": [26, 437, 503, 615, 1079, 1145, 1343, 1355, 1357], "introduc": [26, 377, 508, 510, 615, 1023, 1150, 1152], "swissbirdradar": [29, 619, 1305], "degre": [29, 48, 56, 70, 71, 99, 100, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136, 137, 144, 145, 185, 187, 204, 209, 210, 218, 230, 232, 236, 238, 246, 248, 250, 252, 254, 271, 276, 277, 284, 287, 304, 309, 310, 313, 315, 321, 324, 341, 346, 347, 350, 352, 358, 442, 453, 472, 510, 517, 521, 523, 532, 533, 543, 544, 545, 556, 565, 569, 619, 642, 650, 664, 665, 693, 694, 712, 713, 714, 715, 716, 717, 718, 719, 720, 770, 771, 776, 777, 788, 789, 828, 831, 848, 853, 854, 862, 874, 876, 880, 882, 890, 892, 894, 896, 898, 915, 920, 921, 928, 931, 948, 953, 954, 957, 959, 965, 968, 985, 990, 991, 994, 996, 1002, 1084, 1095, 1114, 1152, 1160, 1165, 1185, 1186, 1214, 1215, 1250, 1252, 1261, 1262, 1272, 1273, 1274, 1285, 1294, 1298, 1337, 1340, 1358, 1361], "abov": [29, 56, 57, 60, 62, 89, 91, 127, 128, 130, 134, 135, 136, 137, 141, 153, 167, 179, 181, 182, 183, 185, 209, 210, 276, 277, 309, 310, 346, 347, 425, 426, 437, 477, 478, 482, 494, 504, 510, 512, 517, 539, 540, 541, 544, 545, 619, 650, 651, 654, 656, 683, 685, 724, 738, 750, 751, 752, 753, 754, 759, 760, 761, 764, 766, 767, 769, 771, 775, 776, 777, 781, 782, 783, 785, 796, 810, 822, 824, 825, 826, 828, 853, 854, 920, 921, 953, 954, 990, 991, 1005, 1065, 1067, 1068, 1079, 1119, 1120, 1124, 1136, 1146, 1152, 1154, 1160, 1175, 1177, 1204, 1206, 1268, 1269, 1270, 1273, 1274, 1310, 1316, 1331, 1333, 1339, 1344, 1345, 1347, 1349, 1351, 1356, 1359, 1361, 1363], "sea": [29, 56, 57, 60, 89, 517, 619, 650, 651, 654, 683, 1160, 1175, 1204, 1361], "level": [29, 30, 31, 48, 54, 56, 57, 60, 77, 89, 106, 225, 226, 227, 228, 233, 234, 235, 237, 239, 241, 242, 243, 244, 249, 251, 253, 372, 373, 374, 380, 381, 446, 451, 465, 481, 501, 510, 511, 512, 515, 517, 540, 541, 619, 620, 621, 642, 648, 650, 651, 654, 671, 683, 700, 751, 752, 869, 870, 871, 872, 877, 878, 879, 881, 883, 885, 886, 887, 888, 893, 895, 897, 1018, 1019, 1020, 1026, 1027, 1088, 1093, 1107, 1123, 1143, 1152, 1153, 1154, 1157, 1160, 1165, 1171, 1175, 1192, 1204, 1221, 1269, 1270, 1332, 1333, 1336, 1341, 1347, 1353, 1355, 1357, 1358, 1361], "meter": [29, 56, 57, 58, 59, 71, 72, 73, 100, 101, 102, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 187, 218, 254, 284, 287, 312, 315, 321, 324, 349, 352, 358, 426, 478, 494, 501, 506, 509, 515, 517, 543, 569, 619, 650, 651, 652, 653, 665, 666, 667, 694, 695, 696, 712, 713, 714, 715, 716, 717, 718, 719, 720, 771, 831, 862, 898, 928, 931, 956, 959, 965, 968, 993, 996, 1002, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1064, 1065, 1068, 1120, 1136, 1143, 1148, 1151, 1157, 1160, 1186, 1187, 1188, 1215, 1216, 1217, 1235, 1272, 1298, 1316, 1344, 1353, 1356, 1358, 1361], "compress": [30, 31, 362, 370, 371, 620, 621, 1008, 1016, 1017], "gzip": [30, 31, 362, 370, 371, 620, 621, 1008, 1016, 1017], "compression_opt": [30, 31, 620, 621], "6": [30, 31, 140, 141, 142, 182, 477, 479, 484, 492, 496, 499, 503, 504, 505, 512, 541, 548, 560, 620, 621, 756, 759, 760, 784, 785, 786, 825, 1119, 1121, 1126, 1134, 1138, 1141, 1145, 1146, 1147, 1154, 1270, 1277, 1289, 1313, 1316, 1321, 1322, 1325, 1326, 1329, 1341, 1343, 1344, 1347, 1349, 1351, 1354, 1355, 1356, 1357, 1358, 1360, 1363], "undefined_valu": [30, 31, 620, 621], "odim_convent": [30, 31, 620, 621], "v2_2": [30, 31, 620, 621], "write": [30, 31, 32, 33, 378, 379, 380, 381, 382, 620, 621, 622, 623, 1024, 1025, 1026, 1027, 1028, 1162, 1173, 1305, 1310, 1311, 1350], "eumetnet": [30, 31, 620, 621], "opera": [30, 31, 620, 621, 1305, 1347], "compliant": [30, 31, 378, 620, 621, 1024], "produc": [30, 31, 33, 369, 378, 380, 383, 451, 452, 513, 518, 620, 621, 623, 764, 1015, 1024, 1026, 1030, 1093, 1094, 1155, 1161, 1347, 1361], "follow": [30, 31, 33, 132, 179, 182, 183, 378, 379, 381, 382, 421, 477, 480, 496, 503, 506, 510, 512, 620, 621, 623, 763, 775, 822, 825, 826, 1024, 1025, 1027, 1028, 1041, 1051, 1064, 1065, 1119, 1122, 1138, 1145, 1148, 1152, 1154, 1312, 1340, 1347, 1355, 1356, 1357, 1360, 1361], "inform": [30, 31, 40, 46, 60, 77, 89, 106, 130, 136, 137, 164, 176, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 366, 368, 376, 379, 506, 515, 575, 579, 590, 591, 607, 608, 620, 621, 633, 640, 654, 671, 683, 700, 735, 747, 750, 761, 772, 773, 774, 776, 777, 807, 819, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1012, 1014, 1022, 1025, 1148, 1157, 1163, 1175, 1192, 1204, 1221, 1313, 1333, 1347, 1361], "http": [30, 31, 126, 372, 373, 374, 428, 478, 494, 501, 551, 620, 621, 720, 1018, 1019, 1020, 1070, 1120, 1136, 1143, 1280, 1305, 1324, 1333, 1342, 1347, 1355, 1360, 1361, 1363], "www": [30, 31, 126, 372, 373, 374, 501, 620, 621, 720, 1018, 1019, 1020, 1143, 1361], "eu": [30, 31, 620, 621], "wp": [30, 31, 620, 621], "content": [30, 31, 620, 621, 1355], "upload": [30, 31, 620, 621], "2021": [30, 31, 620, 621, 1342, 1347, 1356], "07": [30, 31, 620, 621, 1313, 1324, 1338, 1342, 1358, 1359], "odim_h5_v2": [30, 31, 620, 621], "pdf": [30, 31, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 620, 621, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002], "save": [30, 31, 55, 189, 204, 206, 211, 215, 216, 217, 218, 225, 241, 256, 271, 273, 278, 282, 283, 284, 289, 304, 306, 314, 315, 319, 320, 321, 326, 341, 343, 351, 352, 356, 357, 358, 379, 381, 620, 621, 649, 833, 848, 850, 855, 859, 860, 861, 862, 869, 885, 900, 915, 917, 922, 926, 927, 928, 933, 948, 950, 958, 959, 963, 964, 965, 970, 985, 987, 995, 996, 1000, 1001, 1002, 1025, 1027, 1172, 1347, 1348], "equal": [30, 31, 63, 92, 121, 123, 124, 131, 156, 157, 162, 170, 171, 174, 352, 370, 381, 477, 515, 517, 539, 561, 620, 621, 657, 686, 715, 717, 718, 727, 728, 733, 741, 742, 745, 762, 799, 800, 805, 813, 814, 817, 996, 1016, 1027, 1119, 1157, 1160, 1178, 1207, 1268, 1290, 1324, 1342, 1343, 1354, 1356, 1357], "_fillvalu": [30, 31, 33, 378, 379, 620, 621, 623, 1024, 1025, 1350, 1358], "fill": [30, 31, 43, 515, 620, 621, 636, 750, 751, 752, 1157, 1349, 1350], "linear": [30, 31, 136, 137, 372, 478, 494, 508, 527, 540, 541, 552, 568, 620, 621, 751, 759, 760, 776, 777, 1018, 1120, 1136, 1150, 1256, 1269, 1270, 1281, 1297, 1342, 1347], "keyword": [30, 31, 33, 203, 270, 303, 315, 340, 352, 372, 374, 449, 496, 620, 621, 623, 847, 914, 947, 959, 984, 996, 1018, 1020, 1091, 1138, 1350, 1353], "scale_factor": [30, 31, 33, 381, 620, 621, 623, 1027], "add_offset": [30, 31, 33, 381, 620, 621, 623, 1027], "calcul": [30, 31, 33, 34, 46, 48, 60, 71, 72, 89, 100, 101, 118, 119, 123, 135, 136, 137, 144, 151, 179, 181, 182, 183, 184, 185, 186, 187, 218, 254, 284, 287, 321, 324, 358, 426, 427, 434, 453, 454, 460, 474, 477, 478, 494, 496, 501, 513, 517, 518, 524, 526, 539, 540, 543, 544, 545, 550, 569, 620, 621, 623, 625, 640, 642, 654, 665, 666, 683, 694, 695, 712, 713, 717, 722, 750, 751, 752, 766, 767, 771, 775, 776, 777, 781, 782, 783, 788, 794, 822, 824, 825, 826, 827, 828, 829, 831, 862, 898, 928, 931, 965, 968, 1002, 1064, 1065, 1068, 1069, 1076, 1095, 1096, 1102, 1116, 1119, 1120, 1136, 1138, 1143, 1155, 1159, 1160, 1161, 1163, 1165, 1175, 1186, 1187, 1204, 1215, 1216, 1253, 1255, 1268, 1269, 1272, 1273, 1274, 1279, 1298, 1307, 1310, 1316, 1332, 1333, 1339, 1342, 1345, 1347, 1351, 1354, 1359, 1361], "fly": [30, 31, 33, 620, 621, 623], "_write_as_dtyp": [30, 31, 33, 381, 620, 621, 623, 1027], "datatyp": [30, 31, 620, 621, 1305], "It": [30, 31, 135, 138, 396, 410, 493, 508, 510, 517, 524, 540, 620, 621, 771, 778, 1065, 1135, 1150, 1152, 1160, 1253, 1269, 1316, 1355, 1357, 1361, 1363], "uint8": [30, 31, 381, 620, 621, 1027], "uint16": [30, 31, 381, 620, 621, 1027], "typic": [30, 31, 122, 125, 131, 151, 155, 157, 164, 171, 176, 380, 620, 621, 716, 719, 722, 726, 728, 735, 742, 747, 762, 794, 798, 800, 807, 814, 819, 1026, 1061, 1064, 1363], "lzf": [30, 31, 620, 621], "recomend": [30, 31, 620, 621], "replac": [30, 31, 47, 61, 62, 63, 90, 91, 92, 131, 132, 155, 157, 164, 171, 176, 620, 621, 641, 655, 656, 657, 684, 685, 686, 726, 728, 735, 742, 747, 762, 763, 798, 800, 807, 814, 819, 1164, 1176, 1177, 1178, 1205, 1206, 1207, 1305], "exampl": [30, 31, 45, 62, 91, 151, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 383, 539, 620, 621, 638, 656, 685, 722, 794, 848, 855, 858, 859, 860, 861, 862, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002, 1030, 1054, 1058, 1059, 1060, 1064, 1065, 1173, 1177, 1206, 1268, 1307, 1308, 1309, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1349, 1351, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1363], "NOT": [30, 31, 151, 620, 621, 722, 794], "written": [30, 31, 379, 381, 382, 620, 621, 1025, 1027, 1028, 1305, 1347], "odim": [30, 31, 620, 621, 1305], "convent": [30, 31, 60, 89, 130, 430, 449, 492, 517, 518, 620, 621, 654, 683, 761, 1072, 1091, 1134, 1160, 1161, 1175, 1204, 1305, 1312, 1347, 1356, 1358], "v2_3": [30, 31, 620, 621], "support": [31, 233, 234, 315, 352, 363, 371, 372, 373, 374, 375, 383, 506, 576, 621, 877, 878, 959, 996, 1009, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1054, 1148, 1305, 1332, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1360], "featur": [31, 437, 494, 621, 1079, 1136, 1324, 1342, 1347, 1357], "ppi": [31, 60, 89, 131, 132, 134, 203, 207, 211, 270, 274, 278, 303, 307, 314, 315, 340, 344, 351, 352, 450, 472, 496, 508, 532, 533, 539, 621, 654, 683, 762, 763, 764, 769, 847, 851, 855, 914, 918, 922, 947, 951, 958, 959, 984, 988, 995, 996, 1062, 1063, 1092, 1114, 1138, 1150, 1175, 1204, 1236, 1237, 1241, 1244, 1246, 1261, 1262, 1268, 1310, 1320, 1323, 1324, 1336, 1338, 1347, 1356, 1357, 1358, 1359], "pvol": [31, 621], "differ": [31, 121, 123, 124, 130, 477, 478, 480, 484, 492, 494, 506, 512, 559, 561, 621, 715, 717, 718, 759, 760, 761, 770, 772, 773, 774, 781, 782, 783, 1005, 1054, 1062, 1063, 1119, 1120, 1122, 1126, 1134, 1136, 1148, 1154, 1288, 1290, 1305, 1312, 1316, 1342, 1353, 1355, 1356, 1357, 1360, 1361], "group": [31, 621, 1361], "sector": [31, 60, 89, 621, 654, 683, 1175, 1204, 1358], "azim": [31, 621], "rhi": [31, 60, 89, 203, 204, 215, 270, 271, 282, 303, 304, 319, 340, 341, 356, 450, 472, 481, 508, 510, 532, 533, 539, 549, 561, 621, 654, 683, 847, 848, 859, 914, 915, 926, 947, 948, 963, 984, 985, 1000, 1063, 1092, 1114, 1123, 1150, 1152, 1175, 1204, 1237, 1247, 1261, 1262, 1268, 1278, 1290, 1310, 1320, 1338, 1347, 1356, 1358, 1359], "Not": [31, 363, 371, 621, 1009, 1017], "yet": [31, 376, 621, 1022, 1312, 1347], "fix": [31, 473, 576, 621, 1115, 1305, 1310, 1311, 1314, 1335, 1349, 1357, 1359, 1360, 1361, 1363], "stare": [31, 621], "mode": [31, 60, 77, 89, 106, 362, 473, 510, 621, 654, 671, 683, 700, 1008, 1115, 1152, 1175, 1192, 1204, 1221, 1358, 1360, 1361], "take": [32, 62, 91, 131, 138, 215, 282, 319, 356, 426, 506, 622, 656, 685, 762, 778, 859, 926, 963, 1000, 1064, 1065, 1068, 1148, 1177, 1206, 1312, 1313, 1316, 1323, 1342, 1357, 1361], "sinarame_h5": [32, 616, 622], "everi": [32, 480, 507, 508, 517, 622, 1122, 1149, 1150, 1160, 1347, 1356], "one": [32, 33, 41, 46, 54, 55, 60, 62, 89, 91, 134, 142, 155, 157, 164, 171, 176, 179, 183, 378, 379, 381, 425, 428, 470, 480, 481, 490, 491, 506, 507, 508, 510, 511, 512, 529, 532, 533, 539, 551, 561, 562, 568, 622, 623, 634, 640, 648, 649, 654, 656, 683, 685, 726, 728, 735, 742, 747, 759, 760, 769, 775, 786, 798, 800, 807, 814, 819, 822, 826, 1024, 1025, 1027, 1054, 1061, 1064, 1065, 1067, 1070, 1112, 1122, 1123, 1132, 1133, 1148, 1149, 1150, 1152, 1153, 1154, 1163, 1171, 1172, 1175, 1177, 1204, 1206, 1258, 1261, 1262, 1268, 1280, 1290, 1291, 1297, 1305, 1310, 1315, 1316, 1321, 1347, 1350, 1355, 1356, 1357, 1358, 1361, 1363], "volum": [32, 60, 89, 130, 132, 315, 352, 372, 373, 374, 382, 424, 442, 450, 459, 472, 473, 475, 479, 481, 492, 495, 500, 510, 512, 517, 518, 532, 533, 535, 553, 570, 571, 574, 622, 654, 683, 761, 763, 764, 959, 996, 1018, 1019, 1020, 1028, 1054, 1062, 1063, 1084, 1092, 1101, 1114, 1115, 1117, 1121, 1123, 1134, 1137, 1142, 1152, 1154, 1160, 1161, 1175, 1204, 1261, 1262, 1264, 1282, 1299, 1300, 1303, 1310, 1320, 1338, 1359], "folder": [32, 622, 1361], "netcdf4": [33, 55, 373, 378, 379, 623, 649, 1019, 1024, 1025, 1172, 1330, 1347, 1349, 1360, 1363], "time_refer": [33, 378, 623, 1024, 1349], "arm_time_vari": [33, 55, 378, 379, 623, 649, 1024, 1025, 1172], "standard": [33, 55, 60, 77, 89, 106, 118, 119, 130, 366, 378, 379, 380, 428, 451, 479, 492, 507, 522, 523, 550, 555, 576, 623, 649, 654, 671, 683, 700, 712, 713, 761, 772, 773, 779, 791, 1012, 1024, 1025, 1026, 1070, 1093, 1121, 1134, 1149, 1172, 1175, 1192, 1204, 1221, 1239, 1251, 1252, 1279, 1284, 1349, 1350, 1351, 1355, 1357, 1361], "attempt": [33, 131, 132, 378, 379, 623, 762, 763, 1024, 1025], "also": [33, 45, 60, 89, 155, 205, 229, 247, 272, 305, 315, 342, 373, 374, 378, 380, 382, 420, 478, 494, 623, 638, 654, 683, 726, 798, 849, 873, 891, 916, 949, 959, 986, 1019, 1020, 1024, 1026, 1028, 1040, 1050, 1054, 1062, 1120, 1136, 1175, 1204, 1312, 1316, 1342, 1347, 1349, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363], "made": [33, 62, 91, 378, 427, 574, 623, 656, 685, 1024, 1069, 1177, 1206, 1303, 1361], "meet": [33, 155, 157, 164, 171, 176, 378, 623, 726, 728, 735, 742, 747, 798, 800, 807, 814, 819, 1024], "mani": [33, 378, 437, 623, 1024, 1079, 1347, 1353, 1356, 1361, 1363], "outlin": [33, 378, 506, 540, 541, 623, 1024, 1148, 1269, 1270, 1361], "To": [33, 46, 62, 91, 179, 181, 182, 183, 184, 185, 186, 378, 379, 381, 574, 623, 640, 656, 685, 775, 822, 824, 825, 826, 827, 828, 829, 1024, 1025, 1027, 1163, 1177, 1206, 1303, 1347, 1350, 1353, 1356, 1360, 1361, 1363], "control": [33, 45, 130, 138, 139, 143, 146, 376, 378, 379, 503, 506, 510, 623, 638, 761, 778, 780, 787, 790, 1022, 1024, 1025, 1065, 1145, 1148, 1152, 1353], "how": [33, 62, 91, 376, 378, 379, 437, 481, 623, 656, 685, 1022, 1024, 1025, 1079, 1123, 1177, 1206, 1312, 1313, 1321, 1322, 1323, 1347, 1350, 1353, 1354, 1355, 1363], "_zlib": [33, 378, 379, 623, 1024, 1025], "_deflatelevel": [33, 378, 379, 623, 1024, 1025], "_shuffl": [33, 378, 379, 623, 1024, 1025], "_fletcher32": [33, 378, 379, 623, 1024, 1025], "_contingu": [33, 378, 379, 623, 1024, 1025], "_chunksiz": [33, 378, 379, 623, 1024, 1025], "_endian": [33, 378, 379, 623, 1024, 1025], "_least_significant_digit": [33, 378, 379, 623, 1024, 1025], "see": [33, 62, 91, 119, 130, 151, 203, 217, 230, 234, 236, 238, 246, 250, 252, 270, 283, 303, 315, 320, 340, 352, 357, 370, 378, 379, 477, 478, 481, 494, 501, 515, 623, 656, 685, 713, 722, 761, 794, 847, 861, 874, 878, 880, 882, 890, 894, 896, 914, 927, 947, 959, 964, 984, 996, 1001, 1016, 1024, 1025, 1065, 1119, 1120, 1123, 1136, 1143, 1157, 1177, 1206, 1312, 1313, 1321, 1342, 1349, 1351, 1353, 1354, 1355, 1356, 1361], "document": [33, 130, 230, 234, 236, 238, 246, 250, 252, 315, 352, 373, 378, 379, 568, 623, 761, 874, 878, 880, 882, 890, 894, 896, 959, 996, 1019, 1024, 1025, 1297, 1304, 1347, 1353, 1361], "detail": [33, 119, 130, 151, 234, 246, 315, 352, 378, 379, 478, 494, 623, 713, 722, 761, 794, 878, 890, 959, 996, 1024, 1025, 1061, 1065, 1120, 1136, 1342, 1347, 1358, 1361], "netcdf4_class": [33, 55, 378, 379, 623, 649, 1024, 1025, 1172], "netcdf3_class": [33, 55, 378, 379, 623, 649, 1024, 1025, 1172], "netcdf3_64bit": [33, 55, 378, 379, 623, 649, 1024, 1025, 1172], "non": [33, 121, 123, 124, 132, 376, 378, 477, 478, 494, 506, 508, 576, 623, 715, 717, 718, 763, 1022, 1024, 1119, 1120, 1136, 1148, 1150, 1342], "zero": [33, 378, 478, 494, 496, 502, 506, 561, 568, 590, 623, 1005, 1024, 1120, 1136, 1138, 1144, 1148, 1290, 1297, 1305, 1342, 1350, 1354], "base_tim": [33, 55, 378, 379, 623, 649, 1024, 1025, 1172, 1340], "time_offset": [33, 55, 378, 379, 623, 649, 1024, 1025, 1172, 1340], "phidp_field": [34, 129, 133, 136, 137, 141, 142, 504, 505, 506, 507, 508, 625, 750, 751, 752, 757, 765, 767, 768, 776, 777, 781, 782, 783, 785, 786, 1146, 1147, 1148, 1149, 1150, 1159, 1307, 1343, 1357], "phidp_texture_field": [34, 625, 1159], "textur": [34, 182, 427, 524, 550, 573, 625, 825, 1069, 1159, 1253, 1279, 1302, 1347, 1351, 1357], "real": [34, 130, 625, 761, 1159, 1310, 1320, 1342, 1347, 1361, 1363], "part": [34, 483, 539, 625, 1125, 1159, 1268, 1312, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358], "shift": [34, 129, 133, 136, 137, 141, 142, 187, 254, 287, 324, 480, 502, 504, 505, 507, 539, 625, 757, 765, 776, 777, 781, 785, 786, 831, 898, 931, 968, 1122, 1144, 1146, 1147, 1149, 1159, 1268, 1351, 1357], "texture_field": [34, 625, 1159], "gourlei": [34, 625, 756, 781, 782, 783, 1159], "j": [34, 122, 125, 132, 136, 137, 138, 139, 143, 146, 428, 477, 478, 481, 494, 503, 507, 508, 510, 513, 515, 517, 518, 625, 716, 719, 763, 776, 777, 778, 780, 787, 790, 1070, 1119, 1120, 1123, 1136, 1145, 1149, 1150, 1152, 1155, 1157, 1159, 1160, 1161, 1307, 1308, 1317, 1318, 1325, 1326, 1328, 1330, 1334, 1337, 1342, 1347, 1361], "p": [34, 36, 38, 44, 118, 122, 125, 138, 139, 143, 146, 432, 437, 446, 450, 451, 459, 465, 472, 477, 483, 513, 540, 625, 628, 630, 637, 712, 716, 719, 778, 780, 787, 790, 1061, 1074, 1079, 1088, 1092, 1093, 1101, 1107, 1114, 1119, 1125, 1155, 1159, 1233, 1269, 1347, 1361], "tabari": [34, 625, 1159], "parent": [34, 625, 1159], "du": [34, 625, 1159], "chatelet": [34, 625, 1159], "fuzzi": [34, 625, 1159], "logic": [34, 155, 157, 164, 171, 176, 625, 726, 728, 735, 742, 747, 798, 800, 807, 814, 819, 1159], "algorithm": [34, 130, 131, 132, 151, 410, 432, 437, 451, 452, 477, 478, 481, 482, 494, 506, 510, 515, 625, 722, 759, 760, 761, 762, 763, 773, 781, 782, 794, 1061, 1065, 1074, 1079, 1093, 1094, 1119, 1120, 1123, 1124, 1136, 1148, 1152, 1157, 1159, 1306, 1309, 1310, 1347, 1356, 1357, 1359, 1361], "separ": [34, 477, 496, 501, 515, 517, 540, 551, 625, 774, 1062, 1063, 1119, 1138, 1143, 1157, 1159, 1160, 1269, 1280, 1312, 1324, 1355, 1356, 1363], "precipit": [34, 129, 133, 141, 142, 459, 472, 477, 503, 551, 625, 757, 760, 765, 785, 786, 1065, 1101, 1114, 1119, 1145, 1159, 1280, 1316, 1324, 1342, 1356, 1357, 1361], "nonprecipit": [34, 625, 1159], "echo": [34, 477, 478, 494, 496, 503, 625, 1119, 1120, 1136, 1138, 1145, 1159, 1342, 1354, 1356], "polarimetr": [34, 136, 137, 442, 448, 449, 450, 459, 472, 481, 484, 503, 510, 513, 514, 625, 750, 751, 752, 756, 776, 777, 1084, 1090, 1091, 1092, 1101, 1114, 1123, 1126, 1145, 1152, 1155, 1156, 1159, 1307, 1357], "observ": [34, 118, 138, 139, 143, 146, 437, 459, 472, 478, 494, 506, 512, 531, 625, 712, 759, 760, 778, 780, 782, 787, 790, 1079, 1101, 1114, 1120, 1136, 1148, 1154, 1159, 1260, 1342, 1357], "journal": [34, 130, 132, 432, 446, 451, 452, 465, 483, 496, 540, 541, 625, 761, 763, 1061, 1074, 1088, 1093, 1094, 1107, 1125, 1138, 1159, 1269, 1270, 1347, 1361], "atmospher": [34, 60, 89, 118, 119, 130, 131, 138, 146, 425, 452, 483, 496, 509, 541, 625, 654, 683, 712, 713, 761, 762, 778, 790, 1065, 1067, 1094, 1125, 1138, 1151, 1159, 1175, 1204, 1270, 1312, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "ocean": [34, 130, 136, 137, 452, 478, 483, 494, 496, 513, 541, 625, 761, 776, 777, 1094, 1120, 1125, 1136, 1138, 1155, 1159, 1270, 1312, 1342], "technologi": [34, 130, 452, 483, 496, 541, 625, 761, 1094, 1125, 1138, 1159, 1270], "24": [34, 625, 1159, 1313, 1355, 1356], "8": [34, 77, 106, 126, 130, 136, 182, 231, 233, 234, 235, 237, 239, 249, 251, 253, 477, 541, 625, 671, 700, 720, 750, 761, 776, 781, 782, 825, 875, 877, 878, 879, 881, 883, 893, 895, 897, 1119, 1159, 1192, 1221, 1270, 1313, 1316, 1322, 1332, 1336, 1340, 1344, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1361], "1439": [34, 625, 1159], "1451": [34, 625, 1159], "class": [35, 46, 56, 60, 89, 151, 180, 187, 221, 233, 234, 240, 254, 287, 315, 324, 383, 396, 410, 437, 481, 482, 496, 503, 576, 626, 627, 640, 650, 654, 683, 721, 722, 793, 794, 823, 830, 831, 865, 877, 878, 884, 898, 931, 959, 968, 1029, 1030, 1043, 1053, 1054, 1055, 1057, 1064, 1079, 1123, 1124, 1138, 1145, 1162, 1163, 1173, 1175, 1204, 1304, 1305, 1347, 1353, 1354, 1357, 1361], "filetyp": [35, 41, 627, 634], "need": [35, 60, 69, 71, 72, 89, 98, 100, 101, 149, 380, 392, 478, 494, 543, 569, 627, 654, 663, 665, 666, 683, 692, 694, 695, 759, 760, 1026, 1120, 1136, 1175, 1184, 1186, 1187, 1204, 1213, 1215, 1216, 1272, 1298, 1312, 1316, 1321, 1342, 1347, 1349, 1350, 1351, 1353, 1354, 1357, 1358, 1360, 1361, 1363], "being": [35, 37, 130, 179, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 428, 508, 554, 555, 627, 629, 761, 822, 848, 850, 855, 858, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 959, 962, 963, 964, 965, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1065, 1070, 1150, 1283, 1284, 1305, 1333, 1360], "string": [35, 46, 60, 89, 206, 209, 210, 214, 217, 232, 234, 248, 273, 276, 277, 281, 283, 306, 309, 310, 311, 312, 313, 316, 318, 320, 343, 346, 347, 348, 349, 350, 353, 355, 357, 361, 409, 443, 462, 495, 496, 501, 507, 508, 513, 517, 518, 519, 525, 526, 577, 627, 640, 654, 683, 850, 853, 854, 858, 861, 876, 878, 892, 917, 920, 921, 925, 927, 950, 953, 954, 955, 956, 957, 960, 962, 964, 987, 990, 991, 992, 993, 994, 997, 999, 1001, 1007, 1064, 1065, 1085, 1104, 1137, 1138, 1143, 1149, 1150, 1155, 1160, 1161, 1163, 1175, 1204, 1254, 1255, 1321, 1361], "initi": [35, 50, 51, 52, 56, 78, 79, 80, 81, 107, 108, 109, 110, 130, 131, 151, 187, 254, 287, 324, 383, 514, 627, 644, 645, 646, 650, 672, 673, 674, 675, 701, 702, 703, 704, 722, 761, 762, 794, 831, 898, 931, 968, 1030, 1156, 1167, 1168, 1169, 1193, 1194, 1195, 1196, 1222, 1223, 1224, 1225, 1323], "dic": [38, 46, 60, 61, 89, 90, 383, 395, 630, 640, 654, 655, 683, 684, 1030, 1163, 1175, 1176, 1204, 1205], "colormap": [39, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 632, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1026, 1310, 1320, 1324, 1338, 1343, 1357, 1359], "select": [40, 65, 74, 94, 103, 132, 442, 450, 459, 472, 475, 490, 491, 510, 512, 514, 633, 659, 668, 688, 697, 763, 1084, 1092, 1101, 1114, 1117, 1132, 1133, 1152, 1154, 1156, 1180, 1189, 1209, 1218], "limit": [40, 130, 131, 136, 137, 179, 181, 182, 183, 184, 185, 186, 206, 220, 246, 273, 286, 306, 323, 343, 360, 370, 381, 423, 500, 506, 510, 570, 571, 633, 761, 762, 775, 776, 777, 822, 824, 825, 826, 827, 828, 829, 850, 864, 890, 917, 930, 950, 967, 987, 1004, 1016, 1027, 1062, 1063, 1142, 1148, 1152, 1299, 1300, 1317, 1318, 1322, 1347, 1353, 1357], "relat": [40, 381, 478, 484, 487, 488, 489, 494, 507, 515, 633, 752, 781, 782, 783, 1027, 1120, 1126, 1129, 1130, 1131, 1136, 1149, 1157, 1342, 1347, 1357, 1360, 1361], "instac": [40, 633], "nyquist": [40, 73, 102, 130, 131, 132, 427, 524, 633, 667, 696, 761, 762, 763, 1069, 1188, 1217, 1253, 1351, 1356, 1358], "consid": [40, 129, 133, 134, 141, 142, 446, 451, 452, 465, 477, 478, 490, 491, 494, 500, 504, 505, 510, 511, 512, 529, 532, 533, 539, 540, 541, 556, 633, 750, 757, 759, 760, 764, 765, 766, 767, 768, 769, 772, 773, 781, 782, 783, 785, 786, 1005, 1062, 1063, 1088, 1093, 1094, 1107, 1119, 1120, 1132, 1133, 1136, 1142, 1146, 1147, 1152, 1153, 1154, 1258, 1261, 1262, 1268, 1269, 1270, 1285, 1342], "vmin": [40, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 633, 848, 850, 855, 858, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 959, 962, 963, 964, 965, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1026, 1307, 1308, 1312, 1313, 1316, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1350, 1351, 1353, 1354, 1356, 1357], "vmax": [40, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 633, 848, 850, 855, 858, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 959, 962, 963, 964, 965, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1026, 1307, 1308, 1312, 1313, 1316, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1350, 1351, 1353, 1354, 1356, 1357], "2": [40, 118, 122, 126, 132, 134, 136, 138, 146, 182, 193, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 231, 232, 233, 237, 239, 248, 249, 251, 253, 260, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 293, 304, 306, 309, 310, 314, 317, 318, 319, 320, 321, 323, 330, 341, 343, 346, 347, 351, 352, 354, 355, 356, 357, 358, 360, 372, 373, 374, 376, 418, 432, 433, 451, 459, 474, 477, 478, 480, 494, 496, 506, 512, 517, 525, 526, 541, 551, 553, 633, 712, 716, 720, 763, 764, 768, 769, 772, 773, 774, 776, 778, 781, 782, 790, 825, 837, 848, 850, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 875, 876, 877, 881, 883, 892, 893, 895, 897, 904, 915, 917, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 937, 948, 950, 953, 954, 958, 961, 962, 963, 964, 965, 967, 974, 985, 987, 990, 991, 995, 996, 998, 999, 1000, 1001, 1002, 1004, 1018, 1019, 1020, 1022, 1038, 1049, 1054, 1061, 1062, 1063, 1065, 1074, 1075, 1093, 1101, 1116, 1119, 1120, 1122, 1136, 1138, 1148, 1154, 1160, 1235, 1239, 1254, 1255, 1270, 1280, 1282, 1304, 1309, 1314, 1316, 1322, 1323, 1329, 1330, 1332, 1333, 1334, 1336, 1337, 1340, 1342, 1344, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1361], "tuplet": [40, 633], "minimun": [40, 633], "maximun": [40, 633], "teoric": [40, 633], "copi": [41, 45, 46, 62, 63, 65, 66, 67, 69, 91, 92, 94, 95, 96, 98, 165, 166, 383, 574, 634, 638, 640, 656, 657, 659, 660, 661, 663, 685, 686, 688, 689, 690, 692, 736, 737, 808, 809, 1030, 1065, 1163, 1177, 1178, 1180, 1181, 1182, 1184, 1206, 1207, 1209, 1210, 1211, 1213, 1303, 1350], "field_map": [41, 634], "anoth": [41, 442, 450, 459, 472, 475, 551, 634, 1054, 1084, 1092, 1101, 1114, 1117, 1280, 1316, 1349, 1354, 1357, 1360, 1363], "empti": [44, 389, 418, 507, 508, 637, 1038, 1049, 1149, 1150, 1233, 1235, 1238, 1305, 1349, 1356, 1357], "exist": [44, 47, 61, 62, 64, 90, 91, 93, 134, 155, 157, 164, 171, 176, 179, 182, 183, 376, 506, 574, 637, 641, 655, 656, 658, 684, 685, 687, 726, 728, 735, 742, 747, 769, 775, 798, 800, 807, 814, 819, 822, 825, 826, 1022, 1148, 1164, 1173, 1176, 1177, 1179, 1205, 1206, 1208, 1233, 1303, 1307, 1347, 1349], "self": [45, 136, 137, 385, 388, 389, 390, 391, 394, 398, 400, 401, 405, 406, 638, 776, 777, 781, 782, 783, 1350, 1353, 1361], "descrip": [45, 638], "default_config": [45, 638, 1305], "These": [45, 130, 151, 246, 380, 557, 576, 638, 722, 761, 794, 890, 1026, 1065, 1286, 1312, 1321, 1342, 1347, 1354, 1360, 1361], "modifi": [45, 60, 89, 638, 654, 683, 764, 1175, 1204, 1310, 1320, 1338, 1359, 1361], "environment": [45, 638, 1347, 1360], "pyart_config": [45, 638, 1357], "execut": [45, 638, 1309, 1314, 1319, 1338, 1345, 1346, 1359], "full": [45, 77, 106, 134, 376, 638, 671, 700, 764, 769, 1022, 1192, 1221, 1305, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347], "permiss": [45, 638], "mai": [45, 130, 131, 155, 157, 164, 171, 176, 287, 324, 372, 374, 380, 383, 396, 477, 508, 510, 576, 638, 726, 728, 735, 742, 747, 761, 762, 798, 800, 807, 814, 819, 931, 968, 1018, 1020, 1026, 1030, 1065, 1119, 1150, 1152, 1248, 1342, 1347], "secur": [45, 638], "do": [45, 60, 89, 126, 130, 179, 182, 183, 380, 381, 493, 638, 654, 683, 720, 761, 775, 822, 825, 826, 1026, 1027, 1135, 1175, 1204, 1313, 1342, 1349, 1350, 1351, 1353, 1354, 1356, 1360, 1361, 1363], "un": [45, 638], "trust": [45, 638], "method": [45, 46, 62, 69, 71, 72, 91, 98, 100, 101, 129, 133, 136, 137, 151, 155, 157, 164, 171, 176, 216, 381, 382, 383, 396, 421, 446, 465, 477, 480, 495, 496, 504, 505, 506, 507, 508, 517, 539, 540, 541, 638, 640, 656, 663, 665, 666, 685, 692, 694, 695, 722, 726, 728, 735, 742, 747, 750, 752, 757, 765, 776, 777, 781, 783, 794, 798, 800, 807, 814, 819, 860, 1027, 1028, 1030, 1041, 1043, 1051, 1062, 1063, 1064, 1088, 1107, 1119, 1122, 1137, 1138, 1146, 1147, 1148, 1149, 1150, 1160, 1163, 1177, 1184, 1186, 1187, 1206, 1213, 1215, 1216, 1268, 1269, 1270, 1304, 1307, 1327, 1347, 1354, 1356, 1357, 1361], "chang": [45, 46, 60, 62, 66, 67, 69, 71, 89, 91, 95, 96, 98, 100, 130, 150, 151, 375, 383, 638, 640, 654, 656, 660, 661, 663, 665, 683, 685, 689, 690, 692, 694, 722, 761, 794, 1021, 1030, 1163, 1173, 1175, 1177, 1181, 1182, 1184, 1186, 1204, 1206, 1210, 1211, 1213, 1215, 1248, 1305, 1342, 1350, 1353, 1358, 1360, 1361], "home": [45, 638, 1361, 1363], "make": [45, 46, 481, 514, 638, 640, 1123, 1156, 1163, 1235, 1239, 1240, 1242, 1243, 1305, 1316, 1323, 1332, 1342, 1349, 1350, 1356, 1360, 1361, 1363], "adjust": [45, 122, 220, 286, 323, 360, 477, 638, 716, 864, 930, 967, 1004, 1119, 1321, 1324, 1332], "login": [45, 638], "shell": [45, 638], "session": [45, 638], "modif": [45, 62, 91, 638, 656, 685, 1177, 1206, 1305], "last": [45, 60, 89, 130, 135, 204, 205, 211, 215, 216, 217, 229, 231, 237, 239, 240, 247, 249, 251, 253, 271, 272, 278, 282, 283, 304, 305, 314, 315, 319, 320, 324, 341, 342, 351, 352, 356, 357, 539, 541, 638, 654, 683, 761, 771, 848, 849, 855, 859, 860, 861, 873, 875, 881, 883, 884, 891, 893, 895, 897, 915, 916, 922, 926, 927, 948, 949, 958, 959, 963, 964, 968, 985, 986, 995, 996, 1000, 1001, 1175, 1204, 1268, 1270, 1317, 1358], "origin_latitud": [46, 640, 1163], "origin_longitud": [46, 640, 1163], "origin_altitud": [46, 640, 1163], "z": [46, 52, 54, 60, 72, 80, 89, 101, 109, 118, 119, 120, 136, 137, 202, 269, 302, 339, 370, 380, 381, 428, 477, 478, 484, 487, 488, 489, 494, 501, 547, 640, 646, 648, 654, 666, 674, 683, 695, 703, 712, 713, 714, 750, 752, 776, 777, 846, 913, 946, 983, 1016, 1026, 1027, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1070, 1119, 1120, 1126, 1129, 1130, 1131, 1136, 1143, 1163, 1169, 1171, 1175, 1187, 1195, 1204, 1216, 1224, 1235, 1276, 1307, 1330, 1332, 1333, 1342, 1347, 1350, 1357, 1361], "radar_latitud": [46, 543, 569, 640, 1163, 1272, 1298], "radar_longitud": [46, 543, 569, 640, 1163, 1272, 1298], "radar_altitud": [46, 500, 640, 1142, 1163], "radar_tim": [46, 640, 1163], "radar_nam": [46, 640, 1163], "rectilinear": [46, 640, 1163], "cartesian": [46, 48, 54, 60, 89, 118, 119, 120, 121, 122, 123, 124, 125, 370, 481, 496, 608, 640, 642, 648, 654, 683, 712, 713, 714, 715, 716, 717, 718, 719, 1016, 1053, 1054, 1061, 1064, 1065, 1123, 1138, 1163, 1165, 1171, 1175, 1204, 1305, 1310, 1315, 1319, 1322, 1347, 1348, 1356, 1359], "section": [46, 60, 62, 89, 91, 198, 200, 204, 218, 265, 267, 271, 284, 298, 300, 304, 321, 335, 337, 341, 358, 434, 453, 454, 496, 532, 533, 546, 640, 654, 656, 683, 685, 842, 844, 848, 862, 909, 911, 915, 928, 942, 944, 948, 965, 979, 981, 985, 1002, 1063, 1065, 1076, 1095, 1096, 1138, 1163, 1175, 1177, 1204, 1206, 1261, 1262, 1275, 1305, 1310, 1320, 1338, 1342, 1347, 1356, 1359], "legaci": [46, 428, 640, 1070, 1163], "befor": [46, 71, 100, 130, 134, 136, 137, 150, 437, 442, 450, 459, 472, 475, 478, 494, 510, 575, 640, 665, 694, 761, 769, 776, 777, 1054, 1079, 1084, 1092, 1101, 1114, 1117, 1120, 1136, 1152, 1163, 1186, 1215, 1316, 1342, 1347, 1351, 1357, 1358, 1361], "from_legacy_paramet": [46, 640, 1163], "ax": [46, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 229, 231, 232, 233, 234, 235, 237, 239, 246, 247, 248, 249, 251, 253, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 351, 352, 354, 355, 356, 357, 358, 359, 360, 478, 494, 502, 515, 640, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 873, 875, 876, 877, 878, 879, 881, 883, 890, 891, 892, 893, 895, 897, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 988, 989, 990, 991, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1058, 1059, 1060, 1120, 1136, 1144, 1157, 1163, 1307, 1308, 1312, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1336, 1340, 1341, 1342, 1343, 1344, 1351, 1355, 1356, 1357], "moment": [46, 54, 60, 89, 130, 131, 132, 182, 183, 372, 373, 374, 540, 590, 591, 640, 648, 654, 683, 756, 761, 762, 763, 775, 825, 826, 1018, 1019, 1020, 1065, 1163, 1171, 1175, 1204, 1269, 1313, 1320, 1338, 1347, 1354, 1355, 1357, 1359], "describ": [46, 60, 89, 127, 179, 180, 181, 182, 183, 184, 185, 186, 232, 248, 446, 452, 465, 494, 640, 654, 683, 753, 775, 822, 823, 824, 825, 826, 827, 828, 829, 876, 892, 1088, 1094, 1107, 1136, 1163, 1175, 1204, 1342], "geograph": [46, 60, 71, 89, 100, 121, 122, 123, 124, 125, 126, 287, 315, 324, 352, 379, 640, 654, 665, 683, 694, 715, 716, 717, 718, 719, 720, 931, 959, 968, 996, 1025, 1065, 1163, 1175, 1186, 1204, 1215, 1347], "axi": [46, 54, 60, 89, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 229, 231, 232, 233, 234, 235, 237, 239, 246, 247, 248, 249, 251, 253, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 304, 305, 306, 307, 308, 309, 310, 314, 315, 317, 318, 319, 320, 321, 323, 341, 342, 343, 344, 345, 346, 347, 351, 352, 354, 355, 356, 357, 358, 360, 370, 380, 529, 640, 648, 654, 683, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 873, 875, 876, 877, 878, 879, 881, 883, 890, 891, 892, 893, 895, 897, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 948, 949, 950, 951, 952, 953, 954, 958, 959, 961, 962, 963, 964, 965, 967, 985, 986, 987, 988, 989, 990, 991, 995, 996, 998, 999, 1000, 1001, 1002, 1004, 1016, 1026, 1163, 1171, 1175, 1204, 1258, 1307, 1322, 1333, 1342, 1344, 1356, 1357, 1358], "dimension": [46, 54, 130, 132, 494, 515, 640, 648, 761, 763, 1061, 1136, 1157, 1163, 1171, 1316, 1342], "space": [46, 60, 89, 123, 206, 273, 306, 343, 381, 477, 478, 492, 494, 501, 640, 654, 683, 717, 850, 917, 950, 987, 1027, 1065, 1119, 1120, 1134, 1136, 1143, 1163, 1175, 1204, 1313, 1342, 1349], "along": [46, 131, 134, 218, 230, 231, 236, 237, 238, 239, 250, 251, 252, 253, 284, 321, 358, 473, 529, 532, 533, 544, 545, 573, 640, 762, 769, 862, 874, 875, 880, 881, 882, 883, 894, 895, 896, 897, 928, 965, 1002, 1115, 1163, 1258, 1261, 1262, 1273, 1274, 1302, 1342, 1356], "three": [46, 132, 179, 183, 380, 494, 515, 640, 763, 775, 822, 826, 1026, 1136, 1157, 1163, 1342, 1357], "repeat": [46, 496, 640, 1138, 1163], "throughout": [46, 640, 1163], "transform": [46, 60, 89, 121, 122, 123, 124, 125, 126, 209, 216, 276, 287, 309, 324, 346, 352, 379, 423, 437, 443, 462, 477, 503, 516, 640, 654, 683, 715, 716, 717, 718, 719, 720, 853, 860, 920, 931, 953, 968, 990, 996, 1025, 1065, 1079, 1085, 1104, 1119, 1145, 1158, 1163, 1175, 1204, 1321, 1342, 1355], "pyart_aeqd": [46, 53, 60, 89, 121, 123, 124, 640, 647, 654, 683, 715, 717, 718, 1163, 1170, 1175, 1204], "nativ": [46, 60, 89, 121, 123, 124, 363, 428, 640, 654, 683, 715, 717, 718, 1009, 1065, 1070, 1163, 1175, 1204], "azimuth": [46, 60, 66, 67, 70, 72, 82, 89, 95, 96, 99, 101, 111, 118, 119, 120, 121, 122, 123, 124, 125, 144, 145, 187, 188, 204, 206, 209, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 254, 255, 271, 273, 276, 278, 282, 283, 287, 288, 304, 306, 309, 314, 315, 319, 320, 324, 325, 341, 343, 346, 351, 352, 356, 357, 376, 380, 428, 442, 472, 473, 490, 491, 493, 496, 508, 510, 517, 518, 527, 532, 533, 539, 542, 543, 544, 549, 553, 561, 574, 590, 640, 654, 660, 661, 664, 666, 676, 683, 689, 690, 693, 695, 705, 712, 713, 714, 715, 716, 717, 718, 719, 759, 760, 770, 772, 773, 774, 779, 788, 789, 791, 831, 832, 848, 850, 853, 855, 859, 860, 861, 875, 881, 883, 893, 895, 897, 898, 899, 915, 917, 920, 922, 926, 927, 931, 932, 948, 950, 953, 958, 959, 963, 964, 968, 969, 985, 987, 990, 995, 996, 1000, 1001, 1022, 1026, 1063, 1070, 1084, 1114, 1115, 1132, 1133, 1135, 1138, 1150, 1152, 1160, 1161, 1163, 1175, 1181, 1182, 1185, 1187, 1197, 1204, 1210, 1211, 1214, 1216, 1226, 1256, 1261, 1262, 1268, 1271, 1272, 1273, 1278, 1282, 1290, 1303, 1305, 1335, 1337, 1340, 1349, 1358, 1361], "equidist": [46, 60, 89, 121, 122, 123, 124, 125, 209, 276, 309, 346, 352, 380, 640, 654, 683, 715, 716, 717, 718, 719, 853, 920, 953, 990, 996, 1026, 1065, 1163, 1175, 1204], "pyproj": [46, 60, 89, 121, 123, 124, 640, 654, 683, 715, 717, 718, 1163, 1175, 1204, 1360], "projparam": [46, 49, 60, 89, 121, 123, 124, 640, 643, 654, 683, 715, 717, 718, 1163, 1166, 1175, 1204], "special": [46, 60, 89, 640, 654, 683, 1163, 1175, 1204, 1305, 1355], "_include_lon_0_lat_0": [46, 60, 89, 640, 654, 683, 1163, 1175, 1204], "interpret": [46, 60, 89, 131, 132, 379, 554, 555, 640, 654, 683, 762, 763, 1025, 1163, 1175, 1204, 1283, 1284], "requir": [46, 60, 89, 121, 123, 124, 130, 134, 376, 380, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 455, 456, 457, 458, 463, 464, 465, 466, 467, 468, 469, 470, 471, 476, 480, 517, 540, 576, 640, 654, 683, 715, 717, 718, 761, 764, 769, 1022, 1026, 1062, 1063, 1065, 1071, 1072, 1073, 1074, 1080, 1081, 1082, 1083, 1087, 1088, 1090, 1091, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1118, 1122, 1160, 1163, 1175, 1204, 1269, 1313, 1347, 1355, 1356, 1357, 1361, 1363], "get_projparam": [46, 640, 1163], "evalu": [46, 383, 392, 407, 412, 640, 1030, 1032, 1163], "up": [46, 60, 89, 155, 157, 164, 171, 176, 428, 459, 484, 487, 488, 509, 512, 524, 557, 559, 560, 640, 654, 683, 726, 728, 735, 742, 747, 751, 752, 759, 760, 781, 782, 783, 798, 800, 807, 814, 819, 1062, 1063, 1070, 1101, 1126, 1129, 1130, 1151, 1154, 1163, 1175, 1204, 1253, 1286, 1288, 1289, 1342, 1351, 1355, 1358, 1362], "collect": [46, 164, 176, 365, 372, 373, 374, 376, 640, 735, 747, 807, 819, 1011, 1018, 1019, 1020, 1022, 1053, 1064, 1065, 1163, 1312, 1326, 1340, 1361, 1362, 1363], "nradar": [46, 640, 1163], "whose": [46, 375, 640, 1021, 1060, 1163], "wa": [46, 71, 72, 100, 101, 131, 132, 150, 164, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 551, 640, 665, 666, 694, 695, 735, 762, 763, 807, 848, 855, 859, 860, 861, 862, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1163, 1186, 1187, 1215, 1216, 1280, 1305, 1347, 1357, 1361, 1363], "projection_proj": [46, 640, 1163], "instanc": [46, 53, 57, 63, 92, 130, 131, 132, 204, 211, 214, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 381, 382, 428, 481, 551, 561, 562, 568, 640, 647, 651, 657, 686, 761, 762, 763, 848, 855, 858, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002, 1027, 1028, 1070, 1123, 1163, 1170, 1178, 1207, 1280, 1290, 1291, 1297], "valueerror": [46, 47, 53, 61, 62, 90, 91, 640, 641, 647, 655, 656, 684, 685, 1163, 1164, 1170, 1176, 1177, 1205, 1206], "point_z": [46, 379, 640, 1025, 1163], "point_x": [46, 379, 640, 1025, 1163], "point_i": [46, 379, 640, 1025, 1163], "func": [46, 150, 640, 1163], "init_point_x_y_z": [46, 640, 1163], "reset": [46, 51, 52, 60, 71, 79, 80, 81, 89, 100, 108, 109, 110, 640, 645, 646, 654, 665, 673, 674, 675, 683, 694, 702, 703, 704, 1163, 1168, 1169, 1175, 1186, 1194, 1195, 1196, 1204, 1215, 1223, 1224, 1225, 1354], "point_latitud": [46, 379, 640, 1025, 1163], "point_longitud": [46, 379, 640, 1025, 1163], "perform": [46, 60, 71, 72, 73, 89, 100, 101, 102, 130, 131, 132, 134, 155, 157, 164, 171, 176, 204, 209, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 276, 278, 281, 282, 283, 284, 304, 309, 314, 315, 318, 319, 320, 321, 324, 341, 346, 351, 352, 355, 356, 357, 358, 372, 375, 380, 437, 442, 450, 459, 472, 480, 494, 506, 574, 640, 654, 665, 666, 667, 683, 694, 695, 696, 726, 728, 735, 742, 747, 756, 761, 762, 763, 769, 798, 800, 807, 814, 819, 848, 853, 855, 858, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 920, 922, 925, 926, 927, 928, 948, 953, 958, 959, 962, 963, 964, 965, 968, 985, 990, 995, 996, 999, 1000, 1001, 1002, 1018, 1021, 1026, 1062, 1063, 1079, 1084, 1092, 1101, 1114, 1122, 1136, 1148, 1163, 1175, 1186, 1187, 1188, 1204, 1215, 1216, 1217, 1303, 1306, 1307, 1308, 1310, 1317, 1318, 1322, 1347, 1356], "invers": [46, 60, 89, 138, 146, 443, 517, 640, 654, 683, 778, 790, 1085, 1160, 1163, 1175, 1204], "rel": [46, 60, 89, 135, 181, 216, 313, 350, 423, 437, 514, 516, 640, 654, 683, 751, 767, 771, 781, 782, 783, 824, 860, 957, 994, 1065, 1079, 1156, 1158, 1163, 1175, 1204, 1358, 1361], "init_point_longitude_latitud": [46, 640, 1163], "point_altitud": [46, 50, 379, 640, 644, 1025, 1163, 1167], "init_point_altitud": [46, 640, 1163], "init": [46, 221, 240, 383, 395, 543, 640, 865, 884, 1030, 1163, 1272], "field_dict": [47, 641, 1164], "replace_exist": [47, 61, 62, 63, 90, 91, 92, 641, 655, 656, 657, 684, 685, 686, 1164, 1176, 1177, 1178, 1205, 1206, 1207, 1342, 1350, 1351, 1361], "overwrit": [47, 539, 641, 1164, 1268], "alreadi": [47, 61, 62, 90, 91, 138, 504, 505, 641, 655, 656, 684, 685, 778, 1146, 1147, 1164, 1176, 1177, 1205, 1206], "edg": [48, 72, 101, 119, 123, 130, 131, 132, 134, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 502, 508, 589, 642, 666, 695, 713, 717, 761, 762, 763, 764, 769, 848, 855, 859, 860, 861, 875, 881, 883, 893, 895, 897, 915, 922, 926, 927, 948, 958, 959, 963, 964, 985, 995, 996, 1000, 1001, 1144, 1150, 1165, 1187, 1216, 1239, 1332, 1333, 1342, 1347], "height": [48, 54, 56, 57, 135, 181, 233, 234, 235, 249, 315, 352, 423, 424, 426, 437, 442, 450, 459, 472, 475, 478, 479, 481, 494, 495, 496, 499, 503, 509, 510, 511, 512, 514, 515, 516, 517, 518, 568, 642, 648, 650, 651, 751, 752, 759, 760, 766, 767, 771, 781, 782, 783, 824, 877, 878, 879, 893, 959, 996, 1062, 1063, 1065, 1068, 1079, 1084, 1092, 1101, 1114, 1117, 1120, 1121, 1123, 1136, 1137, 1138, 1141, 1145, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1160, 1161, 1165, 1171, 1297, 1321, 1330, 1340, 1344, 1354, 1356, 1357, 1361], "determin": [48, 60, 89, 129, 130, 131, 132, 133, 137, 141, 142, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 315, 352, 363, 372, 373, 376, 381, 382, 427, 437, 446, 451, 465, 478, 480, 481, 483, 484, 485, 487, 488, 494, 514, 515, 517, 539, 540, 556, 568, 572, 642, 654, 683, 757, 761, 762, 763, 765, 777, 785, 786, 875, 877, 878, 879, 881, 883, 890, 893, 895, 897, 959, 996, 1005, 1009, 1018, 1019, 1022, 1027, 1028, 1069, 1079, 1088, 1093, 1107, 1120, 1122, 1123, 1125, 1126, 1127, 1129, 1130, 1136, 1156, 1157, 1160, 1165, 1175, 1204, 1268, 1269, 1285, 1297, 1301, 1342, 1361], "same": [48, 60, 62, 70, 71, 72, 89, 91, 99, 100, 101, 122, 125, 130, 157, 171, 216, 315, 370, 376, 380, 381, 382, 425, 437, 478, 494, 501, 509, 539, 543, 553, 569, 574, 642, 654, 656, 664, 665, 666, 683, 685, 693, 694, 695, 716, 719, 728, 742, 761, 800, 814, 860, 959, 1016, 1022, 1026, 1027, 1028, 1065, 1067, 1079, 1120, 1136, 1143, 1151, 1165, 1175, 1177, 1185, 1186, 1187, 1204, 1206, 1214, 1215, 1216, 1239, 1268, 1272, 1282, 1298, 1303, 1312, 1332, 1333, 1342, 1349, 1354, 1355, 1356, 1361, 1363], "layout": [48, 369, 642, 1015, 1165], "interpol": [48, 72, 101, 119, 123, 204, 211, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 365, 372, 442, 450, 459, 472, 475, 481, 495, 508, 509, 510, 517, 552, 568, 642, 666, 695, 713, 717, 848, 855, 859, 860, 861, 862, 875, 881, 883, 893, 895, 897, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1011, 1018, 1064, 1065, 1084, 1092, 1101, 1114, 1117, 1123, 1137, 1150, 1151, 1152, 1160, 1165, 1187, 1216, 1281, 1297, 1305, 1313, 1342, 1353, 1356, 1357, 1361], "extrapol": [48, 119, 123, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 642, 713, 717, 848, 855, 859, 860, 861, 875, 881, 883, 893, 895, 897, 915, 922, 926, 927, 948, 958, 959, 963, 964, 985, 995, 996, 1000, 1001, 1165], "boundari": [48, 119, 123, 134, 223, 224, 246, 352, 508, 642, 713, 717, 769, 867, 868, 890, 996, 1150, 1165, 1239, 1343, 1355, 1357], "center": [48, 60, 72, 89, 101, 118, 119, 120, 122, 123, 125, 131, 204, 209, 211, 215, 216, 217, 231, 232, 236, 237, 238, 239, 248, 249, 250, 251, 252, 253, 271, 276, 278, 282, 283, 287, 304, 309, 314, 315, 319, 320, 341, 346, 351, 352, 356, 357, 372, 374, 442, 450, 459, 472, 475, 500, 524, 527, 550, 642, 654, 666, 683, 695, 712, 713, 714, 716, 717, 719, 762, 848, 853, 855, 859, 860, 861, 875, 876, 880, 881, 882, 883, 892, 893, 894, 895, 896, 897, 915, 920, 922, 926, 927, 931, 948, 953, 958, 959, 963, 964, 985, 990, 995, 996, 1000, 1001, 1018, 1020, 1058, 1059, 1060, 1084, 1092, 1101, 1114, 1117, 1142, 1165, 1175, 1187, 1204, 1216, 1235, 1239, 1253, 1256, 1279, 1321, 1351, 1356, 1357, 1358], "2d": [48, 70, 71, 72, 99, 100, 101, 119, 135, 370, 380, 424, 437, 503, 508, 514, 524, 550, 642, 664, 665, 666, 693, 694, 695, 713, 770, 771, 779, 1016, 1026, 1079, 1145, 1150, 1156, 1165, 1185, 1186, 1187, 1214, 1215, 1216, 1253, 1279, 1316, 1358], "point_": [51, 52, 645, 646, 1168, 1169], "properti": [53, 58, 59, 165, 166, 517, 647, 652, 653, 736, 737, 808, 809, 1055, 1057, 1160, 1170, 1355, 1361], "xarrai": [54, 221, 233, 234, 235, 545, 648, 865, 877, 878, 879, 1062, 1063, 1171, 1274, 1336, 1340, 1347, 1360], "arm_alt_lat_lon_vari": [55, 379, 649, 1025, 1172], "speed": [56, 57, 234, 496, 517, 518, 524, 650, 651, 878, 1065, 1138, 1160, 1161, 1253, 1344, 1356, 1361], "direct": [56, 77, 106, 376, 430, 449, 480, 493, 496, 506, 517, 518, 650, 671, 700, 1022, 1072, 1091, 1122, 1135, 1138, 1148, 1160, 1161, 1192, 1221, 1344, 1356, 1361], "horizont": [56, 57, 58, 59, 60, 89, 130, 204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 319, 320, 321, 341, 342, 343, 351, 356, 357, 358, 364, 365, 433, 439, 440, 441, 445, 457, 458, 470, 471, 476, 490, 491, 493, 512, 517, 568, 650, 651, 652, 653, 654, 683, 750, 755, 756, 758, 761, 848, 849, 850, 855, 859, 860, 861, 862, 873, 875, 877, 879, 881, 883, 891, 893, 895, 897, 915, 916, 917, 922, 926, 927, 928, 948, 949, 950, 958, 963, 964, 965, 985, 986, 987, 995, 1000, 1001, 1002, 1010, 1011, 1062, 1063, 1075, 1081, 1082, 1083, 1087, 1099, 1100, 1112, 1113, 1118, 1132, 1133, 1135, 1154, 1160, 1175, 1204, 1297, 1323, 1333, 1356, 1358, 1361], "wind": [56, 57, 58, 59, 130, 131, 364, 365, 490, 491, 492, 493, 517, 518, 568, 650, 651, 652, 653, 761, 762, 1010, 1011, 1132, 1133, 1134, 1135, 1160, 1161, 1297, 1305, 1344, 1348, 1361], "1d": [56, 57, 119, 123, 135, 437, 479, 482, 503, 516, 529, 541, 546, 547, 548, 549, 557, 558, 559, 560, 577, 650, 651, 713, 717, 770, 771, 779, 1079, 1121, 1124, 1145, 1158, 1258, 1270, 1275, 1276, 1277, 1278, 1286, 1287, 1288, 1289, 1358], "were": [56, 57, 155, 157, 164, 517, 559, 650, 651, 726, 728, 735, 798, 800, 807, 1160, 1288, 1305, 1357, 1361], "sampl": [56, 57, 437, 446, 465, 479, 514, 516, 517, 518, 540, 650, 651, 774, 1079, 1088, 1107, 1121, 1156, 1158, 1160, 1161, 1162, 1240, 1242, 1243, 1269, 1312, 1313, 1321, 1341, 1343, 1344, 1347, 1361], "per": [56, 57, 58, 59, 73, 89, 102, 130, 517, 650, 651, 652, 653, 667, 683, 696, 761, 782, 1065, 1160, 1188, 1204, 1217, 1236, 1237, 1238, 1361], "east": [56, 204, 215, 271, 282, 304, 319, 341, 356, 545, 650, 848, 859, 915, 926, 948, 963, 985, 1000, 1274, 1325, 1357], "u_wind": [56, 57, 517, 518, 650, 651, 1160, 1161, 1344, 1356, 1361], "compon": [56, 57, 58, 59, 477, 492, 493, 650, 651, 652, 653, 1119, 1134, 1135, 1361], "v_wind": [56, 57, 517, 518, 650, 651, 1160, 1161, 1344, 1356, 1361], "classmethod": [57, 410, 651], "_rang": [60, 89, 447, 654, 683, 1089, 1175, 1204], "scan_typ": [60, 89, 187, 203, 254, 270, 287, 303, 324, 340, 654, 683, 831, 847, 898, 914, 931, 947, 968, 984, 1175, 1204, 1358], "sweep_numb": [60, 89, 654, 683, 1175, 1204, 1330, 1349, 1358], "sweep_mod": [60, 89, 366, 654, 683, 1012, 1175, 1204, 1349, 1358], "fixed_angl": [60, 89, 187, 254, 287, 324, 561, 654, 683, 831, 898, 931, 968, 1175, 1204, 1290, 1330, 1331, 1335, 1349, 1358], "sweep_start_ray_index": [60, 89, 654, 683, 1175, 1204, 1349, 1358], "sweep_end_ray_index": [60, 89, 654, 683, 1175, 1204, 1349, 1358], "altitude_agl": [60, 89, 654, 683, 1175, 1204, 1358], "target_scan_r": [60, 89, 654, 683, 1175, 1204, 1358], "rays_are_index": [60, 89, 654, 683, 1175, 1204], "ray_angle_r": [60, 89, 654, 683, 1175, 1204], "scan_rat": [60, 89, 382, 654, 683, 1028, 1175, 1204, 1358], "antenna_transit": [60, 71, 72, 89, 100, 101, 164, 176, 204, 211, 215, 216, 217, 218, 254, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 654, 665, 666, 683, 694, 695, 735, 747, 807, 819, 848, 855, 859, 860, 861, 862, 898, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1175, 1186, 1187, 1204, 1215, 1216, 1358], "instrument_paramet": [60, 89, 130, 382, 452, 454, 654, 683, 761, 773, 1028, 1094, 1096, 1175, 1204, 1305, 1351, 1358], "radar_calibr": [60, 89, 446, 454, 465, 467, 468, 654, 683, 1088, 1096, 1107, 1109, 1110, 1175, 1204, 1358], "tilt": [60, 89, 187, 216, 315, 352, 513, 654, 683, 831, 860, 959, 996, 1155, 1175, 1204, 1313, 1329, 1336], "roll": [60, 89, 140, 187, 376, 567, 573, 654, 683, 784, 831, 1022, 1175, 1204, 1296, 1302], "drift": [60, 89, 187, 654, 683, 831, 1175, 1204], "head": [60, 89, 187, 654, 683, 831, 1175, 1204], "pitch": [60, 89, 187, 654, 683, 831, 1175, 1204], "georefs_appli": [60, 89, 654, 683, 1175, 1204], "antenna": [60, 71, 72, 89, 100, 101, 118, 119, 120, 127, 135, 138, 139, 143, 145, 146, 164, 176, 181, 185, 204, 211, 215, 216, 217, 218, 254, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 428, 433, 454, 460, 473, 496, 512, 561, 654, 665, 666, 683, 694, 695, 712, 713, 714, 735, 747, 753, 759, 760, 771, 772, 773, 774, 778, 779, 780, 787, 789, 790, 791, 807, 819, 824, 828, 848, 855, 859, 860, 861, 862, 898, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1070, 1075, 1096, 1102, 1115, 1138, 1154, 1175, 1186, 1187, 1204, 1215, 1216, 1290, 1305, 1306, 1310, 1315, 1316, 1317, 1318, 1347, 1353, 1358], "structur": [60, 89, 382, 477, 494, 515, 654, 683, 1028, 1119, 1136, 1157, 1175, 1204, 1312, 1342, 1354], "under": [60, 89, 130, 131, 132, 654, 683, 761, 762, 763, 1065, 1175, 1204, 1342, 1347, 1360, 1361], "sub": [60, 89, 654, 683, 1175, 1204], "meta_group": [60, 89, 654, 683, 1175, 1204, 1358], "instrument": [60, 89, 164, 176, 179, 182, 183, 382, 654, 683, 735, 747, 775, 807, 819, 822, 825, 826, 1028, 1175, 1204, 1351, 1358], "multipl": [60, 89, 138, 146, 437, 477, 512, 514, 654, 683, 778, 790, 1079, 1119, 1154, 1156, 1175, 1204, 1305, 1310, 1315, 1320, 1332, 1338, 1354, 1359, 1363], "ground": [60, 89, 428, 459, 496, 654, 683, 1070, 1101, 1138, 1175, 1204, 1312, 1356], "target": [60, 89, 139, 380, 453, 454, 541, 543, 544, 545, 549, 569, 654, 683, 780, 1026, 1095, 1096, 1175, 1204, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1270, 1272, 1273, 1274, 1278, 1298, 1358], "thr": [60, 89, 654, 683, 1175, 1204], "index": [60, 75, 89, 104, 129, 133, 135, 141, 142, 183, 217, 233, 234, 235, 237, 239, 249, 251, 253, 283, 320, 357, 380, 428, 437, 451, 513, 654, 669, 683, 698, 757, 765, 766, 767, 768, 771, 775, 785, 786, 826, 861, 877, 878, 879, 881, 883, 893, 895, 897, 927, 964, 1001, 1026, 1054, 1070, 1079, 1093, 1155, 1175, 1190, 1204, 1219, 1348, 1361], "rays_per_sweep": [60, 81, 89, 110, 654, 675, 683, 704, 1175, 1196, 1204, 1225, 1236, 1237], "upon": [60, 89, 179, 180, 181, 182, 183, 184, 185, 186, 654, 683, 775, 822, 823, 824, 825, 826, 827, 828, 829, 1175, 1204], "prior": [60, 62, 89, 91, 134, 136, 137, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 376, 654, 656, 683, 685, 769, 776, 777, 848, 855, 858, 859, 860, 861, 862, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002, 1022, 1175, 1177, 1204, 1206, 1313, 1347], "init_rays_per_sweep": [60, 89, 654, 683, 1175, 1204], "intend": [60, 89, 459, 654, 683, 1101, 1175, 1204], "rate": [60, 89, 477, 478, 483, 484, 485, 486, 487, 488, 489, 494, 503, 654, 683, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1136, 1145, 1175, 1204, 1342], "whether": [60, 89, 144, 155, 366, 454, 504, 505, 510, 512, 654, 683, 726, 770, 781, 782, 788, 798, 1012, 1061, 1096, 1146, 1147, 1152, 1154, 1175, 1204, 1354], "regular": [60, 89, 381, 442, 450, 459, 472, 475, 590, 591, 607, 608, 654, 683, 1027, 1084, 1092, 1101, 1114, 1117, 1175, 1204, 1321, 1347], "angular": [60, 89, 524, 564, 565, 654, 683, 1175, 1204, 1253, 1293, 1294], "express": [60, 89, 654, 683, 1175, 1204], "360": [60, 89, 134, 316, 353, 539, 654, 683, 764, 769, 960, 997, 1175, 1204, 1268, 1344, 1349, 1356, 1358], "represent": [60, 89, 409, 654, 683, 1175, 1204], "forbidden": [60, 89, 654, 683, 1175, 1204], "plane": [60, 89, 380, 493, 654, 683, 1026, 1062, 1063, 1135, 1175, 1204, 1358], "180": [60, 89, 120, 122, 512, 539, 654, 683, 714, 716, 781, 782, 1154, 1175, 1204, 1268, 1349, 1361], "gate_z": [60, 72, 89, 101, 654, 666, 683, 695, 1175, 1187, 1204, 1216], "gate_x": [60, 72, 89, 101, 654, 666, 683, 695, 1175, 1187, 1204, 1216], "gate_i": [60, 72, 89, 101, 654, 666, 683, 695, 1175, 1187, 1204, 1216], "system": [60, 89, 121, 122, 123, 129, 133, 136, 137, 141, 142, 362, 372, 380, 439, 449, 496, 654, 683, 715, 716, 717, 757, 765, 776, 777, 785, 786, 1008, 1018, 1026, 1056, 1061, 1081, 1091, 1138, 1175, 1204, 1355, 1360], "earth": [60, 89, 118, 119, 122, 125, 496, 543, 569, 631, 654, 683, 712, 713, 716, 719, 1138, 1175, 1204, 1272, 1298], "radiu": [60, 89, 118, 119, 120, 122, 125, 478, 494, 496, 515, 543, 569, 631, 654, 683, 712, 713, 714, 716, 719, 1058, 1059, 1060, 1061, 1064, 1065, 1120, 1136, 1138, 1157, 1175, 1204, 1272, 1298, 1342, 1353], "init_gate_x_y_z": [60, 89, 654, 683, 1175, 1204], "gate_latitud": [60, 71, 79, 89, 100, 108, 654, 665, 673, 683, 694, 702, 1175, 1186, 1194, 1204, 1215, 1223], "gate_longitud": [60, 71, 79, 89, 100, 108, 654, 665, 673, 683, 694, 702, 1175, 1186, 1194, 1204, 1215, 1223, 1349], "init_gate_longitude_latitud": [60, 89, 654, 683, 1175, 1204, 1349], "gate_altitud": [60, 71, 78, 89, 100, 107, 654, 665, 672, 683, 694, 701, 1175, 1186, 1193, 1204, 1215, 1222], "init_gate_altitud": [60, 89, 654, 683, 1175, 1204, 1349], "actual": [60, 89, 376, 380, 477, 654, 683, 772, 1022, 1026, 1061, 1119, 1175, 1204, 1355, 1363], "flag": [60, 89, 130, 254, 376, 481, 507, 508, 511, 515, 525, 526, 553, 556, 654, 683, 761, 898, 1022, 1123, 1149, 1150, 1153, 1157, 1175, 1204, 1254, 1255, 1282, 1285, 1363], "transit": [60, 71, 72, 89, 100, 101, 164, 176, 179, 182, 183, 204, 211, 215, 216, 217, 218, 254, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 459, 472, 507, 654, 665, 666, 683, 694, 695, 735, 747, 775, 807, 819, 822, 825, 826, 848, 855, 859, 860, 861, 862, 898, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1101, 1114, 1149, 1175, 1186, 1187, 1204, 1215, 1216], "ye": [60, 89, 130, 654, 683, 761, 1175, 1204], "aircraft": [60, 89, 216, 376, 654, 683, 860, 1022, 1175, 1204], "longitudin": [60, 89, 216, 228, 239, 243, 244, 253, 654, 683, 860, 872, 883, 887, 888, 897, 1175, 1204], "orthogon": [60, 89, 493, 654, 683, 1135, 1175, 1204], "platform": [60, 89, 654, 683, 1175, 1204], "right": [60, 89, 315, 424, 480, 500, 654, 683, 959, 1122, 1142, 1175, 1204, 1321, 1322, 1357], "wing": [60, 89, 654, 683, 1175, 1204], "down": [60, 89, 654, 683, 1175, 1204, 1304], "track": [60, 89, 654, 683, 1175, 1204], "compass": [60, 89, 654, 683, 1175, 1204], "nose": [60, 89, 654, 683, 1175, 1204], "had": [60, 89, 381, 654, 683, 1027, 1175, 1204, 1312, 1363], "georefer": [60, 89, 654, 683, 1175, 1204], "lead": [60, 89, 654, 683, 1175, 1204, 1305, 1316], "centric": [60, 89, 654, 683, 1175, 1204], "avaiabl": [60, 89, 654, 683, 1175, 1204], "radar_paramet": [60, 89, 654, 683, 1175, 1204], "subconvent": [60, 89, 654, 683, 1175, 1204], "calibr": [60, 89, 138, 139, 143, 146, 483, 654, 683, 778, 780, 787, 790, 1125, 1175, 1204], "ngate": [60, 70, 89, 99, 654, 664, 683, 693, 1175, 1185, 1204, 1214, 1236, 1237, 1238, 1349, 1358], "nrai": [60, 70, 89, 99, 447, 544, 654, 664, 683, 693, 1089, 1175, 1185, 1204, 1214, 1238, 1273, 1305, 1349, 1358], "nsweep": [60, 89, 654, 683, 1175, 1204, 1236, 1237, 1330, 1331, 1344, 1358], "loos": [61, 62, 90, 91, 563, 655, 656, 684, 685, 1176, 1177, 1205, 1206, 1292], "existing_field_nam": [62, 91, 656, 685, 1177, 1206], "done": [62, 91, 130, 134, 496, 515, 656, 685, 759, 761, 769, 1138, 1157, 1177, 1206, 1349, 1360, 1361, 1363], "both": [62, 91, 130, 179, 183, 363, 501, 502, 656, 685, 761, 775, 822, 826, 1009, 1143, 1144, 1177, 1206, 1313, 1316, 1318, 1322, 1337, 1347, 1353, 1354, 1355, 1360, 1361], "reflectivity_copi": [62, 91, 656, 685, 1177, 1206], "gatefilt": [63, 92, 130, 131, 132, 134, 137, 179, 180, 181, 182, 183, 184, 185, 186, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 428, 481, 506, 507, 508, 513, 517, 518, 657, 686, 750, 751, 752, 761, 762, 763, 764, 769, 775, 777, 822, 823, 824, 825, 826, 827, 828, 829, 848, 855, 858, 859, 860, 861, 862, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002, 1054, 1064, 1065, 1070, 1123, 1148, 1149, 1150, 1155, 1160, 1161, 1178, 1207, 1308, 1316, 1317, 1318, 1322, 1341, 1348, 1351, 1357, 1361], "updat": [63, 92, 480, 539, 657, 686, 1122, 1178, 1207, 1268, 1305, 1323, 1342, 1347, 1355, 1361], "mask": [63, 92, 130, 131, 132, 135, 140, 155, 157, 160, 164, 171, 175, 176, 179, 181, 182, 183, 184, 185, 186, 204, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 372, 373, 374, 428, 442, 450, 459, 472, 475, 509, 551, 563, 590, 591, 607, 608, 657, 686, 726, 728, 731, 735, 742, 746, 747, 761, 762, 763, 764, 771, 775, 784, 798, 800, 803, 807, 814, 818, 819, 822, 824, 825, 826, 827, 828, 829, 848, 855, 858, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002, 1018, 1019, 1020, 1065, 1070, 1084, 1092, 1101, 1114, 1117, 1151, 1178, 1207, 1239, 1280, 1292, 1305, 1307, 1316, 1317, 1342, 1348, 1349, 1350, 1355, 1356, 1357, 1358], "condit": [63, 92, 130, 151, 155, 157, 164, 171, 176, 381, 657, 686, 722, 726, 728, 735, 742, 747, 761, 794, 798, 800, 807, 814, 819, 1027, 1178, 1207, 1308, 1350, 1354], "append": [63, 92, 657, 686, 1178, 1207, 1344], "filtered_": [63, 92, 657, 686, 1178, 1207], "check": [64, 73, 93, 102, 131, 132, 134, 375, 427, 477, 480, 509, 543, 553, 569, 574, 658, 667, 687, 696, 762, 763, 764, 769, 781, 782, 1021, 1069, 1119, 1122, 1151, 1179, 1188, 1208, 1217, 1272, 1282, 1298, 1303, 1347, 1360, 1361, 1362], "keyerror": [64, 93, 417, 418, 658, 687, 1037, 1038, 1048, 1049, 1179, 1208, 1360], "array_lik": [65, 94, 555, 659, 688, 1180, 1209, 1284], "view": [66, 67, 69, 95, 96, 98, 383, 415, 416, 422, 660, 661, 663, 689, 690, 692, 1030, 1035, 1036, 1042, 1046, 1047, 1052, 1181, 1182, 1184, 1210, 1211, 1213, 1322, 1351, 1353, 1358], "possibl": [66, 67, 69, 95, 96, 98, 376, 437, 510, 540, 547, 660, 661, 663, 689, 690, 692, 1022, 1079, 1152, 1181, 1182, 1184, 1210, 1211, 1213, 1269, 1276, 1305, 1321, 1342, 1351, 1353, 1355, 1356], "underli": [66, 67, 69, 95, 96, 98, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 363, 660, 661, 663, 689, 690, 692, 848, 855, 859, 860, 861, 862, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1009, 1181, 1182, 1184, 1210, 1211, 1213, 1347], "get_gate_x_y_z": [69, 98, 663, 692, 1184, 1213, 1332, 1333], "obtain": [69, 72, 98, 101, 127, 145, 433, 443, 453, 454, 462, 480, 510, 566, 663, 666, 692, 695, 753, 781, 789, 1075, 1085, 1095, 1096, 1104, 1122, 1152, 1184, 1187, 1213, 1216, 1295, 1344, 1349, 1356, 1357, 1361], "plot": [69, 72, 98, 101, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 442, 450, 459, 472, 475, 513, 518, 663, 666, 692, 695, 831, 832, 833, 834, 835, 836, 837, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 972, 973, 974, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1084, 1092, 1101, 1114, 1117, 1155, 1161, 1184, 1187, 1213, 1216, 1305, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1338, 1339, 1340, 1342, 1345, 1347, 1349, 1350, 1351, 1353, 1354, 1357, 1359], "spatial": [69, 72, 98, 101, 130, 663, 666, 692, 695, 761, 1184, 1187, 1213, 1216, 1305, 1353, 1357], "context": [69, 72, 98, 101, 663, 666, 692, 695, 1184, 1187, 1213, 1216, 1340, 1347, 1361], "request": [69, 98, 123, 372, 502, 663, 692, 717, 1018, 1064, 1065, 1144, 1184, 1213, 1305, 1347, 1361], "area": [70, 99, 204, 206, 211, 215, 216, 217, 218, 219, 271, 273, 278, 282, 283, 284, 285, 304, 306, 314, 315, 319, 320, 321, 322, 341, 343, 351, 352, 356, 357, 358, 359, 477, 496, 508, 515, 551, 664, 693, 760, 848, 850, 855, 859, 860, 861, 862, 863, 915, 917, 922, 926, 927, 928, 929, 948, 950, 958, 959, 963, 964, 965, 966, 985, 987, 995, 996, 1000, 1001, 1002, 1003, 1119, 1138, 1150, 1157, 1185, 1214, 1280], "squar": [70, 99, 427, 501, 504, 505, 506, 517, 530, 664, 693, 781, 1069, 1143, 1146, 1147, 1148, 1160, 1185, 1214, 1259], "assumpt": [70, 99, 493, 506, 664, 693, 1135, 1148, 1185, 1214], "size": [70, 99, 130, 131, 134, 182, 207, 274, 307, 344, 408, 425, 427, 437, 448, 464, 467, 468, 478, 481, 494, 506, 508, 510, 524, 541, 550, 558, 573, 664, 693, 752, 761, 762, 764, 769, 825, 851, 918, 951, 988, 1060, 1062, 1063, 1064, 1065, 1067, 1069, 1079, 1090, 1106, 1109, 1110, 1120, 1123, 1136, 1148, 1150, 1152, 1185, 1214, 1239, 1253, 1270, 1279, 1287, 1302, 1323, 1336, 1340, 1342], "reset_gate_coord": [71, 100, 665, 694, 1186, 1215], "filter_transit": [71, 72, 100, 101, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 665, 666, 694, 695, 848, 855, 859, 860, 861, 862, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1186, 1187, 1215, 1216], "With": [71, 72, 100, 101, 665, 666, 694, 695, 1186, 1187, 1215, 1216, 1347, 1348, 1349], "therefor": [71, 72, 100, 101, 506, 665, 666, 694, 695, 1148, 1186, 1187, 1215, 1216, 1351, 1357, 1358], "more": [71, 72, 77, 100, 101, 106, 131, 134, 234, 380, 428, 477, 478, 481, 494, 515, 532, 533, 665, 666, 671, 694, 695, 700, 762, 769, 781, 878, 1026, 1061, 1064, 1065, 1070, 1119, 1120, 1123, 1136, 1157, 1186, 1187, 1192, 1215, 1216, 1221, 1261, 1262, 1305, 1316, 1321, 1332, 1333, 1347, 1351, 1355, 1356, 1357, 1358, 1361], "effici": [71, 72, 100, 101, 477, 531, 665, 666, 694, 695, 1064, 1119, 1186, 1187, 1215, 1216, 1260, 1347, 1351], "than": [71, 72, 100, 101, 131, 137, 140, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 477, 478, 494, 496, 506, 539, 551, 561, 665, 666, 694, 695, 762, 772, 777, 784, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1119, 1120, 1136, 1138, 1148, 1186, 1187, 1215, 1216, 1268, 1280, 1290, 1305, 1342, 1355, 1356, 1357, 1363], "through": [71, 72, 100, 101, 218, 284, 321, 358, 443, 462, 503, 665, 666, 694, 695, 862, 928, 965, 1002, 1085, 1104, 1145, 1186, 1187, 1215, 1216, 1316, 1321, 1356, 1361], "pleas": [71, 100, 287, 324, 576, 665, 694, 931, 968, 1186, 1215, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "get_field": [72, 101, 666, 695, 1187, 1216, 1332, 1333, 1355], "check_uniform": [73, 102, 667, 696, 1188, 1217], "lookuperror": [73, 102, 667, 696, 1188, 1217], "except": [73, 102, 380, 667, 696, 1026, 1043, 1188, 1217, 1353], "skip": [73, 102, 131, 132, 375, 427, 667, 696, 762, 763, 1021, 1069, 1188, 1217, 1356, 1361], "nyquist_veloc": [73, 102, 131, 132, 382, 667, 696, 762, 763, 1028, 1188, 1217, 1351, 1358], "slice": [74, 86, 103, 115, 230, 231, 236, 237, 238, 239, 250, 251, 252, 253, 668, 680, 697, 709, 874, 875, 880, 881, 882, 883, 894, 895, 896, 897, 1189, 1201, 1218, 1230, 1336, 1353, 1356, 1358], "out": [77, 106, 137, 181, 185, 378, 379, 380, 381, 382, 428, 495, 504, 505, 575, 579, 590, 591, 607, 608, 671, 700, 764, 767, 768, 777, 781, 782, 783, 824, 828, 1024, 1025, 1026, 1027, 1028, 1070, 1137, 1146, 1147, 1192, 1221, 1317, 1318, 1322, 1333, 1341, 1343, 1347, 1353, 1357, 1360, 1361, 1362], "_io": [77, 106, 671, 700, 1192, 1221], "textiowrapp": [77, 106, 671, 700, 1192, 1221], "stdout": [77, 106, 575, 671, 700, 1192, 1221], "encod": [77, 106, 381, 519, 671, 700, 1027, 1192, 1221, 1305], "utf": [77, 106, 671, 700, 1192, 1221], "print": [77, 106, 136, 137, 221, 240, 376, 506, 575, 579, 590, 591, 607, 608, 671, 700, 750, 776, 777, 865, 884, 1022, 1148, 1192, 1221, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1342, 1350, 1354, 1355, 1358], "compact": [77, 106, 671, 700, 1192, 1221], "f": [77, 106, 246, 352, 421, 671, 700, 890, 996, 1041, 1051, 1192, 1221, 1321, 1330, 1331, 1335, 1342, 1347, 1356, 1363], "minim": [77, 106, 480, 506, 515, 671, 700, 1122, 1148, 1157, 1192, 1221], "everyth": [77, 106, 671, 700, 1192, 1221, 1313, 1361], "output": [77, 106, 380, 428, 443, 462, 477, 480, 481, 496, 503, 510, 512, 543, 671, 700, 756, 1026, 1062, 1070, 1085, 1104, 1119, 1122, 1123, 1138, 1145, 1152, 1154, 1192, 1221, 1272, 1305, 1347, 1355, 1357], "screen": [77, 106, 671, 700, 1192, 1221], "gate_": [80, 109, 674, 703, 1195, 1224], "iter": [82, 83, 84, 85, 86, 87, 88, 111, 112, 113, 114, 115, 116, 117, 397, 421, 437, 452, 482, 506, 508, 541, 676, 677, 678, 679, 680, 681, 682, 705, 706, 707, 708, 709, 710, 711, 773, 1041, 1051, 1079, 1094, 1124, 1148, 1150, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1270, 1358], "over": [84, 87, 88, 113, 116, 117, 130, 131, 135, 181, 204, 206, 211, 215, 216, 217, 218, 235, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 397, 477, 478, 494, 496, 499, 512, 514, 540, 550, 678, 681, 682, 707, 710, 711, 759, 760, 761, 762, 766, 771, 781, 782, 824, 848, 850, 855, 859, 860, 861, 862, 879, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1119, 1120, 1136, 1138, 1141, 1154, 1156, 1199, 1202, 1203, 1228, 1231, 1232, 1269, 1279, 1316, 1342, 1344, 1347, 1350, 1356, 1358], "npuls": [89, 541, 546, 547, 548, 557, 558, 559, 560, 683, 1204, 1270, 1275, 1276, 1277, 1286, 1287, 1288, 1289], "doppler_veloc": [89, 480, 683, 1122, 1204], "doppler_frequ": [89, 683, 1204], "puls": [89, 138, 146, 452, 453, 496, 541, 546, 547, 548, 553, 557, 558, 559, 560, 683, 773, 778, 790, 1094, 1095, 1138, 1204, 1238, 1270, 1275, 1276, 1277, 1282, 1286, 1287, 1288, 1289, 1351], "npulses_max": [89, 683, 1204, 1238], "frequenc": [89, 382, 425, 437, 453, 454, 474, 483, 484, 485, 487, 488, 496, 497, 498, 506, 507, 508, 516, 683, 751, 752, 1028, 1067, 1079, 1095, 1096, 1116, 1125, 1126, 1127, 1129, 1130, 1138, 1139, 1140, 1148, 1149, 1150, 1158, 1204, 1357], "ke": [118, 119, 120, 496, 631, 712, 713, 714, 1138, 1305], "kilomet": [118, 478, 494, 712, 1062, 1120, 1136], "effect": [118, 119, 120, 138, 146, 155, 157, 164, 171, 176, 216, 474, 496, 712, 713, 714, 726, 728, 735, 742, 747, 778, 790, 798, 800, 807, 814, 819, 860, 1064, 1065, 1116, 1138, 1332, 1356], "scale": [118, 119, 120, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 381, 382, 444, 477, 506, 507, 712, 713, 714, 848, 855, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1027, 1028, 1064, 1065, 1086, 1119, 1148, 1149, 1324, 1357], "equat": [118, 506, 540, 712, 1148, 1269], "28": [118, 712, 1338, 1342, 1344, 1347, 1356, 1361], "b": [118, 477, 478, 494, 507, 518, 712, 1005, 1119, 1120, 1136, 1149, 1161, 1361], "doviak": [118, 425, 712, 1067], "zrnic": [118, 425, 472, 712, 1067, 1114], "sqrt": [118, 122, 496, 712, 716, 1138, 1332, 1333, 1344, 1356], "r": [118, 121, 122, 123, 124, 125, 130, 132, 136, 137, 194, 209, 210, 232, 248, 261, 276, 277, 294, 309, 310, 311, 312, 331, 346, 347, 348, 349, 432, 442, 446, 451, 452, 459, 465, 477, 478, 481, 484, 487, 488, 489, 494, 510, 512, 515, 517, 540, 541, 551, 712, 715, 716, 717, 718, 719, 761, 763, 776, 777, 838, 853, 854, 876, 892, 905, 920, 921, 938, 953, 954, 955, 956, 975, 990, 991, 992, 993, 1074, 1084, 1088, 1093, 1094, 1101, 1107, 1119, 1120, 1123, 1126, 1129, 1130, 1131, 1136, 1152, 1154, 1157, 1160, 1269, 1270, 1280, 1312, 1324, 1332, 1333, 1342, 1361], "sin": [118, 122, 125, 493, 712, 716, 719, 1135], "theta_": [118, 712], "arcsin": [118, 122, 712, 716], "frac": [118, 712], "theta_a": [118, 712], "arc": [118, 543, 712, 1272], "length": [118, 136, 137, 140, 141, 142, 481, 496, 506, 510, 546, 557, 558, 712, 776, 777, 781, 782, 783, 784, 785, 786, 1123, 1138, 1148, 1152, 1275, 1286, 1287], "6371": [118, 122, 125, 543, 569, 712, 716, 719, 1272, 1298], "weather": [118, 130, 138, 139, 143, 146, 442, 452, 459, 496, 506, 541, 639, 712, 761, 778, 780, 787, 790, 1061, 1084, 1094, 1101, 1138, 1148, 1270, 1312, 1321, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "edit": [118, 712, 1361], "1993": [118, 425, 712, 1067], "21": [118, 712, 1305, 1355], "vector": [119, 123, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 447, 501, 503, 504, 505, 528, 530, 531, 713, 717, 770, 779, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1089, 1143, 1145, 1146, 1147, 1257, 1259, 1260, 1356], "util": [119, 130, 131, 216, 483, 713, 752, 761, 762, 860, 1125, 1162, 1307, 1313, 1324, 1337, 1340, 1342, 1355, 1356, 1357, 1361], "antenna_to_cartesian": [119, 713], "cartograph": [121, 122, 123, 124, 125, 324, 715, 716, 717, 718, 719, 968], "build": [121, 123, 124, 151, 155, 157, 164, 171, 176, 382, 575, 715, 717, 718, 722, 726, 728, 735, 742, 747, 794, 798, 800, 807, 814, 819, 1028, 1347, 1360, 1361], "desir": [121, 123, 124, 155, 157, 164, 171, 176, 383, 459, 478, 494, 517, 547, 548, 560, 570, 571, 715, 717, 718, 726, 728, 735, 742, 747, 798, 800, 807, 814, 819, 1030, 1101, 1120, 1136, 1160, 1234, 1276, 1277, 1289, 1299, 1300, 1340, 1354], "6370997": [122, 125, 716, 719], "rho": [122, 716, 1355], "arctan2": [122, 716, 1344, 1356], "snyder": [122, 125, 716, 719], "manual": [122, 125, 716, 719, 1347], "geolog": [122, 125, 716, 719], "survei": [122, 125, 716, 719], "profession": [122, 125, 716, 719], "paper": [122, 125, 481, 716, 719, 1123, 1347, 1361], "1395": [122, 125, 716, 719], "1987": [122, 125, 716, 719], "pp": [122, 125, 425, 442, 450, 459, 472, 716, 719, 1067, 1084, 1092, 1101, 1114], "191": [122, 125, 716, 719], "202": [122, 125, 716, 719, 1332, 1338, 1359], "find": [123, 131, 134, 494, 495, 512, 542, 717, 762, 769, 781, 782, 1054, 1061, 1064, 1065, 1136, 1137, 1154, 1271, 1313, 1356, 1363], "arcco": [125, 719], "no_altitude_transform": [126, 720], "wgs84": [126, 218, 284, 321, 358, 380, 720, 862, 928, 965, 1002, 1026], "ch1903": [126, 720], "lv03": [126, 720], "formula": [126, 425, 720, 1067], "formeln": [126, 720], "und": [126, 720], "konstanten": [126, 720], "f\u00fcr": [126, 720], "die": [126, 720], "berechnung": [126, 720], "der": [126, 720], "schweizerischen": [126, 720], "schiefachsigen": [126, 720], "zylinderprojekt": [126, 720], "zwischen": [126, 720], "koordinatensystemen": [126, 720], "chapter": [126, 720], "n\u00e4herungsl\u00f6sungen": [126, 720], "bundesamt": [126, 720], "landestopografi": [126, 720], "swisstopo": [126, 720], "admin": [126, 720, 1361], "ch": [126, 720, 1343, 1344], "oktob": [126, 720], "2008": [126, 477, 510, 720, 1119, 1152, 1313], "input": [126, 136, 137, 380, 443, 451, 452, 462, 479, 480, 494, 496, 502, 503, 508, 510, 527, 539, 551, 720, 776, 777, 1026, 1062, 1063, 1085, 1093, 1094, 1104, 1121, 1122, 1136, 1138, 1144, 1145, 1150, 1152, 1256, 1268, 1280, 1342, 1354, 1357], "46": [126, 218, 284, 321, 358, 720, 862, 928, 965, 1002, 1340, 1357], "38": [126, 720, 1313], "87": [126, 720, 1061], "43": [126, 720, 1305], "49": [126, 720], "79": [126, 720], "650": [126, 720], "60": [126, 720, 1054, 1307, 1312, 1316, 1318, 1323, 1349, 1351, 1353, 1357], "result": [126, 130, 131, 132, 155, 157, 164, 171, 176, 204, 211, 214, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 362, 379, 383, 428, 480, 504, 505, 510, 511, 513, 517, 518, 519, 529, 541, 567, 720, 726, 728, 735, 742, 747, 759, 760, 761, 762, 763, 779, 798, 800, 807, 814, 819, 848, 855, 858, 859, 860, 861, 862, 875, 881, 883, 893, 895, 897, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002, 1008, 1025, 1030, 1062, 1063, 1065, 1070, 1122, 1146, 1147, 1152, 1153, 1155, 1160, 1161, 1258, 1270, 1296, 1313, 1343, 1347, 1353, 1356, 1361], "chy": [126, 720], "699": [126, 720], "999": [126, 130, 383, 720, 761, 1030, 1313, 1314, 1359], "76": [126, 720], "700000": [126, 720], "chx": [126, 720], "99": [126, 433, 512, 720, 1075, 1154, 1321], "97": [126, 720, 767, 768, 1316, 1318, 1322, 1324, 1336, 1340, 1342, 1349], "100000": [126, 720, 1353, 1356], "chh": [126, 720], "600": [126, 720, 1349], "05": [126, 130, 516, 720, 761, 1064, 1065, 1158, 1319, 1336, 1340, 1345, 1359], "ml_top": [127, 128, 433, 500, 753, 754, 1075, 1142], "3000": [127, 128, 433, 499, 515, 753, 754, 1075, 1141, 1157, 1349, 1353], "ml_thick": [127, 128, 433, 753, 754, 1075], "200": [127, 128, 425, 433, 477, 512, 541, 559, 560, 753, 754, 759, 760, 1067, 1075, 1119, 1154, 1270, 1288, 1289, 1355, 1361], "val_ml": [127, 128, 753, 754], "val_dr": [127, 128, 753, 754], "h_max": [127, 128, 433, 512, 753, 754, 759, 760, 1075, 1154], "6000": [127, 128, 433, 510, 512, 753, 754, 759, 760, 1075, 1152, 1154, 1349, 1353], "h_re": [127, 128, 433, 512, 753, 754, 759, 760, 1075, 1154], "max_weight": [127, 753, 759, 760], "vpr_theo_dict": [127, 753], "refl_field": [127, 129, 133, 136, 137, 141, 142, 179, 182, 183, 426, 453, 454, 460, 461, 474, 477, 478, 479, 481, 484, 486, 487, 488, 489, 503, 504, 510, 515, 750, 751, 752, 753, 757, 759, 760, 765, 766, 767, 768, 775, 776, 777, 781, 782, 783, 785, 786, 822, 825, 826, 1065, 1068, 1095, 1096, 1102, 1103, 1116, 1119, 1120, 1121, 1123, 1126, 1128, 1129, 1130, 1131, 1145, 1146, 1152, 1157, 1307, 1342, 1343, 1357], "normalized_reflect": [127, 753], "comput": [127, 128, 139, 146, 182, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 482, 494, 496, 499, 503, 504, 505, 506, 507, 508, 510, 512, 514, 517, 520, 521, 522, 523, 524, 527, 528, 529, 530, 531, 541, 550, 554, 555, 557, 559, 560, 564, 565, 573, 751, 752, 753, 754, 756, 759, 760, 772, 773, 774, 779, 780, 781, 782, 790, 825, 1067, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1124, 1136, 1138, 1141, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1154, 1156, 1160, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1258, 1259, 1260, 1270, 1279, 1283, 1284, 1286, 1288, 1289, 1293, 1294, 1302, 1343, 1344, 1347, 1356], "appar": [127, 433, 753, 1075], "vpr": [127, 753, 759, 760, 1305, 1347], "melt": [127, 128, 181, 185, 433, 481, 484, 500, 506, 510, 511, 512, 513, 551, 753, 754, 759, 760, 766, 767, 781, 782, 783, 824, 828, 1075, 1123, 1126, 1142, 1148, 1152, 1153, 1154, 1155, 1280, 1305, 1324, 1342, 1343, 1357], "layer": [127, 128, 135, 181, 185, 380, 433, 481, 484, 500, 506, 510, 511, 512, 513, 750, 751, 752, 753, 754, 759, 760, 766, 767, 771, 781, 782, 783, 824, 828, 1026, 1075, 1123, 1126, 1142, 1148, 1152, 1153, 1154, 1155, 1239, 1305, 1357], "top": [127, 128, 138, 146, 240, 315, 433, 481, 490, 491, 500, 509, 510, 511, 512, 753, 754, 759, 760, 778, 790, 884, 959, 1065, 1075, 1123, 1132, 1133, 1142, 1151, 1152, 1153, 1154, 1321, 1340, 1353, 1361], "asl": [127, 128, 433, 753, 754, 1075], "thick": [127, 128, 135, 181, 185, 433, 512, 753, 754, 759, 760, 766, 767, 771, 781, 782, 783, 824, 828, 1075, 1154], "peak": [127, 128, 433, 510, 512, 540, 753, 754, 759, 760, 1075, 1152, 1154, 1269, 1305, 1351], "decreas": [127, 128, 479, 499, 503, 753, 754, 759, 760, 1121, 1141, 1145], "ratio": [127, 128, 182, 183, 184, 219, 285, 322, 359, 426, 435, 436, 496, 753, 754, 759, 760, 768, 775, 825, 826, 827, 863, 929, 966, 1003, 1068, 1077, 1078, 1138, 1357, 1358], "theoret": [127, 146, 433, 516, 753, 759, 760, 790, 1061, 1075, 1158], "beam": [127, 139, 433, 483, 496, 752, 753, 780, 1060, 1064, 1065, 1075, 1125, 1138], "multipli": [127, 433, 443, 478, 494, 512, 753, 1005, 1075, 1085, 1120, 1136, 1154, 1342, 1349], "radar_out": [127, 433, 753, 1075], "normal": [127, 136, 183, 204, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 410, 503, 563, 750, 753, 759, 760, 775, 776, 826, 848, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 922, 926, 927, 928, 948, 958, 959, 963, 964, 965, 985, 995, 996, 1000, 1001, 1002, 1145, 1292, 1332], "conta": [127, 128, 433, 481, 510, 511, 512, 577, 753, 754, 1075, 1123, 1152, 1153, 1154], "ideal": [128, 754], "val_theo_dict": [128, 754], "bottom": [128, 313, 315, 350, 433, 481, 500, 510, 511, 512, 754, 957, 959, 994, 1075, 1123, 1142, 1152, 1153, 1154, 1321, 1323], "ind_rmin": [129, 133, 141, 142, 451, 757, 765, 766, 767, 768, 785, 786, 1093], "10": [129, 133, 136, 137, 141, 142, 143, 146, 151, 184, 186, 218, 284, 321, 358, 425, 437, 442, 452, 472, 478, 481, 492, 494, 503, 507, 508, 510, 512, 541, 551, 722, 757, 764, 765, 766, 767, 768, 773, 776, 777, 785, 786, 787, 790, 794, 827, 829, 862, 928, 965, 1002, 1061, 1065, 1067, 1079, 1084, 1094, 1114, 1120, 1123, 1134, 1136, 1145, 1149, 1150, 1152, 1154, 1270, 1280, 1308, 1313, 1316, 1317, 1321, 1324, 1325, 1327, 1329, 1332, 1333, 1336, 1342, 1344, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1361], "ind_rmax": [129, 133, 141, 142, 757, 765, 766, 767, 768, 785, 786], "500": [129, 133, 141, 142, 510, 757, 765, 766, 767, 768, 785, 786, 1054, 1152, 1316, 1322, 1326, 1355, 1356], "min_rcon": [129, 133, 141, 142, 757, 765, 781, 782, 785, 786], "11": [129, 133, 140, 141, 142, 218, 284, 321, 358, 434, 478, 494, 504, 505, 567, 757, 765, 784, 785, 786, 862, 928, 965, 1002, 1076, 1120, 1136, 1146, 1147, 1296, 1313, 1340, 1354, 1358], "zmin": [129, 133, 141, 142, 757, 765, 766, 767, 768, 785, 786, 1356], "20": [129, 133, 141, 142, 179, 182, 183, 433, 510, 512, 513, 757, 759, 760, 765, 766, 767, 772, 775, 781, 782, 783, 785, 786, 822, 825, 826, 1075, 1152, 1154, 1155, 1312, 1313, 1316, 1322, 1323, 1324, 1327, 1329, 1330, 1331, 1332, 1333, 1335, 1341, 1342, 1349, 1353, 1356, 1358], "zmax": [129, 133, 141, 142, 757, 765, 766, 767, 768, 785, 786, 1356], "40": [129, 132, 133, 141, 142, 246, 437, 477, 504, 546, 757, 763, 765, 766, 785, 786, 890, 1079, 1119, 1146, 1275, 1308, 1318, 1323, 1327, 1329, 1332, 1342, 1355, 1356, 1357], "psidp_field": [129, 141, 142, 506, 507, 508, 757, 785, 786, 1148, 1149, 1150, 1343, 1357], "public": [129, 133, 757, 765, 1304, 1349, 1350, 1351, 1353, 1354, 1355, 1358], "min": [129, 133, 141, 142, 179, 206, 273, 306, 343, 451, 510, 553, 757, 759, 760, 765, 766, 767, 768, 772, 785, 786, 822, 850, 917, 950, 987, 1093, 1152, 1282, 1344, 1356], "max": [129, 133, 141, 142, 179, 206, 273, 306, 343, 380, 451, 481, 510, 553, 757, 759, 760, 765, 766, 767, 768, 781, 782, 785, 786, 822, 850, 917, 950, 987, 1026, 1093, 1123, 1152, 1282, 1312, 1316, 1321, 1322, 1327, 1335, 1344, 1356], "look": [129, 133, 141, 142, 144, 145, 428, 450, 451, 510, 513, 542, 557, 559, 560, 757, 765, 766, 767, 768, 772, 781, 782, 783, 785, 786, 788, 789, 1070, 1092, 1093, 1152, 1155, 1271, 1286, 1288, 1289, 1312, 1313, 1316, 1323, 1347, 1349, 1351, 1353, 1356, 1357, 1358], "continu": [129, 130, 132, 133, 136, 141, 142, 511, 757, 761, 763, 765, 776, 785, 786, 1153], "consecut": [129, 133, 141, 142, 510, 541, 757, 765, 781, 782, 785, 786, 1152, 1270], "rain": [129, 133, 141, 142, 433, 442, 459, 477, 483, 484, 485, 486, 489, 494, 515, 750, 752, 757, 765, 766, 767, 781, 782, 783, 785, 786, 1075, 1084, 1101, 1119, 1125, 1126, 1127, 1128, 1131, 1136, 1157, 1324, 1332, 1342, 1343, 1356, 1357], "cell": [129, 133, 141, 142, 757, 765, 785, 786, 1332], "phidp_dict": [129, 141, 142, 438, 439, 757, 785, 786, 1080, 1081], "last_radar": [130, 761], "sonde_profil": [130, 761], "filt": [130, 761], "rsl_badval": [130, 761], "131072": [130, 761], "keep_origin": [130, 131, 132, 761, 762, 763], "set_limit": [130, 131, 132, 761, 762, 763, 1324, 1325, 1326, 1328, 1330, 1331, 1332, 1333, 1335], "vel_field": [130, 131, 132, 179, 427, 493, 518, 761, 762, 763, 822, 1069, 1135, 1161, 1351], "corr_vel_field": [130, 131, 132, 761, 762, 763], "last_vel_field": [130, 761], "debug": [130, 136, 137, 221, 240, 376, 506, 575, 750, 761, 776, 777, 865, 884, 1022, 1148], "max_shear": [130, 761], "sign": [130, 492, 517, 518, 761, 1134, 1160, 1161, 1305, 1332, 1333, 1356], "dealia": [130, 131, 132, 480, 761, 762, 763, 1122, 1305, 1306, 1309, 1310, 1351, 1356, 1359], "4dd": [130, 761, 1305], "univers": [130, 377, 489, 761, 1023, 1131, 1347], "washington": [130, 761], "previou": [130, 315, 352, 480, 510, 759, 760, 761, 959, 996, 1122, 1152], "sound": [130, 492, 517, 518, 761, 1134, 1160, 1161], "must": [130, 315, 365, 369, 370, 375, 381, 425, 477, 481, 496, 501, 506, 507, 508, 511, 519, 568, 750, 751, 752, 761, 959, 1011, 1015, 1016, 1021, 1027, 1067, 1119, 1123, 1138, 1143, 1148, 1149, 1150, 1153, 1297, 1342, 1347, 1355, 1360, 1361], "For": [130, 230, 236, 238, 250, 252, 370, 380, 504, 505, 506, 761, 874, 880, 882, 894, 896, 1016, 1026, 1064, 1146, 1147, 1148, 1312, 1316, 1343, 1354, 1358, 1361, 1363], "best": [130, 761], "argument": [130, 131, 132, 204, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 249, 250, 251, 252, 253, 271, 278, 282, 283, 284, 304, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 348, 349, 350, 351, 352, 353, 356, 357, 358, 372, 374, 382, 383, 507, 508, 761, 762, 763, 848, 855, 859, 860, 861, 862, 874, 875, 877, 878, 879, 880, 881, 882, 883, 893, 894, 895, 896, 897, 915, 922, 926, 927, 928, 948, 955, 956, 957, 958, 959, 960, 963, 964, 965, 985, 992, 993, 994, 995, 996, 997, 1000, 1001, 1002, 1018, 1020, 1028, 1030, 1061, 1065, 1149, 1150, 1305, 1361], "_fourdd_interfac": [130, 761], "fourdd_dealia": [130, 761], "fine": [130, 761], "tune": [130, 761, 1342], "behavior": [130, 315, 370, 383, 761, 959, 1016, 1030], "fourdd": [130, 761], "dealias": [130, 131, 132, 480, 761, 762, 763, 1122, 1308, 1312, 1347, 1348, 1355, 1361], "reflectivity_horizont": [130, 750, 761, 1241, 1307, 1316, 1321, 1323, 1327, 1329, 1330, 1331, 1335, 1337, 1340, 1341, 1342, 1349, 1350], "mean_doppler_veloc": [130, 761, 1335, 1340, 1349], "successfulli": [130, 761], "greatli": [130, 761], "improv": [130, 507, 508, 551, 761, 1149, 1150, 1280, 1305, 1324], "final": [130, 437, 482, 507, 508, 761, 1079, 1124, 1149, 1150, 1342, 1356], "horizontalwindprofil": [130, 364, 365, 518, 568, 761, 1010, 1011, 1161, 1297, 1361], "sond": [130, 131, 364, 365, 495, 761, 762, 1010, 1011, 1137, 1308], "moment_based_gate_filt": [130, 131, 132, 761, 762, 763, 1065], "bergen": [130, 761], "alber": [130, 761], "bad": [130, 481, 506, 507, 508, 515, 761, 1123, 1148, 1149, 1150, 1157, 1356], "rsl": [130, 363, 375, 376, 761, 1009, 1021, 1022, 1305, 1347, 1360], "procedur": [130, 131, 132, 761, 762, 763], "fail": [130, 131, 132, 370, 380, 761, 762, 763, 1016, 1026, 1361], "element": [130, 131, 132, 134, 151, 382, 509, 554, 555, 564, 565, 722, 761, 762, 763, 764, 769, 794, 1028, 1062, 1063, 1064, 1065, 1151, 1283, 1284, 1293, 1294, 1356], "maxshear": [130, 761], "shear": [130, 490, 491, 761, 1132, 1133], "incorpor": [130, 494, 761, 1136, 1342], "toward": [130, 492, 517, 518, 761, 1134, 1160, 1161], "neg": [130, 204, 215, 271, 282, 304, 319, 341, 356, 480, 492, 506, 517, 518, 539, 761, 848, 859, 915, 926, 948, 963, 985, 1000, 1122, 1134, 1148, 1160, 1161, 1268, 1305, 1321, 1356], "compthresh": [130, 761], "fraction": [130, 761, 1062, 1063, 1342, 1358], "threshold": [130, 134, 179, 181, 182, 183, 184, 185, 186, 437, 477, 478, 481, 482, 484, 487, 488, 492, 494, 540, 541, 546, 547, 548, 551, 557, 558, 559, 560, 761, 764, 769, 774, 775, 822, 824, 825, 826, 827, 828, 829, 1005, 1079, 1119, 1120, 1123, 1124, 1126, 1129, 1130, 1134, 1136, 1269, 1270, 1275, 1276, 1277, 1280, 1286, 1287, 1288, 1289, 1342, 1351, 1354], "mark": [130, 151, 155, 164, 176, 722, 726, 735, 747, 761, 794, 798, 807, 819], "begin": [130, 131, 132, 136, 137, 151, 189, 191, 211, 215, 256, 258, 278, 282, 289, 291, 314, 319, 326, 328, 351, 356, 370, 371, 374, 376, 722, 761, 762, 763, 776, 777, 794, 833, 835, 855, 859, 900, 902, 922, 926, 933, 935, 958, 963, 970, 972, 995, 1000, 1016, 1017, 1020, 1022], "unfold": [130, 131, 136, 137, 506, 761, 762, 776, 777, 1148, 1356], "compthresh2": [130, 761], "thresh": [130, 484, 487, 488, 761, 1126, 1129, 1130, 1357], "adjac": [130, 761], "count": [130, 761, 1316, 1351, 1358], "against": [130, 155, 726, 761, 798, 1332], "question": [130, 761, 1006, 1065], "ckval": [130, 761], "absolut": [130, 215, 282, 319, 356, 524, 561, 761, 859, 926, 963, 1000, 1253, 1290], "below": [130, 135, 136, 137, 155, 169, 179, 181, 182, 183, 184, 185, 186, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 477, 478, 484, 487, 488, 494, 506, 512, 539, 540, 726, 740, 761, 764, 771, 775, 776, 777, 798, 812, 822, 824, 825, 826, 827, 828, 829, 848, 855, 858, 859, 860, 861, 862, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002, 1064, 1065, 1119, 1120, 1126, 1129, 1130, 1136, 1148, 1154, 1268, 1269, 1321, 1342, 1349, 1351, 1354, 1355, 1357, 1362], "stdthresh": [130, 761], "deviat": [130, 451, 492, 522, 523, 550, 555, 761, 772, 773, 779, 791, 1093, 1134, 1239, 1251, 1252, 1279, 1284, 1351], "window": [130, 136, 137, 140, 141, 142, 182, 427, 443, 448, 462, 464, 467, 468, 504, 505, 508, 510, 517, 524, 539, 546, 550, 557, 558, 567, 573, 752, 761, 776, 777, 781, 782, 783, 784, 785, 786, 825, 1069, 1085, 1090, 1104, 1106, 1109, 1110, 1146, 1147, 1150, 1152, 1160, 1253, 1268, 1275, 1279, 1286, 1287, 1296, 1302, 1347, 1361], "portion": [130, 761, 1353], "epsilon": [130, 761], "compar": [130, 155, 428, 437, 481, 512, 524, 541, 726, 759, 760, 761, 798, 1070, 1079, 1123, 1154, 1253, 1270, 1305, 1310, 1315, 1319, 1321, 1342, 1356, 1357, 1359, 1361], "miss": [130, 481, 506, 507, 508, 515, 761, 1123, 1148, 1149, 1150, 1157, 1305, 1313], "maxcount": [130, 761], "allow": [130, 134, 203, 270, 303, 340, 437, 477, 481, 492, 510, 539, 761, 764, 769, 847, 914, 947, 984, 1054, 1079, 1119, 1123, 1134, 1152, 1268, 1316, 1358, 1363], "pass2": [130, 761], "retain": [130, 131, 132, 179, 181, 182, 183, 184, 185, 186, 574, 761, 762, 763, 775, 822, 824, 825, 826, 827, 828, 829, 1303], "rm": [130, 761], "left": [130, 313, 315, 350, 424, 480, 500, 541, 761, 957, 959, 994, 1122, 1142, 1270, 1321, 1323, 1357], "proxim": [130, 761], "side": [130, 761], "doubl": [130, 380, 761, 1026, 1342], "captur": [130, 477, 761, 1119], "suffici": [130, 481, 761, 1123], "good": [130, 131, 761, 762, 1357], "mingood": [130, 761], "ba_mincount": [130, 761], "neighbor": [130, 372, 761, 1018, 1065, 1353], "ba_edgecount": [130, 761], "usuccess": [130, 761], "radialvelvolum": [130, 761], "lastvelvolum": [130, 761], "unfoldedvolum": [130, 761], "sondvolum": [130, 761], "vr_corr": [130, 761], "due": [130, 139, 428, 454, 460, 477, 561, 761, 780, 1070, 1096, 1102, 1119, 1290, 1316, 1351, 1357, 1360, 1363], "call": [130, 150, 203, 204, 206, 211, 215, 216, 217, 218, 233, 234, 270, 271, 273, 278, 282, 283, 284, 303, 304, 306, 314, 315, 319, 320, 321, 340, 341, 343, 351, 352, 356, 357, 358, 375, 380, 383, 396, 545, 761, 764, 847, 848, 850, 855, 859, 860, 861, 862, 877, 878, 914, 915, 917, 922, 926, 927, 928, 947, 948, 950, 958, 959, 963, 964, 965, 984, 985, 987, 995, 996, 1000, 1001, 1002, 1021, 1026, 1030, 1274, 1351, 1355, 1358, 1361, 1363], "long": [130, 141, 481, 504, 761, 785, 1123, 1146, 1350, 1358], "n": [130, 140, 193, 218, 260, 284, 293, 321, 330, 358, 477, 496, 503, 524, 546, 761, 784, 837, 862, 904, 928, 937, 965, 974, 1002, 1119, 1138, 1145, 1253, 1275, 1312, 1316, 1324, 1335, 1337, 1340, 1342, 1346, 1347, 1361, 1363], "jame": [130, 761], "houz": [130, 478, 494, 515, 761, 1005, 1120, 1136, 1157, 1342], "jr": [130, 478, 494, 515, 761, 1120, 1136, 1157, 1342], "four": [130, 372, 373, 375, 761, 1018, 1019, 1021, 1356], "dealis": [130, 761], "scheme": [130, 478, 494, 506, 761, 1005, 1061, 1120, 1136, 1148, 1342], "2001": [130, 761], "18": [130, 432, 761, 1074, 1322, 1333, 1356], "1674": [130, 761], "ref_vel_field": [131, 762], "interval_split": [131, 762], "interval_limit": [131, 762], "skip_between_rai": [131, 762], "100": [131, 183, 207, 212, 218, 274, 279, 284, 307, 321, 344, 358, 382, 437, 482, 496, 512, 518, 762, 764, 775, 826, 851, 856, 862, 918, 923, 928, 951, 965, 988, 1002, 1028, 1065, 1079, 1124, 1138, 1154, 1161, 1318, 1322, 1332, 1333, 1344, 1355, 1356], "skip_along_rai": [131, 762], "nyquist_vel": [131, 132, 762, 763, 1351], "check_nyquist_uniform": [131, 132, 427, 762, 763, 1069], "rays_wrap_around": [131, 132, 762, 763], "region": [131, 137, 246, 315, 352, 428, 477, 541, 546, 551, 553, 557, 558, 762, 777, 890, 959, 996, 1070, 1119, 1270, 1275, 1280, 1282, 1286, 1287, 1306, 1309, 1310, 1312, 1324, 1342, 1354, 1356, 1359, 1361], "similar": [131, 437, 762, 1079, 1316, 1353, 1356], "merg": [131, 155, 157, 164, 171, 176, 365, 539, 726, 728, 735, 742, 747, 762, 798, 800, 807, 814, 819, 1011, 1268, 1305, 1356, 1361], "pair": [131, 372, 383, 418, 762, 1018, 1030, 1038, 1043, 1049, 1349, 1356], "accomplish": [131, 376, 762, 1022], "problem": [131, 136, 137, 287, 324, 762, 776, 777, 931, 968, 1065, 1313], "network": [131, 374, 483, 752, 762, 1020, 1125, 1356], "reduct": [131, 762], "anchor": [131, 762], "onc": [131, 762, 1342, 1360, 1363], "complet": [131, 762], "simul": [131, 496, 568, 762, 1138, 1297, 1347], "simulated_vel_from_profil": [131, 762, 1361], "segment": [131, 136, 311, 312, 348, 349, 762, 776, 781, 782, 955, 956, 992, 993], "split": [131, 551, 762, 1280], "interv": [131, 158, 163, 172, 177, 179, 183, 524, 554, 555, 729, 734, 743, 748, 762, 775, 801, 806, 815, 820, 822, 826, 1253, 1283, 1284], "larger": [131, 496, 561, 762, 1138, 1290, 1342], "longer": [131, 539, 762, 781, 1268, 1347, 1360], "better": [131, 207, 212, 274, 279, 307, 316, 344, 353, 496, 762, 851, 856, 918, 923, 951, 960, 988, 997, 1138, 1305, 1351, 1356], "seem": [131, 762], "compromis": [131, 762], "artifact": [131, 762, 1351, 1353], "free": [131, 762, 1347], "cover": [131, 762], "entir": [131, 132, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 570, 571, 762, 763, 848, 855, 859, 860, 861, 875, 881, 883, 893, 895, 897, 915, 922, 926, 927, 948, 958, 959, 963, 964, 985, 995, 996, 1000, 1001, 1065, 1299, 1300], "join": [131, 762, 1173], "gap": [131, 134, 762, 764, 769, 1353], "connect": [131, 132, 762, 763], "disabl": [131, 132, 179, 181, 182, 183, 184, 185, 186, 762, 763, 775, 822, 824, 825, 826, 827, 828, 829, 1355], "across": [131, 762, 1341], "averag": [131, 442, 446, 450, 459, 465, 472, 478, 494, 496, 512, 517, 527, 529, 540, 554, 759, 760, 762, 781, 782, 1005, 1084, 1088, 1092, 1101, 1107, 1114, 1120, 1136, 1138, 1154, 1160, 1256, 1258, 1269, 1283, 1305, 1342, 1344, 1356], "individu": [131, 132, 762, 763, 1065], "ident": [131, 132, 369, 762, 763, 1015, 1064], "de": [131, 132, 350, 762, 763, 994, 1246, 1247], "alias": [131, 132, 480, 762, 763, 1122, 1246, 1247, 1351, 1356, 1358], "corr_vel": [131, 132, 762, 763, 1356], "unwrap_unit": [132, 763], "skip_check": [132, 763], "multi": [132, 517, 763, 1160, 1305], "unwrap": [132, 136, 137, 763, 776, 777], "independ": [132, 763], "often": [132, 428, 763, 1070], "give": [132, 380, 480, 541, 763, 781, 1026, 1122, 1270, 1305, 1347, 1351, 1354], "superior": [132, 763], "lower": [132, 231, 233, 234, 235, 237, 239, 249, 251, 253, 424, 477, 481, 763, 875, 877, 878, 879, 881, 883, 893, 895, 897, 1119, 1123, 1317, 1318, 1356], "contamin": [132, 510, 515, 546, 763, 1152, 1157, 1275], "clutter": [132, 435, 496, 504, 505, 541, 547, 559, 763, 1077, 1138, 1146, 1147, 1270, 1276, 1288, 1351, 1354, 1355], "poor": [132, 763], "verif": [132, 763], "appropi": [132, 203, 270, 303, 340, 540, 763, 847, 914, 947, 984, 1269], "offer": [132, 763], "extrem": [132, 230, 763, 874, 1357], "miguel": [132, 763], "arevallilo": [132, 763], "herraez": [132, 763], "david": [132, 763], "burton": [132, 763], "michael": [132, 763], "lalor": [132, 763], "munther": [132, 763], "gdeisat": [132, 763], "fast": [132, 763, 1357], "two": [132, 141, 230, 231, 382, 471, 473, 478, 494, 501, 502, 515, 528, 530, 561, 562, 564, 565, 763, 785, 874, 875, 1028, 1061, 1113, 1115, 1120, 1136, 1143, 1144, 1157, 1239, 1257, 1259, 1290, 1291, 1293, 1294, 1310, 1315, 1319, 1320, 1322, 1337, 1338, 1350, 1353, 1355, 1356, 1359, 1361], "sort": [132, 590, 763, 1356], "reliabl": [132, 763, 1356], "noncontinu": [132, 763], "optic": [132, 496, 763, 1138], "vol": [132, 432, 442, 450, 459, 472, 763, 1074, 1084, 1092, 1101, 1114, 1305], "41": [132, 763, 1340, 1344, 1353, 1356], "2002": [132, 763], "7437": [132, 763], "abdul": [132, 763], "rahman": [132, 763], "osten": [132, 763], "gorecki": [132, 763], "l": [132, 136, 137, 208, 212, 213, 246, 275, 279, 280, 308, 317, 345, 352, 354, 494, 551, 763, 776, 777, 852, 856, 857, 890, 919, 923, 924, 952, 961, 989, 996, 998, 1136, 1280, 1324], "novak": [132, 763], "ed": [132, 763], "metrologi": [132, 763], "2005": [132, 478, 494, 763, 1120, 1136, 1342], "32": [132, 459, 477, 541, 763, 1101, 1119, 1239, 1270, 1321, 1325, 1326, 1327, 1337, 1340, 1344, 1356, 1357, 1358], "intern": [132, 437, 481, 763, 1079, 1123], "societi": [132, 428, 763, 1070], "photon": [132, 763], "altern": [133, 428, 765, 1065, 1070, 1342, 1356], "suitabl": [133, 189, 225, 241, 256, 289, 326, 477, 512, 765, 766, 767, 768, 833, 869, 885, 900, 933, 970, 1119, 1154], "phidp0_dict": [133, 765], "first_gates_dict": [133, 765], "smooth": [134, 140, 141, 142, 448, 464, 467, 468, 504, 505, 506, 543, 569, 752, 769, 781, 782, 783, 784, 785, 786, 1090, 1106, 1109, 1110, 1146, 1147, 1148, 1272, 1298, 1332, 1333, 1353], "delta": [134, 507, 764, 769, 1149], "contigu": [134, 764, 769], "label": [134, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 278, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 309, 310, 313, 314, 315, 318, 319, 320, 321, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 350, 351, 352, 355, 356, 357, 358, 437, 574, 769, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 853, 854, 855, 858, 859, 860, 861, 862, 873, 875, 877, 878, 879, 881, 883, 891, 893, 895, 897, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 920, 921, 922, 925, 926, 927, 928, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 953, 954, 957, 958, 959, 962, 963, 964, 965, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 990, 991, 994, 995, 996, 999, 1000, 1001, 1002, 1079, 1303, 1305, 1316, 1322, 1323, 1332, 1333, 1337, 1343, 1355, 1357], "account": [134, 138, 769, 778, 1305], "scipi": [134, 443, 462, 506, 568, 764, 769, 1085, 1104, 1148, 1297, 1305, 1332, 1333, 1347, 1360, 1361, 1363], "core": [134, 380, 477, 478, 494, 507, 508, 545, 764, 769, 1005, 1026, 1054, 1065, 1119, 1120, 1136, 1149, 1150, 1274, 1342, 1355, 1357, 1361], "queri": [134, 764, 769, 1065], "investig": [134, 513, 764, 769, 1155, 1312], "tupl": [134, 204, 206, 209, 210, 211, 214, 215, 216, 217, 218, 220, 231, 233, 237, 239, 249, 251, 253, 271, 273, 276, 277, 278, 281, 282, 283, 284, 286, 304, 306, 309, 310, 314, 315, 318, 319, 320, 321, 323, 341, 343, 346, 347, 351, 352, 355, 356, 357, 358, 360, 418, 437, 501, 502, 563, 764, 769, 848, 850, 853, 854, 855, 858, 859, 860, 861, 862, 864, 875, 877, 881, 883, 893, 895, 897, 915, 917, 920, 921, 922, 925, 926, 927, 928, 930, 948, 950, 953, 954, 958, 959, 962, 963, 964, 965, 967, 985, 987, 990, 991, 995, 996, 999, 1000, 1001, 1002, 1004, 1038, 1049, 1061, 1062, 1063, 1065, 1079, 1143, 1144, 1235, 1292], "identifi": [134, 478, 480, 494, 540, 541, 764, 769, 1005, 1120, 1122, 1136, 1269, 1270, 1324, 1342, 1354], "examin": [134, 362, 376, 379, 769, 1008, 1022, 1025, 1361], "box": [134, 380, 769, 1026, 1343, 1356, 1357], "alwai": [134, 363, 376, 477, 478, 494, 506, 510, 769, 1009, 1022, 1119, 1120, 1136, 1148, 1152, 1305, 1347, 1355], "occur": [134, 159, 178, 372, 373, 730, 749, 769, 802, 821, 1018, 1019, 1351, 1356, 1358], "small": [134, 477, 478, 480, 481, 493, 494, 515, 559, 764, 769, 1119, 1120, 1122, 1123, 1135, 1136, 1157, 1288, 1316, 1332], "label_dict": [134, 764, 769], "readi": [134, 769], "fzl": [135, 136, 137, 750, 751, 752, 766, 767, 771, 776, 777, 781, 782, 783, 1357], "doc": [135, 137, 750, 751, 752, 766, 767, 771, 777, 781, 782, 783, 1347, 1360, 1361, 1363], "min_temp": [135, 185, 771, 828], "max_h_iso0": [135, 181, 771, 824], "beamwidth": [135, 139, 146, 181, 185, 218, 284, 321, 358, 453, 496, 512, 771, 780, 790, 824, 828, 862, 928, 965, 1002, 1095, 1138, 1154], "temp_field": [135, 185, 479, 503, 510, 512, 751, 752, 759, 760, 766, 767, 768, 771, 781, 782, 783, 828, 1121, 1145, 1152, 1154, 1343, 1357], "iso0_field": [135, 181, 479, 481, 503, 510, 511, 512, 751, 752, 759, 760, 766, 767, 771, 781, 782, 783, 824, 1121, 1123, 1145, 1152, 1153, 1154], "temp_ref": [135, 479, 499, 503, 510, 512, 751, 752, 759, 760, 766, 767, 771, 781, 782, 783, 1121, 1141, 1145, 1152, 1154, 1343, 1357], "construct": [135, 164, 176, 512, 735, 747, 771, 807, 819, 1065, 1154], "beyond": [135, 179, 559, 560, 576, 771, 822, 1288, 1289, 1360], "freez": [135, 442, 459, 481, 510, 511, 512, 750, 751, 752, 766, 767, 771, 781, 782, 783, 1084, 1101, 1123, 1152, 1153, 1154, 1357], "extent": [135, 496, 771, 1138, 1318], "reach": [135, 771], "0c": [135, 751, 752, 771], "isotherm": [135, 751, 752, 771], "height_over_iso0": [135, 479, 503, 510, 512, 751, 752, 759, 760, 766, 767, 771, 781, 782, 783, 1121, 1145, 1152, 1154, 1354], "fixed_fzl": [135, 751, 752, 767, 771, 781, 782, 783], "mask_fzl": [135, 771], "end_gate_arr": [135, 771], "self_const": [136, 137, 776, 777], "60000": [136, 137, 776, 777, 1318, 1322, 1353], "low_z": [136, 137, 776, 777], "high_z": [136, 137, 776, 777], "min_phidp": [136, 137, 776, 777], "01": [136, 137, 313, 350, 437, 506, 519, 546, 561, 776, 777, 957, 994, 1079, 1148, 1275, 1290, 1309, 1319, 1321, 1338, 1345, 1359], "min_ncp": [136, 183, 775, 776, 826], "min_rhv": [136, 182, 183, 775, 776, 825, 826], "4000": [136, 137, 750, 776, 777, 1353], "sys_phas": [136, 776], "ncpt": [136, 137, 776, 777], "overide_sys_phas": [136, 776], "nowrap": [136, 137, 776, 777], "really_verbos": [136, 137, 776, 777], "lp_solver": [136, 137, 776, 777], "cylp": [136, 137, 776, 777, 1347, 1360, 1363], "ncp_field": [136, 183, 750, 775, 776, 826, 1307], "rhv_field": [136, 179, 182, 183, 479, 503, 510, 750, 775, 776, 822, 825, 826, 1121, 1145, 1152, 1307, 1343, 1357], "kdp_field": [136, 137, 479, 484, 485, 487, 488, 503, 504, 505, 506, 507, 508, 768, 776, 777, 782, 1121, 1126, 1127, 1129, 1130, 1145, 1146, 1147, 1148, 1149, 1150, 1343, 1357], "unf_field": [136, 137, 776, 777], "window_len": [136, 137, 140, 776, 777, 784], "proc": [136, 137, 506, 776, 777, 1148], "coef": [136, 137, 776, 777], "914": [136, 137, 776, 777], "lp": [136, 137, 776, 777, 1347], "consist": [136, 137, 776, 777, 781, 782, 783, 1305, 1353], "low": [136, 137, 138, 139, 143, 146, 372, 506, 776, 777, 778, 780, 787, 790, 1018, 1148, 1324, 1356], "high": [136, 137, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 477, 506, 776, 777, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1119, 1148, 1343, 1357], "phi": [136, 750, 752, 776, 1307, 1355, 1357], "coher": [136, 183, 750, 775, 776, 826], "copolar": [136, 479, 481, 503, 510, 776, 1121, 1123, 1145, 1152, 1341], "automat": [136, 376, 381, 382, 427, 496, 510, 515, 776, 1022, 1027, 1028, 1065, 1069, 1138, 1152, 1157, 1327, 1347, 1361], "lpx": [136, 137, 776, 777], "messag": [136, 137, 221, 240, 372, 776, 777, 865, 884, 1018, 1313], "suppress": [136, 137, 506, 776, 777, 1148], "pyglpk": [136, 137, 776, 777, 1347, 1360], "cvxopt": [136, 137, 776, 777, 1347, 1360], "cylp_mp": [136, 137, 776, 777], "modul": [136, 137, 776, 777, 1241, 1304, 1312, 1313, 1347, 1350, 1351, 1353, 1354, 1355, 1358, 1360, 1361], "solv": [136, 137, 776, 777], "horizon": [136, 137, 479, 503, 510, 776, 777, 1121, 1145, 1152], "sobel": [136, 137, 776, 777], "worker": [136, 137, 776, 777], "expon": [136, 137, 483, 484, 485, 486, 487, 488, 752, 776, 777, 1125, 1126, 1127, 1128, 1129, 1130], "link": [136, 137, 579, 776, 777, 1357], "1z": [136, 137, 776, 777], "reproc_phas": [136, 137, 776, 777], "sob_kdp": [136, 137, 776, 777], "recalcul": [136, 137, 496, 776, 777, 1138, 1349], "giangrand": [136, 137, 510, 776, 777, 1152], "mcgraw": [136, 137, 776, 777], "lei": [136, 137, 776, 777], "applic": [136, 137, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 478, 494, 567, 776, 777, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1026, 1120, 1136, 1296, 1361], "program": [136, 137, 496, 776, 777, 1138, 1347, 1361], "atmo": [136, 137, 477, 503, 513, 551, 776, 777, 1119, 1145, 1155, 1280, 1324, 1361], "tech": [136, 137, 503, 551, 776, 777, 1145, 1280, 1324], "2013": [136, 137, 452, 507, 513, 541, 776, 777, 1094, 1149, 1155, 1270, 1358], "30": [136, 137, 437, 450, 452, 459, 477, 478, 494, 510, 541, 768, 773, 776, 777, 1079, 1092, 1094, 1101, 1119, 1120, 1136, 1152, 1270, 1316, 1323, 1327, 1329, 1342, 1351, 1356], "1716": [136, 137, 776, 777], "system_phas": [137, 777], "first_gate_sysp": [137, 777], "carri": [137, 777], "smaller": [137, 352, 496, 561, 777, 996, 1065, 1138, 1290, 1342, 1361], "off": [137, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 502, 777, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1144, 1321, 1342], "ptoa": [138, 778], "wavelen": [138, 143, 146, 778, 787, 790], "antenna_gain": [138, 146, 454, 778, 790, 1096], "coeff_band": [138, 146, 778, 790], "sun": [138, 139, 143, 144, 145, 146, 770, 772, 773, 774, 778, 779, 780, 787, 788, 789, 790, 791], "solar": [138, 143, 146, 778, 787, 790], "flux": [138, 143, 146, 778, 787, 790], "amospher": [138, 778], "wavelength": [138, 143, 146, 496, 778, 787, 790, 1138], "bandwidth": [138, 146, 778, 790], "s0": [138, 143, 778, 787], "10e": [138, 143, 146, 778, 787, 790], "m2": [138, 143, 146, 778, 787, 790], "hz": [138, 143, 146, 425, 453, 454, 497, 498, 778, 787, 790, 1067, 1095, 1096, 1139, 1140, 1330], "altub": [138, 139, 143, 146, 778, 780, 787, 790], "bech": [138, 139, 143, 146, 778, 780, 787, 790], "o": [138, 139, 143, 146, 380, 778, 780, 787, 790, 1026, 1173, 1323, 1347, 1360, 1361], "argemi": [138, 139, 143, 146, 778, 780, 787, 790], "t": [138, 139, 143, 146, 380, 450, 477, 478, 481, 494, 506, 507, 510, 512, 513, 518, 778, 780, 787, 790, 1026, 1092, 1119, 1120, 1123, 1136, 1148, 1149, 1152, 1154, 1155, 1161, 1316, 1342, 1347, 1349, 1357], "rigo": [138, 139, 143, 146, 778, 780, 787, 790], "2015": [138, 139, 143, 146, 483, 513, 778, 780, 787, 790, 1125, 1155], "align": [138, 139, 143, 146, 778, 780, 787, 790], "midrang": [138, 139, 143, 146, 778, 780, 787, 790], "angle_step": [139, 146, 780, 790], "integr": [139, 146, 751, 752, 780, 790, 1357], "fact": [139, 506, 508, 780, 1148, 1150], "la": [139, 780], "raw_data": [140, 784], "wind_len": [140, 142, 505, 784, 786, 1147], "min_valid": [140, 142, 505, 784, 786, 1147], "wind_typ": [140, 784], "median": [140, 437, 442, 450, 459, 472, 482, 527, 529, 541, 784, 1079, 1084, 1092, 1101, 1114, 1124, 1256, 1258, 1270], "less": [140, 477, 478, 494, 508, 551, 784, 1065, 1119, 1120, 1136, 1150, 1280, 1342, 1356, 1357], "move": [140, 141, 142, 147, 148, 150, 182, 448, 464, 467, 468, 496, 504, 505, 540, 784, 785, 786, 825, 1090, 1106, 1109, 1110, 1138, 1146, 1147, 1269, 1316, 1356, 1361], "data_smooth": [140, 784], "swind_len": [141, 504, 785, 1146], "smin_valid": [141, 504, 785, 1146], "lwind_len": [141, 504, 785, 1146], "31": [141, 372, 483, 504, 752, 785, 1018, 1125, 1146, 1313, 1340, 1355], "lmin_valid": [141, 504, 785, 1146], "zthr": [141, 504, 785, 1146], "short": [141, 504, 785, 1146, 1361], "solar_flux": [143, 146, 787, 790], "7": [143, 146, 182, 370, 452, 517, 541, 550, 573, 773, 787, 790, 825, 1016, 1094, 1160, 1270, 1279, 1302, 1313, 1322, 1324, 1336, 1347, 1354, 1355, 1357, 1358, 1360, 1361], "cm": [143, 146, 474, 787, 790, 1116, 1333, 1355], "measur": [143, 146, 426, 478, 483, 492, 493, 494, 503, 506, 507, 508, 781, 782, 787, 790, 1068, 1120, 1125, 1134, 1135, 1136, 1145, 1148, 1149, 1150, 1342, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1361], "lat_deg": [144, 788], "lon_deg": [144, 788], "refract": [144, 496, 788, 1138], "boolean": [144, 151, 157, 171, 478, 493, 494, 579, 590, 591, 607, 608, 722, 728, 742, 770, 788, 791, 794, 800, 814, 1005, 1120, 1135, 1136, 1354], "elev_sun": [144, 788], "azim_sun": [144, 788], "sensor": [144, 145, 788, 789], "pysolar": [145, 772, 773, 774, 789], "el": [145, 493, 525, 526, 789, 1135, 1254, 1255, 1356], "az": [145, 380, 789, 1026, 1330, 1331], "detect": [146, 480, 481, 494, 510, 512, 546, 772, 773, 774, 790, 1122, 1123, 1136, 1152, 1154, 1275, 1327, 1342, 1351, 1355, 1357], "would": [146, 428, 541, 790, 1070, 1270, 1312, 1313, 1351, 1353, 1361], "without": [146, 215, 282, 319, 356, 435, 451, 563, 790, 859, 926, 963, 1000, 1077, 1093, 1235, 1248, 1292, 1360], "attenu": [146, 425, 454, 460, 483, 484, 487, 497, 750, 751, 752, 772, 773, 774, 790, 1067, 1096, 1102, 1125, 1126, 1129, 1139, 1305, 1306, 1309, 1310, 1343, 1347, 1359], "characterist": [146, 790, 1353], "pwr_det": [146, 790], "warn": [147, 148, 150, 376, 379, 559, 1022, 1025, 1288, 1305, 1307, 1313, 1316, 1353, 1355, 1356, 1357], "categori": [147, 148, 477, 1119, 1357], "depend": [149, 484, 496, 510, 557, 576, 751, 752, 1062, 1065, 1126, 1138, 1152, 1286, 1355, 1361], "old_nam": 150, "new_nam": 150, "alia": [150, 1246, 1247, 1355], "namespac": [150, 624], "wrapper": [150, 1347, 1355], "deprecatedfunctionnam": 150, "exclude_bas": [151, 722, 794], "variou": [151, 179, 180, 181, 182, 183, 184, 185, 186, 545, 722, 764, 775, 794, 822, 823, 824, 825, 826, 827, 828, 829, 1274, 1305, 1310, 1339, 1347], "exclude_below": [151, 722, 794, 1316, 1341, 1354, 1357], "suggest": [151, 722, 794], "gate_exclud": [151, 722, 794, 1354], "gate_includ": [151, 722, 794, 1354], "lost": [151, 508, 574, 722, 794, 1150, 1303, 1353], "again": [151, 722, 794, 1305, 1313, 1323, 1355, 1360], "import": [151, 513, 517, 518, 722, 794, 1155, 1160, 1161, 1173, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1360], "io": [151, 576, 722, 794, 1061, 1307, 1308, 1312, 1313, 1314, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363], "radar_fil": [151, 608, 722, 794, 1308, 1321, 1323], "nc": [151, 722, 794, 1307, 1316, 1318, 1321, 1322, 1323, 1327, 1329, 1330, 1331, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1354, 1355, 1357], "normalized_coherent_pow": [151, 722, 794, 1354], "75": [151, 219, 285, 322, 359, 380, 437, 478, 494, 503, 510, 514, 722, 759, 760, 794, 863, 929, 966, 1003, 1026, 1079, 1120, 1136, 1145, 1152, 1156, 1316, 1332, 1342, 1349, 1353, 1354, 1355], "exclude_mask": [153, 155, 156, 157, 158, 159, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 724, 726, 727, 728, 729, 730, 733, 734, 735, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 796, 798, 799, 800, 801, 802, 805, 806, 807, 810, 812, 813, 814, 815, 817, 818, 819, 820, 821, 1317], "op": [153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 724, 726, 727, 728, 729, 730, 731, 733, 734, 735, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 796, 798, 799, 800, 801, 802, 803, 805, 806, 807, 810, 812, 813, 814, 815, 817, 818, 819, 820, 821], "inclus": [153, 155, 158, 163, 167, 169, 172, 177, 724, 726, 729, 734, 738, 740, 743, 748, 796, 798, 801, 806, 810, 812, 815, 820, 1061, 1065, 1235, 1321], "exclus": [155, 726, 798], "AND": [155, 157, 164, 171, 176, 726, 728, 735, 742, 747, 798, 800, 807, 814, 819], "OR": [155, 157, 164, 171, 176, 726, 728, 735, 742, 747, 798, 800, 807, 814, 819], "gener": [155, 157, 164, 171, 176, 188, 189, 190, 191, 192, 193, 204, 206, 211, 214, 215, 216, 217, 218, 225, 226, 227, 228, 231, 233, 234, 235, 237, 239, 241, 242, 243, 244, 249, 251, 253, 255, 256, 257, 258, 259, 260, 271, 273, 278, 281, 282, 283, 284, 288, 289, 290, 291, 292, 293, 304, 306, 314, 315, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 341, 343, 351, 352, 355, 356, 357, 358, 379, 382, 495, 496, 506, 514, 516, 726, 728, 735, 742, 747, 798, 800, 807, 814, 819, 832, 833, 834, 835, 836, 837, 848, 850, 855, 858, 859, 860, 861, 862, 869, 870, 871, 872, 875, 877, 878, 879, 881, 883, 885, 886, 887, 888, 893, 895, 897, 899, 900, 901, 902, 903, 904, 915, 917, 922, 925, 926, 927, 928, 932, 933, 934, 935, 936, 937, 948, 950, 958, 959, 962, 963, 964, 965, 969, 970, 971, 972, 973, 974, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1025, 1028, 1043, 1054, 1064, 1065, 1137, 1138, 1148, 1156, 1158, 1307, 1308, 1310, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347], "here": [155, 157, 164, 171, 176, 246, 726, 728, 735, 742, 747, 798, 800, 807, 814, 819, 890, 1316, 1342, 1347, 1349, 1354, 1355, 1356, 1357, 1360, 1363], "previous": [155, 157, 164, 171, 176, 726, 728, 735, 742, 747, 798, 800, 807, 814, 819, 1312, 1342, 1357], "becaus": [155, 157, 164, 506, 726, 728, 735, 798, 800, 807, 1148, 1342, 1356, 1357, 1363], "invalid": [155, 157, 159, 164, 179, 181, 182, 183, 184, 185, 186, 726, 728, 730, 735, 770, 775, 798, 800, 802, 807, 822, 824, 825, 826, 827, 828, 829], "shape": [157, 171, 370, 509, 563, 728, 742, 759, 800, 814, 1016, 1151, 1292, 1342, 1349, 1353, 1354, 1358, 1361], "v1": [158, 163, 172, 177, 729, 734, 743, 748, 801, 806, 815, 820, 1360], "v2": [158, 163, 172, 177, 729, 734, 743, 748, 801, 806, 815, 820, 1361], "insid": [158, 172, 511, 729, 743, 801, 815, 1153, 1350], "inf": [159, 178, 179, 183, 730, 749, 775, 802, 821, 822, 826], "outsid": [163, 177, 179, 183, 211, 214, 216, 217, 231, 233, 234, 235, 237, 239, 249, 251, 253, 278, 281, 283, 314, 315, 318, 320, 351, 352, 355, 357, 459, 460, 477, 734, 748, 775, 806, 820, 822, 826, 855, 858, 860, 861, 875, 877, 878, 879, 881, 883, 893, 895, 897, 922, 925, 927, 958, 959, 962, 964, 995, 996, 999, 1001, 1101, 1102, 1119, 1361], "trans_valu": [164, 176, 735, 747, 807, 819], "zdr_field": [179, 182, 436, 479, 503, 510, 750, 751, 752, 756, 767, 768, 772, 773, 781, 782, 783, 822, 825, 1078, 1121, 1145, 1152, 1343, 1357], "max_zdr": [179, 822], "max_rhv": [179, 822], "min_refl": [179, 183, 775, 822, 826], "max_refl": [179, 183, 775, 822, 826], "vel_lim": [179, 822], "rmin": [179, 446, 465, 510, 553, 772, 822, 1088, 1107, 1152, 1282], "2000": [179, 518, 822, 1161, 1317, 1353], "25000": [179, 426, 822, 1068, 1353], "elmin": [179, 510, 553, 772, 773, 774, 822, 1152, 1282], "elmax": [179, 510, 553, 767, 768, 822, 1152, 1282], "85": [179, 182, 822, 825, 1344, 1356], "suspect": [179, 772, 773, 774, 822], "bird": [179, 434, 822, 1076], "criteria": [179, 180, 181, 182, 183, 184, 185, 186, 506, 515, 553, 775, 822, 823, 824, 825, 826, 827, 828, 829, 1065, 1148, 1157, 1282], "built": [179, 180, 181, 182, 183, 184, 185, 186, 775, 822, 823, 824, 825, 826, 827, 828, 829, 1064, 1065], "well": [179, 181, 182, 183, 184, 185, 186, 352, 372, 374, 480, 576, 764, 775, 822, 824, 825, 826, 827, 828, 829, 996, 1018, 1020, 1065, 1122, 1313, 1322, 1347, 1353, 1354, 1355, 1356, 1357], "highest": [179, 182, 234, 822, 825, 878], "lowest": [179, 181, 182, 183, 184, 185, 186, 428, 509, 775, 822, 824, 825, 826, 827, 828, 829, 1070, 1151, 1312, 1316, 1340, 1342], "greatest": [179, 183, 775, 822, 826], "kept_valu": [180, 768, 823], "undesir": [180, 181, 182, 183, 184, 185, 186, 767, 768, 775, 823, 824, 825, 826, 827, 828, 829, 1065], "classif": [180, 477, 478, 479, 484, 494, 503, 511, 515, 768, 781, 782, 783, 823, 1005, 1119, 1120, 1121, 1126, 1136, 1145, 1153, 1157, 1310, 1339, 1345, 1355, 1359], "hydrometeor": [180, 380, 437, 479, 482, 484, 503, 511, 516, 768, 781, 782, 783, 823, 1026, 1079, 1121, 1124, 1126, 1145, 1153, 1158, 1310, 1339, 1345, 1351, 1355, 1359], "400": [181, 185, 824, 828, 1349], "primarili": [181, 185, 824, 828], "phi_field": [182, 825], "textzdr_field": [182, 825], "textrhv_field": [182, 825], "textphi_field": [182, 825], "textrefl_field": [182, 825], "wind_siz": [182, 427, 573, 825, 1069, 1302, 1351], "max_textphi": [182, 825], "max_textrhv": [182, 825], "max_textzdr": [182, 825], "max_textrefl": [182, 825], "cross": [182, 183, 198, 200, 204, 207, 218, 230, 231, 265, 267, 271, 274, 284, 298, 300, 304, 307, 321, 335, 337, 341, 344, 358, 434, 453, 454, 496, 532, 533, 775, 825, 826, 842, 844, 848, 851, 862, 874, 875, 909, 911, 915, 918, 928, 942, 944, 948, 951, 965, 979, 981, 985, 988, 1002, 1063, 1076, 1095, 1096, 1138, 1261, 1262, 1305, 1310, 1320, 1329, 1338, 1342, 1356, 1358, 1359], "min_rhi": [183, 775, 826], "snr_field": [184, 426, 461, 756, 768, 827, 1068, 1103], "min_snr": [184, 827], "max_snr": [184, 827], "snr": [184, 426, 461, 548, 560, 756, 768, 827, 1068, 1103, 1277, 1289, 1357], "vis_field": [186, 758, 829], "min_vi": [186, 829], "displai": [187, 204, 206, 211, 215, 216, 217, 218, 220, 254, 271, 273, 278, 282, 283, 284, 286, 287, 304, 306, 314, 315, 319, 320, 321, 323, 324, 341, 343, 351, 352, 356, 357, 358, 360, 380, 428, 496, 517, 518, 831, 848, 850, 855, 859, 860, 861, 862, 864, 898, 915, 917, 922, 926, 927, 928, 930, 931, 948, 950, 958, 959, 963, 964, 965, 967, 968, 985, 987, 995, 996, 1000, 1001, 1002, 1004, 1026, 1070, 1138, 1160, 1161, 1305, 1307, 1308, 1312, 1313, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1351, 1353, 1354, 1357, 1361], "airborn": [187, 831], "plot_var": [187, 254, 287, 324, 831, 898, 931, 968], "order": [187, 254, 287, 324, 376, 381, 382, 478, 494, 503, 506, 510, 512, 524, 831, 898, 931, 968, 1005, 1022, 1027, 1028, 1054, 1120, 1136, 1145, 1148, 1152, 1154, 1253, 1307, 1342, 1347, 1357, 1361], "cb": [187, 254, 287, 324, 831, 898, 931, 968, 1323], "colorbar": [187, 204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 240, 247, 249, 251, 253, 254, 271, 272, 273, 278, 281, 282, 283, 284, 287, 304, 305, 306, 314, 315, 318, 319, 320, 321, 324, 341, 342, 343, 351, 352, 355, 356, 357, 358, 831, 848, 849, 850, 855, 858, 859, 860, 861, 862, 873, 875, 877, 878, 879, 881, 883, 884, 891, 893, 895, 897, 898, 915, 916, 917, 922, 925, 926, 927, 928, 931, 948, 949, 950, 958, 959, 962, 963, 964, 965, 968, 985, 986, 987, 995, 996, 999, 1000, 1001, 1002, 1310, 1316, 1320, 1321, 1337, 1338, 1355, 1359], "loc": [187, 254, 287, 324, 831, 898, 931, 968, 1322], "titl": [188, 190, 191, 192, 193, 204, 206, 211, 214, 215, 216, 217, 218, 226, 227, 228, 231, 233, 234, 235, 237, 239, 242, 243, 244, 249, 251, 253, 255, 257, 258, 259, 260, 271, 273, 278, 281, 282, 283, 284, 288, 290, 291, 292, 293, 304, 306, 314, 315, 318, 319, 320, 321, 325, 327, 328, 329, 330, 341, 343, 351, 352, 355, 356, 357, 358, 832, 834, 835, 836, 837, 848, 850, 855, 858, 859, 860, 861, 862, 870, 871, 872, 875, 877, 878, 879, 881, 883, 886, 887, 888, 893, 895, 897, 899, 901, 902, 903, 904, 915, 917, 922, 925, 926, 927, 928, 932, 934, 935, 936, 937, 948, 950, 958, 959, 962, 963, 964, 965, 969, 971, 972, 973, 974, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1307, 1308, 1316, 1323, 1325, 1326, 1328, 1330, 1331, 1335, 1355, 1356, 1357, 1358], "ext": [189, 225, 241, 256, 289, 326, 833, 869, 885, 900, 933, 970], "datetime_format": [189, 191, 256, 258, 289, 291, 326, 328, 833, 835, 900, 902, 933, 935, 970, 972], "use_sweep_tim": [189, 191, 256, 258, 289, 291, 326, 328, 833, 835, 900, 902, 933, 935, 970, 972], "form": [189, 206, 225, 241, 256, 273, 289, 306, 326, 343, 833, 850, 869, 885, 900, 917, 933, 950, 970, 987], "radar_name_field_sweep_tim": [189, 256, 289, 326, 833, 900, 933, 970], "extens": [189, 225, 241, 256, 289, 326, 380, 833, 869, 885, 900, 933, 970, 1026, 1360], "strftime": [189, 191, 211, 215, 256, 258, 278, 282, 289, 291, 314, 319, 326, 328, 351, 356, 833, 835, 855, 859, 900, 902, 922, 926, 933, 935, 958, 963, 970, 972, 995, 1000], "vpt": [192, 203, 217, 259, 270, 283, 292, 303, 320, 329, 340, 357, 556, 836, 847, 861, 903, 914, 927, 936, 947, 964, 973, 984, 1001, 1285], "ndarrai": [193, 218, 260, 284, 293, 321, 330, 358, 503, 529, 550, 611, 837, 862, 904, 928, 937, 965, 974, 1002, 1145, 1258, 1279, 1358], "xaxi": [194, 197, 198, 261, 264, 265, 294, 297, 298, 331, 334, 335, 838, 841, 842, 905, 908, 909, 938, 941, 942, 975, 978, 979, 1323], "static": [195, 196, 207, 208, 212, 219, 220, 262, 263, 274, 275, 279, 285, 286, 295, 296, 307, 308, 322, 323, 332, 333, 344, 345, 359, 360, 839, 840, 851, 852, 856, 863, 864, 906, 907, 918, 919, 923, 929, 930, 939, 940, 951, 952, 966, 967, 976, 977, 988, 989, 1003, 1004, 1347], "yaxi": [195, 196, 199, 200, 201, 202, 262, 263, 266, 267, 268, 269, 295, 296, 299, 300, 301, 302, 332, 333, 336, 337, 338, 339, 839, 840, 843, 844, 845, 846, 906, 907, 910, 911, 912, 913, 939, 940, 943, 944, 945, 946, 976, 977, 980, 981, 982, 983], "custom": [203, 204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 270, 271, 272, 273, 278, 282, 283, 284, 303, 304, 305, 306, 314, 315, 319, 320, 321, 340, 341, 342, 343, 351, 352, 356, 357, 358, 410, 477, 792, 847, 848, 849, 850, 855, 859, 860, 861, 862, 873, 875, 877, 879, 881, 883, 891, 893, 895, 897, 914, 915, 916, 917, 922, 926, 927, 928, 947, 948, 949, 950, 958, 959, 963, 964, 965, 984, 985, 986, 987, 995, 996, 1000, 1001, 1002, 1064, 1119, 1353], "plot_ppi": [203, 270, 303, 340, 847, 914, 947, 984, 1308, 1343, 1349, 1356, 1357], "plot_sweep_grid": [203, 847], "target_azimuth": [204, 271, 304, 341, 532, 848, 915, 948, 985, 1261], "mask_tupl": [204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 848, 855, 858, 859, 860, 861, 862, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002], "norm": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 506, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1148, 1323, 1343, 1355, 1357], "cmap": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1026, 1316, 1321, 1322, 1323, 1324, 1328, 1331, 1333, 1335, 1336, 1341, 1342, 1350, 1351, 1355], "mask_outsid": [204, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 848, 855, 858, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002, 1330, 1331, 1357], "title_flag": [204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 848, 850, 855, 858, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 959, 962, 963, 964, 965, 985, 987, 995, 996, 999, 1000, 1001, 1002, 1335], "axislabel": [204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 318, 319, 320, 321, 341, 343, 351, 355, 356, 357, 358, 848, 850, 855, 858, 859, 860, 861, 862, 875, 877, 881, 883, 893, 895, 897, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 962, 963, 964, 965, 985, 987, 995, 999, 1000, 1001, 1002, 1325, 1330, 1331], "axislabels_flag": [204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 318, 319, 320, 321, 341, 343, 351, 355, 356, 357, 358, 848, 850, 855, 858, 859, 860, 861, 862, 875, 877, 881, 883, 893, 895, 897, 915, 917, 922, 925, 926, 927, 928, 948, 950, 958, 962, 963, 964, 965, 985, 987, 995, 999, 1000, 1001, 1002, 1342], "colorbar_flag": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002], "colorbar_label": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1307, 1308, 1312, 1325, 1326, 1330, 1331, 1332, 1333, 1337, 1356, 1357], "colorbar_ori": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 319, 320, 321, 341, 343, 351, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 963, 964, 965, 985, 987, 995, 1000, 1001, 1002], "reverse_xaxi": [204, 215, 271, 282, 304, 319, 341, 356, 848, 859, 915, 926, 948, 963, 985, 1000], "fig": [204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 281, 282, 283, 284, 304, 305, 306, 314, 315, 318, 319, 320, 321, 341, 342, 343, 351, 352, 355, 356, 357, 358, 848, 849, 850, 855, 858, 859, 860, 861, 862, 873, 875, 877, 878, 879, 881, 883, 891, 893, 895, 897, 915, 916, 917, 922, 925, 926, 927, 928, 948, 949, 950, 958, 959, 962, 963, 964, 965, 985, 986, 987, 995, 996, 999, 1000, 1001, 1002, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1341, 1343, 1344, 1351, 1353, 1354, 1356, 1357], "tick": [204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 315, 319, 320, 321, 341, 342, 343, 351, 352, 356, 357, 358, 848, 849, 850, 855, 859, 860, 861, 862, 873, 875, 877, 879, 881, 883, 891, 893, 895, 897, 915, 916, 917, 922, 926, 927, 928, 948, 949, 950, 958, 959, 963, 964, 965, 985, 986, 987, 995, 996, 1000, 1001, 1002, 1321, 1323, 1342, 1343, 1355, 1357], "ticklab": [204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 315, 319, 320, 321, 341, 342, 343, 351, 352, 356, 357, 358, 848, 849, 850, 855, 859, 860, 861, 862, 873, 875, 877, 879, 881, 883, 891, 893, 895, 897, 915, 916, 917, 922, 926, 927, 928, 948, 949, 950, 958, 959, 963, 964, 965, 985, 986, 987, 995, 996, 1000, 1001, 1002, 1342, 1343, 1357], "raster": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 496, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1026, 1138, 1305], "pseudo": [204, 271, 304, 341, 510, 848, 915, 948, 985, 1152, 1356], "associ": [204, 271, 304, 341, 477, 848, 915, 948, 985, 1043, 1119], "matplotlib": [204, 206, 209, 210, 211, 215, 216, 217, 218, 231, 232, 233, 235, 237, 239, 248, 249, 251, 253, 271, 273, 276, 277, 278, 282, 283, 284, 304, 306, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 380, 848, 850, 853, 854, 855, 859, 860, 861, 862, 875, 876, 877, 879, 881, 883, 892, 893, 895, 897, 915, 917, 920, 921, 922, 926, 927, 928, 948, 950, 953, 954, 955, 956, 957, 958, 959, 960, 963, 964, 965, 985, 987, 990, 991, 992, 993, 994, 995, 996, 997, 1000, 1001, 1002, 1026, 1305, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1360, 1363], "pcolormesh": [204, 206, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1316, 1332, 1342, 1355, 1356], "ncp": [204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 848, 855, 858, 859, 860, 861, 862, 915, 922, 925, 926, 927, 928, 948, 958, 959, 962, 963, 964, 965, 985, 995, 996, 999, 1000, 1001, 1002], "lumin": [204, 206, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 875, 877, 878, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002], "west": [204, 215, 271, 282, 304, 319, 341, 356, 848, 859, 915, 926, 948, 963, 985, 1000, 1325, 1356, 1357], "leav": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 875, 877, 879, 881, 883, 893, 895, 897, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002], "orient": [204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 319, 320, 321, 341, 342, 343, 351, 356, 357, 358, 848, 849, 850, 855, 859, 860, 861, 862, 873, 875, 877, 879, 881, 883, 891, 893, 895, 897, 915, 916, 917, 922, 926, 927, 928, 948, 949, 950, 958, 963, 964, 965, 985, 986, 987, 995, 1000, 1001, 1002, 1343, 1344, 1356, 1357], "treat": [204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 848, 855, 859, 860, 861, 875, 881, 883, 893, 895, 897, 915, 922, 926, 927, 948, 958, 959, 963, 964, 985, 995, 996, 1000, 1001], "themselv": [204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 848, 855, 859, 860, 861, 875, 881, 883, 893, 895, 897, 915, 922, 926, 927, 948, 958, 959, 963, 964, 985, 995, 996, 1000, 1001], "figur": [204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 281, 282, 283, 284, 304, 305, 306, 314, 315, 318, 319, 320, 321, 341, 342, 343, 351, 352, 355, 356, 357, 358, 848, 849, 850, 855, 858, 859, 860, 861, 862, 873, 875, 877, 878, 879, 881, 883, 891, 893, 895, 897, 915, 916, 917, 922, 925, 926, 927, 928, 948, 949, 950, 958, 959, 962, 963, 964, 965, 985, 986, 987, 995, 996, 999, 1000, 1001, 1002, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1341, 1342, 1350, 1351, 1353, 1354, 1355, 1356, 1357], "render": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002], "rather": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002], "larg": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 506, 515, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1148, 1157, 1357], "sure": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1316, 1323, 1342, 1360, 1361, 1363], "dpi": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002], "your": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 576, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002, 1310, 1320, 1322, 1338, 1342, 1347, 1355, 1357, 1359, 1360, 1361, 1363], "ep": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002], "svg": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 848, 850, 855, 859, 860, 861, 862, 915, 917, 922, 926, 927, 928, 948, 950, 958, 959, 963, 964, 965, 985, 987, 995, 996, 1000, 1001, 1002], "mappabl": [205, 229, 240, 247, 272, 305, 342, 849, 873, 884, 891, 916, 949, 986], "cax": [205, 229, 247, 272, 305, 342, 849, 873, 891, 916, 949, 986, 1343, 1357], "imag": [205, 229, 234, 247, 272, 305, 342, 477, 502, 524, 551, 849, 873, 878, 891, 916, 949, 986, 1119, 1144, 1253, 1280, 1310, 1320, 1338, 1340, 1342, 1359], "contourset": [205, 229, 240, 247, 272, 305, 342, 849, 873, 884, 891, 916, 949, 986], "etc": [205, 229, 233, 234, 240, 247, 272, 305, 315, 342, 352, 379, 442, 450, 459, 472, 475, 494, 849, 873, 877, 878, 884, 891, 916, 949, 959, 986, 996, 1025, 1084, 1092, 1101, 1114, 1117, 1136, 1355], "onto": [205, 229, 247, 249, 272, 305, 315, 342, 352, 509, 849, 873, 891, 893, 916, 949, 959, 986, 996, 1054, 1061, 1065, 1151], "drawn": [205, 229, 247, 272, 305, 342, 849, 873, 891, 916, 949, 986], "target_rang": [206, 273, 306, 343, 850, 917, 950, 987], "delta_x": [206, 273, 306, 343, 850, 917, 950, 987], "delta_i": [206, 273, 306, 343, 850, 917, 950, 987], "az_limit": [206, 273, 306, 343, 850, 917, 950, 987], "el_limit": [206, 273, 306, 343, 850, 917, 950, 987], "reflector": [206, 273, 306, 343, 850, 917, 950, 987], "griddata": [206, 273, 306, 343, 850, 917, 950, 987], "npt": [207, 212, 274, 279, 307, 316, 344, 353, 851, 856, 918, 923, 951, 960, 988, 997], "hair": [207, 274, 307, 344, 851, 918, 951, 988, 1329], "higher": [207, 212, 274, 279, 307, 316, 344, 353, 772, 851, 856, 918, 923, 951, 960, 988, 997, 1065, 1351, 1353], "col": [208, 212, 213, 275, 279, 280, 308, 317, 345, 354, 852, 856, 857, 919, 923, 924, 952, 961, 989, 998], "line": [208, 214, 232, 233, 234, 246, 248, 275, 281, 308, 311, 312, 315, 316, 318, 345, 348, 349, 352, 353, 355, 380, 506, 852, 858, 876, 877, 878, 890, 892, 919, 925, 952, 955, 956, 959, 960, 962, 989, 992, 993, 996, 997, 999, 1026, 1148, 1310, 1320, 1322, 1338, 1340, 1359, 1360, 1361, 1363], "color": [208, 209, 210, 212, 213, 232, 234, 275, 276, 277, 279, 280, 308, 309, 310, 315, 317, 345, 346, 347, 354, 380, 852, 853, 854, 856, 857, 876, 878, 919, 920, 921, 923, 924, 952, 953, 954, 959, 961, 989, 990, 991, 998, 1026, 1322, 1323, 1324, 1332, 1333, 1340, 1342, 1343, 1355, 1357], "linestyl": [208, 212, 213, 232, 275, 279, 280, 308, 317, 345, 354, 852, 856, 857, 876, 919, 923, 924, 952, 961, 989, 998, 1322, 1323, 1333], "symbol": [209, 210, 276, 277, 309, 310, 313, 346, 347, 350, 853, 854, 920, 921, 953, 954, 957, 990, 991, 994], "text_color": [209, 210, 276, 277, 309, 310, 346, 347, 853, 854, 920, 921, 953, 954, 990, 991], "text": [209, 210, 276, 277, 309, 310, 313, 346, 347, 350, 853, 854, 920, 921, 953, 954, 957, 990, 991, 994, 1173, 1321, 1330, 1344, 1351, 1355, 1356], "just": [209, 210, 276, 277, 309, 310, 346, 347, 370, 539, 853, 854, 920, 921, 953, 954, 990, 991, 1016, 1268, 1321, 1324, 1349, 1358, 1361, 1363], "marker": [209, 210, 214, 232, 248, 276, 277, 281, 309, 310, 318, 346, 347, 355, 853, 854, 858, 876, 892, 920, 921, 925, 953, 954, 962, 990, 991, 999], "title_datetime_format": [211, 215, 278, 282, 314, 319, 351, 356, 855, 859, 922, 926, 958, 963, 995, 1000], "title_use_sweep_tim": [211, 215, 278, 282, 314, 319, 351, 356, 855, 859, 922, 926, 958, 963, 995, 1000], "range_ring_location_km": [212, 279, 316, 353, 856, 923, 960, 997], "lw": [212, 213, 279, 280, 317, 354, 856, 857, 923, 924, 961, 998], "ring": [212, 213, 279, 280, 316, 317, 353, 354, 856, 857, 923, 924, 960, 961, 997, 998, 1317, 1329], "range_r": [213, 280, 317, 354, 857, 924, 961, 998], "seri": [213, 280, 317, 354, 473, 857, 924, 961, 998, 1115], "draw": [213, 233, 234, 246, 280, 315, 317, 352, 354, 857, 877, 878, 890, 924, 959, 961, 996, 998], "format_str": [214, 281, 318, 355, 858, 925, 962, 999], "ray_min": [214, 281, 318, 355, 858, 925, 962, 999], "ray_max": [214, 281, 318, 355, 858, 925, 962, 999], "style": [214, 232, 248, 281, 311, 312, 316, 318, 348, 349, 353, 355, 380, 858, 876, 892, 925, 955, 956, 960, 962, 992, 993, 997, 999, 1026], "consider": [215, 282, 319, 356, 506, 859, 926, 963, 1000, 1148, 1342], "ignoretilt": [216, 860], "run": [216, 478, 494, 539, 575, 860, 1120, 1136, 1162, 1268, 1305, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1360, 1361, 1363], "antenna_to_cartesian_track_rel": [216, 860], "slant": [216, 472, 860, 1062, 1114], "ncar": [216, 860], "soloii": [216, 860], "softwar": [216, 373, 380, 624, 860, 1019, 1026, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1360, 1361], "time_axis_flag": [217, 283, 320, 357, 861, 927, 964, 1001], "date_time_form": [217, 283, 320, 357, 861, 927, 964, 1001], "tz": [217, 283, 320, 357, 861, 927, 964, 1001], "zone": [217, 283, 320, 357, 861, 927, 964, 1001], "info": [217, 283, 315, 320, 352, 357, 496, 861, 927, 959, 964, 996, 1001, 1138, 1305, 1343, 1358], "ref_point": [218, 284, 321, 358, 862, 928, 965, 1002], "1000": [218, 284, 321, 358, 510, 526, 862, 928, 965, 1002, 1152, 1255, 1318, 1326, 1332, 1333, 1353, 1361], "vert_r": [218, 284, 321, 358, 862, 928, 965, 1002], "alt_max": [218, 284, 321, 358, 862, 928, 965, 1002], "10000": [218, 246, 284, 321, 352, 358, 437, 442, 450, 459, 472, 475, 514, 518, 772, 862, 890, 928, 965, 996, 1002, 1079, 1084, 1092, 1101, 1114, 1117, 1156, 1161, 1322, 1342, 1353], "dem_field": [218, 284, 321, 358, 862, 928, 965, 1002], "terrain_altitud": [218, 284, 321, 358, 862, 928, 965, 1002], "arbitrari": [218, 284, 321, 358, 506, 862, 928, 965, 1002, 1148, 1305, 1356], "trajectori": [218, 284, 321, 358, 862, 928, 965, 1002], "45": [218, 284, 321, 358, 492, 862, 928, 965, 1002, 1134, 1239, 1324, 1333, 1342, 1357, 1361], "47": [218, 284, 321, 358, 510, 862, 928, 965, 1002, 1152, 1344, 1356], "3db": [218, 284, 321, 358, 496, 862, 928, 965, 1002, 1138], "ist": [218, 284, 321, 358, 862, 928, 965, 1002], "aspect_ratio": [219, 285, 322, 359, 863, 929, 966, 1003], "aspect": [219, 285, 322, 359, 496, 863, 929, 966, 1003, 1138, 1321], "xlim": [220, 286, 323, 360, 864, 930, 967, 1004, 1326, 1328, 1332, 1333, 1353], "ylim": [220, 286, 323, 360, 864, 930, 967, 1004, 1326, 1328, 1330, 1331, 1332, 1333, 1335, 1337], "cartopi": [221, 222, 223, 224, 233, 234, 235, 287, 315, 865, 866, 867, 868, 877, 878, 879, 931, 959, 1310, 1312, 1313, 1316, 1320, 1322, 1323, 1336, 1338, 1340, 1342, 1347, 1350, 1351, 1353, 1354, 1356, 1357, 1359, 1360, 1361, 1363], "supress": [221, 233, 234, 240, 315, 352, 750, 865, 877, 878, 884, 959, 996], "coastlin": [222, 233, 234, 315, 352, 866, 877, 878, 959, 996], "polit": [223, 867], "state": [224, 507, 868, 1149], "grid_name_field_level_tim": [225, 241, 869, 885], "latitudin": [227, 237, 251, 871, 881, 895], "plot_longitudinal_level": [230, 238, 252, 874, 882, 896], "tuppl": [230, 437, 443, 462, 874, 1079, 1085, 1104], "ind_1": [231, 875], "ind_2": [231, 875], "basemap": [231, 237, 239, 240, 245, 246, 249, 251, 253, 324, 348, 349, 350, 352, 353, 875, 881, 883, 884, 889, 890, 893, 895, 897, 968, 992, 993, 994, 996, 997, 1347, 1360], "upper": [231, 233, 234, 235, 237, 239, 249, 251, 253, 424, 526, 875, 877, 878, 879, 881, 883, 893, 895, 897, 1255, 1322], "colormesh": [231, 233, 234, 235, 237, 239, 249, 251, 253, 875, 877, 878, 879, 881, 883, 893, 895, 897], "64": [231, 233, 234, 235, 237, 239, 249, 251, 253, 875, 877, 878, 879, 881, 883, 893, 895, 897, 1321, 1326, 1327, 1328, 1332, 1334, 1336, 1337, 1340, 1354, 1360], "linewidth": [232, 234, 248, 876, 878, 892, 1323, 1332, 1333], "crosshair": [232, 248, 876, 892], "lat_lin": [233, 234, 246, 315, 352, 877, 878, 890, 959, 996, 1316, 1329, 1340, 1357], "lon_lin": [233, 234, 246, 315, 352, 877, 878, 890, 959, 996, 1316, 1329, 1340, 1357], "embellish": [233, 234, 315, 877, 878, 959, 1323, 1357], "add_grid_lin": [233, 315, 877, 959], "imshow": [233, 877, 1317, 1318, 1321, 1355], "reason": [233, 246, 877, 890], "america": [233, 234, 246, 315, 352, 877, 878, 890, 959, 996], "cr": [233, 234, 287, 315, 437, 503, 877, 878, 931, 959, 1079, 1145, 1312, 1313, 1316, 1322, 1323, 1329, 1336, 1340, 1342, 1343, 1350, 1351, 1354, 1355, 1356, 1357], "subsequ": [233, 234, 315, 877, 878, 959], "geoax": [233, 234, 315, 877, 878, 959, 1350, 1353, 1356], "platecarre": [233, 234, 315, 877, 878, 959, 1312, 1316, 1322, 1323, 1336, 1340, 1342, 1351, 1354, 1356], "drawinf": [233, 234, 877, 878], "shapefil": [233, 234, 315, 352, 877, 878, 959, 996], "certain": [233, 234, 315, 502, 551, 877, 878, 959, 1006, 1144, 1280, 1342, 1354], "instead": [233, 380, 452, 773, 877, 1026, 1094, 1305, 1313, 1342, 1347, 1353, 1360, 1361, 1363], "contour_valu": [234, 878], "maps_list": [234, 878], "countri": [234, 878], "110m": [234, 315, 878, 959], "background_zoom": [234, 878], "contour": [234, 878, 1310, 1320, 1338, 1359], "reson": [234, 315, 352, 878, 959, 996], "sequenc": [234, 878], "colour": [234, 878], "embelish": [234, 352, 878, 996], "10m": [234, 315, 878, 959, 1313, 1329, 1357], "50m": [234, 315, 878, 959, 1351, 1354], "naturalearthfeatur": [234, 315, 878, 959, 1357], "zoom": [234, 878], "background": [234, 352, 478, 494, 515, 878, 996, 1005, 1120, 1136, 1157, 1329, 1336, 1342], "cost": [234, 506, 878, 1148], "alpha": [235, 315, 352, 437, 483, 484, 485, 486, 487, 488, 770, 779, 879, 959, 996, 1079, 1125, 1126, 1127, 1128, 1129, 1130, 1323, 1332, 1357], "transpar": [235, 362, 879, 1008, 1332], "overplot": [235, 315, 352, 879, 959, 996], "plot_latitudinal_level": [236, 250, 880, 894], "y_index": [237, 251, 881, 895], "x_index": [239, 253, 883, 897], "veric": [242, 886], "area_thresh": [246, 352, 890, 996], "auto_rang": [246, 890], "min_lon": [246, 315, 352, 890, 959, 996, 1316, 1329, 1354, 1357], "92": [246, 781, 782, 783, 890, 1330, 1340], "max_lon": [246, 315, 352, 890, 959, 996, 1316, 1329, 1354, 1357], "86": [246, 890], "min_lat": [246, 315, 352, 890, 959, 996, 1316, 1329, 1354, 1357], "max_lat": [246, 315, 352, 890, 959, 996, 1316, 1329, 1354, 1357], "44": [246, 425, 478, 494, 890, 1067, 1120, 1136, 1305, 1316, 1319, 1342, 1359, 1360], "databas": [246, 352, 890, 996], "merc": [246, 352, 890, 996], "line_styl": [248, 311, 312, 316, 348, 349, 353, 892, 955, 956, 960, 992, 993, 997, 1329], "plot_rhi": [270, 303, 340, 914, 947, 984, 1356], "plot_vpt": [270, 303, 340, 914, 947, 984], "grid_project": [287, 931, 1064, 1065], "progress": [287, 324, 496, 931, 968, 1138], "some": [287, 324, 418, 508, 510, 931, 968, 1038, 1049, 1150, 1152, 1173, 1305, 1313, 1321, 1322, 1340, 1342, 1347, 1351, 1353, 1355, 1356, 1357, 1360], "correctli": [287, 324, 931, 968], "report": [287, 324, 375, 518, 575, 576, 931, 968, 1021, 1161, 1347, 1361], "github": [287, 324, 931, 968, 1305, 1333, 1347, 1360, 1363], "tracker": [287, 324, 931, 968, 1347, 1361], "azimuthalequidist": [287, 931], "line_lon": [311, 348, 955, 992], "line_lat": [311, 348, 955, 992], "compat": [311, 312, 313, 316, 348, 349, 350, 353, 377, 955, 956, 957, 960, 992, 993, 994, 997, 1023, 1363], "line_x": [312, 349, 956, 993], "line_i": [312, 349, 956, 993], "ro": [313, 350, 957, 994], "label_text": [313, 350, 957, 994], "label_offset": [313, 350, 957, 994], "shapefile_kwarg": [315, 959], "single_grid_lines_label": [315, 959], "edgecolor": [315, 959, 1332, 1357], "face": [315, 959], "lambertconform": [315, 959, 1313, 1329, 1350], "domain": [315, 352, 432, 496, 959, 996, 1074, 1138, 1316], "neither": [315, 352, 383, 959, 996, 1030], "extend": [315, 352, 376, 396, 542, 959, 996, 1022, 1271, 1357], "word": [315, 959], "ones": [315, 443, 462, 959, 1085, 1104, 1321], "tranpar": [315, 352, 959, 996], "pixel": [315, 501, 502, 510, 959, 1143, 1144, 1152, 1239, 1355, 1356, 1357], "lcc": [352, 996], "cylindr": [352, 996], "mill": [352, 996], "exhibit": [352, 996], "distort": [352, 996], "aea": [352, 996], "laea": [352, 996], "conform": [352, 996, 1347, 1349, 1357], "tmerc": [352, 996], "aeqd": [352, 996], "cass": [352, 996], "even": [352, 477, 508, 996, 1119, 1150, 1332, 1347, 1353, 1357, 1363], "cyl": [352, 996], "cannot": [352, 363, 996, 1009, 1355], "lake": [352, 996, 1357], "esri": [352, 996], "untest": [352, 996], "dtobj": [361, 1007], "storage_opt": [362, 372, 374, 1008, 1018, 1020], "anon": [362, 372, 374, 1008, 1018, 1020], "open": [362, 372, 374, 1008, 1018, 1020, 1173, 1326, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1361, 1363], "decompress": [362, 1008], "bzip2": [362, 1008], "close": [362, 493, 494, 506, 781, 782, 1008, 1135, 1136, 1148, 1357], "backend": [362, 372, 1008, 1018], "googl": [362, 372, 1008, 1018, 1361], "cloud": [362, 372, 477, 506, 1008, 1018, 1119, 1148, 1310, 1311, 1314, 1357, 1359, 1361, 1363], "storag": [362, 372, 1008, 1018, 1234], "amazon": [362, 372, 1008, 1018, 1312, 1313], "servic": [362, 372, 1008, 1018, 1312, 1313, 1321], "s3": [362, 372, 1008, 1018, 1312, 1313, 1324, 1342], "file_lik": [362, 1008], "use_rsl": [363, 1009], "read_": [363, 1009], "trmm": [363, 376, 1009, 1022, 1347, 1360], "choos": [363, 1009, 1310, 1320, 1338, 1342, 1359, 1363], "typeerror": [363, 389, 1009], "launch_datetim": [364, 1010], "radiosond": [364, 1010], "launch": [364, 1010], "record": [364, 1010, 1356, 1358], "target_datetim": [365, 1011], "closest": [365, 442, 450, 459, 472, 475, 781, 782, 1011, 1054, 1084, 1092, 1101, 1114, 1117], "profile_datetim": [365, 1011], "use_arm_scan_nam": [366, 1012], "scan_nam": [366, 1012], "cfradial2": [367, 1013], "use_file_field_attribut": [368, 1014], "csu": [368, 1014], "chill": [368, 1014], "chl": [368, 1014], "field_file_nam": [368, 1014], "long_nam": [368, 1014, 1342, 1350, 1358], "write_grid": [369, 1015], "zlib": [370, 371, 1016, 1017], "read_mdv": [370, 1016, 1308, 1317, 1328, 1332, 1333, 1334], "fulli": [370, 576, 1016, 1360], "interchang": [370, 1016], "vlevel": [370, 1016], "proj_polar_radar": [370, 1016], "proj_rhi_radar": [370, 1016], "13": [370, 446, 451, 465, 540, 1016, 1088, 1093, 1107, 1269, 1307, 1313, 1335, 1343, 1345, 1354, 1357, 1358, 1359], "vlevel_typ": [370, 1016], "vert_type_z": [370, 1016], "vert_type_elev": [370, 1016], "vert_type_az": [370, 1016], "17": [370, 1016, 1330, 1335, 1336, 1338, 1359], "vert_type_pressur": [370, 1016], "vert_type_theta": [370, 1016], "unknown": [370, 1016], "most": [370, 480, 1006, 1016, 1122, 1321, 1351, 1353, 1357, 1363], "station": [372, 373, 1018, 1019, 1313], "linear_interp": [372, 1018], "nexrad": [372, 373, 374, 375, 1018, 1019, 1020, 1021, 1310, 1311, 1314, 1320, 1324, 1338, 1342, 1347, 1358, 1359], "archiv": [372, 1018, 1325, 1347], "host": [372, 374, 1018, 1020], "noaa": [372, 374, 376, 1018, 1020, 1022, 1312, 1313, 1324, 1342], "nation": [372, 374, 1018, 1020, 1312, 1321], "climat": [372, 374, 1018, 1020, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "ucar": [372, 373, 1018, 1019], "thredd": [372, 373, 379, 1018, 1019, 1025], "server": [372, 373, 1018, 1019], "letter": [372, 373, 375, 1018, 1019, 1021], "icao": [372, 373, 1018, 1019], "older": [372, 373, 1018, 1019, 1305, 1310, 1311, 1314, 1347, 1359, 1361], "mix": [372, 477, 551, 1018, 1119, 1280, 1324, 1342], "nearest": [372, 442, 450, 451, 459, 472, 475, 495, 526, 532, 533, 568, 1018, 1062, 1065, 1084, 1092, 1093, 1101, 1114, 1117, 1137, 1255, 1261, 1262, 1297, 1353, 1356], "fsspec": [372, 374, 1018, 1020], "cut": [372, 373, 374, 502, 570, 571, 1018, 1019, 1020, 1144, 1299, 1300], "ncdc": [372, 374, 1018, 1020], "gov": [372, 374, 1018, 1020, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1332, 1333, 1334, 1335, 1337, 1340, 1341], "edu": [372, 373, 501, 1018, 1019, 1143, 1324, 1342], "catalog": [372, 373, 1018, 1019], "html": [372, 373, 501, 1018, 1019, 1143, 1347, 1355, 1360, 1361], "common": [373, 1019, 1347, 1360], "cdm": [373, 379, 1019, 1025], "url": [373, 1019], "java": [373, 379, 1019, 1025], "tool": [373, 379, 1019, 1025, 1347, 1360, 1361], "opendap": [373, 1019], "accept": [373, 437, 442, 450, 459, 472, 482, 507, 508, 1019, 1079, 1084, 1092, 1101, 1114, 1124, 1149, 1150, 1305, 1361], "compil": [373, 507, 1019, 1149, 1347, 1360], "unidata": [373, 1019, 1312], "htm": [373, 1019], "nw": [374, 1020], "wsr": [374, 510, 1020, 1152], "88d": [374, 510, 1020, 1152], "iii": [374, 1020], "distribut": [374, 478, 494, 514, 516, 517, 520, 521, 522, 523, 554, 555, 1020, 1120, 1136, 1156, 1158, 1160, 1239, 1249, 1250, 1251, 1252, 1283, 1284, 1342, 1347, 1361], "roc": [374, 1020], "wsr88d": [374, 375, 1020, 1021], "level_iii": [374, 1020], "level3info": [374, 1020], "asp": [374, 1020], "radar_format": [375, 1021], "callid": [375, 1021], "skip_range_check": [375, 1021], "rsl_radar": [375, 1021], "id": [375, 380, 1021, 1026], "verifi": [375, 556, 574, 1021, 1285, 1303], "ioerror": [375, 1021], "time_ord": [376, 1022], "full_xhdr": [376, 1022], "noaa_hh_hdr": [376, 1022], "ignore_xhdr": [376, 1022], "ignore_sweep_start_m": [376, 1022], "sigmet": [376, 1022, 1347], "iri": [376, 1022, 1347, 1360], "sequenti": [376, 1022, 1321], "re": [376, 477, 1022, 1119], "manner": [376, 1022], "determind": [376, 1022], "maintain": [376, 1022, 1061], "reverse_and_rol": [376, 1022], "strictli": [376, 1022], "increas": [376, 481, 496, 506, 509, 1022, 1065, 1123, 1138, 1148, 1151, 1321, 1353, 1361], "becom": [376, 1022, 1342, 1350, 1353, 1356], "thisopt": [376, 1022], "strict": [376, 519, 1022], "header": [376, 609, 610, 1022], "decod": [376, 519, 1022], "hurrican": [376, 1022, 1342], "hunter": [376, 1022], "millisecond": [376, 1022], "precis": [376, 477, 1022, 1119, 1305], "explic": [376, 1022], "read_rsl": [376, 1022, 1360], "error": [376, 380, 507, 508, 519, 530, 559, 560, 1022, 1026, 1149, 1150, 1259, 1288, 1289, 1305, 1356, 1360], "uf": [377, 382, 1023, 1028, 1347], "implement": [377, 383, 385, 387, 396, 406, 501, 512, 1023, 1030, 1043, 1064, 1143, 1154, 1307], "write_proj_coord_si": [379, 1025], "proj_coord_si": [379, 1025], "write_point_x_y_z": [379, 1025], "write_point_lon_lat_alt": [379, 1025], "projectioncoordinatesystem": [379, 1025], "toolsui": [379, 1025], "appropri": [379, 1025], "understood": [379, 1025], "rgb": [380, 1026], "viridi": [380, 1026, 1342], "color_level": [380, 1026], "warp": [380, 1026], "sld": [380, 1026], "use_doublequot": [380, 1026], "geotiff": [380, 1026, 1347], "sphere": [380, 543, 569, 1026, 1272, 1298], "latter": [380, 1026], "usabl": [380, 1026], "former": [380, 1026], "gi": [380, 1026], "while": [380, 1026, 1351, 1363], "show": [380, 1026, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1342, 1349, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1361], "lack": [380, 421, 1026, 1041, 1051], "gdal": [380, 1026, 1347], "via": [380, 1026, 1062, 1063], "conda": [380, 1026, 1347, 1360, 1361, 1363], "rbg": [380, 1026], "channel": [380, 439, 445, 458, 470, 471, 476, 756, 791, 1026, 1081, 1087, 1100, 1112, 1113, 1118], "tabl": [380, 557, 559, 560, 781, 782, 783, 1026, 1286, 1288, 1289, 1355], "column": [380, 544, 545, 1026, 1273, 1274, 1310, 1339, 1345, 1359], "categor": [380, 1026, 1343, 1357], "gdalwarp": [380, 1026], "command": [380, 1026, 1347, 1350, 1355, 1357, 1361, 1363], "descriptor": [380, 1026], "tiff": [380, 1026], "don": [380, 1026, 1316], "quot": [380, 1026], "help": [380, 1026, 1162, 1316, 1321, 1342, 1361, 1363], "translat": [380, 1026], "sr": [380, 1026], "mdv_field_nam": [381, 1027], "field_write_ord": [381, 382, 1027, 1028], "sentinel": [381, 382, 1027, 1028], "writabl": [381, 1027], "satisfi": [381, 1027], "xy": [381, 1027, 1065], "irregular": [381, 1027, 1305], "exce": [381, 1027, 1342], "122": [381, 1027, 1312, 1316, 1322, 1341], "uncompress": [381, 1027], "sai": [381, 1027, 1361], "uf_field_nam": [382, 1028], "radar_field_nam": [382, 1028], "volume_start": [382, 1028], "templates_extra": [382, 1028], "radar_beam_width_h": [382, 1028], "radar_beam_width_v": [382, 1028], "radar_receiver_bandwidth": [382, 1028], "prt": [382, 1028], "polarization_mod": [382, 1028], "round": [382, 1028, 1062, 1063, 1305], "_uf_scale_factor": [382, 1028], "charact": [382, 1028], "advanc": [382, 1028], "usag": [382, 1028], "templat": [382, 1028, 1361], "mandatory_head": [382, 1028], "optional_head": [382, 1028], "field_head": [382, 1028], "lazi": [383, 386, 392, 397, 399, 412, 419, 1029, 1030, 1032, 1039], "set_lazi": [383, 1030], "callabl": [383, 419, 1030, 1039], "cach": [383, 410, 1030], "tradit": [383, 386, 397, 399, 1030], "supplement": [383, 1030], "syntax": [383, 1030], "prevent": [383, 1030, 1065, 1361], "comparison": [383, 437, 512, 1030, 1079, 1154, 1316], "__cmp__": [383, 1030], "__ge__": [383, 1030], "__gt__": [383, 1030], "__le__": [383, 1030], "__lt__": [383, 1030], "__ne__": [383, 1030], "nor": [383, 1030], "viewitem": [383, 1030], "viewkei": [383, 1030], "viewvalu": [383, 1030], "fromkei": [383, 1030], "tradition": [383, 407, 1030], "referenc": [383, 1030], "lazyloaddictionari": [383, 1030], "henc": [383, 1030], "key1": [383, 1030], "value1": [383, 1030], "key2": [383, 1030], "value2": [383, 1030], "lazy_func": [383, 1030], "lambda": [383, 1030], "lazykey1": [383, 1030], "privat": [383, 783, 1361], "delattr": 385, "dir": [387, 1173], "format_spec": 389, "formatt": 389, "getattr": 391, "helper": [393, 403, 404, 1321], "pickl": [393, 403, 404], "subclass": 396, "noth": 396, "overridden": 396, "protocol": 404, "repr": [405, 519], "setattr": 406, "memori": [408, 512, 1065, 1154, 1355, 1356], "abstract": 410, "overrid": [410, 1333, 1357], "issubclass": 410, "invok": 410, "earli": 410, "abc": 410, "abcmeta": 410, "__subclasscheck__": 410, "notimpl": 410, "outcom": 410, "item": [411, 421, 1031, 1041, 1044, 1051], "els": [413, 414, 1033, 1034, 1045, 1356], "value_cal": [419, 1039], "mx": 423, "mn": 423, "relh_slop": [423, 437, 516, 1079, 1158], "005": 423, "destandard": 423, "h_iso0": [423, 437, 503, 1079, 1145], "slope": [423, 437, 496, 507, 516, 1079, 1138, 1149, 1158], "sigmoid": [423, 437, 516, 1079, 1158], "field_std": 423, "hlowerleft": 424, "hupperright": 424, "matrix": [424, 437, 507, 770, 779, 1079, 1149], "freq": [425, 453, 454, 474, 497, 498, 1067, 1095, 1096, 1116, 1139, 1140], "rng": [425, 500, 525, 526, 542, 1067, 1142, 1254, 1255, 1271], "wai": [425, 450, 454, 460, 480, 496, 497, 513, 772, 773, 774, 1067, 1092, 1096, 1102, 1122, 1138, 1139, 1155, 1316, 1349, 1356, 1361, 1363], "ga": [425, 454, 460, 497, 772, 773, 774, 1067, 1096, 1102, 1139], "empir": [425, 1067], "satur": [425, 1067], "latm": [425, 1067], "toa": [426, 509, 1064, 1065, 1068, 1151], "floor": [426, 1068], "nyq": [427, 1069, 1351], "check_nyq_uniform": [427, 1069], "deriv": [427, 506, 508, 1069, 1148, 1150, 1355], "try": [427, 506, 512, 1069, 1148, 1154, 1353, 1354, 1357], "vel_dict": [427, 429, 430, 1069, 1071, 1072], "entri": [427, 1069, 1358], "am": [428, 1070, 1347, 1361], "glossari": [428, 1070], "dry": [428, 1070, 1343, 1355], "world": [428, 1070, 1310, 1320], "aloft": [428, 1070, 1356, 1357], "oppos": [428, 1070, 1324], "nwp": [428, 1070, 1343, 1357], "why": [428, 1070, 1361], "easi": [428, 1054, 1070, 1347], "think": [428, 1070], "turn": [428, 1070, 1321, 1342, 1347], "spin": [428, 1070], "author": [428, 494, 1070, 1136, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344], "randi": [428, 1070], "chase": [428, 1070], "dopplerchas": [428, 1070], "american": [428, 1070], "meteorolog": [428, 518, 1070, 1161], "2022": [428, 551, 1070, 1280, 1312, 1324, 1342, 1347, 1361], "meteorologi": [428, 432, 446, 451, 465, 506, 518, 540, 1061, 1070, 1074, 1088, 1093, 1107, 1148, 1161, 1269], "ametsoc": [428, 1070], "org": [428, 478, 494, 501, 551, 1070, 1120, 1136, 1143, 1280, 1324, 1342, 1347, 1361], "wiki": [428, 501, 1070, 1143], "sdbz_field": [429, 431, 438, 440, 455, 1071, 1073, 1080, 1082, 1097], "spectral": [429, 431, 438, 440, 448, 455, 457, 463, 464, 465, 466, 467, 468, 469, 480, 540, 611, 1071, 1073, 1080, 1082, 1090, 1097, 1099, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1122, 1269, 1305], "signal_field": [430, 432, 445, 446, 456, 465, 466, 467, 468, 470, 471, 476, 1072, 1074, 1087, 1088, 1098, 1107, 1108, 1109, 1110, 1112, 1113, 1118], "negative_awai": [430, 449, 1072, 1091], "negative_toward": [430, 449, 1072, 1091], "width_dict": [431, 432, 1073, 1074], "subtract_nois": [432, 441, 448, 449, 456, 457, 458, 464, 467, 468, 469, 1074, 1083, 1090, 1091, 1098, 1099, 1100, 1106, 1109, 1110, 1111], "noise_field": [432, 447, 451, 452, 456, 461, 467, 468, 1074, 1089, 1093, 1094, 1098, 1103, 1109, 1110], "lag": [432, 441, 449, 458, 470, 471, 1074, 1083, 1091, 1100, 1112, 1113], "subtract": [432, 441, 448, 449, 456, 457, 458, 464, 467, 468, 469, 478, 494, 756, 1074, 1083, 1090, 1091, 1098, 1099, 1100, 1106, 1109, 1110, 1111, 1120, 1136], "denomin": [432, 1074], "varianc": [432, 540, 541, 546, 557, 558, 1074, 1269, 1270, 1275, 1286, 1287], "srivastava": [432, 1074], "jameson": [432, 1074], "hildebrand": [432, 446, 451, 465, 540, 772, 1074, 1088, 1093, 1107, 1269], "februari": [432, 1074], "1979": [432, 1074], "rhohv_snow": [433, 512, 1075, 1154], "rhohv_rain": [433, 512, 1075, 1154], "rhohv_ml": [433, 512, 1075, 1154], "93": [433, 453, 474, 496, 512, 1075, 1095, 1116, 1138, 1154], "zh_snow": [433, 512, 1075, 1154], "zh_rain": [433, 512, 1075, 1154], "zh_ml": [433, 512, 1075, 1154], "27": [433, 512, 1075, 1154, 1340], "zv_snow": [433, 512, 1075, 1154], "zv_rain": [433, 512, 1075, 1154], "zv_ml": [433, 512, 1075, 1154], "26": [433, 442, 512, 1075, 1084, 1154], "beam_factor": [433, 512, 1075, 1154], "npts_diagram": [433, 512, 1075, 1154], "81": [433, 512, 1075, 1154, 1358], "rng_bottom_max": [433, 512, 1075, 1154], "200000": [433, 512, 1075, 1154, 1329, 1342], "rhohv_field": [433, 436, 444, 481, 756, 766, 767, 768, 781, 782, 783, 1075, 1078, 1086, 1123], "theoretical_cross_correlation_ratio": [433, 1075], "snow": [433, 478, 484, 494, 551, 768, 1075, 1120, 1126, 1136, 1280, 1324, 1342, 1343, 1357], "diagram": [433, 1075], "could": [433, 531, 539, 759, 760, 1075, 1260, 1268, 1313, 1361], "rhohv_theo_dict": [433, 1075], "sigma_bird": [434, 1076], "vol_refl_field": [434, 474, 1076, 1116], "bird_density_field": [434, 1076], "densiti": [434, 516, 1076, 1158, 1343, 1357], "volumetr": [434, 474, 1076, 1116, 1348], "bird_density_dict": [434, 1076], "filt_field": [435, 1077], "unfilt_field": [435, 1077], "ccor_field": [435, 1077], "ccor": [435, 1077], "unfilt": [435, 1077, 1357], "ccor_dict": [435, 1077], "cdr_field": [436, 1078], "circular": [436, 554, 555, 1078, 1283, 1284, 1342], "depolar": [436, 1078], "cdr": [436, 1078], "features_matrix": [437, 1079], "weight": [437, 459, 503, 506, 512, 517, 759, 760, 781, 1062, 1063, 1064, 1065, 1079, 1101, 1145, 1148, 1154, 1160, 1353, 1356], "var_nam": [437, 482, 503, 516, 1079, 1124, 1145, 1158], "hydro_nam": [437, 482, 503, 516, 1079, 1124, 1145, 1158], "ag": [437, 503, 512, 1079, 1145, 1154, 1343, 1355, 1357], "lr": [437, 503, 1079, 1145, 1343, 1355, 1357], "rp": [437, 503, 1079, 1145, 1343, 1355, 1357], "rn": [437, 503, 1079, 1145, 1343, 1355, 1357], "mh": [437, 503, 1079, 1145, 1343, 1355, 1357], "ih": [437, 503, 1079, 1145, 1343, 1355, 1357], "hdg": [437, 503, 1079, 1145, 1343, 1355, 1357], "nsamples_it": [437, 1079], "20000": [437, 479, 481, 514, 1079, 1121, 1123, 1156, 1329, 1353], "external_iter": [437, 1079], "internal_iter": [437, 1079], "cv_approach": [437, 1079], "num_samples_arr": [437, 1079], "n_samples_syn": [437, 1079], "50": [437, 450, 473, 475, 503, 510, 524, 750, 752, 768, 1079, 1092, 1115, 1117, 1145, 1152, 1253, 1318, 1336, 1340, 1343, 1344, 1353, 1355, 1356, 1357, 1358], "nmedoids_min": [437, 482, 1079, 1124], "acceptance_threshold": [437, 482, 1079, 1124], "001": [437, 516, 548, 1079, 1158, 1277, 1332], "parallel": [437, 506, 507, 508, 1079, 1148, 1149, 1150], "sample_data": [437, 1079], "kmax_it": [437, 482, 1079, 1124], "nsamples_smal": [437, 1079], "40000": [437, 1079, 1318, 1322, 1329, 1353], "sampling_size_clara": [437, 1079], "niter_clara": [437, 1079], "keep_labeled_data": [437, 1079], "use_median": [437, 482, 1079, 1124], "allow_label_dupl": [437, 1079], "centroid": [437, 479, 503, 514, 1079, 1121, 1145, 1156, 1357], "nsampl": [437, 514, 516, 1079, 1156, 1158], "nvariabl": [437, 503, 1079, 1145], "extern": [437, 1079], "loop": [437, 1079, 1344], "medoid": [437, 482, 1079, 1124], "inter": [437, 482, 1079, 1124], "quantil": [437, 482, 766, 1079, 1124], "dispers": [437, 482, 1079, 1124], "cluster": [437, 503, 1079, 1145, 1357], "critic": [437, 1079], "approach": [437, 496, 503, 510, 512, 1079, 1138, 1145, 1152, 1154], "reject": [437, 1079], "intermedi": [437, 477, 482, 1079, 1119, 1124], "kmedoid": [437, 482, 1079, 1124], "clara": [437, 1079], "exceed": [437, 492, 1079, 1134], "kept": [437, 481, 1079, 1123], "labeled_data": [437, 1079], "medoids_dict": [437, 482, 1079, 1124], "final_medoids_dict": [437, 482, 1079, 1124], "sphidp_field": [438, 1080], "phase_offset": [439, 449, 1081, 1091], "signal_h_field": [439, 441, 448, 449, 457, 458, 463, 464, 469, 1081, 1083, 1090, 1091, 1099, 1100, 1105, 1106, 1111], "signal_v_field": [439, 441, 448, 449, 457, 458, 463, 464, 469, 1081, 1083, 1090, 1091, 1099, 1100, 1105, 1106, 1111], "sdbzv_field": [440, 1082], "zdr_dict": [440, 441, 1082, 1083], "noise_h_field": [441, 448, 449, 457, 458, 464, 469, 1083, 1090, 1091, 1099, 1100, 1106, 1111], "noise_v_field": [441, 448, 449, 457, 458, 464, 469, 1083, 1090, 1091, 1099, 1100, 1106, 1111], "ref_tim": [442, 450, 459, 472, 473, 475, 1084, 1092, 1101, 1114, 1115, 1117], "latlon_tol": [442, 472, 475, 525, 553, 1084, 1114, 1117, 1254, 1282], "0005": [442, 472, 475, 1084, 1114, 1117], "delta_rng": [442, 472, 542, 1084, 1114, 1271], "15000": [442, 472, 759, 760, 1084, 1114, 1349, 1353], "delta_azi": [442, 472, 527, 542, 1084, 1114, 1256, 1271], "hmax": [442, 450, 459, 472, 475, 553, 1084, 1092, 1101, 1114, 1117, 1282], "hre": [442, 450, 459, 472, 475, 510, 1084, 1092, 1101, 1114, 1117, 1152], "250": [442, 472, 481, 1064, 1065, 1084, 1114, 1123, 1355, 1358], "avg_typ": [442, 450, 459, 472, 527, 529, 1084, 1092, 1101, 1114, 1256, 1258], "nvalid_min": [442, 450, 459, 472, 512, 527, 529, 759, 760, 1084, 1092, 1101, 1114, 1154, 1256, 1258], "interp_kind": [442, 450, 459, 472, 475, 568, 1084, 1092, 1101, 1114, 1117, 1297], "qvp": [442, 450, 459, 472, 475, 513, 1084, 1092, 1101, 1114, 1117, 1155], "enhanc": [442, 1084, 1363], "interest": [442, 472, 475, 1084, 1114, 1117, 1316, 1342, 1357], "central": [442, 472, 542, 1084, 1114, 1271], "evp": [442, 472, 1084, 1114], "regardless": [442, 450, 459, 472, 475, 492, 1084, 1092, 1101, 1114, 1117, 1134], "elimin": [442, 450, 459, 472, 475, 1084, 1092, 1101, 1114, 1117, 1351, 1353], "kaltenboeck": [442, 1084], "ryzhkov": [442, 450, 483, 510, 513, 752, 1084, 1092, 1125, 1152, 1155], "2016": [442, 450, 481, 503, 1084, 1092, 1123, 1145, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1361], "storm": [442, 494, 515, 1084, 1136, 1157, 1239, 1240, 1242, 1324, 1342, 1353, 1356], "explor": [442, 512, 759, 760, 1084, 1154], "methodologi": [442, 518, 1084, 1161, 1351], "meteorologisch": [442, 1084], "zeitschrift": [442, 1084], "207": [442, 1084], "222": [442, 1084, 1308, 1325, 1356], "fields_in_list": [443, 462, 1085, 1104], "fields_out_list": [443, 462, 480, 1085, 1104, 1122], "fourier": [443, 462, 1085, 1104], "get_window": [443, 462, 1085, 1104], "ifft": [443, 1085], "l_field": [444, 1086], "logarithm": [444, 1086], "ll": [444, 1086], "log10": [444, 1086, 1316], "mph_dict": [445, 1087], "navg": [446, 465, 540, 1088, 1107, 1269], "nnoise_min": [446, 465, 540, 1088, 1107, 1269], "dbadu_to_dbm_hh": [446, 465, 467, 468, 1088, 1107, 1109, 1110], "dbadu_to_dbm_vv": [446, 465, 467, 468, 1088, 1107, 1109, 1110], "sehkon": [446, 465, 540, 1088, 1107, 1269], "1974": [446, 451, 465, 540, 1088, 1093, 1107, 1269], "noise_dict": [446, 451, 452, 465, 1088, 1093, 1094, 1107], "sekhon": [446, 451, 465, 540, 772, 1088, 1093, 1107, 1269], "808": [446, 451, 465, 540, 1088, 1093, 1107, 1269], "811": [446, 451, 465, 540, 1088, 1093, 1107, 1269], "noisedbz_v": [447, 1089], "ref_dist": [447, 1089], "noisedbz": [447, 1089], "fields_list": [448, 449, 1090, 1091], "use_pwr": [448, 1090], "smooth_window": [448, 464, 467, 468, 1090, 1106, 1109, 1110], "srhohv_field": [448, 457, 463, 1090, 1099, 1105], "pwr_h_field": [448, 457, 464, 1090, 1099, 1106], "pwr_v_field": [448, 457, 464, 1090, 1099, 1106], "gaussian": [448, 464, 467, 468, 514, 770, 779, 791, 1090, 1106, 1109, 1110, 1156, 1239, 1240, 1332], "quasi": [450, 459, 513, 1092, 1101, 1155], "zhang": [450, 472, 483, 513, 1092, 1114, 1125, 1155], "reev": [450, 513, 1092, 1155], "kumjian": [450, 459, 513, 1092, 1101, 1155], "tschallen": [450, 513, 1092, 1155], "tr\u00f6mel": [450, 1092], "simmer": [450, 483, 513, 1092, 1125, 1155], "jtech": [450, 472, 1092, 1114], "33": [450, 1092, 1358, 1359], "551": [450, 1092], "562": [450, 1092], "nbins_min": [451, 772, 773, 1093], "max_std_pwr": [451, 772, 1093], "pwr_field": [451, 452, 460, 468, 480, 1093, 1094, 1102, 1110, 1122], "get_noise_po": [451, 452, 541, 1093, 1094, 1270], "noisi": [451, 452, 1093, 1094], "noise_pos_dict": [451, 452, 1093, 1094], "reserv": [451, 525, 526, 553, 1093, 1254, 1255, 1282], "npulses_rai": [452, 773, 1094], "ngates_min": [452, 541, 1094, 1270], "800": [452, 541, 759, 760, 773, 1094, 1270], "ivic": [452, 541, 548, 557, 559, 560, 773, 1094, 1270, 1277, 1286, 1288, 1289], "et": [452, 477, 478, 494, 503, 506, 510, 511, 515, 750, 752, 756, 773, 1094, 1119, 1120, 1136, 1145, 1148, 1152, 1153, 1157, 1342, 1357], "al": [452, 477, 478, 494, 503, 506, 507, 510, 511, 515, 750, 752, 756, 773, 1094, 1119, 1120, 1136, 1145, 1148, 1149, 1152, 1153, 1157, 1342, 1357], "curti": [452, 541, 1094, 1270], "torr": [452, 541, 1094, 1270], "2737": [452, 541, 1094, 1270], "2753": [452, 541, 1094, 1270], "kw2": [453, 1095], "rcs_field": [453, 454, 1095, 1096], "water": [453, 474, 496, 1095, 1116, 1138], "rc": [453, 454, 496, 1095, 1096, 1138], "rcs_dict": [453, 454, 1095, 1096], "lmf": [454, 460, 1096, 1102], "attg": [454, 460, 497, 772, 773, 774, 1096, 1102, 1139], "radconst": [454, 460, 1096, 1102], "tx_pwr": [454, 1096], "lrx": [454, 460, 1096, 1102], "ltx": [454, 1096], "lradom": [454, 460, 1096, 1102], "neglect_gas_att": [454, 1096], "feed": [454, 460, 1096, 1102], "radom": [454, 460, 781, 782, 1096, 1102], "neglect": [454, 1096], "dbz_dict": [455, 456, 1097, 1098], "use_rhohv": [457, 463, 1099, 1105], "srhohv": [457, 463, 1099, 1105], "srho_hv": [457, 1099], "rhohv_dict": [457, 458, 1099, 1100], "50000": [459, 772, 1101, 1318, 1322, 1342, 1353], "weight_pow": [459, 1101], "ab": [459, 1101], "grng": [459, 1101], "tobin": [459, 1101], "2017": [459, 472, 1101, 1114], "surfac": [459, 478, 494, 1101, 1120, 1136, 1342], "ic": [459, 472, 1101, 1114, 1332, 1343, 1357], "pellet": [459, 1101], "forecast": [459, 1101], "2065": [459, 1101], "2082": [459, 1101], "THE": [460, 1102], "s_pwr_dict": [460, 1102], "sphidp_dict": [463, 1105], "compute_pow": [464, 468, 1106, 1110], "szdr_dict": [464, 1106], "phase_dict": [466, 1108], "pwr_dict": [467, 1109], "sdbz_dict": [468, 1110], "srhohv_dict": [469, 1111], "statist": [470, 471, 503, 529, 1112, 1113, 1145, 1258], "fluctuat": [470, 471, 1112, 1113], "st1_dict": [470, 1112], "st1": [470, 1112, 1355], "st2_dict": [471, 1113], "st2": [471, 1113, 1355], "bukovc": [472, 1114], "winter": [472, 494, 1114, 1136, 1324, 1342], "liquid": [472, 1114, 1357], "reveal": [472, 1114, 1357], "2dvd": [472, 1114], "oklahoma": [472, 1114, 1235], "56": [472, 1114, 1344, 1356], "1345": [472, 1114], "1363": [472, 1114], "along_azi": [473, 1115], "fixed_rang": [473, 1115], "fixed_azimuth": [473, 1115], "fixed_elev": [473, 1115], "rng_tol": [473, 1115], "value_start": [473, 1115], "value_stop": [473, 1115], "acoord": [473, 1115], "along_el": [473, 1115], "along_rng": [473, 1115], "around": [473, 478, 481, 494, 524, 550, 781, 782, 1064, 1115, 1120, 1123, 1136, 1239, 1253, 1279, 1317, 1332, 1335, 1342, 1349, 1351, 1356, 1357], "stop": [473, 1115], "kw": [474, 1116], "vol_refl_dict": [474, 1116], "10log10": [474, 1116], "wide": [476, 477, 1118, 1119], "wbn_dict": [476, 1118], "cappi_level": [477, 1119], "zr_a": [477, 1119], "zr_b": [477, 1119], "core_wt_threshold": [477, 1119], "conv_wt_threshold": [477, 1119], "conv_scale_km": [477, 1119], "min_reflect": [477, 1119], "conv_min_refl": [477, 1119], "conv_core_threshold": [477, 1119], "42": [477, 478, 494, 515, 1119, 1120, 1136, 1157, 1340, 1342], "override_check": [477, 1119], "computation": [477, 1119], "classifi": [477, 478, 494, 503, 1005, 1119, 1120, 1136, 1145, 1342, 1343, 1357], "convect": [477, 478, 494, 515, 1005, 1119, 1120, 1136, 1157, 1310, 1339, 1345, 1359], "stratiform": [477, 478, 494, 515, 1005, 1119, 1120, 1136, 1157, 1310, 1339, 1345, 1356, 1359], "\u00e0": [477, 1119], "trou": [477, 1119], "wavelet": [477, 1119], "atwt": [477, 1119], "multiresolut": [477, 1119], "analysi": [477, 545, 781, 782, 1061, 1119, 1274], "focus": [477, 1119], "robust": [477, 1053, 1119, 1357], "raut": [477, 1119], "2020": [477, 1119, 1324, 1347, 1360, 1361], "relationship": [477, 1119], "sensit": [477, 481, 1119, 1123], "howev": [477, 506, 1119, 1148, 1351, 1355, 1356, 1357], "signific": [477, 1119, 1357], "approxim": [477, 1119], "break": [477, 1119], "season": [477, 1119], "2018": [477, 1119], "discuss": [477, 1119, 1347], "insensit": [477, 1119], "variat": [477, 506, 1119, 1148], "dyadic": [477, 1119], "natur": [477, 1065, 1119], "scale_break_us": [477, 1119], "greater": [477, 515, 1119, 1157, 1342], "bypass": [477, 1119], "saniti": [477, 1119], "fall": [477, 1119], "strong": [477, 494, 1119, 1136, 1356, 1357], "updraft": [477, 1119, 1356], "activ": [477, 1119, 1363], "collis": [477, 1119], "coalesc": [477, 1119], "remain": [477, 1119], "intens": [477, 515, 1119, 1157, 1239, 1357], "unclassifi": [477, 1119], "karekar": [477, 1119], "puranik": [477, 1119], "techniqu": [477, 492, 1061, 1119, 1134, 1356], "infrar": [477, 1119], "satellit": [477, 1119], "ieee": [477, 507, 1119, 1149], "geosci": [477, 507, 1119, 1149], "remot": [477, 507, 1119, 1149, 1312, 1361], "sen": [477, 507, 1119, 1149], "lett": [477, 1119], "328": [477, 1119, 1325, 1338, 1359], "330": [477, 1119, 1347, 1361], "seed": [477, 1119], "reeder": [477, 1119], "jakob": [477, 1119], "cascad": [477, 1119], "downscal": [477, 1119], "rainfal": [477, 483, 484, 485, 486, 487, 488, 489, 506, 508, 752, 1119, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1148, 1150, 1357], "geophi": [477, 1119], "123": [477, 1119], "2050": [477, 1119], "2067": [477, 1119], "louf": [477, 781, 782, 783, 1119], "gayatri": [477, 1119], "murugavel": [477, 1119], "konwar": [477, 1119], "prabhakaran": [477, 1119], "tran": [477, 1119], "58": [477, 750, 752, 1119, 1340], "5409": [477, 1119], "5415": [477, 1119], "dx": [478, 494, 496, 515, 1120, 1136, 1138, 1157, 1342], "dy": [478, 494, 515, 1120, 1136, 1157, 1342], "level_m": [478, 494, 1120, 1136], "always_core_thr": [478, 494, 1005, 1120, 1136, 1342], "bkg_rad_km": [478, 494, 1120, 1136, 1342], "use_cosin": [478, 494, 1005, 1120, 1136, 1342], "max_diff": [478, 494, 1005, 1120, 1136, 1342], "zero_diff_cos_v": [478, 494, 1005, 1120, 1136, 1342], "55": [478, 494, 1120, 1136, 1336, 1342, 1357], "scalar_diff": [478, 494, 1005, 1120, 1136, 1342], "use_addit": [478, 494, 1005, 1120, 1136, 1342], "calc_thr": [478, 494, 1120, 1136, 1342], "weak_echo_thr": [478, 494, 1120, 1136, 1342], "min_dbz_us": [478, 1120, 1342], "db_averag": [478, 494, 1120, 1136, 1342], "remove_small_object": [478, 494, 1120, 1136, 1342], "min_km2_siz": [478, 494, 1120, 1136, 1342], "val_for_max_conv_rad": [478, 1120, 1342], "max_conv_rad_km": [478, 1120, 1342], "cs_core": [478, 1120], "nosfcecho": [478, 494, 1120, 1136, 1342], "weakecho": [478, 494, 1120, 1136, 1342], "sf": [478, 1120, 1342], "conv": [478, 1120, 1342], "estimate_flag": [478, 494, 1120, 1136, 1342], "estimate_offset": [478, 494, 1120, 1136, 1342], "partit": [478, 494, 515, 1120, 1136, 1157, 1307, 1357], "yuter": [478, 494, 515, 551, 1005, 1120, 1136, 1157, 1280, 1324, 1342], "1997": [478, 494, 1005, 1120, 1136, 1342], "pars": [478, 494, 1120, 1136], "least": [478, 480, 494, 504, 505, 781, 1120, 1122, 1136, 1146, 1147, 1342], "cosin": [478, 494, 1005, 1120, 1136, 1342], "simpler": [478, 494, 1120, 1136, 1342], "scalar": [478, 494, 1005, 1120, 1136, 1342], "eqn": [478, 494, 1005, 1120, 1136], "b1": [478, 494, 1005, 1120, 1136], "percentag": [478, 494, 553, 1120, 1136, 1282], "weak": [478, 494, 1120, 1136, 1342], "underestim": [478, 494, 1120, 1136, 1342], "wih": [478, 494, 1120, 1136], "convsf_dict": [478, 1120, 1342], "raindrop": [478, 494, 1120, 1136, 1342], "pacif": [478, 494, 1120, 1136, 1342], "warm": [478, 494, 506, 1120, 1136, 1148, 1342, 1357], "pool": [478, 494, 1120, 1136, 1342], "implic": [478, 494, 1120, 1136, 1342], "appl": [478, 494, 508, 513, 515, 517, 1120, 1136, 1150, 1155, 1157, 1160, 1342, 1361], "meteor": [478, 494, 508, 513, 515, 517, 1120, 1136, 1150, 1155, 1157, 1160, 1342, 1361], "36": [478, 494, 1120, 1136, 1313, 1316, 1318, 1322, 1336, 1340, 1342, 1344, 1353], "847": [478, 494, 1120, 1136, 1342], "867": [478, 494, 1120, 1136, 1342], "doi": [478, 481, 494, 503, 507, 508, 510, 551, 1120, 1123, 1136, 1145, 1149, 1150, 1152, 1280, 1324, 1342, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "1175": [478, 494, 508, 510, 1120, 1136, 1150, 1152, 1342], "1520": [478, 494, 1120, 1136, 1342], "0450": [478, 494, 1120, 1136, 1342], "036": [478, 494, 1120, 1136, 1342], "3c0847": [478, 494, 1120, 1136, 1342], "morsdo": [478, 494, 1120, 1136, 1342], "3e2": [478, 494, 1120, 1136, 1342], "smith": [478, 494, 1120, 1136, 1342], "wilheit": [478, 494, 1120, 1136, 1342], "zipser": [478, 494, 1120, 1136, 1342], "character": [478, 481, 494, 515, 1120, 1123, 1136, 1157, 1342], "tropic": [478, 494, 1120, 1136, 1342], "kwajex": [478, 494, 1120, 1136, 1342], "385": [478, 494, 1120, 1136, 1342], "415": [478, 494, 1120, 1136, 1342], "jam2206": [478, 494, 1120, 1136, 1342], "lapse_r": [479, 499, 503, 1121, 1141, 1145], "nsamples_max": [479, 1121], "prepar": [479, 1121, 1349, 1350, 1351, 1353, 1354, 1355, 1358], "refl_std": [479, 1121], "zdr_std": [479, 1121], "kdp_std": [479, 1121], "rhohv_std": [479, 1121], "relh_std": [479, 1121], "negative_vel_prior": [480, 1122], "quit": [480, 1122, 1357], "simpl": [480, 774, 1054, 1122, 1350, 1351], "tail": [480, 1122], "prioriti": [480, 576, 1122, 1305, 1363], "chosen": [480, 1122], "twice": [480, 1122], "fill_valu": [481, 496, 506, 507, 508, 515, 552, 1123, 1138, 1148, 1149, 1150, 1157, 1281, 1349, 1350, 1358], "ml_field": [481, 510, 511, 512, 1123, 1152, 1153, 1154], "ml_pos_field": [481, 510, 511, 512, 1123, 1152, 1153, 1154], "max_rang": [481, 1123], "detect_threshold": [481, 1123], "02": [481, 1064, 1065, 1123, 1319, 1324, 1338, 1342, 1359], "interp_hol": [481, 1123], "max_length_hol": [481, 1123], "check_min_length": [481, 1123], "get_iso0": [481, 510, 511, 512, 1123, 1152, 1153, 1154], "ml": [481, 510, 1123, 1152, 1305], "plai": [481, 1123, 1360], "affect": [481, 500, 1065, 1123, 1142], "erron": [481, 1123, 1351], "hole": [481, 1123], "ml_obj": [481, 510, 511, 512, 1123, 1152, 1153, 1154], "ml_dict": [481, 510, 511, 512, 1123, 1152, 1153, 1154], "iso0_dict": [481, 510, 511, 512, 1123, 1152, 1153, 1154], "all_ml": [481, 1123], "wolfensberg": [481, 781, 782, 783, 1123, 1343, 1344], "scipion": [481, 1123], "bern": [481, 503, 507, 1123, 1145, 1149], "q": [481, 1123], "meteorol": [481, 513, 1123, 1155, 1342], "soc": [481, 1123], "142": [481, 1123], "108": [481, 1123], "124": [481, 1123, 1344, 1356], "1002": [481, 1123], "qj": [481, 1123], "2672": [481, 1123], "niter": [482, 1124], "nvar": [482, 495, 1124, 1137], "medoids_arr": [482, 1124], "beta": [483, 484, 485, 486, 487, 488, 750, 752, 770, 779, 1125, 1126, 1127, 1128, 1129, 1130], "a_field": [483, 484, 487, 1125, 1126, 1129, 1357], "rr_field": [483, 484, 485, 486, 487, 488, 489, 1125, 1126, 1127, 1128, 1129, 1130, 1131], "law": [483, 484, 485, 486, 487, 488, 752, 1125, 1126, 1127, 1128, 1129, 1130], "diederich": [483, 1125], "tromel": [483, 513, 1125, 1155], "wavelenght": [483, 1125], "partial": [483, 752, 1125], "blockag": [483, 752, 1125], "hydrometeorologi": [483, 1125], "487": [483, 1125], "502": [483, 1125], "2014": [483, 507, 513, 752, 1125, 1149, 1155], "potenti": [483, 510, 752, 772, 1125, 1152], "mitig": [483, 752, 1125], "599": [483, 752, 1125], "619": [483, 752, 1125], "alphazr": [484, 1126], "0376": [484, 486, 487, 488, 1126, 1128, 1129, 1130], "betazr": [484, 1126], "6112": [484, 486, 487, 488, 1126, 1128, 1129, 1130], "alphaz": [484, 487, 488, 1126, 1129, 1130], "betaz": [484, 487, 488, 1126, 1129, 1130], "alphaa": [484, 487, 1126, 1129], "betaa": [484, 487, 1126, 1129], "mp_factor": [484, 1126], "hydro_field": [484, 503, 511, 768, 781, 782, 783, 1126, 1145, 1153, 1357], "main_field": [484, 487, 488, 1126, 1129, 1130], "thresh_max": [484, 487, 488, 1126, 1129, 1130], "act": [484, 487, 488, 624, 1126, 1129, 1130, 1342, 1349], "master": [484, 487, 488, 1126, 1129, 1130, 1333, 1361], "slave": [484, 487, 488, 1126, 1129, 1130], "blend": [487, 488, 1129, 1130, 1332], "rain_mast": [487, 488, 1129, 1130], "alphakdp": [488, 1130], "betakdp": [488, 1130], "mm": [488, 1130, 1342, 1357], "polynomi": [489, 1131], "develop": [489, 494, 1131, 1136, 1347, 1355, 1360, 1361], "mcgill": [489, 1131, 1347], "az_tol": [490, 491, 532, 1132, 1133, 1261], "wind_field": [490, 491, 493, 1132, 1133, 1135], "windshear_field": [490, 491, 1132, 1133], "windshear": [490, 491, 1132, 1133, 1305], "npoints_min": [492, 1134], "azi_spacing_max": [492, 1134], "vel_diff_max": [492, 1134], "rad_vel_field": [492, 1134], "u_vel_field": [492, 1134], "v_vel_field": [492, 1134], "w_vel_field": [492, 1134], "vel_est_field": [492, 1134], "vel_std_field": [492, 1134], "vel_diff_field": [492, 1134], "vad": [492, 517, 518, 1134, 1160, 1161, 1305, 1310, 1339, 1345, 1359, 1361], "recomput": [492, 1134], "difer": [492, 1134], "vert_proj": [493, 1135], "neglig": [493, 1135], "v_r": [493, 1135], "v_el": [493, 1135], "v_az": [493, 1135], "perpendicular": [493, 1135], "v_h": [493, 1135], "know": [493, 1135, 1363], "hold": [493, 1135], "min_val_us": [494, 1136], "binary_clos": [494, 1136], "val_for_max_rad": [494, 1136], "max_rad_km": [494, 1136], "core_v": [494, 1136], "bkgd_val": [494, 1136], "feat_val": [494, 1136], "overest_field": [494, 1136], "underest_field": [494, 1136], "tomkin": [494, 551, 1136, 1280, 1324, 1342], "2023": [494, 1136], "steiner": [494, 515, 1136, 1157, 1342], "1995": [494, 515, 1136, 1157, 1342], "laura": [494, 1136, 1324, 1342], "lauratomkin": [494, 1136], "overestim": [494, 1136, 1342], "feature_dict": [494, 1136], "climatolog": [494, 515, 1136, 1157, 1342], "gaug": [494, 515, 1136, 1157, 1342], "1978": [494, 515, 1136, 1157, 1342, 1357], "2007": [494, 515, 1136, 1157, 1342], "miller": [494, 551, 1136, 1280, 1324], "2024": [494, 1136, 1304], "identif": [494, 551, 1136, 1280, 1324], "faint": [494, 1136], "prep": [494, 1136], "sonde_dset": [495, 1137], "time_kei": [495, 1137], "height_kei": [495, 1137], "vap": [495, 1137], "startard": [495, 1137], "ncvar": [495, 1137], "return_d": [495, 1137], "radar_spec": [496, 1138], "dem_grid": [496, 1138], "terrain_altitude_field": [496, 1138], "bent_terrain_altitude_field": [496, 1138], "terrain_slope_field": [496, 1138], "terrain_aspect_field": [496, 1138], "elevation_angle_field": [496, 1138], "visibility_field": [496, 1138], "min_vis_elevation_field": [496, 1138], "min_vis_altitude_field": [496, 1138], "incident_angle_field": [496, 1138], "effective_area_field": [496, 1138], "sigma_0_field": [496, 1138], "rcs_clutter_field": [496, 1138], "dbm_clutter_field": [496, 1138], "dbz_clutter_field": [496, 1138], "visibility_polar_field": [496, 1138], "az_conv": [496, 1138], "dr": [496, 506, 759, 760, 1138, 1148], "daz": [496, 1138], "012": [496, 1138], "3333333333333333": [496, 1138], "atm_att": [496, 1138], "mosotti_kw": [496, 1138], "9644": [496, 1138], "raster_oversampl": [496, 1138], "sigma0_method": [496, 1138], "gabella": [496, 503, 1138, 1145], "clip": [496, 1138], "return_pyart_object": [496, 1138], "frequenti": [496, 1138], "ghz": [496, 1138], "tau": [496, 1138], "total": [496, 506, 507, 508, 781, 1138, 1148, 1149, 1150, 1307, 1308, 1309, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1359], "terrain": [496, 1138, 1321], "backscatt": [496, 506, 513, 1138, 1148, 1155], "incid": [496, 1138], "topographi": [496, 1138], "rx": [496, 1138], "discret": [496, 1061, 1138], "slower": [496, 506, 1065, 1138, 1148], "equival": [496, 512, 631, 1054, 1138, 1154, 1312, 1323, 1331, 1337], "One": [496, 1138, 1349, 1358, 1361, 1363], "clausiu": [496, 1138], "mosotti": [496, 1138], "materi": [496, 1138, 1347], "sigma": [496, 514, 1138, 1156, 1239, 1240, 1332, 1333], "naught": [496, 1138], "undefin": [496, 1138], "oversampl": [496, 1138, 1305], "delrieu": [496, 1138], "lot": [496, 1138, 1356], "directli": [496, 1138, 1321, 1357], "bent_terrain_altitude_d": [496, 1138], "terrain_slope_d": [496, 1138], "terrain_aspect_d": [496, 1138], "elevation_d": [496, 1138], "min_vis_elevation_d": [496, 1138], "min_vis_altitude_d": [496, 1138], "visibility_d": [496, 1138], "incident_angle_d": [496, 1138], "effective_area_d": [496, 1138], "sigma_0_d": [496, 1138], "rcs_clutter_d": [496, 1138], "dbm_clutter_d": [496, 1138], "dbz_clutter_d": [496, 1138], "visibility_polar_d": [496, 1138], "perona": [496, 1138], "1998": [496, 1138], "orograph": [496, 1138], "influenc": [496, 1058, 1061, 1064, 1065, 1138, 1353], "geometr": [496, 1138], "15": [496, 506, 551, 750, 1138, 1148, 1280, 1307, 1308, 1313, 1321, 1324, 1330, 1331, 1332, 1333, 1336, 1337, 1340, 1344, 1351, 1356, 1358], "1485": [496, 1138], "1494": [496, 1138], "freq_band": [498, 1140], "temp_ref_field": [499, 1141], "heigh_over_iso0": [499, 1141], "iso0_ref": [499, 1141], "iso": [499, 512, 514, 759, 760, 1141, 1154, 1156], "insuffici": [499, 1141], "rng_left_km": [500, 1142], "rng_right_km": [500, 1142], "ang": [500, 1142, 1332, 1333], "ang_r": [500, 1142], "ml_bottom": [500, 1142], "masl": [500, 512, 759, 760, 1142, 1154], "msl": [500, 510, 553, 1142, 1152, 1282], "grid1": [501, 1143], "grid2": [501, 1143], "return_valu": [501, 1143], "displac": [501, 1143], "en": [501, 1143, 1347, 1355, 1360, 1361], "wikipedia": [501, 1143], "phase_correl": [501, 1143], "inspir": [501, 1143], "christoph": [501, 1143], "gohlk": [501, 1143], "lfd": [501, 1143], "uci": [501, 1143], "imreg": [501, 1143], "advect": [501, 502, 1143, 1144], "trim_edg": [502, 1144], "field_list": [502, 1056, 1144], "shifted_grid": [502, 1144], "subset": [502, 1144, 1310, 1339, 1340], "mass_cent": [503, 1145, 1357], "entropy_field": [503, 1145], "compute_entropi": [503, 1145], "output_dist": [503, 1145], "besic": [503, 511, 1145, 1153, 1357], "nclass": [503, 1145], "decai": [503, 1145], "celsiu": [503, 1145, 1305], "entropi": [503, 1145], "fields_dict": [503, 1145], "figuera": [503, 1145, 1347, 1361], "ventura": [503, 1145, 1347, 1361], "grazioli": [503, 507, 1145, 1149, 1347, 1361], "germann": [503, 1145, 1347, 1361], "semi": [503, 1145], "supervis": [503, 1145], "mea": [503, 551, 1145, 1280, 1324], "4425": [503, 1145], "4445": [503, 1145], "5194": [503, 551, 1145, 1280, 1324], "amt": [503, 551, 1145, 1280, 1324], "piecewis": [504, 505, 1146, 1147], "optim": [504, 505, 506, 1065, 1146, 1147, 1148], "lenght": [504, 505, 1146, 1147], "kdp_dict": [504, 505, 506, 507, 508, 1146, 1147, 1148, 1149, 1150], "cg": [506, 1148], "clpf": [506, 1148], "length_scal": [506, 1148], "first_guess": [506, 1148], "finite_ord": [506, 1148], "maesaka": [506, 1148, 1357], "2012": [506, 508, 1148, 1150, 1357], "monoton": [506, 509, 1148, 1151, 1321], "propag": [506, 507, 508, 1148, 1149, 1150], "notat": [506, 1148], "primari": [506, 1148], "proport": [506, 1148], "analys": [506, 507, 508, 1148, 1149, 1150], "nonlinear": [506, 1148], "conjug": [506, 1148], "gradient": [506, 1148, 1321], "broyden": [506, 1148], "fletcher": [506, 1148], "goldfarb": [506, 1148], "shanno": [506, 1148], "bfg": [506, 1148], "100k": [506, 1148], "parameter": [506, 1148], "attentu": [506, 1148], "constraint": [506, 1148], "bring": [506, 1148], "magnitud": [506, 755, 1148, 1344, 1358], "guess": [506, 1148], "root": [506, 1148, 1360, 1363], "signifi": [506, 515, 1148, 1157], "everywher": [506, 1148], "exactli": [506, 1148, 1316], "avoid": [506, 1148, 1305, 1356, 1363], "converg": [506, 1148], "closer": [506, 1148], "finit": [506, 1148], "accuraci": [506, 1148], "maxit": [506, 1148], "met": [506, 1148], "achiev": [506, 1148], "somewhat": [506, 1148], "thread": [506, 1148], "cpu": [506, 1148], "multiprocess": [506, 1148], "capabl": [506, 1148, 1351, 1358], "relev": [506, 1148], "phidpf_dict": [506, 1148], "phidpr_dict": [506, 507, 508, 1148, 1149, 1150], "forward": [506, 543, 544, 1148, 1272, 1273], "iwanami": [506, 1148], "maki": [506, 1148], "seventh": [506, 1148], "european": [506, 1148], "confer": [506, 1148, 1347], "hydrologi": [506, 1148], "rcov": [507, 1149], "pcov": [507, 1149], "prefilter_psidp": [507, 508, 1149, 1150], "filter_opt": [507, 508, 1149, 1150], "kalman": [507, 1149], "schneeb": [507, 1149], "psidp": [507, 508, 1149, 1150], "char": [507, 508, 1149, 1150], "capit": [507, 508, 1149, 1150], "intercept": [507, 1149], "3x3": [507, 1149], "covari": [507, 1149], "4x4": [507, 1149], "filter_psidp": [507, 508, 1149, 1150], "enabl": [507, 508, 1149, 1150], "kdp_std_dict": [507, 1149], "dev": [507, 1149, 1305, 1353, 1361], "ensembl": [507, 1149], "52": [507, 513, 1149, 1155, 1340, 1355, 1357], "5137": [507, 1149], "5149": [507, 1149], "1109": [507, 1149], "tgr": [507, 1149], "2287017": [507, 1149], "windsiz": [508, 1150], "n_iter": [508, 1150], "interp": [508, 1150], "vulpiani": [508, 1150], "pre": [508, 1150, 1356, 1357], "ex": [508, 1150, 1321, 1361], "advantag": [508, 1150], "eat": [508, 1150], "gianfranco": [508, 1150], "mario": [508, 1150], "montopoli": [508, 1150], "luca": [508, 1150], "delli": [508, 1150], "passeri": [508, 1150], "antonio": [508, 1150], "gioia": [508, 1150], "pietro": [508, 1150], "giordano": [508, 1150], "frank": [508, 1150], "marzano": [508, 1150], "On": [508, 1150], "dual": [508, 1150], "mountain": [508, 1150], "climatol": [508, 1150, 1342], "51": [508, 1150, 1340], "405": [508, 1150], "425": [508, 1150], "jamc": [508, 750, 752, 1150], "05024": [508, 1150], "profile_field": [509, 1151], "height_field": [509, 1151], "3re": [509, 1151], "whole": [509, 1151], "height_dict": [509, 1151], "profile_dict": [509, 1151], "nvol": [510, 1152], "maxh": [510, 1152], "rhomin": [510, 1152], "rhomax": [510, 1152], "94": [510, 1152, 1358], "zhmin": [510, 1152], "hwindow": [510, 1152], "mlzhmin": [510, 1152], "mlzhmax": [510, 1152], "mlzdrmin": [510, 1152], "mlzdrmax": [510, 1152], "htol": [510, 1152], "ml_bottom_diff_max": [510, 1152], "time_accu_max": [510, 1152], "1800": [510, 1152, 1349], "nml_points_min": [510, 1152], "wlength": [510, 1152], "percentile_bottom": [510, 1152], "percentile_top": [510, 1152], "time_nodata_allow": [510, 1152], "3600": [510, 1152, 1349], "ml_global": [510, 1152], "aggreg": [510, 512, 1152, 1154, 1343, 1357], "ml_bottom_dif_max": [510, 1152], "percentil": [510, 1152], "stack": [510, 1152, 1360, 1361], "Its": [510, 1152], "kraus": [510, 1152], "design": [510, 551, 1152, 1280, 1332, 1342, 1361], "prototyp": [510, 1152], "meteo": [510, 512, 756, 759, 760, 1152, 1154], "clim": [510, 513, 1152, 1155], "1354": [510, 1152], "1364": [510, 1152], "2007jamc1634": [510, 1152], "force_continu": [511, 1153], "dist_max": [511, 1153], "350": [511, 1153], "heightand": [511, 1153], "ml_thickness_min": [512, 759, 760, 1154], "ml_thickness_max": [512, 759, 760, 1154], "1400": [512, 1154], "ml_thickness_step": [512, 759, 760, 1154], "iso0_max": [512, 759, 760, 1154], "4500": [512, 1154, 1349], "ml_top_diff_max": [512, 759, 760, 1154], "700": [512, 766, 767, 781, 782, 783, 1154], "ml_top_step": [512, 759, 760, 1154], "ns_factor": [512, 1154], "rhohv_corr_min": [512, 1154], "rhohv_nash_min": [512, 1154], "ang_iso0": [512, 1154], "age_iso0": [512, 1154], "ml_thickness_iso0": [512, 1154], "ml_memori": [512, 1154], "rhohv_field_ob": [512, 1154], "rhohv_field_theo": [512, 1154], "franc": [512, 756, 759, 760, 1154], "decid": [512, 781, 782, 1154], "nse": [512, 1154], "hour": [512, 1154, 1312, 1313], "past": [512, 759, 760, 1154, 1361], "ml_found_obj": [512, 1154], "instantan": [512, 1154], "desired_angl": [513, 1155], "wanted_angl": [513, 1155], "dictonari": [513, 1155], "troemel": [513, 1155], "2529": [513, 1155], "2548": [513, 1155], "54": [513, 1155, 1313, 1356], "2344": [513, 1155], "2359": [513, 1155], "submit": [513, 1155, 1347], "technol": [513, 1155], "fm": [514, 1156], "rg": [514, 516, 1156, 1158], "nbin": [514, 1156], "110": [514, 1156], "pdf_zh_max": [514, 1156], "pdf_relh_max": [514, 1156], "sigma_zh": [514, 1156], "sigma_relh": [514, 1156], "random": [514, 516, 1156, 1158], "platykurtic_dbz": [514, 1156], "platykurtic_h_iso0": [514, 1156], "nfeatur": [514, 1156], "histogram": [514, 1156, 1316, 1351], "platykurtik": [514, 1156], "guassian": [514, 1156], "quantiz": [514, 1156], "platykurt": [514, 1156], "fm_sampl": [514, 1156], "work_level": [515, 1157], "peak_rel": [515, 1157], "area_rel": [515, 1157], "medium": [515, 1157], "bkg_rad": [515, 1157], "11000": [515, 1157, 1353], "use_intens": [515, 1157], "bright": [515, 1157], "sgp": [515, 1157, 1235], "peaked": [515, 1157], "eclass": [515, 1157], "par_var": [516, 1158], "probabl": [516, 546, 547, 548, 560, 1158, 1275, 1276, 1277, 1289, 1355], "membership": [516, 1158], "synthetic_ob": [516, 1158], "z_want": [517, 518, 1160, 1161, 1344, 1356, 1361], "valid_ray_min": [517, 1160, 1361], "brown": [517, 1160, 1305, 1361], "amount": [517, 1160, 1353, 1361], "_averag1d": [517, 1160, 1361], "idw": [517, 1160], "wexler": [517, 1160, 1361], "1968": [517, 1160, 1361], "kinemat": [517, 1160, 1361], "105": [517, 1160, 1344, 1356, 1361], "113": [517, 1160, 1340, 1361], "linespac": [518, 1161], "michelson": [518, 1161], "andersson": [518, 1161], "koistinen": [518, 1161], "collier": [518, 1161], "riedl": [518, 1161], "szturc": [518, 1161], "gjertsen": [518, 1161], "nielsen": [518, 1161], "overgaard": [518, 1161], "baltex": [518, 1161], "centr": [518, 1161], "smhi": [518, 1161], "climatologi": [518, 1061, 1161], "swedish": [518, 1161], "hydrolog": [518, 1161], "institut": [518, 1161, 1358], "norrkop": [518, 1161], "1970": 519, "01t00": 519, "00": [519, 1309, 1314, 1319, 1338, 1345, 1346, 1359], "00z": 519, "bytes_or_buff": 519, "expos": 519, "buffer": 519, "handler": 519, "__str__": 519, "sy": [519, 575], "getdefaultencod": 519, "radian": [520, 522, 564, 770, 1249, 1251, 1293], "std": [522, 523, 555, 567, 1251, 1252, 1284, 1296], "convolut": [524, 1253], "ndimag": [524, 1253, 1332, 1333], "generic_filt": [524, 1253], "pi": [524, 1253, 1351], "std_dev": [524, 1253], "radar1": [525, 526, 553, 561, 1254, 1255, 1282, 1290], "radar2": [525, 526, 553, 561, 1254, 1255, 1282, 1290], "h_tol": [525, 553, 1254, 1282], "coloc_gates_field": [525, 526, 1254, 1255], "coloc": [525, 526, 1254, 1255], "coloc_dict": [525, 526, 1254, 1255], "azi": [525, 526, 542, 1254, 1255, 1271], "coloc_rad1": [525, 526, 1254, 1255], "distance_upper_bound": [526, 1255], "neighbour": [526, 542, 1255, 1271], "ckdtree": [526, 1255], "bound": [526, 1255], "lin_tran": [527, 1256], "span": [527, 1256], "consdier": [527, 1256], "radar_rhi": [527, 532, 759, 760, 1256, 1261], "vec1": [528, 530, 1257, 1259], "vec2": [528, 530, 1257, 1259], "pearson": [528, 1257], "corr": [528, 530, 1257, 1259, 1356], "stat": [529, 1258], "nvalid": [529, 1258], "arr1": [530, 1259], "arr2": [530, 1259], "obs_data": [531, 1260], "mod_data": [531, 1260], "nash": [531, 1260], "sutcliff": [531, 1260], "nash_coeff": [531, 1260], "target_elev": [533, 549, 1262, 1278], "el_tol": [533, 549, 1262, 1278], "radar_ppi": [533, 1262], "epoch": [534, 535, 536, 537, 538, 1263, 1264, 1265, 1266, 1267], "max_offset": [539, 1268], "running_win_dt": [539, 1268], "deg_rng": [539, 1268], "consider_2pi_jump": [539, 1268], "is_ppi": [539, 1268], "wise": [539, 1268], "strategi": [539, 1268], "might": [539, 1268, 1349, 1363], "goe": [539, 1268, 1355], "shot": [539, 1268], "articl": [540, 1269], "var": [540, 541, 572, 573, 1269, 1270, 1301, 1302], "nnois": [540, 541, 1269, 1270], "pwr_w_rai": [541, 1270], "pct": [541, 547, 559, 1270, 1276, 1288], "270436": [541, 1270], "flat_reg_wlen": [541, 546, 557, 1270, 1275, 1286], "flat_reg_var_max": [541, 557, 558, 1270, 1286, 1287], "439551": [541, 1270], "snr_thr": [541, 548, 1270, 1277], "769572": [541, 1270], "ngates_final_min": [541, 1270], "ngates_median": [541, 1270], "83": [541, 1270, 1357], "local": [541, 546, 550, 1234, 1270, 1275, 1279, 1347, 1360, 1361], "decibel": [541, 1270], "flat": [541, 546, 557, 558, 1270, 1275, 1286, 1287, 1312, 1356], "inds_rai": [541, 1270], "inds_ray_aux": [542, 1271], "ind_rng_aux": [542, 1271], "target_latitud": [543, 569, 1272, 1298], "target_longitud": [543, 569, 1272, 1298], "bear": [543, 1272], "alongitudeg": [543, 1272], "great": [543, 569, 1272, 1298], "circl": [543, 569, 1272, 1298, 1342], "known": [543, 1272, 1358, 1361], "6371000": [543, 569, 1272, 1298], "calculatitude": [543, 1272], "degress": [543, 569, 1272, 1298], "further": [545, 781, 782, 1274], "sphere_dist": [545, 1274], "for_azimuth": [545, 1274], "get_column_rai": [545, 1274], "xarari": [545, 1274], "prob_thr": [546, 547, 1275, 1276], "var_thr": [546, 1275], "0001": [547, 1276], "pct_out": [547, 1276], "pfa_thr": [548, 1277], "alarm": [548, 560, 1277, 1289], "xwind": [550, 1279], "ywind": [550, 1279], "win_std": [550, 1279], "mute_field": [551, 1280, 1324], "mute_threshold": [551, 1280, 1324], "field_threshold": [551, 1280, 1324], "discern": [551, 1280], "mute": [551, 1280, 1310, 1320, 1338, 1342, 1359], "allen": [551, 1280, 1324], "heavi": [551, 750, 752, 1280, 1324, 1332], "5515": [551, 1280, 1324], "5525": [551, 1280, 1324], "kind": [552, 568, 1281, 1297, 1307, 1357], "radarspectra": [552, 566, 1238, 1281, 1295], "psr_interp": [552, 1281], "vol_d_tol": [553, 1282], "vismin": [553, 1282], "hmin": [553, 772, 1282], "azmin": [553, 1282], "azmax": [553, 1282], "visib_field": [553, 1282], "intersec_field": [553, 1282], "compli": [553, 767, 768, 1282], "regard": [553, 1282], "decim": [553, 1282], "diamet": [553, 1282], "intersec_rad1_dict": [553, 1282], "dist": [554, 555, 1064, 1065, 1283, 1284], "interval_min": [554, 555, 1283, 1284], "interval_max": [554, 555, 1283, 1284], "endpoint": [554, 555, 1283, 1284], "to_vpt": [556, 1285], "verticl": [556, 1285], "prescrib": [557, 1286], "ivic_flat_reg_wind_len": [557, 1286], "throw": [559, 560, 1288, 1289], "pfa": [559, 560, 1288, 1289], "1e": [559, 560, 1288, 1289, 1349, 1358], "matlab": [559, 1288], "get_ivic_pct": [559, 1288], "particularli": [559, 1288], "pct_tabl": [559, 1288], "snr_thr_out": [560, 1289], "coerce_angl": [561, 1290, 1305], "combin": [561, 562, 750, 751, 752, 1290, 1291, 1361], "slightli": [561, 1290, 1323, 1357], "slight": [561, 1290], "misposit": [561, 1290, 1305], "spectra1": [562, 1291], "spectra2": [562, 1291], "tup": [563, 1292], "guarante": [563, 1292], "broadcast": [563, 1292], "broadcasted_arrai": [563, 1292], "angles1": [564, 1293], "angles2": [564, 1293], "angle1": [565, 1294], "angle2": [565, 1294], "eg": [567, 1296], "ma": [567, 1296, 1316, 1317, 1342, 1350, 1354, 1361], "sim_vel_field": [568, 1297], "slinear": [568, 1297], "quadrat": [568, 1297], "cubic": [568, 1297], "interp1d": [568, 1297, 1361], "descript": [568, 576, 624, 626, 639, 721, 792, 793, 830, 1006, 1029, 1053, 1066, 1162, 1248, 1297, 1347, 1361], "sim_vel": [568, 1297, 1361], "coverag": [570, 571, 1299, 1300, 1356], "11pt": [572, 1301], "stdev": [572, 1301], "texarrai": [572, 1301], "pyradarobj": [572, 1301], "tex": [573, 1302], "single_scan": [574, 1303], "is_vpt": [574, 1303], "mislabel": [574, 1303], "properli": [574, 607, 608, 1303, 1313], "statu": [575, 1361], "dependeci": 575, "polish": 576, "risk": 576, "bug": [576, 1305, 1347, 1360, 1361], "momentpm": 579, "momentm": 579, "share": 579, "extra": [579, 590, 591, 607, 608], "momentspm": 579, "momentsm": 579, "metranet_lib": 579, "zh": [590, 591, 781, 782, 783, 1355, 1357], "keep_all_rai": 590, "physic_valu": [590, 591, 607, 608, 1355], "masked_arrai": [590, 591, 607, 608, 1349, 1358], "duplic": [590, 1305], "ret_data": [590, 591, 607, 608], "radardata": [590, 591, 607, 608], "reorder_angl": 591, "reorder": [591, 1305], "knmi_h5": [598, 1305], "file_path": 599, "cpi_head": 609, "3d": [611, 1356], "commun": [624, 1361, 1363], "interact": 639, "calculate_attenu": [721, 1307], "calculate_attenuation_zphi": [721, 1343, 1357], "calculate_attenuation_philinear": 721, "sun_retriev": 721, "get_sun_hit": 721, "get_sun_hits_psr": 721, "get_sun_hits_iv": 721, "correct_vpr": 721, "correct_vpr_spatialis": 721, "despeckle_field": 721, "correct_noise_rhohv": 721, "correct_bia": 721, "correct_vis": 721, "est_rhohv_rain": 721, "est_zdr_precip": 721, "est_zdr_snow": 721, "selfconsistency_bia": 721, "selfconsistency_bias2": 721, "selfconsistency_kdp_phidp": 721, "z_offset": 750, "rhv_min": 750, "ncp_min": 750, "a_coef": [750, 752], "06": [750, 1338, 1359], "spec_at_field": [750, 751, 752], "corr_refl_field": [750, 751, 752, 759, 760], "copol_coeff": [750, 1241, 1307, 1340, 1341, 1349], "norm_coherent_pow": [750, 1241, 1307, 1349], "proc_dp_phase_shift": [750, 1307, 1340, 1349], "spec_at": [750, 751, 752, 1307, 1343, 1357], "cor_z": [750, 751, 752, 1307, 1343, 1357], "gu": [750, 752], "2011": [750, 752, 1340], "39": [750, 752, 1340], "pia_coef": 751, "pida_coef": 751, "pia_field": [751, 752], "spec_diff_at_field": [751, 752], "pida_field": [751, 752], "corr_zdr_field": [751, 752], "dependec": 751, "refl": [751, 752, 1330], "pida_coeff": 751, "pia_dict": [751, 752], "spec_diff_at": [751, 752, 1343, 1357], "pida_dict": [751, 752], "cor_zdr": [751, 752, 1343, 1357], "smooth_window_len": 752, "jaot": [752, 756], "bia": [755, 760, 767, 768, 779, 781, 782, 791], "corrected_field": [755, 758], "urhohv_field": 756, "nh_field": 756, "nv_field": 756, "eq": [756, 1330], "2006": [756, 1313], "uncorrect": 756, "23": [756, 1344], "1340": 756, "1356": 756, "angle_min": [759, 760], "angle_max": [759, 760], "5000": [759, 760, 1344, 1353, 1356], "ml_peak_min": [759, 760], "ml_peak_max": [759, 760], "ml_peak_step": [759, 760], "dr_min": [759, 760], "dr_max": [759, 760], "dr_step": [759, 760], "dr_default": [759, 760], "dr_alt": [759, 760], "h_corr_max": [759, 760], "rmin_ob": [759, 760], "rmax_ob": [759, 760], "150000": [759, 760], "filter_param": 759, "weight_mem": [759, 760], "vpr_theo_dict_mem": [759, 760], "radar_mem_list": [759, 760], "lin_refl_field": [759, 760], "norm_refl_field": [759, 760], "corr_field": [759, 760], "proper": [759, 760, 1360], "abl": [759, 760, 767, 768, 1347, 1360], "refl_corr_dict": [759, 760], "corr_field_dict": [759, 760], "vpr_theo_dict_filt": [759, 760], "correct_iso0": 760, "spatialis": 760, "despeckl": 764, "speckl": [764, 1342], "find_object": 764, "perman": 764, "rhohv_rain_dict": 766, "rhohvmin": [767, 768], "phidpmax": [767, 768], "moder": 767, "zdr_prec_dict": 767, "snrmin": 768, "snrmax": 768, "kdpmax": 768, "tempmin": 768, "tempmax": 768, "differneti": 768, "zdr_snow_dict": 768, "az_data": 770, "az_ref": 770, "el_data": 770, "el_ref": 770, "sunhit": [770, 779], "npar": [770, 779], "do_elcorr": 770, "fit": [770, 779, 791], "hit": [770, 772, 773, 774, 779, 791, 1361], "par": [770, 779, 791], "delev_max": [772, 773, 774], "dazim_max": [772, 773, 774], "max_std_zdr": [772, 773], "sun_posit": [772, 773, 774], "pwrh_field": [772, 773, 774], "pwrv_field": [772, 773, 774], "sun_hit": [772, 773, 774, 791], "new_radar": [772, 773, 1350], "2003": [773, 1342], "noise_thr": 774, "val": [779, 791], "val_std": [779, 791], "az_bia": [779, 791], "el_bia": [779, 791], "az_width": [779, 791], "el_width": [779, 791], "zdr_kdpzh_dict": [781, 782, 783], "min_rhohv": [781, 782, 783], "filter_rain": [781, 782, 783], "max_phidp": [781, 782, 783], "smooth_wind_len": [781, 782, 783], "dphidp_min": 781, "dphidp_max": 781, "parametr": [781, 782, 783], "check_wet_radom": [781, 782], "wet_radome_refl": [781, 782], "wet_radome_len_min": [781, 782], "wet_radome_len_max": [781, 782], "wet_radome_ngates_min": [781, 782], "valid_gates_onli": 781, "keep_point": [781, 782], "kdp_wind_len": 781, "12": [781, 1063, 1307, 1312, 1313, 1318, 1319, 1323, 1329, 1330, 1338, 1340, 1350, 1354, 1356, 1358, 1359], "curv": [781, 782, 783, 1342], "gorgucci": [781, 782, 783], "vaccarono": [781, 782, 783], "kdpsim_field": [781, 782, 783], "phidpsim_field": [781, 782, 783], "wet": [781, 782, 1343, 1357], "mim": [781, 782], "disk": [781, 782], "That": 781, "refl_bias_dict": [781, 782], "selfconsistency_dict": [781, 782], "keep_poinst": [781, 782], "min_zdr": 782, "bias_per_g": 782, "kdp_data_dict": 782, "selfconsist": 783, "kdp_sim_dict": 783, "phidp_sim_dict": 783, "az_rad": 791, "az_sun": 791, "el_rad": 791, "el_sun": 791, "sun_hit_std": 791, "az_width_co": 791, "el_width_co": 791, "az_width_cross": 791, "el_width_cross": 791, "is_zdr": 791, "nhit": 791, "concret": 1043, "__getitem__": 1043, "__setitem__": 1043, "__delitem__": 1043, "__iter__": 1043, "__len__": 1043, "src_radar": 1054, "dest_radar": 1054, "distance_toler": [1054, 1316], "gatefilter_src": [1054, 1316], "time_toler": [1054, 1316], "kd": 1054, "tree": [1054, 1065], "src_radar_i": 1054, "src_radar_x": 1054, "destin": [1054, 1056, 1316], "src_radar_tim": 1054, "dest_radar_tim": 1054, "gate_mapp": 1054, "src": [1054, 1313, 1355, 1356, 1357], "dest": 1054, "dest_index": 1054, "radar_map": 1054, "mapped_radar": [1054, 1316], "adequ": [1054, 1316], "getter": [1055, 1057], "zg": [1058, 1059, 1060], "yg": [1058, 1059, 1060], "xg": [1058, 1059, 1060], "roi": [1058, 1059, 1060, 1062, 1063, 1065], "grow": [1059, 1060, 1064, 1065, 1361], "virtual": [1060, 1064, 1065], "grid_shap": [1061, 1062, 1063, 1064, 1065, 1235, 1317, 1318, 1322, 1342, 1353, 1356], "grid_limit": [1061, 1062, 1063, 1064, 1065, 1235, 1317, 1318, 1322, 1342, 1353, 1356], "gridding_algo": 1061, "map_gates_to_grid": 1061, "copy_field_dtyp": 1061, "map_to_grid": [1061, 1064], "significantli": [1061, 1065], "faster": [1061, 1065], "barn": [1061, 1065, 1353], "1964": 1061, "maxim": 1061, "numer": [1061, 1357], "396": 1061, "409": 1061, "cressman": [1061, 1065, 1353], "1959": 1061, "monthli": 1061, "review": 1061, "367": 1061, "374": 1061, "paulei": [1061, 1353], "1990": [1061, 1353], "respons": 1061, "118": 1061, "1145": 1061, "1164": 1061, "target_sweep": [1062, 1063], "grid_siz": [1062, 1063, 1064, 1065], "801": [1062, 1063, 1355], "auto": [1062, 1063, 1321, 1355, 1356], "max_z": [1062, 1063], "12000": [1062, 1063, 1349, 1353], "el_rounding_frac": 1062, "add_grid_altitud": 1062, "grid_from_radar": [1062, 1063, 1064, 1065, 1317, 1318, 1322, 1342, 1353, 1356], "h_factor": [1062, 1063, 1064, 1065], "dist_factor": [1062, 1063, 1064], "radar_d": [1062, 1063], "third": [1062, 1063, 1357, 1361], "az_rounding_frac": 1063, "grid_origin": [1064, 1065, 1318, 1322], "grid_origin_alt": [1064, 1065], "map_roi": [1064, 1065], "weighting_funct": [1064, 1065, 1353], "barnes2": [1064, 1065], "17000": [1064, 1065, 1353], "roi_func": [1064, 1065, 1353], "dist_beam": [1064, 1065, 1353], "constant_roi": [1064, 1065], "z_factor": [1064, 1065], "xy_factor": [1064, 1065], "min_radiu": [1064, 1065, 1353], "nb": [1064, 1065], "bsp": [1064, 1065], "linearli": 1064, "roifunct": 1064, "get_roi": 1064, "cython": [1064, 1305], "copy_field_data": 1065, "kd_tree": 1065, "leafsiz": 1065, "nearbi": [1065, 1318], "coodin": 1065, "azimut": 1065, "similarili": 1065, "example_roi_func_const": 1065, "example_roi_func_dist": 1065, "example_roi_func_dist_beam": 1065, "foreach": 1065, "metet": 1065, "sacr": 1065, "sapr": [1065, 1241], "dist_mean": 1065, "preserv": [1065, 1351], "leaf": 1065, "lookup": [1065, 1305], "suffix": 1173, "tmp": 1173, "temporari": 1173, "my_cwd": 1173, "getcwd": 1173, "tmpdir": 1173, "_": [1173, 1312, 1313, 1343, 1357], "txt": [1173, 1360], "wt": 1173, "assert": [1173, 1361], "isfil": 1173, "path_to_fil": 1234, "site": [1235, 1307, 1340, 1350, 1353, 1355, 1356, 1357, 1360], "min_valu": 1239, "max_valu": 1239, "grid_len": 1239, "mu": [1239, 1240], "masked_boundari": 1239, "dp_phase_shift": [1241, 1340, 1349], "diff_phas": [1241, 1349], "differential_reflect": [1241, 1312, 1325, 1332, 1354, 1355, 1358], "rectangular": [1242, 1243], "miscellan": 1248, "depreci": 1248, "caution": 1248, "releas": [1304, 1347, 1350, 1353, 1356, 1360, 1361], "aug": 1304, "29": [1304, 1359], "guid": [1304, 1347], "broken": 1304, "sever": [1305, 1357], "wolfidan": 1305, "com": [1305, 1333, 1360, 1361, 1363], "pyart": [1305, 1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363], "pull": [1305, 1313, 1347, 1361], "writer": [1305, 1347], "flip": [1305, 1356], "coerc": 1305, "dealias_spectra": 1305, "output_to_geotiff": 1305, "improvemnet": 1305, "lib": [1305, 1307, 1350, 1353, 1355, 1356, 1357, 1360], "download": [1305, 1307, 1308, 1310, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1361, 1363], "gh": 1305, "action": 1305, "cfg": 1305, "handl": 1305, "typo": 1305, "odim_h5_writ": 1305, "sw_version": 1305, "led": [1305, 1363], "timestep": [1305, 1356], "wrong": 1305, "deprec": [1305, 1350, 1353, 1355, 1356], "cumtrapz": 1305, "hydro": [1305, 1343, 1355, 1357], "gecsx": [1305, 1347], "commit": [1305, 1361], "57664ce7b27c27af03f631fcd0e92a2": 1305, "linalg": 1305, "lstsq": 1305, "config": [1305, 1349, 1356, 1357, 1363], "bias_and_nois": 1305, "extract_sweeps_skyecho": 1305, "aux_io": [1305, 1355], "knmi": 1305, "h5": 1305, "proprietari": 1305, "latlon": 1305, "cross_sect": 1305, "gridmapdisplai": [1305, 1310, 1320, 1322, 1338, 1342, 1353, 1356, 1359], "_rsl_interfac": 1305, "pyx": 1305, "read_product": [1305, 1355], "behaviour": 1305, "conv_strat_yut": [1305, 1342], "juhi24": 1305, "patch": [1305, 1332], "radar_util": 1305, "register_cmap": 1305, "join_radar": [1305, 1356], "colobar": [1305, 1323], "graph": [1305, 1307, 1308, 1312, 1313, 1316, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1349, 1350, 1351, 1353, 1354, 1356, 1357], "_label_axes_latlon": 1305, "minor": [1305, 1350, 1353, 1356], "rad4alp_gif_read": 1305, "imageio": 1305, "nrow": [1305, 1321], "ncol": 1305, "agre": 1305, "cpc": 1305, "plot_xsect": [1305, 1337, 1338, 1359], "radardisplai": [1305, 1307, 1308, 1321, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1341, 1343, 1356, 1357], "rainforest": 1305, "compute_refl_time_avg": 1305, "crash": [1305, 1355], "radar_": 1305, "care": 1305, "read_odim_h5": 1305, "guidelin": 1305, "prohibit": 1305, "write_odim_grid": 1305, "interfac": 1305, "setuptool": 1305, "interpol_field": 1305, "northernmost": 1305, "msrad": [1307, 1355, 1356, 1357], "anaconda3": [1307, 1347, 1350, 1353, 1355, 1356, 1357, 1360, 1363], "wolfensb": [1307, 1313, 1355, 1356, 1357], "env": [1307, 1347, 1350, 1353, 1355, 1356, 1357, 1363], "pyart_new": 1307, "python3": [1307, 1355, 1356, 1357], "packag": [1307, 1313, 1347, 1350, 1353, 1355, 1356, 1357, 1360, 1361, 1363], "_core": 1307, "fromnumer": [1307, 1357], "820": 1307, "userwarn": [1307, 1313, 1355, 1356, 1357], "maskedarrai": [1307, 1357], "kth": [1307, 1357], "__doc__": [1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1342], "jonathan": [1307, 1308, 1317, 1318, 1325, 1326, 1328, 1330, 1334, 1337, 1363], "helmu": [1307, 1308, 1317, 1318, 1325, 1326, 1328, 1330, 1334, 1337, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361, 1363], "jhelmu": [1307, 1308, 1317, 1318, 1325, 1326, 1328, 1330, 1334, 1337], "anl": [1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1332, 1333, 1334, 1335, 1337, 1340, 1341], "licens": [1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1361], "bsd": [1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1361], "claus": [1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1361], "pyplot": [1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357], "plt": [1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357], "get_test_data": [1307, 1308, 1316, 1317, 1318, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342], "sgpcsaprsurcmaci7": [1307, 1350], "c0": [1307, 1330, 1331, 1335, 1350], "20110520": [1307, 1350], "095101": [1307, 1350], "read_cfradi": [1307, 1316, 1318, 1322, 1330, 1331, 1335, 1343, 1344, 1356, 1357], "pop": 1307, "specific_attenu": [1307, 1340, 1343, 1349, 1354, 1357], "corrected_reflectivity_horizont": [1307, 1318, 1322, 1340, 1349], "add_field": [1307, 1308, 1342, 1343, 1350, 1351, 1356, 1357, 1361], "figsiz": [1307, 1308, 1312, 1313, 1316, 1321, 1322, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1341, 1342, 1343, 1350, 1351, 1353, 1354, 1356, 1357], "ax1": [1307, 1308, 1322, 1336, 1337, 1342], "add_subplot": [1307, 1308, 1317, 1318, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1337], "131": [1307, 1342], "raw": [1307, 1308, 1347, 1348, 1356], "ax2": [1307, 1308, 1316, 1322, 1336, 1337, 1341, 1342, 1351], "132": [1307, 1342], "ax3": [1307, 1308, 1336, 1342], "133": [1307, 1340, 1342], "suptitl": [1307, 1308, 1335, 1344, 1356], "fontsiz": [1307, 1308, 1321, 1323, 1332, 1333], "minut": [1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1356], "376": 1307, "jupyt": [1307, 1308, 1310, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1355, 1363], "notebook": [1307, 1308, 1310, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1350, 1353, 1354, 1361, 1363], "plot_attenu": [1307, 1309, 1359], "ipynb": [1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344], "zip": [1307, 1308, 1310, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347], "galleri": [1307, 1308, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344, 1347, 1359], "sphinx": [1307, 1308, 1310, 1312, 1313, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1344], "ial": 1308, "095636": [1308, 1351], "sonde_fil": 1308, "sgpinterpolatedsondec1": 1308, "c1": [1308, 1354], "20110510": 1308, "000000": 1308, "cdf": 1308, "read_arm_sonde_vap": 1308, "exclude_transit": [1308, 1317, 1318, 1322, 1341], "exclude_invalid": 1308, "exclude_outsid": 1308, "80": [1308, 1336, 1341], "dealias_data": 1308, "dealias_region_bas": [1308, 1351, 1356], "corrected_veloc": [1308, 1344, 1351, 1354, 1356], "sixth": 1308, "221": [1308, 1325, 1356], "223": [1308, 1325, 1356], "ax4": 1308, "224": [1308, 1325, 1356], "19": [1308, 1309, 1344, 1356, 1358, 1359], "145": [1308, 1309, 1340, 1359], "plot_dealia": [1308, 1309, 1359], "mem": [1309, 1314, 1319, 1338, 1345, 1346, 1359], "mb": [1309, 1314, 1319, 1338, 1345, 1346, 1359], "000": [1309, 1346, 1359], "varieti": [1310, 1311, 1361], "aw": [1310, 1311, 1313, 1314, 1359], "gatemapp": [1310, 1315, 1319, 1359], "panel": [1310, 1320, 1338, 1359], "examples_python": 1310, "examples_jupyt": 1310, "next": 1312, "quick": 1312, "grover": [1312, 1316, 1321, 1322, 1327, 1335, 1340, 1341], "mgrover": [1312, 1316, 1321, 1322, 1327, 1335, 1340, 1341], "ccr": [1312, 1313, 1316, 1322, 1323, 1329, 1336, 1340, 1342, 1350, 1351, 1354, 1356, 1357], "let": [1312, 1313, 1316, 1321, 1323, 1340, 1342, 1349, 1351, 1353, 1354, 1356, 1357, 1358, 1361, 1363], "administr": 1312, "our": [1312, 1313, 1316, 1321, 1322, 1340, 1342, 1357], "filepath": [1312, 1313], "level2": [1312, 1313, 1324, 1342], "bucket": 1312, "organ": 1312, "year": [1312, 1313, 1361], "month": [1312, 1313], "radarsit": [1312, 1313], "_v06": 1312, "houston": 1312, "texa": 1312, "khgx": 1312, "march": 1312, "1201": 1312, "utc": [1312, 1313, 1335], "aws_nexrad_level2_fil": [1312, 1313], "03": [1312, 1338, 1345, 1359], "khgx20220322_120125_v06": 1312, "read_nexrad_arch": [1312, 1313, 1324, 1325, 1326, 1342], "summari": 1312, "spectrum_width": [1312, 1354, 1355, 1358], "cross_correlation_ratio": [1312, 1324, 1325, 1342, 1354, 1358], "differential_phas": [1312, 1325, 1354, 1358], "radarmapdisplai": [1312, 1313, 1316, 1323, 1329, 1340, 1349, 1350, 1351, 1353, 1354, 1357], "subplot": [1312, 1316, 1321, 1322, 1323, 1335, 1340, 1341, 1342, 1343, 1344, 1351, 1356, 1357], "121": [1312, 1316, 1322, 1341], "plot_ppi_map": [1312, 1313, 1316, 1323, 1329, 1340, 1350, 1351, 1354, 1357], "relect": 1312, "z_": [1312, 1316, 1323], "v_": 1312, "70": [1312, 1316, 1322], "n0u": 1312, "noq": 1312, "level3": 1312, "aws_nexrad_level3_velocity_fil": 1312, "hgx_n0u_2022_03_22_12_01_25": 1312, "aws_nexrad_level3_reflectivity_fil": 1312, "hgx_n0q_2022_03_22_12_01_25": 1312, "read_nexrad_level3": 1312, "radar_level3_veloc": 1312, "radar_level3_reflect": 1312, "confirm": [1312, 1349], "setup": [1312, 1316, 1321, 1322, 1327, 1340, 1347, 1360], "reflectivity_displai": 1312, "velocity_displai": 1312, "440": [1312, 1314, 1359], "plot_nexrad_data_aw": [1312, 1314, 1359], "zachari": 1313, "sherman": 1313, "zsherman": [1313, 1363], "tendenc": 1313, "usual": [1313, 1361], "gz": 1313, "handford": 1313, "ca": 1313, "khnx": 1313, "juli": [1313, 1356], "0203": 1313, "v06": 1313, "khnx20060724_020338": 1313, "pyrad": [1313, 1347, 1355, 1356, 1357, 1361], "nexrad_arch": 1313, "231": 1313, "14": [1313, 1314, 1321, 1322, 1323, 1338, 1356, 1358, 1359], "ref": [1313, 1336], "now": [1313, 1316, 1321, 1323, 1340, 1342, 1349, 1351, 1356, 1357, 1360], "clearli": [1313, 1356, 1357], "lucki": 1313, "31417": 1313, "119": [1313, 1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "63111": 1313, "plote": [1313, 1329], "central_latitud": [1313, 1329, 1342, 1350], "central_longitud": [1313, 1329, 1342, 1350], "plot_older_nexrad_data_aw": [1313, 1314, 1359], "37": [1314, 1316, 1340, 1354, 1355, 1356], "439": 1314, "bobbi": 1316, "jackson": 1316, "rjackson": 1316, "filterwarn": 1316, "xsapr": [1316, 1318, 1322], "xsapr_sw_fil": [1316, 1318, 1322], "swx_20120520_0641": [1316, 1318, 1321, 1322, 1323, 1327, 1337, 1340, 1341, 1342], "xsapr_se_fil": [1316, 1318, 1322], "sex_20120520_0641": [1316, 1318, 1322], "radar_sw": [1316, 1318, 1322], "radar_s": [1316, 1318, 1322], "southwestern": 1316, "southeastern": 1316, "gmapper": 1316, "radar_sw_mapped_to_radar_s": 1316, "notic": [1316, 1323], "disp1": 1316, "98": [1316, 1340, 1344, 1354, 1356], "arang": [1316, 1329, 1332, 1333, 1340, 1343, 1344, 1355, 1356, 1357, 1361], "96": [1316, 1354], "disp2": 1316, "remap": [1316, 1355], "difficult": 1316, "eyebal": 1316, "fortun": 1316, "mind": [1316, 1361], "cours": [1316, 1361], "reflectivity_se_radar": 1316, "reflectivity_sw_radar": 1316, "reflectivity_differ": 1316, "add_field_lik": 1316, "reflectivity_bia": 1316, "111": [1316, 1317, 1318, 1323, 1326, 1327, 1328, 1332, 1333, 1334, 1340], "pyart_bal": [1316, 1335, 1351], "southwest": 1316, "xspar": 1316, "southeast": 1316, "neccessarili": 1316, "incl_gat": 1316, "argwher": 1316, "refl_s": 1316, "refl_sw": 1316, "values_without_mask": 1316, "logical_and": 1316, "flatten": 1316, "hist": [1316, 1351], "histogram2d": 1316, "masked_wher": [1316, 1354], "meshgrid": 1316, "pyart_homeyerrainbow": [1316, 1321, 1322, 1323, 1328, 1331, 1335, 1336, 1341], "log_": 1316, "xlabel": [1316, 1330, 1331, 1351], "ylabel": [1316, 1330, 1331, 1351], "090": [1316, 1319, 1359], "plot_compare_two_radars_gatemapp": [1316, 1319, 1359], "110635": [1317, 1328, 1353], "241": 1317, "123000": 1317, "796": [1317, 1319, 1359], "plot_map_one_radar_to_grid": [1317, 1319, 1359], "xsarp": [1318, 1330, 1331], "gatefilter_s": [1318, 1322], "exclude_abov": [1318, 1322, 1351], "gatefilter_sw": [1318, 1322], "201": [1318, 1342, 1353], "57861": [1318, 1322], "363611": [1318, 1322], "48": 1318, "729": [1318, 1319, 1359], "plot_map_two_radars_to_grid": [1318, 1319, 1359], "615": 1319, "visual": [1321, 1324, 1332, 1340, 1357], "linspac": [1321, 1324, 1342, 1349, 1361], "256": [1321, 1343, 1355, 1357], "vstack": 1321, "def": [1321, 1361], "plot_color_gradi": 1321, "cmap_categori": 1321, "cmap_list": 1321, "len": [1321, 1335, 1343, 1349, 1355, 1357], "figh": 1321, "subplots_adjust": [1321, 1330, 1331], "set_titl": [1321, 1342], "cmap_nam": 1321, "pyart_": 1321, "va": 1321, "transax": 1321, "spine": 1321, "set_axis_off": 1321, "colorblind": 1321, "friendli": 1321, "langrainbow12": 1321, "homeyerrainbow": 1321, "balanc": 1321, "chasespectr": 1321, "spectralextend": 1321, "perceptu": [1321, 1324], "light": [1321, 1343, 1357], "bu10": 1321, "bu7": 1321, "gray5": 1321, "gray9": 1321, "diverg": 1321, "meaning": 1321, "bluebrown11": 1321, "brbu10": 1321, "brbu12": 1321, "budor12": 1321, "budor18": 1321, "budrd12": 1321, "budrd18": 1321, "bugr14": 1321, "bugy8": 1321, "buor10": 1321, "buor12": 1321, "buor8": 1321, "buorr14": 1321, "grmg16": 1321, "rdylbu11b": 1321, "There": [1321, 1357, 1360, 1363], "bluebrown10": 1321, "nwsref": 1321, "carbone11": 1321, "carbone17": 1321, "carbone42": 1321, "cat12": 1321, "ewilson17": 1321, "nwsvel": 1321, "nws_spw": 1321, "pd17": 1321, "rrate11": 1321, "refdiff": 1321, "scook18": 1321, "stepseq25": 1321, "symgray12": 1321, "theodore16": 1321, "wild25": 1321, "spectral_r": 1321, "rememb": 1321, "front": [1321, 1356], "shown": 1321, "032": [1321, 1338, 1359], "plot_choose_a_colormap": [1321, 1338, 1359], "181": 1322, "plot_grid": [1322, 1336, 1342, 1353, 1356], "scatter": [1322, 1340], "tab": 1322, "blue": [1322, 1332, 1333, 1357], "black": [1322, 1340], "legend": 1322, "plot_cross_sect": [1322, 1338, 1359], "725": [1322, 1338, 1359], "joe": 1323, "brien": 1323, "obrienj": 1323, "perfect": 1323, "overlap": [1323, 1332], "coord": 1323, "gridlin": 1323, "gl": 1323, "draw_label": 1323, "grai": [1323, 1324, 1355, 1357], "gca": 1323, "set_major_loc": 1323, "nullloc": 1323, "top_label": 1323, "right_label": 1323, "xlabel_styl": 1323, "ylabel_styl": 1323, "delet": [1323, 1361], "del": 1323, "manipul": [1323, 1348], "axsb": 1323, "ppi_map": 1323, "cbar": 1323, "set_label": 1323, "set_tick": 1323, "446": [1323, 1338, 1359], "plot_modify_colorbar": [1323, 1338, 1359], "reduc": [1324, 1360], "promin": 1324, "deemphas": 1324, "depict": 1324, "ultim": [1324, 1357], "misinterpret": 1324, "lmtomkin": [1324, 1342], "ncsu": [1324, 1342], "citat": 1324, "mcolor": [1324, 1342], "nexrad_fil": [1324, 1342], "kbgm": 1324, "kbgm20200207_132642_v06": 1324, "image_mute_radar": [1324, 1342], "magma_cmap": 1324, "get_cmap": [1324, 1342], "magma_r": [1324, 1342], "grays_cmap": 1324, "gray_r": 1324, "nonmuted_cmap": 1324, "linearsegmentedcolormap": [1324, 1342], "from_list": [1324, 1342], "muted_cmap": 1324, "nonmuted_reflect": [1324, 1342], "muted_reflect": 1324, "300": [1324, 1325, 1349], "set_aspect": [1324, 1342, 1343, 1356, 1357], "226": [1324, 1338, 1359], "plot_nexrad_image_muted_reflect": [1324, 1338, 1359], "katx20130717_195021_v06": [1325, 1358], "plot_nexrad_multiple_mo": [1325, 1338, 1359], "level2_katx_20130717_1950": 1326, "ar2v": 1326, "super": [1326, 1350, 1353, 1356], "plot_range_r": [1326, 1327, 1329], "538": [1326, 1338, 1359], "plot_nexrad_reflect": [1326, 1338, 1359], "main": [1327, 1361], "plot_cross_hair": 1327, "984": [1327, 1338, 1359], "plot_ppi_cfradi": [1327, 1338, 1359], "150": [1328, 1336, 1338, 1351, 1359], "377": [1328, 1338, 1359], "plot_ppi_mdv": [1328, 1338, 1359], "jason": [1329, 1336], "hemeding": [1329, 1336], "nsaxsaprppic1": 1329, "a1": 1329, "20140201": 1329, "184802": 1329, "157": 1329, "156": 1329, "71": 1329, "158": 1329, "154": 1329, "69": [1329, 1356], "72": 1329, "40km": 1329, "plot_line_xi": 1329, "plot_point": 1329, "384": [1329, 1338, 1359], "plot_ppi_with_r": [1329, 1338, 1359], "sgpxsaprrhicmaci5": [1330, 1331, 1335], "20110524": [1330, 1331, 1335], "015604_nc4": [1330, 1331, 1335], "instrument_nam": [1330, 1331, 1358], "hspace": [1330, 1331], "agl": 1330, "fac": 1330, "nplot": [1330, 1331, 1335], "snum": 1330, "hsrhi": [1330, 1331], "3f": [1330, 1331], "time_start": 1330, "num2dat": 1330, "only_use_cftime_datetim": 1330, "only_use_python_datetim": 1330, "figure_titl": 1330, "isoformat": 1330, "506": [1330, 1338, 1359], "plot_rhi_cfradi": [1330, 1338, 1359], "166": [1331, 1338, 1359], "plot_rhi_cfradial_singlescan": [1331, 1338, 1359], "differnenti": 1332, "cori": [1332, 1333], "weber": [1332, 1333], "cweber": [1332, 1333], "220629": 1332, "white": 1332, "matplolib": 1332, "visabl": 1332, "border": [1332, 1357], "flow": [1332, 1355], "paramt": 1332, "compens": 1332, "nearli": 1332, "00015": 1332, "veri": [1332, 1342, 1356, 1357], "antialias": [1332, 1333], "moir": 1332, "get_start": [1332, 1333], "get_end": [1332, 1333], "blur": 1332, "nice": [1332, 1360], "arbirarli": 1332, "impact": 1332, "gaussian_filt": [1332, 1333], "levels_rain": 1332, "levels_ic": 1332, "contours_ic": 1332, "contours_rain": 1332, "red": [1332, 1333], "fmt": [1332, 1333], "0000": [1332, 1333], "clabel": [1332, 1333], "inlin": [1332, 1333, 1355], "plot_rhi_contours_differential_reflect": [1332, 1338, 1359], "spyi": 1333, "034142": 1333, "ramp": 1333, "blob": 1333, "pyart_budrd18": 1333, "comment": [1333, 1358], "coutour": 1333, "solid": 1333, "dot": 1333, "major": [1333, 1356], "axhlin": 1333, "dash": 1333, "axvlin": 1333, "00b4ff": 1333, "ff6800": 1333, "set_ylabel": [1333, 1344, 1356], "cp": 1333, "627": [1333, 1338, 1359], "plot_rhi_data_overlai": [1333, 1338, 1359], "110041": 1334, "299": [1334, 1338, 1359], "plot_rhi_mdv": [1334, 1338, 1359], "fields_to_plot": 1335, "plot_num": 1335, "grab": 1335, "u00b0": 1335, "205": [1335, 1338, 1359], "plot_rhi_two_panel": [1335, 1338, 1359], "20110520100000_nexrad_grid": 1336, "read_grid": 1336, "map_panel_ax": 1336, "x_cut_panel_ax": 1336, "y_cut_panel_ax": 1336, "add_ax": [1336, 1356], "plot_crosshair": 1336, "plot_longitude_slic": 1336, "set_ylim": [1336, 1343, 1356, 1357], "set_xlim": [1336, 1343, 1356, 1357], "plot_latitude_slic": [1336, 1353, 1356], "plot_three_panel_gridmapdisplai": [1336, 1338, 1359], "225": 1337, "270": [1337, 1356, 1361], "xsect": 1337, "cross_section_ppi": [1337, 1356], "211": 1337, "212": 1337, "tight_layout": 1337, "069": [1337, 1338, 1359], "263": 1338, "04": [1338, 1340, 1359], "maxwel": [1340, 1341], "site_lon": 1340, "73": 1340, "site_lat": 1340, "latitdu": 1340, "pathcollect": 1340, "0x2b624b4ec5f0": 1340, "columnsect": 1340, "get_field_loc": 1340, "2kb": 1340, "176b": 1340, "351": 1340, "818e": 1340, "88": 1340, "recalculated_diff_phas": [1340, 1349], "555": 1340, "2778": 1340, "unf_dp_phase_shift": [1340, 1349], "88b": 1340, "688": 1340, "144": 1340, "diff_reflect": [1340, 1349], "95": [1340, 1358], "datetime64": 1340, "8b": 1340, "20t06": 1340, "distance_from_radar": 1340, "233": 1340, "545": 1340, "latitude_of_loc": 1340, "longitude_of_loc": 1340, "line2d": 1340, "0x2b624b47f920": 1340, "215": [1340, 1345, 1359], "plot_column_subset": [1340, 1345, 1359], "compz": 1341, "composite_reflect": 1341, "composite_displai": 1341, "891": [1341, 1345, 1359], "plot_composite_reflect": [1341, 1345, 1359], "classifc": 1342, "summer": 1342, "ian": 1342, "footprint": 1342, "yield": 1342, "smoother": 1342, "rescal": 1342, "simpli": [1342, 1351, 1353, 1360, 1361, 1363], "plot_convstrat_schem": 1342, "pick": 1342, "radii": 1342, "dilat": 1342, "event": [1342, 1356, 1357], "extract_sweep": [1342, 1344], "convsf_mask": 1342, "masked_equ": 1342, "convsf": 1342, "magma_r_cmap": 1342, "ref_cmap": 1342, "albersequalarea": 1342, "convsf_und": 1342, "convsf_ov": 1342, "uncertainti": 1342, "underest": 1342, "overest": 1342, "09": 1342, "ktbw": 1342, "ktbw20220928_190142_v06": 1342, "rasumussen": 1342, "reflecit": 1342, "kokx": 1342, "kokx20210207_161413_v06": 1342, "nonmuted_ref": 1342, "masked_invalid": 1342, "nonmuted_ref_linear": 1342, "mm6": 1342, "m3": 1342, "snow_rat": 1342, "57": 1342, "67": 1342, "snow_rate_dict": 1342, "standard_nam": [1342, 1350, 1358], "hr": 1342, "40500": 1342, "purpos": 1342, "034": 1342, "ccotd": 1342, "rasmussen": 1342, "dixon": 1342, "vasiloff": 1342, "hage": 1342, "knight": 1342, "vivekanandan": 1342, "xu": 1342, "nowcast": 1342, "042": 1342, "3c0020": 1342, "snuart": 1342, "257": [1342, 1345, 1359], "plot_convective_stratiform": [1342, 1345, 1359], "daniel": [1343, 1344], "mpl": [1343, 1350, 1353, 1355, 1356, 1357], "open_radar_data": [1343, 1344], "fetch": [1343, 1344, 1361], "mll2217907250u": [1343, 1355], "003": [1343, 1357], "preinterpol": 1343, "20220628072500_savevol_cosmo_lookup_temp": 1343, "nwp_temp": 1343, "uncorrected_differential_phas": [1343, 1355, 1357], "pia": [1343, 1357], "pida": [1343, 1357], "corrected_reflect": [1343, 1354, 1357], "corrected_differential_reflect": [1343, 1354, 1357], "kdp_maesaka": [1343, 1357], "specific_differential_phas": [1343, 1354, 1357], "hydroclass_semisupervis": [1343, 1357], "uncorrected_cross_correlation_ratio": [1343, 1355, 1357], "radar_echo_classif": [1343, 1357], "boundarynorm": [1343, 1355, 1357], "crystal": [1343, 1357], "rime": [1343, 1357], "particl": [1343, 1357], "hail": [1343, 1357], "graupel": [1343, 1357], "841": [1343, 1345, 1359], "plot_hydrometeor": [1343, 1345, 1359], "2919": 1344, "4178130067885": 1344, "10761547461152": 1344, "5509": 1344, "768666450866": 1344, "7536260737106204": 1344, "8052": 1344, "019321078435": 1344, "342043600045145": 1344, "10640": 1344, "04439644888": 1344, "977913962677121": 1344, "14495": 1344, "494732164778": 1344, "906225782819092": 1344, "18768": 1344, "789393587038": 1344, "262494841590524": 1344, "23035": 1344, "24401461892": 1344, "614115744829178": 1344, "27293": 1344, "5715815695": 1344, "95976355858147": 1344, "31542": 1344, "48958020564": 1344, "298115176148713": 1344, "35780": 1344, "72036395222": 1344, "627849710173905": 1344, "40006": 1344, "99151830096": 1344, "94764890149236": 1344, "44220": 1344, "03622135054": 1344, "25619751494378": 1344, "50489": 1344, "064549734816": 1344, "67152879666537": 1344, "58843": 1344, "38833568245": 1344, "228615786880255": 1344, "71218": 1344, "4286093181": 1344, "68": 1344, "92037126235664": 1344, "87323": 1344, "4833560437": 1344, "46686871536076": 1344, "106930": 1344, "95716868155": 1344, "65646427776664": 1344, "125649": 1344, "4902487807": 1344, "97650004737079": 1344, "143446": 1344, "80052956566": 1344, "143": [1344, 1356], "38717443030328": 1344, "160134": 1344, "12803849299": 1344, "68632691167295": 1344, "mla2119412050u": 1344, "zlevel": [1344, 1356], "u_allsweep": 1344, "v_allsweep": 1344, "idx": 1344, "radar_1sweep": 1344, "vad_brown": [1344, 1356], "u_avg": 1344, "nanmean": [1344, 1356], "v_avg": 1344, "rad2deg": [1344, 1356], "sharei": [1344, 1356, 1357], "set_xlabel": [1344, 1356], "406": [1344, 1345, 1359], "plot_vad": [1344, 1345, 1359], "609": 1345, "08": [1345, 1359], "cookbook": [1347, 1362], "depth": [1347, 1358, 1361], "conceptu": 1347, "projectpythia": 1347, "understand": 1347, "search": [1347, 1360], "api": 1347, "demonstr": 1347, "toolkit": [1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358], "basi": 1347, "exploit": 1347, "prefer": [1347, 1360], "submodul": [1347, 1353], "superproject": 1347, "propos": 1347, "bleed": 1347, "among": 1347, "europ": 1347, "fmi": 1347, "windcub": 1347, "leospher": 1347, "research": [1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "facil": [1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "colli": [1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "languag": [1347, 1361], "e25": [1347, 1361], "5334": [1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "jor": [1347, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "lainer": [1347, 1361], "schauweck": [1347, 1361], "framework": [1347, 1361], "abil": [1347, 1363], "ii": [1347, 1358], "sophist": 1347, "tutori": 1347, "erad": 1347, "easiest": [1347, 1361], "latest": [1347, 1361], "januari": 1347, "1st": 1347, "anaconda": [1347, 1360, 1361], "miniconda": [1347, 1361], "environ": [1347, 1357, 1360, 1362], "yml": [1347, 1363], "Or": 1347, "basic": [1347, 1348, 1350], "pyart_env": [1347, 1350, 1353, 1363], "forg": [1347, 1360, 1361, 1363], "pyart_mch": [1347, 1360, 1361, 1363], "termin": [1347, 1361, 1363], "prompt": [1347, 1361], "wish": 1347, "unreleas": 1347, "clone": [1347, 1360], "git": [1347, 1360, 1361, 1363], "repositori": [1347, 1360, 1361, 1363], "Then": [1347, 1360, 1361], "scientif": [1347, 1361], "linux": [1347, 1361, 1363], "mac": 1347, "charg": 1347, "resourc": [1347, 1360], "lassen": 1347, "radtec": 1347, "rsl_path": [1347, 1360], "usr": 1347, "h5py": 1347, "solver": 1347, "fastest": 1347, "cbc": 1347, "glpk": 1347, "coincbc": [1347, 1360, 1363], "coin_install_dir": [1347, 1360, 1363], "wradlib": 1347, "pytest": [1347, 1360, 1361], "appreci": 1347, "sometim": 1349, "hypothet": 1349, "doesn": 1349, "partli": [1349, 1350, 1351, 1353, 1354, 1355, 1358], "depart": [1349, 1350, 1351, 1353, 1354, 1355, 1358], "energi": [1349, 1350, 1351, 1353, 1354, 1355, 1358], "radiat": [1349, 1350, 1351, 1353, 1354, 1355, 1358, 1361], "offic": [1349, 1350, 1351, 1353, 1354, 1355, 1358], "scienc": [1349, 1350, 1351, 1353, 1354, 1355, 1358], "cite": [1349, 1350, 1351, 1353, 1354, 1355, 1358], "jj": [1349, 1350, 1351, 1353, 1354, 1355, 1358], "sm": [1349, 1350, 1351, 1353, 1354, 1355, 1358], "test_radar": [1349, 1361], "idea": [1349, 1351, 1356, 1357], "dict_kei": [1349, 1354], "rain_rate_a": [1349, 1354], "time_coverage_start": [1349, 1358], "time_coverage_end": 1349, "volume_numb": 1349, "platform_typ": 1349, "instrument_typ": 1349, "primary_axi": 1349, "667": 1349, "make_empty_ppi_radar": 1349, "59416667": 1349, "As": [1349, 1351, 1353, 1354, 1361], "isn": 1349, "120": [1349, 1357], "240": 1349, "420": 1349, "480": 1349, "540": 1349, "660": 1349, "720": 1349, "780": 1349, "840": 1349, "900": 1349, "960": 1349, "1020": 1349, "1080": 1349, "1140": 1349, "1200": 1349, "1260": 1349, "1320": 1349, "1380": [1349, 1357], "1440": 1349, "1500": 1349, "1560": 1349, "1620": 1349, "1680": 1349, "1740": 1349, "1860": 1349, "1920": 1349, "1980": 1349, "2040": 1349, "2100": 1349, "2160": 1349, "2220": 1349, "2280": 1349, "2340": 1349, "2400": 1349, "2460": 1349, "2520": 1349, "2580": 1349, "2640": [1349, 1357], "2700": 1349, "2760": 1349, "2820": 1349, "2880": 1349, "2940": 1349, "3060": 1349, "3120": 1349, "3180": 1349, "3240": 1349, "3300": 1349, "3360": 1349, "3420": 1349, "3480": 1349, "3540": 1349, "3660": 1349, "3720": 1349, "3780": 1349, "3840": 1349, "3900": 1349, "3960": 1349, "4020": 1349, "4080": 1349, "4140": 1349, "4200": [1349, 1357], "4260": 1349, "4320": 1349, "4380": 1349, "4440": 1349, "4560": 1349, "4620": 1349, "4680": 1349, "4740": 1349, "4800": 1349, "4860": 1349, "4920": 1349, "4980": 1349, "5040": 1349, "5100": 1349, "5160": 1349, "5220": 1349, "5280": 1349, "5340": 1349, "5400": 1349, "5460": 1349, "5520": 1349, "5580": 1349, "5640": 1349, "5700": 1349, "5760": 1349, "5820": 1349, "5880": 1349, "5940": 1349, "6060": 1349, "6120": 1349, "6180": 1349, "6240": 1349, "6300": 1349, "6360": 1349, "6420": 1349, "6480": 1349, "6540": 1349, "6600": 1349, "6660": 1349, "6720": 1349, "6780": 1349, "6840": 1349, "6900": 1349, "6960": 1349, "7020": 1349, "7080": 1349, "7140": 1349, "7200": [1349, 1358], "7260": 1349, "7320": 1349, "7380": 1349, "7440": 1349, "7500": 1349, "7560": 1349, "7620": 1349, "7680": 1349, "7740": 1349, "7800": 1349, "7860": 1349, "7920": 1349, "7980": 1349, "8040": 1349, "8100": 1349, "8160": 1349, "8220": 1349, "8280": 1349, "8340": 1349, "8400": 1349, "8460": 1349, "8520": 1349, "8580": 1349, "8640": 1349, "8700": 1349, "8760": 1349, "8820": 1349, "8880": 1349, "8940": 1349, "9000": [1349, 1353], "9060": 1349, "9120": 1349, "9180": 1349, "9240": 1349, "9300": 1349, "9360": 1349, "9420": 1349, "9480": 1349, "9540": 1349, "9600": 1349, "9660": 1349, "9720": 1349, "9780": 1349, "9840": 1349, "9900": 1349, "9960": 1349, "10020": 1349, "10080": 1349, "10140": 1349, "10200": 1349, "10260": 1349, "10320": 1349, "10380": 1349, "10440": 1349, "10500": 1349, "10560": 1349, "10620": 1349, "10680": 1349, "10740": 1349, "10800": 1349, "10860": 1349, "10920": 1349, "10980": 1349, "11040": 1349, "11100": 1349, "11160": 1349, "11220": 1349, "11280": 1349, "11340": 1349, "11400": 1349, "11460": 1349, "11520": 1349, "11580": 1349, "11640": 1349, "11700": 1349, "11760": 1349, "11820": 1349, "11880": 1349, "11940": 1349, "12060": 1349, "12120": 1349, "12180": 1349, "12240": 1349, "12300": 1349, "12360": 1349, "12420": 1349, "12480": 1349, "12540": 1349, "12600": 1349, "12660": 1349, "12720": 1349, "12780": 1349, "12840": 1349, "12900": 1349, "12960": 1349, "13020": 1349, "13080": 1349, "13140": 1349, "13200": 1349, "13260": 1349, "13320": 1349, "13380": 1349, "13440": 1349, "13500": 1349, "13560": 1349, "13620": 1349, "13680": 1349, "13740": 1349, "13800": 1349, "13860": 1349, "13920": 1349, "13980": 1349, "14040": 1349, "14100": 1349, "14160": 1349, "14220": 1349, "14280": 1349, "14340": 1349, "14400": 1349, "14460": 1349, "14520": 1349, "14580": 1349, "14640": 1349, "14700": 1349, "14760": 1349, "14820": 1349, "14880": 1349, "14940": 1349, "15060": 1349, "15120": 1349, "15180": 1349, "15240": 1349, "15300": 1349, "15360": 1349, "15420": 1349, "15480": 1349, "15540": 1349, "15600": 1349, "15660": 1349, "15720": 1349, "15780": 1349, "15840": 1349, "15900": 1349, "15960": 1349, "16020": 1349, "16080": 1349, "16140": 1349, "16200": 1349, "16260": 1349, "16320": 1349, "16380": 1349, "16440": 1349, "16500": 1349, "16560": 1349, "16620": 1349, "16680": 1349, "16740": 1349, "16800": 1349, "16860": 1349, "16920": 1349, "16980": 1349, "17040": 1349, "17100": 1349, "17160": 1349, "17220": 1349, "17280": 1349, "17340": 1349, "17400": 1349, "17460": 1349, "17520": 1349, "17580": 1349, "17640": 1349, "17700": 1349, "17760": 1349, "17820": 1349, "17880": 1349, "17940": 1349, "18000": [1349, 1353], "18060": 1349, "18120": 1349, "18180": 1349, "18240": 1349, "18300": 1349, "18360": 1349, "18420": 1349, "18480": 1349, "18540": 1349, "18600": 1349, "18660": 1349, "18720": 1349, "18780": 1349, "18840": 1349, "18900": 1349, "18960": 1349, "19020": 1349, "19080": 1349, "19140": 1349, "19200": 1349, "19260": 1349, "19320": 1349, "19380": 1349, "19440": 1349, "19500": 1349, "19560": 1349, "19620": 1349, "19680": 1349, "19740": 1349, "19800": 1349, "19860": 1349, "19920": 1349, "19980": 1349, "20040": 1349, "20100": 1349, "20160": 1349, "20220": 1349, "20280": 1349, "20340": 1349, "20400": 1349, "20460": 1349, "20520": 1349, "20580": 1349, "20640": 1349, "20700": 1349, "20760": 1349, "20820": 1349, "20880": 1349, "20940": 1349, "21000": [1349, 1353], "21060": 1349, "21120": 1349, "21180": 1349, "21240": 1349, "21300": 1349, "21360": 1349, "21420": 1349, "21480": 1349, "21540": 1349, "21600": 1349, "21660": 1349, "21720": 1349, "21780": 1349, "21840": 1349, "21900": 1349, "21960": 1349, "22020": 1349, "22080": 1349, "22140": 1349, "22200": 1349, "22260": 1349, "22320": 1349, "22380": 1349, "22440": 1349, "22500": 1349, "22560": 1349, "22620": 1349, "22680": 1349, "22740": 1349, "22800": [1349, 1356], "22860": 1349, "22920": 1349, "22980": 1349, "23040": 1349, "23100": 1349, "23160": 1349, "23220": 1349, "23280": 1349, "23340": 1349, "23400": 1349, "23460": 1349, "23520": 1349, "23580": 1349, "23640": 1349, "23700": 1349, "23760": 1349, "23820": 1349, "23880": 1349, "23940": 1349, "24000": [1349, 1353], "24060": 1349, "24120": 1349, "24180": 1349, "24240": 1349, "24300": 1349, "24360": 1349, "24420": 1349, "24480": 1349, "24540": 1349, "24600": 1349, "24660": 1349, "24720": 1349, "24780": 1349, "24840": 1349, "24900": 1349, "24960": 1349, "25020": 1349, "25080": 1349, "25140": 1349, "25200": 1349, "25260": 1349, "25320": 1349, "25380": 1349, "25440": 1349, "25500": 1349, "25560": 1349, "25620": 1349, "25680": 1349, "25740": 1349, "25800": 1349, "25860": 1349, "25920": 1349, "25980": 1349, "26040": 1349, "26100": 1349, "26160": 1349, "26220": 1349, "26280": 1349, "26340": 1349, "26400": 1349, "26460": 1349, "26520": 1349, "26580": 1349, "26640": 1349, "26700": 1349, "26760": 1349, "26820": 1349, "26880": 1349, "26940": 1349, "27000": [1349, 1353], "27060": [1349, 1356], "27120": 1349, "27180": 1349, "27240": 1349, "27300": 1349, "27360": 1349, "27420": 1349, "27480": 1349, "27540": 1349, "27600": 1349, "27660": 1349, "27720": 1349, "27780": 1349, "27840": 1349, "27900": 1349, "27960": 1349, "28020": 1349, "28080": 1349, "28140": 1349, "28200": 1349, "28260": 1349, "28320": 1349, "28380": 1349, "28440": 1349, "28500": 1349, "28560": 1349, "28620": 1349, "28680": 1349, "28740": 1349, "28800": 1349, "28860": 1349, "28920": 1349, "28980": 1349, "29040": 1349, "29100": 1349, "29160": 1349, "29220": 1349, "29280": 1349, "29340": 1349, "29400": 1349, "29460": 1349, "29520": 1349, "29580": 1349, "29640": 1349, "29700": 1349, "29760": 1349, "29820": 1349, "29880": 1349, "29940": 1349, "30000": [1349, 1353], "30060": 1349, "30120": 1349, "30180": 1349, "30240": 1349, "30300": 1349, "30360": 1349, "30420": 1349, "30480": 1349, "30540": 1349, "30600": 1349, "30660": 1349, "30720": 1349, "30780": 1349, "30840": 1349, "30900": 1349, "30960": 1349, "31020": 1349, "31080": 1349, "31140": 1349, "31200": 1349, "31260": 1349, "31320": 1349, "31380": 1349, "31440": 1349, "31500": 1349, "31560": 1349, "31620": 1349, "31680": 1349, "31740": 1349, "31800": 1349, "31860": 1349, "31920": 1349, "31980": 1349, "32040": 1349, "32100": 1349, "32160": 1349, "32220": 1349, "32280": 1349, "32340": 1349, "32400": 1349, "32460": 1349, "32520": 1349, "32580": 1349, "32640": 1349, "32700": 1349, "32760": 1349, "32820": 1349, "32880": 1349, "32940": 1349, "33000": [1349, 1353], "33060": 1349, "33120": 1349, "33180": 1349, "33240": 1349, "33300": 1349, "33360": 1349, "33420": 1349, "33480": 1349, "33540": 1349, "33600": 1349, "33660": 1349, "33720": 1349, "33780": 1349, "33840": 1349, "33900": 1349, "33960": 1349, "34020": 1349, "34080": 1349, "34140": 1349, "34200": 1349, "34260": 1349, "34320": 1349, "34380": 1349, "34440": 1349, "34500": 1349, "34560": 1349, "34620": 1349, "34680": 1349, "34740": 1349, "34800": 1349, "34860": 1349, "34920": 1349, "34980": 1349, "35040": 1349, "35100": 1349, "35160": 1349, "35220": 1349, "35280": 1349, "35340": 1349, "35400": 1349, "35460": 1349, "35520": 1349, "35580": 1349, "35640": 1349, "35700": 1349, "35760": 1349, "35820": 1349, "35880": 1349, "35940": 1349, "36000": [1349, 1353], "36060": 1349, "36120": 1349, "36180": 1349, "36240": 1349, "36300": 1349, "36360": 1349, "36420": 1349, "36480": 1349, "36540": 1349, "36600": 1349, "36660": 1349, "36720": 1349, "36780": 1349, "36840": 1349, "36900": 1349, "36960": 1349, "37020": 1349, "37080": 1349, "37140": 1349, "37200": 1349, "37260": 1349, "37320": 1349, "37380": 1349, "37440": 1349, "37500": 1349, "37560": 1349, "37620": 1349, "37680": 1349, "37740": 1349, "37800": 1349, "37860": 1349, "37920": 1349, "37980": 1349, "38040": 1349, "38100": 1349, "38160": 1349, "38220": 1349, "38280": 1349, "38340": 1349, "38400": 1349, "38460": 1349, "38520": 1349, "38580": 1349, "38640": 1349, "38700": 1349, "38760": 1349, "38820": 1349, "38880": 1349, "38940": 1349, "39000": [1349, 1353], "39060": 1349, "39120": 1349, "39180": 1349, "39240": 1349, "39300": 1349, "39360": 1349, "39420": 1349, "39480": 1349, "39540": 1349, "39600": 1349, "39660": 1349, "39720": 1349, "39780": 1349, "39840": 1349, "39900": 1349, "39960": 1349, "squeez": 1349, "59416776": 1349, "59416886": 1349, "59489769": 1349, "59489879": 1349, "5948999": 1349, "59415662": 1349, "59414657": 1349, "5874659": 1349, "58745576": 1349, "58744563": 1349, "59414621": 1349, "59412575": 1349, "5805231": 1349, "58050246": 1349, "58048182": 1349, "59419881": 1349, "59423095": 1349, "61560159": 1349, "61563401": 1349, "61566644": 1349, "59418877": 1349, "59421087": 1349, "6089062": 1349, "6089285": 1349, "60895079": 1349, "59417836": 1349, "59419005": 1349, "60196382": 1349, "60197561": 1349, "60198741": 1349, "get_metadata": 1349, "ref_dict": 1349, "reflecitivity_horizont": 1349, "21875": 1349, "34375": 1349, "0078125": 1349, "2109375": 1349, "1171875": 1349, "59375": 1349, "421875": 1349, "5625": 1349, "7109375": 1349, "609375": 1349, "5078125": 1349, "3828125": 1349, "6875": 1349, "328125": 1349, "3203125": 1349, "859375": 1349, "6484375": 1349, "8515625": 1349, "9375": [1349, 1358], "0234375": 1349, "6328125": 1349, "2890625": 1349, "546875": 1349, "578125": 1349, "6796875": 1349, "ref_field": 1350, "ref_gt_0": 1350, "mask_dict": 1350, "reflectivity_mask": 1350, "coolwarm": 1350, "sherm": [1350, 1353], "782": [1350, 1353], "matplotlibdeprecationwarn": [1350, 1353, 1356], "set_xtick": [1350, 1353], "position": [1350, 1353], "later": [1350, 1353, 1356, 1357], "xtick": [1350, 1353], "829": [1350, 1353], "set_ytick": [1350, 1353], "ytick": [1350, 1353], "write_cfradi": 1350, "2pi": 1351, "wave": 1351, "3pi": 1351, "incorrect": 1351, "phenomena": [1351, 1358], "maximium": 1351, "unambi": 1351, "preprocess": 1351, "thankfulli": [1351, 1353], "calculate_velocity_textur": 1351, "surround": [1351, 1353, 1356, 1357], "presenc": [1351, 1356, 1357], "524973": 1351, "vel_textur": 1351, "velocity_textur": [1351, 1354], "vleociti": 1351, "At": [1351, 1356], "velocity_dealias": 1351, "much": [1351, 1353, 1354, 1356, 1357], "realist": 1351, "gates_to_grid": 1353, "deprecationwarn": [1353, 1355], "99000": 1353, "98000": 1353, "97000": 1353, "96000": 1353, "95000": 1353, "94000": 1353, "93000": 1353, "92000": 1353, "91000": 1353, "90000": 1353, "89000": 1353, "88000": 1353, "87000": 1353, "86000": 1353, "85000": 1353, "84000": 1353, "83000": 1353, "82000": 1353, "81000": 1353, "80000": 1353, "79000": 1353, "78000": 1353, "77000": 1353, "76000": 1353, "75000": 1353, "74000": 1353, "73000": 1353, "72000": 1353, "71000": 1353, "70000": 1353, "69000": 1353, "68000": 1353, "67000": 1353, "66000": 1353, "65000": 1353, "64000": 1353, "63000": 1353, "62000": 1353, "61000": 1353, "59000": 1353, "58000": 1353, "57000": 1353, "56000": 1353, "55000": 1353, "54000": 1353, "53000": 1353, "52000": 1353, "51000": 1353, "49000": 1353, "48000": 1353, "47000": 1353, "46000": 1353, "45000": 1353, "44000": 1353, "43000": 1353, "42000": 1353, "41000": 1353, "38000": 1353, "37000": 1353, "35000": 1353, "34000": 1353, "32000": 1353, "31000": 1353, "29000": 1353, "28000": 1353, "26000": 1353, "23000": 1353, "22000": 1353, "19000": 1353, "16000": 1353, "14000": 1353, "13000": 1353, "8000": [1353, 1356], "7000": 1353, "suit": [1353, 1357, 1361], "longitudn": 1353, "latitudn": 1353, "suffer": 1353, "artifici": 1353, "feather": 1353, "grid_bett": 1353, "1750": 1353, "sgpxsaprcmacsuri5": 1354, "20171004": 1354, "203018": 1354, "total_pow": 1354, "xsapr_clutt": 1354, "sounding_temperatur": 1354, "signal_to_noise_ratio": [1354, 1357], "gate_id": 1354, "simulated_veloc": 1354, "unfolded_differential_phas": 1354, "corrected_differential_phas": 1354, "filtered_corrected_differential_phas": 1354, "corrected_specific_diff_phas": 1354, "filtered_corrected_specific_diff_phas": 1354, "path_integrated_attenu": 1354, "specific_differential_attenu": 1354, "path_integrated_differential_attenu": 1354, "trip": 1354, "nonhydrometeor": 1354, "analyz": [1354, 1361], "exclude_equ": 1354, "cleaner": 1354, "tell": 1354, "refl_arrai": 1354, "reflectivity_w_mask": 1354, "iter_slic": [1354, 1358], "9344453454202706": 1354, "620691732853737": 1354, "3756584054113996": 1354, "597935968662154": 1354, "696735014111216": 1354, "061894569912447": 1354, "721673265240488": 1354, "086695918593689": 1354, "33930700509078": 1354, "599363169483158": 1354, "836875745223637": 1354, "051601529570966": 1354, "22435547210836": 1354, "378109469982695": 1354, "553820234067336": 1354, "648943841665002": 1354, "837593740986444": 1354, "049614721040282": 1354, "331202567459613": 1354, "585432697375357": 1354, "87002341270722": 1354, "993012637722325": 1354, "061966001642219": 1354, "122799449619672": 1354, "861035552720102": 1354, "74608994279257": 1354, "148801770281325": 1354, "70860719727862": 1354, "989513966551444": 1354, "188644935344827": 1354, "89301878240611": 1354, "172644371021923": 1354, "79879842243138": 1354, "912806090219976": 1354, "766281467013889": 1354, "920522471877334": 1354, "898600907318164": 1354, "971026055481874": 1354, "110503947133682": 1354, "094456418731509": 1354, "0822160050675675": 1354, "036430544969512": 1354, "259332430219459": 1354, "2438254054588604": 1354, "473482666015625": 1354, "574283685503023": 1354, "866719139946832": 1354, "771468742643597": 1354, "compani": 1355, "eld": 1355, "dn": 1355, "lema": [1355, 1357], "data_dir": 1355, "scratch": [1355, 1363], "pyrad_cours": 1355, "mch_jan_2024": 1355, "010": 1355, "read_metranet": 1355, "rainforest_test": [1355, 1356, 1357], "tqdm": 1355, "tqdmwarn": 1355, "iprogress": 1355, "ipywidget": 1355, "readthedoc": [1355, 1361], "stabl": 1355, "user_instal": 1355, "autonotebook": 1355, "notebook_tqdm": 1355, "fieldnam": 1355, "mch": 1355, "zv": 1355, "reflectivity_vv": 1355, "vel": 1355, "wid": 1355, "clt": 1355, "clutter_exit_cod": 1355, "stat_test_lag1": 1355, "stat_test_lag2": 1355, "wbn": 1355, "wide_band_nois": 1355, "mph": 1355, "mean_phas": 1355, "discrimin": 1355, "isnan": 1355, "read_file_c": 1355, "read_file_pi": 1355, "reli": [1355, 1357], "marco": 1355, "boscacci": 1355, "anywher": 1355, "prone": [1355, 1356], "zh_dn": 1355, "mha": 1355, "mhd": 1355, "mhl": 1355, "mhp": 1355, "mhw": 1355, "fashion": 1355, "file_hr": 1355, "mhl2217907250u": [1355, 1357], "ymx": 1355, "dvx": 1355, "yml2217907257l": 1355, "810": 1355, "dealv": 1355, "dvl2217907257l": 1355, "py_decod": 1355, "dbg": 1355, "verb": 1355, "verbl": 1355, "map_hydro": 1355, "io_aux": 1355, "hydro_remap": 1355, "pyart_langrainbow12": 1355, "set_yticklabel": 1355, "welcom": 1355, "pydda": 1355, "jax": 1355, "unabl": 1355, "engin": 1355, "tensorflow": 1355, "pyrad_proc": 1355, "flow_aux": 1355, "bokeh": 1355, "primit": 1355, "bool8": 1355, "bool_": 1355, "bokeh_bool_typ": 1355, "qpe": 1355, "rzc": 1355, "poh": 1355, "bzc": 1355, "mesh": 1355, "mzc": 1355, "read_cartesian_metranet": 1355, "rzc221790725vl": 1355, "63": [1355, 1358], "pyart_rrate11": 1355, "0x2b0d2db45660": 1355, "read_fil": 1355, "read_polar": 1355, "qpe_data_dn": 1355, "qpe_data": 1355, "summar": 1355, "ezc": 1355, "impli": 1355, "unrel": 1355, "unus": 1355, "exercic": [1356, 1357], "topic": [1356, 1357], "tackl": [1356, 1357], "pseudorhi": 1356, "glob": [1356, 1361], "load_config": [1356, 1357], "mch_config": [1356, 1357], "thu": 1356, "too": [1356, 1357], "inde": [1356, 1357], "especi": 1356, "simplest": 1356, "files_radar": 1356, "exercice2_swiss_doppl": 1356, "mll221790725": 1356, "enumer": 1356, "radar_merg": 1356, "sharex": [1356, 1357], "ravel": 1356, "discontinu": 1356, "difficulti": 1356, "isol": [1356, 1357], "seen": [1356, 1361], "ymin": 1356, "xmin": 1356, "ymax": 1356, "xmax": 1356, "cappi_res_h": 1356, "cappi_res_v": 1356, "cappi_zh": 1356, "throught": 1356, "thunderstorm": [1356, 1357], "1785": 1356, "shade": 1356, "quadrilater": 1356, "gouraud": 1356, "rcparam": 1356, "pcolor": 1356, "arg": 1356, "altitudin": 1356, "downdraft": 1356, "wider": 1356, "cold": 1356, "13th": 1356, "albi": 1356, "z\u00fcrich": 1356, "widespread": 1356, "unfortun": 1356, "question_pyart_meteoswiss": 1356, "mla211941205": 1356, "corrected_velocity_neg": 1356, "2682": 1356, "5272": 1356, "7815": 1356, "464": 1356, "runtimewarn": 1356, "mean_velocity_per_g": 1356, "reshap": 1356, "549": 1356, "y_new": 1356, "y_in_window": 1356, "10403": 1356, "14259": 1356, "18533": 1356, "31310": 1356, "35549": 1356, "39777": 1356, "43991": 1356, "50263": 1356, "58621": 1356, "71002": 1356, "87118": 1356, "106740": 1356, "125476": 1356, "143293": 1356, "160000": 1356, "radiosound": 1356, "payern": 1356, "130": 1356, "though": [1356, 1363], "discrep": 1356, "startup": 1357, "cosmo": 1357, "file_radar": 1357, "exercice1_swiss_thunderstorm": 1357, "20220628073500_savevol_cosmo_lookup_temp": 1357, "problemat": 1357, "gtfilter": 1357, "moment_and_texture_based_gate_filt": 1357, "clear": 1357, "mostli": 1357, "behind": 1357, "knowledg": 1357, "insight": 1357, "oblat": 1357, "drop": 1357, "784": 1357, "mont": 1357, "8231": 1357, "2514": 1357, "0644": 1357, "9861": 1357, "0239": 1357, "1971": 1357, "9661": 1357, "1464": 1357, "9447": 1357, "1142": 1357, "9787": 1357, "974": 1357, "2450": 1357, "5540": 1357, "1459": 1357, "9937": 1357, "945": 1357, "9432": 1357, "0110": 1357, "5141": 1357, "9928": 1357, "993": 1357, "5202": 1357, "3498": 1357, "9746": 1357, "843": 1357, "5287": 1357, "9751": 1357, "9804": 1357, "6547": 1357, "7054": 1357, "5101": 1357, "9765": 1357, "1114": 1357, "4998": 1357, "6431": 1357, "9845": 1357, "1010": 1357, "complic": 1357, "few": [1357, 1363], "dai": 1357, "refin": 1357, "est_rain_rate_hydro": 1357, "land": 1357, "lon_bnd": 1357, "lat_bnd": 1357, "states_provinc": 1357, "cultur": 1357, "admin_0_countri": 1357, "facecolor": 1357, "river": 1357, "add_featur": 1357, "287": 1357, "lambert": 1357, "feature_artist": 1357, "featureartist": 1357, "0x2b9150c92f80": 1357, "didn": 1357, "uncertain": 1357, "beam_azimuth_angl": 1358, "azimuth_angle_from_true_north": 1358, "radial_azimuth_coordin": 1358, "beam_elevation_angl": 1358, "elevation_angle_from_horizontal_plan": 1358, "radial_elevation_coordin": 1358, "1832": 1358, "log_differential_reflectivity_hv": 1358, "875": 1358, "9999": 1358, "differential_phase_hv": 1358, "equivalent_reflectivity_factor": 1358, "cross_correlation_ratio_hv": 1358, "correlation_ratio": 1358, "meters_per_second": 1358, "doppler_spectrum_width": 1358, "radial_velocity_of_scatterers_away_from_instru": 1358, "target_fixed_angl": 1358, "unambiguous_rang": 1358, "unambigu": 1358, "degrees_north": 1358, "degrees_east": 1358, "projection_range_coordin": 1358, "range_to_measurement_volum": 1358, "radial_range_coordin": 1358, "spacing_is_const": 1358, "meters_to_center_of_first_g": 1358, "2125": 1358, "meters_between_g": 1358, "int32": 1358, "s20": 1358, "unitless": 1358, "coplan": 1358, "vertical_point": 1358, "idl": 1358, "azimuth_surveil": 1358, "elevation_surveil": 1358, "sunscan": 1358, "manual_ppi": 1358, "manual_rhi": 1358, "17t19": 1358, "21z": 1358, "time_in_seconds_since_volume_start": 1358, "calendar": 1358, "gregorian": 1358, "histori": 1358, "katx": 1358, "original_contain": 1358, "vcp_pattern": 1358, "7470703": 1358, "7196045": 1358, "6893921": 1358, "511719": 1358, "get_slic": 1358, "sweep_1": 1358, "52734375": 1358, "itself": 1358, "indici": 1358, "slice_indic": 1358, "9066728410400056": 1358, "478547577741713": 1358, "587792083929423": 1358, "871031288639269": 1358, "971692217963673": 1358, "830616390843327": 1358, "108188248095756": 1358, "483419908190385": 1358, "88976917057903": 1358, "852766685681688": 1358, "410455582269897": 1358, "66444787446138": 1358, "997862391449566": 1358, "172098402018502": 1358, "489752513534416": 1358, "712565619531706": 1358, "commonli": 1358, "071": 1359, "8x": 1360, "But": 1360, "bash": 1360, "export": [1360, 1363], "pythonpath": 1360, "pth": 1360, "build_ext": 1360, "pip": [1360, 1361, 1363], "segfault": 1360, "newer": 1360, "Theres": 1360, "reinstal": 1360, "remedi": 1360, "fno": 1360, "protector": 1360, "d_fortify_sourc": 1360, "cflag": 1360, "makefil": 1360, "troubl": 1360, "my": 1360, "bit": 1360, "define_macro": 1360, "macro": 1360, "extra_compile_arg": 1360, "m32": 1360, "extra_link_arg": 1360, "m64": 1360, "readm": 1360, "proj_lib": 1360, "xx": 1360, "usernam": 1360, "xxx": 1360, "mpl_toolkit": 1360, "offici": 1361, "mail": 1361, "openradar": 1361, "ev": 1361, "pyart_short_cours": 1361, "youtub": 1361, "watch": 1361, "diip": 1361, "q3bkzw": 1361, "auto_exampl": 1361, "scm": 1361, "book": 1361, "pep8": 1361, "popular": 1361, "pycodestyl": 1361, "pylint": 1361, "pep": 1361, "0008": 1361, "highli": 1361, "tast": 1361, "brief": 1361, "parti": 1361, "explain": 1361, "velocity_azimuth_displai": 1361, "_inverse_dist_squar": 1361, "_average1d": 1361, "explan": 1361, "mention": [1361, 1363], "statement": 1361, "__init__": 1361, "futur": 1361, "ran": 1361, "rerun": 1361, "test_vad": 1361, "make_target_radar": 1361, "ones_lik": 1361, "z_start": 1361, "z_end": 1361, "z_count": 1361, "vad_height": 1361, "vad_spe": 1361, "98665725": 1361, "94020686": 1361, "88107152": 1361, "81939374": 1361, "75851962": 1361, "vad_direct": 1361, "359": 1361, "84659496": 1361, "30240553": 1361, "358": 1361, "58658589": 1361, "357": 1361, "81073051": 1361, "01353486": 1361, "01335138": 1361, "06014712": 1361, "12039762": 1361, "18410404": 1361, "24791911": 1361, "98663937": 1361, "9398407": 1361, "87958641": 1361, "81587601": 1361, "75205693": 1361, "assert_almost_equ": 1361, "pyarg": 1361, "test_cfradi": 1361, "cd": 1361, "contribut": [1361, 1362], "branch": [1361, 1363], "fork": 1361, "cartopy_map": 1361, "push": 1361, "branch_nam": 1361, "checkout": 1361, "task": 1361, "untrack": 1361, "switch": 1361, "acronym": 1361, "maint": 1361, "finish": [1361, 1363], "quotat": 1361, "enter": 1361, "acronymn": 1361, "gitwash": 1361, "development_workflow": 1361, "editor": [1361, 1363], "sty": 1361, "whitespac": 1361, "vim": 1361, "thing": 1361, "ff": 1361, "checker": 1361, "appveyor": 1361, "travisci": 1361, "sit": 1361, "blog_post": 1361, "instruct": 1362, "contributor": 1362, "conflict": 1363, "panda": 1363, "ask": 1363, "exit": 1363, "recent": 1363, "manag": 1363, "deactiv": 1363, "enviro": 1363, "ipython": 1363, "spyder": 1363, "yourusernam": 1363, "youranacondadir": 1363, "machin": 1363, "jjhelmu": 1363, "py3": 1363, "gitter": 1363, "im": 1363}, "objects": {"pyart": [[575, 0, 1, "", "_debug_info"], [576, 1, 0, "-", "aux_io"], [624, 1, 0, "-", "bridge"], [626, 1, 0, "-", "config"], [639, 1, 0, "-", "core"], [721, 1, 0, "-", "correct"], [792, 1, 0, "-", "exceptions"], [793, 1, 0, "-", "filters"], [830, 1, 0, "-", "graph"], [1006, 1, 0, "-", "io"], [1029, 1, 0, "-", "lazydict"], [1053, 1, 0, "-", "map"], [1066, 1, 0, "-", "retrieve"], [1162, 1, 0, "-", "testing"], [1248, 1, 0, "-", "util"]], "pyart.aux_io": [[577, 0, 1, "", "convert_data"], [578, 0, 1, "", "extract_sweeps_skyecho"], [579, 0, 1, "", "get_library"], [580, 0, 1, "", "get_sweep_time_coverage"], [581, 0, 1, "", "read_bin"], [582, 0, 1, "", "read_bin_mf"], [583, 0, 1, "", "read_cartesian_metranet"], [584, 0, 1, "", "read_cf1"], [585, 0, 1, "", "read_cf1_cartesian"], [586, 0, 1, "", "read_cf1_cartesian_mf"], [587, 0, 1, "", "read_d3r_gcpex_nc"], [588, 0, 1, "", "read_dat_mf"], [589, 0, 1, "", "read_edge_netcdf"], [590, 0, 1, "", "read_file_c"], [591, 0, 1, "", "read_file_py"], [592, 0, 1, "", "read_gamic"], [593, 0, 1, "", "read_gif"], [594, 0, 1, "", "read_grib"], [595, 0, 1, "", "read_hpl"], [596, 0, 1, "", "read_iq"], [597, 0, 1, "", "read_kazr"], [598, 0, 1, "", "read_knmi_grid_h5"], [599, 0, 1, "", "read_mch_vad"], [600, 0, 1, "", "read_metranet"], [601, 0, 1, "", "read_noxp_iphex_nc"], [602, 0, 1, "", "read_odim_grid_h5"], [603, 0, 1, "", "read_odim_h5"], [604, 0, 1, "", "read_odim_vp_h5"], [605, 0, 1, "", "read_pattern"], [606, 0, 1, "", "read_png"], [607, 0, 1, "", "read_product_c"], [608, 0, 1, "", "read_product_py"], [609, 0, 1, "", "read_psr_cpi_header"], [610, 0, 1, "", "read_psr_header"], [611, 0, 1, "", "read_psr_spectra"], [612, 0, 1, "", "read_radx"], [613, 0, 1, "", "read_rainbow_psr"], [614, 0, 1, "", "read_rainbow_psr_spectra"], [615, 0, 1, "", "read_rainbow_wrl"], [616, 0, 1, "", "read_sinarame_h5"], [617, 0, 1, "", "read_skyecho"], [618, 0, 1, "", "read_spectra"], [619, 0, 1, "", "read_swissbirdradar_spectra"], [620, 0, 1, "", "write_odim_grid_h5"], [621, 0, 1, "", "write_odim_h5"], [622, 0, 1, "", "write_sinarame_cfradial"], [623, 0, 1, "", "write_spectra"]], "pyart.bridge": [[625, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[627, 2, 1, "", "FileMetadata"], [631, 0, 1, "", "get_KE"], [632, 0, 1, "", "get_field_colormap"], [633, 0, 1, "", "get_field_limits"], [634, 0, 1, "", "get_field_mapping"], [635, 0, 1, "", "get_field_name"], [636, 0, 1, "", "get_fillvalue"], [637, 0, 1, "", "get_metadata"], [638, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[628, 3, 1, "", "__call__"], [629, 3, 1, "", "get_field_name"], [630, 3, 1, "", "get_metadata"]], "pyart.core": [[640, 2, 1, "", "Grid"], [650, 2, 1, "", "HorizontalWindProfile"], [654, 2, 1, "", "Radar"], [683, 2, 1, "", "RadarSpectra"], [712, 0, 1, "", "antenna_to_cartesian"], [713, 0, 1, "", "antenna_vectors_to_cartesian"], [714, 0, 1, "", "cartesian_to_antenna"], [715, 0, 1, "", "cartesian_to_geographic"], [716, 0, 1, "", "cartesian_to_geographic_aeqd"], [717, 0, 1, "", "cartesian_vectors_to_geographic"], [718, 0, 1, "", "geographic_to_cartesian"], [719, 0, 1, "", "geographic_to_cartesian_aeqd"], [720, 0, 1, "", "wgs84_to_swissCH1903"]], "pyart.core.Grid": [[641, 3, 1, "", "add_field"], [642, 3, 1, "", "get_point_longitude_latitude"], [643, 3, 1, "", "get_projparams"], [644, 3, 1, "", "init_point_altitude"], [645, 3, 1, "", "init_point_longitude_latitude"], [646, 3, 1, "", "init_point_x_y_z"], [647, 4, 1, "", "projection_proj"], [648, 3, 1, "", "to_xarray"], [649, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[651, 3, 1, "", "from_u_and_v"], [652, 4, 1, "", "u_wind"], [653, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[655, 3, 1, "", "add_field"], [656, 3, 1, "", "add_field_like"], [657, 3, 1, "", "add_filter"], [658, 3, 1, "", "check_field_exists"], [659, 3, 1, "", "extract_sweeps"], [660, 3, 1, "", "get_azimuth"], [661, 3, 1, "", "get_elevation"], [662, 3, 1, "", "get_end"], [663, 3, 1, "", "get_field"], [664, 3, 1, "", "get_gate_area"], [665, 3, 1, "", "get_gate_lat_lon_alt"], [666, 3, 1, "", "get_gate_x_y_z"], [667, 3, 1, "", "get_nyquist_vel"], [668, 3, 1, "", "get_slice"], [669, 3, 1, "", "get_start"], [670, 3, 1, "", "get_start_end"], [671, 3, 1, "", "info"], [672, 3, 1, "", "init_gate_altitude"], [673, 3, 1, "", "init_gate_longitude_latitude"], [674, 3, 1, "", "init_gate_x_y_z"], [675, 3, 1, "", "init_rays_per_sweep"], [676, 3, 1, "", "iter_azimuth"], [677, 3, 1, "", "iter_elevation"], [678, 3, 1, "", "iter_end"], [679, 3, 1, "", "iter_field"], [680, 3, 1, "", "iter_slice"], [681, 3, 1, "", "iter_start"], [682, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[684, 3, 1, "", "add_field"], [685, 3, 1, "", "add_field_like"], [686, 3, 1, "", "add_filter"], [687, 3, 1, "", "check_field_exists"], [688, 3, 1, "", "extract_sweeps"], [689, 3, 1, "", "get_azimuth"], [690, 3, 1, "", "get_elevation"], [691, 3, 1, "", "get_end"], [692, 3, 1, "", "get_field"], [693, 3, 1, "", "get_gate_area"], [694, 3, 1, "", "get_gate_lat_lon_alt"], [695, 3, 1, "", "get_gate_x_y_z"], [696, 3, 1, "", "get_nyquist_vel"], [697, 3, 1, "", "get_slice"], [698, 3, 1, "", "get_start"], [699, 3, 1, "", "get_start_end"], [700, 3, 1, "", "info"], [701, 3, 1, "", "init_gate_altitude"], [702, 3, 1, "", "init_gate_longitude_latitude"], [703, 3, 1, "", "init_gate_x_y_z"], [704, 3, 1, "", "init_rays_per_sweep"], [705, 3, 1, "", "iter_azimuth"], [706, 3, 1, "", "iter_elevation"], [707, 3, 1, "", "iter_end"], [708, 3, 1, "", "iter_field"], [709, 3, 1, "", "iter_slice"], [710, 3, 1, "", "iter_start"], [711, 3, 1, "", "iter_start_end"]], "pyart.correct": [[722, 2, 1, "", "GateFilter"], [750, 0, 1, "", "calculate_attenuation"], [751, 0, 1, "", "calculate_attenuation_philinear"], [752, 0, 1, "", "calculate_attenuation_zphi"], [753, 0, 1, "", "compute_apparent_vpr"], [754, 0, 1, "", "compute_theoretical_vpr"], [755, 0, 1, "", "correct_bias"], [756, 0, 1, "", "correct_noise_rhohv"], [757, 0, 1, "", "correct_sys_phase"], [758, 0, 1, "", "correct_visibility"], [759, 0, 1, "", "correct_vpr"], [760, 0, 1, "", "correct_vpr_spatialised"], [761, 0, 1, "", "dealias_fourdd"], [762, 0, 1, "", "dealias_region_based"], [763, 0, 1, "", "dealias_unwrap_phase"], [764, 0, 1, "", "despeckle_field"], [765, 0, 1, "", "det_sys_phase_ray"], [766, 0, 1, "", "est_rhohv_rain"], [767, 0, 1, "", "est_zdr_precip"], [768, 0, 1, "", "est_zdr_snow"], [769, 0, 1, "", "find_objects"], [770, 0, 1, "", "gauss_fit"], [771, 0, 1, "", "get_mask_fzl"], [772, 0, 1, "", "get_sun_hits"], [773, 0, 1, "", "get_sun_hits_ivic"], [774, 0, 1, "", "get_sun_hits_psr"], [775, 0, 1, "", "moment_based_gate_filter"], [776, 0, 1, "", "phase_proc_lp"], [777, 0, 1, "", "phase_proc_lp_gf"], [778, 0, 1, "", "ptoa_to_sf"], [779, 0, 1, "", "retrieval_result"], [780, 0, 1, "", "scanning_losses"], [781, 0, 1, "", "selfconsistency_bias"], [782, 0, 1, "", "selfconsistency_bias2"], [783, 0, 1, "", "selfconsistency_kdp_phidp"], [784, 0, 1, "", "smooth_masked"], [785, 0, 1, "", "smooth_phidp_double_window"], [786, 0, 1, "", "smooth_phidp_single_window"], [787, 0, 1, "", "solar_flux_lookup"], [788, 0, 1, "", "sun_position_mfr"], [789, 0, 1, "", "sun_position_pysolar"], [790, 0, 1, "", "sun_power"], [791, 0, 1, "", "sun_retrieval"]], "pyart.correct.GateFilter": [[723, 3, 1, "", "copy"], [724, 3, 1, "", "exclude_above"], [725, 3, 1, "", "exclude_all"], [726, 3, 1, "", "exclude_below"], [727, 3, 1, "", "exclude_equal"], [728, 3, 1, "", "exclude_gates"], [729, 3, 1, "", "exclude_inside"], [730, 3, 1, "", "exclude_invalid"], [731, 3, 1, "", "exclude_masked"], [732, 3, 1, "", "exclude_none"], [733, 3, 1, "", "exclude_not_equal"], [734, 3, 1, "", "exclude_outside"], [735, 3, 1, "", "exclude_transition"], [736, 4, 1, "", "gate_excluded"], [737, 4, 1, "", "gate_included"], [738, 3, 1, "", "include_above"], [739, 3, 1, "", "include_all"], [740, 3, 1, "", "include_below"], [741, 3, 1, "", "include_equal"], [742, 3, 1, "", "include_gates"], [743, 3, 1, "", "include_inside"], [744, 3, 1, "", "include_none"], [745, 3, 1, "", "include_not_equal"], [746, 3, 1, "", "include_not_masked"], [747, 3, 1, "", "include_not_transition"], [748, 3, 1, "", "include_outside"], [749, 3, 1, "", "include_valid"]], "pyart.exceptions": [[147, 5, 1, "", "DeprecatedAttribute"], [148, 5, 1, "", "DeprecatedFunctionName"], [149, 5, 1, "", "MissingOptionalDependency"], [150, 0, 1, "", "_deprecated_alias"]], "pyart.filters": [[794, 2, 1, "", "GateFilter"], [822, 0, 1, "", "birds_gate_filter"], [823, 0, 1, "", "class_based_gate_filter"], [824, 0, 1, "", "iso0_based_gate_filter"], [825, 0, 1, "", "moment_and_texture_based_gate_filter"], [826, 0, 1, "", "moment_based_gate_filter"], [827, 0, 1, "", "snr_based_gate_filter"], [828, 0, 1, "", "temp_based_gate_filter"], [829, 0, 1, "", "visibility_based_gate_filter"]], "pyart.filters.GateFilter": [[795, 3, 1, "", "copy"], [796, 3, 1, "", "exclude_above"], [797, 3, 1, "", "exclude_all"], [798, 3, 1, "", "exclude_below"], [799, 3, 1, "", "exclude_equal"], [800, 3, 1, "", "exclude_gates"], [801, 3, 1, "", "exclude_inside"], [802, 3, 1, "", "exclude_invalid"], [803, 3, 1, "", "exclude_masked"], [804, 3, 1, "", "exclude_none"], [805, 3, 1, "", "exclude_not_equal"], [806, 3, 1, "", "exclude_outside"], [807, 3, 1, "", "exclude_transition"], [808, 4, 1, "", "gate_excluded"], [809, 4, 1, "", "gate_included"], [810, 3, 1, "", "include_above"], [811, 3, 1, "", "include_all"], [812, 3, 1, "", "include_below"], [813, 3, 1, "", "include_equal"], [814, 3, 1, "", "include_gates"], [815, 3, 1, "", "include_inside"], [816, 3, 1, "", "include_none"], [817, 3, 1, "", "include_not_equal"], [818, 3, 1, "", "include_not_masked"], [819, 3, 1, "", "include_not_transition"], [820, 3, 1, "", "include_outside"], [821, 3, 1, "", "include_valid"]], "pyart.graph": [[831, 2, 1, "", "AirborneRadarDisplay"], [865, 2, 1, "", "GridMapDisplay"], [884, 2, 1, "", "GridMapDisplayBasemap"], [898, 2, 1, "", "RadarDisplay"], [931, 2, 1, "", "RadarMapDisplay"], [968, 2, 1, "", "RadarMapDisplayBasemap"], [1005, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[832, 3, 1, "", "generate_az_rhi_title"], [833, 3, 1, "", "generate_filename"], [834, 3, 1, "", "generate_ray_title"], [835, 3, 1, "", "generate_title"], [836, 3, 1, "", "generate_vpt_title"], [837, 3, 1, "", "generate_xsection_title"], [838, 3, 1, "", "label_xaxis_r"], [839, 3, 1, "", "label_xaxis_rays"], [840, 3, 1, "", "label_xaxis_time"], [841, 3, 1, "", "label_xaxis_x"], [842, 3, 1, "", "label_xaxis_xsection"], [843, 3, 1, "", "label_yaxis_field"], [844, 3, 1, "", "label_yaxis_xsection"], [845, 3, 1, "", "label_yaxis_y"], [846, 3, 1, "", "label_yaxis_z"], [847, 3, 1, "", "plot"], [848, 3, 1, "", "plot_azimuth_to_rhi"], [849, 3, 1, "", "plot_colorbar"], [850, 3, 1, "", "plot_cr_raster"], [851, 3, 1, "", "plot_cross_hair"], [852, 3, 1, "", "plot_grid_lines"], [853, 3, 1, "", "plot_label"], [854, 3, 1, "", "plot_labels"], [855, 3, 1, "", "plot_ppi"], [856, 3, 1, "", "plot_range_ring"], [857, 3, 1, "", "plot_range_rings"], [858, 3, 1, "", "plot_ray"], [859, 3, 1, "", "plot_rhi"], [860, 3, 1, "", "plot_sweep_grid"], [861, 3, 1, "", "plot_vpt"], [862, 3, 1, "", "plot_xsection"], [863, 3, 1, "", "set_aspect_ratio"], [864, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[866, 3, 1, "", "cartopy_coastlines"], [867, 3, 1, "", "cartopy_political_boundaries"], [868, 3, 1, "", "cartopy_states"], [869, 3, 1, "", "generate_filename"], [870, 3, 1, "", "generate_grid_title"], [871, 3, 1, "", "generate_latitudinal_level_title"], [872, 3, 1, "", "generate_longitudinal_level_title"], [873, 3, 1, "", "plot_colorbar"], [874, 3, 1, "", "plot_cross_section"], [875, 3, 1, "", "plot_cross_section_level"], [876, 3, 1, "", "plot_crosshairs"], [877, 3, 1, "", "plot_grid"], [878, 3, 1, "", "plot_grid_contour"], [879, 3, 1, "", "plot_grid_raw"], [880, 3, 1, "", "plot_latitude_slice"], [881, 3, 1, "", "plot_latitudinal_level"], [882, 3, 1, "", "plot_longitude_slice"], [883, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[885, 3, 1, "", "generate_filename"], [886, 3, 1, "", "generate_grid_title"], [887, 3, 1, "", "generate_latitudinal_level_title"], [888, 3, 1, "", "generate_longitudinal_level_title"], [889, 3, 1, "", "get_basemap"], [890, 3, 1, "", "plot_basemap"], [891, 3, 1, "", "plot_colorbar"], [892, 3, 1, "", "plot_crosshairs"], [893, 3, 1, "", "plot_grid"], [894, 3, 1, "", "plot_latitude_slice"], [895, 3, 1, "", "plot_latitudinal_level"], [896, 3, 1, "", "plot_longitude_slice"], [897, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[899, 3, 1, "", "generate_az_rhi_title"], [900, 3, 1, "", "generate_filename"], [901, 3, 1, "", "generate_ray_title"], [902, 3, 1, "", "generate_title"], [903, 3, 1, "", "generate_vpt_title"], [904, 3, 1, "", "generate_xsection_title"], [905, 3, 1, "", "label_xaxis_r"], [906, 3, 1, "", "label_xaxis_rays"], [907, 3, 1, "", "label_xaxis_time"], [908, 3, 1, "", "label_xaxis_x"], [909, 3, 1, "", "label_xaxis_xsection"], [910, 3, 1, "", "label_yaxis_field"], [911, 3, 1, "", "label_yaxis_xsection"], [912, 3, 1, "", "label_yaxis_y"], [913, 3, 1, "", "label_yaxis_z"], [914, 3, 1, "", "plot"], [915, 3, 1, "", "plot_azimuth_to_rhi"], [916, 3, 1, "", "plot_colorbar"], [917, 3, 1, "", "plot_cr_raster"], [918, 3, 1, "", "plot_cross_hair"], [919, 3, 1, "", "plot_grid_lines"], [920, 3, 1, "", "plot_label"], [921, 3, 1, "", "plot_labels"], [922, 3, 1, "", "plot_ppi"], [923, 3, 1, "", "plot_range_ring"], [924, 3, 1, "", "plot_range_rings"], [925, 3, 1, "", "plot_ray"], [926, 3, 1, "", "plot_rhi"], [927, 3, 1, "", "plot_vpt"], [928, 3, 1, "", "plot_xsection"], [929, 3, 1, "", "set_aspect_ratio"], [930, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[932, 3, 1, "", "generate_az_rhi_title"], [933, 3, 1, "", "generate_filename"], [934, 3, 1, "", "generate_ray_title"], [935, 3, 1, "", "generate_title"], [936, 3, 1, "", "generate_vpt_title"], [937, 3, 1, "", "generate_xsection_title"], [938, 3, 1, "", "label_xaxis_r"], [939, 3, 1, "", "label_xaxis_rays"], [940, 3, 1, "", "label_xaxis_time"], [941, 3, 1, "", "label_xaxis_x"], [942, 3, 1, "", "label_xaxis_xsection"], [943, 3, 1, "", "label_yaxis_field"], [944, 3, 1, "", "label_yaxis_xsection"], [945, 3, 1, "", "label_yaxis_y"], [946, 3, 1, "", "label_yaxis_z"], [947, 3, 1, "", "plot"], [948, 3, 1, "", "plot_azimuth_to_rhi"], [949, 3, 1, "", "plot_colorbar"], [950, 3, 1, "", "plot_cr_raster"], [951, 3, 1, "", "plot_cross_hair"], [952, 3, 1, "", "plot_grid_lines"], [953, 3, 1, "", "plot_label"], [954, 3, 1, "", "plot_labels"], [955, 3, 1, "", "plot_line_geo"], [956, 3, 1, "", "plot_line_xy"], [957, 3, 1, "", "plot_point"], [958, 3, 1, "", "plot_ppi"], [959, 3, 1, "", "plot_ppi_map"], [960, 3, 1, "", "plot_range_ring"], [961, 3, 1, "", "plot_range_rings"], [962, 3, 1, "", "plot_ray"], [963, 3, 1, "", "plot_rhi"], [964, 3, 1, "", "plot_vpt"], [965, 3, 1, "", "plot_xsection"], [966, 3, 1, "", "set_aspect_ratio"], [967, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[969, 3, 1, "", "generate_az_rhi_title"], [970, 3, 1, "", "generate_filename"], [971, 3, 1, "", "generate_ray_title"], [972, 3, 1, "", "generate_title"], [973, 3, 1, "", "generate_vpt_title"], [974, 3, 1, "", "generate_xsection_title"], [975, 3, 1, "", "label_xaxis_r"], [976, 3, 1, "", "label_xaxis_rays"], [977, 3, 1, "", "label_xaxis_time"], [978, 3, 1, "", "label_xaxis_x"], [979, 3, 1, "", "label_xaxis_xsection"], [980, 3, 1, "", "label_yaxis_field"], [981, 3, 1, "", "label_yaxis_xsection"], [982, 3, 1, "", "label_yaxis_y"], [983, 3, 1, "", "label_yaxis_z"], [984, 3, 1, "", "plot"], [985, 3, 1, "", "plot_azimuth_to_rhi"], [986, 3, 1, "", "plot_colorbar"], [987, 3, 1, "", "plot_cr_raster"], [988, 3, 1, "", "plot_cross_hair"], [989, 3, 1, "", "plot_grid_lines"], [990, 3, 1, "", "plot_label"], [991, 3, 1, "", "plot_labels"], [992, 3, 1, "", "plot_line_geo"], [993, 3, 1, "", "plot_line_xy"], [994, 3, 1, "", "plot_point"], [995, 3, 1, "", "plot_ppi"], [996, 3, 1, "", "plot_ppi_map"], [997, 3, 1, "", "plot_range_ring"], [998, 3, 1, "", "plot_range_rings"], [999, 3, 1, "", "plot_ray"], [1000, 3, 1, "", "plot_rhi"], [1001, 3, 1, "", "plot_vpt"], [1002, 3, 1, "", "plot_xsection"], [1003, 3, 1, "", "set_aspect_ratio"], [1004, 3, 1, "", "set_limits"]], "pyart.io": [[1007, 0, 1, "", "make_time_unit_str"], [1008, 0, 1, "", "prepare_for_read"], [1009, 0, 1, "", "read"], [1010, 0, 1, "", "read_arm_sonde"], [1011, 0, 1, "", "read_arm_sonde_vap"], [1012, 0, 1, "", "read_cfradial"], [1013, 0, 1, "", "read_cfradial2"], [1014, 0, 1, "", "read_chl"], [1015, 0, 1, "", "read_grid"], [1016, 0, 1, "", "read_grid_mdv"], [1017, 0, 1, "", "read_mdv"], [1018, 0, 1, "", "read_nexrad_archive"], [1019, 0, 1, "", "read_nexrad_cdm"], [1020, 0, 1, "", "read_nexrad_level3"], [1021, 0, 1, "", "read_rsl"], [1022, 0, 1, "", "read_sigmet"], [1023, 0, 1, "", "read_uf"], [1024, 0, 1, "", "write_cfradial"], [1025, 0, 1, "", "write_grid"], [1026, 0, 1, "", "write_grid_geotiff"], [1027, 0, 1, "", "write_grid_mdv"], [1028, 0, 1, "", "write_uf"]], "pyart.lazydict": [[1030, 2, 1, "", "LazyLoadDict"], [1043, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[384, 3, 1, "", "__contains__"], [385, 3, 1, "", "__delattr__"], [386, 3, 1, "", "__delitem__"], [387, 3, 1, "", "__dir__"], [388, 3, 1, "", "__eq__"], [389, 3, 1, "", "__format__"], [390, 3, 1, "", "__ge__"], [391, 3, 1, "", "__getattribute__"], [392, 3, 1, "", "__getitem__"], [393, 3, 1, "", "__getstate__"], [394, 3, 1, "", "__gt__"], [395, 3, 1, "", "__init__"], [396, 3, 1, "", "__init_subclass__"], [397, 3, 1, "", "__iter__"], [398, 3, 1, "", "__le__"], [399, 3, 1, "", "__len__"], [400, 3, 1, "", "__lt__"], [401, 3, 1, "", "__ne__"], [402, 3, 1, "", "__new__"], [403, 3, 1, "", "__reduce__"], [404, 3, 1, "", "__reduce_ex__"], [405, 3, 1, "", "__repr__"], [406, 3, 1, "", "__setattr__"], [407, 3, 1, "", "__setitem__"], [408, 3, 1, "", "__sizeof__"], [409, 3, 1, "", "__str__"], [410, 3, 1, "", "__subclasshook__"], [1031, 3, 1, "", "clear"], [1032, 3, 1, "", "copy"], [1033, 3, 1, "", "get"], [1034, 3, 1, "", "has_key"], [1035, 3, 1, "", "items"], [1036, 3, 1, "", "keys"], [1037, 3, 1, "", "pop"], [1038, 3, 1, "", "popitem"], [1039, 3, 1, "", "set_lazy"], [1040, 3, 1, "", "setdefault"], [1041, 3, 1, "", "update"], [1042, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[1044, 3, 1, "", "clear"], [1045, 3, 1, "", "get"], [1046, 3, 1, "", "items"], [1047, 3, 1, "", "keys"], [1048, 3, 1, "", "pop"], [1049, 3, 1, "", "popitem"], [1050, 3, 1, "", "setdefault"], [1051, 3, 1, "", "update"], [1052, 3, 1, "", "values"]], "pyart.map": [[1054, 2, 1, "", "GateMapper"], [1058, 0, 1, "", "example_roi_func_constant"], [1059, 0, 1, "", "example_roi_func_dist"], [1060, 0, 1, "", "example_roi_func_dist_beam"], [1061, 0, 1, "", "grid_from_radars"], [1062, 0, 1, "", "grid_ppi_sweeps"], [1063, 0, 1, "", "grid_rhi_sweeps"], [1064, 0, 1, "", "map_gates_to_grid"], [1065, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[1055, 4, 1, "", "distance_tolerance"], [1056, 3, 1, "", "mapped_radar"], [1057, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[423, 0, 1, "", "_destandardize"], [424, 0, 1, "", "_get_res_vol_sides"], [1067, 0, 1, "", "atmospheric_gas_att"], [1068, 0, 1, "", "calculate_snr_from_reflectivity"], [1069, 0, 1, "", "calculate_velocity_texture"], [1070, 0, 1, "", "composite_reflectivity"], [1071, 0, 1, "", "compute_Doppler_velocity"], [1072, 0, 1, "", "compute_Doppler_velocity_iq"], [1073, 0, 1, "", "compute_Doppler_width"], [1074, 0, 1, "", "compute_Doppler_width_iq"], [1075, 0, 1, "", "compute_apparent_profile"], [1076, 0, 1, "", "compute_bird_density"], [1077, 0, 1, "", "compute_ccor"], [1078, 0, 1, "", "compute_cdr"], [1079, 0, 1, "", "compute_centroids"], [1080, 0, 1, "", "compute_differential_phase"], [1081, 0, 1, "", "compute_differential_phase_iq"], [1082, 0, 1, "", "compute_differential_reflectivity"], [1083, 0, 1, "", "compute_differential_reflectivity_iq"], [1084, 0, 1, "", "compute_evp"], [1085, 0, 1, "", "compute_iq"], [1086, 0, 1, "", "compute_l"], [1087, 0, 1, "", "compute_mean_phase_iq"], [1088, 0, 1, "", "compute_noise_power"], [1089, 0, 1, "", "compute_noisedBZ"], [1090, 0, 1, "", "compute_pol_variables"], [1091, 0, 1, "", "compute_pol_variables_iq"], [1092, 0, 1, "", "compute_qvp"], [1093, 0, 1, "", "compute_radial_noise_hs"], [1094, 0, 1, "", "compute_radial_noise_ivic"], [1095, 0, 1, "", "compute_rcs"], [1096, 0, 1, "", "compute_rcs_from_pr"], [1097, 0, 1, "", "compute_reflectivity"], [1098, 0, 1, "", "compute_reflectivity_iq"], [1099, 0, 1, "", "compute_rhohv"], [1100, 0, 1, "", "compute_rhohv_iq"], [1101, 0, 1, "", "compute_rqvp"], [1102, 0, 1, "", "compute_signal_power"], [1103, 0, 1, "", "compute_snr"], [1104, 0, 1, "", "compute_spectra"], [1105, 0, 1, "", "compute_spectral_differential_phase"], [1106, 0, 1, "", "compute_spectral_differential_reflectivity"], [1107, 0, 1, "", "compute_spectral_noise"], [1108, 0, 1, "", "compute_spectral_phase"], [1109, 0, 1, "", "compute_spectral_power"], [1110, 0, 1, "", "compute_spectral_reflectivity"], [1111, 0, 1, "", "compute_spectral_rhohv"], [1112, 0, 1, "", "compute_st1_iq"], [1113, 0, 1, "", "compute_st2_iq"], [1114, 0, 1, "", "compute_svp"], [1115, 0, 1, "", "compute_ts_along_coord"], [1116, 0, 1, "", "compute_vol_refl"], [1117, 0, 1, "", "compute_vp"], [1118, 0, 1, "", "compute_wbn_iq"], [1119, 0, 1, "", "conv_strat_raut"], [1120, 0, 1, "", "conv_strat_yuter"], [1121, 0, 1, "", "data_for_centroids"], [1122, 0, 1, "", "dealias_spectra"], [1123, 0, 1, "", "detect_ml"], [1124, 0, 1, "", "determine_medoids"], [1125, 0, 1, "", "est_rain_rate_a"], [1126, 0, 1, "", "est_rain_rate_hydro"], [1127, 0, 1, "", "est_rain_rate_kdp"], [1128, 0, 1, "", "est_rain_rate_z"], [1129, 0, 1, "", "est_rain_rate_za"], [1130, 0, 1, "", "est_rain_rate_zkdp"], [1131, 0, 1, "", "est_rain_rate_zpoly"], [1132, 0, 1, "", "est_vertical_windshear"], [1133, 0, 1, "", "est_vertical_windshear_lidar"], [1134, 0, 1, "", "est_wind_profile"], [1135, 0, 1, "", "est_wind_vel"], [1136, 0, 1, "", "feature_detection"], [1137, 0, 1, "", "fetch_radar_time_profile"], [1138, 0, 1, "", "gecsx"], [1139, 0, 1, "", "get_coeff_attg"], [1140, 0, 1, "", "get_freq_band"], [1141, 0, 1, "", "get_iso0_val"], [1142, 0, 1, "", "get_ml_rng_limits"], [1143, 0, 1, "", "grid_displacement_pc"], [1144, 0, 1, "", "grid_shift"], [1145, 0, 1, "", "hydroclass_semisupervised"], [1146, 0, 1, "", "kdp_leastsquare_double_window"], [1147, 0, 1, "", "kdp_leastsquare_single_window"], [1148, 0, 1, "", "kdp_maesaka"], [1149, 0, 1, "", "kdp_schneebeli"], [1150, 0, 1, "", "kdp_vulpiani"], [1151, 0, 1, "", "map_profile_to_gates"], [1152, 0, 1, "", "melting_layer_giangrande"], [1153, 0, 1, "", "melting_layer_hydroclass"], [1154, 0, 1, "", "melting_layer_mf"], [1155, 0, 1, "", "quasi_vertical_profile"], [1156, 0, 1, "", "select_samples"], [1157, 0, 1, "", "steiner_conv_strat"], [1158, 0, 1, "", "synthetic_obs_distribution"], [1159, 0, 1, "", "texture_of_complex_phase"], [1160, 0, 1, "", "vad_browning"], [1161, 0, 1, "", "vad_michelson"]], "pyart.testing": [[1163, 2, 1, "", "Grid"], [1173, 2, 1, "", "InTemporaryDirectory"], [1175, 2, 1, "", "Radar"], [1204, 2, 1, "", "RadarSpectra"], [1233, 0, 1, "", "get_metadata"], [1234, 0, 1, "", "get_test_data"], [1235, 0, 1, "", "make_empty_grid"], [1236, 0, 1, "", "make_empty_ppi_radar"], [1237, 0, 1, "", "make_empty_rhi_radar"], [1238, 0, 1, "", "make_empty_spectra_radar"], [1239, 0, 1, "", "make_gaussian_storm_grid"], [1240, 0, 1, "", "make_normal_storm"], [1241, 0, 1, "", "make_single_ray_radar"], [1242, 0, 1, "", "make_storm_grid"], [1243, 0, 1, "", "make_target_grid"], [1244, 0, 1, "", "make_target_radar"], [1245, 0, 1, "", "make_target_spectra_radar"], [1246, 0, 1, "", "make_velocity_aliased_radar"], [1247, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[1164, 3, 1, "", "add_field"], [1165, 3, 1, "", "get_point_longitude_latitude"], [1166, 3, 1, "", "get_projparams"], [1167, 3, 1, "", "init_point_altitude"], [1168, 3, 1, "", "init_point_longitude_latitude"], [1169, 3, 1, "", "init_point_x_y_z"], [1170, 4, 1, "", "projection_proj"], [1171, 3, 1, "", "to_xarray"], [1172, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[1174, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[1176, 3, 1, "", "add_field"], [1177, 3, 1, "", "add_field_like"], [1178, 3, 1, "", "add_filter"], [1179, 3, 1, "", "check_field_exists"], [1180, 3, 1, "", "extract_sweeps"], [1181, 3, 1, "", "get_azimuth"], [1182, 3, 1, "", "get_elevation"], [1183, 3, 1, "", "get_end"], [1184, 3, 1, "", "get_field"], [1185, 3, 1, "", "get_gate_area"], [1186, 3, 1, "", "get_gate_lat_lon_alt"], [1187, 3, 1, "", "get_gate_x_y_z"], [1188, 3, 1, "", "get_nyquist_vel"], [1189, 3, 1, "", "get_slice"], [1190, 3, 1, "", "get_start"], [1191, 3, 1, "", "get_start_end"], [1192, 3, 1, "", "info"], [1193, 3, 1, "", "init_gate_altitude"], [1194, 3, 1, "", "init_gate_longitude_latitude"], [1195, 3, 1, "", "init_gate_x_y_z"], [1196, 3, 1, "", "init_rays_per_sweep"], [1197, 3, 1, "", "iter_azimuth"], [1198, 3, 1, "", "iter_elevation"], [1199, 3, 1, "", "iter_end"], [1200, 3, 1, "", "iter_field"], [1201, 3, 1, "", "iter_slice"], [1202, 3, 1, "", "iter_start"], [1203, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[1205, 3, 1, "", "add_field"], [1206, 3, 1, "", "add_field_like"], [1207, 3, 1, "", "add_filter"], [1208, 3, 1, "", "check_field_exists"], [1209, 3, 1, "", "extract_sweeps"], [1210, 3, 1, "", "get_azimuth"], [1211, 3, 1, "", "get_elevation"], [1212, 3, 1, "", "get_end"], [1213, 3, 1, "", "get_field"], [1214, 3, 1, "", "get_gate_area"], [1215, 3, 1, "", "get_gate_lat_lon_alt"], [1216, 3, 1, "", "get_gate_x_y_z"], [1217, 3, 1, "", "get_nyquist_vel"], [1218, 3, 1, "", "get_slice"], [1219, 3, 1, "", "get_start"], [1220, 3, 1, "", "get_start_end"], [1221, 3, 1, "", "info"], [1222, 3, 1, "", "init_gate_altitude"], [1223, 3, 1, "", "init_gate_longitude_latitude"], [1224, 3, 1, "", "init_gate_x_y_z"], [1225, 3, 1, "", "init_rays_per_sweep"], [1226, 3, 1, "", "iter_azimuth"], [1227, 3, 1, "", "iter_elevation"], [1228, 3, 1, "", "iter_end"], [1229, 3, 1, "", "iter_field"], [1230, 3, 1, "", "iter_slice"], [1231, 3, 1, "", "iter_start"], [1232, 3, 1, "", "iter_start_end"]], "pyart.util": [[519, 6, 1, "", "EPOCH_UNITS"], [1249, 0, 1, "", "angular_mean"], [1250, 0, 1, "", "angular_mean_deg"], [1251, 0, 1, "", "angular_std"], [1252, 0, 1, "", "angular_std_deg"], [1253, 0, 1, "", "angular_texture_2d"], [1254, 0, 1, "", "colocated_gates"], [1255, 0, 1, "", "colocated_gates2"], [1256, 0, 1, "", "compute_azimuthal_average"], [1257, 0, 1, "", "compute_corr"], [1258, 0, 1, "", "compute_directional_stats"], [1259, 0, 1, "", "compute_mse"], [1260, 0, 1, "", "compute_nse"], [1261, 0, 1, "", "cross_section_ppi"], [1262, 0, 1, "", "cross_section_rhi"], [1263, 0, 1, "", "datetime_from_dataset"], [1264, 0, 1, "", "datetime_from_grid"], [1265, 0, 1, "", "datetime_from_radar"], [1266, 0, 1, "", "datetimes_from_dataset"], [1267, 0, 1, "", "datetimes_from_radar"], [1268, 0, 1, "", "determine_sweeps"], [1269, 0, 1, "", "estimate_noise_hs74"], [1270, 0, 1, "", "estimate_noise_ivic13"], [1271, 0, 1, "", "find_neighbour_gates"], [1272, 0, 1, "", "for_azimuth"], [1273, 0, 1, "", "get_column_rays"], [1274, 0, 1, "", "get_field_location"], [1275, 0, 1, "", "get_ivic_flat_reg_var_max"], [1276, 0, 1, "", "get_ivic_pct"], [1277, 0, 1, "", "get_ivic_snr_thr"], [1278, 0, 1, "", "get_target_elevations"], [1279, 0, 1, "", "grid_texture_2d"], [1280, 0, 1, "", "image_mute_radar"], [1281, 0, 1, "", "interpol_spectra"], [1282, 0, 1, "", "intersection"], [1283, 0, 1, "", "interval_mean"], [1284, 0, 1, "", "interval_std"], [1285, 0, 1, "", "is_vpt"], [1286, 0, 1, "", "ivic_flat_reg_var_max_table"], [1287, 0, 1, "", "ivic_flat_reg_wind_len_table"], [1288, 0, 1, "", "ivic_pct_table"], [1289, 0, 1, "", "ivic_snr_thr_table"], [1290, 0, 1, "", "join_radar"], [1291, 0, 1, "", "join_spectra"], [1292, 0, 1, "", "ma_broadcast_to"], [1293, 0, 1, "", "mean_of_two_angles"], [1294, 0, 1, "", "mean_of_two_angles_deg"], [1295, 0, 1, "", "radar_from_spectra"], [1296, 0, 1, "", "rolling_window"], [1297, 0, 1, "", "simulated_vel_from_profile"], [1298, 0, 1, "", "sphere_distance"], [1299, 0, 1, "", "subset_radar"], [1300, 0, 1, "", "subset_radar_spectra"], [1301, 0, 1, "", "texture"], [1302, 0, 1, "", "texture_along_ray"], [1303, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:data"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303], "aux_io": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623], "extract_sweeps_skyecho": [0, 578], "get_sweep_time_coverag": [1, 580], "read_bin": [2, 581], "read_bin_mf": [3, 582], "read_cartesian_metranet": [4, 583], "read_cf1": [5, 584], "read_cf1_cartesian": [6, 585], "read_cf1_cartesian_mf": [7, 586], "read_d3r_gcpex_nc": [8, 587], "read_dat_mf": [9, 588], "read_gam": [10, 592], "read_gif": [11, 593], "read_grib": [12, 594], "read_hpl": [13, 595], "read_iq": [14, 596], "read_kazr": [15, 597], "read_metranet": [16, 600], "read_noxp_iphex_nc": [17, 601], "read_odim_grid_h5": [18, 602], "read_odim_h5": [19, 603], "read_odim_vp_h5": [20, 604], "read_pattern": [21, 605], "read_png": [22, 606], "read_radx": [23, 612], "read_rainbow_psr": [24, 613], "read_rainbow_psr_spectra": [25, 614], "read_rainbow_wrl": [26, 615], "read_skyecho": [27, 617], "read_spectra": [28, 618], "read_swissbirdradar_spectra": [29, 619], "write_odim_grid_h5": [30, 620], "write_odim_h5": [31, 621], "write_sinarame_cfradi": [32, 622], "write_spectra": [33, 623], "bridg": [34, 624, 625], "texture_of_complex_phas": [34, 625, 1159], "config": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638], "filemetadata": [35, 36, 37, 38, 627, 628, 629, 630], "__call__": [36, 628], "get_field_nam": [37, 42, 629, 635], "get_metadata": [38, 44, 630, 637, 1233], "get_field_colormap": [39, 632], "get_field_limit": [40, 633], "get_field_map": [41, 634], "get_fillvalu": [43, 636], "load_config": [45, 638], "core": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720], "grid": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 830, 1006, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1317, 1318, 1322, 1353], "add_field": [47, 61, 90, 641, 655, 684, 1164, 1176, 1205], "get_point_longitude_latitud": [48, 642, 1165], "get_projparam": [49, 643, 1166], "init_point_altitud": [50, 644, 1167], "init_point_longitude_latitud": [51, 645, 1168], "init_point_x_y_z": [52, 646, 1169], "projection_proj": [53, 647, 1170], "to_xarrai": [54, 648, 1171], "write": [55, 576, 649, 1006, 1172], "horizontalwindprofil": [56, 57, 58, 59, 650, 651, 652, 653], "from_u_and_v": [57, 651], "u_wind": [58, 652], "v_wind": [59, 653], "radar": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 576, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 721, 793, 830, 1006, 1066, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1248, 1316, 1317, 1318, 1340, 1350, 1358, 1361], "add_field_lik": [62, 91, 656, 685, 1177, 1206], "add_filt": [63, 92, 657, 686, 1178, 1207], "check_field_exist": [64, 93, 658, 687, 1179, 1208], "extract_sweep": [65, 94, 659, 688, 1180, 1209], "get_azimuth": [66, 95, 660, 689, 1181, 1210], "get_elev": [67, 96, 661, 690, 1182, 1211], "get_end": [68, 97, 662, 691, 1183, 1212], "get_field": [69, 98, 663, 692, 1184, 1213], "get_gate_area": [70, 99, 664, 693, 1185, 1214], "get_gate_lat_lon_alt": [71, 100, 665, 694, 1186, 1215], "get_gate_x_y_z": [72, 101, 666, 695, 1187, 1216], "get_nyquist_vel": [73, 102, 667, 696, 1188, 1217], "get_slic": [74, 103, 668, 697, 1189, 1218], "get_start": [75, 104, 669, 698, 1190, 1219], "get_start_end": [76, 105, 670, 699, 1191, 1220], "info": [77, 106, 671, 700, 1192, 1221], "init_gate_altitud": [78, 107, 672, 701, 1193, 1222], "init_gate_longitude_latitud": [79, 108, 673, 702, 1194, 1223], "init_gate_x_y_z": [80, 109, 674, 703, 1195, 1224], "init_rays_per_sweep": [81, 110, 675, 704, 1196, 1225], "iter_azimuth": [82, 111, 676, 705, 1197, 1226], "iter_elev": [83, 112, 677, 706, 1198, 1227], "iter_end": [84, 113, 678, 707, 1199, 1228], "iter_field": [85, 114, 679, 708, 1200, 1229], "iter_slic": [86, 115, 680, 709, 1201, 1230], "iter_start": [87, 116, 681, 710, 1202, 1231], "iter_start_end": [88, 117, 682, 711, 1203, 1232], "radarspectra": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232], "antenna_to_cartesian": [118, 712], "antenna_vectors_to_cartesian": [119, 713], "cartesian_to_antenna": [120, 714], "cartesian_to_geograph": [121, 715], "cartesian_to_geographic_aeqd": [122, 716], "cartesian_vectors_to_geograph": [123, 717], "geographic_to_cartesian": [124, 718], "geographic_to_cartesian_aeqd": [125, 719], "wgs84_to_swissch1903": [126, 720], "test": [126, 720, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1361], "exampl": [126, 720, 1306, 1310, 1311, 1315, 1320, 1339, 1342], "correct": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 1306, 1307, 1310, 1357], "compute_apparent_vpr": [127, 753], "compute_theoretical_vpr": [128, 754], "correct_sys_phas": [129, 757], "dealias_fourdd": [130, 761], "dealias_region_bas": [131, 762], "dealias_unwrap_phas": [132, 763], "det_sys_phase_rai": [133, 765], "find_object": [134, 769], "get_mask_fzl": [135, 771], "phase_proc_lp": [136, 776], "phase_proc_lp_gf": [137, 777], "ptoa_to_sf": [138, 778], "scanning_loss": [139, 780], "smooth_mask": [140, 784], "smooth_phidp_double_window": [141, 785], "smooth_phidp_single_window": [142, 786], "solar_flux_lookup": [143, 787], "sun_position_mfr": [144, 788], "sun_position_pysolar": [145, 789], "sun_pow": [146, 790], "except": [147, 148, 149, 150, 792], "deprecatedattribut": 147, "deprecatedfunctionnam": 148, "missingoptionaldepend": 149, "_deprecated_alia": 150, "filter": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 1357], "gatefilt": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 1354], "copi": [152, 412, 723, 795, 1032], "exclude_abov": [153, 724, 796], "exclude_al": [154, 725, 797], "exclude_below": [155, 726, 798], "exclude_equ": [156, 727, 799], "exclude_g": [157, 728, 800], "exclude_insid": [158, 729, 801], "exclude_invalid": [159, 730, 802], "exclude_mask": [160, 731, 803], "exclude_non": [161, 732, 804], "exclude_not_equ": [162, 733, 805], "exclude_outsid": [163, 734, 806], "exclude_transit": [164, 735, 807], "gate_exclud": [165, 736, 808], "gate_includ": [166, 737, 809], "include_abov": [167, 738, 810], "include_al": [168, 739, 811], "include_below": [169, 740, 812], "include_equ": [170, 741, 813], "include_g": [171, 742, 814], "include_insid": [172, 743, 815], "include_non": [173, 744, 816], "include_not_equ": [174, 745, 817], "include_not_mask": [175, 746, 818], "include_not_transit": [176, 747, 819], "include_outsid": [177, 748, 820], "include_valid": [178, 749, 821], "birds_gate_filt": [179, 822], "class_based_gate_filt": [180, 823], "iso0_based_gate_filt": [181, 824], "moment_and_texture_based_gate_filt": [182, 825], "moment_based_gate_filt": [183, 775, 826], "snr_based_gate_filt": [184, 827], "temp_based_gate_filt": [185, 828], "visibility_based_gate_filt": [186, 829], "graph": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005], "airborneradardisplai": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "generate_az_rhi_titl": [188, 255, 288, 325, 832, 899, 932, 969], "generate_filenam": [189, 225, 241, 256, 289, 326, 833, 869, 885, 900, 933, 970], "generate_ray_titl": [190, 257, 290, 327, 834, 901, 934, 971], "generate_titl": [191, 258, 291, 328, 835, 902, 935, 972], "generate_vpt_titl": [192, 259, 292, 329, 836, 903, 936, 973], "generate_xsection_titl": [193, 260, 293, 330, 837, 904, 937, 974], "label_xaxis_r": [194, 261, 294, 331, 838, 905, 938, 975], "label_xaxis_rai": [195, 262, 295, 332, 839, 906, 939, 976], "label_xaxis_tim": [196, 263, 296, 333, 840, 907, 940, 977], "label_xaxis_x": [197, 264, 297, 334, 841, 908, 941, 978], "label_xaxis_xsect": [198, 265, 298, 335, 842, 909, 942, 979], "label_yaxis_field": [199, 266, 299, 336, 843, 910, 943, 980], "label_yaxis_xsect": [200, 267, 300, 337, 844, 911, 944, 981], "label_yaxis_i": [201, 268, 301, 338, 845, 912, 945, 982], "label_yaxis_z": [202, 269, 302, 339, 846, 913, 946, 983], "plot": [203, 270, 303, 340, 830, 847, 914, 947, 984, 1310, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1341, 1343, 1344, 1356], "plot_azimuth_to_rhi": [204, 271, 304, 341, 848, 915, 948, 985], "plot_colorbar": [205, 229, 247, 272, 305, 342, 849, 873, 891, 916, 949, 986], "plot_cr_rast": [206, 273, 306, 343, 850, 917, 950, 987], "plot_cross_hair": [207, 274, 307, 344, 851, 918, 951, 988], "plot_grid_lin": [208, 275, 308, 345, 852, 919, 952, 989], "plot_label": [209, 210, 276, 277, 309, 310, 346, 347, 853, 854, 920, 921, 953, 954, 990, 991], "plot_ppi": [211, 278, 314, 351, 855, 922, 958, 995], "plot_range_r": [212, 213, 279, 280, 316, 317, 353, 354, 856, 857, 923, 924, 960, 961, 997, 998], "plot_rai": [214, 281, 318, 355, 858, 925, 962, 999], "plot_rhi": [215, 282, 319, 356, 859, 926, 963, 1000], "plot_sweep_grid": [216, 860], "plot_vpt": [217, 283, 320, 357, 861, 927, 964, 1001], "plot_xsect": [218, 284, 321, 358, 862, 928, 965, 1002], "set_aspect_ratio": [219, 285, 322, 359, 863, 929, 966, 1003], "set_limit": [220, 286, 323, 360, 864, 930, 967, 1004], "gridmapdisplai": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 1336], "cartopy_coastlin": [222, 866], "cartopy_political_boundari": [223, 867], "cartopy_st": [224, 868], "generate_grid_titl": [226, 242, 870, 886], "generate_latitudinal_level_titl": [227, 243, 871, 887], "generate_longitudinal_level_titl": [228, 244, 872, 888], "plot_cross_sect": [230, 874], "plot_cross_section_level": [231, 875], "plot_crosshair": [232, 248, 876, 892], "plot_grid": [233, 249, 877, 893], "plot_grid_contour": [234, 878], "plot_grid_raw": [235, 879], "plot_latitude_slic": [236, 250, 880, 894], "plot_latitudinal_level": [237, 251, 881, 895], "plot_longitude_slic": [238, 252, 882, 896], "plot_longitudinal_level": [239, 253, 883, 897], "gridmapdisplaybasemap": [240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897], "get_basemap": [245, 889], "plot_basemap": [246, 890], "radardisplai": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930], "radarmapdisplai": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967], "plot_line_geo": [311, 348, 955, 992], "plot_line_xi": [312, 349, 956, 993], "plot_point": [313, 350, 957, 994], "plot_ppi_map": [315, 352, 959, 996], "radarmapdisplaybasemap": [324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004], "io": [361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028], "make_time_unit_str": [361, 1007], "prepare_for_read": [362, 1008], "read": [363, 576, 1006, 1009, 1312, 1313, 1355, 1356, 1357], "read_arm_sond": [364, 1010], "read_arm_sonde_vap": [365, 1011], "read_cfradi": [366, 1012], "read_cfradial2": [367, 1013], "read_chl": [368, 1014], "read_grid": [369, 1015], "read_grid_mdv": [370, 1016], "read_mdv": [371, 1017], "read_nexrad_arch": [372, 1018], "read_nexrad_cdm": [373, 1019], "read_nexrad_level3": [374, 1020], "read_rsl": [375, 1021], "read_sigmet": [376, 1022], "read_uf": [377, 1023], "write_cfradi": [378, 1024], "write_grid": [379, 1025], "write_grid_geotiff": [380, 1026], "write_grid_mdv": [381, 1027], "write_uf": [382, 1028], "lazydict": [383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052], "lazyloaddict": [383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042], "__contains__": 384, "__delattr__": 385, "__delitem__": 386, "__dir__": 387, "__eq__": 388, "__format__": 389, "__ge__": 390, "__getattribute__": 391, "__getitem__": 392, "__getstate__": 393, "__gt__": 394, "__init__": 395, "__init_subclass__": 396, "__iter__": 397, "__le__": 398, "__len__": 399, "__lt__": 400, "__ne__": 401, "__new__": 402, "__reduce__": 403, "__reduce_ex__": 404, "__repr__": 405, "__setattr__": 406, "__setitem__": 407, "__sizeof__": 408, "__str__": 409, "__subclasshook__": 410, "clear": [411, 1031, 1044], "get": [413, 1033, 1045, 1347], "has_kei": [414, 1034], "item": [415, 1035, 1046], "kei": [416, 1036, 1047], "pop": [417, 1037, 1048], "popitem": [418, 1038, 1049], "set_lazi": [419, 1039], "setdefault": [420, 1040, 1050], "updat": [421, 1041, 1051], "valu": [422, 1042, 1052], "retriev": [423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1310, 1339, 1357], "_destandard": 423, "_get_res_vol_sid": 424, "atmospheric_gas_att": [425, 1067], "calculate_snr_from_reflect": [426, 1068], "calculate_velocity_textur": [427, 1069], "composite_reflect": [428, 1070], "compute_doppler_veloc": [429, 1071], "compute_doppler_velocity_iq": [430, 1072], "compute_doppler_width": [431, 1073], "compute_doppler_width_iq": [432, 1074], "compute_apparent_profil": [433, 1075], "compute_bird_dens": [434, 1076], "compute_ccor": [435, 1077], "compute_cdr": [436, 1078], "compute_centroid": [437, 1079], "compute_differential_phas": [438, 1080], "compute_differential_phase_iq": [439, 1081], "compute_differential_reflect": [440, 1082], "compute_differential_reflectivity_iq": [441, 1083], "compute_evp": [442, 1084], "compute_iq": [443, 1085], "compute_l": [444, 1086], "compute_mean_phase_iq": [445, 1087], "compute_noise_pow": [446, 1088], "compute_noisedbz": [447, 1089], "compute_pol_vari": [448, 1090], "compute_pol_variables_iq": [449, 1091], "compute_qvp": [450, 1092], "compute_radial_noise_h": [451, 1093], "compute_radial_noise_iv": [452, 1094], "compute_rc": [453, 1095], "compute_rcs_from_pr": [454, 1096], "compute_reflect": [455, 1097], "compute_reflectivity_iq": [456, 1098], "compute_rhohv": [457, 1099], "compute_rhohv_iq": [458, 1100], "compute_rqvp": [459, 1101], "compute_signal_pow": [460, 1102], "compute_snr": [461, 1103], "compute_spectra": [462, 1104], "compute_spectral_differential_phas": [463, 1105], "compute_spectral_differential_reflect": [464, 1106], "compute_spectral_nois": [465, 1107], "compute_spectral_phas": [466, 1108], "compute_spectral_pow": [467, 1109], "compute_spectral_reflect": [468, 1110], "compute_spectral_rhohv": [469, 1111], "compute_st1_iq": [470, 1112], "compute_st2_iq": [471, 1113], "compute_svp": [472, 1114], "compute_ts_along_coord": [473, 1115], "compute_vol_refl": [474, 1116], "compute_vp": [475, 1117], "compute_wbn_iq": [476, 1118], "conv_strat_raut": [477, 1119], "conv_strat_yut": [478, 1120], "data_for_centroid": [479, 1121], "dealias_spectra": [480, 1122], "detect_ml": [481, 1123], "paremet": [481, 1123], "determine_medoid": [482, 1124], "est_rain_rate_a": [483, 1125], "est_rain_rate_hydro": [484, 1126], "est_rain_rate_kdp": [485, 1127], "est_rain_rate_z": [486, 1128], "est_rain_rate_za": [487, 1129], "est_rain_rate_zkdp": [488, 1130], "est_rain_rate_zpoli": [489, 1131], "est_vertical_windshear": [490, 1132], "est_vertical_windshear_lidar": [491, 1133], "est_wind_profil": [492, 1134], "est_wind_vel": [493, 1135], "feature_detect": [494, 1136], "fetch_radar_time_profil": [495, 1137], "gecsx": [496, 1138], "get_coeff_attg": [497, 1139], "get_freq_band": [498, 1140], "get_iso0_v": [499, 1141], "get_ml_rng_limit": [500, 1142], "grid_displacement_pc": [501, 1143], "grid_shift": [502, 1144], "hydroclass_semisupervis": [503, 1145], "kdp_leastsquare_double_window": [504, 1146], "kdp_leastsquare_single_window": [505, 1147], "kdp_maesaka": [506, 1148], "kdp_schneeb": [507, 1149], "kdp_vulpiani": [508, 1150], "map_profile_to_g": [509, 1151], "melting_layer_giangrand": [510, 1152], "melting_layer_hydroclass": [511, 1153], "melting_layer_mf": [512, 1154], "quasi_vertical_profil": [513, 1155], "select_sampl": [514, 1156], "steiner_conv_strat": [515, 1157], "synthetic_obs_distribut": [516, 1158], "vad_brown": [517, 1160], "vad_michelson": [518, 1161], "util": [519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303], "epoch_unit": 519, "angular_mean": [520, 1249], "angular_mean_deg": [521, 1250], "angular_std": [522, 1251], "angular_std_deg": [523, 1252], "angular_texture_2d": [524, 1253], "colocated_g": [525, 1254], "colocated_gates2": [526, 1255], "compute_azimuthal_averag": [527, 1256], "compute_corr": [528, 1257], "compute_directional_stat": [529, 1258], "compute_ms": [530, 1259], "compute_ns": [531, 1260], "cross_section_ppi": [532, 1261], "cross_section_rhi": [533, 1262], "datetime_from_dataset": [534, 1263], "datetime_from_grid": [535, 1264], "datetime_from_radar": [536, 1265], "datetimes_from_dataset": [537, 1266], "datetimes_from_radar": [538, 1267], "determine_sweep": [539, 1268], "estimate_noise_hs74": [540, 1269], "estimate_noise_ivic13": [541, 1270], "find_neighbour_g": [542, 1271], "for_azimuth": [543, 1272], "assumpt": [543, 569, 1272, 1298], "get_column_rai": [544, 1273], "get_field_loc": [545, 1274], "get_ivic_flat_reg_var_max": [546, 1275], "get_ivic_pct": [547, 1276], "get_ivic_snr_thr": [548, 1277], "get_target_elev": [549, 1278], "grid_texture_2d": [550, 1279], "image_mute_radar": [551, 1280], "interpol_spectra": [552, 1281], "intersect": [553, 1282], "interval_mean": [554, 1283], "interval_std": [555, 1284], "is_vpt": [556, 1285], "ivic_flat_reg_var_max_t": [557, 1286], "ivic_flat_reg_wind_len_t": [558, 1287], "ivic_pct_t": [559, 1288], "ivic_snr_thr_t": [560, 1289], "join_radar": [561, 1290], "join_spectra": [562, 1291], "ma_broadcast_to": [563, 1292], "mean_of_two_angl": [564, 1293], "mean_of_two_angles_deg": [565, 1294], "radar_from_spectra": [566, 1295], "rolling_window": [567, 1296], "simulated_vel_from_profil": [568, 1297], "sphere_dist": [569, 1298], "paramet": [569, 1298], "subset_radar": [570, 1299], "subset_radar_spectra": [571, 1300], "textur": [572, 1301], "texture_along_rai": [573, 1302], "to_vpt": [574, 1303], "_debug_info": 575, "auxiliari": 576, "input": [576, 1006, 1310, 1311], "output": [576, 1006, 1310, 1311], "data": [576, 793, 830, 1006, 1312, 1313, 1353, 1354, 1355, 1356, 1357], "special": [576, 1006], "us": [576, 1006, 1308, 1316, 1336], "convert_data": 577, "get_librari": 579, "read_edge_netcdf": 589, "read_file_c": 590, "read_file_pi": 591, "read_knmi_grid_h5": 598, "read_mch_vad": 599, "read_product_c": 607, "read_product_pi": 608, "read_psr_cpi_head": 609, "read_psr_head": 610, "read_psr_spectra": 611, "read_sinarame_h5": 616, "other": [624, 721, 1355], "toolkit": [624, 1361], "phase": [624, 721], "function": [624, 721], "get_k": 631, "class": 639, "coordin": 639, "transform": 639, "veloc": [721, 1066, 1248, 1308, 1351, 1356], "unfold": 721, "attenu": [721, 1307, 1357], "process": [721, 1066, 1356], "helper": 721, "calculate_attenu": 750, "calculate_attenuation_philinear": 751, "calculate_attenuation_zphi": 752, "correct_bia": 755, "correct_noise_rhohv": 756, "correct_vis": 758, "correct_vpr": 759, "correct_vpr_spatialis": 760, "despeckle_field": 764, "est_rhohv_rain": 766, "est_zdr_precip": 767, "est_zdr_snow": 768, "gauss_fit": 770, "get_sun_hit": 772, "get_sun_hits_iv": 773, "get_sun_hits_psr": 774, "retrieval_result": 779, "selfconsistency_bia": 781, "selfconsistency_bias2": 782, "selfconsistency_kdp_phidp": 783, "sun_retriev": 791, "plot_convstrat_schem": 1005, "sond": 1006, "mutablemap": [1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052], "map": [1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1310, 1315, 1317, 1318, 1329, 1353], "gatemapp": [1054, 1055, 1056, 1057, 1316], "distance_toler": 1055, "mapped_radar": 1056, "time_toler": 1057, "example_roi_func_const": 1058, "example_roi_func_dist": 1059, "example_roi_func_dist_beam": 1060, "grid_from_radar": 1061, "grid_ppi_sweep": 1062, "grid_rhi_sweep": 1063, "map_gates_to_grid": 1064, "map_to_grid": 1065, "composit": [1066, 1341], "reflect": [1066, 1307, 1324, 1326, 1332, 1333, 1341], "melt": 1066, "layer": 1066, "ml": 1066, "detect": 1066, "kdp": [1066, 1357], "echo": 1066, "classif": [1066, 1342, 1343, 1357], "gate": 1066, "id": 1066, "simpl": 1066, "moment": [1066, 1306, 1310, 1325], "calcul": [1066, 1341, 1343, 1344], "qpe": [1066, 1357], "quantit": 1066, "precipit": 1066, "estim": [1066, 1248, 1357], "advect": 1066, "wind": [1066, 1356], "vad": [1066, 1344, 1356], "azimuth": [1066, 1356], "displai": [1066, 1356], "qvp": 1066, "quasi": 1066, "vertic": 1066, "profil": [1066, 1344], "spectra": 1066, "iq": 1066, "visibl": 1066, "intemporarydirectori": [1173, 1174], "cleanup": 1174, "get_test_data": 1234, "make_empty_grid": 1235, "make_empty_ppi_radar": 1236, "make_empty_rhi_radar": 1237, "make_empty_spectra_radar": 1238, "make_gaussian_storm_grid": 1239, "make_normal_storm": 1240, "make_single_ray_radar": 1241, "make_storm_grid": 1242, "make_target_grid": 1243, "make_target_radar": 1244, "make_target_spectra_radar": 1245, "make_velocity_aliased_radar": 1246, "make_velocity_aliased_rhi_radar": 1247, "circular": 1248, "statist": 1248, "datetim": 1248, "column": [1248, 1340], "section": [1248, 1322, 1337], "cross": [1248, 1322, 1337], "nois": [1248, 1357], "simul": 1248, "signal": 1248, "mathemat": 1248, "api": 1304, "manual": 1304, "changelog": 1305, "v1": 1305, "9": 1305, "2": [1305, 1312, 1313], "0": 1305, "8": 1305, "7": 1305, "6": 1305, "5": 1305, "4": 1305, "3": [1305, 1312, 1336], "1": 1305, "new": 1305, "addit": 1305, "dealia": 1308, "doppler": [1308, 1356], "region": 1308, "base": 1308, "algorithm": [1308, 1342], "comput": [1309, 1314, 1319, 1338, 1345, 1346, 1359], "time": [1309, 1314, 1319, 1338, 1345, 1346, 1359], "galleri": [1310, 1348], "nexrad": [1312, 1313, 1325, 1326], "from": [1312, 1322, 1325, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1337, 1356, 1360], "aw": 1312, "cloud": 1312, "level": [1312, 1313], "older": 1313, "fix": 1313, "latitud": 1313, "longitud": 1313, "issu": 1313, "compar": 1316, "two": [1316, 1318, 1335], "singl": 1317, "cartesian": [1317, 1318, 1353, 1355], "choos": 1321, "colormap": 1321, "your": [1321, 1323], "modifi": 1323, "colorbar": 1323, "creat": [1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1349, 1363], "an": [1324, 1332, 1333, 1363], "imag": 1324, "mute": 1324, "multipl": [1325, 1330, 1331], "file": [1325, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1349, 1350, 1355, 1361], "ppi": [1327, 1328, 1329, 1337], "cfradial": 1327, "mdv": [1328, 1332, 1333, 1334], "cartopi": 1329, "panel": [1330, 1331, 1335, 1336], "rhi": [1330, 1331, 1332, 1333, 1334, 1335], "cf": [1330, 1331], "radial": [1330, 1331], "contour": [1332, 1333], "line": [1332, 1333], "volum": 1337, "extract": 1340, "abov": 1340, "point": 1340, "convect": 1342, "stratiform": 1342, "how": 1342, "work": 1342, "summari": 1342, "recommend": 1342, "best": 1342, "practic": 1342, "refer": 1342, "hydrometeor": [1343, 1357], "about": 1347, "meteoswiss": [1347, 1355], "fork": 1347, "py": [1347, 1354, 1355, 1358, 1361], "art": [1347, 1354, 1355, 1358, 1361], "cite": [1347, 1361], "what": 1347, "can": 1347, "do": 1347, "short": 1347, "cours": 1347, "instal": [1347, 1360, 1361], "depend": [1347, 1360, 1363], "option": [1347, 1360, 1363], "help": 1347, "contribut": 1347, "notebook": 1348, "basic": 1349, "ingest": 1349, "netcdf": 1349, "field": 1350, "manipul": 1350, "save": 1350, "object": [1350, 1358], "dealias": [1351, 1356], "mask": 1354, "With": 1354, "metranet": 1355, "polar": 1355, "low": 1355, "re": 1355, "mlx": 1355, "high": 1355, "mhx": 1355, "product": 1355, "swiss": [1356, 1357], "volumetr": 1356, "scan": 1356, "cappi": 1356, "raw": 1357, "c": 1357, "band": 1357, "ground": 1357, "clutter": 1357, "remov": 1357, "The": [1358, 1361], "index": 1358, "requir": 1360, "obtain": 1360, "latest": 1360, "sourc": 1360, "frequent": 1360, "ask": 1360, "question": 1360, "contributor": 1361, "": 1361, "guid": [1361, 1362], "python": 1361, "arm": 1361, "import": 1361, "link": 1361, "resourc": 1361, "code": 1361, "style": 1361, "setup": 1361, "github": 1361, "blog": 1361, "post": 1361, "user": 1362, "set": 1363, "up": 1363, "environ": 1363, "anaconda": 1363, "channel": 1363, "ad": 1363, "path": 1363, "more": 1363, "inform": 1363}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart.aux_io.extract_sweeps_skyecho": [[0, "pyart-aux-io-extract-sweeps-skyecho"], [578, "pyart-aux-io-extract-sweeps-skyecho"]], "pyart.aux_io.get_sweep_time_coverage": [[1, "pyart-aux-io-get-sweep-time-coverage"], [580, "pyart-aux-io-get-sweep-time-coverage"]], "pyart.aux_io.read_bin": [[2, "pyart-aux-io-read-bin"], [581, "pyart-aux-io-read-bin"]], "pyart.aux_io.read_bin_mf": [[3, "pyart-aux-io-read-bin-mf"], [582, "pyart-aux-io-read-bin-mf"]], "pyart.aux_io.read_cartesian_metranet": [[4, "pyart-aux-io-read-cartesian-metranet"], [583, "pyart-aux-io-read-cartesian-metranet"]], "pyart.aux_io.read_cf1": [[5, "pyart-aux-io-read-cf1"], [584, "pyart-aux-io-read-cf1"]], "pyart.aux_io.read_cf1_cartesian": [[6, "pyart-aux-io-read-cf1-cartesian"], [585, "pyart-aux-io-read-cf1-cartesian"]], "pyart.aux_io.read_cf1_cartesian_mf": [[7, "pyart-aux-io-read-cf1-cartesian-mf"], [586, "pyart-aux-io-read-cf1-cartesian-mf"]], "pyart.aux_io.read_d3r_gcpex_nc": [[8, "pyart-aux-io-read-d3r-gcpex-nc"], [587, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_dat_mf": [[9, "pyart-aux-io-read-dat-mf"], [588, "pyart-aux-io-read-dat-mf"]], "pyart.aux_io.read_gamic": [[10, "pyart-aux-io-read-gamic"], [592, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_gif": [[11, "pyart-aux-io-read-gif"], [593, "pyart-aux-io-read-gif"]], "pyart.aux_io.read_grib": [[12, "pyart-aux-io-read-grib"], [594, "pyart-aux-io-read-grib"]], "pyart.aux_io.read_hpl": [[13, "pyart-aux-io-read-hpl"], [595, "pyart-aux-io-read-hpl"]], "pyart.aux_io.read_iq": [[14, "pyart-aux-io-read-iq"], [596, "pyart-aux-io-read-iq"]], "pyart.aux_io.read_kazr": [[15, "pyart-aux-io-read-kazr"], [597, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_metranet": [[16, "pyart-aux-io-read-metranet"], [600, "pyart-aux-io-read-metranet"]], "pyart.aux_io.read_noxp_iphex_nc": [[17, "pyart-aux-io-read-noxp-iphex-nc"], [601, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_grid_h5": [[18, "pyart-aux-io-read-odim-grid-h5"], [602, "pyart-aux-io-read-odim-grid-h5"]], "pyart.aux_io.read_odim_h5": [[19, "pyart-aux-io-read-odim-h5"], [603, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_odim_vp_h5": [[20, "pyart-aux-io-read-odim-vp-h5"], [604, "pyart-aux-io-read-odim-vp-h5"]], "pyart.aux_io.read_pattern": [[21, "pyart-aux-io-read-pattern"], [605, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_png": [[22, "pyart-aux-io-read-png"], [606, "pyart-aux-io-read-png"]], "pyart.aux_io.read_radx": [[23, "pyart-aux-io-read-radx"], [612, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_rainbow_psr": [[24, "pyart-aux-io-read-rainbow-psr"], [613, "pyart-aux-io-read-rainbow-psr"]], "pyart.aux_io.read_rainbow_psr_spectra": [[25, "pyart-aux-io-read-rainbow-psr-spectra"], [614, "pyart-aux-io-read-rainbow-psr-spectra"]], "pyart.aux_io.read_rainbow_wrl": [[26, "pyart-aux-io-read-rainbow-wrl"], [615, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_skyecho": [[27, "pyart-aux-io-read-skyecho"], [617, "pyart-aux-io-read-skyecho"]], "pyart.aux_io.read_spectra": [[28, "pyart-aux-io-read-spectra"], [618, "pyart-aux-io-read-spectra"]], "pyart.aux_io.read_swissbirdradar_spectra": [[29, "pyart-aux-io-read-swissbirdradar-spectra"], [619, "pyart-aux-io-read-swissbirdradar-spectra"]], "pyart.aux_io.write_odim_grid_h5": [[30, "pyart-aux-io-write-odim-grid-h5"], [620, "pyart-aux-io-write-odim-grid-h5"]], "pyart.aux_io.write_odim_h5": [[31, "pyart-aux-io-write-odim-h5"], [621, "pyart-aux-io-write-odim-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[32, "pyart-aux-io-write-sinarame-cfradial"], [622, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.aux_io.write_spectra": [[33, "pyart-aux-io-write-spectra"], [623, "pyart-aux-io-write-spectra"]], "pyart.bridge.texture_of_complex_phase": [[34, "pyart-bridge-texture-of-complex-phase"], [625, "pyart-bridge-texture-of-complex-phase"]], "pyart.config.FileMetadata": [[35, "pyart-config-filemetadata"], [627, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[36, "pyart-config-filemetadata-call"], [628, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[37, "pyart-config-filemetadata-get-field-name"], [629, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[38, "pyart-config-filemetadata-get-metadata"], [630, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[39, "pyart-config-get-field-colormap"], [632, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[40, "pyart-config-get-field-limits"], [633, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[41, "pyart-config-get-field-mapping"], [634, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[42, "pyart-config-get-field-name"], [635, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[43, "pyart-config-get-fillvalue"], [636, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[44, "pyart-config-get-metadata"], [637, "pyart-config-get-metadata"]], "pyart.config.load_config": [[45, "pyart-config-load-config"], [638, "pyart-config-load-config"]], "pyart.core.Grid": [[46, "pyart-core-grid"], [640, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[47, "pyart-core-grid-add-field"], [641, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[48, "pyart-core-grid-get-point-longitude-latitude"], [642, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[49, "pyart-core-grid-get-projparams"], [643, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[50, "pyart-core-grid-init-point-altitude"], [644, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[51, "pyart-core-grid-init-point-longitude-latitude"], [645, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[52, "pyart-core-grid-init-point-x-y-z"], [646, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[53, "pyart-core-grid-projection-proj"], [647, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[54, "pyart-core-grid-to-xarray"], [648, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[55, "pyart-core-grid-write"], [649, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[56, "pyart-core-horizontalwindprofile"], [650, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[57, "pyart-core-horizontalwindprofile-from-u-and-v"], [651, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[58, "pyart-core-horizontalwindprofile-u-wind"], [652, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[59, "pyart-core-horizontalwindprofile-v-wind"], [653, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[60, "pyart-core-radar"], [654, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[61, "pyart-core-radar-add-field"], [655, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[62, "pyart-core-radar-add-field-like"], [656, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[63, "pyart-core-radar-add-filter"], [657, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[64, "pyart-core-radar-check-field-exists"], [658, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[65, "pyart-core-radar-extract-sweeps"], [659, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[66, "pyart-core-radar-get-azimuth"], [660, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[67, "pyart-core-radar-get-elevation"], [661, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[68, "pyart-core-radar-get-end"], [662, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[69, "pyart-core-radar-get-field"], [663, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[70, "pyart-core-radar-get-gate-area"], [664, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[71, "pyart-core-radar-get-gate-lat-lon-alt"], [665, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[72, "pyart-core-radar-get-gate-x-y-z"], [666, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[73, "pyart-core-radar-get-nyquist-vel"], [667, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[74, "pyart-core-radar-get-slice"], [668, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[75, "pyart-core-radar-get-start"], [669, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[76, "pyart-core-radar-get-start-end"], [670, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[77, "pyart-core-radar-info"], [671, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[78, "pyart-core-radar-init-gate-altitude"], [672, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[79, "pyart-core-radar-init-gate-longitude-latitude"], [673, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[80, "pyart-core-radar-init-gate-x-y-z"], [674, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[81, "pyart-core-radar-init-rays-per-sweep"], [675, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[82, "pyart-core-radar-iter-azimuth"], [676, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[83, "pyart-core-radar-iter-elevation"], [677, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[84, "pyart-core-radar-iter-end"], [678, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[85, "pyart-core-radar-iter-field"], [679, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[86, "pyart-core-radar-iter-slice"], [680, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[87, "pyart-core-radar-iter-start"], [681, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[88, "pyart-core-radar-iter-start-end"], [682, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[89, "pyart-core-radarspectra"], [683, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.add_field": [[90, "pyart-core-radarspectra-add-field"], [684, "pyart-core-radarspectra-add-field"]], "pyart.core.RadarSpectra.add_field_like": [[91, "pyart-core-radarspectra-add-field-like"], [685, "pyart-core-radarspectra-add-field-like"]], "pyart.core.RadarSpectra.add_filter": [[92, "pyart-core-radarspectra-add-filter"], [686, "pyart-core-radarspectra-add-filter"]], "pyart.core.RadarSpectra.check_field_exists": [[93, "pyart-core-radarspectra-check-field-exists"], [687, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.extract_sweeps": [[94, "pyart-core-radarspectra-extract-sweeps"], [688, "pyart-core-radarspectra-extract-sweeps"]], "pyart.core.RadarSpectra.get_azimuth": [[95, "pyart-core-radarspectra-get-azimuth"], [689, "pyart-core-radarspectra-get-azimuth"]], "pyart.core.RadarSpectra.get_elevation": [[96, "pyart-core-radarspectra-get-elevation"], [690, "pyart-core-radarspectra-get-elevation"]], "pyart.core.RadarSpectra.get_end": [[97, "pyart-core-radarspectra-get-end"], [691, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_field": [[98, "pyart-core-radarspectra-get-field"], [692, "pyart-core-radarspectra-get-field"]], "pyart.core.RadarSpectra.get_gate_area": [[99, "pyart-core-radarspectra-get-gate-area"], [693, "pyart-core-radarspectra-get-gate-area"]], "pyart.core.RadarSpectra.get_gate_lat_lon_alt": [[100, "pyart-core-radarspectra-get-gate-lat-lon-alt"], [694, "pyart-core-radarspectra-get-gate-lat-lon-alt"]], "pyart.core.RadarSpectra.get_gate_x_y_z": [[101, "pyart-core-radarspectra-get-gate-x-y-z"], [695, "pyart-core-radarspectra-get-gate-x-y-z"]], "pyart.core.RadarSpectra.get_nyquist_vel": [[102, "pyart-core-radarspectra-get-nyquist-vel"], [696, "pyart-core-radarspectra-get-nyquist-vel"]], "pyart.core.RadarSpectra.get_slice": [[103, "pyart-core-radarspectra-get-slice"], [697, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[104, "pyart-core-radarspectra-get-start"], [698, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[105, "pyart-core-radarspectra-get-start-end"], [699, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.info": [[106, "pyart-core-radarspectra-info"], [700, "pyart-core-radarspectra-info"]], "pyart.core.RadarSpectra.init_gate_altitude": [[107, "pyart-core-radarspectra-init-gate-altitude"], [701, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[108, "pyart-core-radarspectra-init-gate-longitude-latitude"], [702, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[109, "pyart-core-radarspectra-init-gate-x-y-z"], [703, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[110, "pyart-core-radarspectra-init-rays-per-sweep"], [704, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[111, "pyart-core-radarspectra-iter-azimuth"], [705, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[112, "pyart-core-radarspectra-iter-elevation"], [706, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[113, "pyart-core-radarspectra-iter-end"], [707, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[114, "pyart-core-radarspectra-iter-field"], [708, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[115, "pyart-core-radarspectra-iter-slice"], [709, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[116, "pyart-core-radarspectra-iter-start"], [710, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[117, "pyart-core-radarspectra-iter-start-end"], [711, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.antenna_to_cartesian": [[118, "pyart-core-antenna-to-cartesian"], [712, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[119, "pyart-core-antenna-vectors-to-cartesian"], [713, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[120, "pyart-core-cartesian-to-antenna"], [714, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"], [715, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"], [716, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"], [717, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"], [718, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"], [719, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.core.wgs84_to_swissCH1903": [[126, "pyart-core-wgs84-to-swissch1903"], [720, "pyart-core-wgs84-to-swissch1903"]], "Test example": [[126, "test-example"], [720, "test-example"]], "pyart.correct.compute_apparent_vpr": [[127, "pyart-correct-compute-apparent-vpr"], [753, "pyart-correct-compute-apparent-vpr"]], "pyart.correct.compute_theoretical_vpr": [[128, "pyart-correct-compute-theoretical-vpr"], [754, "pyart-correct-compute-theoretical-vpr"]], "pyart.correct.correct_sys_phase": [[129, "pyart-correct-correct-sys-phase"], [757, "pyart-correct-correct-sys-phase"]], "pyart.correct.dealias_fourdd": [[130, "pyart-correct-dealias-fourdd"], [761, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[131, "pyart-correct-dealias-region-based"], [762, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[132, "pyart-correct-dealias-unwrap-phase"], [763, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.det_sys_phase_ray": [[133, "pyart-correct-det-sys-phase-ray"], [765, "pyart-correct-det-sys-phase-ray"]], "pyart.correct.find_objects": [[134, "pyart-correct-find-objects"], [769, "pyart-correct-find-objects"]], "pyart.correct.get_mask_fzl": [[135, "pyart-correct-get-mask-fzl"], [771, "pyart-correct-get-mask-fzl"]], "pyart.correct.phase_proc_lp": [[136, "pyart-correct-phase-proc-lp"], [776, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[137, "pyart-correct-phase-proc-lp-gf"], [777, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.ptoa_to_sf": [[138, "pyart-correct-ptoa-to-sf"], [778, "pyart-correct-ptoa-to-sf"]], "pyart.correct.scanning_losses": [[139, "pyart-correct-scanning-losses"], [780, "pyart-correct-scanning-losses"]], "pyart.correct.smooth_masked": [[140, "pyart-correct-smooth-masked"], [784, "pyart-correct-smooth-masked"]], "pyart.correct.smooth_phidp_double_window": [[141, "pyart-correct-smooth-phidp-double-window"], [785, "pyart-correct-smooth-phidp-double-window"]], "pyart.correct.smooth_phidp_single_window": [[142, "pyart-correct-smooth-phidp-single-window"], [786, "pyart-correct-smooth-phidp-single-window"]], "pyart.correct.solar_flux_lookup": [[143, "pyart-correct-solar-flux-lookup"], [787, "pyart-correct-solar-flux-lookup"]], "pyart.correct.sun_position_mfr": [[144, "pyart-correct-sun-position-mfr"], [788, "pyart-correct-sun-position-mfr"]], "pyart.correct.sun_position_pysolar": [[145, "pyart-correct-sun-position-pysolar"], [789, "pyart-correct-sun-position-pysolar"]], "pyart.correct.sun_power": [[146, "pyart-correct-sun-power"], [790, "pyart-correct-sun-power"]], "pyart.exceptions.DeprecatedAttribute": [[147, "pyart-exceptions-deprecatedattribute"]], "pyart.exceptions.DeprecatedFunctionName": [[148, "pyart-exceptions-deprecatedfunctionname"]], "pyart.exceptions.MissingOptionalDependency": [[149, "pyart-exceptions-missingoptionaldependency"]], "pyart.exceptions._deprecated_alias": [[150, "pyart-exceptions-deprecated-alias"]], "pyart.filters.GateFilter": [[151, "pyart-filters-gatefilter"], [794, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[152, "pyart-filters-gatefilter-copy"], [795, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[153, "pyart-filters-gatefilter-exclude-above"], [796, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[154, "pyart-filters-gatefilter-exclude-all"], [797, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[155, "pyart-filters-gatefilter-exclude-below"], [798, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[156, "pyart-filters-gatefilter-exclude-equal"], [799, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[157, "pyart-filters-gatefilter-exclude-gates"], [800, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[158, "pyart-filters-gatefilter-exclude-inside"], [801, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[159, "pyart-filters-gatefilter-exclude-invalid"], [802, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[160, "pyart-filters-gatefilter-exclude-masked"], [803, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[161, "pyart-filters-gatefilter-exclude-none"], [804, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[162, "pyart-filters-gatefilter-exclude-not-equal"], [805, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[163, "pyart-filters-gatefilter-exclude-outside"], [806, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[164, "pyart-filters-gatefilter-exclude-transition"], [807, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[165, "pyart-filters-gatefilter-gate-excluded"], [808, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[166, "pyart-filters-gatefilter-gate-included"], [809, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[167, "pyart-filters-gatefilter-include-above"], [810, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[168, "pyart-filters-gatefilter-include-all"], [811, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[169, "pyart-filters-gatefilter-include-below"], [812, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[170, "pyart-filters-gatefilter-include-equal"], [813, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[171, "pyart-filters-gatefilter-include-gates"], [814, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[172, "pyart-filters-gatefilter-include-inside"], [815, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[173, "pyart-filters-gatefilter-include-none"], [816, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[174, "pyart-filters-gatefilter-include-not-equal"], [817, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[175, "pyart-filters-gatefilter-include-not-masked"], [818, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[176, "pyart-filters-gatefilter-include-not-transition"], [819, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[177, "pyart-filters-gatefilter-include-outside"], [820, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[178, "pyart-filters-gatefilter-include-valid"], [821, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.birds_gate_filter": [[179, "pyart-filters-birds-gate-filter"], [822, "pyart-filters-birds-gate-filter"]], "pyart.filters.class_based_gate_filter": [[180, "pyart-filters-class-based-gate-filter"], [823, "pyart-filters-class-based-gate-filter"]], "pyart.filters.iso0_based_gate_filter": [[181, "pyart-filters-iso0-based-gate-filter"], [824, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[182, "pyart-filters-moment-and-texture-based-gate-filter"], [825, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[183, "pyart-filters-moment-based-gate-filter"], [826, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.snr_based_gate_filter": [[184, "pyart-filters-snr-based-gate-filter"], [827, "pyart-filters-snr-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[185, "pyart-filters-temp-based-gate-filter"], [828, "pyart-filters-temp-based-gate-filter"]], "pyart.filters.visibility_based_gate_filter": [[186, "pyart-filters-visibility-based-gate-filter"], [829, "pyart-filters-visibility-based-gate-filter"]], "pyart.graph.AirborneRadarDisplay": [[187, "pyart-graph-airborneradardisplay"], [831, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[188, "pyart-graph-airborneradardisplay-generate-az-rhi-title"], [832, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[189, "pyart-graph-airborneradardisplay-generate-filename"], [833, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[190, "pyart-graph-airborneradardisplay-generate-ray-title"], [834, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[191, "pyart-graph-airborneradardisplay-generate-title"], [835, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[192, "pyart-graph-airborneradardisplay-generate-vpt-title"], [836, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.generate_xsection_title": [[193, "pyart-graph-airborneradardisplay-generate-xsection-title"], [837, "pyart-graph-airborneradardisplay-generate-xsection-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[194, "pyart-graph-airborneradardisplay-label-xaxis-r"], [838, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[195, "pyart-graph-airborneradardisplay-label-xaxis-rays"], [839, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[196, "pyart-graph-airborneradardisplay-label-xaxis-time"], [840, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[197, "pyart-graph-airborneradardisplay-label-xaxis-x"], [841, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection": [[198, "pyart-graph-airborneradardisplay-label-xaxis-xsection"], [842, "pyart-graph-airborneradardisplay-label-xaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[199, "pyart-graph-airborneradardisplay-label-yaxis-field"], [843, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection": [[200, "pyart-graph-airborneradardisplay-label-yaxis-xsection"], [844, "pyart-graph-airborneradardisplay-label-yaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[201, "pyart-graph-airborneradardisplay-label-yaxis-y"], [845, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[202, "pyart-graph-airborneradardisplay-label-yaxis-z"], [846, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[203, "pyart-graph-airborneradardisplay-plot"], [847, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[204, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"], [848, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[205, "pyart-graph-airborneradardisplay-plot-colorbar"], [849, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[206, "pyart-graph-airborneradardisplay-plot-cr-raster"], [850, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[207, "pyart-graph-airborneradardisplay-plot-cross-hair"], [851, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[208, "pyart-graph-airborneradardisplay-plot-grid-lines"], [852, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[209, "pyart-graph-airborneradardisplay-plot-label"], [853, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[210, "pyart-graph-airborneradardisplay-plot-labels"], [854, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[211, "pyart-graph-airborneradardisplay-plot-ppi"], [855, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[212, "pyart-graph-airborneradardisplay-plot-range-ring"], [856, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[213, "pyart-graph-airborneradardisplay-plot-range-rings"], [857, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[214, "pyart-graph-airborneradardisplay-plot-ray"], [858, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[215, "pyart-graph-airborneradardisplay-plot-rhi"], [859, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[216, "pyart-graph-airborneradardisplay-plot-sweep-grid"], [860, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[217, "pyart-graph-airborneradardisplay-plot-vpt"], [861, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.plot_xsection": [[218, "pyart-graph-airborneradardisplay-plot-xsection"], [862, "pyart-graph-airborneradardisplay-plot-xsection"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[219, "pyart-graph-airborneradardisplay-set-aspect-ratio"], [863, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[220, "pyart-graph-airborneradardisplay-set-limits"], [864, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[221, "pyart-graph-gridmapdisplay"], [865, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[222, "pyart-graph-gridmapdisplay-cartopy-coastlines"], [866, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[223, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"], [867, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[224, "pyart-graph-gridmapdisplay-cartopy-states"], [868, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[225, "pyart-graph-gridmapdisplay-generate-filename"], [869, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[226, "pyart-graph-gridmapdisplay-generate-grid-title"], [870, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[227, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"], [871, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[228, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"], [872, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[229, "pyart-graph-gridmapdisplay-plot-colorbar"], [873, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[230, "pyart-graph-gridmapdisplay-plot-cross-section"], [874, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_cross_section_level": [[231, "pyart-graph-gridmapdisplay-plot-cross-section-level"], [875, "pyart-graph-gridmapdisplay-plot-cross-section-level"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[232, "pyart-graph-gridmapdisplay-plot-crosshairs"], [876, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[233, "pyart-graph-gridmapdisplay-plot-grid"], [877, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_grid_contour": [[234, "pyart-graph-gridmapdisplay-plot-grid-contour"], [878, "pyart-graph-gridmapdisplay-plot-grid-contour"]], "pyart.graph.GridMapDisplay.plot_grid_raw": [[235, "pyart-graph-gridmapdisplay-plot-grid-raw"], [879, "pyart-graph-gridmapdisplay-plot-grid-raw"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[236, "pyart-graph-gridmapdisplay-plot-latitude-slice"], [880, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[237, "pyart-graph-gridmapdisplay-plot-latitudinal-level"], [881, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[238, "pyart-graph-gridmapdisplay-plot-longitude-slice"], [882, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[239, "pyart-graph-gridmapdisplay-plot-longitudinal-level"], [883, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[240, "pyart-graph-gridmapdisplaybasemap"], [884, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[241, "pyart-graph-gridmapdisplaybasemap-generate-filename"], [885, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[242, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"], [886, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[243, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"], [887, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[244, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"], [888, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[245, "pyart-graph-gridmapdisplaybasemap-get-basemap"], [889, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[246, "pyart-graph-gridmapdisplaybasemap-plot-basemap"], [890, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[247, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"], [891, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[248, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"], [892, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[249, "pyart-graph-gridmapdisplaybasemap-plot-grid"], [893, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[250, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"], [894, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[251, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"], [895, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[252, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"], [896, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[253, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"], [897, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[254, "pyart-graph-radardisplay"], [898, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[255, "pyart-graph-radardisplay-generate-az-rhi-title"], [899, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[256, "pyart-graph-radardisplay-generate-filename"], [900, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[257, "pyart-graph-radardisplay-generate-ray-title"], [901, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[258, "pyart-graph-radardisplay-generate-title"], [902, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[259, "pyart-graph-radardisplay-generate-vpt-title"], [903, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.generate_xsection_title": [[260, "pyart-graph-radardisplay-generate-xsection-title"], [904, "pyart-graph-radardisplay-generate-xsection-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[261, "pyart-graph-radardisplay-label-xaxis-r"], [905, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[262, "pyart-graph-radardisplay-label-xaxis-rays"], [906, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[263, "pyart-graph-radardisplay-label-xaxis-time"], [907, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[264, "pyart-graph-radardisplay-label-xaxis-x"], [908, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_xaxis_xsection": [[265, "pyart-graph-radardisplay-label-xaxis-xsection"], [909, "pyart-graph-radardisplay-label-xaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[266, "pyart-graph-radardisplay-label-yaxis-field"], [910, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_xsection": [[267, "pyart-graph-radardisplay-label-yaxis-xsection"], [911, "pyart-graph-radardisplay-label-yaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[268, "pyart-graph-radardisplay-label-yaxis-y"], [912, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[269, "pyart-graph-radardisplay-label-yaxis-z"], [913, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[270, "pyart-graph-radardisplay-plot"], [914, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[271, "pyart-graph-radardisplay-plot-azimuth-to-rhi"], [915, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[272, "pyart-graph-radardisplay-plot-colorbar"], [916, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[273, "pyart-graph-radardisplay-plot-cr-raster"], [917, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[274, "pyart-graph-radardisplay-plot-cross-hair"], [918, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[275, "pyart-graph-radardisplay-plot-grid-lines"], [919, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[276, "pyart-graph-radardisplay-plot-label"], [920, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[277, "pyart-graph-radardisplay-plot-labels"], [921, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[278, "pyart-graph-radardisplay-plot-ppi"], [922, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[279, "pyart-graph-radardisplay-plot-range-ring"], [923, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[280, "pyart-graph-radardisplay-plot-range-rings"], [924, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[281, "pyart-graph-radardisplay-plot-ray"], [925, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[282, "pyart-graph-radardisplay-plot-rhi"], [926, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[283, "pyart-graph-radardisplay-plot-vpt"], [927, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.plot_xsection": [[284, "pyart-graph-radardisplay-plot-xsection"], [928, "pyart-graph-radardisplay-plot-xsection"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[285, "pyart-graph-radardisplay-set-aspect-ratio"], [929, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[286, "pyart-graph-radardisplay-set-limits"], [930, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[287, "pyart-graph-radarmapdisplay"], [931, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[288, "pyart-graph-radarmapdisplay-generate-az-rhi-title"], [932, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[289, "pyart-graph-radarmapdisplay-generate-filename"], [933, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[290, "pyart-graph-radarmapdisplay-generate-ray-title"], [934, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[291, "pyart-graph-radarmapdisplay-generate-title"], [935, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[292, "pyart-graph-radarmapdisplay-generate-vpt-title"], [936, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.generate_xsection_title": [[293, "pyart-graph-radarmapdisplay-generate-xsection-title"], [937, "pyart-graph-radarmapdisplay-generate-xsection-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[294, "pyart-graph-radarmapdisplay-label-xaxis-r"], [938, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[295, "pyart-graph-radarmapdisplay-label-xaxis-rays"], [939, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[296, "pyart-graph-radarmapdisplay-label-xaxis-time"], [940, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[297, "pyart-graph-radarmapdisplay-label-xaxis-x"], [941, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_xaxis_xsection": [[298, "pyart-graph-radarmapdisplay-label-xaxis-xsection"], [942, "pyart-graph-radarmapdisplay-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[299, "pyart-graph-radarmapdisplay-label-yaxis-field"], [943, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_xsection": [[300, "pyart-graph-radarmapdisplay-label-yaxis-xsection"], [944, "pyart-graph-radarmapdisplay-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[301, "pyart-graph-radarmapdisplay-label-yaxis-y"], [945, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[302, "pyart-graph-radarmapdisplay-label-yaxis-z"], [946, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[303, "pyart-graph-radarmapdisplay-plot"], [947, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[304, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"], [948, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[305, "pyart-graph-radarmapdisplay-plot-colorbar"], [949, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[306, "pyart-graph-radarmapdisplay-plot-cr-raster"], [950, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[307, "pyart-graph-radarmapdisplay-plot-cross-hair"], [951, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[308, "pyart-graph-radarmapdisplay-plot-grid-lines"], [952, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[309, "pyart-graph-radarmapdisplay-plot-label"], [953, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[310, "pyart-graph-radarmapdisplay-plot-labels"], [954, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[311, "pyart-graph-radarmapdisplay-plot-line-geo"], [955, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[312, "pyart-graph-radarmapdisplay-plot-line-xy"], [956, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[313, "pyart-graph-radarmapdisplay-plot-point"], [957, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[314, "pyart-graph-radarmapdisplay-plot-ppi"], [958, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[315, "pyart-graph-radarmapdisplay-plot-ppi-map"], [959, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[316, "pyart-graph-radarmapdisplay-plot-range-ring"], [960, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[317, "pyart-graph-radarmapdisplay-plot-range-rings"], [961, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[318, "pyart-graph-radarmapdisplay-plot-ray"], [962, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[319, "pyart-graph-radarmapdisplay-plot-rhi"], [963, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[320, "pyart-graph-radarmapdisplay-plot-vpt"], [964, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.plot_xsection": [[321, "pyart-graph-radarmapdisplay-plot-xsection"], [965, "pyart-graph-radarmapdisplay-plot-xsection"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[322, "pyart-graph-radarmapdisplay-set-aspect-ratio"], [966, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[323, "pyart-graph-radarmapdisplay-set-limits"], [967, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[324, "pyart-graph-radarmapdisplaybasemap"], [968, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[325, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"], [969, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[326, "pyart-graph-radarmapdisplaybasemap-generate-filename"], [970, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[327, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"], [971, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[328, "pyart-graph-radarmapdisplaybasemap-generate-title"], [972, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[329, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"], [973, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title": [[330, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"], [974, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[331, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"], [975, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[332, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"], [976, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[333, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"], [977, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[334, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"], [978, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection": [[335, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"], [979, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[336, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"], [980, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection": [[337, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"], [981, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[338, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"], [982, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[339, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"], [983, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[340, "pyart-graph-radarmapdisplaybasemap-plot"], [984, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[341, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"], [985, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[342, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"], [986, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[343, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"], [987, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[344, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"], [988, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[345, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"], [989, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[346, "pyart-graph-radarmapdisplaybasemap-plot-label"], [990, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[347, "pyart-graph-radarmapdisplaybasemap-plot-labels"], [991, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[348, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"], [992, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[349, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"], [993, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[350, "pyart-graph-radarmapdisplaybasemap-plot-point"], [994, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[351, "pyart-graph-radarmapdisplaybasemap-plot-ppi"], [995, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[352, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"], [996, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[353, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"], [997, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[354, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"], [998, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[355, "pyart-graph-radarmapdisplaybasemap-plot-ray"], [999, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[356, "pyart-graph-radarmapdisplaybasemap-plot-rhi"], [1000, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[357, "pyart-graph-radarmapdisplaybasemap-plot-vpt"], [1001, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.plot_xsection": [[358, "pyart-graph-radarmapdisplaybasemap-plot-xsection"], [1002, "pyart-graph-radarmapdisplaybasemap-plot-xsection"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[359, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"], [1003, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[360, "pyart-graph-radarmapdisplaybasemap-set-limits"], [1004, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.io.make_time_unit_str": [[361, "pyart-io-make-time-unit-str"], [1007, "pyart-io-make-time-unit-str"]], "pyart.io.prepare_for_read": [[362, "pyart-io-prepare-for-read"], [1008, "pyart-io-prepare-for-read"]], "pyart.io.read": [[363, "pyart-io-read"], [1009, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[364, "pyart-io-read-arm-sonde"], [1010, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[365, "pyart-io-read-arm-sonde-vap"], [1011, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[366, "pyart-io-read-cfradial"], [1012, "pyart-io-read-cfradial"]], "pyart.io.read_cfradial2": [[367, "pyart-io-read-cfradial2"], [1013, "pyart-io-read-cfradial2"]], "pyart.io.read_chl": [[368, "pyart-io-read-chl"], [1014, "pyart-io-read-chl"]], "pyart.io.read_grid": [[369, "pyart-io-read-grid"], [1015, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[370, "pyart-io-read-grid-mdv"], [1016, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[371, "pyart-io-read-mdv"], [1017, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[372, "pyart-io-read-nexrad-archive"], [1018, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[373, "pyart-io-read-nexrad-cdm"], [1019, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[374, "pyart-io-read-nexrad-level3"], [1020, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[375, "pyart-io-read-rsl"], [1021, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[376, "pyart-io-read-sigmet"], [1022, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[377, "pyart-io-read-uf"], [1023, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[378, "pyart-io-write-cfradial"], [1024, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[379, "pyart-io-write-grid"], [1025, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[380, "pyart-io-write-grid-geotiff"], [1026, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[381, "pyart-io-write-grid-mdv"], [1027, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[382, "pyart-io-write-uf"], [1028, "pyart-io-write-uf"]], "pyart.lazydict.LazyLoadDict": [[383, "pyart-lazydict-lazyloaddict"], [1030, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.__contains__": [[384, "pyart-lazydict-lazyloaddict-contains"]], "pyart.lazydict.LazyLoadDict.__delattr__": [[385, "pyart-lazydict-lazyloaddict-delattr"]], "pyart.lazydict.LazyLoadDict.__delitem__": [[386, "pyart-lazydict-lazyloaddict-delitem"]], "pyart.lazydict.LazyLoadDict.__dir__": [[387, "pyart-lazydict-lazyloaddict-dir"]], "pyart.lazydict.LazyLoadDict.__eq__": [[388, "pyart-lazydict-lazyloaddict-eq"]], "pyart.lazydict.LazyLoadDict.__format__": [[389, "pyart-lazydict-lazyloaddict-format"]], "pyart.lazydict.LazyLoadDict.__ge__": [[390, "pyart-lazydict-lazyloaddict-ge"]], "pyart.lazydict.LazyLoadDict.__getattribute__": [[391, "pyart-lazydict-lazyloaddict-getattribute"]], "pyart.lazydict.LazyLoadDict.__getitem__": [[392, "pyart-lazydict-lazyloaddict-getitem"]], "pyart.lazydict.LazyLoadDict.__getstate__": [[393, "pyart-lazydict-lazyloaddict-getstate"]], "pyart.lazydict.LazyLoadDict.__gt__": [[394, "pyart-lazydict-lazyloaddict-gt"]], "pyart.lazydict.LazyLoadDict.__init__": [[395, "pyart-lazydict-lazyloaddict-init"]], "pyart.lazydict.LazyLoadDict.__init_subclass__": [[396, "pyart-lazydict-lazyloaddict-init-subclass"]], "pyart.lazydict.LazyLoadDict.__iter__": [[397, "pyart-lazydict-lazyloaddict-iter"]], "pyart.lazydict.LazyLoadDict.__le__": [[398, "pyart-lazydict-lazyloaddict-le"]], "pyart.lazydict.LazyLoadDict.__len__": [[399, "pyart-lazydict-lazyloaddict-len"]], "pyart.lazydict.LazyLoadDict.__lt__": [[400, "pyart-lazydict-lazyloaddict-lt"]], "pyart.lazydict.LazyLoadDict.__ne__": [[401, "pyart-lazydict-lazyloaddict-ne"]], "pyart.lazydict.LazyLoadDict.__new__": [[402, "pyart-lazydict-lazyloaddict-new"]], "pyart.lazydict.LazyLoadDict.__reduce__": [[403, "pyart-lazydict-lazyloaddict-reduce"]], "pyart.lazydict.LazyLoadDict.__reduce_ex__": [[404, "pyart-lazydict-lazyloaddict-reduce-ex"]], "pyart.lazydict.LazyLoadDict.__repr__": [[405, "pyart-lazydict-lazyloaddict-repr"]], "pyart.lazydict.LazyLoadDict.__setattr__": [[406, "pyart-lazydict-lazyloaddict-setattr"]], "pyart.lazydict.LazyLoadDict.__setitem__": [[407, "pyart-lazydict-lazyloaddict-setitem"]], "pyart.lazydict.LazyLoadDict.__sizeof__": [[408, "pyart-lazydict-lazyloaddict-sizeof"]], "pyart.lazydict.LazyLoadDict.__str__": [[409, "pyart-lazydict-lazyloaddict-str"]], "pyart.lazydict.LazyLoadDict.__subclasshook__": [[410, "pyart-lazydict-lazyloaddict-subclasshook"]], "pyart.lazydict.LazyLoadDict.clear": [[411, "pyart-lazydict-lazyloaddict-clear"], [1031, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[412, "pyart-lazydict-lazyloaddict-copy"], [1032, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[413, "pyart-lazydict-lazyloaddict-get"], [1033, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[414, "pyart-lazydict-lazyloaddict-has-key"], [1034, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[415, "pyart-lazydict-lazyloaddict-items"], [1035, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[416, "pyart-lazydict-lazyloaddict-keys"], [1036, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[417, "pyart-lazydict-lazyloaddict-pop"], [1037, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[418, "pyart-lazydict-lazyloaddict-popitem"], [1038, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[419, "pyart-lazydict-lazyloaddict-set-lazy"], [1039, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[420, "pyart-lazydict-lazyloaddict-setdefault"], [1040, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[421, "pyart-lazydict-lazyloaddict-update"], [1041, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[422, "pyart-lazydict-lazyloaddict-values"], [1042, "pyart-lazydict-lazyloaddict-values"]], "pyart.retrieve._destandardize": [[423, "pyart-retrieve-destandardize"]], "pyart.retrieve._get_res_vol_sides": [[424, "pyart-retrieve-get-res-vol-sides"]], "pyart.retrieve.atmospheric_gas_att": [[425, "pyart-retrieve-atmospheric-gas-att"], [1067, "pyart-retrieve-atmospheric-gas-att"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[426, "pyart-retrieve-calculate-snr-from-reflectivity"], [1068, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[427, "pyart-retrieve-calculate-velocity-texture"], [1069, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[428, "pyart-retrieve-composite-reflectivity"], [1070, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_Doppler_velocity": [[429, "pyart-retrieve-compute-doppler-velocity"], [1071, "pyart-retrieve-compute-doppler-velocity"]], "pyart.retrieve.compute_Doppler_velocity_iq": [[430, "pyart-retrieve-compute-doppler-velocity-iq"], [1072, "pyart-retrieve-compute-doppler-velocity-iq"]], "pyart.retrieve.compute_Doppler_width": [[431, "pyart-retrieve-compute-doppler-width"], [1073, "pyart-retrieve-compute-doppler-width"]], "pyart.retrieve.compute_Doppler_width_iq": [[432, "pyart-retrieve-compute-doppler-width-iq"], [1074, "pyart-retrieve-compute-doppler-width-iq"]], "pyart.retrieve.compute_apparent_profile": [[433, "pyart-retrieve-compute-apparent-profile"], [1075, "pyart-retrieve-compute-apparent-profile"]], "pyart.retrieve.compute_bird_density": [[434, "pyart-retrieve-compute-bird-density"], [1076, "pyart-retrieve-compute-bird-density"]], "pyart.retrieve.compute_ccor": [[435, "pyart-retrieve-compute-ccor"], [1077, "pyart-retrieve-compute-ccor"]], "pyart.retrieve.compute_cdr": [[436, "pyart-retrieve-compute-cdr"], [1078, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_centroids": [[437, "pyart-retrieve-compute-centroids"], [1079, "pyart-retrieve-compute-centroids"]], "pyart.retrieve.compute_differential_phase": [[438, "pyart-retrieve-compute-differential-phase"], [1080, "pyart-retrieve-compute-differential-phase"]], "pyart.retrieve.compute_differential_phase_iq": [[439, "pyart-retrieve-compute-differential-phase-iq"], [1081, "pyart-retrieve-compute-differential-phase-iq"]], "pyart.retrieve.compute_differential_reflectivity": [[440, "pyart-retrieve-compute-differential-reflectivity"], [1082, "pyart-retrieve-compute-differential-reflectivity"]], "pyart.retrieve.compute_differential_reflectivity_iq": [[441, "pyart-retrieve-compute-differential-reflectivity-iq"], [1083, "pyart-retrieve-compute-differential-reflectivity-iq"]], "pyart.retrieve.compute_evp": [[442, "pyart-retrieve-compute-evp"], [1084, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_iq": [[443, "pyart-retrieve-compute-iq"], [1085, "pyart-retrieve-compute-iq"]], "pyart.retrieve.compute_l": [[444, "pyart-retrieve-compute-l"], [1086, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_mean_phase_iq": [[445, "pyart-retrieve-compute-mean-phase-iq"], [1087, "pyart-retrieve-compute-mean-phase-iq"]], "pyart.retrieve.compute_noise_power": [[446, "pyart-retrieve-compute-noise-power"], [1088, "pyart-retrieve-compute-noise-power"]], "pyart.retrieve.compute_noisedBZ": [[447, "pyart-retrieve-compute-noisedbz"], [1089, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_pol_variables": [[448, "pyart-retrieve-compute-pol-variables"], [1090, "pyart-retrieve-compute-pol-variables"]], "pyart.retrieve.compute_pol_variables_iq": [[449, "pyart-retrieve-compute-pol-variables-iq"], [1091, "pyart-retrieve-compute-pol-variables-iq"]], "pyart.retrieve.compute_qvp": [[450, "pyart-retrieve-compute-qvp"], [1092, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_radial_noise_hs": [[451, "pyart-retrieve-compute-radial-noise-hs"], [1093, "pyart-retrieve-compute-radial-noise-hs"]], "pyart.retrieve.compute_radial_noise_ivic": [[452, "pyart-retrieve-compute-radial-noise-ivic"], [1094, "pyart-retrieve-compute-radial-noise-ivic"]], "pyart.retrieve.compute_rcs": [[453, "pyart-retrieve-compute-rcs"], [1095, "pyart-retrieve-compute-rcs"]], "pyart.retrieve.compute_rcs_from_pr": [[454, "pyart-retrieve-compute-rcs-from-pr"], [1096, "pyart-retrieve-compute-rcs-from-pr"]], "pyart.retrieve.compute_reflectivity": [[455, "pyart-retrieve-compute-reflectivity"], [1097, "pyart-retrieve-compute-reflectivity"]], "pyart.retrieve.compute_reflectivity_iq": [[456, "pyart-retrieve-compute-reflectivity-iq"], [1098, "pyart-retrieve-compute-reflectivity-iq"]], "pyart.retrieve.compute_rhohv": [[457, "pyart-retrieve-compute-rhohv"], [1099, "pyart-retrieve-compute-rhohv"]], "pyart.retrieve.compute_rhohv_iq": [[458, "pyart-retrieve-compute-rhohv-iq"], [1100, "pyart-retrieve-compute-rhohv-iq"]], "pyart.retrieve.compute_rqvp": [[459, "pyart-retrieve-compute-rqvp"], [1101, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_signal_power": [[460, "pyart-retrieve-compute-signal-power"], [1102, "pyart-retrieve-compute-signal-power"]], "pyart.retrieve.compute_snr": [[461, "pyart-retrieve-compute-snr"], [1103, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_spectra": [[462, "pyart-retrieve-compute-spectra"], [1104, "pyart-retrieve-compute-spectra"]], "pyart.retrieve.compute_spectral_differential_phase": [[463, "pyart-retrieve-compute-spectral-differential-phase"], [1105, "pyart-retrieve-compute-spectral-differential-phase"]], "pyart.retrieve.compute_spectral_differential_reflectivity": [[464, "pyart-retrieve-compute-spectral-differential-reflectivity"], [1106, "pyart-retrieve-compute-spectral-differential-reflectivity"]], "pyart.retrieve.compute_spectral_noise": [[465, "pyart-retrieve-compute-spectral-noise"], [1107, "pyart-retrieve-compute-spectral-noise"]], "pyart.retrieve.compute_spectral_phase": [[466, "pyart-retrieve-compute-spectral-phase"], [1108, "pyart-retrieve-compute-spectral-phase"]], "pyart.retrieve.compute_spectral_power": [[467, "pyart-retrieve-compute-spectral-power"], [1109, "pyart-retrieve-compute-spectral-power"]], "pyart.retrieve.compute_spectral_reflectivity": [[468, "pyart-retrieve-compute-spectral-reflectivity"], [1110, "pyart-retrieve-compute-spectral-reflectivity"]], "pyart.retrieve.compute_spectral_rhohv": [[469, "pyart-retrieve-compute-spectral-rhohv"], [1111, "pyart-retrieve-compute-spectral-rhohv"]], "pyart.retrieve.compute_st1_iq": [[470, "pyart-retrieve-compute-st1-iq"], [1112, "pyart-retrieve-compute-st1-iq"]], "pyart.retrieve.compute_st2_iq": [[471, "pyart-retrieve-compute-st2-iq"], [1113, "pyart-retrieve-compute-st2-iq"]], "pyart.retrieve.compute_svp": [[472, "pyart-retrieve-compute-svp"], [1114, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[473, "pyart-retrieve-compute-ts-along-coord"], [1115, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vol_refl": [[474, "pyart-retrieve-compute-vol-refl"], [1116, "pyart-retrieve-compute-vol-refl"]], "pyart.retrieve.compute_vp": [[475, "pyart-retrieve-compute-vp"], [1117, "pyart-retrieve-compute-vp"]], "pyart.retrieve.compute_wbn_iq": [[476, "pyart-retrieve-compute-wbn-iq"], [1118, "pyart-retrieve-compute-wbn-iq"]], "pyart.retrieve.conv_strat_raut": [[477, "pyart-retrieve-conv-strat-raut"], [1119, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[478, "pyart-retrieve-conv-strat-yuter"], [1120, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.data_for_centroids": [[479, "pyart-retrieve-data-for-centroids"], [1121, "pyart-retrieve-data-for-centroids"]], "pyart.retrieve.dealias_spectra": [[480, "pyart-retrieve-dealias-spectra"], [1122, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.detect_ml": [[481, "pyart-retrieve-detect-ml"], [1123, "pyart-retrieve-detect-ml"]], "Paremeters": [[481, "paremeters"], [1123, "paremeters"]], "pyart.retrieve.determine_medoids": [[482, "pyart-retrieve-determine-medoids"], [1124, "pyart-retrieve-determine-medoids"]], "pyart.retrieve.est_rain_rate_a": [[483, "pyart-retrieve-est-rain-rate-a"], [1125, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[484, "pyart-retrieve-est-rain-rate-hydro"], [1126, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[485, "pyart-retrieve-est-rain-rate-kdp"], [1127, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[486, "pyart-retrieve-est-rain-rate-z"], [1128, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[487, "pyart-retrieve-est-rain-rate-za"], [1129, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[488, "pyart-retrieve-est-rain-rate-zkdp"], [1130, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[489, "pyart-retrieve-est-rain-rate-zpoly"], [1131, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.est_vertical_windshear": [[490, "pyart-retrieve-est-vertical-windshear"], [1132, "pyart-retrieve-est-vertical-windshear"]], "pyart.retrieve.est_vertical_windshear_lidar": [[491, "pyart-retrieve-est-vertical-windshear-lidar"], [1133, "pyart-retrieve-est-vertical-windshear-lidar"]], "pyart.retrieve.est_wind_profile": [[492, "pyart-retrieve-est-wind-profile"], [1134, "pyart-retrieve-est-wind-profile"]], "pyart.retrieve.est_wind_vel": [[493, "pyart-retrieve-est-wind-vel"], [1135, "pyart-retrieve-est-wind-vel"]], "pyart.retrieve.feature_detection": [[494, "pyart-retrieve-feature-detection"], [1136, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[495, "pyart-retrieve-fetch-radar-time-profile"], [1137, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.gecsx": [[496, "pyart-retrieve-gecsx"], [1138, "pyart-retrieve-gecsx"]], "pyart.retrieve.get_coeff_attg": [[497, "pyart-retrieve-get-coeff-attg"], [1139, "pyart-retrieve-get-coeff-attg"]], "pyart.retrieve.get_freq_band": [[498, "pyart-retrieve-get-freq-band"], [1140, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.get_iso0_val": [[499, "pyart-retrieve-get-iso0-val"], [1141, "pyart-retrieve-get-iso0-val"]], "pyart.retrieve.get_ml_rng_limits": [[500, "pyart-retrieve-get-ml-rng-limits"], [1142, "pyart-retrieve-get-ml-rng-limits"]], "pyart.retrieve.grid_displacement_pc": [[501, "pyart-retrieve-grid-displacement-pc"], [1143, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[502, "pyart-retrieve-grid-shift"], [1144, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[503, "pyart-retrieve-hydroclass-semisupervised"], [1145, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_leastsquare_double_window": [[504, "pyart-retrieve-kdp-leastsquare-double-window"], [1146, "pyart-retrieve-kdp-leastsquare-double-window"]], "pyart.retrieve.kdp_leastsquare_single_window": [[505, "pyart-retrieve-kdp-leastsquare-single-window"], [1147, "pyart-retrieve-kdp-leastsquare-single-window"]], "pyart.retrieve.kdp_maesaka": [[506, "pyart-retrieve-kdp-maesaka"], [1148, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[507, "pyart-retrieve-kdp-schneebeli"], [1149, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[508, "pyart-retrieve-kdp-vulpiani"], [1150, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[509, "pyart-retrieve-map-profile-to-gates"], [1151, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.melting_layer_giangrande": [[510, "pyart-retrieve-melting-layer-giangrande"], [1152, "pyart-retrieve-melting-layer-giangrande"]], "pyart.retrieve.melting_layer_hydroclass": [[511, "pyart-retrieve-melting-layer-hydroclass"], [1153, "pyart-retrieve-melting-layer-hydroclass"]], "pyart.retrieve.melting_layer_mf": [[512, "pyart-retrieve-melting-layer-mf"], [1154, "pyart-retrieve-melting-layer-mf"]], "pyart.retrieve.quasi_vertical_profile": [[513, "pyart-retrieve-quasi-vertical-profile"], [1155, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.select_samples": [[514, "pyart-retrieve-select-samples"], [1156, "pyart-retrieve-select-samples"]], "pyart.retrieve.steiner_conv_strat": [[515, "pyart-retrieve-steiner-conv-strat"], [1157, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.synthetic_obs_distribution": [[516, "pyart-retrieve-synthetic-obs-distribution"], [1158, "pyart-retrieve-synthetic-obs-distribution"]], "pyart.retrieve.vad_browning": [[517, "pyart-retrieve-vad-browning"], [1160, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[518, "pyart-retrieve-vad-michelson"], [1161, "pyart-retrieve-vad-michelson"]], "pyart.util.EPOCH_UNITS": [[519, "pyart-util-epoch-units"]], "pyart.util.angular_mean": [[520, "pyart-util-angular-mean"], [1249, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[521, "pyart-util-angular-mean-deg"], [1250, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[522, "pyart-util-angular-std"], [1251, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[523, "pyart-util-angular-std-deg"], [1252, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[524, "pyart-util-angular-texture-2d"], [1253, "pyart-util-angular-texture-2d"]], "pyart.util.colocated_gates": [[525, "pyart-util-colocated-gates"], [1254, "pyart-util-colocated-gates"]], "pyart.util.colocated_gates2": [[526, "pyart-util-colocated-gates2"], [1255, "pyart-util-colocated-gates2"]], "pyart.util.compute_azimuthal_average": [[527, "pyart-util-compute-azimuthal-average"], [1256, "pyart-util-compute-azimuthal-average"]], "pyart.util.compute_corr": [[528, "pyart-util-compute-corr"], [1257, "pyart-util-compute-corr"]], "pyart.util.compute_directional_stats": [[529, "pyart-util-compute-directional-stats"], [1258, "pyart-util-compute-directional-stats"]], "pyart.util.compute_mse": [[530, "pyart-util-compute-mse"], [1259, "pyart-util-compute-mse"]], "pyart.util.compute_nse": [[531, "pyart-util-compute-nse"], [1260, "pyart-util-compute-nse"]], "pyart.util.cross_section_ppi": [[532, "pyart-util-cross-section-ppi"], [1261, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[533, "pyart-util-cross-section-rhi"], [1262, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[534, "pyart-util-datetime-from-dataset"], [1263, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[535, "pyart-util-datetime-from-grid"], [1264, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[536, "pyart-util-datetime-from-radar"], [1265, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[537, "pyart-util-datetimes-from-dataset"], [1266, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[538, "pyart-util-datetimes-from-radar"], [1267, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[539, "pyart-util-determine-sweeps"], [1268, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[540, "pyart-util-estimate-noise-hs74"], [1269, "pyart-util-estimate-noise-hs74"]], "pyart.util.estimate_noise_ivic13": [[541, "pyart-util-estimate-noise-ivic13"], [1270, "pyart-util-estimate-noise-ivic13"]], "pyart.util.find_neighbour_gates": [[542, "pyart-util-find-neighbour-gates"], [1271, "pyart-util-find-neighbour-gates"]], "pyart.util.for_azimuth": [[543, "pyart-util-for-azimuth"], [1272, "pyart-util-for-azimuth"]], "Assumptions": [[543, "assumptions"], [569, "assumptions"], [1272, "assumptions"], [1298, "assumptions"]], "pyart.util.get_column_rays": [[544, "pyart-util-get-column-rays"], [1273, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[545, "pyart-util-get-field-location"], [1274, "pyart-util-get-field-location"]], "pyart.util.get_ivic_flat_reg_var_max": [[546, "pyart-util-get-ivic-flat-reg-var-max"], [1275, "pyart-util-get-ivic-flat-reg-var-max"]], "pyart.util.get_ivic_pct": [[547, "pyart-util-get-ivic-pct"], [1276, "pyart-util-get-ivic-pct"]], "pyart.util.get_ivic_snr_thr": [[548, "pyart-util-get-ivic-snr-thr"], [1277, "pyart-util-get-ivic-snr-thr"]], "pyart.util.get_target_elevations": [[549, "pyart-util-get-target-elevations"], [1278, "pyart-util-get-target-elevations"]], "pyart.util.grid_texture_2d": [[550, "pyart-util-grid-texture-2d"], [1279, "pyart-util-grid-texture-2d"]], "pyart.util.image_mute_radar": [[551, "pyart-util-image-mute-radar"], [1280, "pyart-util-image-mute-radar"]], "pyart.util.interpol_spectra": [[552, "pyart-util-interpol-spectra"], [1281, "pyart-util-interpol-spectra"]], "pyart.util.intersection": [[553, "pyart-util-intersection"], [1282, "pyart-util-intersection"]], "pyart.util.interval_mean": [[554, "pyart-util-interval-mean"], [1283, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[555, "pyart-util-interval-std"], [1284, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[556, "pyart-util-is-vpt"], [1285, "pyart-util-is-vpt"]], "pyart.util.ivic_flat_reg_var_max_table": [[557, "pyart-util-ivic-flat-reg-var-max-table"], [1286, "pyart-util-ivic-flat-reg-var-max-table"]], "pyart.util.ivic_flat_reg_wind_len_table": [[558, "pyart-util-ivic-flat-reg-wind-len-table"], [1287, "pyart-util-ivic-flat-reg-wind-len-table"]], "pyart.util.ivic_pct_table": [[559, "pyart-util-ivic-pct-table"], [1288, "pyart-util-ivic-pct-table"]], "pyart.util.ivic_snr_thr_table": [[560, "pyart-util-ivic-snr-thr-table"], [1289, "pyart-util-ivic-snr-thr-table"]], "pyart.util.join_radar": [[561, "pyart-util-join-radar"], [1290, "pyart-util-join-radar"]], "pyart.util.join_spectra": [[562, "pyart-util-join-spectra"], [1291, "pyart-util-join-spectra"]], "pyart.util.ma_broadcast_to": [[563, "pyart-util-ma-broadcast-to"], [1292, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[564, "pyart-util-mean-of-two-angles"], [1293, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[565, "pyart-util-mean-of-two-angles-deg"], [1294, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.radar_from_spectra": [[566, "pyart-util-radar-from-spectra"], [1295, "pyart-util-radar-from-spectra"]], "pyart.util.rolling_window": [[567, "pyart-util-rolling-window"], [1296, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[568, "pyart-util-simulated-vel-from-profile"], [1297, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[569, "pyart-util-sphere-distance"], [1298, "pyart-util-sphere-distance"]], "Parameter": [[569, "parameter"], [1298, "parameter"]], "pyart.util.subset_radar": [[570, "pyart-util-subset-radar"], [1299, "pyart-util-subset-radar"]], "pyart.util.subset_radar_spectra": [[571, "pyart-util-subset-radar-spectra"], [1300, "pyart-util-subset-radar-spectra"]], "pyart.util.texture": [[572, "pyart-util-texture"], [1301, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[573, "pyart-util-texture-along-ray"], [1302, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[574, "pyart-util-to-vpt"], [1303, "pyart-util-to-vpt"]], "pyart._debug_info": [[575, "pyart-debug-info"]], "pyart.aux_io": [[576, "pyart-aux-io"]], "Auxiliary input and output (pyart.aux_io)": [[576, "auxiliary-input-and-output-pyart-aux-io"]], "Reading radar data": [[576, "reading-radar-data"], [1006, "reading-radar-data"]], "Writing radar data": [[576, "writing-radar-data"], [1006, "writing-radar-data"]], "Special use": [[576, "special-use"], [1006, "special-use"]], "pyart.aux_io.convert_data": [[577, "pyart-aux-io-convert-data"]], "pyart.aux_io.get_library": [[579, "pyart-aux-io-get-library"]], "pyart.aux_io.read_edge_netcdf": [[589, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_file_c": [[590, "pyart-aux-io-read-file-c"]], "pyart.aux_io.read_file_py": [[591, "pyart-aux-io-read-file-py"]], "pyart.aux_io.read_knmi_grid_h5": [[598, "pyart-aux-io-read-knmi-grid-h5"]], "pyart.aux_io.read_mch_vad": [[599, "pyart-aux-io-read-mch-vad"]], "pyart.aux_io.read_product_c": [[607, "pyart-aux-io-read-product-c"]], "pyart.aux_io.read_product_py": [[608, "pyart-aux-io-read-product-py"]], "pyart.aux_io.read_psr_cpi_header": [[609, "pyart-aux-io-read-psr-cpi-header"]], "pyart.aux_io.read_psr_header": [[610, "pyart-aux-io-read-psr-header"]], "pyart.aux_io.read_psr_spectra": [[611, "pyart-aux-io-read-psr-spectra"]], "pyart.aux_io.read_sinarame_h5": [[616, "pyart-aux-io-read-sinarame-h5"]], "pyart.bridge": [[624, "pyart-bridge"]], "Bridging to other toolkits (pyart.bridge)": [[624, "bridging-to-other-toolkits-pyart-bridge"]], "Phase functions": [[624, "phase-functions"]], "pyart.config": [[626, "pyart-config"], [626, "id1"]], "pyart.config.get_KE": [[631, "pyart-config-get-ke"]], "pyart.core": [[639, "pyart-core"]], "Core (pyart.core)": [[639, "core-pyart-core"]], "Core classes": [[639, "core-classes"]], "Coordinate transformations": [[639, "coordinate-transformations"]], "pyart.correct": [[721, "pyart-correct"]], "Radar Corrections (pyart.correct)": [[721, "radar-corrections-pyart-correct"]], "Velocity unfolding": [[721, "velocity-unfolding"]], "Attenuation": [[721, "attenuation"]], "Phase processing": [[721, "phase-processing"]], "Other corrections": [[721, "other-corrections"]], "Helper functions": [[721, "helper-functions"]], "pyart.correct.GateFilter": [[722, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[723, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[724, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[725, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[726, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[727, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[728, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[729, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[730, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[731, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[732, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[733, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[734, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[735, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[736, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[737, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[738, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[739, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[740, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[741, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[742, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[743, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[744, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[745, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[746, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[747, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[748, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[749, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[750, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[751, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[752, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[755, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[756, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.correct_visibility": [[758, "pyart-correct-correct-visibility"]], "pyart.correct.correct_vpr": [[759, "pyart-correct-correct-vpr"]], "pyart.correct.correct_vpr_spatialised": [[760, "pyart-correct-correct-vpr-spatialised"]], "pyart.correct.despeckle_field": [[764, "pyart-correct-despeckle-field"]], "pyart.correct.est_rhohv_rain": [[766, "pyart-correct-est-rhohv-rain"]], "pyart.correct.est_zdr_precip": [[767, "pyart-correct-est-zdr-precip"]], "pyart.correct.est_zdr_snow": [[768, "pyart-correct-est-zdr-snow"]], "pyart.correct.gauss_fit": [[770, "pyart-correct-gauss-fit"]], "pyart.correct.get_sun_hits": [[772, "pyart-correct-get-sun-hits"]], "pyart.correct.get_sun_hits_ivic": [[773, "pyart-correct-get-sun-hits-ivic"]], "pyart.correct.get_sun_hits_psr": [[774, "pyart-correct-get-sun-hits-psr"]], "pyart.correct.moment_based_gate_filter": [[775, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.retrieval_result": [[779, "pyart-correct-retrieval-result"]], "pyart.correct.selfconsistency_bias": [[781, "pyart-correct-selfconsistency-bias"]], "pyart.correct.selfconsistency_bias2": [[782, "pyart-correct-selfconsistency-bias2"]], "pyart.correct.selfconsistency_kdp_phidp": [[783, "pyart-correct-selfconsistency-kdp-phidp"]], "pyart.correct.sun_retrieval": [[791, "pyart-correct-sun-retrieval"]], "pyart.exceptions": [[792, "pyart-exceptions"], [792, "id1"]], "pyart.filters": [[793, "pyart-filters"]], "Filters (pyart.filters)": [[793, "filters-pyart-filters"]], "Filtering radar data": [[793, "filtering-radar-data"]], "pyart.graph": [[830, "pyart-graph"]], "Graphing (pyart.graph)": [[830, "graphing-pyart-graph"]], "Plotting radar data": [[830, "plotting-radar-data"]], "Plotting grid data": [[830, "plotting-grid-data"]], "pyart.graph.plot_convstrat_scheme": [[1005, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[1006, "pyart-io"]], "Input and output (pyart.io)": [[1006, "input-and-output-pyart-io"]], "Reading grid data": [[1006, "reading-grid-data"]], "Writing grid data": [[1006, "writing-grid-data"]], "Reading Sonde data": [[1006, "reading-sonde-data"]], "pyart.lazydict": [[1029, "pyart-lazydict"], [1029, "id1"]], "pyart.lazydict.MutableMapping": [[1043, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[1044, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[1045, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[1046, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[1047, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[1048, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[1049, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[1050, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[1051, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[1052, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[1053, "pyart-map"]], "pyart.map.GateMapper": [[1054, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[1055, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[1056, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[1057, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[1058, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[1059, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[1060, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[1061, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[1062, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[1063, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[1064, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[1065, "pyart-map-map-to-grid"]], "pyart.retrieve": [[1066, "pyart-retrieve"]], "Radar Retrievals (pyart.retrieve)": [[1066, "radar-retrievals-pyart-retrieve"]], "Composite Reflectivity": [[1066, "composite-reflectivity"]], "Melting Layer (ML) Detection": [[1066, "melting-layer-ml-detection"]], "KDP Processing": [[1066, "kdp-processing"]], "Echo Classification": [[1066, "echo-classification"]], "Gate ID": [[1066, "gate-id"]], "Simple Moment Calculations": [[1066, "simple-moment-calculations"]], "QPE (Quantitative Precipitation Estimation)": [[1066, "qpe-quantitative-precipitation-estimation"]], "Advection": [[1066, "advection"]], "Wind Estimation": [[1066, "wind-estimation"]], "VAD (Velocity Azimuth Display)": [[1066, "vad-velocity-azimuth-display"]], "QVP (Quasi Vertical Profile) Retrievals": [[1066, "qvp-quasi-vertical-profile-retrievals"]], "Spectra Processing": [[1066, "spectra-processing"]], "IQ Processing": [[1066, "iq-processing"]], "Visibility estimation": [[1066, "visibility-estimation"]], "pyart.retrieve.texture_of_complex_phase": [[1159, "pyart-retrieve-texture-of-complex-phase"]], "pyart.testing": [[1162, "pyart-testing"]], "pyart.testing.Grid": [[1163, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[1164, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[1165, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[1166, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[1167, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[1168, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[1169, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[1170, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[1171, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[1172, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[1173, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[1174, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[1175, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[1176, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[1177, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[1178, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[1179, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[1180, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[1181, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[1182, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[1183, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[1184, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[1185, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[1186, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[1187, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[1188, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[1189, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[1190, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[1191, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[1192, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[1193, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[1194, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[1195, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[1196, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[1197, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[1198, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[1199, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[1200, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[1201, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[1202, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[1203, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[1204, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.add_field": [[1205, "pyart-testing-radarspectra-add-field"]], "pyart.testing.RadarSpectra.add_field_like": [[1206, "pyart-testing-radarspectra-add-field-like"]], "pyart.testing.RadarSpectra.add_filter": [[1207, "pyart-testing-radarspectra-add-filter"]], "pyart.testing.RadarSpectra.check_field_exists": [[1208, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.extract_sweeps": [[1209, "pyart-testing-radarspectra-extract-sweeps"]], "pyart.testing.RadarSpectra.get_azimuth": [[1210, "pyart-testing-radarspectra-get-azimuth"]], "pyart.testing.RadarSpectra.get_elevation": [[1211, "pyart-testing-radarspectra-get-elevation"]], "pyart.testing.RadarSpectra.get_end": [[1212, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_field": [[1213, "pyart-testing-radarspectra-get-field"]], "pyart.testing.RadarSpectra.get_gate_area": [[1214, "pyart-testing-radarspectra-get-gate-area"]], "pyart.testing.RadarSpectra.get_gate_lat_lon_alt": [[1215, "pyart-testing-radarspectra-get-gate-lat-lon-alt"]], "pyart.testing.RadarSpectra.get_gate_x_y_z": [[1216, "pyart-testing-radarspectra-get-gate-x-y-z"]], "pyart.testing.RadarSpectra.get_nyquist_vel": [[1217, "pyart-testing-radarspectra-get-nyquist-vel"]], "pyart.testing.RadarSpectra.get_slice": [[1218, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[1219, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[1220, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.info": [[1221, "pyart-testing-radarspectra-info"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[1222, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[1223, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[1224, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[1225, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[1226, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[1227, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[1228, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[1229, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[1230, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[1231, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[1232, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.get_metadata": [[1233, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[1234, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[1235, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[1236, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[1237, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[1238, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[1239, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[1240, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[1241, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[1242, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[1243, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[1244, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[1245, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[1246, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[1247, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[1248, "pyart-util"]], "Circular Statistics": [[1248, "circular-statistics"]], "Datetime Utilities": [[1248, "datetime-utilities"]], "Column Section": [[1248, "column-section"]], "Cross Section": [[1248, "cross-section"]], "Noise estimation": [[1248, "noise-estimation"]], "Radar Utilities": [[1248, "radar-utilities"]], "Simulated Velocity": [[1248, "simulated-velocity"]], "Signal Mathematics": [[1248, "signal-mathematics"]], "API Manual": [[1304, "api-manual"]], "Changelog": [[1305, "changelog"]], "v1.9.2": [[1305, "v1-9-2"]], "v1.9.0": [[1305, "v1-9-0"]], "v1.8.9": [[1305, "v1-8-9"]], "v1.8.8": [[1305, "v1-8-8"]], "v1.8.7": [[1305, "v1-8-7"]], "v1.8.6": [[1305, "v1-8-6"]], "v1.8.5": [[1305, "v1-8-5"]], "v1.8.4": [[1305, "v1-8-4"]], "v1.8.3": [[1305, "v1-8-3"]], "v1.8.2": [[1305, "v1-8-2"]], "v1.8.1": [[1305, "v1-8-1"]], "v1.8": [[1305, "v1-8"]], "v1.7.1": [[1305, "v1-7-1"]], "v1.7": [[1305, "v1-7"]], "v1.6.4": [[1305, "v1-6-4"]], "New additions": [[1305, "new-additions"]], "v1.6.3": [[1305, "v1-6-3"]], "v1.6.2": [[1305, "v1-6-2"]], "v1.6.1": [[1305, "v1-6-1"]], "v1.6": [[1305, "v1-6"]], "Moment correction examples": [[1306, "moment-correction-examples"], [1310, "moment-correction-examples"]], "Correct reflectivity attenuation": [[1307, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[1308, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[1309, "computation-times"], [1314, "computation-times"], [1319, "computation-times"], [1338, "computation-times"], [1345, "computation-times"], [1346, "computation-times"], [1359, "computation-times"]], "Example Gallery": [[1310, "example-gallery"]], "Input/Output Examples": [[1310, "input-output-examples"], [1311, "input-output-examples"]], "Mapping examples": [[1310, "mapping-examples"], [1315, "mapping-examples"]], "Plotting examples": [[1310, "plotting-examples"], [1320, "plotting-examples"]], "Retrieval Examples": [[1310, "retrieval-examples"], [1339, "retrieval-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[1312, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[1312, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[1312, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[1313, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[1313, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[1316, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[1317, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[1318, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[1321, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[1322, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[1323, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[1324, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[1325, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[1326, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[1327, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[1328, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[1329, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[1330, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [1331, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[1332, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [1333, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[1334, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[1335, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[1336, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[1337, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[1340, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[1341, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[1342, "convective-stratiform-classification"]], "How the algorithm works": [[1342, "how-the-algorithm-works"]], "Examples": [[1342, "examples"]], "Summary of recommendations and best practices": [[1342, "summary-of-recommendations-and-best-practices"]], "References": [[1342, "references"]], "Calculate and Plot hydrometeor classification": [[1343, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[1344, "calculate-and-plot-vad-profile"]], "About the MeteoSwiss fork of Py-ART": [[1347, "about-the-meteoswiss-fork-of-py-art"]], "Citing Py-ART": [[1347, "citing-py-art"]], "What can Py-ART do?": [[1347, "what-can-py-art-do"]], "Short Courses": [[1347, "short-courses"]], "Install": [[1347, "install"], [1361, "install"]], "Dependencies": [[1347, "dependencies"]], "Optional Dependences": [[1347, "optional-dependences"]], "Getting help": [[1347, "getting-help"]], "Contributing": [[1347, "contributing"]], "Notebook Gallery": [[1348, "notebook-gallery"]], "Notebooks": [[1348, null]], "Creating a basic ingest of a NetCDF file": [[1349, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[1350, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[1351, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[1353, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[1354, "masking-data-with-py-art-gatefilters"]], "Reading MeteoSwiss Metranet data with Py-ART": [[1355, "reading-meteoswiss-metranet-data-with-py-art"]], "Reading Polar data": [[1355, "reading-polar-data"]], "Low-res data (MLx files)": [[1355, "low-res-data-mlx-files"]], "High-res data (MHx files)": [[1355, "high-res-data-mhx-files"]], "Reading other polar products": [[1355, "reading-other-polar-products"]], "Reading Cartesian products": [[1355, "reading-cartesian-products"]], "Processing of Doppler wind data from a Swiss volumetric scan": [[1356, "processing-of-doppler-wind-data-from-a-swiss-volumetric-scan"]], "Reading and dealiasing the data": [[1356, "reading-and-dealiasing-the-data"]], "CAPPI plots": [[1356, "cappi-plots"]], "Velocity azimuth display (VAD)": [[1356, "velocity-azimuth-display-vad"]], "Filtering and retrievals on raw Swiss C-band data": [[1357, "filtering-and-retrievals-on-raw-swiss-c-band-data"]], "Reading the data": [[1357, "reading-the-data"]], "Ground-clutter and noise removal": [[1357, "ground-clutter-and-noise-removal"]], "Attenuation correction": [[1357, "attenuation-correction"]], "KDP estimation": [[1357, "kdp-estimation"]], "Hydrometeor classification": [[1357, "hydrometeor-classification"]], "QPE": [[1357, "qpe"]], "The Py-ART Radar object and indexing": [[1358, "the-py-art-radar-object-and-indexing"]], "Installation": [[1360, "installation"]], "Required Dependencies": [[1360, "required-dependencies"]], "Optional Dependencies": [[1360, "optional-dependencies"]], "Obtaining the latest source": [[1360, "obtaining-the-latest-source"]], "Installing from Source": [[1360, "installing-from-source"]], "Frequently asked questions": [[1360, "frequently-asked-questions"]], "Contributor\u2019s Guide": [[1361, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[1361, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[1361, "important-links"]], "Citing": [[1361, "citing"]], "Resources": [[1361, "resources"]], "Code Style": [[1361, "code-style"]], "Python File Setup": [[1361, "python-file-setup"]], "Testing": [[1361, "testing"]], "GitHub": [[1361, "github"]], "Blog Posts": [[1361, "blog-posts"]], "User Guide": [[1362, "user-guide"]], "Setting up an Environment": [[1363, "setting-up-an-environment"]], "Anaconda": [[1363, "anaconda"]], "Setting a Channel": [[1363, "setting-a-channel"]], "Creating an Environment": [[1363, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[1363, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[1363, "more-information"]]}, "indexentries": {"extract_sweeps_skyecho() (in module pyart.aux_io)": [[0, "pyart.aux_io.extract_sweeps_skyecho"], [578, "pyart.aux_io.extract_sweeps_skyecho"]], "get_sweep_time_coverage() (in module pyart.aux_io)": [[1, "pyart.aux_io.get_sweep_time_coverage"], [580, "pyart.aux_io.get_sweep_time_coverage"]], "read_bin() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_bin"], [581, "pyart.aux_io.read_bin"]], "read_bin_mf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_bin_mf"], [582, "pyart.aux_io.read_bin_mf"]], "read_cartesian_metranet() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_cartesian_metranet"], [583, "pyart.aux_io.read_cartesian_metranet"]], "read_cf1() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_cf1"], [584, "pyart.aux_io.read_cf1"]], "read_cf1_cartesian() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_cf1_cartesian"], [585, "pyart.aux_io.read_cf1_cartesian"]], "read_cf1_cartesian_mf() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_cf1_cartesian_mf"], [586, "pyart.aux_io.read_cf1_cartesian_mf"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_d3r_gcpex_nc"], [587, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_dat_mf() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_dat_mf"], [588, "pyart.aux_io.read_dat_mf"]], "read_gamic() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_gamic"], [592, "pyart.aux_io.read_gamic"]], "read_gif() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_gif"], [593, "pyart.aux_io.read_gif"]], "read_grib() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_grib"], [594, "pyart.aux_io.read_grib"]], "read_hpl() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_hpl"], [595, "pyart.aux_io.read_hpl"]], "read_iq() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_iq"], [596, "pyart.aux_io.read_iq"]], "read_kazr() (in module pyart.aux_io)": [[15, "pyart.aux_io.read_kazr"], [597, "pyart.aux_io.read_kazr"]], "read_metranet() (in module pyart.aux_io)": [[16, "pyart.aux_io.read_metranet"], [600, "pyart.aux_io.read_metranet"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[17, "pyart.aux_io.read_noxp_iphex_nc"], [601, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_grid_h5() (in module pyart.aux_io)": [[18, "pyart.aux_io.read_odim_grid_h5"], [602, "pyart.aux_io.read_odim_grid_h5"]], "read_odim_h5() (in module pyart.aux_io)": [[19, "pyart.aux_io.read_odim_h5"], [603, "pyart.aux_io.read_odim_h5"]], "read_odim_vp_h5() (in module pyart.aux_io)": [[20, "pyart.aux_io.read_odim_vp_h5"], [604, "pyart.aux_io.read_odim_vp_h5"]], "read_pattern() (in module pyart.aux_io)": [[21, "pyart.aux_io.read_pattern"], [605, "pyart.aux_io.read_pattern"]], "read_png() (in module pyart.aux_io)": [[22, "pyart.aux_io.read_png"], [606, "pyart.aux_io.read_png"]], "read_radx() (in module pyart.aux_io)": [[23, "pyart.aux_io.read_radx"], [612, "pyart.aux_io.read_radx"]], "read_rainbow_psr() (in module pyart.aux_io)": [[24, "pyart.aux_io.read_rainbow_psr"], [613, "pyart.aux_io.read_rainbow_psr"]], "read_rainbow_psr_spectra() (in module pyart.aux_io)": [[25, "pyart.aux_io.read_rainbow_psr_spectra"], [614, "pyart.aux_io.read_rainbow_psr_spectra"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[26, "pyart.aux_io.read_rainbow_wrl"], [615, "pyart.aux_io.read_rainbow_wrl"]], "read_skyecho() (in module pyart.aux_io)": [[27, "pyart.aux_io.read_skyecho"], [617, "pyart.aux_io.read_skyecho"]], "read_spectra() (in module pyart.aux_io)": [[28, "pyart.aux_io.read_spectra"], [618, "pyart.aux_io.read_spectra"]], "read_swissbirdradar_spectra() (in module pyart.aux_io)": [[29, "pyart.aux_io.read_swissbirdradar_spectra"], [619, "pyart.aux_io.read_swissbirdradar_spectra"]], "write_odim_grid_h5() (in module pyart.aux_io)": [[30, "pyart.aux_io.write_odim_grid_h5"], [620, "pyart.aux_io.write_odim_grid_h5"]], "write_odim_h5() (in module pyart.aux_io)": [[31, "pyart.aux_io.write_odim_h5"], [621, "pyart.aux_io.write_odim_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[32, "pyart.aux_io.write_sinarame_cfradial"], [622, "pyart.aux_io.write_sinarame_cfradial"]], "write_spectra() (in module pyart.aux_io)": [[33, "pyart.aux_io.write_spectra"], [623, "pyart.aux_io.write_spectra"]], "texture_of_complex_phase() (in module pyart.bridge)": [[34, "pyart.bridge.texture_of_complex_phase"], [625, "pyart.bridge.texture_of_complex_phase"]], "filemetadata (class in pyart.config)": [[35, "pyart.config.FileMetadata"], [627, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[36, "pyart.config.FileMetadata.__call__"], [628, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[37, "pyart.config.FileMetadata.get_field_name"], [629, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[38, "pyart.config.FileMetadata.get_metadata"], [630, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[39, "pyart.config.get_field_colormap"], [632, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[40, "pyart.config.get_field_limits"], [633, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[41, "pyart.config.get_field_mapping"], [634, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[42, "pyart.config.get_field_name"], [635, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[43, "pyart.config.get_fillvalue"], [636, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[44, "pyart.config.get_metadata"], [637, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[45, "pyart.config.load_config"], [638, "pyart.config.load_config"]], "grid (class in pyart.core)": [[46, "pyart.core.Grid"], [640, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[47, "pyart.core.Grid.add_field"], [641, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[48, "pyart.core.Grid.get_point_longitude_latitude"], [642, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[49, "pyart.core.Grid.get_projparams"], [643, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[50, "pyart.core.Grid.init_point_altitude"], [644, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[51, "pyart.core.Grid.init_point_longitude_latitude"], [645, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[52, "pyart.core.Grid.init_point_x_y_z"], [646, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[53, "pyart.core.Grid.projection_proj"], [647, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[54, "pyart.core.Grid.to_xarray"], [648, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[55, "pyart.core.Grid.write"], [649, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[56, "pyart.core.HorizontalWindProfile"], [650, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[57, "pyart.core.HorizontalWindProfile.from_u_and_v"], [651, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[58, "pyart.core.HorizontalWindProfile.u_wind"], [652, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[59, "pyart.core.HorizontalWindProfile.v_wind"], [653, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[60, "pyart.core.Radar"], [654, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[61, "pyart.core.Radar.add_field"], [655, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[62, "pyart.core.Radar.add_field_like"], [656, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[63, "pyart.core.Radar.add_filter"], [657, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[64, "pyart.core.Radar.check_field_exists"], [658, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[65, "pyart.core.Radar.extract_sweeps"], [659, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[66, "pyart.core.Radar.get_azimuth"], [660, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[67, "pyart.core.Radar.get_elevation"], [661, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[68, "pyart.core.Radar.get_end"], [662, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[69, "pyart.core.Radar.get_field"], [663, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[70, "pyart.core.Radar.get_gate_area"], [664, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[71, "pyart.core.Radar.get_gate_lat_lon_alt"], [665, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[72, "pyart.core.Radar.get_gate_x_y_z"], [666, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[73, "pyart.core.Radar.get_nyquist_vel"], [667, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[74, "pyart.core.Radar.get_slice"], [668, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[75, "pyart.core.Radar.get_start"], [669, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[76, "pyart.core.Radar.get_start_end"], [670, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[77, "pyart.core.Radar.info"], [671, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[78, "pyart.core.Radar.init_gate_altitude"], [672, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[79, "pyart.core.Radar.init_gate_longitude_latitude"], [673, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[80, "pyart.core.Radar.init_gate_x_y_z"], [674, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[81, "pyart.core.Radar.init_rays_per_sweep"], [675, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[82, "pyart.core.Radar.iter_azimuth"], [676, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[83, "pyart.core.Radar.iter_elevation"], [677, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[84, "pyart.core.Radar.iter_end"], [678, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[85, "pyart.core.Radar.iter_field"], [679, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[86, "pyart.core.Radar.iter_slice"], [680, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[87, "pyart.core.Radar.iter_start"], [681, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[88, "pyart.core.Radar.iter_start_end"], [682, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[89, "pyart.core.RadarSpectra"], [683, "pyart.core.RadarSpectra"]], "add_field() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.add_field"], [684, "pyart.core.RadarSpectra.add_field"]], "add_field_like() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.add_field_like"], [685, "pyart.core.RadarSpectra.add_field_like"]], "add_filter() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.add_filter"], [686, "pyart.core.RadarSpectra.add_filter"]], "check_field_exists() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.check_field_exists"], [687, "pyart.core.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.extract_sweeps"], [688, "pyart.core.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.get_azimuth"], [689, "pyart.core.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.get_elevation"], [690, "pyart.core.RadarSpectra.get_elevation"]], "get_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.get_end"], [691, "pyart.core.RadarSpectra.get_end"]], "get_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.get_field"], [692, "pyart.core.RadarSpectra.get_field"]], "get_gate_area() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.get_gate_area"], [693, "pyart.core.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"], [694, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.get_gate_x_y_z"], [695, "pyart.core.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radarspectra method)": [[102, "pyart.core.RadarSpectra.get_nyquist_vel"], [696, "pyart.core.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.core.radarspectra method)": [[103, "pyart.core.RadarSpectra.get_slice"], [697, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[104, "pyart.core.RadarSpectra.get_start"], [698, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[105, "pyart.core.RadarSpectra.get_start_end"], [699, "pyart.core.RadarSpectra.get_start_end"]], "info() (pyart.core.radarspectra method)": [[106, "pyart.core.RadarSpectra.info"], [700, "pyart.core.RadarSpectra.info"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[107, "pyart.core.RadarSpectra.init_gate_altitude"], [701, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[108, "pyart.core.RadarSpectra.init_gate_longitude_latitude"], [702, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[109, "pyart.core.RadarSpectra.init_gate_x_y_z"], [703, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[110, "pyart.core.RadarSpectra.init_rays_per_sweep"], [704, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[111, "pyart.core.RadarSpectra.iter_azimuth"], [705, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[112, "pyart.core.RadarSpectra.iter_elevation"], [706, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[113, "pyart.core.RadarSpectra.iter_end"], [707, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[114, "pyart.core.RadarSpectra.iter_field"], [708, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[115, "pyart.core.RadarSpectra.iter_slice"], [709, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[116, "pyart.core.RadarSpectra.iter_start"], [710, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.iter_start_end"], [711, "pyart.core.RadarSpectra.iter_start_end"]], "antenna_to_cartesian() (in module pyart.core)": [[118, "pyart.core.antenna_to_cartesian"], [712, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_vectors_to_cartesian"], [713, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[120, "pyart.core.cartesian_to_antenna"], [714, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"], [715, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"], [716, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"], [717, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"], [718, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"], [719, "pyart.core.geographic_to_cartesian_aeqd"]], "wgs84_to_swissch1903() (in module pyart.core)": [[126, "pyart.core.wgs84_to_swissCH1903"], [720, "pyart.core.wgs84_to_swissCH1903"]], "compute_apparent_vpr() (in module pyart.correct)": [[127, "pyart.correct.compute_apparent_vpr"], [753, "pyart.correct.compute_apparent_vpr"]], "compute_theoretical_vpr() (in module pyart.correct)": [[128, "pyart.correct.compute_theoretical_vpr"], [754, "pyart.correct.compute_theoretical_vpr"]], "correct_sys_phase() (in module pyart.correct)": [[129, "pyart.correct.correct_sys_phase"], [757, "pyart.correct.correct_sys_phase"]], "dealias_fourdd() (in module pyart.correct)": [[130, "pyart.correct.dealias_fourdd"], [761, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[131, "pyart.correct.dealias_region_based"], [762, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[132, "pyart.correct.dealias_unwrap_phase"], [763, "pyart.correct.dealias_unwrap_phase"]], "det_sys_phase_ray() (in module pyart.correct)": [[133, "pyart.correct.det_sys_phase_ray"], [765, "pyart.correct.det_sys_phase_ray"]], "find_objects() (in module pyart.correct)": [[134, "pyart.correct.find_objects"], [769, "pyart.correct.find_objects"]], "get_mask_fzl() (in module pyart.correct)": [[135, "pyart.correct.get_mask_fzl"], [771, "pyart.correct.get_mask_fzl"]], "phase_proc_lp() (in module pyart.correct)": [[136, "pyart.correct.phase_proc_lp"], [776, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[137, "pyart.correct.phase_proc_lp_gf"], [777, "pyart.correct.phase_proc_lp_gf"]], "ptoa_to_sf() (in module pyart.correct)": [[138, "pyart.correct.ptoa_to_sf"], [778, "pyart.correct.ptoa_to_sf"]], "scanning_losses() (in module pyart.correct)": [[139, "pyart.correct.scanning_losses"], [780, "pyart.correct.scanning_losses"]], "smooth_masked() (in module pyart.correct)": [[140, "pyart.correct.smooth_masked"], [784, "pyart.correct.smooth_masked"]], "smooth_phidp_double_window() (in module pyart.correct)": [[141, "pyart.correct.smooth_phidp_double_window"], [785, "pyart.correct.smooth_phidp_double_window"]], "smooth_phidp_single_window() (in module pyart.correct)": [[142, "pyart.correct.smooth_phidp_single_window"], [786, "pyart.correct.smooth_phidp_single_window"]], "solar_flux_lookup() (in module pyart.correct)": [[143, "pyart.correct.solar_flux_lookup"], [787, "pyart.correct.solar_flux_lookup"]], "sun_position_mfr() (in module pyart.correct)": [[144, "pyart.correct.sun_position_mfr"], [788, "pyart.correct.sun_position_mfr"]], "sun_position_pysolar() (in module pyart.correct)": [[145, "pyart.correct.sun_position_pysolar"], [789, "pyart.correct.sun_position_pysolar"]], "sun_power() (in module pyart.correct)": [[146, "pyart.correct.sun_power"], [790, "pyart.correct.sun_power"]], "deprecatedattribute": [[147, "pyart.exceptions.DeprecatedAttribute"]], "deprecatedfunctionname": [[148, "pyart.exceptions.DeprecatedFunctionName"]], "missingoptionaldependency": [[149, "pyart.exceptions.MissingOptionalDependency"]], "_deprecated_alias() (in module pyart.exceptions)": [[150, "pyart.exceptions._deprecated_alias"]], "gatefilter (class in pyart.filters)": [[151, "pyart.filters.GateFilter"], [794, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[152, "pyart.filters.GateFilter.copy"], [795, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[153, "pyart.filters.GateFilter.exclude_above"], [796, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[154, "pyart.filters.GateFilter.exclude_all"], [797, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[155, "pyart.filters.GateFilter.exclude_below"], [798, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[156, "pyart.filters.GateFilter.exclude_equal"], [799, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[157, "pyart.filters.GateFilter.exclude_gates"], [800, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[158, "pyart.filters.GateFilter.exclude_inside"], [801, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[159, "pyart.filters.GateFilter.exclude_invalid"], [802, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[160, "pyart.filters.GateFilter.exclude_masked"], [803, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[161, "pyart.filters.GateFilter.exclude_none"], [804, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[162, "pyart.filters.GateFilter.exclude_not_equal"], [805, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[163, "pyart.filters.GateFilter.exclude_outside"], [806, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[164, "pyart.filters.GateFilter.exclude_transition"], [807, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[165, "pyart.filters.GateFilter.gate_excluded"], [808, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[166, "pyart.filters.GateFilter.gate_included"], [809, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[167, "pyart.filters.GateFilter.include_above"], [810, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[168, "pyart.filters.GateFilter.include_all"], [811, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[169, "pyart.filters.GateFilter.include_below"], [812, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[170, "pyart.filters.GateFilter.include_equal"], [813, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.include_gates"], [814, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.include_inside"], [815, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.include_none"], [816, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.include_not_equal"], [817, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.include_not_masked"], [818, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.include_not_transition"], [819, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.include_outside"], [820, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.include_valid"], [821, "pyart.filters.GateFilter.include_valid"]], "birds_gate_filter() (in module pyart.filters)": [[179, "pyart.filters.birds_gate_filter"], [822, "pyart.filters.birds_gate_filter"]], "class_based_gate_filter() (in module pyart.filters)": [[180, "pyart.filters.class_based_gate_filter"], [823, "pyart.filters.class_based_gate_filter"]], "iso0_based_gate_filter() (in module pyart.filters)": [[181, "pyart.filters.iso0_based_gate_filter"], [824, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[182, "pyart.filters.moment_and_texture_based_gate_filter"], [825, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[183, "pyart.filters.moment_based_gate_filter"], [826, "pyart.filters.moment_based_gate_filter"]], "snr_based_gate_filter() (in module pyart.filters)": [[184, "pyart.filters.snr_based_gate_filter"], [827, "pyart.filters.snr_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[185, "pyart.filters.temp_based_gate_filter"], [828, "pyart.filters.temp_based_gate_filter"]], "visibility_based_gate_filter() (in module pyart.filters)": [[186, "pyart.filters.visibility_based_gate_filter"], [829, "pyart.filters.visibility_based_gate_filter"]], "airborneradardisplay (class in pyart.graph)": [[187, "pyart.graph.AirborneRadarDisplay"], [831, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[188, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"], [832, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[189, "pyart.graph.AirborneRadarDisplay.generate_filename"], [833, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[190, "pyart.graph.AirborneRadarDisplay.generate_ray_title"], [834, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[191, "pyart.graph.AirborneRadarDisplay.generate_title"], [835, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[192, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"], [836, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.airborneradardisplay method)": [[193, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"], [837, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[194, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"], [838, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[195, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"], [839, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[196, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"], [840, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[197, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"], [841, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.airborneradardisplay method)": [[198, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"], [842, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[199, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"], [843, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.airborneradardisplay method)": [[200, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"], [844, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[201, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"], [845, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[202, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"], [846, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[203, "pyart.graph.AirborneRadarDisplay.plot"], [847, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[204, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"], [848, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[205, "pyart.graph.AirborneRadarDisplay.plot_colorbar"], [849, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"], [850, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[207, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"], [851, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[208, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"], [852, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.plot_label"], [853, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[210, "pyart.graph.AirborneRadarDisplay.plot_labels"], [854, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.plot_ppi"], [855, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[212, "pyart.graph.AirborneRadarDisplay.plot_range_ring"], [856, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.plot_range_rings"], [857, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.plot_ray"], [858, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.plot_rhi"], [859, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"], [860, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.plot_vpt"], [861, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot_xsection"], [862, "pyart.graph.AirborneRadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[219, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"], [863, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.set_limits"], [864, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[221, "pyart.graph.GridMapDisplay"], [865, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[222, "pyart.graph.GridMapDisplay.cartopy_coastlines"], [866, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[223, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"], [867, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[224, "pyart.graph.GridMapDisplay.cartopy_states"], [868, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[225, "pyart.graph.GridMapDisplay.generate_filename"], [869, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[226, "pyart.graph.GridMapDisplay.generate_grid_title"], [870, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[227, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"], [871, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[228, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"], [872, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[229, "pyart.graph.GridMapDisplay.plot_colorbar"], [873, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[230, "pyart.graph.GridMapDisplay.plot_cross_section"], [874, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_cross_section_level() (pyart.graph.gridmapdisplay method)": [[231, "pyart.graph.GridMapDisplay.plot_cross_section_level"], [875, "pyart.graph.GridMapDisplay.plot_cross_section_level"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[232, "pyart.graph.GridMapDisplay.plot_crosshairs"], [876, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[233, "pyart.graph.GridMapDisplay.plot_grid"], [877, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_grid_contour() (pyart.graph.gridmapdisplay method)": [[234, "pyart.graph.GridMapDisplay.plot_grid_contour"], [878, "pyart.graph.GridMapDisplay.plot_grid_contour"]], "plot_grid_raw() (pyart.graph.gridmapdisplay method)": [[235, "pyart.graph.GridMapDisplay.plot_grid_raw"], [879, "pyart.graph.GridMapDisplay.plot_grid_raw"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.plot_latitude_slice"], [880, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.plot_latitudinal_level"], [881, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.plot_longitude_slice"], [882, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.plot_longitudinal_level"], [883, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[240, "pyart.graph.GridMapDisplayBasemap"], [884, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[241, "pyart.graph.GridMapDisplayBasemap.generate_filename"], [885, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[242, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"], [886, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[243, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"], [887, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[244, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"], [888, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[245, "pyart.graph.GridMapDisplayBasemap.get_basemap"], [889, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[246, "pyart.graph.GridMapDisplayBasemap.plot_basemap"], [890, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[247, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"], [891, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[248, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"], [892, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[249, "pyart.graph.GridMapDisplayBasemap.plot_grid"], [893, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[250, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"], [894, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[251, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"], [895, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[252, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"], [896, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[253, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"], [897, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[254, "pyart.graph.RadarDisplay"], [898, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[255, "pyart.graph.RadarDisplay.generate_az_rhi_title"], [899, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[256, "pyart.graph.RadarDisplay.generate_filename"], [900, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[257, "pyart.graph.RadarDisplay.generate_ray_title"], [901, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[258, "pyart.graph.RadarDisplay.generate_title"], [902, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[259, "pyart.graph.RadarDisplay.generate_vpt_title"], [903, "pyart.graph.RadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radardisplay method)": [[260, "pyart.graph.RadarDisplay.generate_xsection_title"], [904, "pyart.graph.RadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[261, "pyart.graph.RadarDisplay.label_xaxis_r"], [905, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[262, "pyart.graph.RadarDisplay.label_xaxis_rays"], [906, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[263, "pyart.graph.RadarDisplay.label_xaxis_time"], [907, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[264, "pyart.graph.RadarDisplay.label_xaxis_x"], [908, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radardisplay method)": [[265, "pyart.graph.RadarDisplay.label_xaxis_xsection"], [909, "pyart.graph.RadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[266, "pyart.graph.RadarDisplay.label_yaxis_field"], [910, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radardisplay method)": [[267, "pyart.graph.RadarDisplay.label_yaxis_xsection"], [911, "pyart.graph.RadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[268, "pyart.graph.RadarDisplay.label_yaxis_y"], [912, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.label_yaxis_z"], [913, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[270, "pyart.graph.RadarDisplay.plot"], [914, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[271, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"], [915, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.plot_colorbar"], [916, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.plot_cr_raster"], [917, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[274, "pyart.graph.RadarDisplay.plot_cross_hair"], [918, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[275, "pyart.graph.RadarDisplay.plot_grid_lines"], [919, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.plot_label"], [920, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.plot_labels"], [921, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.plot_ppi"], [922, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[279, "pyart.graph.RadarDisplay.plot_range_ring"], [923, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.plot_range_rings"], [924, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[281, "pyart.graph.RadarDisplay.plot_ray"], [925, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.plot_rhi"], [926, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.plot_vpt"], [927, "pyart.graph.RadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot_xsection"], [928, "pyart.graph.RadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[285, "pyart.graph.RadarDisplay.set_aspect_ratio"], [929, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[286, "pyart.graph.RadarDisplay.set_limits"], [930, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[287, "pyart.graph.RadarMapDisplay"], [931, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[288, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"], [932, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[289, "pyart.graph.RadarMapDisplay.generate_filename"], [933, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[290, "pyart.graph.RadarMapDisplay.generate_ray_title"], [934, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[291, "pyart.graph.RadarMapDisplay.generate_title"], [935, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[292, "pyart.graph.RadarMapDisplay.generate_vpt_title"], [936, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplay method)": [[293, "pyart.graph.RadarMapDisplay.generate_xsection_title"], [937, "pyart.graph.RadarMapDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[294, "pyart.graph.RadarMapDisplay.label_xaxis_r"], [938, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[295, "pyart.graph.RadarMapDisplay.label_xaxis_rays"], [939, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[296, "pyart.graph.RadarMapDisplay.label_xaxis_time"], [940, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[297, "pyart.graph.RadarMapDisplay.label_xaxis_x"], [941, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"], [942, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[299, "pyart.graph.RadarMapDisplay.label_yaxis_field"], [943, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplay method)": [[300, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"], [944, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[301, "pyart.graph.RadarMapDisplay.label_yaxis_y"], [945, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.label_yaxis_z"], [946, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.plot"], [947, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"], [948, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.plot_colorbar"], [949, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.plot_cr_raster"], [950, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[307, "pyart.graph.RadarMapDisplay.plot_cross_hair"], [951, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[308, "pyart.graph.RadarMapDisplay.plot_grid_lines"], [952, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.plot_label"], [953, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.plot_labels"], [954, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.plot_line_geo"], [955, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.plot_line_xy"], [956, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.plot_point"], [957, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.plot_ppi"], [958, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_ppi_map"], [959, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_range_ring"], [960, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_range_rings"], [961, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_ray"], [962, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_rhi"], [963, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_vpt"], [964, "pyart.graph.RadarMapDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_xsection"], [965, "pyart.graph.RadarMapDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[322, "pyart.graph.RadarMapDisplay.set_aspect_ratio"], [966, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[323, "pyart.graph.RadarMapDisplay.set_limits"], [967, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[324, "pyart.graph.RadarMapDisplayBasemap"], [968, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[325, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"], [969, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[326, "pyart.graph.RadarMapDisplayBasemap.generate_filename"], [970, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[327, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"], [971, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[328, "pyart.graph.RadarMapDisplayBasemap.generate_title"], [972, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[329, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"], [973, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplaybasemap method)": [[330, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"], [974, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"], [975, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[332, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"], [976, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[333, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"], [977, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[334, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"], [978, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"], [979, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"], [980, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"], [981, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"], [982, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"], [983, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.plot"], [984, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"], [985, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[342, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"], [986, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"], [987, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"], [988, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"], [989, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_label"], [990, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_labels"], [991, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"], [992, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"], [993, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_point"], [994, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"], [995, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"], [996, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"], [997, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"], [998, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_ray"], [999, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"], [1000, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"], [1001, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"], [1002, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[359, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"], [1003, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[360, "pyart.graph.RadarMapDisplayBasemap.set_limits"], [1004, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "make_time_unit_str() (in module pyart.io)": [[361, "pyart.io.make_time_unit_str"], [1007, "pyart.io.make_time_unit_str"]], "prepare_for_read() (in module pyart.io)": [[362, "pyart.io.prepare_for_read"], [1008, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[363, "pyart.io.read"], [1009, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[364, "pyart.io.read_arm_sonde"], [1010, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[365, "pyart.io.read_arm_sonde_vap"], [1011, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[366, "pyart.io.read_cfradial"], [1012, "pyart.io.read_cfradial"]], "read_cfradial2() (in module pyart.io)": [[367, "pyart.io.read_cfradial2"], [1013, "pyart.io.read_cfradial2"]], "read_chl() (in module pyart.io)": [[368, "pyart.io.read_chl"], [1014, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[369, "pyart.io.read_grid"], [1015, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[370, "pyart.io.read_grid_mdv"], [1016, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[371, "pyart.io.read_mdv"], [1017, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[372, "pyart.io.read_nexrad_archive"], [1018, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[373, "pyart.io.read_nexrad_cdm"], [1019, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[374, "pyart.io.read_nexrad_level3"], [1020, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[375, "pyart.io.read_rsl"], [1021, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[376, "pyart.io.read_sigmet"], [1022, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[377, "pyart.io.read_uf"], [1023, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[378, "pyart.io.write_cfradial"], [1024, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[379, "pyart.io.write_grid"], [1025, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[380, "pyart.io.write_grid_geotiff"], [1026, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[381, "pyart.io.write_grid_mdv"], [1027, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[382, "pyart.io.write_uf"], [1028, "pyart.io.write_uf"]], "lazyloaddict (class in pyart.lazydict)": [[383, "pyart.lazydict.LazyLoadDict"], [1030, "pyart.lazydict.LazyLoadDict"]], "__contains__() (pyart.lazydict.lazyloaddict method)": [[384, "pyart.lazydict.LazyLoadDict.__contains__"]], "__delattr__() (pyart.lazydict.lazyloaddict method)": [[385, "pyart.lazydict.LazyLoadDict.__delattr__"]], "__delitem__() (pyart.lazydict.lazyloaddict method)": [[386, "pyart.lazydict.LazyLoadDict.__delitem__"]], "__dir__() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.__dir__"]], "__eq__() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.__eq__"]], "__format__() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.__format__"]], "__ge__() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.__ge__"]], "__getattribute__() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.__getattribute__"]], "__getitem__() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.__getitem__"]], "__getstate__() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.__getstate__"]], "__gt__() (pyart.lazydict.lazyloaddict method)": [[394, "pyart.lazydict.LazyLoadDict.__gt__"]], "__init__() (pyart.lazydict.lazyloaddict method)": [[395, "pyart.lazydict.LazyLoadDict.__init__"]], "__init_subclass__() (pyart.lazydict.lazyloaddict method)": [[396, "pyart.lazydict.LazyLoadDict.__init_subclass__"]], "__iter__() (pyart.lazydict.lazyloaddict method)": [[397, "pyart.lazydict.LazyLoadDict.__iter__"]], "__le__() (pyart.lazydict.lazyloaddict method)": [[398, "pyart.lazydict.LazyLoadDict.__le__"]], "__len__() (pyart.lazydict.lazyloaddict method)": [[399, "pyart.lazydict.LazyLoadDict.__len__"]], "__lt__() (pyart.lazydict.lazyloaddict method)": [[400, "pyart.lazydict.LazyLoadDict.__lt__"]], "__ne__() (pyart.lazydict.lazyloaddict method)": [[401, "pyart.lazydict.LazyLoadDict.__ne__"]], "__new__() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.__new__"]], "__reduce__() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.__reduce__"]], "__reduce_ex__() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.__reduce_ex__"]], "__repr__() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.__repr__"]], "__setattr__() (pyart.lazydict.lazyloaddict method)": [[406, "pyart.lazydict.LazyLoadDict.__setattr__"]], "__setitem__() (pyart.lazydict.lazyloaddict method)": [[407, "pyart.lazydict.LazyLoadDict.__setitem__"]], "__sizeof__() (pyart.lazydict.lazyloaddict method)": [[408, "pyart.lazydict.LazyLoadDict.__sizeof__"]], "__str__() (pyart.lazydict.lazyloaddict method)": [[409, "pyart.lazydict.LazyLoadDict.__str__"]], "__subclasshook__() (pyart.lazydict.lazyloaddict class method)": [[410, "pyart.lazydict.LazyLoadDict.__subclasshook__"]], "clear() (pyart.lazydict.lazyloaddict method)": [[411, "pyart.lazydict.LazyLoadDict.clear"], [1031, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[412, "pyart.lazydict.LazyLoadDict.copy"], [1032, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[413, "pyart.lazydict.LazyLoadDict.get"], [1033, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[414, "pyart.lazydict.LazyLoadDict.has_key"], [1034, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[415, "pyart.lazydict.LazyLoadDict.items"], [1035, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[416, "pyart.lazydict.LazyLoadDict.keys"], [1036, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[417, "pyart.lazydict.LazyLoadDict.pop"], [1037, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[418, "pyart.lazydict.LazyLoadDict.popitem"], [1038, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[419, "pyart.lazydict.LazyLoadDict.set_lazy"], [1039, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[420, "pyart.lazydict.LazyLoadDict.setdefault"], [1040, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[421, "pyart.lazydict.LazyLoadDict.update"], [1041, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[422, "pyart.lazydict.LazyLoadDict.values"], [1042, "pyart.lazydict.LazyLoadDict.values"]], "_destandardize() (in module pyart.retrieve)": [[423, "pyart.retrieve._destandardize"]], "_get_res_vol_sides() (in module pyart.retrieve)": [[424, "pyart.retrieve._get_res_vol_sides"]], "atmospheric_gas_att() (in module pyart.retrieve)": [[425, "pyart.retrieve.atmospheric_gas_att"], [1067, "pyart.retrieve.atmospheric_gas_att"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[426, "pyart.retrieve.calculate_snr_from_reflectivity"], [1068, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[427, "pyart.retrieve.calculate_velocity_texture"], [1069, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[428, "pyart.retrieve.composite_reflectivity"], [1070, "pyart.retrieve.composite_reflectivity"]], "compute_doppler_velocity() (in module pyart.retrieve)": [[429, "pyart.retrieve.compute_Doppler_velocity"], [1071, "pyart.retrieve.compute_Doppler_velocity"]], "compute_doppler_velocity_iq() (in module pyart.retrieve)": [[430, "pyart.retrieve.compute_Doppler_velocity_iq"], [1072, "pyart.retrieve.compute_Doppler_velocity_iq"]], "compute_doppler_width() (in module pyart.retrieve)": [[431, "pyart.retrieve.compute_Doppler_width"], [1073, "pyart.retrieve.compute_Doppler_width"]], "compute_doppler_width_iq() (in module pyart.retrieve)": [[432, "pyart.retrieve.compute_Doppler_width_iq"], [1074, "pyart.retrieve.compute_Doppler_width_iq"]], "compute_apparent_profile() (in module pyart.retrieve)": [[433, "pyart.retrieve.compute_apparent_profile"], [1075, "pyart.retrieve.compute_apparent_profile"]], "compute_bird_density() (in module pyart.retrieve)": [[434, "pyart.retrieve.compute_bird_density"], [1076, "pyart.retrieve.compute_bird_density"]], "compute_ccor() (in module pyart.retrieve)": [[435, "pyart.retrieve.compute_ccor"], [1077, "pyart.retrieve.compute_ccor"]], "compute_cdr() (in module pyart.retrieve)": [[436, "pyart.retrieve.compute_cdr"], [1078, "pyart.retrieve.compute_cdr"]], "compute_centroids() (in module pyart.retrieve)": [[437, "pyart.retrieve.compute_centroids"], [1079, "pyart.retrieve.compute_centroids"]], "compute_differential_phase() (in module pyart.retrieve)": [[438, "pyart.retrieve.compute_differential_phase"], [1080, "pyart.retrieve.compute_differential_phase"]], "compute_differential_phase_iq() (in module pyart.retrieve)": [[439, "pyart.retrieve.compute_differential_phase_iq"], [1081, "pyart.retrieve.compute_differential_phase_iq"]], "compute_differential_reflectivity() (in module pyart.retrieve)": [[440, "pyart.retrieve.compute_differential_reflectivity"], [1082, "pyart.retrieve.compute_differential_reflectivity"]], "compute_differential_reflectivity_iq() (in module pyart.retrieve)": [[441, "pyart.retrieve.compute_differential_reflectivity_iq"], [1083, "pyart.retrieve.compute_differential_reflectivity_iq"]], "compute_evp() (in module pyart.retrieve)": [[442, "pyart.retrieve.compute_evp"], [1084, "pyart.retrieve.compute_evp"]], "compute_iq() (in module pyart.retrieve)": [[443, "pyart.retrieve.compute_iq"], [1085, "pyart.retrieve.compute_iq"]], "compute_l() (in module pyart.retrieve)": [[444, "pyart.retrieve.compute_l"], [1086, "pyart.retrieve.compute_l"]], "compute_mean_phase_iq() (in module pyart.retrieve)": [[445, "pyart.retrieve.compute_mean_phase_iq"], [1087, "pyart.retrieve.compute_mean_phase_iq"]], "compute_noise_power() (in module pyart.retrieve)": [[446, "pyart.retrieve.compute_noise_power"], [1088, "pyart.retrieve.compute_noise_power"]], "compute_noisedbz() (in module pyart.retrieve)": [[447, "pyart.retrieve.compute_noisedBZ"], [1089, "pyart.retrieve.compute_noisedBZ"]], "compute_pol_variables() (in module pyart.retrieve)": [[448, "pyart.retrieve.compute_pol_variables"], [1090, "pyart.retrieve.compute_pol_variables"]], "compute_pol_variables_iq() (in module pyart.retrieve)": [[449, "pyart.retrieve.compute_pol_variables_iq"], [1091, "pyart.retrieve.compute_pol_variables_iq"]], "compute_qvp() (in module pyart.retrieve)": [[450, "pyart.retrieve.compute_qvp"], [1092, "pyart.retrieve.compute_qvp"]], "compute_radial_noise_hs() (in module pyart.retrieve)": [[451, "pyart.retrieve.compute_radial_noise_hs"], [1093, "pyart.retrieve.compute_radial_noise_hs"]], "compute_radial_noise_ivic() (in module pyart.retrieve)": [[452, "pyart.retrieve.compute_radial_noise_ivic"], [1094, "pyart.retrieve.compute_radial_noise_ivic"]], "compute_rcs() (in module pyart.retrieve)": [[453, "pyart.retrieve.compute_rcs"], [1095, "pyart.retrieve.compute_rcs"]], "compute_rcs_from_pr() (in module pyart.retrieve)": [[454, "pyart.retrieve.compute_rcs_from_pr"], [1096, "pyart.retrieve.compute_rcs_from_pr"]], "compute_reflectivity() (in module pyart.retrieve)": [[455, "pyart.retrieve.compute_reflectivity"], [1097, "pyart.retrieve.compute_reflectivity"]], "compute_reflectivity_iq() (in module pyart.retrieve)": [[456, "pyart.retrieve.compute_reflectivity_iq"], [1098, "pyart.retrieve.compute_reflectivity_iq"]], "compute_rhohv() (in module pyart.retrieve)": [[457, "pyart.retrieve.compute_rhohv"], [1099, "pyart.retrieve.compute_rhohv"]], "compute_rhohv_iq() (in module pyart.retrieve)": [[458, "pyart.retrieve.compute_rhohv_iq"], [1100, "pyart.retrieve.compute_rhohv_iq"]], "compute_rqvp() (in module pyart.retrieve)": [[459, "pyart.retrieve.compute_rqvp"], [1101, "pyart.retrieve.compute_rqvp"]], "compute_signal_power() (in module pyart.retrieve)": [[460, "pyart.retrieve.compute_signal_power"], [1102, "pyart.retrieve.compute_signal_power"]], "compute_snr() (in module pyart.retrieve)": [[461, "pyart.retrieve.compute_snr"], [1103, "pyart.retrieve.compute_snr"]], "compute_spectra() (in module pyart.retrieve)": [[462, "pyart.retrieve.compute_spectra"], [1104, "pyart.retrieve.compute_spectra"]], "compute_spectral_differential_phase() (in module pyart.retrieve)": [[463, "pyart.retrieve.compute_spectral_differential_phase"], [1105, "pyart.retrieve.compute_spectral_differential_phase"]], "compute_spectral_differential_reflectivity() (in module pyart.retrieve)": [[464, "pyart.retrieve.compute_spectral_differential_reflectivity"], [1106, "pyart.retrieve.compute_spectral_differential_reflectivity"]], "compute_spectral_noise() (in module pyart.retrieve)": [[465, "pyart.retrieve.compute_spectral_noise"], [1107, "pyart.retrieve.compute_spectral_noise"]], "compute_spectral_phase() (in module pyart.retrieve)": [[466, "pyart.retrieve.compute_spectral_phase"], [1108, "pyart.retrieve.compute_spectral_phase"]], "compute_spectral_power() (in module pyart.retrieve)": [[467, "pyart.retrieve.compute_spectral_power"], [1109, "pyart.retrieve.compute_spectral_power"]], "compute_spectral_reflectivity() (in module pyart.retrieve)": [[468, "pyart.retrieve.compute_spectral_reflectivity"], [1110, "pyart.retrieve.compute_spectral_reflectivity"]], "compute_spectral_rhohv() (in module pyart.retrieve)": [[469, "pyart.retrieve.compute_spectral_rhohv"], [1111, "pyart.retrieve.compute_spectral_rhohv"]], "compute_st1_iq() (in module pyart.retrieve)": [[470, "pyart.retrieve.compute_st1_iq"], [1112, "pyart.retrieve.compute_st1_iq"]], "compute_st2_iq() (in module pyart.retrieve)": [[471, "pyart.retrieve.compute_st2_iq"], [1113, "pyart.retrieve.compute_st2_iq"]], "compute_svp() (in module pyart.retrieve)": [[472, "pyart.retrieve.compute_svp"], [1114, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[473, "pyart.retrieve.compute_ts_along_coord"], [1115, "pyart.retrieve.compute_ts_along_coord"]], "compute_vol_refl() (in module pyart.retrieve)": [[474, "pyart.retrieve.compute_vol_refl"], [1116, "pyart.retrieve.compute_vol_refl"]], "compute_vp() (in module pyart.retrieve)": [[475, "pyart.retrieve.compute_vp"], [1117, "pyart.retrieve.compute_vp"]], "compute_wbn_iq() (in module pyart.retrieve)": [[476, "pyart.retrieve.compute_wbn_iq"], [1118, "pyart.retrieve.compute_wbn_iq"]], "conv_strat_raut() (in module pyart.retrieve)": [[477, "pyart.retrieve.conv_strat_raut"], [1119, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[478, "pyart.retrieve.conv_strat_yuter"], [1120, "pyart.retrieve.conv_strat_yuter"]], "data_for_centroids() (in module pyart.retrieve)": [[479, "pyart.retrieve.data_for_centroids"], [1121, "pyart.retrieve.data_for_centroids"]], "dealias_spectra() (in module pyart.retrieve)": [[480, "pyart.retrieve.dealias_spectra"], [1122, "pyart.retrieve.dealias_spectra"]], "detect_ml() (in module pyart.retrieve)": [[481, "pyart.retrieve.detect_ml"], [1123, "pyart.retrieve.detect_ml"]], "determine_medoids() (in module pyart.retrieve)": [[482, "pyart.retrieve.determine_medoids"], [1124, "pyart.retrieve.determine_medoids"]], "est_rain_rate_a() (in module pyart.retrieve)": [[483, "pyart.retrieve.est_rain_rate_a"], [1125, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[484, "pyart.retrieve.est_rain_rate_hydro"], [1126, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[485, "pyart.retrieve.est_rain_rate_kdp"], [1127, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[486, "pyart.retrieve.est_rain_rate_z"], [1128, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[487, "pyart.retrieve.est_rain_rate_za"], [1129, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[488, "pyart.retrieve.est_rain_rate_zkdp"], [1130, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[489, "pyart.retrieve.est_rain_rate_zpoly"], [1131, "pyart.retrieve.est_rain_rate_zpoly"]], "est_vertical_windshear() (in module pyart.retrieve)": [[490, "pyart.retrieve.est_vertical_windshear"], [1132, "pyart.retrieve.est_vertical_windshear"]], "est_vertical_windshear_lidar() (in module pyart.retrieve)": [[491, "pyart.retrieve.est_vertical_windshear_lidar"], [1133, "pyart.retrieve.est_vertical_windshear_lidar"]], "est_wind_profile() (in module pyart.retrieve)": [[492, "pyart.retrieve.est_wind_profile"], [1134, "pyart.retrieve.est_wind_profile"]], "est_wind_vel() (in module pyart.retrieve)": [[493, "pyart.retrieve.est_wind_vel"], [1135, "pyart.retrieve.est_wind_vel"]], "feature_detection() (in module pyart.retrieve)": [[494, "pyart.retrieve.feature_detection"], [1136, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[495, "pyart.retrieve.fetch_radar_time_profile"], [1137, "pyart.retrieve.fetch_radar_time_profile"]], "gecsx() (in module pyart.retrieve)": [[496, "pyart.retrieve.gecsx"], [1138, "pyart.retrieve.gecsx"]], "get_coeff_attg() (in module pyart.retrieve)": [[497, "pyart.retrieve.get_coeff_attg"], [1139, "pyart.retrieve.get_coeff_attg"]], "get_freq_band() (in module pyart.retrieve)": [[498, "pyart.retrieve.get_freq_band"], [1140, "pyart.retrieve.get_freq_band"]], "get_iso0_val() (in module pyart.retrieve)": [[499, "pyart.retrieve.get_iso0_val"], [1141, "pyart.retrieve.get_iso0_val"]], "get_ml_rng_limits() (in module pyart.retrieve)": [[500, "pyart.retrieve.get_ml_rng_limits"], [1142, "pyart.retrieve.get_ml_rng_limits"]], "grid_displacement_pc() (in module pyart.retrieve)": [[501, "pyart.retrieve.grid_displacement_pc"], [1143, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[502, "pyart.retrieve.grid_shift"], [1144, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[503, "pyart.retrieve.hydroclass_semisupervised"], [1145, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_leastsquare_double_window() (in module pyart.retrieve)": [[504, "pyart.retrieve.kdp_leastsquare_double_window"], [1146, "pyart.retrieve.kdp_leastsquare_double_window"]], "kdp_leastsquare_single_window() (in module pyart.retrieve)": [[505, "pyart.retrieve.kdp_leastsquare_single_window"], [1147, "pyart.retrieve.kdp_leastsquare_single_window"]], "kdp_maesaka() (in module pyart.retrieve)": [[506, "pyart.retrieve.kdp_maesaka"], [1148, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[507, "pyart.retrieve.kdp_schneebeli"], [1149, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[508, "pyart.retrieve.kdp_vulpiani"], [1150, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[509, "pyart.retrieve.map_profile_to_gates"], [1151, "pyart.retrieve.map_profile_to_gates"]], "melting_layer_giangrande() (in module pyart.retrieve)": [[510, "pyart.retrieve.melting_layer_giangrande"], [1152, "pyart.retrieve.melting_layer_giangrande"]], "melting_layer_hydroclass() (in module pyart.retrieve)": [[511, "pyart.retrieve.melting_layer_hydroclass"], [1153, "pyart.retrieve.melting_layer_hydroclass"]], "melting_layer_mf() (in module pyart.retrieve)": [[512, "pyart.retrieve.melting_layer_mf"], [1154, "pyart.retrieve.melting_layer_mf"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[513, "pyart.retrieve.quasi_vertical_profile"], [1155, "pyart.retrieve.quasi_vertical_profile"]], "select_samples() (in module pyart.retrieve)": [[514, "pyart.retrieve.select_samples"], [1156, "pyart.retrieve.select_samples"]], "steiner_conv_strat() (in module pyart.retrieve)": [[515, "pyart.retrieve.steiner_conv_strat"], [1157, "pyart.retrieve.steiner_conv_strat"]], "synthetic_obs_distribution() (in module pyart.retrieve)": [[516, "pyart.retrieve.synthetic_obs_distribution"], [1158, "pyart.retrieve.synthetic_obs_distribution"]], "vad_browning() (in module pyart.retrieve)": [[517, "pyart.retrieve.vad_browning"], [1160, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[518, "pyart.retrieve.vad_michelson"], [1161, "pyart.retrieve.vad_michelson"]], "epoch_units (in module pyart.util)": [[519, "pyart.util.EPOCH_UNITS"]], "angular_mean() (in module pyart.util)": [[520, "pyart.util.angular_mean"], [1249, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[521, "pyart.util.angular_mean_deg"], [1250, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[522, "pyart.util.angular_std"], [1251, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[523, "pyart.util.angular_std_deg"], [1252, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[524, "pyart.util.angular_texture_2d"], [1253, "pyart.util.angular_texture_2d"]], "colocated_gates() (in module pyart.util)": [[525, "pyart.util.colocated_gates"], [1254, "pyart.util.colocated_gates"]], "colocated_gates2() (in module pyart.util)": [[526, "pyart.util.colocated_gates2"], [1255, "pyart.util.colocated_gates2"]], "compute_azimuthal_average() (in module pyart.util)": [[527, "pyart.util.compute_azimuthal_average"], [1256, "pyart.util.compute_azimuthal_average"]], "compute_corr() (in module pyart.util)": [[528, "pyart.util.compute_corr"], [1257, "pyart.util.compute_corr"]], "compute_directional_stats() (in module pyart.util)": [[529, "pyart.util.compute_directional_stats"], [1258, "pyart.util.compute_directional_stats"]], "compute_mse() (in module pyart.util)": [[530, "pyart.util.compute_mse"], [1259, "pyart.util.compute_mse"]], "compute_nse() (in module pyart.util)": [[531, "pyart.util.compute_nse"], [1260, "pyart.util.compute_nse"]], "cross_section_ppi() (in module pyart.util)": [[532, "pyart.util.cross_section_ppi"], [1261, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[533, "pyart.util.cross_section_rhi"], [1262, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[534, "pyart.util.datetime_from_dataset"], [1263, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[535, "pyart.util.datetime_from_grid"], [1264, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[536, "pyart.util.datetime_from_radar"], [1265, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[537, "pyart.util.datetimes_from_dataset"], [1266, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[538, "pyart.util.datetimes_from_radar"], [1267, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[539, "pyart.util.determine_sweeps"], [1268, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[540, "pyart.util.estimate_noise_hs74"], [1269, "pyart.util.estimate_noise_hs74"]], "estimate_noise_ivic13() (in module pyart.util)": [[541, "pyart.util.estimate_noise_ivic13"], [1270, "pyart.util.estimate_noise_ivic13"]], "find_neighbour_gates() (in module pyart.util)": [[542, "pyart.util.find_neighbour_gates"], [1271, "pyart.util.find_neighbour_gates"]], "for_azimuth() (in module pyart.util)": [[543, "pyart.util.for_azimuth"], [1272, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[544, "pyart.util.get_column_rays"], [1273, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[545, "pyart.util.get_field_location"], [1274, "pyart.util.get_field_location"]], "get_ivic_flat_reg_var_max() (in module pyart.util)": [[546, "pyart.util.get_ivic_flat_reg_var_max"], [1275, "pyart.util.get_ivic_flat_reg_var_max"]], "get_ivic_pct() (in module pyart.util)": [[547, "pyart.util.get_ivic_pct"], [1276, "pyart.util.get_ivic_pct"]], "get_ivic_snr_thr() (in module pyart.util)": [[548, "pyart.util.get_ivic_snr_thr"], [1277, "pyart.util.get_ivic_snr_thr"]], "get_target_elevations() (in module pyart.util)": [[549, "pyart.util.get_target_elevations"], [1278, "pyart.util.get_target_elevations"]], "grid_texture_2d() (in module pyart.util)": [[550, "pyart.util.grid_texture_2d"], [1279, "pyart.util.grid_texture_2d"]], "image_mute_radar() (in module pyart.util)": [[551, "pyart.util.image_mute_radar"], [1280, "pyart.util.image_mute_radar"]], "interpol_spectra() (in module pyart.util)": [[552, "pyart.util.interpol_spectra"], [1281, "pyart.util.interpol_spectra"]], "intersection() (in module pyart.util)": [[553, "pyart.util.intersection"], [1282, "pyart.util.intersection"]], "interval_mean() (in module pyart.util)": [[554, "pyart.util.interval_mean"], [1283, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[555, "pyart.util.interval_std"], [1284, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[556, "pyart.util.is_vpt"], [1285, "pyart.util.is_vpt"]], "ivic_flat_reg_var_max_table() (in module pyart.util)": [[557, "pyart.util.ivic_flat_reg_var_max_table"], [1286, "pyart.util.ivic_flat_reg_var_max_table"]], "ivic_flat_reg_wind_len_table() (in module pyart.util)": [[558, "pyart.util.ivic_flat_reg_wind_len_table"], [1287, "pyart.util.ivic_flat_reg_wind_len_table"]], "ivic_pct_table() (in module pyart.util)": [[559, "pyart.util.ivic_pct_table"], [1288, "pyart.util.ivic_pct_table"]], "ivic_snr_thr_table() (in module pyart.util)": [[560, "pyart.util.ivic_snr_thr_table"], [1289, "pyart.util.ivic_snr_thr_table"]], "join_radar() (in module pyart.util)": [[561, "pyart.util.join_radar"], [1290, "pyart.util.join_radar"]], "join_spectra() (in module pyart.util)": [[562, "pyart.util.join_spectra"], [1291, "pyart.util.join_spectra"]], "ma_broadcast_to() (in module pyart.util)": [[563, "pyart.util.ma_broadcast_to"], [1292, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[564, "pyart.util.mean_of_two_angles"], [1293, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[565, "pyart.util.mean_of_two_angles_deg"], [1294, "pyart.util.mean_of_two_angles_deg"]], "radar_from_spectra() (in module pyart.util)": [[566, "pyart.util.radar_from_spectra"], [1295, "pyart.util.radar_from_spectra"]], "rolling_window() (in module pyart.util)": [[567, "pyart.util.rolling_window"], [1296, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[568, "pyart.util.simulated_vel_from_profile"], [1297, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[569, "pyart.util.sphere_distance"], [1298, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[570, "pyart.util.subset_radar"], [1299, "pyart.util.subset_radar"]], "subset_radar_spectra() (in module pyart.util)": [[571, "pyart.util.subset_radar_spectra"], [1300, "pyart.util.subset_radar_spectra"]], "texture() (in module pyart.util)": [[572, "pyart.util.texture"], [1301, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[573, "pyart.util.texture_along_ray"], [1302, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[574, "pyart.util.to_vpt"], [1303, "pyart.util.to_vpt"]], "_debug_info() (in module pyart)": [[575, "pyart._debug_info"]], "module": [[576, "module-pyart.aux_io"], [624, "module-pyart.bridge"], [626, "module-pyart.config"], [639, "module-pyart.core"], [721, "module-pyart.correct"], [792, "module-pyart.exceptions"], [793, "module-pyart.filters"], [830, "module-pyart.graph"], [1006, "module-pyart.io"], [1029, "module-pyart.lazydict"], [1053, "module-pyart.map"], [1066, "module-pyart.retrieve"], [1162, "module-pyart.testing"], [1248, "module-pyart.util"]], "pyart.aux_io": [[576, "module-pyart.aux_io"]], "convert_data() (in module pyart.aux_io)": [[577, "pyart.aux_io.convert_data"]], "get_library() (in module pyart.aux_io)": [[579, "pyart.aux_io.get_library"]], "read_edge_netcdf() (in module pyart.aux_io)": [[589, "pyart.aux_io.read_edge_netcdf"]], "read_file_c() (in module pyart.aux_io)": [[590, "pyart.aux_io.read_file_c"]], "read_file_py() (in module pyart.aux_io)": [[591, "pyart.aux_io.read_file_py"]], "read_knmi_grid_h5() (in module pyart.aux_io)": [[598, "pyart.aux_io.read_knmi_grid_h5"]], "read_mch_vad() (in module pyart.aux_io)": [[599, "pyart.aux_io.read_mch_vad"]], "read_product_c() (in module pyart.aux_io)": [[607, "pyart.aux_io.read_product_c"]], "read_product_py() (in module pyart.aux_io)": [[608, "pyart.aux_io.read_product_py"]], "read_psr_cpi_header() (in module pyart.aux_io)": [[609, "pyart.aux_io.read_psr_cpi_header"]], "read_psr_header() (in module pyart.aux_io)": [[610, "pyart.aux_io.read_psr_header"]], "read_psr_spectra() (in module pyart.aux_io)": [[611, "pyart.aux_io.read_psr_spectra"]], "read_sinarame_h5() (in module pyart.aux_io)": [[616, "pyart.aux_io.read_sinarame_h5"]], "pyart.bridge": [[624, "module-pyart.bridge"]], "pyart.config": [[626, "module-pyart.config"]], "get_ke() (in module pyart.config)": [[631, "pyart.config.get_KE"]], "pyart.core": [[639, "module-pyart.core"]], "pyart.correct": [[721, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[722, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[723, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[724, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[725, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[726, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[727, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[728, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[729, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[730, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[731, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[732, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[733, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[734, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[735, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[736, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[737, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[738, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[739, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[740, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[741, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[742, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[743, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[744, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[745, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[746, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[747, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[748, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[749, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[750, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[751, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[752, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[755, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[756, "pyart.correct.correct_noise_rhohv"]], "correct_visibility() (in module pyart.correct)": [[758, "pyart.correct.correct_visibility"]], "correct_vpr() (in module pyart.correct)": [[759, "pyart.correct.correct_vpr"]], "correct_vpr_spatialised() (in module pyart.correct)": [[760, "pyart.correct.correct_vpr_spatialised"]], "despeckle_field() (in module pyart.correct)": [[764, "pyart.correct.despeckle_field"]], "est_rhohv_rain() (in module pyart.correct)": [[766, "pyart.correct.est_rhohv_rain"]], "est_zdr_precip() (in module pyart.correct)": [[767, "pyart.correct.est_zdr_precip"]], "est_zdr_snow() (in module pyart.correct)": [[768, "pyart.correct.est_zdr_snow"]], "gauss_fit() (in module pyart.correct)": [[770, "pyart.correct.gauss_fit"]], "get_sun_hits() (in module pyart.correct)": [[772, "pyart.correct.get_sun_hits"]], "get_sun_hits_ivic() (in module pyart.correct)": [[773, "pyart.correct.get_sun_hits_ivic"]], "get_sun_hits_psr() (in module pyart.correct)": [[774, "pyart.correct.get_sun_hits_psr"]], "moment_based_gate_filter() (in module pyart.correct)": [[775, "pyart.correct.moment_based_gate_filter"]], "retrieval_result() (in module pyart.correct)": [[779, "pyart.correct.retrieval_result"]], "selfconsistency_bias() (in module pyart.correct)": [[781, "pyart.correct.selfconsistency_bias"]], "selfconsistency_bias2() (in module pyart.correct)": [[782, "pyart.correct.selfconsistency_bias2"]], "selfconsistency_kdp_phidp() (in module pyart.correct)": [[783, "pyart.correct.selfconsistency_kdp_phidp"]], "sun_retrieval() (in module pyart.correct)": [[791, "pyart.correct.sun_retrieval"]], "pyart.exceptions": [[792, "module-pyart.exceptions"]], "pyart.filters": [[793, "module-pyart.filters"]], "pyart.graph": [[830, "module-pyart.graph"]], "plot_convstrat_scheme() (in module pyart.graph)": [[1005, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[1006, "module-pyart.io"]], "pyart.lazydict": [[1029, "module-pyart.lazydict"]], "mutablemapping (class in pyart.lazydict)": [[1043, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[1044, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[1045, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[1046, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[1047, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[1048, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[1049, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[1050, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[1051, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[1052, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[1053, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[1054, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[1055, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[1056, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[1057, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[1058, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[1059, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[1060, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[1061, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[1062, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[1063, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[1064, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[1065, "pyart.map.map_to_grid"]], "pyart.retrieve": [[1066, "module-pyart.retrieve"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[1159, "pyart.retrieve.texture_of_complex_phase"]], "pyart.testing": [[1162, "module-pyart.testing"]], "grid (class in pyart.testing)": [[1163, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[1164, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[1165, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[1166, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[1167, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[1168, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[1169, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[1170, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[1171, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[1172, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[1173, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[1174, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[1175, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[1176, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[1177, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[1178, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[1179, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[1180, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[1181, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[1182, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[1183, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[1184, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[1185, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[1186, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[1187, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[1188, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[1189, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[1190, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[1191, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[1192, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[1193, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[1194, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[1195, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[1196, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[1197, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[1198, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[1199, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[1200, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[1201, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[1202, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[1203, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[1204, "pyart.testing.RadarSpectra"]], "add_field() (pyart.testing.radarspectra method)": [[1205, "pyart.testing.RadarSpectra.add_field"]], "add_field_like() (pyart.testing.radarspectra method)": [[1206, "pyart.testing.RadarSpectra.add_field_like"]], "add_filter() (pyart.testing.radarspectra method)": [[1207, "pyart.testing.RadarSpectra.add_filter"]], "check_field_exists() (pyart.testing.radarspectra method)": [[1208, "pyart.testing.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.testing.radarspectra method)": [[1209, "pyart.testing.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.testing.radarspectra method)": [[1210, "pyart.testing.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.testing.radarspectra method)": [[1211, "pyart.testing.RadarSpectra.get_elevation"]], "get_end() (pyart.testing.radarspectra method)": [[1212, "pyart.testing.RadarSpectra.get_end"]], "get_field() (pyart.testing.radarspectra method)": [[1213, "pyart.testing.RadarSpectra.get_field"]], "get_gate_area() (pyart.testing.radarspectra method)": [[1214, "pyart.testing.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radarspectra method)": [[1215, "pyart.testing.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radarspectra method)": [[1216, "pyart.testing.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radarspectra method)": [[1217, "pyart.testing.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.testing.radarspectra method)": [[1218, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[1219, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[1220, "pyart.testing.RadarSpectra.get_start_end"]], "info() (pyart.testing.radarspectra method)": [[1221, "pyart.testing.RadarSpectra.info"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[1222, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[1223, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[1224, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[1225, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[1226, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[1227, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[1228, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[1229, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[1230, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[1231, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[1232, "pyart.testing.RadarSpectra.iter_start_end"]], "get_metadata() (in module pyart.testing)": [[1233, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[1234, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[1235, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[1236, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[1237, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[1238, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[1239, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[1240, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[1241, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[1242, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[1243, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[1244, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[1245, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[1246, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[1247, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[1248, "module-pyart.util"]]}})