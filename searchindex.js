Search.setIndex({"docnames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/generated/pyart.aux_io.read_bin", "API/generated/generated/pyart.aux_io.read_bin_mf", "API/generated/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/generated/pyart.aux_io.read_cf1", "API/generated/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/generated/pyart.aux_io.read_dat_mf", "API/generated/generated/pyart.aux_io.read_gamic", "API/generated/generated/pyart.aux_io.read_gif", "API/generated/generated/pyart.aux_io.read_grib", "API/generated/generated/pyart.aux_io.read_hpl", "API/generated/generated/pyart.aux_io.read_iq", "API/generated/generated/pyart.aux_io.read_kazr", "API/generated/generated/pyart.aux_io.read_metranet", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/generated/pyart.aux_io.read_odim_h5", "API/generated/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/generated/pyart.aux_io.read_pattern", "API/generated/generated/pyart.aux_io.read_png", "API/generated/generated/pyart.aux_io.read_radx", "API/generated/generated/pyart.aux_io.read_rainbow_psr", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/generated/pyart.aux_io.read_skyecho", "API/generated/generated/pyart.aux_io.read_spectra", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/generated/pyart.aux_io.write_odim_h5", "API/generated/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/generated/pyart.aux_io.write_spectra", "API/generated/generated/pyart.bridge.texture_of_complex_phase", "API/generated/generated/pyart.config.FileMetadata", "API/generated/generated/pyart.config.FileMetadata.__call__", "API/generated/generated/pyart.config.FileMetadata.get_field_name", "API/generated/generated/pyart.config.FileMetadata.get_metadata", "API/generated/generated/pyart.config.get_field_colormap", "API/generated/generated/pyart.config.get_field_limits", "API/generated/generated/pyart.config.get_field_mapping", "API/generated/generated/pyart.config.get_field_name", "API/generated/generated/pyart.config.get_fillvalue", "API/generated/generated/pyart.config.get_metadata", "API/generated/generated/pyart.config.load_config", "API/generated/generated/pyart.core.Grid", "API/generated/generated/pyart.core.Grid.add_field", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.get_projparams", "API/generated/generated/pyart.core.Grid.init_point_altitude", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/generated/pyart.core.Grid.projection_proj", "API/generated/generated/pyart.core.Grid.to_xarray", "API/generated/generated/pyart.core.Grid.write", "API/generated/generated/pyart.core.HorizontalWindProfile", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/generated/pyart.core.Radar", "API/generated/generated/pyart.core.Radar.add_field", "API/generated/generated/pyart.core.Radar.add_field_like", "API/generated/generated/pyart.core.Radar.add_filter", "API/generated/generated/pyart.core.Radar.check_field_exists", "API/generated/generated/pyart.core.Radar.extract_sweeps", "API/generated/generated/pyart.core.Radar.get_azimuth", "API/generated/generated/pyart.core.Radar.get_elevation", "API/generated/generated/pyart.core.Radar.get_end", "API/generated/generated/pyart.core.Radar.get_field", "API/generated/generated/pyart.core.Radar.get_gate_area", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/generated/pyart.core.Radar.get_slice", "API/generated/generated/pyart.core.Radar.get_start", "API/generated/generated/pyart.core.Radar.get_start_end", "API/generated/generated/pyart.core.Radar.info", "API/generated/generated/pyart.core.Radar.init_gate_altitude", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/generated/pyart.core.Radar.iter_azimuth", "API/generated/generated/pyart.core.Radar.iter_elevation", "API/generated/generated/pyart.core.Radar.iter_end", "API/generated/generated/pyart.core.Radar.iter_field", "API/generated/generated/pyart.core.Radar.iter_slice", "API/generated/generated/pyart.core.Radar.iter_start", "API/generated/generated/pyart.core.Radar.iter_start_end", "API/generated/generated/pyart.core.RadarSpectra", "API/generated/generated/pyart.core.RadarSpectra.add_field", "API/generated/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/generated/pyart.core.RadarSpectra.add_filter", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/generated/pyart.core.RadarSpectra.get_end", "API/generated/generated/pyart.core.RadarSpectra.get_field", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/generated/pyart.core.RadarSpectra.get_slice", "API/generated/generated/pyart.core.RadarSpectra.get_start", "API/generated/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/generated/pyart.core.RadarSpectra.info", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/generated/pyart.core.RadarSpectra.iter_end", "API/generated/generated/pyart.core.RadarSpectra.iter_field", "API/generated/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/generated/pyart.core.RadarSpectra.iter_start", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/generated/pyart.core.antenna_to_cartesian", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/generated/pyart.core.cartesian_to_antenna", "API/generated/generated/pyart.core.cartesian_to_geographic", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/generated/pyart.core.geographic_to_cartesian", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/generated/pyart.correct.calculate_attenuation", "API/generated/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/generated/pyart.correct.compute_apparent_vpr", "API/generated/generated/pyart.correct.compute_theoretical_vpr", "API/generated/generated/pyart.correct.correct_bias", "API/generated/generated/pyart.correct.correct_noise_rhohv", "API/generated/generated/pyart.correct.correct_sys_phase", "API/generated/generated/pyart.correct.correct_visibility", "API/generated/generated/pyart.correct.correct_vpr", "API/generated/generated/pyart.correct.correct_vpr_spatialised", "API/generated/generated/pyart.correct.dealias_fourdd", "API/generated/generated/pyart.correct.dealias_region_based", "API/generated/generated/pyart.correct.dealias_unwrap_phase", "API/generated/generated/pyart.correct.despeckle_field", "API/generated/generated/pyart.correct.det_sys_phase_ray", "API/generated/generated/pyart.correct.est_rhohv_rain", "API/generated/generated/pyart.correct.est_zdr_precip", "API/generated/generated/pyart.correct.est_zdr_snow", "API/generated/generated/pyart.correct.find_objects", "API/generated/generated/pyart.correct.get_mask_fzl", "API/generated/generated/pyart.correct.get_sun_hits", "API/generated/generated/pyart.correct.get_sun_hits_ivic", "API/generated/generated/pyart.correct.get_sun_hits_psr", "API/generated/generated/pyart.correct.phase_proc_lp", "API/generated/generated/pyart.correct.phase_proc_lp_gf", "API/generated/generated/pyart.correct.ptoa_to_sf", "API/generated/generated/pyart.correct.scanning_losses", "API/generated/generated/pyart.correct.selfconsistency_bias", "API/generated/generated/pyart.correct.selfconsistency_bias2", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/generated/pyart.correct.smooth_masked", "API/generated/generated/pyart.correct.smooth_phidp_double_window", "API/generated/generated/pyart.correct.smooth_phidp_single_window", "API/generated/generated/pyart.correct.solar_flux_lookup", "API/generated/generated/pyart.correct.sun_position_mfr", "API/generated/generated/pyart.correct.sun_position_pysolar", "API/generated/generated/pyart.correct.sun_power", "API/generated/generated/pyart.correct.sun_retrieval", "API/generated/generated/pyart.exceptions.DeprecatedAttribute", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName", "API/generated/generated/pyart.exceptions.MissingOptionalDependency", "API/generated/generated/pyart.exceptions._deprecated_alias", "API/generated/generated/pyart.filters.GateFilter", "API/generated/generated/pyart.filters.GateFilter.copy", "API/generated/generated/pyart.filters.GateFilter.exclude_above", "API/generated/generated/pyart.filters.GateFilter.exclude_all", "API/generated/generated/pyart.filters.GateFilter.exclude_below", "API/generated/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/generated/pyart.filters.GateFilter.exclude_none", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/generated/pyart.filters.GateFilter.gate_included", "API/generated/generated/pyart.filters.GateFilter.include_above", "API/generated/generated/pyart.filters.GateFilter.include_all", "API/generated/generated/pyart.filters.GateFilter.include_below", "API/generated/generated/pyart.filters.GateFilter.include_equal", "API/generated/generated/pyart.filters.GateFilter.include_gates", "API/generated/generated/pyart.filters.GateFilter.include_inside", "API/generated/generated/pyart.filters.GateFilter.include_none", "API/generated/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/generated/pyart.filters.GateFilter.include_outside", "API/generated/generated/pyart.filters.GateFilter.include_valid", "API/generated/generated/pyart.filters.birds_gate_filter", "API/generated/generated/pyart.filters.class_based_gate_filter", "API/generated/generated/pyart.filters.iso0_based_gate_filter", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/generated/pyart.filters.moment_based_gate_filter", "API/generated/generated/pyart.filters.snr_based_gate_filter", "API/generated/generated/pyart.filters.temp_based_gate_filter", "API/generated/generated/pyart.filters.visibility_based_gate_filter", "API/generated/generated/pyart.graph.AirborneRadarDisplay", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/generated/pyart.graph.GridMapDisplay", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/generated/pyart.graph.RadarDisplay", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarDisplay.plot", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplay", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/generated/pyart.io.make_time_unit_str", "API/generated/generated/pyart.io.prepare_for_read", "API/generated/generated/pyart.io.read", "API/generated/generated/pyart.io.read_arm_sonde", "API/generated/generated/pyart.io.read_arm_sonde_vap", "API/generated/generated/pyart.io.read_cfradial", "API/generated/generated/pyart.io.read_cfradial2", "API/generated/generated/pyart.io.read_chl", "API/generated/generated/pyart.io.read_grid", "API/generated/generated/pyart.io.read_grid_mdv", "API/generated/generated/pyart.io.read_mdv", "API/generated/generated/pyart.io.read_nexrad_archive", "API/generated/generated/pyart.io.read_nexrad_cdm", "API/generated/generated/pyart.io.read_nexrad_level3", "API/generated/generated/pyart.io.read_rsl", "API/generated/generated/pyart.io.read_sigmet", "API/generated/generated/pyart.io.read_uf", "API/generated/generated/pyart.io.write_cfradial", "API/generated/generated/pyart.io.write_grid", "API/generated/generated/pyart.io.write_grid_geotiff", "API/generated/generated/pyart.io.write_grid_mdv", "API/generated/generated/pyart.io.write_uf", "API/generated/generated/pyart.lazydict.LazyLoadDict", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/generated/pyart.retrieve._destandardize", "API/generated/generated/pyart.retrieve._get_res_vol_sides", "API/generated/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/generated/pyart.retrieve.composite_reflectivity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/generated/pyart.retrieve.compute_Doppler_width", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/generated/pyart.retrieve.compute_apparent_profile", "API/generated/generated/pyart.retrieve.compute_bird_density", "API/generated/generated/pyart.retrieve.compute_ccor", "API/generated/generated/pyart.retrieve.compute_cdr", "API/generated/generated/pyart.retrieve.compute_centroids", "API/generated/generated/pyart.retrieve.compute_differential_phase", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_evp", "API/generated/generated/pyart.retrieve.compute_iq", "API/generated/generated/pyart.retrieve.compute_l", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/generated/pyart.retrieve.compute_noise_power", "API/generated/generated/pyart.retrieve.compute_noisedBZ", "API/generated/generated/pyart.retrieve.compute_pol_variables", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/generated/pyart.retrieve.compute_qvp", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/generated/pyart.retrieve.compute_rcs", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/generated/pyart.retrieve.compute_refl_from_zdr", "API/generated/generated/pyart.retrieve.compute_reflectivity", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_rhohv", "API/generated/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/generated/pyart.retrieve.compute_rqvp", "API/generated/generated/pyart.retrieve.compute_signal_power", "API/generated/generated/pyart.retrieve.compute_snr", "API/generated/generated/pyart.retrieve.compute_spectra", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_noise", "API/generated/generated/pyart.retrieve.compute_spectral_phase", "API/generated/generated/pyart.retrieve.compute_spectral_power", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/generated/pyart.retrieve.compute_st1_iq", "API/generated/generated/pyart.retrieve.compute_st2_iq", "API/generated/generated/pyart.retrieve.compute_svp", "API/generated/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/generated/pyart.retrieve.compute_vol_refl", "API/generated/generated/pyart.retrieve.compute_vp", "API/generated/generated/pyart.retrieve.compute_wbn_iq", "API/generated/generated/pyart.retrieve.conv_strat_raut", "API/generated/generated/pyart.retrieve.conv_strat_yuter", "API/generated/generated/pyart.retrieve.data_for_centroids", "API/generated/generated/pyart.retrieve.dealias_spectra", "API/generated/generated/pyart.retrieve.detect_ml", "API/generated/generated/pyart.retrieve.determine_medoids", "API/generated/generated/pyart.retrieve.est_rain_rate_a", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/generated/pyart.retrieve.est_rain_rate_z", "API/generated/generated/pyart.retrieve.est_rain_rate_za", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/generated/pyart.retrieve.est_vertical_windshear", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/generated/pyart.retrieve.est_wind_profile", "API/generated/generated/pyart.retrieve.est_wind_vel", "API/generated/generated/pyart.retrieve.feature_detection", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/generated/pyart.retrieve.gecsx", "API/generated/generated/pyart.retrieve.get_coeff_attg", "API/generated/generated/pyart.retrieve.get_freq_band", "API/generated/generated/pyart.retrieve.get_iso0_val", "API/generated/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/generated/pyart.retrieve.grid_displacement_pc", "API/generated/generated/pyart.retrieve.grid_shift", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/generated/pyart.retrieve.kdp_maesaka", "API/generated/generated/pyart.retrieve.kdp_schneebeli", "API/generated/generated/pyart.retrieve.kdp_vulpiani", "API/generated/generated/pyart.retrieve.map_profile_to_gates", "API/generated/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/generated/pyart.retrieve.melting_layer_mf", "API/generated/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/generated/pyart.retrieve.select_samples", "API/generated/generated/pyart.retrieve.steiner_conv_strat", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/generated/pyart.retrieve.vad_browning", "API/generated/generated/pyart.retrieve.vad_michelson", "API/generated/generated/pyart.util.EPOCH_UNITS", "API/generated/generated/pyart.util.angular_mean", "API/generated/generated/pyart.util.angular_mean_deg", "API/generated/generated/pyart.util.angular_std", "API/generated/generated/pyart.util.angular_std_deg", "API/generated/generated/pyart.util.angular_texture_2d", "API/generated/generated/pyart.util.colocated_gates", "API/generated/generated/pyart.util.colocated_gates2", "API/generated/generated/pyart.util.compute_azimuthal_average", "API/generated/generated/pyart.util.compute_corr", "API/generated/generated/pyart.util.compute_directional_stats", "API/generated/generated/pyart.util.compute_mse", "API/generated/generated/pyart.util.compute_nse", "API/generated/generated/pyart.util.cross_section_ppi", "API/generated/generated/pyart.util.cross_section_rhi", "API/generated/generated/pyart.util.datetime_from_dataset", "API/generated/generated/pyart.util.datetime_from_grid", "API/generated/generated/pyart.util.datetime_from_radar", "API/generated/generated/pyart.util.datetimes_from_dataset", "API/generated/generated/pyart.util.datetimes_from_radar", "API/generated/generated/pyart.util.determine_sweeps", "API/generated/generated/pyart.util.estimate_noise_hs74", "API/generated/generated/pyart.util.estimate_noise_ivic13", "API/generated/generated/pyart.util.find_neighbour_gates", "API/generated/generated/pyart.util.for_azimuth", "API/generated/generated/pyart.util.get_column_rays", "API/generated/generated/pyart.util.get_field_location", "API/generated/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/generated/pyart.util.get_ivic_pct", "API/generated/generated/pyart.util.get_ivic_snr_thr", "API/generated/generated/pyart.util.get_statistic", "API/generated/generated/pyart.util.get_target_elevations", "API/generated/generated/pyart.util.grid_texture_2d", "API/generated/generated/pyart.util.image_mute_radar", "API/generated/generated/pyart.util.interpol_spectra", "API/generated/generated/pyart.util.intersection", "API/generated/generated/pyart.util.interval_mean", "API/generated/generated/pyart.util.interval_std", "API/generated/generated/pyart.util.is_vpt", "API/generated/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/generated/pyart.util.ivic_pct_table", "API/generated/generated/pyart.util.ivic_snr_thr_table", "API/generated/generated/pyart.util.join_radar", "API/generated/generated/pyart.util.join_spectra", "API/generated/generated/pyart.util.ma_broadcast_to", "API/generated/generated/pyart.util.mean_of_two_angles", "API/generated/generated/pyart.util.mean_of_two_angles_deg", "API/generated/generated/pyart.util.radar_from_spectra", "API/generated/generated/pyart.util.rolling_window", "API/generated/generated/pyart.util.simulated_vel_from_profile", "API/generated/generated/pyart.util.sphere_distance", "API/generated/generated/pyart.util.subset_radar", "API/generated/generated/pyart.util.subset_radar_spectra", "API/generated/generated/pyart.util.texture", "API/generated/generated/pyart.util.texture_along_ray", "API/generated/generated/pyart.util.to_vpt", "API/generated/generated/pyart.util.weighted_kurtosis", "API/generated/generated/pyart.util.weighted_mean", "API/generated/generated/pyart.util.weighted_skew", "API/generated/generated/pyart.util.weighted_variance", "API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.convert_data", "API/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/pyart.aux_io.get_library", "API/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/pyart.aux_io.read_bin", "API/generated/pyart.aux_io.read_bin_mf", "API/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/pyart.aux_io.read_cf1", "API/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_dat_mf", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_file_c", "API/generated/pyart.aux_io.read_file_py", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_gif", "API/generated/pyart.aux_io.read_grib", "API/generated/pyart.aux_io.read_hpl", "API/generated/pyart.aux_io.read_iq", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_knmi_grid_h5", "API/generated/pyart.aux_io.read_mch_vad", "API/generated/pyart.aux_io.read_metranet", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_png", "API/generated/pyart.aux_io.read_product_c", "API/generated/pyart.aux_io.read_product_py", "API/generated/pyart.aux_io.read_psr_cpi_header", "API/generated/pyart.aux_io.read_psr_header", "API/generated/pyart.aux_io.read_psr_spectra", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_rainbow_psr", "API/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.read_skyecho", "API/generated/pyart.aux_io.read_spectra", "API/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/pyart.aux_io.write_odim_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.aux_io.write_spectra", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_KE", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.add_field", "API/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/pyart.core.RadarSpectra.add_filter", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_field", "API/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.info", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.compute_apparent_vpr", "API/generated/pyart.correct.compute_theoretical_vpr", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.correct_sys_phase", "API/generated/pyart.correct.correct_visibility", "API/generated/pyart.correct.correct_vpr", "API/generated/pyart.correct.correct_vpr_spatialised", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.det_sys_phase_ray", "API/generated/pyart.correct.est_rhohv_rain", "API/generated/pyart.correct.est_zdr_precip", "API/generated/pyart.correct.est_zdr_snow", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.gauss_fit", "API/generated/pyart.correct.get_mask_fzl", "API/generated/pyart.correct.get_sun_hits", "API/generated/pyart.correct.get_sun_hits_ivic", "API/generated/pyart.correct.get_sun_hits_psr", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.ptoa_to_sf", "API/generated/pyart.correct.retrieval_result", "API/generated/pyart.correct.scanning_losses", "API/generated/pyart.correct.selfconsistency_bias", "API/generated/pyart.correct.selfconsistency_bias2", "API/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/pyart.correct.smooth_masked", "API/generated/pyart.correct.smooth_phidp_double_window", "API/generated/pyart.correct.smooth_phidp_single_window", "API/generated/pyart.correct.solar_flux_lookup", "API/generated/pyart.correct.sun_position_mfr", "API/generated/pyart.correct.sun_position_pysolar", "API/generated/pyart.correct.sun_power", "API/generated/pyart.correct.sun_retrieval", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.birds_gate_filter", "API/generated/pyart.filters.class_based_gate_filter", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.snr_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.filters.visibility_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.graph.plot_maxcappi", "API/generated/pyart.io", "API/generated/pyart.io.make_time_unit_str", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_cfradial2", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.gridstats_from_radar", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_gates_to_grid_to_list", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/pyart.retrieve.compute_Doppler_width", "API/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/pyart.retrieve.compute_apparent_profile", "API/generated/pyart.retrieve.compute_bird_density", "API/generated/pyart.retrieve.compute_ccor", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_centroids", "API/generated/pyart.retrieve.compute_differential_phase", "API/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_iq", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/pyart.retrieve.compute_noise_power", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_pol_variables", "API/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/pyart.retrieve.compute_rcs", "API/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/pyart.retrieve.compute_refl_from_zdr", "API/generated/pyart.retrieve.compute_reflectivity", "API/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/pyart.retrieve.compute_rhohv", "API/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_signal_power", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_spectra", "API/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/pyart.retrieve.compute_spectral_noise", "API/generated/pyart.retrieve.compute_spectral_phase", "API/generated/pyart.retrieve.compute_spectral_power", "API/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/pyart.retrieve.compute_st1_iq", "API/generated/pyart.retrieve.compute_st2_iq", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vol_refl", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.compute_wbn_iq", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.data_for_centroids", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.detect_ml", "API/generated/pyart.retrieve.determine_medoids", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.est_vertical_windshear", "API/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/pyart.retrieve.est_wind_profile", "API/generated/pyart.retrieve.est_wind_vel", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.gecsx", "API/generated/pyart.retrieve.get_coeff_attg", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.get_iso0_val", "API/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/pyart.retrieve.melting_layer_mf", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.select_samples", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.add_field", "API/generated/pyart.testing.RadarSpectra.add_field_like", "API/generated/pyart.testing.RadarSpectra.add_filter", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.extract_sweeps", "API/generated/pyart.testing.RadarSpectra.get_azimuth", "API/generated/pyart.testing.RadarSpectra.get_elevation", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_field", "API/generated/pyart.testing.RadarSpectra.get_gate_area", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.info", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.colocated_gates", "API/generated/pyart.util.colocated_gates2", "API/generated/pyart.util.compute_azimuthal_average", "API/generated/pyart.util.compute_corr", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.compute_mse", "API/generated/pyart.util.compute_nse", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.estimate_noise_ivic13", "API/generated/pyart.util.find_neighbour_gates", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/pyart.util.get_ivic_pct", "API/generated/pyart.util.get_ivic_snr_thr", "API/generated/pyart.util.get_statistic", "API/generated/pyart.util.get_target_elevations", "API/generated/pyart.util.grid_texture_2d", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interpol_spectra", "API/generated/pyart.util.intersection", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/pyart.util.ivic_pct_table", "API/generated/pyart.util.ivic_snr_thr_table", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.join_spectra", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.radar_from_spectra", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.subset_radar_spectra", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/generated/pyart.util.weighted_kurtosis", "API/generated/pyart.util.weighted_mean", "API/generated/pyart.util.weighted_skew", "API/generated/pyart.util.weighted_variance", "API/index", "changelog", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/process_spectral_data", "notebooks/read_mch_metranet_data", "notebooks/swiss_doppler", "notebooks/swiss_thunderstorm", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/generated/pyart.aux_io.read_bin.rst", "API/generated/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/generated/pyart.aux_io.read_cf1.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/generated/pyart.aux_io.read_gamic.rst", "API/generated/generated/pyart.aux_io.read_gif.rst", "API/generated/generated/pyart.aux_io.read_grib.rst", "API/generated/generated/pyart.aux_io.read_hpl.rst", "API/generated/generated/pyart.aux_io.read_iq.rst", "API/generated/generated/pyart.aux_io.read_kazr.rst", "API/generated/generated/pyart.aux_io.read_metranet.rst", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/generated/pyart.aux_io.read_pattern.rst", "API/generated/generated/pyart.aux_io.read_png.rst", "API/generated/generated/pyart.aux_io.read_radx.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/generated/pyart.aux_io.read_skyecho.rst", "API/generated/generated/pyart.aux_io.read_spectra.rst", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/generated/pyart.aux_io.write_spectra.rst", "API/generated/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/generated/pyart.config.FileMetadata.rst", "API/generated/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/generated/pyart.config.get_field_colormap.rst", "API/generated/generated/pyart.config.get_field_limits.rst", "API/generated/generated/pyart.config.get_field_mapping.rst", "API/generated/generated/pyart.config.get_field_name.rst", "API/generated/generated/pyart.config.get_fillvalue.rst", "API/generated/generated/pyart.config.get_metadata.rst", "API/generated/generated/pyart.config.load_config.rst", "API/generated/generated/pyart.core.Grid.rst", "API/generated/generated/pyart.core.Grid.add_field.rst", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.get_projparams.rst", "API/generated/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/generated/pyart.core.Grid.projection_proj.rst", "API/generated/generated/pyart.core.Grid.to_xarray.rst", "API/generated/generated/pyart.core.Grid.write.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/generated/pyart.core.Radar.rst", "API/generated/generated/pyart.core.Radar.add_field.rst", "API/generated/generated/pyart.core.Radar.add_field_like.rst", "API/generated/generated/pyart.core.Radar.add_filter.rst", "API/generated/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/generated/pyart.core.Radar.get_elevation.rst", "API/generated/generated/pyart.core.Radar.get_end.rst", "API/generated/generated/pyart.core.Radar.get_field.rst", "API/generated/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/generated/pyart.core.Radar.get_slice.rst", "API/generated/generated/pyart.core.Radar.get_start.rst", "API/generated/generated/pyart.core.Radar.get_start_end.rst", "API/generated/generated/pyart.core.Radar.info.rst", "API/generated/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/generated/pyart.core.Radar.iter_end.rst", "API/generated/generated/pyart.core.Radar.iter_field.rst", "API/generated/generated/pyart.core.Radar.iter_slice.rst", "API/generated/generated/pyart.core.Radar.iter_start.rst", "API/generated/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.info.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/generated/pyart.correct.calculate_attenuation.rst", "API/generated/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/generated/pyart.correct.correct_bias.rst", "API/generated/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/generated/pyart.correct.correct_sys_phase.rst", "API/generated/generated/pyart.correct.correct_visibility.rst", "API/generated/generated/pyart.correct.correct_vpr.rst", "API/generated/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/generated/pyart.correct.dealias_fourdd.rst", "API/generated/generated/pyart.correct.dealias_region_based.rst", "API/generated/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/generated/pyart.correct.despeckle_field.rst", "API/generated/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/generated/pyart.correct.est_zdr_precip.rst", "API/generated/generated/pyart.correct.est_zdr_snow.rst", "API/generated/generated/pyart.correct.find_objects.rst", "API/generated/generated/pyart.correct.get_mask_fzl.rst", "API/generated/generated/pyart.correct.get_sun_hits.rst", "API/generated/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/generated/pyart.correct.phase_proc_lp.rst", "API/generated/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/generated/pyart.correct.scanning_losses.rst", "API/generated/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/generated/pyart.correct.smooth_masked.rst", "API/generated/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/generated/pyart.correct.sun_position_mfr.rst", "API/generated/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/generated/pyart.correct.sun_power.rst", "API/generated/generated/pyart.correct.sun_retrieval.rst", "API/generated/generated/pyart.exceptions.DeprecatedAttribute.rst", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName.rst", "API/generated/generated/pyart.exceptions.MissingOptionalDependency.rst", "API/generated/generated/pyart.exceptions._deprecated_alias.rst", "API/generated/generated/pyart.filters.GateFilter.rst", "API/generated/generated/pyart.filters.GateFilter.copy.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/generated/pyart.filters.birds_gate_filter.rst", "API/generated/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.GridMapDisplay.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.RadarDisplay.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/generated/pyart.io.make_time_unit_str.rst", "API/generated/generated/pyart.io.prepare_for_read.rst", "API/generated/generated/pyart.io.read.rst", "API/generated/generated/pyart.io.read_arm_sonde.rst", "API/generated/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/generated/pyart.io.read_cfradial.rst", "API/generated/generated/pyart.io.read_cfradial2.rst", "API/generated/generated/pyart.io.read_chl.rst", "API/generated/generated/pyart.io.read_grid.rst", "API/generated/generated/pyart.io.read_grid_mdv.rst", "API/generated/generated/pyart.io.read_mdv.rst", "API/generated/generated/pyart.io.read_nexrad_archive.rst", "API/generated/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/generated/pyart.io.read_nexrad_level3.rst", "API/generated/generated/pyart.io.read_rsl.rst", "API/generated/generated/pyart.io.read_sigmet.rst", "API/generated/generated/pyart.io.read_uf.rst", "API/generated/generated/pyart.io.write_cfradial.rst", "API/generated/generated/pyart.io.write_grid.rst", "API/generated/generated/pyart.io.write_grid_geotiff.rst", "API/generated/generated/pyart.io.write_grid_mdv.rst", "API/generated/generated/pyart.io.write_uf.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/generated/pyart.retrieve._destandardize.rst", "API/generated/generated/pyart.retrieve._get_res_vol_sides.rst", "API/generated/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/generated/pyart.retrieve.compute_ccor.rst", "API/generated/generated/pyart.retrieve.compute_cdr.rst", "API/generated/generated/pyart.retrieve.compute_centroids.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_evp.rst", "API/generated/generated/pyart.retrieve.compute_iq.rst", "API/generated/generated/pyart.retrieve.compute_l.rst", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/generated/pyart.retrieve.compute_qvp.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/generated/pyart.retrieve.compute_rcs.rst", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/generated/pyart.retrieve.compute_refl_from_zdr.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/generated/pyart.retrieve.compute_snr.rst", "API/generated/generated/pyart.retrieve.compute_spectra.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/generated/pyart.retrieve.compute_svp.rst", "API/generated/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/generated/pyart.retrieve.compute_vp.rst", "API/generated/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/generated/pyart.retrieve.detect_ml.rst", "API/generated/generated/pyart.retrieve.determine_medoids.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/generated/pyart.retrieve.feature_detection.rst", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/generated/pyart.retrieve.gecsx.rst", "API/generated/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/generated/pyart.retrieve.get_freq_band.rst", "API/generated/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/generated/pyart.retrieve.grid_shift.rst", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/generated/pyart.retrieve.select_samples.rst", "API/generated/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/generated/pyart.retrieve.vad_browning.rst", "API/generated/generated/pyart.retrieve.vad_michelson.rst", "API/generated/generated/pyart.util.EPOCH_UNITS.rst", "API/generated/generated/pyart.util.angular_mean.rst", "API/generated/generated/pyart.util.angular_mean_deg.rst", "API/generated/generated/pyart.util.angular_std.rst", "API/generated/generated/pyart.util.angular_std_deg.rst", "API/generated/generated/pyart.util.angular_texture_2d.rst", "API/generated/generated/pyart.util.colocated_gates.rst", "API/generated/generated/pyart.util.colocated_gates2.rst", "API/generated/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/generated/pyart.util.compute_corr.rst", "API/generated/generated/pyart.util.compute_directional_stats.rst", "API/generated/generated/pyart.util.compute_mse.rst", "API/generated/generated/pyart.util.compute_nse.rst", "API/generated/generated/pyart.util.cross_section_ppi.rst", "API/generated/generated/pyart.util.cross_section_rhi.rst", "API/generated/generated/pyart.util.datetime_from_dataset.rst", "API/generated/generated/pyart.util.datetime_from_grid.rst", "API/generated/generated/pyart.util.datetime_from_radar.rst", "API/generated/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/generated/pyart.util.datetimes_from_radar.rst", "API/generated/generated/pyart.util.determine_sweeps.rst", "API/generated/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/generated/pyart.util.find_neighbour_gates.rst", "API/generated/generated/pyart.util.for_azimuth.rst", "API/generated/generated/pyart.util.get_column_rays.rst", "API/generated/generated/pyart.util.get_field_location.rst", "API/generated/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/generated/pyart.util.get_ivic_pct.rst", "API/generated/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/generated/pyart.util.get_statistic.rst", "API/generated/generated/pyart.util.get_target_elevations.rst", "API/generated/generated/pyart.util.grid_texture_2d.rst", "API/generated/generated/pyart.util.image_mute_radar.rst", "API/generated/generated/pyart.util.interpol_spectra.rst", "API/generated/generated/pyart.util.intersection.rst", "API/generated/generated/pyart.util.interval_mean.rst", "API/generated/generated/pyart.util.interval_std.rst", "API/generated/generated/pyart.util.is_vpt.rst", "API/generated/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/generated/pyart.util.ivic_pct_table.rst", "API/generated/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/generated/pyart.util.join_radar.rst", "API/generated/generated/pyart.util.join_spectra.rst", "API/generated/generated/pyart.util.ma_broadcast_to.rst", "API/generated/generated/pyart.util.mean_of_two_angles.rst", "API/generated/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/generated/pyart.util.radar_from_spectra.rst", "API/generated/generated/pyart.util.rolling_window.rst", "API/generated/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/generated/pyart.util.sphere_distance.rst", "API/generated/generated/pyart.util.subset_radar.rst", "API/generated/generated/pyart.util.subset_radar_spectra.rst", "API/generated/generated/pyart.util.texture.rst", "API/generated/generated/pyart.util.texture_along_ray.rst", "API/generated/generated/pyart.util.to_vpt.rst", "API/generated/generated/pyart.util.weighted_kurtosis.rst", "API/generated/generated/pyart.util.weighted_mean.rst", "API/generated/generated/pyart.util.weighted_skew.rst", "API/generated/generated/pyart.util.weighted_variance.rst", "API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.convert_data.rst", "API/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/pyart.aux_io.get_library.rst", "API/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/pyart.aux_io.read_bin.rst", "API/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/pyart.aux_io.read_cf1.rst", "API/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_file_c.rst", "API/generated/pyart.aux_io.read_file_py.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_gif.rst", "API/generated/pyart.aux_io.read_grib.rst", "API/generated/pyart.aux_io.read_hpl.rst", "API/generated/pyart.aux_io.read_iq.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_knmi_grid_h5.rst", "API/generated/pyart.aux_io.read_mch_vad.rst", "API/generated/pyart.aux_io.read_metranet.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_png.rst", "API/generated/pyart.aux_io.read_product_c.rst", "API/generated/pyart.aux_io.read_product_py.rst", "API/generated/pyart.aux_io.read_psr_cpi_header.rst", "API/generated/pyart.aux_io.read_psr_header.rst", "API/generated/pyart.aux_io.read_psr_spectra.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.read_skyecho.rst", "API/generated/pyart.aux_io.read_spectra.rst", "API/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.aux_io.write_spectra.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_KE.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.info.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.correct_sys_phase.rst", "API/generated/pyart.correct.correct_visibility.rst", "API/generated/pyart.correct.correct_vpr.rst", "API/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/pyart.correct.est_zdr_precip.rst", "API/generated/pyart.correct.est_zdr_snow.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.gauss_fit.rst", "API/generated/pyart.correct.get_mask_fzl.rst", "API/generated/pyart.correct.get_sun_hits.rst", "API/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/pyart.correct.retrieval_result.rst", "API/generated/pyart.correct.scanning_losses.rst", "API/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/pyart.correct.smooth_masked.rst", "API/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/pyart.correct.sun_position_mfr.rst", "API/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/pyart.correct.sun_power.rst", "API/generated/pyart.correct.sun_retrieval.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.birds_gate_filter.rst", "API/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.graph.plot_maxcappi.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.make_time_unit_str.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_cfradial2.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.gridstats_from_radar.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_gates_to_grid_to_list.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/pyart.retrieve.compute_ccor.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_centroids.rst", "API/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_iq.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/pyart.retrieve.compute_rcs.rst", "API/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/pyart.retrieve.compute_refl_from_zdr.rst", "API/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_spectra.rst", "API/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.detect_ml.rst", "API/generated/pyart.retrieve.determine_medoids.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.gecsx.rst", "API/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.select_samples.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.add_field.rst", "API/generated/pyart.testing.RadarSpectra.add_field_like.rst", "API/generated/pyart.testing.RadarSpectra.add_filter.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.testing.RadarSpectra.get_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.get_elevation.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_field.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_area.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.info.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.colocated_gates.rst", "API/generated/pyart.util.colocated_gates2.rst", "API/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/pyart.util.compute_corr.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.compute_mse.rst", "API/generated/pyart.util.compute_nse.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/pyart.util.find_neighbour_gates.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/pyart.util.get_ivic_pct.rst", "API/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/pyart.util.get_statistic.rst", "API/generated/pyart.util.get_target_elevations.rst", "API/generated/pyart.util.grid_texture_2d.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interpol_spectra.rst", "API/generated/pyart.util.intersection.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/pyart.util.ivic_pct_table.rst", "API/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.join_spectra.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.radar_from_spectra.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.subset_radar_spectra.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/generated/pyart.util.weighted_kurtosis.rst", "API/generated/pyart.util.weighted_mean.rst", "API/generated/pyart.util.weighted_skew.rst", "API/generated/pyart.util.weighted_variance.rst", "API/index.rst", "changelog.md", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/process_spectral_data.ipynb", "notebooks/read_mch_metranet_data.ipynb", "notebooks/swiss_doppler.ipynb", "notebooks/swiss_thunderstorm.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge.texture_of_complex_phase", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions.DeprecatedAttribute", "pyart.exceptions.DeprecatedFunctionName", "pyart.exceptions.MissingOptionalDependency", "pyart.exceptions._deprecated_alias", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.__contains__", "pyart.lazydict.LazyLoadDict.__delattr__", "pyart.lazydict.LazyLoadDict.__delitem__", "pyart.lazydict.LazyLoadDict.__dir__", "pyart.lazydict.LazyLoadDict.__eq__", "pyart.lazydict.LazyLoadDict.__format__", "pyart.lazydict.LazyLoadDict.__ge__", "pyart.lazydict.LazyLoadDict.__getattribute__", "pyart.lazydict.LazyLoadDict.__getitem__", "pyart.lazydict.LazyLoadDict.__getstate__", "pyart.lazydict.LazyLoadDict.__gt__", "pyart.lazydict.LazyLoadDict.__init__", "pyart.lazydict.LazyLoadDict.__init_subclass__", "pyart.lazydict.LazyLoadDict.__iter__", "pyart.lazydict.LazyLoadDict.__le__", "pyart.lazydict.LazyLoadDict.__len__", "pyart.lazydict.LazyLoadDict.__lt__", "pyart.lazydict.LazyLoadDict.__ne__", "pyart.lazydict.LazyLoadDict.__new__", "pyart.lazydict.LazyLoadDict.__reduce__", "pyart.lazydict.LazyLoadDict.__reduce_ex__", "pyart.lazydict.LazyLoadDict.__repr__", "pyart.lazydict.LazyLoadDict.__setattr__", "pyart.lazydict.LazyLoadDict.__setitem__", "pyart.lazydict.LazyLoadDict.__sizeof__", "pyart.lazydict.LazyLoadDict.__str__", "pyart.lazydict.LazyLoadDict.__subclasshook__", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.retrieve._destandardize", "pyart.retrieve._get_res_vol_sides", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_refl_from_zdr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.util.EPOCH_UNITS", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_statistic", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "pyart.util.weighted_kurtosis", "pyart.util.weighted_mean", "pyart.util.weighted_skew", "pyart.util.weighted_variance", "pyart._debug_info", "pyart.aux_io", "pyart.aux_io.convert_data", "pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_library", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_file_c", "pyart.aux_io.read_file_py", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_knmi_grid_h5", "pyart.aux_io.read_mch_vad", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_product_c", "pyart.aux_io.read_product_py", "pyart.aux_io.read_psr_cpi_header", "pyart.aux_io.read_psr_header", "pyart.aux_io.read_psr_spectra", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_KE", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.gauss_fit", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.retrieval_result", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.graph.plot_maxcappi", "pyart.io", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.gridstats_from_radar", "pyart.map.map_gates_to_grid", "pyart.map.map_gates_to_grid_to_list", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_refl_from_zdr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.add_field", "pyart.testing.RadarSpectra.add_field_like", "pyart.testing.RadarSpectra.add_filter", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.extract_sweeps", "pyart.testing.RadarSpectra.get_azimuth", "pyart.testing.RadarSpectra.get_elevation", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_field", "pyart.testing.RadarSpectra.get_gate_area", "pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "pyart.testing.RadarSpectra.get_gate_x_y_z", "pyart.testing.RadarSpectra.get_nyquist_vel", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.info", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_statistic", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "pyart.util.weighted_kurtosis", "pyart.util.weighted_mean", "pyart.util.weighted_skew", "pyart.util.weighted_variance", "API Manual", "Changelog", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "About the MeteoSwiss fork of Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "Reading and processing spectral data (Rainbow format)", "Reading MeteoSwiss Metranet data with Py-ART", "Processing of Doppler wind data from a Swiss volumetric scan", "Filtering and retrievals on raw Swiss C-band data", "The Py-ART Radar object and indexing", "Computation times", "Installation", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"filenam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 55, 208, 244, 260, 275, 308, 334, 345, 371, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 663, 674, 858, 894, 910, 925, 958, 984, 995, 1021, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1201, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1389, 1396], "basepath": [0, 603], "none": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 40, 45, 46, 56, 60, 63, 71, 72, 89, 92, 100, 101, 118, 119, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 159, 160, 165, 198, 199, 200, 201, 202, 203, 204, 205, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 430, 432, 440, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 537, 538, 545, 546, 547, 548, 550, 551, 552, 553, 562, 572, 574, 589, 591, 592, 600, 603, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 650, 652, 654, 658, 663, 665, 675, 679, 682, 690, 691, 708, 711, 719, 720, 737, 738, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 806, 807, 808, 810, 811, 816, 847, 848, 849, 850, 851, 852, 853, 854, 860, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 915, 916, 917, 918, 919, 920, 921, 922, 923, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 974, 975, 976, 977, 978, 979, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 993, 997, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1059, 1067, 1070, 1071, 1077, 1080, 1088, 1089, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1189, 1190, 1192, 1202, 1204, 1207, 1215, 1216, 1233, 1236, 1244, 1245, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1291, 1300, 1310, 1312, 1327, 1329, 1330, 1357, 1366, 1376, 1390, 1392, 1393, 1396], "sweep_dir": [0, 603], "dir_timeformat": [0, 603], "y": [0, 3, 9, 22, 46, 52, 54, 72, 80, 101, 109, 118, 119, 120, 121, 122, 123, 124, 125, 206, 208, 220, 223, 225, 228, 230, 233, 234, 235, 236, 237, 239, 250, 252, 256, 258, 268, 270, 272, 273, 275, 287, 290, 292, 295, 297, 300, 301, 302, 303, 305, 306, 308, 320, 323, 325, 328, 331, 333, 337, 338, 339, 340, 342, 343, 345, 357, 360, 362, 365, 368, 370, 374, 375, 376, 377, 379, 498, 514, 521, 522, 535, 571, 603, 607, 613, 631, 665, 671, 673, 691, 699, 720, 728, 737, 738, 739, 740, 741, 742, 743, 744, 856, 858, 870, 873, 875, 878, 880, 883, 884, 885, 886, 887, 889, 900, 902, 906, 908, 918, 920, 922, 923, 925, 937, 940, 942, 945, 947, 950, 951, 952, 953, 955, 956, 958, 970, 973, 975, 978, 981, 983, 987, 988, 989, 990, 992, 993, 995, 1007, 1010, 1012, 1015, 1018, 1020, 1024, 1025, 1026, 1027, 1029, 1080, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1149, 1165, 1172, 1173, 1186, 1192, 1198, 1200, 1216, 1224, 1245, 1253, 1264, 1309, 1350, 1356, 1357, 1366, 1367, 1374, 1376, 1389, 1391], "m": [0, 3, 9, 14, 16, 22, 24, 25, 70, 73, 99, 102, 120, 126, 130, 131, 136, 137, 140, 147, 148, 153, 155, 156, 157, 161, 164, 198, 200, 204, 208, 275, 308, 345, 452, 461, 466, 469, 471, 479, 492, 493, 495, 497, 503, 514, 516, 520, 521, 523, 526, 527, 530, 532, 533, 535, 545, 546, 561, 562, 572, 574, 591, 592, 603, 604, 607, 613, 621, 625, 631, 638, 639, 689, 692, 718, 721, 739, 745, 778, 779, 784, 785, 788, 796, 797, 803, 806, 807, 808, 812, 815, 847, 849, 853, 858, 925, 958, 995, 1087, 1090, 1093, 1103, 1112, 1117, 1120, 1122, 1130, 1143, 1144, 1146, 1148, 1154, 1165, 1167, 1171, 1172, 1174, 1177, 1178, 1181, 1183, 1184, 1186, 1214, 1217, 1243, 1246, 1283, 1284, 1299, 1300, 1310, 1312, 1329, 1330, 1346, 1358, 1367, 1376, 1378, 1381, 1389, 1390, 1391, 1392, 1395, 1396], "d": [0, 3, 9, 22, 129, 140, 208, 275, 308, 345, 402, 430, 432, 434, 435, 436, 437, 439, 440, 441, 479, 492, 497, 501, 528, 538, 603, 607, 613, 631, 777, 788, 858, 925, 958, 995, 1056, 1057, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1130, 1143, 1148, 1152, 1179, 1190, 1374, 1396], "file_prefix": [0, 603], "file_sufix": [0, 603], "file_timeformat": [0, 603], "dt": [0, 162, 163, 603, 813, 814, 1342], "h": [0, 9, 14, 140, 148, 149, 150, 208, 265, 275, 308, 345, 371, 451, 458, 464, 465, 469, 470, 485, 490, 491, 496, 508, 533, 560, 603, 613, 621, 788, 797, 798, 799, 858, 915, 925, 958, 995, 1021, 1102, 1109, 1115, 1116, 1120, 1121, 1136, 1141, 1142, 1147, 1159, 1184, 1298, 1350, 1357, 1392], "": [0, 9, 45, 46, 60, 73, 77, 89, 102, 106, 118, 119, 122, 125, 139, 140, 151, 152, 153, 164, 208, 210, 223, 230, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 275, 277, 290, 297, 301, 302, 303, 308, 310, 323, 333, 338, 339, 340, 345, 347, 360, 370, 375, 376, 377, 434, 435, 441, 456, 465, 469, 470, 471, 472, 485, 498, 503, 504, 514, 518, 521, 526, 527, 528, 530, 533, 535, 536, 538, 560, 561, 572, 603, 613, 663, 665, 679, 692, 696, 708, 721, 725, 737, 738, 741, 744, 787, 788, 801, 802, 803, 815, 858, 860, 873, 880, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 925, 927, 940, 947, 951, 952, 953, 958, 960, 973, 983, 988, 989, 990, 995, 997, 1010, 1020, 1025, 1026, 1027, 1031, 1061, 1062, 1068, 1072, 1073, 1078, 1080, 1082, 1087, 1090, 1107, 1116, 1120, 1121, 1122, 1123, 1136, 1149, 1154, 1155, 1165, 1169, 1172, 1177, 1178, 1179, 1181, 1184, 1186, 1187, 1190, 1192, 1204, 1217, 1221, 1233, 1246, 1250, 1298, 1299, 1310, 1346, 1347, 1350, 1355, 1357, 1358, 1367, 1374, 1376, 1378, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1397], "sweep_start_tim": [0, 603], "sweep_end_tim": [0, 27, 603, 642], "field_nam": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 35, 37, 47, 61, 62, 64, 69, 85, 90, 91, 93, 98, 114, 132, 135, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 442, 461, 469, 479, 492, 493, 495, 547, 591, 592, 603, 607, 609, 610, 611, 612, 613, 617, 619, 621, 622, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 642, 643, 644, 645, 646, 652, 654, 666, 680, 681, 683, 688, 704, 709, 710, 712, 717, 733, 780, 783, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1112, 1120, 1130, 1143, 1144, 1146, 1193, 1205, 1206, 1208, 1213, 1229, 1234, 1235, 1237, 1242, 1258, 1285, 1329, 1330, 1350, 1387], "additional_metadata": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 35, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 603, 606, 607, 608, 609, 612, 613, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 642, 643, 644, 652, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049], "file_field_nam": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 37, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 603, 609, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 652, 654, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1054], "fals": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 30, 31, 33, 35, 47, 48, 55, 61, 62, 63, 66, 67, 69, 71, 72, 73, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 126, 127, 136, 138, 139, 140, 151, 152, 155, 156, 165, 170, 172, 174, 176, 182, 183, 186, 188, 190, 195, 196, 208, 223, 225, 230, 233, 234, 235, 236, 237, 240, 250, 252, 253, 254, 256, 258, 259, 265, 268, 270, 272, 275, 290, 292, 297, 300, 301, 302, 303, 308, 323, 325, 333, 334, 337, 338, 339, 340, 345, 360, 362, 370, 371, 374, 375, 376, 377, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 429, 433, 446, 456, 460, 467, 468, 470, 471, 473, 476, 477, 478, 483, 484, 487, 488, 489, 497, 498, 501, 502, 504, 513, 514, 523, 524, 525, 526, 527, 528, 530, 531, 554, 555, 556, 557, 558, 559, 561, 566, 568, 577, 581, 595, 603, 604, 609, 610, 611, 612, 615, 616, 617, 621, 622, 623, 625, 626, 627, 628, 629, 632, 633, 638, 639, 640, 641, 642, 643, 645, 646, 648, 652, 666, 667, 674, 680, 681, 682, 685, 686, 688, 690, 691, 692, 709, 710, 711, 714, 715, 717, 719, 720, 721, 738, 742, 745, 747, 749, 751, 753, 759, 760, 763, 765, 767, 772, 773, 775, 784, 786, 787, 788, 801, 802, 806, 807, 816, 819, 821, 823, 825, 831, 832, 835, 837, 839, 844, 845, 858, 873, 875, 880, 883, 884, 885, 886, 887, 890, 900, 902, 903, 904, 906, 908, 909, 915, 918, 920, 922, 925, 940, 942, 947, 950, 951, 952, 953, 958, 973, 975, 983, 984, 987, 988, 989, 990, 995, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1030, 1031, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1060, 1091, 1092, 1093, 1097, 1107, 1111, 1118, 1119, 1121, 1122, 1124, 1127, 1128, 1129, 1134, 1135, 1138, 1139, 1140, 1148, 1149, 1152, 1153, 1155, 1164, 1165, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1193, 1194, 1201, 1202, 1205, 1206, 1207, 1210, 1211, 1213, 1215, 1216, 1217, 1234, 1235, 1236, 1239, 1240, 1242, 1244, 1245, 1246, 1275, 1276, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1304, 1306, 1315, 1319, 1333, 1357, 1364, 1366, 1367, 1369, 1376, 1383, 1384, 1388, 1390, 1393, 1396], "exclude_field": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 603, 609, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 652, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1054], "include_field": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 63, 92, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 603, 609, 612, 617, 621, 622, 623, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 652, 682, 711, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1207, 1236], "verbos": [0, 516, 526, 603, 604, 615, 616, 632, 633, 1167, 1177, 1396], "kwarg": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 138, 139, 140, 222, 223, 224, 230, 234, 235, 236, 237, 249, 250, 252, 253, 254, 255, 256, 257, 258, 265, 268, 269, 270, 271, 272, 289, 290, 291, 297, 301, 302, 303, 322, 323, 324, 330, 331, 332, 333, 334, 335, 338, 339, 340, 359, 360, 361, 367, 368, 369, 370, 371, 372, 375, 376, 377, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 421, 526, 554, 555, 556, 557, 558, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618, 619, 621, 623, 625, 626, 627, 628, 629, 630, 631, 637, 638, 639, 640, 641, 642, 643, 786, 787, 788, 872, 873, 874, 880, 884, 885, 886, 887, 899, 900, 902, 903, 904, 905, 906, 907, 908, 915, 918, 919, 920, 921, 922, 939, 940, 941, 947, 951, 952, 953, 972, 973, 974, 980, 981, 982, 983, 984, 985, 988, 989, 990, 1009, 1010, 1011, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1031, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1177, 1292, 1293, 1294, 1295, 1296, 1391], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 106, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 216, 220, 221, 222, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 330, 331, 332, 334, 335, 343, 367, 368, 369, 371, 372, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 411, 414, 416, 418, 426, 428, 431, 433, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 725, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 856, 866, 870, 871, 872, 885, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 980, 981, 982, 984, 985, 993, 1017, 1018, 1019, 1021, 1022, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1058, 1060, 1065, 1069, 1070, 1074, 1075, 1076, 1077, 1080, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1238, 1250, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1341, 1342, 1344, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396, 1398], "read": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 170, 223, 234, 290, 301, 323, 338, 360, 375, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 652, 654, 747, 819, 873, 884, 940, 951, 973, 988, 1010, 1025, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1054, 1339, 1341, 1342, 1344, 1345, 1348, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1361, 1363, 1366, 1367, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1393, 1394], "skyecho": [0, 1, 27, 603, 605, 642, 1339], "netcdf": [0, 1, 5, 6, 7, 8, 13, 15, 17, 21, 27, 28, 33, 55, 383, 384, 385, 386, 388, 392, 397, 398, 515, 554, 557, 603, 605, 609, 610, 611, 612, 614, 620, 622, 626, 630, 642, 643, 648, 674, 1036, 1037, 1038, 1039, 1041, 1045, 1050, 1051, 1166, 1201, 1292, 1295, 1339, 1381, 1382], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 45, 55, 60, 77, 89, 106, 127, 128, 129, 134, 138, 139, 140, 142, 143, 144, 145, 147, 151, 152, 155, 156, 157, 159, 160, 198, 199, 200, 201, 202, 203, 204, 205, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 445, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 498, 499, 500, 501, 514, 516, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 589, 600, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 652, 654, 657, 658, 659, 660, 663, 674, 679, 696, 708, 725, 775, 776, 777, 782, 786, 787, 788, 790, 791, 792, 793, 796, 800, 801, 802, 806, 807, 808, 810, 811, 847, 848, 849, 850, 851, 852, 853, 854, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1096, 1099, 1100, 1101, 1102, 1108, 1109, 1110, 1111, 1115, 1116, 1118, 1119, 1126, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1147, 1149, 1150, 1151, 1152, 1165, 1167, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1186, 1188, 1191, 1201, 1204, 1221, 1233, 1250, 1263, 1327, 1339, 1341, 1343, 1344, 1346, 1347, 1348, 1351, 1353, 1354, 1355, 1358, 1360, 1363, 1369, 1370, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1398], "creat": [0, 30, 31, 33, 46, 57, 60, 62, 65, 89, 91, 94, 138, 139, 140, 141, 169, 198, 199, 200, 201, 202, 203, 204, 205, 206, 222, 236, 240, 259, 273, 289, 302, 306, 322, 334, 339, 343, 359, 371, 376, 392, 397, 398, 399, 400, 401, 461, 469, 479, 492, 493, 495, 512, 533, 537, 538, 539, 588, 589, 603, 645, 646, 648, 665, 676, 679, 681, 684, 708, 710, 713, 786, 787, 788, 789, 800, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 872, 886, 890, 909, 923, 939, 952, 956, 972, 984, 989, 993, 1009, 1021, 1026, 1031, 1045, 1050, 1051, 1052, 1053, 1054, 1091, 1092, 1093, 1112, 1120, 1130, 1143, 1144, 1146, 1163, 1184, 1189, 1190, 1192, 1202, 1204, 1206, 1209, 1233, 1235, 1238, 1326, 1327, 1341, 1342, 1344, 1347, 1350, 1351, 1352, 1354, 1355, 1357, 1371, 1372, 1376, 1381, 1382, 1384, 1387, 1389, 1391, 1392, 1394, 1396], "new": [0, 45, 62, 63, 65, 91, 92, 94, 141, 174, 176, 183, 190, 195, 461, 469, 479, 492, 493, 495, 522, 533, 537, 539, 547, 572, 587, 591, 592, 603, 663, 681, 682, 684, 710, 711, 713, 751, 753, 760, 767, 772, 789, 823, 825, 832, 839, 844, 1112, 1120, 1130, 1143, 1144, 1146, 1173, 1184, 1189, 1206, 1207, 1209, 1235, 1236, 1238, 1285, 1310, 1325, 1329, 1330, 1350, 1374, 1377, 1381, 1384, 1385, 1396, 1398], "cf": [0, 5, 6, 7, 13, 23, 28, 33, 60, 89, 385, 386, 397, 398, 515, 603, 609, 610, 611, 620, 637, 643, 648, 679, 708, 1038, 1039, 1050, 1051, 1166, 1204, 1233, 1344, 1354, 1372, 1381, 1393, 1394], "radial": [0, 5, 6, 7, 13, 23, 28, 33, 60, 89, 138, 139, 385, 386, 397, 446, 470, 471, 512, 513, 526, 537, 538, 544, 561, 589, 603, 609, 610, 611, 620, 637, 643, 648, 679, 708, 786, 787, 1038, 1039, 1050, 1097, 1121, 1122, 1163, 1164, 1177, 1189, 1190, 1204, 1233, 1282, 1299, 1327, 1340, 1344, 1346, 1354, 1372, 1381, 1385, 1391, 1393, 1394], "singl": [0, 31, 45, 139, 140, 141, 146, 155, 228, 229, 231, 233, 295, 296, 298, 300, 328, 329, 335, 337, 365, 366, 372, 374, 399, 559, 595, 603, 646, 663, 787, 788, 789, 794, 806, 878, 879, 881, 883, 945, 946, 948, 950, 978, 979, 985, 987, 1015, 1016, 1022, 1024, 1052, 1093, 1270, 1297, 1333, 1344, 1346, 1349, 1350, 1353, 1374, 1390, 1391, 1394, 1396], "sweep": [0, 1, 27, 31, 40, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 138, 139, 140, 143, 146, 148, 149, 183, 195, 198, 201, 202, 208, 210, 222, 223, 225, 230, 234, 235, 236, 237, 275, 277, 289, 290, 292, 297, 301, 302, 303, 308, 310, 322, 323, 325, 333, 334, 338, 339, 340, 345, 347, 359, 360, 362, 370, 371, 375, 376, 377, 391, 392, 393, 395, 446, 469, 492, 537, 552, 553, 559, 603, 605, 642, 646, 658, 679, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 701, 702, 703, 704, 705, 706, 707, 708, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 730, 731, 732, 733, 734, 735, 736, 760, 772, 786, 787, 788, 791, 794, 797, 798, 800, 832, 844, 847, 850, 851, 858, 860, 872, 873, 875, 880, 884, 885, 886, 887, 925, 927, 939, 940, 942, 947, 951, 952, 953, 958, 960, 972, 973, 975, 983, 984, 988, 989, 990, 995, 997, 1009, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1044, 1045, 1046, 1048, 1080, 1088, 1089, 1097, 1120, 1143, 1189, 1204, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1265, 1266, 1290, 1291, 1297, 1339, 1342, 1346, 1350, 1366, 1367, 1369, 1374, 1376, 1378, 1385, 1388, 1390, 1391, 1392, 1393], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 77, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 106, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 591, 592, 594, 595, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 652, 653, 654, 655, 658, 659, 662, 663, 665, 666, 667, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 696, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 725, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 751, 753, 760, 767, 772, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 819, 823, 825, 832, 839, 844, 847, 848, 849, 850, 851, 852, 853, 854, 856, 857, 858, 859, 860, 861, 862, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 962, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1080, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1201, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1221, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1250, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1329, 1330, 1332, 1333, 1370, 1376, 1384, 1385, 1387, 1393, 1395, 1396], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 45, 46, 47, 49, 55, 60, 61, 62, 64, 69, 89, 90, 91, 93, 98, 121, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 169, 174, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 408, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 539, 547, 549, 572, 589, 591, 592, 594, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 652, 654, 655, 658, 659, 663, 665, 666, 668, 674, 679, 680, 681, 683, 688, 708, 709, 710, 712, 717, 740, 742, 743, 751, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 806, 807, 808, 809, 810, 811, 823, 847, 848, 849, 850, 851, 852, 853, 854, 856, 857, 858, 859, 860, 861, 862, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 956, 957, 958, 959, 960, 961, 962, 972, 973, 974, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 993, 994, 995, 996, 997, 998, 999, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1082, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1169, 1170, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1192, 1193, 1195, 1201, 1204, 1205, 1206, 1208, 1213, 1233, 1234, 1235, 1237, 1242, 1263, 1285, 1287, 1310, 1327, 1329, 1330, 1332], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 37, 39, 40, 41, 42, 45, 46, 47, 60, 61, 62, 64, 69, 77, 89, 90, 91, 93, 98, 106, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 159, 160, 169, 174, 198, 199, 200, 201, 202, 203, 204, 205, 223, 225, 230, 233, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 334, 337, 338, 339, 340, 360, 362, 370, 371, 374, 375, 376, 377, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 404, 410, 425, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 545, 546, 547, 569, 572, 589, 594, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 650, 652, 654, 657, 658, 659, 660, 663, 665, 666, 679, 680, 681, 683, 688, 696, 708, 709, 710, 712, 717, 725, 751, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 806, 807, 808, 810, 811, 823, 847, 848, 849, 850, 851, 852, 853, 854, 873, 875, 880, 883, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 984, 987, 988, 989, 990, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1169, 1170, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1192, 1193, 1204, 1205, 1206, 1208, 1213, 1221, 1233, 1234, 1235, 1237, 1242, 1250, 1263, 1277, 1283, 1284, 1285, 1307, 1310, 1327, 1332, 1339, 1346, 1384, 1390, 1392, 1393], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 46, 47, 60, 61, 62, 65, 66, 67, 69, 70, 71, 72, 73, 82, 83, 85, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 111, 112, 114, 132, 133, 136, 137, 138, 139, 140, 144, 145, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 165, 174, 183, 195, 198, 206, 223, 225, 230, 233, 234, 235, 236, 237, 240, 250, 252, 253, 254, 256, 258, 259, 268, 270, 272, 273, 290, 292, 297, 300, 301, 302, 303, 306, 323, 325, 333, 334, 337, 338, 339, 340, 343, 360, 362, 370, 371, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 442, 447, 449, 451, 453, 456, 458, 460, 461, 462, 464, 465, 469, 476, 478, 479, 482, 485, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 511, 512, 514, 515, 516, 519, 524, 525, 526, 527, 528, 530, 533, 534, 535, 536, 537, 538, 539, 545, 546, 559, 572, 591, 592, 595, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 658, 664, 665, 666, 679, 680, 681, 684, 685, 686, 688, 689, 690, 691, 692, 701, 702, 704, 708, 709, 710, 713, 714, 715, 717, 718, 719, 720, 721, 730, 731, 733, 751, 760, 772, 780, 781, 784, 785, 786, 787, 788, 792, 793, 795, 796, 797, 798, 799, 804, 806, 807, 808, 809, 810, 811, 816, 823, 832, 844, 847, 856, 873, 875, 880, 883, 884, 885, 886, 887, 890, 900, 902, 903, 904, 906, 908, 909, 918, 920, 922, 923, 940, 942, 947, 950, 951, 952, 953, 956, 973, 975, 983, 984, 987, 988, 989, 990, 993, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1079, 1080, 1087, 1088, 1089, 1090, 1093, 1098, 1100, 1102, 1104, 1107, 1109, 1111, 1112, 1113, 1115, 1116, 1120, 1127, 1129, 1130, 1133, 1136, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1150, 1151, 1152, 1162, 1163, 1165, 1166, 1167, 1170, 1175, 1176, 1177, 1178, 1179, 1181, 1184, 1185, 1186, 1187, 1189, 1190, 1192, 1193, 1204, 1205, 1206, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1226, 1227, 1229, 1233, 1234, 1235, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1255, 1256, 1258, 1263, 1268, 1270, 1283, 1284, 1297, 1310, 1329, 1330, 1333, 1339, 1341, 1342, 1344, 1345, 1348, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1369, 1371, 1373, 1374, 1376, 1378, 1381, 1382, 1383, 1384, 1385, 1393, 1394, 1396], "from": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 45, 46, 49, 54, 57, 60, 62, 65, 69, 70, 71, 72, 89, 91, 94, 98, 99, 100, 101, 118, 119, 120, 122, 125, 126, 127, 128, 129, 133, 138, 139, 140, 143, 144, 147, 148, 149, 150, 151, 152, 155, 156, 157, 165, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 223, 224, 225, 230, 233, 234, 235, 236, 237, 240, 248, 250, 252, 253, 254, 256, 258, 259, 265, 266, 268, 270, 272, 273, 290, 291, 292, 297, 300, 301, 302, 303, 306, 323, 324, 325, 331, 333, 334, 337, 338, 339, 340, 343, 360, 361, 362, 368, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 430, 438, 440, 445, 446, 448, 449, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 512, 514, 515, 516, 521, 522, 524, 525, 526, 528, 529, 530, 533, 535, 537, 538, 539, 544, 552, 553, 559, 560, 563, 564, 565, 571, 572, 574, 575, 576, 577, 578, 580, 581, 587, 589, 600, 601, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 657, 658, 659, 660, 663, 665, 668, 673, 676, 679, 681, 684, 688, 689, 690, 691, 708, 710, 713, 717, 718, 719, 720, 737, 738, 739, 741, 744, 745, 747, 751, 753, 760, 767, 772, 775, 776, 777, 781, 786, 787, 788, 791, 792, 796, 797, 798, 799, 800, 801, 802, 804, 806, 807, 808, 816, 818, 819, 823, 825, 832, 839, 844, 847, 848, 849, 850, 851, 852, 853, 854, 856, 873, 874, 875, 880, 883, 884, 885, 886, 887, 890, 898, 900, 902, 903, 904, 906, 908, 909, 915, 916, 918, 920, 922, 923, 940, 941, 942, 947, 950, 951, 952, 953, 956, 973, 974, 975, 981, 983, 984, 987, 988, 989, 990, 993, 1010, 1011, 1012, 1018, 1020, 1021, 1024, 1025, 1026, 1027, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1065, 1067, 1070, 1077, 1079, 1082, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1096, 1097, 1099, 1100, 1101, 1102, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1166, 1167, 1172, 1173, 1175, 1176, 1177, 1179, 1180, 1181, 1184, 1186, 1188, 1189, 1190, 1192, 1195, 1200, 1204, 1206, 1209, 1213, 1214, 1215, 1216, 1233, 1235, 1238, 1242, 1243, 1244, 1245, 1270, 1282, 1290, 1291, 1297, 1298, 1301, 1302, 1303, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1325, 1327, 1339, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1363, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1398], "base": [0, 60, 65, 66, 67, 69, 70, 71, 72, 73, 89, 94, 95, 96, 98, 99, 100, 101, 102, 139, 140, 170, 198, 199, 200, 201, 202, 203, 204, 205, 236, 302, 339, 376, 399, 451, 471, 479, 497, 498, 501, 514, 526, 561, 572, 603, 679, 684, 685, 686, 688, 689, 690, 691, 692, 708, 713, 714, 715, 717, 718, 719, 720, 721, 747, 787, 788, 800, 819, 847, 848, 849, 850, 851, 852, 853, 854, 886, 952, 989, 1026, 1031, 1052, 1086, 1091, 1092, 1093, 1102, 1122, 1130, 1148, 1149, 1152, 1165, 1177, 1204, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1233, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1299, 1310, 1340, 1343, 1344, 1346, 1381, 1385, 1388, 1392, 1393, 1394, 1396], "path": [0, 23, 32, 128, 129, 140, 603, 637, 647, 776, 777, 788, 1202, 1263, 1346, 1347, 1381, 1392, 1395, 1396], "where": [0, 5, 6, 7, 28, 32, 71, 72, 100, 101, 118, 122, 125, 128, 129, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 152, 159, 160, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 201, 202, 223, 230, 233, 234, 235, 236, 237, 251, 267, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 385, 386, 447, 461, 469, 470, 479, 492, 493, 495, 498, 513, 514, 529, 530, 532, 538, 547, 552, 553, 562, 563, 572, 594, 603, 609, 610, 611, 643, 647, 690, 691, 719, 720, 737, 741, 744, 749, 751, 752, 753, 754, 755, 756, 758, 759, 760, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 776, 777, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 796, 800, 802, 810, 811, 821, 823, 824, 825, 826, 827, 828, 830, 831, 832, 835, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 850, 851, 873, 880, 883, 884, 885, 886, 887, 901, 917, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1030, 1031, 1038, 1039, 1098, 1112, 1120, 1121, 1130, 1143, 1144, 1146, 1149, 1164, 1165, 1180, 1181, 1183, 1190, 1215, 1216, 1244, 1245, 1285, 1290, 1291, 1300, 1301, 1310, 1332, 1346, 1347, 1350, 1355, 1358, 1374, 1376, 1381, 1384, 1388, 1398], "store": [0, 3, 9, 14, 16, 22, 26, 30, 31, 33, 46, 60, 89, 138, 139, 140, 155, 156, 402, 426, 447, 461, 469, 479, 492, 493, 495, 532, 603, 607, 613, 621, 625, 631, 640, 645, 646, 648, 665, 679, 708, 786, 787, 788, 806, 807, 1056, 1093, 1098, 1112, 1120, 1130, 1143, 1144, 1146, 1183, 1192, 1204, 1233, 1341, 1346, 1374, 1381, 1384, 1387, 1390, 1391, 1392, 1393, 1398], "extract": [0, 10, 223, 290, 323, 360, 395, 493, 497, 515, 552, 553, 565, 603, 617, 873, 940, 973, 1010, 1031, 1048, 1144, 1148, 1166, 1290, 1291, 1303, 1344, 1350, 1371, 1373, 1376, 1379, 1381, 1394], "If": [0, 6, 7, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 29, 30, 31, 45, 46, 47, 60, 62, 63, 64, 71, 89, 91, 92, 93, 100, 121, 123, 124, 126, 130, 132, 136, 137, 138, 141, 145, 146, 149, 155, 156, 157, 183, 195, 198, 201, 202, 208, 210, 223, 224, 229, 230, 234, 235, 236, 237, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 290, 291, 296, 297, 301, 302, 303, 308, 310, 323, 324, 329, 332, 333, 334, 338, 339, 340, 345, 347, 360, 361, 366, 369, 370, 371, 375, 376, 377, 382, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 429, 436, 440, 444, 451, 456, 460, 461, 462, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 482, 483, 484, 487, 488, 489, 492, 493, 495, 497, 498, 501, 502, 503, 504, 505, 507, 508, 512, 513, 514, 515, 516, 523, 526, 527, 528, 529, 530, 531, 534, 535, 539, 547, 552, 553, 560, 561, 580, 581, 582, 591, 592, 603, 604, 610, 611, 612, 615, 616, 621, 623, 625, 626, 627, 628, 629, 632, 633, 638, 639, 640, 641, 642, 644, 645, 646, 663, 665, 666, 679, 681, 682, 683, 690, 708, 710, 711, 712, 719, 740, 742, 743, 745, 760, 772, 778, 780, 784, 785, 786, 789, 793, 794, 798, 800, 806, 807, 808, 832, 844, 847, 850, 851, 858, 860, 873, 874, 879, 880, 884, 885, 886, 887, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 915, 916, 917, 918, 919, 920, 921, 922, 925, 927, 940, 941, 946, 947, 951, 952, 953, 958, 960, 973, 974, 979, 982, 983, 984, 988, 989, 990, 995, 997, 1010, 1011, 1016, 1019, 1020, 1021, 1025, 1026, 1027, 1030, 1031, 1035, 1037, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1056, 1063, 1067, 1074, 1077, 1093, 1095, 1102, 1107, 1111, 1112, 1113, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1138, 1139, 1140, 1143, 1144, 1146, 1148, 1149, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1163, 1164, 1165, 1166, 1167, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1185, 1186, 1192, 1193, 1204, 1206, 1207, 1208, 1215, 1233, 1235, 1236, 1237, 1244, 1285, 1290, 1291, 1298, 1299, 1318, 1319, 1320, 1329, 1330, 1376, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1392, 1393, 1395, 1396, 1398], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 45, 46, 47, 48, 60, 62, 63, 70, 71, 72, 73, 77, 89, 91, 92, 99, 100, 101, 102, 106, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 149, 151, 152, 154, 155, 156, 157, 158, 159, 165, 168, 170, 172, 174, 175, 176, 177, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 195, 196, 198, 201, 202, 208, 210, 223, 224, 225, 228, 229, 230, 233, 234, 235, 236, 237, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 290, 291, 292, 295, 296, 297, 300, 301, 302, 303, 306, 308, 310, 323, 324, 325, 328, 329, 333, 334, 337, 338, 339, 340, 343, 345, 347, 360, 361, 362, 365, 366, 370, 371, 374, 375, 376, 377, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 408, 415, 429, 436, 437, 440, 444, 446, 447, 452, 454, 456, 460, 461, 462, 465, 469, 470, 471, 476, 479, 483, 485, 492, 493, 495, 497, 498, 500, 502, 503, 504, 507, 508, 513, 514, 515, 516, 519, 523, 524, 526, 527, 528, 530, 531, 532, 534, 535, 537, 539, 544, 545, 546, 552, 553, 559, 560, 561, 563, 571, 572, 574, 577, 580, 581, 582, 584, 590, 591, 592, 594, 595, 603, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 658, 663, 665, 666, 667, 679, 681, 682, 689, 690, 691, 692, 696, 708, 710, 711, 718, 719, 720, 721, 725, 737, 740, 741, 742, 743, 744, 747, 749, 751, 752, 753, 754, 756, 758, 759, 760, 763, 765, 766, 767, 768, 770, 772, 773, 775, 776, 777, 778, 780, 784, 785, 786, 787, 788, 789, 790, 793, 794, 795, 796, 798, 800, 801, 802, 805, 806, 807, 808, 809, 810, 816, 819, 821, 823, 824, 825, 826, 828, 830, 831, 832, 835, 837, 838, 839, 840, 842, 844, 845, 847, 850, 851, 858, 860, 873, 874, 875, 878, 879, 880, 883, 884, 885, 886, 887, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 915, 916, 917, 918, 919, 920, 921, 922, 925, 927, 940, 941, 942, 945, 946, 947, 950, 951, 952, 953, 956, 958, 960, 973, 974, 975, 978, 979, 983, 984, 987, 988, 989, 990, 993, 995, 997, 1010, 1011, 1012, 1015, 1016, 1020, 1021, 1024, 1025, 1026, 1027, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1063, 1064, 1067, 1069, 1074, 1075, 1077, 1080, 1087, 1088, 1089, 1091, 1092, 1093, 1095, 1097, 1098, 1103, 1105, 1107, 1111, 1112, 1113, 1116, 1120, 1121, 1122, 1127, 1130, 1134, 1136, 1143, 1144, 1146, 1148, 1149, 1151, 1153, 1154, 1155, 1158, 1159, 1164, 1165, 1166, 1167, 1170, 1174, 1175, 1177, 1178, 1179, 1181, 1182, 1183, 1185, 1186, 1189, 1192, 1193, 1194, 1204, 1206, 1207, 1214, 1215, 1216, 1217, 1221, 1233, 1235, 1236, 1243, 1244, 1245, 1246, 1250, 1270, 1282, 1283, 1284, 1290, 1291, 1297, 1298, 1299, 1301, 1309, 1310, 1312, 1315, 1318, 1319, 1320, 1322, 1328, 1329, 1330, 1332, 1333, 1338, 1341, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1361, 1366, 1367, 1374, 1376, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1396, 1398], "current": [0, 43, 48, 136, 137, 138, 174, 176, 183, 190, 195, 208, 210, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 248, 250, 251, 252, 253, 254, 256, 258, 265, 266, 267, 268, 270, 272, 275, 277, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 310, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 345, 347, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 390, 443, 461, 469, 479, 492, 493, 495, 516, 526, 559, 603, 656, 661, 667, 751, 753, 760, 767, 772, 784, 785, 786, 823, 825, 832, 839, 844, 858, 860, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 898, 900, 901, 902, 903, 904, 906, 908, 915, 916, 917, 918, 920, 922, 925, 927, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 958, 960, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 992, 995, 997, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1029, 1043, 1081, 1083, 1112, 1120, 1130, 1143, 1144, 1146, 1167, 1177, 1194, 1297, 1339, 1396], "directori": [0, 45, 600, 603, 663, 1031, 1202, 1338, 1346, 1395, 1396], "time": [0, 1, 3, 9, 18, 22, 27, 30, 33, 46, 54, 55, 60, 89, 136, 137, 138, 162, 163, 208, 210, 223, 225, 230, 234, 235, 236, 237, 275, 277, 290, 292, 297, 301, 302, 303, 308, 310, 323, 325, 333, 334, 338, 339, 340, 345, 347, 360, 362, 370, 371, 375, 376, 377, 380, 383, 384, 395, 397, 398, 451, 460, 461, 468, 469, 478, 479, 492, 493, 495, 497, 515, 521, 530, 532, 554, 557, 603, 605, 607, 613, 623, 627, 631, 642, 645, 648, 665, 673, 674, 679, 708, 784, 785, 786, 813, 814, 858, 860, 873, 875, 880, 884, 885, 886, 887, 925, 927, 940, 942, 947, 951, 952, 953, 958, 960, 973, 975, 983, 984, 988, 989, 990, 995, 997, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1033, 1036, 1037, 1048, 1050, 1051, 1080, 1083, 1093, 1102, 1111, 1112, 1119, 1120, 1129, 1130, 1143, 1144, 1146, 1148, 1166, 1172, 1181, 1183, 1192, 1200, 1201, 1204, 1233, 1292, 1295, 1339, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1383, 1390, 1391, 1393, 1396, 1398], "format": [0, 3, 9, 22, 26, 33, 54, 55, 60, 89, 208, 210, 223, 225, 230, 233, 234, 235, 236, 237, 275, 277, 290, 292, 297, 300, 301, 302, 303, 308, 310, 323, 325, 333, 334, 337, 338, 339, 340, 345, 347, 360, 362, 370, 371, 374, 375, 376, 377, 382, 392, 394, 396, 397, 398, 400, 601, 602, 603, 607, 613, 631, 640, 648, 673, 674, 679, 708, 858, 860, 873, 875, 880, 883, 884, 885, 886, 887, 925, 927, 940, 942, 947, 950, 951, 952, 953, 958, 960, 973, 975, 983, 984, 987, 988, 989, 990, 995, 997, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1032, 1035, 1045, 1047, 1049, 1050, 1051, 1053, 1200, 1201, 1204, 1233, 1339, 1367, 1381, 1382, 1383, 1390], "prefix": [0, 63, 92, 603, 682, 711, 1202, 1207, 1236], "add": [0, 3, 9, 22, 47, 61, 62, 90, 91, 141, 152, 223, 225, 230, 233, 234, 235, 236, 237, 250, 251, 252, 253, 254, 256, 258, 265, 267, 268, 270, 272, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 334, 337, 338, 339, 340, 360, 362, 370, 371, 374, 375, 376, 377, 458, 461, 469, 479, 492, 495, 516, 603, 607, 613, 631, 666, 680, 681, 709, 710, 789, 802, 873, 875, 880, 883, 884, 885, 886, 887, 900, 901, 902, 903, 904, 906, 908, 915, 917, 918, 920, 922, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 984, 987, 988, 989, 990, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1109, 1112, 1120, 1130, 1143, 1146, 1167, 1193, 1205, 1206, 1234, 1235, 1339, 1350, 1355, 1356, 1357, 1366, 1367, 1369, 1374, 1376, 1377, 1385, 1389, 1392, 1395, 1396, 1398], "contain": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 34, 40, 45, 46, 47, 48, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 127, 128, 129, 130, 136, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 198, 199, 200, 201, 202, 203, 204, 205, 212, 223, 230, 233, 234, 235, 236, 237, 239, 249, 279, 290, 297, 300, 301, 302, 303, 305, 312, 323, 333, 334, 337, 338, 339, 340, 342, 349, 360, 370, 371, 374, 375, 376, 377, 379, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 475, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 523, 526, 527, 528, 529, 530, 531, 532, 533, 535, 538, 544, 545, 546, 552, 553, 559, 561, 565, 589, 591, 592, 595, 603, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 650, 658, 663, 665, 666, 667, 679, 680, 684, 685, 686, 688, 689, 690, 691, 692, 708, 709, 713, 714, 715, 717, 718, 719, 720, 721, 775, 776, 777, 778, 784, 785, 786, 787, 788, 794, 796, 797, 798, 799, 800, 801, 802, 806, 807, 808, 847, 848, 849, 850, 851, 852, 853, 854, 862, 873, 880, 883, 884, 885, 886, 887, 889, 899, 929, 940, 947, 950, 951, 952, 953, 955, 962, 973, 983, 984, 987, 988, 989, 990, 992, 999, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1029, 1031, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1051, 1052, 1053, 1054, 1056, 1069, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1190, 1192, 1193, 1194, 1204, 1205, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1233, 1234, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1282, 1283, 1284, 1290, 1291, 1297, 1299, 1303, 1327, 1329, 1330, 1333, 1347, 1359, 1360, 1381, 1383, 1384, 1387, 1390, 1391, 1392, 1393, 1395, 1396, 1398], "sufix": [0, 603], "datetim": [0, 1, 27, 162, 163, 208, 210, 230, 234, 236, 275, 277, 297, 301, 302, 308, 310, 333, 338, 339, 345, 347, 370, 375, 376, 380, 383, 384, 401, 461, 469, 479, 492, 493, 495, 554, 555, 556, 557, 558, 603, 605, 642, 813, 814, 858, 860, 880, 884, 886, 925, 927, 947, 951, 952, 958, 960, 983, 988, 989, 995, 997, 1020, 1025, 1026, 1033, 1036, 1037, 1054, 1112, 1120, 1130, 1143, 1144, 1146, 1292, 1293, 1294, 1295, 1296], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 46, 47, 54, 55, 61, 62, 63, 65, 66, 67, 69, 77, 86, 89, 90, 91, 92, 94, 95, 96, 98, 106, 115, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 159, 160, 162, 163, 170, 198, 199, 200, 201, 202, 203, 204, 205, 206, 224, 237, 240, 248, 252, 253, 259, 266, 273, 291, 303, 306, 324, 334, 340, 343, 361, 377, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 408, 427, 428, 434, 435, 438, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 530, 531, 532, 533, 537, 538, 539, 545, 546, 547, 559, 560, 562, 564, 565, 570, 572, 573, 574, 577, 582, 583, 587, 588, 591, 592, 594, 595, 600, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 650, 654, 665, 666, 673, 674, 680, 681, 682, 684, 685, 686, 688, 696, 705, 708, 709, 710, 711, 713, 714, 715, 717, 725, 734, 747, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 806, 807, 808, 810, 811, 813, 814, 819, 847, 848, 849, 850, 851, 852, 853, 854, 856, 874, 887, 890, 898, 902, 903, 909, 916, 923, 941, 953, 956, 974, 984, 990, 993, 1011, 1027, 1031, 1033, 1034, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1061, 1062, 1065, 1068, 1072, 1073, 1078, 1080, 1087, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1181, 1182, 1183, 1184, 1188, 1189, 1190, 1191, 1192, 1193, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1213, 1221, 1230, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1242, 1250, 1259, 1264, 1265, 1266, 1267, 1270, 1283, 1284, 1285, 1297, 1298, 1300, 1302, 1303, 1308, 1310, 1311, 1312, 1315, 1320, 1321, 1325, 1326, 1329, 1330, 1332, 1333, 1346, 1350, 1357, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1374, 1376, 1377, 1381, 1382, 1383, 1387, 1388, 1389, 1390, 1391, 1392, 1396], "The": [0, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 45, 46, 60, 89, 118, 122, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 169, 199, 200, 204, 228, 253, 295, 328, 365, 371, 381, 382, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 415, 442, 443, 446, 447, 449, 452, 456, 461, 462, 465, 466, 468, 469, 479, 481, 482, 485, 487, 492, 493, 495, 497, 498, 499, 500, 501, 513, 514, 516, 519, 521, 523, 524, 525, 526, 527, 528, 530, 531, 534, 535, 536, 537, 540, 541, 544, 547, 548, 549, 550, 551, 559, 560, 561, 562, 566, 567, 568, 571, 573, 575, 576, 578, 579, 580, 581, 584, 587, 589, 591, 592, 594, 602, 603, 607, 608, 612, 613, 620, 621, 623, 625, 626, 627, 628, 629, 631, 636, 638, 639, 640, 641, 642, 644, 645, 646, 648, 649, 663, 665, 679, 708, 737, 741, 744, 745, 775, 776, 777, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 796, 797, 798, 799, 805, 806, 807, 808, 809, 810, 811, 848, 849, 853, 878, 903, 945, 978, 1015, 1021, 1031, 1034, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1056, 1080, 1081, 1082, 1083, 1087, 1090, 1091, 1092, 1093, 1097, 1098, 1100, 1103, 1107, 1112, 1113, 1116, 1117, 1119, 1120, 1130, 1132, 1133, 1136, 1138, 1143, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1164, 1165, 1167, 1170, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1185, 1186, 1187, 1189, 1192, 1204, 1233, 1263, 1277, 1278, 1279, 1282, 1285, 1286, 1287, 1288, 1289, 1297, 1298, 1299, 1300, 1304, 1305, 1306, 1309, 1311, 1313, 1314, 1316, 1317, 1318, 1319, 1322, 1325, 1327, 1329, 1330, 1332, 1344, 1347, 1358, 1369, 1376, 1381, 1382, 1385, 1388, 1389, 1390, 1391, 1392, 1395], "start": [0, 1, 18, 30, 46, 60, 75, 76, 87, 88, 89, 104, 105, 116, 117, 249, 395, 401, 470, 493, 515, 530, 555, 603, 605, 615, 623, 627, 645, 665, 679, 694, 695, 706, 707, 708, 723, 724, 735, 736, 899, 1048, 1054, 1121, 1144, 1166, 1181, 1192, 1204, 1219, 1220, 1231, 1232, 1233, 1248, 1249, 1260, 1261, 1293, 1346, 1355, 1356, 1366, 1367, 1381, 1383, 1390, 1392, 1396, 1397], "end": [0, 1, 18, 27, 30, 45, 68, 76, 84, 88, 97, 105, 113, 117, 127, 128, 129, 139, 140, 143, 144, 147, 152, 155, 156, 157, 249, 530, 603, 605, 623, 627, 642, 645, 663, 687, 695, 703, 707, 716, 724, 732, 736, 775, 776, 777, 787, 788, 791, 792, 796, 802, 806, 807, 808, 899, 1181, 1212, 1220, 1228, 1232, 1241, 1249, 1257, 1261, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1391], "period": [0, 146, 559, 603, 794, 1297, 1385], "we": [0, 148, 513, 603, 797, 1164, 1339, 1346, 1347, 1350, 1355, 1374, 1376, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1397, 1398], "want": [0, 8, 603, 612, 1347, 1381, 1388, 1393, 1396, 1398], "dict": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 34, 35, 38, 41, 46, 47, 49, 54, 60, 61, 89, 90, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 159, 160, 206, 273, 306, 334, 343, 381, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 442, 446, 452, 453, 455, 456, 463, 466, 470, 471, 472, 473, 474, 480, 481, 494, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 545, 546, 547, 574, 589, 603, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 631, 634, 635, 638, 639, 640, 641, 642, 643, 644, 650, 652, 655, 659, 665, 666, 668, 673, 679, 680, 708, 709, 740, 742, 743, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 799, 801, 802, 806, 807, 808, 810, 811, 856, 923, 956, 984, 993, 1031, 1034, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1053, 1054, 1056, 1091, 1092, 1093, 1097, 1103, 1104, 1106, 1107, 1114, 1117, 1121, 1122, 1123, 1124, 1125, 1131, 1132, 1145, 1148, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1192, 1193, 1195, 1200, 1204, 1205, 1233, 1234, 1283, 1284, 1285, 1312, 1327, 1383], "option": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 46, 47, 48, 55, 56, 60, 61, 62, 63, 66, 67, 69, 71, 72, 77, 89, 92, 95, 96, 98, 100, 101, 118, 119, 120, 122, 123, 125, 127, 128, 129, 132, 133, 138, 139, 140, 141, 146, 147, 151, 152, 168, 170, 174, 176, 183, 190, 195, 223, 230, 234, 235, 236, 237, 239, 250, 252, 254, 256, 258, 265, 268, 270, 272, 290, 297, 301, 302, 303, 305, 323, 331, 332, 333, 334, 338, 339, 340, 342, 360, 368, 369, 370, 371, 375, 376, 377, 379, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 442, 445, 446, 455, 463, 465, 466, 474, 481, 485, 486, 487, 488, 497, 498, 500, 501, 503, 504, 505, 506, 507, 508, 509, 512, 514, 515, 516, 521, 522, 523, 526, 527, 528, 529, 535, 537, 538, 552, 553, 560, 577, 589, 594, 595, 603, 606, 607, 608, 609, 612, 613, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 631, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 650, 658, 665, 666, 667, 674, 675, 679, 680, 681, 682, 685, 686, 688, 690, 691, 696, 708, 711, 714, 715, 717, 719, 720, 737, 738, 739, 741, 742, 744, 747, 751, 753, 760, 767, 772, 775, 776, 777, 780, 781, 786, 787, 788, 789, 794, 796, 801, 802, 819, 823, 825, 832, 839, 844, 873, 880, 884, 885, 886, 887, 889, 900, 902, 904, 906, 908, 915, 918, 920, 922, 940, 947, 951, 952, 953, 955, 973, 981, 982, 983, 984, 988, 989, 990, 992, 1010, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1029, 1030, 1031, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1093, 1096, 1097, 1106, 1114, 1116, 1117, 1125, 1132, 1136, 1137, 1138, 1139, 1148, 1149, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1166, 1167, 1172, 1173, 1174, 1177, 1178, 1179, 1180, 1186, 1188, 1189, 1190, 1192, 1193, 1194, 1201, 1204, 1205, 1206, 1207, 1210, 1211, 1213, 1215, 1216, 1221, 1233, 1236, 1239, 1240, 1242, 1244, 1245, 1290, 1291, 1298, 1315, 1327, 1332, 1333, 1339, 1376, 1389, 1393], "dictionari": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 37, 38, 41, 44, 46, 47, 60, 61, 62, 64, 89, 90, 91, 93, 121, 123, 124, 127, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 146, 148, 149, 150, 151, 152, 155, 156, 157, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 405, 431, 433, 445, 446, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 464, 465, 470, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 523, 529, 530, 531, 532, 535, 536, 545, 546, 547, 589, 603, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 619, 621, 622, 623, 625, 626, 627, 628, 629, 631, 634, 635, 638, 639, 640, 641, 642, 643, 644, 648, 650, 652, 654, 655, 659, 662, 665, 666, 679, 680, 681, 683, 708, 709, 710, 712, 740, 742, 743, 775, 776, 777, 778, 779, 784, 785, 786, 787, 788, 789, 794, 797, 798, 799, 801, 802, 806, 807, 808, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1058, 1060, 1087, 1090, 1091, 1092, 1093, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1115, 1116, 1121, 1126, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1147, 1148, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1174, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1192, 1193, 1204, 1205, 1206, 1208, 1233, 1234, 1235, 1237, 1262, 1283, 1284, 1285, 1327, 1347, 1384, 1393], "map": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 41, 46, 60, 89, 122, 125, 228, 252, 253, 254, 265, 295, 306, 328, 330, 331, 332, 334, 335, 343, 365, 367, 368, 369, 371, 372, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 440, 447, 529, 603, 609, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 652, 659, 665, 679, 708, 741, 744, 878, 902, 903, 904, 915, 945, 956, 978, 980, 981, 982, 984, 985, 993, 1015, 1017, 1018, 1019, 1021, 1022, 1031, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1067, 1077, 1098, 1180, 1192, 1204, 1233, 1350, 1353, 1354, 1356, 1357, 1372, 1374, 1376, 1381, 1382, 1390, 1391, 1392, 1394, 1396], "field": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 46, 47, 54, 60, 61, 62, 63, 64, 69, 72, 85, 89, 90, 91, 92, 93, 98, 101, 114, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 159, 160, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 223, 224, 225, 230, 233, 234, 235, 236, 237, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 285, 289, 290, 291, 292, 297, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 318, 322, 323, 324, 325, 333, 334, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 355, 359, 360, 361, 362, 370, 371, 374, 375, 376, 377, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 442, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 537, 538, 544, 545, 546, 547, 549, 565, 571, 572, 574, 589, 591, 592, 593, 594, 603, 607, 609, 610, 611, 612, 613, 617, 619, 621, 622, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 652, 654, 657, 658, 659, 660, 665, 666, 673, 679, 680, 681, 682, 683, 688, 691, 704, 708, 709, 710, 711, 712, 717, 720, 733, 746, 747, 749, 751, 752, 753, 754, 755, 756, 758, 759, 763, 765, 766, 767, 768, 770, 771, 773, 774, 775, 776, 777, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 800, 801, 802, 806, 807, 808, 810, 811, 819, 821, 823, 824, 825, 826, 827, 828, 830, 831, 835, 837, 838, 839, 840, 842, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 868, 872, 873, 874, 875, 880, 883, 884, 885, 886, 887, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 935, 939, 940, 941, 942, 947, 950, 951, 952, 953, 956, 957, 958, 959, 960, 961, 962, 968, 972, 973, 974, 975, 983, 984, 987, 988, 989, 990, 993, 994, 995, 996, 997, 998, 999, 1005, 1009, 1010, 1011, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1082, 1087, 1088, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1189, 1190, 1192, 1193, 1200, 1204, 1205, 1206, 1207, 1208, 1213, 1216, 1229, 1233, 1234, 1235, 1236, 1237, 1242, 1245, 1258, 1264, 1265, 1266, 1267, 1268, 1270, 1273, 1274, 1275, 1276, 1282, 1283, 1284, 1285, 1287, 1303, 1309, 1310, 1312, 1327, 1329, 1330, 1331, 1332, 1339, 1341, 1344, 1346, 1350, 1351, 1352, 1355, 1356, 1358, 1369, 1373, 1374, 1375, 1376, 1377, 1381, 1382, 1383, 1385, 1387, 1388, 1390, 1391, 1392, 1393, 1396], "radar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 40, 46, 54, 89, 91, 92, 94, 95, 96, 98, 101, 106, 118, 119, 120, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 164, 165, 170, 183, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 222, 223, 228, 230, 234, 235, 236, 237, 250, 254, 256, 258, 268, 270, 272, 273, 289, 290, 295, 297, 301, 302, 303, 306, 322, 323, 328, 331, 333, 334, 338, 339, 340, 343, 359, 360, 365, 368, 370, 371, 375, 376, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 545, 546, 547, 549, 552, 553, 556, 558, 559, 561, 562, 563, 564, 565, 570, 572, 574, 577, 582, 587, 589, 590, 591, 592, 593, 594, 595, 603, 606, 607, 609, 610, 611, 612, 613, 614, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 650, 652, 654, 658, 664, 665, 673, 708, 710, 711, 713, 714, 715, 717, 720, 725, 737, 738, 739, 747, 760, 772, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 810, 811, 812, 815, 816, 819, 832, 844, 847, 848, 849, 850, 851, 852, 853, 854, 856, 872, 873, 878, 880, 884, 885, 886, 887, 900, 904, 906, 908, 918, 920, 922, 923, 939, 940, 945, 947, 951, 952, 953, 956, 972, 973, 978, 981, 983, 984, 988, 989, 990, 993, 1009, 1010, 1015, 1018, 1020, 1021, 1025, 1026, 1027, 1031, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1054, 1079, 1080, 1082, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1192, 1200, 1233, 1235, 1236, 1238, 1239, 1240, 1242, 1245, 1250, 1265, 1266, 1267, 1270, 1273, 1274, 1275, 1276, 1283, 1284, 1285, 1287, 1290, 1291, 1294, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1308, 1310, 1312, 1315, 1320, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1349, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1385, 1387, 1388, 1390, 1391, 1392, 1394, 1397], "unlik": [0, 5, 10, 15, 27, 28, 385, 386, 603, 609, 617, 622, 642, 643, 1038, 1039], "other": [0, 5, 10, 15, 26, 27, 28, 46, 54, 56, 60, 89, 138, 139, 140, 141, 146, 198, 202, 223, 225, 230, 233, 234, 235, 236, 237, 252, 253, 254, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 334, 337, 338, 339, 340, 360, 362, 370, 371, 374, 375, 376, 377, 382, 385, 386, 388, 391, 393, 395, 399, 407, 498, 514, 516, 530, 532, 533, 537, 603, 609, 617, 622, 640, 642, 643, 665, 673, 675, 679, 708, 786, 787, 788, 789, 794, 800, 847, 851, 873, 875, 880, 883, 884, 885, 886, 887, 902, 903, 904, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 984, 987, 988, 989, 990, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1035, 1038, 1039, 1041, 1044, 1046, 1048, 1052, 1080, 1093, 1149, 1165, 1167, 1181, 1183, 1184, 1189, 1192, 1200, 1204, 1233, 1265, 1266, 1267, 1339, 1376, 1381, 1383, 1389, 1391, 1395, 1396, 1398], "function": [0, 5, 10, 13, 15, 27, 28, 32, 45, 71, 100, 146, 148, 149, 150, 167, 169, 198, 199, 200, 201, 202, 203, 204, 205, 222, 223, 230, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 289, 290, 297, 301, 302, 303, 306, 322, 323, 333, 338, 339, 340, 343, 359, 360, 370, 375, 376, 377, 382, 385, 386, 389, 390, 396, 399, 442, 447, 456, 462, 479, 482, 497, 498, 514, 526, 528, 534, 536, 537, 565, 569, 572, 577, 578, 579, 588, 589, 595, 601, 603, 609, 617, 620, 622, 642, 643, 647, 651, 663, 664, 690, 719, 794, 797, 798, 799, 800, 818, 847, 848, 849, 850, 851, 852, 853, 854, 855, 872, 873, 880, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 939, 940, 947, 951, 952, 953, 956, 972, 973, 983, 988, 989, 990, 993, 1009, 1010, 1020, 1025, 1026, 1027, 1030, 1031, 1032, 1035, 1038, 1039, 1042, 1043, 1049, 1052, 1079, 1080, 1084, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1094, 1098, 1107, 1113, 1130, 1133, 1148, 1149, 1165, 1177, 1179, 1185, 1187, 1189, 1191, 1215, 1244, 1277, 1303, 1307, 1310, 1315, 1316, 1317, 1326, 1327, 1333, 1338, 1339, 1355, 1374, 1376, 1381, 1385, 1387, 1389, 1390, 1391, 1392, 1393, 1395, 1396], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 45, 46, 48, 60, 62, 63, 66, 67, 69, 71, 72, 73, 89, 91, 92, 95, 96, 98, 100, 101, 102, 121, 123, 124, 127, 128, 129, 133, 138, 139, 140, 143, 144, 145, 146, 147, 149, 151, 152, 155, 156, 157, 170, 174, 183, 198, 199, 200, 201, 202, 203, 204, 205, 222, 254, 289, 306, 322, 334, 343, 359, 371, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 415, 429, 440, 444, 446, 447, 456, 461, 469, 471, 479, 492, 493, 495, 497, 498, 512, 513, 514, 515, 516, 523, 526, 527, 528, 532, 535, 537, 538, 544, 559, 560, 571, 572, 577, 580, 581, 582, 595, 600, 603, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 658, 663, 665, 667, 679, 681, 682, 685, 686, 688, 690, 691, 692, 708, 710, 711, 714, 715, 717, 719, 720, 721, 740, 742, 743, 747, 751, 760, 775, 776, 777, 781, 786, 787, 788, 791, 792, 793, 794, 796, 798, 800, 801, 802, 806, 807, 808, 819, 823, 832, 847, 848, 849, 850, 851, 852, 853, 854, 872, 904, 939, 956, 972, 984, 993, 1009, 1021, 1030, 1031, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1056, 1067, 1069, 1077, 1080, 1082, 1088, 1089, 1091, 1092, 1093, 1095, 1097, 1098, 1107, 1112, 1120, 1122, 1130, 1143, 1144, 1146, 1148, 1149, 1163, 1164, 1165, 1166, 1167, 1174, 1177, 1178, 1179, 1183, 1186, 1189, 1190, 1192, 1194, 1204, 1206, 1207, 1210, 1211, 1213, 1215, 1216, 1217, 1233, 1235, 1236, 1239, 1240, 1242, 1244, 1245, 1246, 1270, 1282, 1297, 1298, 1309, 1310, 1315, 1318, 1319, 1320, 1333, 1338, 1341, 1342, 1346, 1347, 1350, 1351, 1355, 1356, 1357, 1358, 1361, 1367, 1374, 1376, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1396, 1398], "have": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 48, 60, 63, 71, 89, 92, 100, 127, 128, 129, 138, 151, 174, 176, 183, 190, 195, 223, 234, 259, 290, 301, 323, 334, 338, 360, 375, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 444, 452, 493, 498, 514, 516, 521, 530, 531, 547, 559, 561, 582, 603, 609, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 667, 679, 682, 690, 708, 711, 719, 751, 753, 760, 767, 772, 775, 776, 777, 786, 801, 823, 825, 832, 839, 844, 873, 884, 909, 940, 951, 973, 984, 988, 1010, 1025, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1095, 1103, 1144, 1149, 1165, 1167, 1172, 1181, 1182, 1194, 1204, 1207, 1215, 1233, 1236, 1244, 1268, 1285, 1297, 1299, 1320, 1346, 1347, 1374, 1376, 1381, 1387, 1389, 1390, 1391, 1392, 1395, 1396, 1397, 1398], "valu": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 43, 45, 46, 60, 63, 89, 92, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 159, 160, 165, 170, 172, 174, 175, 176, 178, 181, 183, 186, 188, 189, 190, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 223, 224, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 248, 250, 252, 253, 254, 256, 258, 265, 266, 268, 270, 272, 290, 291, 292, 294, 297, 298, 299, 300, 301, 302, 303, 323, 324, 325, 327, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 360, 361, 362, 364, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 407, 409, 411, 413, 417, 419, 420, 425, 426, 436, 437, 442, 444, 446, 447, 452, 456, 461, 466, 469, 473, 479, 480, 492, 493, 495, 497, 498, 499, 500, 501, 504, 507, 508, 512, 514, 516, 521, 523, 524, 525, 526, 527, 528, 530, 531, 532, 535, 537, 538, 544, 549, 559, 560, 567, 572, 575, 576, 578, 580, 582, 602, 603, 606, 607, 608, 609, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 631, 632, 633, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 656, 658, 661, 663, 665, 679, 682, 708, 711, 740, 741, 742, 743, 744, 747, 749, 751, 752, 753, 755, 758, 760, 763, 765, 766, 767, 770, 772, 774, 775, 776, 777, 778, 779, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 800, 801, 802, 804, 806, 807, 808, 810, 811, 816, 819, 821, 823, 824, 825, 827, 830, 832, 835, 837, 838, 839, 842, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 873, 874, 875, 877, 880, 881, 882, 883, 884, 885, 886, 887, 898, 900, 902, 903, 904, 906, 908, 915, 916, 918, 920, 922, 940, 941, 942, 944, 947, 948, 949, 950, 951, 952, 953, 973, 974, 975, 977, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 1010, 1011, 1012, 1014, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1030, 1031, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1063, 1064, 1069, 1074, 1075, 1091, 1092, 1093, 1095, 1097, 1098, 1103, 1107, 1112, 1117, 1120, 1124, 1130, 1131, 1143, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1155, 1158, 1159, 1163, 1165, 1167, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1186, 1189, 1190, 1192, 1204, 1207, 1233, 1236, 1265, 1266, 1267, 1268, 1282, 1287, 1297, 1298, 1305, 1310, 1313, 1314, 1316, 1318, 1320, 1339, 1347, 1350, 1355, 1358, 1374, 1375, 1376, 1384, 1385, 1388, 1390, 1391, 1396], "ar": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 45, 46, 60, 71, 73, 89, 100, 102, 122, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 183, 195, 198, 200, 201, 202, 203, 204, 205, 223, 229, 230, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 265, 268, 270, 272, 290, 296, 297, 301, 302, 303, 323, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 360, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 431, 446, 447, 456, 462, 465, 470, 482, 483, 485, 487, 493, 497, 498, 503, 504, 505, 507, 508, 512, 514, 516, 523, 526, 528, 535, 537, 538, 552, 553, 560, 563, 575, 576, 578, 580, 581, 590, 595, 601, 603, 609, 612, 616, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 663, 665, 679, 690, 692, 708, 719, 721, 741, 744, 745, 760, 772, 775, 776, 777, 784, 785, 786, 787, 788, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 806, 807, 808, 818, 832, 844, 847, 849, 850, 851, 852, 853, 854, 873, 879, 880, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 915, 918, 920, 922, 940, 946, 947, 951, 952, 953, 973, 979, 980, 981, 982, 983, 984, 985, 988, 989, 990, 1010, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1031, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1056, 1058, 1086, 1087, 1090, 1091, 1092, 1093, 1097, 1098, 1107, 1113, 1116, 1121, 1133, 1134, 1136, 1138, 1144, 1148, 1149, 1154, 1155, 1156, 1158, 1159, 1163, 1165, 1167, 1174, 1177, 1179, 1186, 1189, 1190, 1192, 1204, 1215, 1217, 1233, 1244, 1246, 1265, 1266, 1267, 1290, 1291, 1298, 1301, 1313, 1314, 1316, 1318, 1319, 1328, 1333, 1342, 1344, 1346, 1347, 1350, 1355, 1357, 1358, 1366, 1369, 1374, 1376, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1396, 1398], "still": [0, 5, 10, 15, 27, 28, 138, 306, 343, 385, 386, 401, 577, 603, 609, 617, 622, 642, 643, 786, 956, 993, 1038, 1039, 1054, 1093, 1315, 1346, 1396], "includ": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 33, 35, 37, 60, 65, 71, 72, 89, 94, 100, 101, 127, 128, 129, 138, 139, 140, 141, 143, 144, 146, 147, 155, 156, 157, 170, 174, 176, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 223, 230, 234, 235, 236, 237, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 522, 537, 547, 584, 603, 606, 607, 608, 609, 612, 613, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 642, 643, 644, 647, 648, 652, 654, 679, 684, 690, 691, 708, 713, 719, 720, 747, 751, 753, 757, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 786, 787, 788, 789, 791, 792, 794, 796, 800, 806, 807, 808, 818, 819, 823, 825, 829, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 873, 880, 884, 885, 886, 887, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1031, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1088, 1089, 1091, 1092, 1093, 1173, 1189, 1204, 1209, 1215, 1216, 1233, 1238, 1244, 1245, 1285, 1322, 1346, 1350, 1369, 1381, 1388, 1390, 1395, 1396], "exclud": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 63, 92, 127, 128, 129, 151, 152, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 192, 195, 198, 200, 201, 202, 203, 204, 205, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 497, 501, 526, 527, 528, 530, 533, 537, 538, 603, 609, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 652, 682, 711, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 767, 769, 772, 775, 776, 777, 800, 801, 802, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 839, 841, 844, 847, 849, 850, 851, 852, 853, 854, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1148, 1152, 1177, 1178, 1179, 1181, 1184, 1189, 1190, 1207, 1236, 1342, 1351, 1388], "them": [0, 5, 10, 15, 18, 19, 20, 27, 28, 71, 100, 138, 139, 140, 141, 240, 259, 334, 385, 386, 395, 501, 512, 531, 561, 601, 603, 609, 615, 617, 622, 627, 628, 629, 642, 643, 690, 719, 786, 787, 788, 789, 890, 909, 984, 1038, 1039, 1048, 1093, 1152, 1163, 1182, 1215, 1244, 1299, 1339, 1355, 1381, 1390, 1391, 1398], "us": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 40, 45, 46, 48, 60, 62, 69, 71, 72, 89, 91, 98, 100, 101, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 170, 183, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 310, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 345, 347, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 373, 374, 375, 376, 377, 379, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 429, 442, 445, 447, 448, 449, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 514, 516, 519, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 544, 546, 547, 549, 552, 553, 559, 560, 561, 577, 578, 582, 584, 589, 591, 592, 593, 594, 595, 600, 603, 606, 607, 608, 609, 612, 613, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 631, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 650, 652, 658, 663, 665, 667, 679, 681, 688, 690, 691, 708, 710, 717, 719, 720, 740, 741, 742, 743, 744, 747, 760, 772, 775, 776, 777, 778, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 819, 832, 844, 847, 848, 849, 850, 851, 852, 853, 854, 856, 858, 860, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 927, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 958, 960, 972, 973, 974, 975, 976, 977, 978, 979, 982, 983, 984, 986, 987, 988, 989, 990, 992, 993, 995, 997, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1056, 1080, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1098, 1099, 1100, 1101, 1102, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1167, 1170, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1194, 1204, 1206, 1213, 1215, 1216, 1233, 1235, 1242, 1244, 1245, 1270, 1277, 1282, 1284, 1285, 1287, 1290, 1291, 1297, 1298, 1299, 1315, 1316, 1320, 1322, 1327, 1329, 1330, 1331, 1332, 1333, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1349, 1353, 1354, 1355, 1356, 1358, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1372, 1374, 1376, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1398], "which": [0, 5, 10, 13, 15, 27, 28, 30, 31, 34, 46, 48, 56, 57, 60, 65, 69, 82, 83, 85, 86, 89, 94, 98, 111, 112, 114, 115, 130, 131, 134, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 151, 152, 155, 156, 157, 159, 160, 166, 167, 169, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 223, 224, 228, 229, 230, 233, 234, 235, 236, 237, 240, 248, 250, 252, 253, 256, 258, 259, 265, 266, 268, 270, 272, 290, 291, 295, 296, 297, 300, 301, 302, 303, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 360, 361, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 381, 382, 384, 385, 386, 391, 392, 395, 396, 398, 399, 400, 401, 402, 426, 445, 446, 449, 451, 452, 456, 465, 467, 468, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 493, 499, 500, 502, 512, 513, 515, 516, 523, 524, 525, 526, 527, 528, 530, 532, 535, 537, 538, 544, 547, 548, 549, 550, 551, 552, 553, 560, 561, 564, 565, 571, 572, 575, 576, 589, 594, 603, 609, 617, 620, 622, 642, 643, 645, 646, 650, 665, 667, 675, 676, 679, 684, 688, 701, 702, 704, 705, 708, 713, 717, 730, 731, 733, 734, 747, 751, 753, 760, 767, 772, 778, 779, 782, 786, 787, 788, 789, 790, 791, 792, 793, 796, 797, 800, 801, 802, 806, 807, 808, 810, 811, 819, 823, 825, 832, 839, 844, 847, 848, 849, 850, 851, 852, 853, 854, 873, 874, 878, 879, 880, 883, 884, 885, 886, 887, 890, 898, 900, 902, 903, 906, 908, 909, 915, 916, 918, 920, 922, 940, 941, 945, 946, 947, 950, 951, 952, 953, 973, 974, 978, 979, 980, 981, 982, 983, 984, 985, 987, 988, 989, 990, 1010, 1011, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1034, 1035, 1037, 1038, 1039, 1044, 1045, 1048, 1049, 1051, 1052, 1053, 1054, 1056, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1100, 1102, 1103, 1107, 1116, 1118, 1119, 1128, 1129, 1130, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1144, 1150, 1151, 1153, 1163, 1164, 1166, 1167, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1183, 1186, 1188, 1189, 1190, 1192, 1194, 1204, 1209, 1213, 1226, 1227, 1229, 1230, 1233, 1238, 1242, 1255, 1256, 1258, 1259, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1298, 1299, 1302, 1303, 1309, 1310, 1313, 1314, 1327, 1332, 1339, 1342, 1346, 1347, 1350, 1355, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1374, 1381, 1385, 1387, 1389, 1390, 1391, 1392, 1393, 1395, 1396], "renam": [0, 5, 10, 15, 27, 28, 45, 166, 167, 169, 385, 386, 396, 603, 609, 617, 622, 642, 643, 663, 1038, 1039, 1049], "kei": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 33, 46, 47, 60, 61, 62, 89, 90, 91, 121, 123, 124, 138, 139, 140, 334, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 405, 411, 416, 418, 426, 431, 433, 436, 437, 438, 440, 465, 485, 487, 488, 515, 516, 603, 609, 610, 611, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 648, 665, 666, 679, 680, 681, 708, 709, 710, 740, 742, 743, 786, 787, 788, 984, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1060, 1063, 1064, 1065, 1067, 1069, 1074, 1075, 1077, 1091, 1092, 1093, 1116, 1136, 1138, 1139, 1166, 1167, 1192, 1193, 1204, 1205, 1206, 1233, 1234, 1235, 1270, 1383, 1384, 1388, 1389], "uniform": [0, 5, 10, 13, 15, 27, 28, 73, 102, 139, 140, 385, 386, 394, 446, 497, 536, 573, 603, 609, 617, 620, 622, 642, 643, 692, 721, 787, 788, 1038, 1039, 1047, 1097, 1148, 1187, 1217, 1246, 1311, 1355, 1358, 1381, 1383], "bool": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 47, 48, 55, 61, 62, 63, 66, 67, 69, 71, 72, 73, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 126, 127, 136, 137, 138, 139, 140, 151, 152, 155, 156, 157, 170, 174, 176, 183, 190, 195, 208, 210, 223, 225, 230, 233, 234, 235, 236, 237, 240, 250, 252, 253, 254, 256, 258, 259, 265, 268, 270, 272, 275, 277, 290, 292, 297, 300, 301, 302, 303, 308, 310, 323, 325, 333, 334, 337, 338, 339, 340, 345, 347, 360, 362, 370, 371, 374, 375, 376, 377, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 446, 451, 456, 460, 467, 468, 470, 471, 473, 476, 477, 478, 483, 484, 487, 488, 489, 497, 498, 501, 502, 504, 507, 508, 514, 516, 523, 524, 525, 526, 527, 528, 530, 531, 532, 534, 535, 559, 561, 577, 595, 603, 609, 610, 611, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 652, 666, 667, 674, 680, 681, 682, 685, 686, 688, 690, 691, 692, 709, 710, 711, 714, 715, 717, 719, 720, 721, 738, 742, 745, 747, 751, 753, 760, 767, 772, 775, 784, 785, 786, 787, 788, 801, 802, 806, 807, 808, 819, 823, 825, 832, 839, 844, 858, 860, 873, 875, 880, 883, 884, 885, 886, 887, 890, 900, 902, 903, 904, 906, 908, 909, 915, 918, 920, 922, 925, 927, 940, 942, 947, 950, 951, 952, 953, 958, 960, 973, 975, 983, 984, 987, 988, 989, 990, 995, 997, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1030, 1031, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1087, 1088, 1090, 1093, 1097, 1102, 1107, 1111, 1118, 1119, 1121, 1122, 1124, 1127, 1128, 1129, 1134, 1135, 1138, 1139, 1140, 1148, 1149, 1152, 1153, 1155, 1158, 1159, 1165, 1167, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1185, 1186, 1193, 1194, 1201, 1205, 1206, 1207, 1210, 1211, 1213, 1215, 1216, 1217, 1234, 1235, 1236, 1239, 1240, 1242, 1244, 1245, 1246, 1297, 1299, 1315, 1333, 1339], "true": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 46, 47, 48, 55, 60, 61, 62, 63, 66, 67, 69, 71, 72, 73, 89, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 127, 136, 137, 138, 139, 140, 151, 152, 155, 156, 157, 162, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 208, 210, 223, 225, 230, 233, 234, 235, 236, 237, 240, 250, 252, 253, 254, 256, 258, 259, 265, 268, 270, 272, 275, 277, 290, 292, 297, 300, 301, 302, 303, 308, 310, 323, 325, 333, 334, 337, 338, 339, 340, 345, 347, 360, 362, 370, 371, 374, 375, 376, 377, 381, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 429, 433, 446, 451, 456, 460, 467, 468, 470, 471, 476, 477, 478, 483, 484, 487, 488, 489, 497, 498, 501, 502, 504, 507, 508, 513, 514, 516, 523, 526, 527, 528, 530, 531, 532, 534, 535, 559, 561, 577, 595, 603, 604, 609, 610, 611, 612, 615, 616, 617, 621, 622, 623, 625, 626, 627, 628, 629, 632, 633, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 652, 665, 666, 667, 674, 679, 680, 681, 682, 685, 686, 688, 690, 691, 692, 708, 709, 710, 711, 714, 715, 717, 719, 720, 721, 738, 742, 747, 749, 751, 752, 753, 754, 755, 756, 758, 759, 760, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 784, 785, 786, 787, 788, 795, 801, 802, 806, 807, 808, 813, 819, 821, 823, 824, 825, 826, 827, 828, 830, 831, 832, 835, 837, 838, 839, 840, 842, 843, 844, 845, 846, 858, 860, 873, 875, 880, 883, 884, 885, 886, 887, 890, 900, 902, 903, 904, 906, 908, 909, 915, 918, 920, 922, 925, 927, 940, 942, 947, 950, 951, 952, 953, 958, 960, 973, 975, 983, 984, 987, 988, 989, 990, 995, 997, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1030, 1031, 1034, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1060, 1087, 1088, 1090, 1091, 1092, 1093, 1097, 1102, 1107, 1111, 1118, 1119, 1121, 1122, 1127, 1128, 1129, 1134, 1135, 1138, 1139, 1140, 1148, 1149, 1152, 1153, 1155, 1158, 1159, 1164, 1165, 1167, 1174, 1177, 1178, 1179, 1181, 1182, 1183, 1185, 1186, 1192, 1193, 1194, 1201, 1202, 1204, 1205, 1206, 1207, 1210, 1211, 1213, 1215, 1216, 1217, 1233, 1234, 1235, 1236, 1239, 1240, 1242, 1244, 1245, 1246, 1275, 1276, 1297, 1299, 1315, 1333, 1357, 1364, 1365, 1366, 1367, 1376, 1378, 1384, 1385, 1389, 1390, 1391, 1392, 1393, 1396], "forc": [0, 5, 10, 15, 18, 19, 20, 27, 28, 385, 386, 396, 446, 531, 582, 603, 609, 617, 622, 627, 628, 629, 642, 643, 1038, 1039, 1049, 1097, 1182, 1320], "case": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 40, 121, 123, 124, 138, 140, 183, 195, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 440, 516, 603, 609, 610, 611, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 645, 646, 658, 740, 742, 743, 760, 772, 786, 788, 832, 844, 1032, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1067, 1077, 1167, 1339, 1346, 1347, 1350, 1367, 1389, 1390, 1396], "ignor": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 138, 139, 140, 223, 225, 230, 233, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 334, 337, 338, 339, 340, 360, 362, 370, 371, 374, 375, 376, 377, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 446, 523, 603, 609, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 786, 787, 788, 873, 875, 880, 883, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 984, 987, 988, 989, 990, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1088, 1089, 1097, 1174, 1341, 1350, 1392], "list": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 35, 63, 92, 136, 137, 145, 199, 206, 225, 229, 232, 253, 259, 273, 292, 296, 299, 306, 325, 329, 336, 343, 362, 366, 373, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 456, 461, 462, 467, 468, 469, 479, 482, 492, 493, 495, 500, 515, 522, 547, 552, 553, 564, 603, 609, 610, 611, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 645, 646, 652, 682, 711, 784, 785, 793, 848, 856, 875, 879, 882, 903, 909, 923, 942, 946, 949, 956, 975, 979, 986, 993, 1012, 1016, 1023, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1082, 1088, 1089, 1093, 1107, 1112, 1113, 1118, 1119, 1120, 1130, 1133, 1143, 1144, 1146, 1151, 1166, 1173, 1207, 1236, 1285, 1290, 1291, 1302, 1346, 1396, 1397], "appli": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 60, 63, 89, 92, 132, 135, 136, 137, 139, 140, 146, 151, 152, 153, 164, 198, 201, 202, 223, 224, 230, 233, 234, 235, 236, 237, 248, 266, 290, 291, 297, 300, 301, 302, 303, 323, 324, 333, 334, 337, 338, 339, 340, 360, 361, 370, 371, 374, 375, 376, 377, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 447, 451, 465, 467, 470, 484, 485, 487, 488, 498, 504, 514, 530, 532, 560, 561, 603, 609, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 679, 682, 708, 711, 780, 783, 784, 785, 787, 788, 794, 800, 801, 802, 803, 815, 847, 850, 851, 873, 874, 880, 883, 884, 885, 886, 887, 898, 916, 940, 941, 947, 950, 951, 952, 953, 973, 974, 983, 984, 987, 988, 989, 990, 1010, 1011, 1020, 1021, 1024, 1025, 1026, 1027, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1080, 1087, 1090, 1093, 1098, 1102, 1116, 1118, 1121, 1135, 1136, 1138, 1139, 1149, 1155, 1165, 1181, 1183, 1204, 1207, 1233, 1236, 1298, 1299, 1346, 1355, 1366, 1376, 1385], "after": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 138, 139, 169, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 402, 516, 526, 561, 603, 609, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 786, 787, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1056, 1167, 1177, 1299, 1347, 1376, 1391, 1392, 1395, 1396, 1398], "set": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 46, 60, 71, 72, 73, 89, 100, 101, 102, 121, 122, 123, 124, 125, 126, 127, 128, 129, 138, 139, 140, 151, 152, 155, 156, 170, 174, 176, 183, 190, 195, 198, 200, 201, 202, 203, 204, 205, 223, 225, 230, 233, 234, 235, 236, 237, 238, 239, 252, 253, 254, 290, 292, 297, 300, 301, 302, 303, 304, 305, 323, 325, 333, 334, 337, 338, 339, 340, 341, 342, 360, 362, 370, 371, 374, 375, 376, 377, 378, 379, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 426, 434, 435, 438, 439, 470, 479, 497, 503, 504, 505, 507, 508, 516, 526, 527, 528, 544, 547, 559, 582, 585, 586, 603, 609, 612, 617, 621, 622, 623, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 663, 665, 679, 690, 691, 692, 708, 719, 720, 721, 740, 741, 742, 743, 744, 745, 747, 751, 753, 760, 767, 772, 775, 776, 777, 786, 787, 788, 800, 801, 802, 806, 807, 819, 823, 825, 832, 839, 844, 847, 849, 850, 851, 852, 853, 854, 873, 875, 880, 883, 884, 885, 886, 887, 888, 889, 902, 903, 904, 940, 942, 947, 950, 951, 952, 953, 954, 955, 973, 975, 983, 984, 987, 988, 989, 990, 991, 992, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1061, 1062, 1065, 1066, 1072, 1073, 1076, 1093, 1121, 1130, 1148, 1154, 1155, 1156, 1158, 1159, 1167, 1177, 1178, 1179, 1192, 1204, 1215, 1216, 1217, 1233, 1244, 1245, 1246, 1265, 1266, 1267, 1275, 1276, 1282, 1285, 1297, 1320, 1323, 1324, 1339, 1347, 1350, 1356, 1363, 1366, 1367, 1370, 1371, 1376, 1381, 1385, 1391, 1395, 1396, 1397], "all": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 46, 48, 60, 63, 71, 72, 89, 92, 100, 101, 119, 138, 139, 140, 144, 145, 146, 151, 152, 155, 156, 157, 170, 173, 180, 183, 187, 192, 195, 198, 202, 223, 229, 230, 233, 234, 235, 236, 237, 252, 253, 290, 296, 297, 300, 301, 302, 303, 323, 329, 333, 334, 337, 338, 339, 340, 360, 366, 370, 371, 374, 375, 376, 377, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 416, 430, 446, 461, 469, 479, 492, 495, 497, 498, 500, 514, 515, 516, 522, 526, 528, 547, 560, 601, 603, 609, 610, 611, 612, 617, 621, 622, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 665, 667, 679, 682, 690, 691, 708, 711, 719, 720, 738, 747, 750, 757, 760, 764, 769, 772, 786, 787, 788, 792, 793, 794, 800, 801, 802, 806, 807, 808, 819, 822, 829, 832, 836, 841, 844, 847, 851, 873, 879, 880, 883, 884, 885, 886, 887, 902, 903, 940, 946, 947, 950, 951, 952, 953, 973, 979, 983, 984, 987, 988, 989, 990, 1010, 1016, 1020, 1021, 1024, 1025, 1026, 1027, 1030, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1057, 1069, 1070, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1112, 1120, 1130, 1143, 1146, 1148, 1149, 1151, 1165, 1166, 1167, 1173, 1177, 1179, 1192, 1194, 1204, 1207, 1215, 1216, 1233, 1236, 1244, 1245, 1285, 1298, 1338, 1344, 1355, 1374, 1375, 1376, 1378, 1381, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1398], "specifi": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 60, 63, 71, 72, 89, 92, 100, 101, 121, 123, 124, 138, 139, 140, 174, 176, 190, 223, 225, 230, 234, 235, 236, 237, 249, 250, 252, 253, 254, 255, 256, 257, 258, 265, 268, 269, 270, 271, 272, 290, 292, 297, 301, 302, 303, 323, 325, 330, 331, 332, 333, 334, 335, 338, 339, 340, 360, 362, 367, 368, 369, 370, 371, 372, 375, 376, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 436, 501, 526, 527, 528, 539, 547, 589, 594, 603, 606, 607, 608, 609, 612, 613, 617, 618, 619, 621, 622, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 665, 679, 682, 690, 691, 708, 711, 719, 720, 740, 742, 743, 751, 753, 767, 786, 787, 788, 818, 823, 825, 839, 873, 875, 880, 884, 885, 886, 887, 899, 900, 902, 903, 904, 905, 906, 907, 908, 915, 918, 919, 920, 921, 922, 940, 942, 947, 951, 952, 953, 973, 975, 980, 981, 982, 983, 984, 985, 988, 989, 990, 1010, 1012, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1031, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1063, 1074, 1080, 1091, 1092, 1093, 1152, 1177, 1178, 1179, 1192, 1204, 1207, 1215, 1216, 1233, 1236, 1244, 1245, 1285, 1327, 1332, 1339, 1342, 1346, 1387, 1388, 1391, 1395], "Be": [0, 223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 603, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027], "about": [0, 60, 89, 516, 603, 679, 708, 1167, 1204, 1233], "process": [0, 30, 31, 139, 151, 152, 253, 456, 516, 603, 645, 646, 787, 801, 802, 903, 1107, 1167, 1339, 1346, 1381, 1382, 1392, 1396], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 171, 184, 185, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 244, 245, 246, 247, 260, 261, 262, 263, 274, 275, 276, 277, 278, 279, 307, 308, 309, 310, 311, 312, 344, 345, 346, 347, 348, 349, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 407, 408, 409, 410, 413, 417, 418, 419, 420, 424, 428, 429, 431, 436, 437, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 587, 589, 590, 591, 592, 594, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 650, 654, 655, 656, 657, 658, 659, 660, 661, 662, 667, 668, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 701, 702, 703, 704, 705, 706, 707, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 761, 762, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 820, 833, 834, 847, 848, 849, 850, 851, 852, 853, 854, 857, 858, 859, 860, 861, 862, 894, 895, 896, 897, 910, 911, 912, 913, 924, 925, 926, 927, 928, 929, 957, 958, 959, 960, 961, 962, 994, 995, 996, 997, 998, 999, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1058, 1063, 1064, 1074, 1075, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1194, 1195, 1202, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1332, 1374, 1376, 1384, 1387, 1393, 1396], "note": [0, 5, 13, 27, 28, 62, 91, 118, 138, 146, 174, 176, 183, 190, 195, 252, 253, 334, 385, 386, 389, 390, 400, 497, 521, 526, 537, 559, 603, 609, 620, 642, 643, 681, 710, 737, 751, 753, 760, 767, 772, 786, 794, 823, 825, 832, 839, 844, 902, 903, 984, 1031, 1038, 1039, 1042, 1043, 1053, 1088, 1089, 1093, 1148, 1172, 1177, 1189, 1206, 1235, 1297, 1346, 1347, 1357, 1376, 1389, 1391, 1392, 1395, 1396], "ha": [0, 5, 8, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 32, 60, 89, 133, 138, 166, 167, 169, 208, 244, 259, 260, 275, 308, 343, 345, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 400, 433, 440, 502, 504, 507, 508, 523, 560, 573, 594, 603, 609, 612, 620, 621, 623, 625, 626, 627, 628, 629, 632, 633, 638, 639, 640, 641, 642, 643, 644, 647, 679, 708, 781, 786, 858, 894, 909, 910, 925, 958, 993, 995, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1060, 1067, 1077, 1079, 1153, 1155, 1158, 1159, 1174, 1204, 1233, 1270, 1298, 1311, 1332, 1339, 1346, 1355, 1376, 1381, 1387, 1389, 1390, 1391, 1393, 1395, 1396, 1398], "been": [0, 5, 13, 26, 27, 28, 133, 138, 166, 167, 169, 174, 176, 183, 190, 195, 259, 343, 385, 386, 388, 391, 392, 393, 395, 502, 547, 560, 603, 609, 620, 632, 633, 640, 642, 643, 751, 753, 760, 767, 772, 781, 786, 823, 825, 832, 839, 844, 909, 993, 1038, 1039, 1041, 1044, 1045, 1046, 1048, 1153, 1285, 1298, 1346, 1376, 1381, 1387, 1392, 1395, 1396], "test": [0, 5, 13, 26, 27, 28, 138, 385, 386, 391, 393, 402, 456, 490, 491, 601, 603, 609, 620, 640, 642, 643, 786, 1038, 1039, 1044, 1046, 1056, 1107, 1141, 1142, 1339, 1341, 1342, 1350, 1351, 1352, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1381, 1383], "stream": [0, 5, 13, 27, 28, 77, 106, 385, 386, 600, 603, 609, 620, 642, 643, 696, 725, 1038, 1039, 1221, 1250], "cfradial": [0, 5, 13, 27, 28, 32, 385, 386, 603, 609, 620, 642, 643, 647, 1038, 1039, 1339, 1344, 1354, 1355, 1369, 1371, 1372, 1383, 1392, 1394], "get": [1, 25, 40, 148, 149, 150, 153, 164, 241, 242, 243, 264, 385, 402, 411, 439, 517, 520, 530, 536, 566, 567, 568, 570, 578, 579, 580, 581, 605, 639, 658, 797, 798, 799, 803, 815, 891, 892, 893, 914, 1038, 1056, 1066, 1076, 1080, 1168, 1171, 1181, 1187, 1304, 1305, 1306, 1308, 1316, 1317, 1318, 1319, 1339, 1347, 1366, 1367, 1376, 1383, 1385, 1388, 1391, 1393, 1395, 1396, 1397, 1398], "each": [1, 2, 3, 9, 11, 22, 32, 46, 54, 56, 60, 70, 89, 99, 127, 128, 129, 131, 139, 140, 141, 142, 143, 144, 147, 155, 156, 157, 165, 223, 230, 234, 235, 236, 250, 256, 258, 268, 270, 272, 290, 297, 301, 302, 323, 333, 334, 338, 339, 360, 370, 371, 375, 376, 395, 399, 401, 456, 493, 499, 501, 502, 512, 519, 520, 523, 530, 531, 532, 534, 536, 537, 566, 567, 568, 571, 578, 579, 580, 581, 605, 606, 607, 613, 618, 631, 647, 665, 673, 675, 679, 689, 708, 718, 775, 776, 777, 779, 787, 788, 789, 790, 791, 792, 796, 806, 807, 808, 816, 873, 880, 884, 885, 886, 900, 906, 908, 918, 920, 922, 940, 947, 951, 952, 973, 983, 984, 988, 989, 1010, 1020, 1021, 1025, 1026, 1048, 1052, 1054, 1080, 1087, 1090, 1091, 1092, 1093, 1107, 1144, 1150, 1152, 1153, 1163, 1170, 1171, 1174, 1181, 1182, 1183, 1185, 1187, 1189, 1192, 1200, 1204, 1214, 1233, 1243, 1265, 1266, 1267, 1304, 1305, 1306, 1309, 1316, 1317, 1318, 1319, 1346, 1351, 1366, 1369, 1376, 1388, 1393, 1396], "assum": [1, 3, 9, 60, 89, 118, 119, 138, 141, 142, 143, 144, 155, 156, 157, 472, 473, 500, 513, 516, 521, 526, 528, 529, 559, 605, 607, 613, 679, 708, 737, 738, 786, 789, 790, 791, 792, 806, 807, 808, 1123, 1124, 1151, 1164, 1167, 1172, 1177, 1179, 1180, 1204, 1233, 1297, 1392], "clockwis": [1, 60, 89, 605, 679, 708, 1204, 1233], "rotat": [1, 60, 89, 206, 605, 679, 708, 856, 1204, 1233], "north": [1, 56, 60, 89, 252, 253, 265, 334, 371, 565, 605, 675, 679, 708, 902, 903, 915, 984, 1021, 1204, 1233, 1303, 1359, 1392, 1393], "tstart": [1, 605], "tend": [1, 605, 1391], "arrai": [1, 8, 14, 16, 26, 46, 48, 54, 56, 57, 62, 66, 67, 69, 70, 71, 72, 73, 91, 95, 96, 98, 99, 100, 101, 102, 118, 119, 120, 121, 122, 123, 124, 125, 126, 138, 139, 140, 146, 147, 158, 161, 164, 165, 170, 174, 176, 183, 190, 195, 206, 212, 223, 224, 225, 230, 234, 235, 236, 237, 248, 250, 252, 253, 254, 256, 258, 265, 266, 268, 270, 272, 273, 279, 290, 291, 292, 297, 301, 302, 303, 306, 312, 323, 324, 325, 330, 331, 333, 334, 338, 339, 340, 343, 349, 360, 361, 362, 367, 368, 370, 371, 375, 376, 377, 442, 443, 444, 456, 466, 498, 499, 502, 514, 520, 523, 527, 528, 529, 534, 536, 537, 538, 540, 541, 542, 543, 544, 548, 550, 551, 557, 558, 560, 561, 566, 567, 568, 570, 571, 575, 576, 578, 579, 580, 581, 584, 585, 586, 588, 602, 605, 612, 615, 616, 621, 625, 632, 633, 640, 665, 667, 673, 675, 676, 681, 685, 686, 688, 689, 690, 691, 692, 710, 714, 715, 717, 718, 719, 720, 721, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 751, 753, 760, 767, 772, 786, 787, 788, 794, 795, 796, 804, 809, 812, 815, 816, 819, 823, 825, 832, 839, 844, 856, 862, 873, 874, 875, 880, 884, 885, 886, 887, 898, 900, 902, 903, 904, 906, 908, 915, 916, 918, 920, 922, 923, 929, 940, 941, 942, 947, 951, 952, 953, 956, 962, 973, 974, 975, 980, 981, 983, 984, 988, 989, 990, 993, 999, 1010, 1011, 1012, 1017, 1018, 1020, 1021, 1025, 1026, 1027, 1031, 1080, 1091, 1092, 1093, 1095, 1107, 1117, 1149, 1150, 1153, 1165, 1171, 1174, 1178, 1179, 1180, 1185, 1187, 1189, 1190, 1192, 1194, 1200, 1206, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1235, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1278, 1279, 1280, 1281, 1282, 1286, 1288, 1289, 1295, 1296, 1298, 1299, 1304, 1305, 1306, 1308, 1309, 1313, 1314, 1316, 1317, 1318, 1319, 1322, 1323, 1324, 1326, 1350, 1363, 1376, 1378, 1383, 1384, 1385, 1387, 1388, 1390, 1392, 1393, 1396], "sweep_start": [1, 605], "sweep_end": [1, 605], "indic": [1, 37, 46, 60, 84, 87, 88, 89, 113, 116, 117, 152, 155, 156, 170, 174, 183, 195, 250, 395, 501, 526, 527, 528, 533, 537, 538, 561, 562, 564, 605, 654, 665, 679, 703, 706, 707, 708, 732, 735, 736, 747, 751, 760, 772, 795, 802, 806, 807, 819, 823, 832, 844, 900, 1031, 1048, 1152, 1177, 1178, 1179, 1184, 1189, 1190, 1192, 1204, 1228, 1231, 1232, 1233, 1257, 1260, 1261, 1299, 1300, 1302, 1346, 1363, 1391, 1392], "chy0": [2, 4, 6, 7, 11, 606, 608, 610, 611, 618], "255": [2, 4, 6, 11, 399, 606, 608, 610, 618, 1052, 1390], "0": [2, 3, 4, 6, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 30, 31, 40, 48, 60, 65, 66, 67, 69, 70, 71, 72, 73, 89, 94, 95, 96, 98, 99, 100, 101, 102, 122, 125, 127, 128, 130, 131, 132, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 159, 160, 163, 170, 195, 198, 200, 201, 202, 203, 204, 205, 206, 222, 223, 230, 233, 234, 235, 236, 237, 238, 252, 253, 254, 268, 273, 289, 290, 297, 300, 301, 302, 303, 304, 306, 322, 323, 332, 333, 334, 337, 338, 339, 340, 341, 343, 359, 360, 369, 370, 371, 374, 375, 376, 377, 378, 395, 399, 442, 445, 447, 452, 456, 458, 460, 461, 465, 468, 469, 470, 472, 473, 478, 479, 480, 485, 492, 493, 494, 495, 497, 498, 501, 502, 504, 506, 507, 508, 510, 511, 512, 514, 516, 519, 522, 523, 524, 526, 527, 530, 531, 532, 533, 534, 535, 536, 538, 545, 546, 549, 559, 561, 566, 567, 568, 573, 574, 577, 582, 606, 607, 608, 610, 613, 618, 621, 625, 627, 628, 629, 631, 638, 639, 645, 646, 658, 667, 679, 684, 685, 686, 688, 689, 690, 691, 692, 708, 713, 714, 715, 717, 718, 719, 720, 721, 741, 744, 747, 772, 775, 776, 778, 779, 780, 782, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 806, 807, 808, 810, 811, 814, 819, 844, 847, 849, 850, 851, 852, 853, 854, 856, 872, 873, 880, 883, 884, 885, 886, 887, 888, 902, 903, 904, 918, 923, 939, 940, 947, 950, 951, 952, 953, 954, 956, 972, 973, 982, 983, 984, 987, 988, 989, 990, 991, 993, 1009, 1010, 1019, 1020, 1021, 1024, 1025, 1026, 1027, 1028, 1048, 1052, 1080, 1088, 1089, 1091, 1092, 1093, 1096, 1098, 1103, 1107, 1109, 1111, 1112, 1116, 1119, 1120, 1121, 1123, 1124, 1129, 1130, 1131, 1136, 1143, 1144, 1145, 1146, 1148, 1149, 1152, 1153, 1155, 1157, 1158, 1159, 1161, 1162, 1163, 1165, 1167, 1170, 1173, 1174, 1175, 1177, 1178, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1190, 1194, 1204, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1233, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1268, 1283, 1284, 1287, 1297, 1299, 1304, 1305, 1306, 1311, 1312, 1315, 1320, 1341, 1342, 1343, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396], "chx0": [2, 4, 6, 7, 11, 606, 608, 610, 611, 618], "160": [2, 4, 6, 11, 606, 608, 610, 618, 1378, 1387, 1390, 1391], "xre": [2, 3, 9, 11, 22, 606, 607, 613, 618, 631, 1389], "1": [2, 3, 5, 6, 7, 9, 11, 14, 18, 19, 20, 22, 26, 30, 31, 46, 60, 70, 89, 99, 118, 122, 125, 130, 131, 136, 137, 138, 140, 148, 149, 150, 151, 152, 153, 164, 183, 198, 237, 253, 273, 303, 340, 377, 385, 391, 392, 393, 398, 444, 451, 452, 456, 461, 463, 465, 469, 470, 473, 479, 480, 485, 492, 493, 497, 498, 500, 502, 504, 512, 514, 516, 517, 523, 526, 528, 530, 532, 534, 537, 538, 545, 546, 547, 549, 559, 560, 561, 567, 574, 580, 581, 588, 606, 607, 609, 610, 611, 613, 618, 621, 627, 628, 629, 631, 640, 645, 646, 665, 679, 689, 708, 718, 737, 741, 744, 760, 778, 779, 784, 785, 786, 788, 797, 798, 799, 801, 802, 803, 815, 832, 847, 887, 903, 923, 953, 990, 1027, 1038, 1044, 1045, 1046, 1051, 1091, 1092, 1093, 1095, 1102, 1103, 1107, 1112, 1114, 1116, 1120, 1121, 1124, 1130, 1131, 1136, 1143, 1144, 1148, 1149, 1151, 1153, 1155, 1163, 1165, 1167, 1168, 1174, 1177, 1179, 1181, 1183, 1185, 1189, 1190, 1192, 1204, 1214, 1233, 1243, 1268, 1283, 1284, 1285, 1287, 1297, 1298, 1299, 1305, 1312, 1318, 1319, 1326, 1338, 1341, 1342, 1346, 1350, 1351, 1352, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1396], "yre": [2, 3, 9, 11, 22, 606, 607, 613, 618, 631, 1389], "nx": [2, 3, 9, 11, 22, 46, 606, 607, 613, 618, 631, 665, 1192, 1391], "710": [2, 11, 606, 618], "ny": [2, 3, 9, 11, 22, 46, 606, 607, 613, 618, 631, 665, 1192, 1391], "640": [2, 11, 606, 618], "nz": [2, 3, 9, 11, 22, 46, 606, 607, 613, 618, 631, 665, 1192, 1391], "meteoswiss": [2, 11, 30, 31, 606, 618, 645, 646, 1339, 1377, 1378, 1382, 1391, 1392, 1395, 1396], "oper": [2, 3, 9, 11, 136, 137, 174, 176, 183, 190, 195, 395, 514, 528, 535, 606, 607, 613, 618, 751, 753, 760, 767, 772, 784, 785, 823, 825, 832, 839, 844, 1048, 1087, 1090, 1093, 1165, 1179, 1186, 1376, 1391, 1392, 1395], "binari": [2, 3, 9, 18, 19, 20, 30, 31, 33, 381, 514, 606, 607, 613, 627, 628, 629, 645, 646, 648, 1034, 1165, 1390], "retriev": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 36, 38, 46, 66, 67, 69, 70, 71, 72, 73, 95, 96, 98, 99, 100, 101, 102, 136, 137, 149, 165, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 545, 546, 561, 569, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 653, 655, 665, 685, 686, 688, 689, 690, 691, 692, 714, 715, 717, 718, 719, 720, 721, 784, 785, 798, 804, 816, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1192, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1283, 1284, 1299, 1307, 1339, 1375, 1376, 1377, 1378, 1379, 1382, 1385, 1389, 1391, 1394, 1396], "metadata": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 38, 44, 45, 46, 47, 60, 61, 62, 89, 90, 91, 127, 128, 129, 138, 139, 140, 142, 143, 144, 145, 151, 152, 155, 156, 157, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 400, 445, 447, 453, 472, 473, 480, 494, 497, 501, 516, 524, 525, 526, 527, 528, 529, 530, 531, 532, 589, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 645, 646, 648, 650, 652, 653, 655, 662, 663, 665, 666, 679, 680, 681, 708, 709, 710, 775, 776, 777, 786, 787, 788, 790, 791, 792, 793, 801, 802, 806, 807, 808, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1096, 1098, 1104, 1123, 1124, 1131, 1145, 1148, 1152, 1167, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1188, 1192, 1193, 1204, 1205, 1206, 1233, 1234, 1235, 1262, 1264, 1270, 1327, 1347, 1364, 1365, 1369, 1393], "dure": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 35, 133, 138, 139, 140, 183, 195, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 498, 526, 535, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 652, 760, 772, 781, 786, 787, 788, 832, 844, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1149, 1177, 1186, 1391, 1392, 1395, 1398], "ani": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 33, 45, 61, 62, 90, 91, 127, 128, 129, 138, 139, 140, 141, 151, 152, 170, 174, 176, 183, 190, 195, 198, 201, 202, 306, 343, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 447, 499, 523, 530, 531, 595, 606, 607, 608, 609, 610, 611, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 643, 644, 645, 646, 648, 663, 680, 681, 709, 710, 747, 751, 753, 760, 767, 772, 775, 776, 777, 786, 787, 788, 789, 800, 801, 802, 819, 823, 825, 832, 839, 844, 847, 850, 851, 956, 993, 1031, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1088, 1089, 1093, 1098, 1150, 1174, 1181, 1182, 1205, 1206, 1234, 1235, 1264, 1333, 1383, 1390], "success": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049], "unless": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 73, 102, 121, 123, 124, 140, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 400, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 692, 721, 740, 742, 743, 788, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1217, 1246], "explicitli": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1088, 1089], "A": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 35, 46, 60, 62, 89, 91, 122, 125, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 151, 152, 155, 156, 157, 159, 160, 169, 170, 198, 199, 200, 201, 202, 203, 204, 205, 206, 240, 253, 259, 273, 306, 332, 343, 369, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 402, 446, 447, 451, 452, 461, 469, 497, 498, 499, 500, 501, 503, 512, 514, 516, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 535, 537, 538, 572, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 650, 652, 665, 679, 681, 708, 710, 741, 744, 747, 775, 776, 777, 778, 779, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 796, 800, 801, 802, 806, 807, 808, 810, 811, 819, 847, 848, 849, 850, 851, 852, 853, 854, 856, 890, 903, 909, 923, 956, 982, 993, 1019, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1055, 1056, 1069, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1102, 1103, 1112, 1120, 1148, 1149, 1150, 1151, 1152, 1154, 1163, 1165, 1167, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1186, 1188, 1189, 1190, 1192, 1204, 1206, 1233, 1235, 1268, 1310, 1358, 1376, 1380, 1381, 1390, 1392, 1396], "default": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 34, 41, 45, 46, 60, 66, 67, 69, 71, 72, 77, 89, 95, 96, 98, 100, 101, 106, 121, 122, 123, 124, 125, 127, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 152, 155, 156, 157, 159, 160, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 230, 233, 234, 235, 236, 237, 239, 248, 250, 252, 253, 254, 256, 258, 265, 266, 268, 270, 272, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 297, 300, 301, 302, 303, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 333, 334, 337, 338, 339, 340, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 370, 371, 374, 375, 376, 377, 379, 382, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 408, 415, 432, 445, 447, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 471, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 496, 497, 498, 499, 500, 501, 504, 507, 508, 514, 515, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 537, 539, 547, 549, 559, 560, 561, 589, 606, 607, 608, 612, 613, 617, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 645, 646, 648, 650, 659, 663, 665, 679, 685, 686, 688, 690, 691, 696, 708, 714, 715, 717, 719, 720, 725, 740, 741, 742, 743, 744, 747, 751, 753, 760, 767, 772, 775, 776, 777, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 796, 798, 800, 801, 802, 806, 807, 808, 810, 811, 819, 823, 825, 832, 839, 844, 847, 848, 849, 850, 851, 852, 853, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 875, 880, 883, 884, 885, 886, 887, 889, 898, 900, 902, 903, 904, 906, 908, 915, 916, 918, 920, 922, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 947, 950, 951, 952, 953, 955, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 974, 975, 983, 984, 987, 988, 989, 990, 992, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1029, 1031, 1035, 1038, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1059, 1071, 1093, 1096, 1098, 1099, 1100, 1101, 1102, 1108, 1109, 1110, 1111, 1115, 1116, 1118, 1119, 1122, 1126, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1155, 1158, 1159, 1165, 1166, 1167, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1186, 1188, 1189, 1192, 1204, 1210, 1211, 1213, 1215, 1216, 1221, 1233, 1239, 1240, 1242, 1244, 1245, 1250, 1265, 1266, 1267, 1285, 1287, 1297, 1298, 1299, 1327, 1366, 1367, 1376, 1381, 1392, 1395, 1396, 1398], "introduct": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 29, 382, 387, 389, 390, 391, 392, 393, 394, 395, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 641, 644, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1396], "addit": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 35, 138, 139, 140, 146, 222, 223, 230, 234, 235, 236, 237, 249, 250, 252, 253, 254, 255, 256, 257, 258, 268, 269, 270, 271, 272, 289, 290, 297, 301, 302, 303, 322, 323, 330, 331, 332, 333, 334, 335, 338, 339, 340, 359, 360, 367, 368, 369, 370, 371, 372, 375, 376, 377, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 470, 471, 498, 514, 572, 601, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 652, 786, 787, 788, 794, 872, 873, 880, 884, 885, 886, 887, 899, 900, 902, 903, 904, 905, 906, 907, 908, 918, 919, 920, 921, 922, 939, 940, 947, 951, 952, 953, 972, 973, 980, 981, 982, 983, 984, 985, 988, 989, 990, 1009, 1010, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1030, 1031, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1080, 1087, 1088, 1089, 1090, 1093, 1121, 1122, 1149, 1165, 1310, 1344, 1346, 1373, 1376, 1381], "specif": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 127, 128, 129, 144, 145, 152, 155, 156, 157, 183, 195, 343, 371, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 499, 503, 504, 505, 507, 508, 515, 516, 523, 524, 525, 526, 527, 528, 572, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 760, 772, 775, 776, 777, 792, 793, 802, 806, 807, 808, 832, 844, 993, 1021, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1093, 1150, 1154, 1155, 1156, 1158, 1159, 1166, 1167, 1174, 1175, 1176, 1177, 1178, 1179, 1310, 1341, 1355, 1376, 1381, 1392, 1396, 1398], "py": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 34, 45, 46, 60, 89, 121, 123, 124, 127, 128, 129, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 159, 160, 170, 198, 199, 200, 201, 202, 203, 204, 205, 223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 306, 323, 325, 333, 334, 338, 339, 340, 343, 360, 362, 370, 371, 375, 376, 377, 387, 388, 389, 390, 394, 396, 399, 445, 446, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 497, 498, 499, 500, 501, 514, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 564, 565, 589, 600, 601, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 645, 646, 649, 650, 651, 663, 664, 665, 679, 708, 740, 742, 743, 747, 775, 776, 777, 782, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 800, 801, 802, 806, 807, 808, 810, 811, 817, 819, 847, 848, 849, 850, 851, 852, 853, 854, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 956, 973, 975, 983, 984, 988, 989, 990, 993, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1031, 1040, 1041, 1042, 1043, 1047, 1049, 1052, 1079, 1096, 1097, 1099, 1100, 1101, 1102, 1108, 1109, 1110, 1111, 1115, 1116, 1118, 1119, 1126, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1147, 1148, 1149, 1150, 1151, 1152, 1165, 1167, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1186, 1188, 1192, 1204, 1233, 1268, 1277, 1302, 1303, 1327, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1378, 1379, 1382, 1383, 1384, 1385, 1387, 1389, 1391, 1392, 1394, 1395, 1398], "art": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 34, 45, 46, 60, 89, 121, 123, 124, 127, 128, 129, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 159, 160, 170, 198, 199, 200, 201, 202, 203, 204, 205, 223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 306, 323, 325, 333, 334, 338, 339, 340, 343, 360, 362, 370, 371, 375, 376, 377, 387, 388, 389, 390, 394, 396, 399, 445, 446, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 497, 498, 499, 500, 501, 514, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 564, 565, 589, 601, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 645, 646, 649, 650, 651, 663, 664, 665, 679, 708, 740, 742, 743, 747, 775, 776, 777, 782, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 800, 801, 802, 806, 807, 808, 810, 811, 817, 819, 847, 848, 849, 850, 851, 852, 853, 854, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 956, 973, 975, 983, 984, 988, 989, 990, 993, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1031, 1040, 1041, 1042, 1043, 1047, 1049, 1052, 1079, 1096, 1097, 1099, 1100, 1101, 1102, 1108, 1109, 1110, 1111, 1115, 1116, 1118, 1119, 1126, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1147, 1148, 1149, 1150, 1151, 1152, 1165, 1167, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1186, 1188, 1192, 1204, 1233, 1268, 1277, 1302, 1303, 1327, 1338, 1339, 1341, 1342, 1344, 1345, 1346, 1347, 1354, 1355, 1357, 1374, 1382, 1383, 1384, 1385, 1387, 1389, 1391, 1392, 1395, 1398], "configur": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 39, 40, 42, 45, 127, 128, 129, 134, 138, 139, 140, 142, 143, 144, 145, 147, 151, 152, 155, 156, 157, 159, 160, 198, 199, 200, 201, 202, 203, 204, 205, 223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 445, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 498, 499, 500, 501, 514, 516, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 589, 606, 607, 608, 612, 613, 618, 619, 621, 623, 625, 626, 627, 628, 629, 631, 638, 639, 640, 641, 644, 650, 651, 657, 658, 660, 663, 775, 776, 777, 782, 786, 787, 788, 790, 791, 792, 793, 796, 800, 801, 802, 806, 807, 808, 810, 811, 847, 848, 849, 850, 851, 852, 853, 854, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1096, 1099, 1100, 1101, 1102, 1108, 1109, 1110, 1111, 1115, 1116, 1118, 1119, 1126, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1147, 1149, 1150, 1151, 1152, 1165, 1167, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1186, 1188, 1327, 1346, 1350, 1375, 1392, 1396], "float": [2, 3, 4, 6, 7, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 40, 73, 102, 118, 119, 120, 122, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 198, 200, 201, 202, 203, 204, 205, 206, 207, 223, 225, 226, 230, 231, 233, 234, 235, 236, 237, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 265, 267, 268, 269, 270, 271, 272, 273, 274, 290, 292, 293, 297, 298, 300, 301, 302, 303, 306, 307, 323, 325, 326, 332, 333, 334, 335, 337, 338, 339, 340, 343, 344, 360, 362, 363, 369, 370, 371, 372, 374, 375, 376, 377, 399, 442, 444, 445, 446, 452, 453, 456, 458, 461, 466, 468, 469, 470, 472, 473, 479, 480, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 574, 575, 576, 577, 578, 582, 590, 591, 592, 602, 606, 607, 608, 610, 611, 613, 618, 621, 625, 627, 628, 629, 631, 638, 639, 640, 644, 645, 646, 658, 692, 721, 737, 738, 739, 741, 744, 751, 775, 776, 777, 778, 779, 780, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 823, 847, 849, 850, 851, 852, 853, 854, 856, 857, 873, 875, 876, 880, 881, 883, 884, 885, 886, 887, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 915, 917, 918, 919, 920, 921, 922, 923, 924, 940, 942, 943, 947, 948, 950, 951, 952, 953, 956, 957, 973, 975, 976, 982, 983, 984, 985, 987, 988, 989, 990, 993, 994, 1010, 1012, 1013, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1030, 1031, 1052, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1095, 1096, 1097, 1103, 1104, 1107, 1109, 1112, 1117, 1119, 1120, 1121, 1123, 1124, 1130, 1131, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1217, 1246, 1264, 1268, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1291, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1320, 1328, 1329, 1330, 1339, 1391], "swiss": [2, 4, 6, 7, 11, 126, 606, 608, 610, 611, 618, 745, 1382], "coordin": [2, 3, 4, 6, 7, 9, 11, 22, 46, 48, 54, 60, 71, 89, 100, 118, 119, 120, 121, 122, 123, 124, 125, 126, 163, 212, 223, 230, 234, 235, 236, 237, 250, 256, 258, 268, 270, 272, 279, 290, 297, 301, 302, 303, 312, 323, 333, 334, 338, 339, 340, 349, 360, 370, 371, 375, 376, 377, 398, 493, 501, 516, 544, 571, 606, 607, 608, 610, 611, 613, 618, 631, 665, 667, 673, 679, 690, 708, 719, 737, 738, 739, 740, 741, 742, 743, 744, 745, 814, 862, 873, 880, 884, 885, 886, 887, 900, 906, 908, 918, 920, 922, 929, 940, 947, 951, 952, 953, 962, 973, 983, 984, 988, 989, 990, 999, 1010, 1020, 1021, 1025, 1026, 1027, 1031, 1051, 1079, 1080, 1082, 1087, 1090, 1093, 1144, 1152, 1167, 1192, 1194, 1200, 1204, 1215, 1233, 1244, 1264, 1282, 1309, 1339, 1340, 1344, 1347, 1349, 1350, 1351, 1352, 1374, 1381, 1387, 1393], "posit": [2, 4, 6, 7, 11, 25, 26, 60, 89, 122, 125, 128, 129, 138, 148, 149, 150, 154, 162, 163, 165, 447, 471, 473, 480, 500, 501, 512, 526, 530, 531, 532, 537, 538, 545, 546, 606, 608, 610, 611, 618, 639, 640, 679, 708, 741, 744, 776, 777, 786, 797, 798, 799, 804, 805, 813, 814, 816, 1031, 1098, 1122, 1124, 1131, 1151, 1152, 1163, 1177, 1181, 1182, 1183, 1189, 1190, 1204, 1233, 1283, 1284, 1350, 1355, 1357, 1391, 1392, 1393], "south": [2, 4, 6, 7, 11, 606, 608, 610, 611, 618, 1359, 1391], "western": [2, 4, 6, 7, 11, 606, 608, 610, 611, 618], "point": [2, 3, 4, 6, 7, 9, 11, 22, 45, 46, 48, 62, 91, 123, 127, 128, 129, 143, 144, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 212, 226, 231, 237, 249, 250, 251, 267, 279, 293, 298, 303, 306, 312, 326, 331, 332, 335, 340, 349, 363, 368, 369, 372, 377, 389, 390, 393, 395, 399, 443, 452, 461, 469, 472, 473, 479, 480, 492, 495, 498, 512, 514, 530, 535, 547, 549, 560, 561, 565, 567, 577, 580, 595, 606, 607, 608, 610, 611, 613, 618, 631, 663, 665, 667, 681, 710, 742, 775, 776, 777, 791, 792, 796, 797, 798, 799, 801, 802, 805, 806, 807, 808, 809, 862, 876, 881, 887, 899, 900, 901, 917, 929, 943, 948, 953, 956, 962, 976, 981, 982, 985, 990, 999, 1013, 1018, 1019, 1022, 1027, 1042, 1043, 1046, 1048, 1052, 1087, 1090, 1091, 1092, 1093, 1103, 1112, 1120, 1123, 1124, 1130, 1131, 1143, 1146, 1149, 1163, 1165, 1181, 1186, 1192, 1194, 1206, 1235, 1264, 1285, 1287, 1298, 1299, 1303, 1305, 1315, 1318, 1333, 1339, 1344, 1356, 1363, 1373, 1376, 1379, 1381, 1385, 1387, 1391, 1392, 1393, 1394], "grid": [2, 3, 4, 6, 7, 9, 11, 12, 18, 22, 30, 40, 60, 89, 225, 227, 235, 237, 240, 244, 249, 251, 252, 253, 254, 255, 257, 259, 260, 265, 267, 268, 269, 271, 292, 294, 303, 325, 327, 334, 340, 362, 364, 377, 388, 389, 398, 399, 400, 461, 469, 479, 492, 495, 497, 498, 514, 516, 521, 522, 535, 555, 571, 573, 591, 592, 606, 607, 608, 610, 611, 613, 618, 619, 623, 627, 631, 645, 658, 679, 708, 875, 877, 885, 887, 890, 894, 899, 901, 902, 903, 904, 905, 907, 909, 910, 915, 917, 918, 919, 921, 942, 944, 953, 975, 977, 984, 990, 1012, 1014, 1027, 1031, 1041, 1042, 1051, 1052, 1053, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1112, 1120, 1130, 1143, 1146, 1148, 1149, 1165, 1167, 1172, 1173, 1186, 1204, 1233, 1264, 1268, 1269, 1271, 1272, 1293, 1309, 1311, 1329, 1330, 1339, 1344, 1349, 1353, 1354, 1357, 1367, 1370, 1372, 1376, 1381, 1382, 1390, 1391, 1392, 1394], "resolut": [2, 3, 9, 11, 22, 60, 89, 130, 131, 136, 137, 223, 225, 226, 230, 231, 234, 235, 236, 237, 253, 265, 290, 292, 293, 297, 298, 301, 302, 303, 323, 325, 326, 333, 334, 335, 338, 339, 340, 360, 362, 363, 370, 371, 372, 375, 376, 377, 391, 443, 452, 461, 469, 479, 492, 495, 497, 498, 514, 516, 520, 526, 532, 535, 561, 606, 607, 613, 618, 631, 679, 708, 778, 779, 784, 785, 873, 875, 876, 880, 881, 884, 885, 886, 887, 903, 915, 940, 942, 943, 947, 948, 951, 952, 953, 973, 975, 976, 983, 984, 985, 988, 989, 990, 1010, 1012, 1013, 1020, 1021, 1022, 1025, 1026, 1027, 1044, 1093, 1103, 1112, 1120, 1130, 1143, 1146, 1148, 1149, 1165, 1167, 1171, 1177, 1183, 1186, 1204, 1233, 1268, 1299, 1347, 1360, 1363, 1385, 1387, 1388, 1390, 1391, 1392], "km": [2, 3, 9, 11, 22, 118, 122, 125, 206, 226, 231, 232, 239, 273, 293, 298, 299, 305, 306, 326, 335, 336, 342, 343, 363, 371, 372, 373, 379, 444, 453, 466, 494, 497, 498, 499, 514, 516, 519, 520, 523, 526, 561, 563, 590, 606, 607, 613, 618, 631, 737, 741, 744, 856, 876, 881, 882, 889, 923, 943, 948, 949, 955, 956, 976, 985, 986, 992, 993, 1013, 1021, 1022, 1023, 1029, 1031, 1089, 1095, 1104, 1117, 1145, 1148, 1149, 1150, 1165, 1167, 1170, 1171, 1174, 1177, 1268, 1299, 1301, 1328, 1359, 1364, 1365, 1367, 1374, 1387, 1389, 1391, 1392], "int": [2, 3, 9, 11, 14, 16, 22, 26, 40, 46, 48, 60, 66, 67, 69, 70, 71, 72, 73, 89, 95, 96, 98, 99, 100, 101, 102, 129, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 155, 156, 157, 159, 160, 165, 183, 195, 199, 201, 208, 209, 210, 222, 226, 230, 231, 233, 234, 235, 237, 244, 245, 246, 247, 252, 253, 254, 260, 261, 262, 263, 265, 268, 275, 276, 277, 289, 293, 297, 298, 300, 301, 303, 308, 309, 310, 322, 326, 333, 334, 335, 337, 338, 340, 345, 346, 347, 359, 363, 370, 371, 372, 374, 375, 377, 399, 446, 451, 452, 456, 460, 461, 465, 466, 467, 468, 469, 470, 471, 478, 479, 484, 485, 487, 488, 492, 498, 499, 502, 512, 514, 516, 524, 525, 526, 528, 530, 532, 534, 536, 537, 538, 544, 547, 549, 560, 561, 562, 564, 566, 571, 594, 602, 606, 607, 613, 618, 621, 625, 631, 640, 658, 665, 667, 679, 685, 686, 688, 689, 690, 691, 692, 708, 714, 715, 717, 718, 719, 720, 721, 760, 772, 777, 782, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 801, 802, 804, 806, 807, 808, 810, 811, 816, 832, 844, 848, 850, 858, 859, 860, 872, 876, 880, 881, 883, 884, 885, 887, 894, 895, 896, 897, 902, 903, 904, 910, 911, 912, 913, 915, 918, 925, 926, 927, 939, 943, 947, 948, 950, 951, 953, 958, 959, 960, 972, 976, 983, 984, 985, 987, 988, 990, 995, 996, 997, 1009, 1013, 1020, 1021, 1022, 1024, 1025, 1027, 1031, 1052, 1088, 1089, 1093, 1097, 1102, 1103, 1107, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1129, 1130, 1135, 1136, 1138, 1139, 1143, 1149, 1150, 1153, 1163, 1165, 1167, 1175, 1176, 1177, 1179, 1181, 1183, 1185, 1187, 1189, 1190, 1192, 1194, 1204, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1233, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1265, 1266, 1267, 1268, 1282, 1285, 1287, 1298, 1299, 1300, 1302, 1304, 1309, 1332, 1339, 1391, 1396], "dimens": [2, 3, 9, 11, 22, 46, 89, 138, 389, 447, 498, 514, 515, 521, 526, 528, 535, 571, 591, 592, 606, 607, 613, 618, 631, 665, 708, 786, 1031, 1042, 1088, 1089, 1093, 1098, 1149, 1165, 1166, 1172, 1177, 1179, 1186, 1192, 1233, 1309, 1329, 1330, 1374, 1376, 1383, 1387, 1389, 1391, 1393], "1536": [3, 9, 607, 613], "dtype": [3, 8, 170, 607, 612, 747, 819, 1087, 1090, 1093, 1339, 1383, 1385, 1393], "float32": [3, 16, 26, 400, 607, 625, 640, 1053, 1339, 1374, 1383, 1385, 1393], "date_format": [3, 9, 22, 607, 613, 631], "added_tim": [3, 9, 22, 607, 613, 631], "86400": [3, 607], "x_offset": [3, 9, 22, 607, 613, 631], "619652": [3, 9, 607, 613], "074056": [3, 9, 607, 613], "y_offset": [3, 9, 22, 607, 613, 631], "3526818": [3, 9, 607, 613], "337932": [3, 9, 607, 613], "lat_0": [3, 9, 22, 46, 60, 89, 122, 125, 334, 371, 607, 613, 631, 665, 679, 708, 741, 744, 984, 1021, 1192, 1204, 1233, 1363, 1392], "90": [3, 9, 513, 577, 607, 613, 1164, 1315, 1396], "lon_0": [3, 9, 22, 46, 60, 89, 122, 125, 334, 371, 607, 613, 631, 665, 679, 708, 741, 744, 984, 1021, 1192, 1204, 1233, 1363, 1392], "proj": [3, 22, 46, 60, 89, 121, 123, 124, 265, 343, 607, 631, 665, 679, 708, 740, 742, 743, 915, 993, 1192, 1204, 1233], "gnom": [3, 607], "rainfall_accumul": [3, 607], "meteofr": [3, 9, 12, 22, 607, 613, 619, 631, 1381], "stereopolar": [3, 9, 607, 613], "project": [3, 9, 21, 22, 46, 49, 60, 89, 121, 122, 123, 124, 125, 228, 240, 252, 253, 254, 265, 295, 306, 328, 334, 365, 371, 389, 398, 399, 461, 469, 479, 492, 495, 513, 607, 613, 630, 631, 649, 665, 668, 679, 708, 740, 741, 742, 743, 744, 878, 890, 902, 903, 904, 915, 945, 956, 978, 984, 1015, 1021, 1031, 1042, 1051, 1052, 1093, 1112, 1120, 1130, 1143, 1146, 1164, 1192, 1195, 1204, 1233, 1346, 1347, 1350, 1356, 1357, 1363, 1370, 1374, 1376, 1381, 1384, 1385, 1387, 1388, 1391, 1392, 1395], "type": [3, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 35, 41, 60, 89, 139, 140, 155, 156, 157, 158, 206, 273, 306, 343, 382, 387, 389, 390, 391, 392, 394, 395, 396, 400, 401, 442, 456, 461, 469, 479, 492, 495, 497, 502, 504, 523, 526, 536, 547, 549, 559, 607, 612, 621, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 644, 645, 646, 652, 659, 679, 708, 787, 788, 806, 807, 808, 809, 856, 923, 956, 993, 1035, 1040, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1053, 1054, 1107, 1112, 1120, 1130, 1143, 1146, 1148, 1153, 1155, 1174, 1177, 1187, 1204, 1233, 1285, 1287, 1297, 1390, 1392, 1393, 1396], "date": [3, 9, 22, 383, 384, 607, 613, 631, 1036, 1037, 1338, 1346, 1347], "second": [3, 9, 22, 56, 57, 58, 59, 62, 73, 91, 102, 118, 138, 395, 402, 512, 528, 537, 539, 559, 585, 586, 607, 613, 631, 675, 676, 677, 678, 681, 692, 710, 721, 737, 786, 1048, 1056, 1080, 1163, 1179, 1189, 1206, 1217, 1235, 1246, 1297, 1323, 1324, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1388, 1390, 1393, 1396], "nomin": [3, 9, 14, 22, 24, 25, 607, 613, 621, 631, 638, 639], "24h": [3, 9, 607, 613], "accumul": [3, 9, 530, 607, 613, 1181, 1339, 1376], "mf": [3, 9, 148, 149, 150, 607, 613, 797, 798, 799], "x": [3, 9, 21, 22, 46, 52, 54, 72, 80, 89, 101, 109, 118, 119, 120, 121, 122, 123, 124, 125, 206, 212, 216, 223, 225, 228, 230, 233, 234, 235, 236, 237, 239, 250, 252, 256, 258, 268, 270, 272, 273, 279, 283, 290, 292, 295, 297, 300, 301, 302, 303, 305, 306, 312, 316, 323, 325, 328, 331, 333, 337, 338, 339, 340, 342, 343, 349, 353, 360, 362, 365, 368, 370, 374, 375, 376, 377, 379, 456, 498, 503, 514, 518, 521, 522, 526, 527, 528, 535, 536, 571, 607, 613, 630, 631, 665, 671, 673, 691, 699, 708, 720, 728, 737, 738, 739, 740, 741, 742, 743, 744, 856, 862, 866, 873, 875, 878, 880, 883, 884, 885, 886, 887, 889, 900, 902, 906, 908, 918, 920, 922, 923, 929, 933, 940, 942, 945, 947, 950, 951, 952, 953, 955, 956, 962, 966, 973, 975, 978, 981, 983, 987, 988, 989, 990, 992, 993, 999, 1003, 1010, 1012, 1015, 1018, 1020, 1024, 1025, 1026, 1027, 1029, 1080, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1107, 1149, 1154, 1165, 1169, 1172, 1173, 1177, 1178, 1179, 1186, 1187, 1192, 1198, 1200, 1216, 1224, 1233, 1245, 1253, 1264, 1268, 1309, 1350, 1356, 1357, 1366, 1367, 1376, 1387, 1388, 1389, 1391, 1392, 1393, 1395], "offset": [3, 9, 18, 19, 20, 22, 30, 31, 33, 127, 134, 151, 152, 159, 160, 206, 273, 306, 332, 343, 369, 458, 468, 498, 514, 559, 577, 607, 613, 627, 628, 629, 631, 645, 646, 648, 775, 782, 801, 802, 810, 811, 856, 923, 956, 982, 993, 1019, 1109, 1119, 1149, 1165, 1297, 1315], "origin": [3, 9, 22, 46, 54, 138, 139, 140, 206, 273, 306, 343, 395, 397, 398, 402, 431, 514, 552, 553, 573, 607, 613, 631, 665, 673, 786, 787, 788, 856, 923, 956, 993, 1048, 1050, 1051, 1056, 1058, 1087, 1090, 1093, 1165, 1192, 1200, 1290, 1291, 1311, 1350, 1351, 1352, 1375, 1376, 1381, 1389, 1396], "stereo": [3, 9, 607, 613], "polar": [3, 9, 26, 143, 144, 145, 148, 149, 150, 153, 155, 156, 157, 198, 389, 390, 474, 501, 516, 528, 607, 613, 632, 640, 791, 792, 793, 797, 798, 799, 803, 806, 807, 808, 847, 1042, 1043, 1090, 1093, 1125, 1152, 1167, 1179, 1339, 1392], "correspond": [3, 9, 13, 22, 122, 125, 170, 222, 252, 253, 254, 268, 289, 322, 359, 383, 436, 462, 482, 536, 560, 564, 566, 567, 568, 578, 579, 580, 581, 602, 607, 613, 620, 631, 741, 744, 747, 819, 872, 902, 903, 904, 918, 939, 972, 1009, 1036, 1063, 1074, 1088, 1093, 1113, 1133, 1187, 1298, 1302, 1304, 1305, 1306, 1316, 1317, 1318, 1319, 1346, 1358, 1385, 1389, 1390, 1392, 1393, 1396], "northwest": [3, 9, 22, 607, 613, 631], "corner": [3, 9, 22, 225, 292, 325, 332, 362, 369, 607, 613, 631, 875, 942, 975, 982, 1012, 1019, 1391], "metropolitan": [3, 9, 22, 607, 613, 631], "french": [3, 9, 22, 607, 613, 631], "composit": [3, 9, 22, 399, 447, 607, 613, 631, 1052, 1098, 1344, 1373, 1379, 1394], "9": [3, 9, 22, 30, 31, 130, 136, 137, 198, 237, 303, 340, 377, 389, 523, 530, 532, 560, 607, 613, 631, 645, 646, 778, 784, 785, 847, 887, 953, 990, 1027, 1042, 1174, 1181, 1183, 1298, 1347, 1358, 1367, 1374, 1375, 1376, 1383, 1388, 1390, 1392, 1393], "965": [3, 9, 22, 607, 613, 631], "53": [3, 9, 22, 151, 152, 607, 613, 631, 801, 802], "670": [3, 9, 22, 607, 613, 631], "deg": [3, 9, 14, 22, 24, 25, 126, 141, 146, 154, 164, 198, 200, 204, 444, 461, 492, 493, 495, 499, 513, 516, 519, 523, 526, 545, 562, 574, 591, 592, 607, 613, 621, 631, 638, 639, 745, 789, 794, 805, 815, 847, 849, 853, 1095, 1112, 1143, 1144, 1146, 1150, 1164, 1167, 1170, 1174, 1177, 1283, 1300, 1312, 1329, 1330, 1378, 1391], "latitud": [3, 9, 22, 29, 46, 48, 51, 54, 56, 60, 71, 89, 100, 121, 122, 123, 125, 126, 162, 163, 206, 228, 229, 249, 251, 252, 253, 255, 256, 257, 265, 267, 269, 270, 271, 273, 295, 296, 306, 328, 329, 330, 332, 334, 343, 365, 366, 367, 369, 371, 461, 492, 495, 545, 563, 564, 565, 574, 590, 607, 613, 631, 644, 665, 667, 670, 673, 675, 679, 690, 708, 719, 740, 741, 742, 744, 745, 813, 814, 856, 878, 879, 899, 901, 902, 903, 905, 906, 907, 915, 917, 919, 920, 921, 923, 945, 946, 956, 978, 979, 980, 982, 984, 993, 1015, 1016, 1017, 1019, 1021, 1031, 1093, 1112, 1143, 1146, 1192, 1194, 1197, 1200, 1204, 1215, 1233, 1244, 1283, 1301, 1302, 1303, 1312, 1328, 1339, 1344, 1345, 1348, 1356, 1363, 1370, 1374, 1376, 1383, 1384, 1391, 1392, 1393, 1394], "longitud": [3, 9, 22, 29, 46, 48, 51, 54, 56, 60, 71, 89, 100, 121, 122, 123, 125, 126, 162, 163, 206, 228, 229, 249, 251, 252, 253, 255, 257, 258, 265, 267, 269, 271, 272, 273, 295, 296, 306, 328, 329, 330, 332, 334, 343, 365, 366, 367, 369, 371, 461, 492, 495, 545, 563, 564, 565, 574, 590, 607, 613, 631, 644, 665, 667, 670, 673, 675, 679, 690, 708, 719, 740, 741, 742, 744, 745, 813, 814, 856, 878, 879, 899, 901, 902, 903, 905, 907, 908, 915, 917, 919, 921, 922, 923, 945, 946, 956, 978, 979, 980, 982, 984, 993, 1015, 1016, 1017, 1019, 1021, 1031, 1093, 1112, 1143, 1146, 1192, 1194, 1197, 1200, 1204, 1215, 1233, 1244, 1283, 1301, 1302, 1303, 1312, 1328, 1344, 1345, 1348, 1356, 1363, 1370, 1374, 1376, 1383, 1384, 1391, 1392, 1393, 1394], "stereograph": [3, 9, 607, 613], "can": [3, 4, 13, 14, 16, 18, 22, 24, 25, 26, 30, 31, 33, 45, 60, 69, 72, 89, 98, 101, 121, 123, 124, 128, 129, 136, 137, 138, 141, 143, 144, 147, 148, 149, 150, 155, 156, 157, 158, 170, 183, 195, 198, 199, 200, 201, 202, 203, 204, 205, 222, 289, 322, 359, 381, 389, 390, 392, 395, 399, 400, 401, 429, 449, 452, 456, 461, 465, 468, 469, 479, 485, 487, 492, 493, 495, 499, 501, 514, 516, 519, 523, 526, 527, 528, 530, 532, 533, 536, 538, 547, 578, 584, 600, 607, 608, 620, 621, 623, 625, 627, 631, 638, 639, 640, 645, 646, 648, 649, 663, 679, 688, 691, 708, 717, 720, 740, 742, 743, 747, 760, 772, 776, 777, 784, 785, 786, 789, 791, 792, 796, 797, 798, 799, 800, 806, 807, 808, 809, 819, 832, 844, 847, 848, 849, 850, 851, 852, 853, 854, 872, 939, 972, 1009, 1031, 1034, 1042, 1043, 1045, 1048, 1052, 1053, 1054, 1091, 1092, 1093, 1100, 1103, 1107, 1112, 1116, 1119, 1120, 1130, 1136, 1138, 1143, 1144, 1146, 1150, 1152, 1165, 1167, 1170, 1174, 1177, 1178, 1179, 1181, 1183, 1184, 1187, 1190, 1204, 1213, 1216, 1233, 1242, 1245, 1285, 1316, 1322, 1339, 1346, 1347, 1350, 1355, 1374, 1376, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1396, 1398], "webmerc": [3, 22, 607, 631], "stere": [3, 22, 371, 607, 631, 1021], "reader": [4, 14, 16, 608, 621, 625, 1339, 1347, 1381, 1389], "c": [4, 14, 16, 77, 106, 118, 122, 125, 127, 129, 133, 138, 140, 265, 371, 429, 451, 456, 461, 469, 471, 497, 503, 518, 526, 527, 528, 533, 536, 538, 561, 604, 608, 621, 625, 696, 725, 737, 741, 744, 775, 777, 781, 786, 788, 915, 1021, 1102, 1107, 1112, 1120, 1122, 1148, 1154, 1169, 1177, 1178, 1179, 1184, 1187, 1190, 1221, 1250, 1270, 1299, 1339, 1350, 1381, 1382, 1384, 1387, 1390, 1391, 1395, 1396, 1398], "metranet": [4, 6, 7, 14, 16, 604, 608, 610, 611, 615, 616, 621, 625, 632, 633, 1339, 1382], "product": [4, 393, 395, 447, 516, 538, 608, 1046, 1048, 1098, 1167, 1190, 1339], "librari": [4, 14, 16, 163, 382, 392, 395, 398, 399, 604, 608, 621, 625, 814, 1035, 1045, 1048, 1051, 1052, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1395, 1396], "either": [4, 14, 16, 18, 30, 31, 128, 129, 138, 139, 140, 143, 144, 147, 155, 156, 157, 165, 223, 224, 225, 230, 233, 234, 235, 236, 237, 248, 250, 252, 253, 254, 256, 258, 266, 268, 270, 272, 290, 291, 292, 297, 300, 301, 302, 303, 323, 324, 325, 333, 337, 338, 339, 340, 360, 361, 362, 370, 374, 375, 376, 377, 384, 440, 461, 469, 479, 492, 499, 500, 504, 507, 508, 516, 523, 608, 621, 623, 625, 627, 645, 646, 776, 777, 786, 787, 788, 791, 792, 796, 806, 807, 808, 816, 873, 874, 875, 880, 883, 884, 885, 886, 887, 898, 900, 902, 903, 904, 906, 908, 916, 918, 920, 922, 940, 941, 942, 947, 950, 951, 952, 953, 973, 974, 975, 983, 987, 988, 989, 990, 1010, 1011, 1012, 1020, 1024, 1025, 1026, 1027, 1037, 1067, 1077, 1112, 1120, 1130, 1143, 1150, 1151, 1155, 1158, 1159, 1167, 1174, 1376, 1381, 1389, 1390, 1391, 1392, 1395, 1396], "python": [4, 14, 16, 45, 399, 600, 608, 621, 625, 663, 1052, 1339, 1341, 1342, 1344, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1392, 1393, 1395, 1398], "delay_field_load": [5, 6, 7, 28, 382, 385, 386, 389, 390, 391, 394, 396, 609, 610, 611, 643, 1035, 1038, 1039, 1042, 1043, 1044, 1047, 1049], "delai": [5, 6, 7, 28, 382, 385, 386, 389, 390, 391, 394, 561, 609, 610, 611, 643, 1035, 1038, 1039, 1042, 1043, 1044, 1047, 1299], "load": [5, 6, 7, 28, 45, 382, 385, 386, 389, 390, 391, 394, 402, 438, 604, 609, 610, 611, 643, 663, 1035, 1038, 1039, 1042, 1043, 1044, 1047, 1055, 1056, 1065, 1390, 1391, 1392, 1393], "until": [5, 6, 7, 28, 45, 139, 382, 385, 386, 389, 390, 391, 394, 609, 610, 611, 643, 663, 787, 1035, 1038, 1039, 1042, 1043, 1044, 1047, 1391], "particular": [5, 6, 7, 28, 382, 385, 386, 389, 390, 391, 394, 493, 517, 530, 609, 610, 611, 643, 1035, 1038, 1039, 1042, 1043, 1044, 1047, 1093, 1144, 1168, 1181, 1381], "access": [5, 6, 7, 28, 35, 46, 60, 71, 72, 89, 100, 101, 170, 382, 385, 386, 389, 390, 391, 394, 402, 609, 610, 611, 643, 652, 665, 679, 690, 691, 708, 719, 720, 747, 819, 1035, 1038, 1039, 1042, 1043, 1044, 1047, 1056, 1192, 1204, 1215, 1216, 1233, 1244, 1245, 1263, 1346, 1347, 1387, 1389, 1393], "In": [5, 6, 7, 28, 30, 31, 121, 123, 124, 140, 146, 382, 385, 386, 389, 390, 391, 393, 394, 440, 447, 493, 526, 538, 544, 609, 610, 611, 643, 645, 646, 740, 742, 743, 788, 794, 1032, 1035, 1038, 1039, 1042, 1043, 1044, 1046, 1047, 1067, 1077, 1080, 1098, 1144, 1177, 1190, 1282, 1341, 1342, 1347, 1376, 1381, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1395, 1396], "attribut": [5, 6, 7, 18, 19, 20, 28, 30, 31, 33, 46, 49, 50, 51, 52, 60, 71, 72, 78, 79, 80, 81, 89, 100, 101, 107, 108, 109, 110, 138, 166, 170, 183, 195, 223, 230, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 382, 385, 386, 387, 389, 390, 391, 394, 397, 398, 401, 473, 609, 610, 611, 623, 627, 628, 629, 643, 645, 646, 648, 665, 668, 669, 670, 671, 679, 690, 691, 697, 698, 699, 700, 708, 719, 720, 726, 727, 728, 729, 747, 760, 772, 786, 819, 832, 844, 873, 880, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1031, 1035, 1038, 1039, 1040, 1042, 1043, 1044, 1047, 1050, 1051, 1054, 1124, 1192, 1195, 1196, 1197, 1198, 1204, 1215, 1216, 1222, 1223, 1224, 1225, 1233, 1244, 1245, 1251, 1252, 1253, 1254, 1374, 1383, 1390, 1393], "lazyloaddict": [5, 6, 7, 28, 46, 60, 89, 382, 385, 386, 389, 390, 391, 394, 609, 610, 611, 643, 665, 679, 708, 1035, 1038, 1039, 1042, 1043, 1044, 1047, 1192, 1204, 1233], "provid": [5, 6, 7, 8, 13, 28, 60, 63, 89, 92, 138, 229, 253, 296, 329, 334, 366, 384, 385, 386, 387, 392, 395, 399, 400, 401, 402, 434, 435, 441, 516, 523, 572, 589, 609, 610, 611, 612, 620, 643, 679, 682, 708, 711, 786, 879, 903, 946, 979, 984, 1016, 1031, 1037, 1038, 1039, 1040, 1045, 1048, 1052, 1053, 1054, 1056, 1061, 1062, 1068, 1069, 1072, 1073, 1078, 1080, 1167, 1174, 1204, 1207, 1233, 1236, 1310, 1327, 1338, 1347, 1374, 1376, 1381, 1388, 1389, 1390, 1392, 1395, 1396], "speedup": [5, 6, 7, 28, 252, 253, 334, 371, 385, 386, 609, 610, 611, 643, 902, 903, 984, 1021, 1038, 1039], "number": [5, 6, 7, 14, 16, 26, 28, 33, 45, 46, 60, 66, 67, 69, 70, 71, 72, 73, 89, 95, 96, 98, 99, 100, 101, 102, 127, 128, 129, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 155, 156, 157, 158, 159, 160, 165, 222, 226, 230, 231, 233, 234, 235, 236, 253, 289, 293, 297, 298, 300, 301, 302, 322, 326, 333, 334, 335, 337, 338, 339, 359, 363, 370, 371, 372, 374, 375, 376, 385, 386, 393, 399, 400, 418, 452, 456, 461, 465, 466, 469, 470, 471, 479, 485, 492, 499, 501, 502, 512, 522, 524, 525, 526, 528, 530, 532, 534, 536, 547, 549, 559, 560, 561, 566, 567, 568, 578, 579, 580, 581, 595, 601, 609, 610, 611, 621, 625, 640, 643, 648, 663, 665, 679, 685, 686, 688, 689, 690, 691, 692, 708, 714, 715, 717, 718, 719, 720, 721, 775, 776, 777, 782, 784, 785, 786, 787, 789, 790, 791, 792, 794, 795, 796, 797, 798, 801, 802, 804, 806, 807, 808, 809, 810, 811, 816, 872, 876, 880, 881, 883, 884, 885, 886, 903, 939, 943, 947, 948, 950, 951, 952, 972, 976, 983, 984, 985, 987, 988, 989, 1009, 1013, 1020, 1021, 1022, 1024, 1025, 1026, 1032, 1038, 1039, 1046, 1052, 1053, 1087, 1090, 1091, 1092, 1093, 1103, 1107, 1112, 1116, 1117, 1120, 1121, 1122, 1130, 1136, 1143, 1150, 1152, 1153, 1163, 1173, 1175, 1176, 1177, 1179, 1181, 1183, 1185, 1187, 1192, 1204, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1233, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1264, 1265, 1266, 1267, 1268, 1285, 1287, 1297, 1298, 1299, 1304, 1305, 1306, 1316, 1317, 1318, 1319, 1333, 1355, 1357, 1381, 1389, 1390, 1391, 1393, 1396], "gate": [5, 6, 7, 28, 60, 70, 71, 72, 89, 99, 100, 101, 118, 119, 120, 127, 128, 129, 134, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 151, 152, 155, 156, 157, 159, 160, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 223, 230, 234, 235, 236, 250, 256, 258, 268, 270, 272, 273, 290, 297, 301, 302, 306, 323, 333, 334, 338, 339, 343, 360, 370, 371, 375, 376, 385, 386, 391, 392, 393, 394, 470, 471, 500, 501, 510, 511, 512, 526, 527, 528, 529, 530, 531, 532, 533, 537, 538, 544, 545, 546, 561, 562, 564, 565, 571, 574, 609, 610, 611, 643, 679, 689, 690, 691, 708, 718, 719, 720, 737, 738, 739, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 782, 786, 787, 788, 789, 790, 791, 792, 794, 796, 798, 800, 801, 802, 806, 807, 808, 810, 811, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 856, 873, 880, 884, 885, 886, 900, 906, 908, 918, 920, 922, 923, 940, 947, 951, 952, 956, 973, 983, 984, 988, 989, 993, 1010, 1020, 1021, 1025, 1026, 1038, 1039, 1044, 1045, 1046, 1047, 1080, 1087, 1090, 1091, 1092, 1093, 1121, 1122, 1151, 1152, 1161, 1162, 1163, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1189, 1190, 1204, 1214, 1215, 1216, 1233, 1243, 1244, 1245, 1265, 1266, 1267, 1282, 1283, 1284, 1299, 1300, 1302, 1303, 1309, 1312, 1342, 1347, 1350, 1351, 1352, 1356, 1383, 1385, 1387, 1388, 1389, 1390, 1392, 1393], "vari": [5, 6, 7, 28, 385, 386, 389, 497, 582, 609, 610, 611, 643, 1038, 1039, 1042, 1148, 1320, 1376, 1390], "between": [5, 6, 7, 14, 24, 25, 28, 30, 31, 48, 60, 71, 72, 89, 100, 101, 119, 122, 123, 136, 137, 138, 139, 141, 146, 148, 149, 150, 157, 183, 195, 198, 201, 202, 223, 230, 234, 235, 236, 237, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 385, 386, 391, 394, 400, 401, 454, 456, 497, 498, 504, 512, 514, 516, 531, 532, 546, 548, 550, 551, 559, 580, 581, 590, 609, 610, 611, 621, 638, 639, 643, 645, 646, 667, 679, 690, 691, 708, 719, 720, 738, 741, 742, 760, 772, 784, 785, 786, 787, 789, 794, 797, 798, 799, 800, 808, 832, 844, 847, 850, 851, 873, 880, 884, 885, 886, 887, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1030, 1038, 1039, 1044, 1047, 1053, 1054, 1080, 1105, 1107, 1148, 1149, 1155, 1163, 1165, 1167, 1182, 1183, 1194, 1204, 1215, 1216, 1233, 1244, 1245, 1277, 1284, 1286, 1288, 1289, 1297, 1318, 1319, 1328, 1339, 1350, 1356, 1366, 1376, 1385, 1387, 1391, 1392, 1396, 1398], "rai": [5, 6, 7, 28, 31, 60, 68, 71, 72, 73, 74, 75, 76, 89, 97, 100, 101, 102, 103, 104, 105, 119, 127, 128, 129, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 152, 155, 156, 157, 183, 195, 201, 207, 209, 212, 214, 215, 223, 230, 233, 234, 235, 236, 237, 250, 256, 258, 268, 270, 272, 274, 276, 279, 281, 282, 290, 297, 300, 301, 302, 303, 307, 309, 312, 314, 315, 323, 333, 334, 337, 338, 339, 340, 344, 346, 349, 351, 352, 360, 370, 371, 374, 375, 376, 377, 384, 385, 386, 391, 394, 395, 443, 446, 466, 471, 501, 530, 531, 532, 537, 549, 556, 558, 561, 562, 564, 566, 567, 568, 578, 579, 580, 581, 594, 595, 609, 610, 611, 643, 646, 679, 687, 690, 691, 692, 693, 694, 695, 708, 716, 719, 720, 721, 722, 723, 724, 738, 760, 772, 775, 776, 777, 784, 785, 786, 787, 788, 790, 791, 792, 794, 796, 797, 798, 802, 806, 807, 808, 832, 844, 850, 857, 859, 862, 864, 865, 873, 880, 883, 884, 885, 886, 887, 900, 906, 908, 918, 920, 922, 924, 926, 929, 931, 932, 940, 947, 950, 951, 952, 953, 957, 959, 962, 964, 965, 973, 983, 984, 987, 988, 989, 990, 994, 996, 999, 1001, 1002, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1037, 1038, 1039, 1044, 1047, 1048, 1080, 1097, 1117, 1122, 1152, 1181, 1182, 1183, 1189, 1204, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1233, 1241, 1244, 1245, 1246, 1247, 1248, 1249, 1265, 1266, 1267, 1270, 1287, 1294, 1296, 1299, 1300, 1302, 1304, 1305, 1306, 1316, 1317, 1318, 1319, 1332, 1333, 1339, 1351, 1383, 1389, 1393, 1396], "ngates_vari": [5, 6, 7, 28, 385, 386, 609, 610, 611, 643, 1038, 1039], "recommend": [5, 6, 7, 28, 45, 60, 89, 138, 140, 371, 385, 386, 395, 497, 498, 514, 526, 544, 609, 610, 611, 643, 663, 679, 708, 786, 788, 1021, 1038, 1039, 1048, 1093, 1148, 1149, 1165, 1177, 1204, 1233, 1282, 1355, 1381, 1395, 1396, 1397, 1398], "read_altitude_from_nc": [8, 612], "d3r": [8, 612], "gcpex": [8, 612], "odim_h5": [8, 18, 19, 20, 30, 31, 612, 623, 627, 628, 629, 645, 646, 1339], "found": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 45, 136, 137, 141, 142, 168, 382, 387, 389, 390, 391, 392, 394, 395, 396, 436, 447, 502, 515, 578, 612, 621, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 644, 663, 784, 785, 789, 790, 1035, 1040, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1063, 1074, 1087, 1090, 1091, 1092, 1093, 1098, 1153, 1166, 1316, 1347, 1381, 1390, 1395, 1396, 1398], "doe": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 64, 93, 121, 123, 124, 138, 139, 140, 223, 225, 230, 233, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 334, 337, 338, 339, 340, 360, 362, 370, 371, 374, 375, 376, 377, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 415, 440, 595, 612, 621, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 644, 683, 712, 740, 742, 743, 786, 787, 788, 873, 875, 880, 883, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 984, 987, 988, 989, 990, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1067, 1077, 1208, 1237, 1333, 1339, 1367, 1381, 1383, 1390, 1395, 1396, 1398], "appear": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 577, 612, 621, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 644, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1315], "place": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 147, 224, 228, 229, 248, 251, 266, 267, 291, 295, 296, 324, 328, 329, 361, 365, 366, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 452, 532, 595, 612, 621, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 644, 796, 874, 878, 879, 898, 901, 916, 917, 941, 945, 946, 974, 978, 979, 1011, 1015, 1016, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1103, 1183, 1333, 1387, 1395], "defin": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 46, 60, 89, 121, 123, 124, 127, 128, 129, 134, 136, 137, 138, 141, 142, 143, 144, 145, 147, 151, 152, 155, 156, 157, 159, 160, 198, 199, 200, 201, 202, 203, 204, 205, 228, 229, 233, 295, 296, 300, 328, 329, 337, 365, 366, 374, 382, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 401, 446, 479, 493, 499, 516, 523, 524, 525, 526, 530, 531, 532, 535, 539, 544, 612, 621, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 644, 645, 646, 665, 679, 708, 740, 742, 743, 775, 776, 777, 782, 784, 785, 786, 789, 790, 791, 792, 793, 796, 800, 801, 802, 806, 807, 808, 810, 811, 847, 848, 849, 850, 851, 852, 853, 854, 878, 879, 883, 945, 946, 950, 978, 979, 987, 1015, 1016, 1024, 1035, 1038, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1054, 1091, 1092, 1093, 1097, 1130, 1144, 1150, 1167, 1174, 1175, 1176, 1177, 1181, 1182, 1183, 1186, 1192, 1204, 1233, 1282, 1356, 1357, 1374, 1376, 1392], "mdv": [8, 14, 16, 18, 19, 20, 24, 25, 26, 29, 389, 390, 400, 612, 621, 623, 625, 627, 628, 629, 638, 639, 640, 641, 644, 1042, 1043, 1053, 1342, 1344, 1351, 1354, 1372, 1381, 1385, 1387, 1394], "like": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 40, 56, 57, 77, 106, 121, 122, 124, 125, 126, 139, 140, 381, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 434, 435, 447, 501, 530, 531, 532, 540, 541, 542, 543, 560, 561, 575, 600, 612, 621, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 644, 658, 675, 676, 696, 725, 740, 741, 743, 744, 745, 787, 788, 1031, 1034, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1061, 1062, 1072, 1073, 1098, 1152, 1181, 1182, 1183, 1221, 1250, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1298, 1299, 1313, 1346, 1347, 1350, 1381, 1383, 1385, 1387, 1392, 1396], "onli": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 32, 65, 71, 72, 94, 100, 101, 127, 128, 129, 133, 138, 140, 142, 147, 151, 152, 155, 156, 157, 170, 223, 234, 252, 253, 290, 301, 323, 334, 338, 360, 371, 375, 382, 387, 389, 390, 391, 392, 393, 394, 395, 500, 501, 516, 526, 552, 553, 566, 577, 584, 591, 592, 612, 621, 623, 625, 626, 627, 628, 629, 638, 639, 640, 641, 644, 647, 684, 690, 691, 713, 719, 720, 747, 775, 776, 777, 781, 786, 788, 790, 796, 801, 802, 806, 807, 808, 819, 873, 884, 902, 903, 940, 951, 973, 984, 988, 1010, 1021, 1025, 1035, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1088, 1089, 1093, 1151, 1152, 1167, 1177, 1209, 1215, 1216, 1238, 1244, 1245, 1290, 1291, 1304, 1315, 1322, 1329, 1330, 1339, 1350, 1357, 1367, 1376, 1384, 1385, 1387, 1389, 1390, 1391, 1392, 1396], "you": [8, 223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 501, 612, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1152, 1346, 1376, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1392, 1393, 1395, 1396, 1398], "altitud": [8, 29, 46, 60, 71, 89, 100, 126, 130, 131, 136, 137, 148, 151, 152, 206, 237, 303, 340, 377, 447, 452, 516, 519, 520, 532, 535, 545, 563, 574, 590, 612, 644, 665, 679, 690, 708, 719, 745, 778, 779, 784, 785, 797, 801, 802, 856, 887, 953, 990, 1027, 1031, 1088, 1093, 1098, 1103, 1167, 1170, 1171, 1183, 1186, 1192, 1204, 1215, 1233, 1244, 1283, 1301, 1312, 1328, 1339, 1367, 1378, 1383, 1387, 1389, 1391, 1393], "np": [8, 14, 16, 26, 466, 538, 588, 612, 621, 625, 640, 1080, 1117, 1190, 1326, 1339, 1350, 1351, 1355, 1358, 1363, 1366, 1367, 1369, 1374, 1376, 1377, 1378, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1396], "295": [8, 612], "float64": [8, 612, 1091, 1092, 1093, 1374, 1393], "nd": [9, 613], "65535": [9, 613], "radar_estimated_rain_r": [9, 613, 1390, 1392], "integ": [9, 223, 290, 323, 360, 401, 521, 522, 613, 873, 940, 973, 1010, 1054, 1172, 1173], "repres": [9, 60, 89, 134, 138, 142, 143, 144, 145, 155, 156, 157, 159, 160, 499, 512, 516, 523, 524, 525, 530, 532, 537, 538, 595, 613, 679, 708, 782, 786, 790, 791, 792, 793, 806, 807, 808, 810, 811, 1088, 1089, 1150, 1163, 1167, 1174, 1175, 1176, 1181, 1183, 1189, 1190, 1204, 1233, 1265, 1266, 1333], "No": [9, 71, 72, 100, 101, 140, 223, 230, 234, 235, 236, 237, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 399, 451, 516, 613, 690, 691, 719, 720, 788, 873, 880, 884, 885, 886, 887, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1052, 1093, 1102, 1167, 1215, 1216, 1244, 1245, 1390, 1392], "valid_range_from_fil": [10, 617], "units_from_fil": [10, 617], "pulse_width": [10, 153, 164, 401, 472, 617, 803, 815, 1054, 1123], "gamic": [10, 617], "hdf5": [10, 19, 30, 31, 617, 628, 645, 646, 1381], "valid": [10, 46, 60, 89, 127, 136, 137, 138, 142, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 197, 224, 248, 266, 291, 324, 361, 391, 400, 401, 444, 456, 461, 465, 469, 470, 471, 479, 485, 492, 499, 501, 512, 524, 525, 530, 532, 547, 549, 552, 553, 560, 561, 617, 665, 679, 708, 774, 775, 784, 785, 786, 790, 796, 797, 798, 799, 801, 806, 807, 808, 809, 810, 811, 846, 874, 898, 916, 941, 974, 1011, 1044, 1053, 1054, 1088, 1089, 1093, 1095, 1107, 1112, 1116, 1120, 1121, 1122, 1130, 1136, 1143, 1150, 1152, 1163, 1175, 1176, 1181, 1183, 1192, 1204, 1233, 1285, 1287, 1290, 1291, 1298, 1299, 1396], "rang": [10, 14, 16, 24, 25, 26, 60, 70, 72, 89, 99, 101, 118, 119, 120, 129, 134, 136, 137, 142, 143, 144, 145, 148, 159, 160, 198, 206, 223, 225, 230, 231, 232, 234, 235, 236, 250, 252, 253, 254, 256, 258, 265, 268, 270, 272, 273, 290, 292, 297, 298, 299, 301, 302, 306, 323, 325, 333, 334, 335, 336, 338, 339, 343, 360, 362, 370, 371, 372, 373, 375, 376, 394, 443, 444, 452, 461, 465, 466, 479, 485, 492, 493, 497, 500, 501, 512, 516, 520, 526, 528, 530, 531, 532, 549, 559, 562, 574, 580, 581, 591, 592, 617, 621, 625, 638, 639, 640, 679, 689, 691, 708, 718, 720, 737, 738, 739, 777, 782, 784, 785, 790, 791, 792, 793, 797, 810, 811, 847, 856, 873, 875, 880, 881, 882, 884, 885, 886, 900, 902, 903, 904, 906, 908, 915, 918, 920, 922, 923, 940, 942, 947, 948, 949, 951, 952, 956, 973, 975, 983, 984, 985, 986, 988, 989, 993, 1010, 1012, 1020, 1021, 1022, 1023, 1025, 1026, 1031, 1047, 1088, 1089, 1093, 1095, 1103, 1112, 1116, 1117, 1130, 1136, 1143, 1144, 1148, 1151, 1152, 1163, 1167, 1171, 1177, 1179, 1181, 1182, 1183, 1204, 1214, 1216, 1233, 1243, 1245, 1287, 1297, 1300, 1312, 1318, 1319, 1329, 1330, 1339, 1355, 1360, 1363, 1369, 1378, 1383, 1389, 1391, 1393], "valid_min": [10, 138, 139, 140, 387, 617, 786, 787, 788, 1040, 1376, 1393], "valid_max": [10, 138, 139, 140, 387, 617, 786, 787, 788, 1040, 1376, 1393], "when": [10, 18, 19, 20, 33, 35, 46, 60, 61, 62, 66, 67, 69, 71, 72, 89, 90, 91, 95, 96, 98, 100, 101, 136, 137, 138, 139, 140, 151, 152, 155, 162, 163, 168, 169, 170, 174, 176, 183, 190, 195, 223, 230, 234, 235, 236, 237, 252, 253, 259, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 343, 360, 370, 371, 375, 376, 377, 391, 392, 394, 395, 397, 401, 402, 415, 446, 456, 461, 469, 479, 492, 495, 500, 504, 507, 508, 512, 516, 519, 524, 526, 527, 528, 532, 537, 538, 560, 582, 617, 627, 628, 629, 648, 652, 665, 679, 680, 681, 685, 686, 688, 690, 691, 708, 709, 710, 714, 715, 717, 719, 720, 747, 751, 753, 760, 767, 772, 784, 785, 786, 787, 788, 801, 802, 806, 813, 814, 819, 823, 825, 832, 839, 844, 873, 880, 884, 885, 886, 887, 902, 903, 909, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 993, 1010, 1020, 1021, 1025, 1026, 1027, 1044, 1045, 1047, 1048, 1050, 1054, 1056, 1080, 1093, 1097, 1107, 1112, 1120, 1130, 1143, 1146, 1151, 1155, 1158, 1159, 1163, 1167, 1170, 1175, 1177, 1178, 1179, 1183, 1189, 1190, 1191, 1192, 1204, 1205, 1206, 1210, 1211, 1213, 1215, 1216, 1233, 1234, 1235, 1239, 1240, 1242, 1244, 1245, 1298, 1320, 1339, 1355, 1376, 1381, 1384, 1385, 1388, 1391, 1395, 1396, 1398], "thei": [10, 73, 102, 138, 139, 140, 146, 155, 156, 157, 174, 176, 183, 371, 387, 395, 401, 456, 493, 497, 526, 601, 615, 617, 692, 721, 751, 753, 760, 786, 787, 788, 794, 806, 807, 808, 823, 825, 832, 1021, 1040, 1048, 1054, 1107, 1144, 1148, 1177, 1217, 1246, 1376, 1390, 1396], "present": [10, 45, 46, 60, 89, 223, 230, 234, 235, 236, 237, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 400, 401, 440, 617, 663, 665, 679, 708, 873, 880, 884, 885, 886, 887, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1053, 1054, 1067, 1077, 1093, 1192, 1204, 1233, 1383, 1388], "unit": [10, 18, 19, 20, 70, 99, 121, 122, 123, 124, 125, 136, 137, 139, 140, 213, 216, 217, 218, 219, 220, 221, 228, 280, 283, 284, 285, 286, 287, 288, 295, 313, 316, 317, 318, 319, 320, 321, 328, 350, 353, 354, 355, 356, 357, 358, 365, 380, 387, 389, 465, 485, 487, 514, 521, 547, 560, 561, 617, 627, 628, 629, 689, 718, 740, 741, 742, 743, 744, 784, 785, 787, 788, 863, 866, 867, 868, 869, 870, 871, 878, 930, 933, 934, 935, 936, 937, 938, 945, 963, 966, 967, 968, 969, 970, 971, 978, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1015, 1033, 1040, 1042, 1116, 1136, 1138, 1165, 1172, 1191, 1214, 1243, 1270, 1285, 1298, 1299, 1339, 1364, 1369, 1376, 1381, 1384, 1389, 1390, 1393, 1396], "avail": [10, 18, 19, 20, 60, 71, 72, 73, 89, 100, 101, 102, 127, 128, 129, 146, 147, 155, 156, 157, 183, 195, 250, 252, 253, 254, 256, 258, 268, 270, 272, 389, 399, 516, 547, 584, 617, 627, 628, 629, 649, 679, 690, 691, 692, 708, 719, 720, 721, 760, 772, 775, 776, 777, 794, 796, 806, 807, 808, 832, 844, 900, 902, 903, 904, 906, 908, 918, 920, 922, 1042, 1052, 1167, 1204, 1215, 1216, 1217, 1233, 1244, 1245, 1246, 1285, 1322, 1344, 1346, 1355, 1381, 1390], "mandatori": [10, 617], "processor": [10, 617], "pulsewidth": [10, 516, 617, 1167], "enum": [10, 617], "should": [10, 26, 37, 46, 60, 62, 69, 89, 91, 98, 133, 138, 139, 140, 147, 152, 170, 174, 206, 251, 267, 334, 371, 381, 395, 398, 400, 401, 429, 498, 501, 512, 514, 516, 524, 525, 526, 527, 528, 533, 535, 537, 538, 559, 560, 561, 569, 601, 617, 640, 654, 665, 679, 681, 688, 708, 710, 717, 747, 751, 781, 786, 787, 788, 796, 802, 819, 823, 856, 901, 917, 984, 1021, 1030, 1032, 1034, 1048, 1051, 1053, 1054, 1088, 1089, 1091, 1092, 1093, 1149, 1152, 1163, 1165, 1167, 1175, 1176, 1177, 1178, 1179, 1184, 1186, 1189, 1190, 1192, 1204, 1206, 1213, 1233, 1235, 1242, 1297, 1298, 1299, 1307, 1355, 1376, 1381, 1395, 1396, 1398], "u": [10, 56, 57, 58, 122, 125, 523, 537, 538, 617, 675, 676, 677, 741, 744, 1174, 1189, 1190, 1347, 1378, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1392, 1393, 1396], "gif": [11, 618, 1339], "precipitation_typ": [12, 22, 619, 631], "grib": [12, 619], "locat": [13, 46, 48, 60, 70, 71, 72, 89, 99, 100, 101, 206, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 237, 248, 250, 252, 253, 254, 256, 258, 265, 266, 268, 270, 272, 273, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 306, 323, 324, 325, 328, 329, 331, 333, 334, 335, 336, 338, 339, 340, 343, 360, 361, 362, 365, 366, 368, 370, 371, 372, 373, 375, 376, 377, 391, 392, 394, 400, 546, 563, 564, 565, 620, 665, 667, 679, 689, 690, 691, 708, 718, 719, 720, 856, 873, 874, 875, 878, 879, 880, 881, 882, 884, 885, 886, 887, 898, 900, 902, 903, 904, 906, 908, 915, 916, 918, 920, 922, 923, 940, 941, 942, 945, 946, 947, 948, 949, 951, 952, 953, 956, 973, 974, 975, 978, 979, 981, 983, 984, 985, 986, 988, 989, 990, 993, 1010, 1011, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1044, 1045, 1047, 1053, 1080, 1087, 1090, 1091, 1092, 1093, 1192, 1194, 1204, 1214, 1215, 1216, 1233, 1243, 1244, 1245, 1264, 1277, 1284, 1301, 1302, 1303, 1361, 1363, 1374, 1381, 1387, 1391, 1395, 1396], "hpl": [13, 620], "ascii": [13, 620], "halo": [13, 620], "photono": [13, 620], "steamlin": [13, 620], "lidar": [13, 511, 620, 1162, 1339, 1381], "come": [13, 530, 620, 1181, 1376], "assign": [13, 138, 155, 523, 620, 786, 806, 1174, 1376], "lat": [13, 55, 71, 100, 121, 122, 123, 124, 125, 126, 162, 163, 212, 237, 250, 251, 252, 253, 255, 256, 257, 258, 267, 269, 270, 271, 272, 279, 303, 312, 330, 332, 334, 340, 349, 367, 369, 377, 398, 399, 461, 492, 495, 620, 674, 690, 719, 740, 741, 742, 743, 744, 745, 813, 814, 862, 887, 900, 901, 902, 903, 905, 906, 907, 908, 917, 919, 920, 921, 922, 929, 953, 962, 980, 982, 984, 990, 999, 1017, 1019, 1027, 1051, 1052, 1112, 1143, 1146, 1201, 1215, 1244, 1356, 1357, 1370, 1387, 1391], "lon": [13, 55, 71, 100, 121, 122, 123, 124, 125, 126, 162, 163, 212, 237, 250, 251, 252, 253, 255, 256, 257, 258, 267, 269, 270, 271, 272, 279, 303, 312, 330, 332, 334, 340, 349, 367, 369, 377, 398, 399, 461, 492, 495, 620, 674, 690, 719, 740, 741, 742, 743, 744, 745, 813, 814, 862, 887, 900, 901, 902, 903, 905, 906, 907, 908, 917, 919, 920, 921, 922, 929, 953, 962, 980, 982, 984, 990, 999, 1017, 1019, 1027, 1051, 1052, 1112, 1143, 1146, 1201, 1215, 1244, 1357, 1370, 1391], "alt": [13, 55, 71, 100, 126, 398, 620, 674, 690, 719, 745, 1051, 1201, 1215, 1244, 1391], "ad": [13, 46, 60, 62, 89, 91, 146, 151, 152, 259, 332, 369, 497, 498, 514, 516, 620, 665, 679, 681, 708, 710, 794, 801, 802, 909, 982, 1019, 1088, 1091, 1092, 1148, 1149, 1165, 1167, 1192, 1204, 1206, 1233, 1235, 1268, 1339, 1366, 1367, 1383, 1384, 1395, 1396], "global": [13, 60, 89, 620, 679, 708, 1204, 1233, 1393, 1395], "variabl": [13, 33, 45, 46, 54, 55, 56, 60, 70, 89, 99, 170, 206, 240, 259, 273, 306, 343, 397, 398, 456, 467, 468, 502, 504, 515, 523, 526, 529, 533, 534, 536, 560, 620, 648, 663, 665, 673, 674, 675, 679, 689, 708, 718, 747, 819, 856, 890, 909, 923, 956, 993, 1050, 1051, 1080, 1088, 1107, 1118, 1119, 1153, 1155, 1166, 1174, 1177, 1180, 1184, 1185, 1187, 1192, 1200, 1201, 1204, 1214, 1233, 1243, 1298, 1339, 1346, 1350, 1374, 1376, 1381, 1383, 1384, 1389, 1390, 1392, 1393, 1395], "location_campaign": [13, 620], "script": [13, 45, 600, 620, 663, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378], "filenames_iq": [14, 621], "nbyte": [14, 16, 26, 621, 625, 640], "4": [14, 16, 26, 30, 31, 60, 89, 118, 119, 126, 136, 137, 155, 156, 385, 389, 446, 497, 529, 530, 580, 621, 625, 640, 645, 646, 679, 708, 737, 738, 745, 784, 785, 806, 807, 1031, 1038, 1042, 1087, 1090, 1097, 1148, 1180, 1181, 1204, 1233, 1318, 1346, 1347, 1355, 1357, 1364, 1365, 1366, 1367, 1369, 1370, 1374, 1376, 1378, 1381, 1388, 1390, 1391, 1392, 1396], "prf": [14, 621, 1391], "ang_tol": [14, 24, 25, 469, 492, 493, 621, 638, 639, 1120, 1143, 1144], "noise_h": [14, 621], "noise_v": [14, 621], "rconst_h": [14, 621], "rconst_v": [14, 621], "radconst_h": [14, 621], "radconst_v": [14, 621], "mfloss_h": [14, 621], "mfloss_v": [14, 621], "azi_min": [14, 24, 25, 591, 592, 621, 638, 639, 1329, 1330], "azi_max": [14, 24, 25, 591, 592, 621, 638, 639, 1329, 1330], "ele_min": [14, 24, 25, 591, 592, 621, 638, 639, 1329, 1330], "ele_max": [14, 24, 25, 591, 592, 621, 638, 639, 1329, 1330], "rng_min": [14, 24, 25, 520, 591, 592, 621, 638, 639, 1171, 1329, 1330], "rng_max": [14, 24, 25, 520, 591, 592, 621, 638, 639, 1171, 1329, 1330], "rad4alp": [14, 621, 1339], "iq": [14, 449, 451, 458, 460, 462, 464, 468, 476, 478, 482, 490, 491, 496, 621, 1100, 1102, 1109, 1111, 1113, 1115, 1119, 1127, 1129, 1133, 1141, 1142, 1147, 1381, 1389], "refer": [14, 18, 24, 25, 30, 34, 46, 60, 62, 89, 91, 118, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 143, 144, 147, 151, 152, 153, 154, 155, 156, 157, 161, 164, 212, 237, 279, 303, 312, 340, 349, 377, 391, 392, 393, 447, 451, 452, 456, 461, 465, 466, 469, 470, 471, 473, 479, 480, 485, 492, 493, 495, 497, 498, 499, 501, 503, 514, 516, 519, 523, 526, 527, 528, 530, 532, 533, 535, 537, 538, 560, 561, 572, 587, 621, 623, 627, 638, 639, 645, 650, 665, 679, 681, 708, 710, 737, 741, 744, 775, 776, 777, 778, 779, 781, 784, 785, 786, 787, 788, 791, 792, 796, 801, 802, 803, 805, 806, 807, 808, 812, 815, 862, 887, 929, 953, 962, 990, 999, 1027, 1044, 1045, 1046, 1087, 1090, 1098, 1102, 1103, 1107, 1112, 1116, 1117, 1120, 1121, 1122, 1124, 1130, 1131, 1136, 1143, 1144, 1146, 1148, 1149, 1150, 1152, 1154, 1165, 1167, 1170, 1174, 1177, 1178, 1179, 1181, 1183, 1184, 1186, 1188, 1189, 1190, 1192, 1204, 1206, 1233, 1235, 1298, 1299, 1310, 1325, 1381, 1389, 1393, 1396], "rainbow": [14, 24, 25, 26, 621, 638, 639, 640, 1382], "byte": [14, 16, 26, 399, 427, 621, 625, 640, 1031, 1052, 1339, 1390], "numpi": [14, 16, 26, 62, 91, 176, 190, 584, 615, 616, 621, 625, 632, 633, 640, 681, 710, 753, 767, 825, 839, 1206, 1235, 1322, 1339, 1341, 1350, 1351, 1355, 1358, 1363, 1366, 1367, 1369, 1374, 1376, 1377, 1378, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1396, 1398], "e": [14, 16, 26, 31, 140, 146, 151, 152, 223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 383, 399, 440, 454, 493, 497, 498, 514, 526, 530, 532, 535, 545, 546, 572, 574, 621, 625, 640, 646, 788, 794, 801, 802, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1031, 1036, 1052, 1067, 1077, 1105, 1144, 1148, 1149, 1165, 1177, 1181, 1183, 1186, 1283, 1284, 1310, 1312, 1346, 1358, 1376, 1391, 1395, 1396], "g": [14, 16, 26, 31, 146, 399, 492, 514, 516, 526, 528, 538, 621, 625, 640, 646, 794, 1031, 1052, 1087, 1090, 1143, 1165, 1167, 1177, 1179, 1190], "go": [14, 16, 26, 147, 151, 155, 156, 157, 456, 483, 503, 504, 505, 507, 508, 523, 532, 545, 546, 574, 591, 592, 621, 625, 640, 796, 801, 806, 807, 808, 1107, 1134, 1154, 1155, 1156, 1158, 1159, 1174, 1183, 1283, 1284, 1312, 1329, 1330, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1384], "float6432": [14, 621], "scan": [14, 18, 30, 31, 60, 89, 138, 139, 140, 141, 144, 154, 206, 222, 223, 225, 236, 273, 289, 290, 292, 302, 306, 322, 323, 325, 339, 343, 359, 360, 362, 376, 391, 447, 501, 516, 530, 532, 559, 563, 577, 582, 589, 595, 621, 623, 627, 645, 646, 679, 708, 786, 787, 788, 789, 792, 805, 856, 872, 873, 875, 886, 923, 939, 940, 942, 952, 956, 972, 973, 975, 989, 993, 1009, 1010, 1012, 1026, 1044, 1088, 1098, 1152, 1167, 1181, 1183, 1204, 1233, 1265, 1266, 1297, 1301, 1315, 1320, 1327, 1333, 1339, 1347, 1350, 1360, 1361, 1371, 1382, 1392], "toler": [14, 24, 25, 461, 469, 492, 493, 495, 510, 511, 545, 552, 553, 570, 574, 621, 638, 639, 1080, 1081, 1083, 1112, 1120, 1143, 1144, 1146, 1161, 1162, 1283, 1290, 1291, 1308, 1312], "angl": [14, 24, 25, 60, 66, 67, 89, 95, 96, 118, 119, 120, 136, 137, 148, 149, 150, 153, 154, 161, 162, 163, 164, 206, 223, 235, 273, 290, 306, 323, 343, 360, 444, 469, 492, 493, 513, 516, 520, 528, 530, 532, 533, 540, 541, 542, 543, 547, 552, 553, 559, 563, 564, 570, 574, 582, 585, 586, 595, 616, 621, 638, 639, 679, 685, 686, 708, 714, 715, 737, 738, 739, 784, 785, 797, 798, 799, 803, 805, 812, 813, 814, 815, 856, 873, 885, 923, 940, 956, 973, 993, 1010, 1095, 1120, 1143, 1144, 1164, 1167, 1171, 1179, 1181, 1183, 1184, 1204, 1210, 1211, 1233, 1239, 1240, 1278, 1279, 1280, 1281, 1285, 1290, 1291, 1297, 1301, 1302, 1308, 1312, 1320, 1323, 1324, 1333, 1339, 1369, 1371, 1378, 1383, 1389, 1393], "distanc": [14, 24, 25, 46, 54, 72, 101, 118, 119, 120, 223, 234, 290, 301, 323, 338, 360, 375, 461, 466, 492, 501, 521, 523, 528, 530, 531, 532, 546, 552, 553, 561, 563, 564, 565, 590, 621, 638, 639, 665, 673, 691, 720, 737, 738, 739, 873, 884, 940, 951, 973, 988, 1010, 1025, 1080, 1081, 1084, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1112, 1117, 1143, 1152, 1172, 1174, 1179, 1181, 1182, 1183, 1192, 1200, 1216, 1245, 1284, 1290, 1291, 1299, 1301, 1302, 1303, 1328, 1350, 1359, 1364, 1365, 1366, 1391], "psr": [14, 24, 25, 150, 573, 587, 621, 634, 635, 636, 638, 639, 799, 1311, 1325, 1389], "estim": [14, 129, 142, 143, 144, 145, 148, 149, 155, 156, 157, 165, 200, 204, 225, 292, 325, 362, 453, 465, 466, 468, 470, 471, 473, 485, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 526, 527, 528, 531, 533, 560, 561, 621, 777, 790, 791, 792, 793, 795, 797, 798, 806, 807, 808, 816, 849, 853, 875, 942, 975, 1012, 1088, 1104, 1116, 1117, 1119, 1121, 1122, 1124, 1136, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1177, 1178, 1179, 1182, 1184, 1298, 1299, 1376, 1391], "v": [14, 26, 56, 57, 59, 148, 149, 150, 436, 437, 440, 458, 464, 490, 491, 496, 497, 513, 530, 537, 538, 621, 640, 675, 676, 678, 797, 798, 799, 1063, 1064, 1067, 1074, 1075, 1077, 1109, 1115, 1141, 1142, 1147, 1148, 1164, 1181, 1189, 1190, 1366, 1367, 1378, 1396], "nois": [14, 24, 25, 133, 145, 148, 149, 150, 203, 445, 451, 460, 465, 466, 467, 468, 470, 471, 476, 477, 478, 481, 484, 485, 487, 488, 489, 496, 500, 560, 561, 566, 578, 621, 638, 639, 781, 793, 797, 798, 799, 852, 1096, 1102, 1111, 1116, 1117, 1118, 1119, 1121, 1122, 1127, 1128, 1129, 1132, 1135, 1136, 1138, 1139, 1140, 1147, 1151, 1298, 1299, 1304, 1316, 1385, 1389], "power": [14, 24, 25, 127, 129, 148, 149, 150, 151, 153, 164, 165, 202, 460, 465, 467, 470, 471, 473, 476, 477, 479, 480, 484, 485, 487, 488, 500, 503, 504, 505, 506, 507, 508, 516, 561, 566, 621, 638, 639, 775, 777, 797, 798, 799, 800, 801, 803, 815, 816, 851, 1031, 1111, 1116, 1118, 1121, 1122, 1124, 1127, 1128, 1130, 1131, 1135, 1136, 1138, 1139, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1167, 1299, 1304], "adu": [14, 465, 467, 468, 483, 484, 485, 486, 487, 488, 489, 621, 1116, 1118, 1119, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1389], "dynam": [14, 139, 621, 787], "factor": [14, 118, 119, 120, 130, 151, 152, 401, 447, 452, 494, 500, 503, 504, 505, 506, 507, 508, 516, 532, 534, 544, 621, 656, 737, 738, 739, 778, 801, 802, 1054, 1098, 1103, 1145, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1167, 1183, 1185, 1282, 1357, 1365, 1371, 1387], "convers": [14, 30, 31, 469, 492, 497, 544, 621, 645, 646, 1120, 1143, 1148, 1282, 1390], "dbadu": [14, 465, 485, 487, 621, 1116, 1136, 1138, 1389], "dbm": [14, 148, 149, 150, 153, 164, 165, 465, 470, 471, 473, 480, 485, 487, 621, 797, 798, 799, 803, 815, 816, 1116, 1121, 1122, 1124, 1131, 1136, 1138, 1389], "dbz": [14, 26, 127, 133, 151, 152, 442, 452, 456, 466, 481, 497, 498, 514, 523, 530, 535, 621, 640, 775, 781, 801, 802, 1103, 1107, 1117, 1132, 1148, 1149, 1165, 1174, 1181, 1186, 1346, 1350, 1357, 1364, 1365, 1371, 1376, 1389, 1390, 1392, 1393], "constant": [14, 137, 391, 472, 473, 480, 494, 521, 526, 621, 785, 1031, 1044, 1084, 1091, 1092, 1093, 1123, 1124, 1131, 1145, 1172, 1177, 1347, 1391], "match": [14, 138, 141, 146, 206, 273, 306, 343, 395, 473, 480, 512, 537, 538, 621, 786, 789, 794, 856, 923, 956, 993, 1048, 1080, 1124, 1131, 1163, 1189, 1190, 1339, 1350, 1357, 1389, 1391], "filter": [14, 63, 92, 136, 137, 138, 139, 140, 141, 144, 145, 146, 155, 156, 157, 223, 230, 234, 235, 236, 237, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 454, 473, 480, 524, 525, 526, 527, 528, 621, 682, 711, 747, 751, 753, 760, 767, 772, 784, 785, 786, 787, 788, 789, 792, 793, 794, 800, 806, 807, 808, 873, 880, 884, 885, 886, 887, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1080, 1091, 1092, 1093, 1105, 1124, 1131, 1175, 1176, 1177, 1178, 1179, 1207, 1236, 1342, 1350, 1351, 1352, 1356, 1375, 1382, 1385, 1388, 1389, 1390, 1391], "loss": [14, 154, 473, 480, 516, 621, 805, 1124, 1131, 1167], "receiv": [14, 153, 154, 161, 164, 473, 480, 621, 803, 805, 812, 815, 1088, 1089, 1124, 1131, 1385], "db": [14, 147, 148, 149, 153, 154, 164, 165, 200, 204, 444, 445, 473, 480, 516, 530, 566, 621, 796, 797, 798, 803, 805, 815, 816, 849, 853, 1095, 1096, 1124, 1131, 1167, 1181, 1304, 1366, 1392, 1393], "minimum": [14, 24, 25, 127, 134, 136, 137, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 198, 201, 202, 203, 204, 205, 223, 225, 230, 233, 234, 235, 236, 237, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 334, 337, 338, 339, 340, 360, 362, 370, 371, 374, 375, 376, 377, 399, 456, 461, 465, 469, 471, 479, 485, 492, 493, 497, 498, 502, 512, 514, 516, 520, 524, 525, 530, 532, 547, 549, 560, 561, 574, 621, 638, 639, 775, 782, 784, 785, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 802, 806, 807, 808, 809, 810, 811, 847, 850, 851, 852, 853, 854, 873, 875, 880, 883, 884, 885, 886, 887, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 984, 987, 988, 989, 990, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1052, 1087, 1090, 1093, 1107, 1112, 1116, 1120, 1122, 1130, 1136, 1143, 1144, 1148, 1149, 1153, 1163, 1165, 1167, 1171, 1175, 1176, 1181, 1183, 1264, 1268, 1285, 1287, 1298, 1299, 1312, 1376, 1387], "maximum": [14, 16, 24, 25, 89, 130, 131, 134, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 157, 159, 160, 198, 200, 201, 202, 203, 223, 225, 230, 233, 234, 235, 236, 237, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 334, 337, 338, 339, 340, 360, 362, 370, 371, 374, 375, 376, 377, 399, 447, 452, 456, 461, 469, 479, 492, 493, 495, 498, 499, 501, 504, 507, 508, 512, 514, 520, 526, 530, 531, 532, 544, 559, 561, 566, 577, 578, 579, 621, 625, 638, 639, 708, 778, 779, 782, 784, 785, 786, 787, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 802, 806, 807, 808, 810, 811, 847, 849, 850, 851, 852, 873, 875, 880, 883, 884, 885, 886, 887, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 984, 987, 988, 989, 990, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1030, 1031, 1052, 1087, 1088, 1089, 1090, 1093, 1098, 1103, 1107, 1112, 1120, 1130, 1143, 1144, 1146, 1149, 1150, 1152, 1155, 1158, 1159, 1163, 1165, 1171, 1177, 1181, 1182, 1183, 1233, 1264, 1268, 1282, 1297, 1299, 1304, 1315, 1316, 1317, 1375, 1376, 1393], "keep": [14, 24, 25, 35, 138, 145, 199, 395, 499, 591, 592, 615, 621, 638, 639, 652, 786, 793, 848, 1048, 1150, 1329, 1330, 1350, 1376, 1396, 1398], "k": [15, 125, 227, 228, 229, 231, 232, 233, 253, 294, 295, 296, 298, 299, 300, 327, 328, 329, 335, 336, 337, 364, 365, 366, 372, 373, 374, 432, 436, 437, 439, 440, 456, 497, 516, 526, 537, 622, 744, 877, 878, 879, 881, 882, 883, 903, 944, 945, 946, 948, 949, 950, 977, 978, 979, 985, 986, 987, 1014, 1015, 1016, 1022, 1023, 1024, 1059, 1063, 1064, 1066, 1067, 1071, 1074, 1075, 1076, 1077, 1107, 1148, 1167, 1177, 1189, 1356, 1363, 1366, 1367, 1396], "band": [15, 21, 127, 129, 133, 399, 456, 461, 496, 503, 518, 526, 527, 528, 535, 536, 622, 630, 775, 777, 781, 1052, 1107, 1112, 1147, 1154, 1169, 1177, 1178, 1179, 1186, 1187, 1382, 1391], "arm": [15, 33, 55, 383, 384, 385, 397, 398, 515, 622, 648, 674, 1036, 1037, 1038, 1050, 1051, 1093, 1166, 1201, 1264, 1270, 1339, 1352, 1367, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1395, 1398], "zenith": [15, 622], "kazr": [15, 622], "ingest": [15, 622, 1381, 1382], "rmax": [16, 198, 479, 574, 625, 847, 1130, 1312], "noxp": [17, 626], "iphex": [17, 626], "gain": [18, 19, 20, 30, 31, 33, 153, 164, 473, 516, 627, 628, 629, 645, 646, 648, 803, 815, 1124, 1167], "nodata": [18, 19, 20, 30, 31, 627, 628, 629, 645, 646, 1339], "nan": [18, 19, 20, 138, 178, 197, 198, 202, 528, 615, 616, 627, 628, 629, 632, 633, 755, 774, 786, 800, 827, 846, 847, 851, 1179, 1374, 1390, 1391], "undetect": [18, 19, 20, 30, 31, 627, 628, 629, 645, 646, 1339], "use_file_convers": [18, 19, 20, 627, 628, 629], "time_ref": [18, 30, 623, 627, 645], "convert": [18, 19, 20, 23, 30, 31, 54, 126, 153, 498, 514, 577, 595, 602, 627, 628, 629, 637, 645, 646, 673, 745, 803, 1149, 1165, 1200, 1315, 1333, 1376, 1389, 1391], "what": [18, 19, 20, 30, 138, 623, 627, 628, 629, 645, 786, 818, 1093, 1346, 1355, 1383, 1385, 1388, 1396, 1398], "user": [18, 19, 20, 26, 45, 63, 92, 128, 129, 141, 371, 399, 484, 488, 497, 594, 627, 628, 629, 640, 663, 682, 711, 776, 777, 789, 1021, 1052, 1135, 1139, 1148, 1207, 1236, 1332, 1347, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1391, 1392, 1393, 1395, 1396, 1398], "physic": [18, 19, 20, 30, 31, 33, 447, 498, 514, 615, 616, 627, 628, 629, 632, 633, 645, 646, 648, 804, 1080, 1098, 1149, 1165, 1376, 1390, 1392], "otherwis": [18, 19, 20, 138, 155, 156, 408, 429, 436, 456, 461, 467, 469, 477, 479, 483, 484, 488, 492, 493, 495, 502, 504, 507, 508, 513, 516, 521, 539, 551, 584, 615, 616, 627, 628, 629, 632, 633, 786, 806, 807, 1063, 1074, 1107, 1112, 1118, 1120, 1128, 1130, 1134, 1135, 1139, 1143, 1144, 1146, 1153, 1155, 1158, 1159, 1164, 1167, 1172, 1289, 1322], "pass": [18, 19, 20, 121, 123, 124, 138, 139, 140, 222, 223, 230, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 265, 268, 270, 272, 289, 290, 297, 301, 302, 303, 322, 323, 330, 331, 332, 333, 334, 335, 338, 339, 340, 359, 360, 367, 368, 369, 370, 371, 372, 375, 376, 377, 381, 382, 391, 393, 512, 526, 627, 628, 629, 740, 742, 743, 786, 787, 788, 872, 873, 880, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 915, 918, 920, 922, 939, 940, 947, 951, 952, 953, 972, 973, 980, 981, 982, 983, 984, 985, 988, 989, 990, 1009, 1010, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1031, 1034, 1035, 1044, 1046, 1087, 1090, 1093, 1163, 1177, 1346, 1347, 1384, 1387, 1391], "mid": [18, 30, 623, 627, 645], "expect": [18, 30, 237, 303, 340, 377, 528, 623, 627, 645, 887, 953, 990, 1027, 1179, 1392, 1396], "starttim": [18, 30, 623, 627, 645], "middl": [18, 25, 30, 623, 627, 639, 645], "endtim": [18, 30, 623, 627, 645], "include_dataset": [19, 628], "exclude_dataset": [19, 628], "dataset": [19, 30, 31, 254, 334, 371, 391, 393, 468, 515, 554, 557, 565, 628, 645, 646, 904, 984, 1021, 1031, 1044, 1046, 1088, 1089, 1119, 1166, 1292, 1295, 1303, 1339, 1346, 1374, 1377, 1378, 1381, 1383], "given": [19, 37, 40, 41, 42, 44, 46, 48, 60, 66, 67, 68, 69, 72, 73, 74, 75, 76, 89, 95, 96, 97, 98, 101, 102, 103, 104, 105, 136, 137, 138, 154, 161, 162, 164, 172, 174, 175, 176, 177, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 198, 201, 202, 223, 228, 229, 249, 250, 251, 255, 256, 257, 258, 267, 269, 270, 271, 272, 290, 295, 296, 323, 328, 329, 330, 331, 360, 365, 366, 367, 368, 436, 456, 474, 479, 484, 488, 513, 516, 523, 529, 539, 559, 564, 565, 569, 575, 576, 589, 628, 654, 658, 659, 660, 662, 665, 667, 679, 685, 686, 687, 688, 691, 692, 693, 694, 695, 708, 714, 715, 716, 717, 720, 721, 722, 723, 724, 749, 751, 752, 753, 754, 756, 758, 759, 763, 765, 766, 767, 768, 770, 771, 773, 784, 785, 786, 800, 805, 812, 813, 815, 821, 823, 824, 825, 826, 828, 830, 831, 835, 837, 838, 839, 840, 842, 843, 845, 847, 850, 851, 873, 878, 879, 899, 900, 901, 905, 906, 907, 908, 917, 919, 920, 921, 922, 940, 945, 946, 973, 978, 979, 980, 981, 1010, 1015, 1016, 1017, 1018, 1063, 1074, 1080, 1088, 1089, 1090, 1091, 1092, 1093, 1107, 1125, 1130, 1135, 1139, 1164, 1167, 1174, 1180, 1192, 1194, 1204, 1210, 1211, 1212, 1213, 1216, 1217, 1218, 1219, 1220, 1233, 1239, 1240, 1241, 1242, 1245, 1246, 1247, 1248, 1249, 1262, 1297, 1302, 1303, 1307, 1313, 1314, 1327, 1374, 1376, 1381, 1391], "dataset1": [19, 628], "dataset2": [19, 628], "vertic": [20, 60, 89, 131, 133, 138, 144, 223, 224, 225, 230, 234, 235, 236, 237, 245, 248, 250, 252, 254, 256, 258, 266, 268, 270, 272, 290, 291, 292, 297, 301, 302, 303, 323, 324, 325, 333, 338, 339, 340, 360, 361, 362, 370, 375, 376, 377, 399, 452, 458, 459, 460, 461, 464, 469, 477, 478, 479, 490, 491, 492, 495, 496, 499, 510, 511, 512, 513, 519, 521, 523, 532, 533, 577, 595, 629, 679, 708, 779, 781, 786, 792, 873, 874, 875, 880, 884, 885, 886, 887, 895, 898, 900, 902, 904, 906, 908, 916, 918, 920, 922, 940, 941, 942, 947, 951, 952, 953, 973, 974, 975, 983, 988, 989, 990, 1010, 1011, 1012, 1020, 1025, 1026, 1027, 1052, 1088, 1089, 1103, 1109, 1110, 1111, 1112, 1115, 1120, 1128, 1129, 1130, 1141, 1142, 1143, 1146, 1147, 1150, 1161, 1162, 1163, 1164, 1170, 1172, 1174, 1183, 1184, 1204, 1233, 1315, 1333, 1367, 1377, 1378, 1381, 1391, 1392], "profil": [20, 31, 56, 130, 131, 136, 137, 138, 383, 384, 452, 461, 469, 479, 492, 495, 512, 515, 527, 528, 529, 532, 533, 551, 589, 629, 646, 675, 778, 779, 784, 785, 786, 1036, 1037, 1103, 1112, 1120, 1130, 1143, 1146, 1163, 1166, 1178, 1179, 1180, 1183, 1184, 1289, 1327, 1342, 1344, 1373, 1379, 1381, 1390, 1391, 1394, 1396], "those": [20, 63, 70, 92, 99, 139, 140, 170, 395, 470, 580, 601, 629, 682, 689, 711, 718, 747, 787, 788, 819, 1048, 1091, 1092, 1093, 1121, 1207, 1214, 1236, 1243, 1318, 1338, 1398], "vol2bird": [20, 629], "pattern": [21, 136, 137, 532, 630, 784, 785, 1183, 1268, 1366], "25": [22, 155, 156, 497, 631, 806, 807, 1088, 1089, 1148, 1346, 1350, 1366, 1367, 1370, 1374, 1383, 1388, 1390, 1391, 1392], "889375": [22, 631], "418": [22, 631], "4794775": [22, 631], "243": [22, 631], "png": [22, 208, 244, 260, 275, 308, 345, 631, 858, 894, 910, 925, 958, 995, 1031], "web": [22, 381, 391, 399, 631, 1034, 1044, 1052, 1346, 1347], "mercat": [22, 265, 631, 915], "radx_dir": [23, 637], "first": [23, 27, 33, 60, 73, 89, 102, 138, 140, 142, 147, 152, 383, 384, 394, 397, 473, 498, 514, 526, 527, 528, 535, 554, 556, 559, 585, 586, 637, 642, 648, 679, 692, 708, 721, 786, 788, 790, 796, 802, 1036, 1037, 1047, 1050, 1080, 1093, 1124, 1149, 1165, 1177, 1178, 1179, 1186, 1204, 1217, 1233, 1246, 1292, 1294, 1297, 1323, 1324, 1339, 1342, 1346, 1347, 1360, 1369, 1374, 1376, 1385, 1387, 1388, 1389, 1390, 1391, 1393, 1396], "radxconvert": [23, 637], "radx": [23, 637], "instal": [23, 121, 123, 124, 141, 146, 399, 601, 637, 740, 742, 743, 789, 794, 1052, 1390, 1397, 1398], "filenames_psr": [24, 25, 638, 639], "undo_txcorr": [24, 25, 638, 639], "cpi": [24, 25, 634, 638, 639], "mean": [24, 29, 118, 158, 449, 451, 461, 464, 468, 469, 479, 492, 500, 537, 540, 541, 547, 549, 550, 560, 561, 566, 575, 585, 586, 597, 638, 644, 737, 809, 1090, 1100, 1102, 1112, 1115, 1119, 1120, 1130, 1143, 1151, 1189, 1268, 1278, 1279, 1285, 1287, 1288, 1298, 1299, 1304, 1313, 1323, 1324, 1335, 1346, 1347, 1388, 1390, 1391, 1393, 1396], "5": [24, 25, 26, 46, 127, 129, 136, 137, 138, 141, 146, 148, 149, 150, 151, 155, 156, 157, 165, 202, 223, 230, 233, 234, 235, 236, 237, 253, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 398, 456, 497, 498, 499, 502, 504, 510, 511, 514, 519, 523, 530, 532, 534, 559, 577, 638, 639, 640, 665, 775, 777, 784, 785, 786, 789, 794, 797, 798, 799, 800, 801, 806, 807, 808, 816, 851, 873, 880, 883, 884, 885, 886, 887, 903, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1051, 1107, 1148, 1149, 1150, 1153, 1155, 1161, 1162, 1165, 1170, 1174, 1181, 1183, 1185, 1192, 1268, 1297, 1315, 1341, 1342, 1347, 1351, 1355, 1358, 1360, 1361, 1362, 1365, 1366, 1367, 1368, 1369, 1370, 1374, 1375, 1376, 1377, 1378, 1379, 1383, 1385, 1388, 1389, 1390, 1391, 1392, 1393, 1396], "correct": [24, 25, 69, 72, 98, 101, 170, 198, 199, 200, 201, 202, 203, 204, 205, 389, 454, 515, 516, 526, 569, 638, 639, 688, 691, 717, 720, 819, 847, 848, 849, 850, 851, 852, 853, 854, 1042, 1105, 1166, 1167, 1177, 1213, 1216, 1242, 1245, 1270, 1307, 1339, 1342, 1343, 1347, 1357, 1377, 1381, 1385, 1391, 1394, 1396], "transmit": [24, 25, 473, 638, 639, 1124, 1385], "remov": [24, 25, 46, 60, 71, 72, 89, 100, 101, 127, 128, 129, 138, 143, 144, 147, 155, 156, 157, 198, 199, 200, 201, 202, 203, 204, 205, 223, 230, 234, 235, 236, 237, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 405, 430, 436, 437, 468, 498, 512, 514, 561, 638, 639, 665, 679, 690, 691, 708, 719, 720, 775, 776, 777, 786, 791, 792, 796, 800, 806, 807, 808, 847, 848, 849, 850, 851, 852, 853, 854, 873, 880, 884, 885, 886, 887, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1057, 1063, 1064, 1070, 1074, 1075, 1119, 1149, 1163, 1165, 1192, 1204, 1215, 1216, 1233, 1244, 1245, 1299, 1341, 1351, 1357, 1366, 1376, 1385, 1388, 1396], "signal": [24, 25, 26, 133, 145, 148, 149, 150, 165, 202, 203, 445, 449, 451, 454, 460, 462, 465, 467, 468, 470, 471, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 500, 516, 560, 561, 566, 638, 639, 640, 781, 793, 797, 798, 799, 800, 816, 851, 852, 1096, 1100, 1102, 1105, 1111, 1113, 1116, 1118, 1119, 1121, 1122, 1127, 1128, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1151, 1167, 1298, 1299, 1304], "low_prf": [24, 25, 638, 639], "intermediate_prf": [24, 25, 638, 639], "high_prf": [24, 25, 638, 639], "within": [24, 45, 62, 63, 91, 92, 134, 138, 139, 140, 141, 142, 143, 144, 145, 152, 155, 156, 157, 159, 160, 170, 198, 237, 303, 340, 377, 446, 461, 469, 479, 492, 495, 499, 523, 524, 525, 530, 552, 553, 562, 563, 565, 575, 576, 638, 663, 681, 682, 710, 711, 747, 782, 786, 787, 788, 789, 790, 791, 792, 793, 802, 806, 807, 808, 810, 811, 819, 847, 887, 953, 990, 1027, 1087, 1090, 1091, 1092, 1093, 1097, 1112, 1120, 1130, 1143, 1146, 1150, 1174, 1175, 1176, 1181, 1206, 1207, 1235, 1236, 1277, 1290, 1291, 1300, 1301, 1303, 1313, 1314, 1338, 1346, 1347, 1357, 1358, 1381, 1385, 1387, 1392, 1396, 1398], "step": [24, 136, 137, 149, 237, 303, 340, 377, 399, 461, 469, 471, 479, 492, 493, 495, 530, 532, 561, 568, 581, 638, 784, 785, 798, 887, 953, 990, 1027, 1052, 1112, 1120, 1122, 1130, 1143, 1144, 1146, 1181, 1183, 1299, 1306, 1319, 1346, 1366, 1367, 1376, 1398], "taken": [24, 118, 126, 151, 152, 223, 290, 323, 360, 552, 553, 560, 575, 576, 638, 737, 745, 801, 802, 873, 940, 973, 1010, 1270, 1290, 1291, 1298, 1313, 1314, 1359], "fold": [25, 138, 139, 500, 639, 786, 787, 1151, 1346, 1391], "positive_awai": [25, 639], "complex": [25, 34, 465, 467, 477, 483, 484, 485, 486, 487, 488, 489, 636, 639, 650, 1116, 1118, 1128, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1188, 1389], "spectra": [25, 28, 29, 33, 89, 448, 450, 451, 457, 459, 462, 465, 467, 470, 475, 477, 482, 483, 484, 485, 486, 487, 488, 489, 500, 560, 573, 583, 592, 636, 639, 643, 644, 648, 708, 1099, 1101, 1102, 1108, 1110, 1113, 1116, 1118, 1121, 1126, 1128, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1151, 1233, 1267, 1274, 1298, 1311, 1321, 1330, 1389], "so": [25, 139, 223, 234, 290, 301, 323, 338, 360, 375, 395, 444, 573, 639, 787, 795, 873, 884, 940, 951, 973, 988, 1010, 1025, 1048, 1093, 1095, 1311, 1339, 1346, 1347, 1376, 1389, 1390, 1391, 1392, 1396, 1398], "doppler": [25, 89, 118, 138, 139, 140, 198, 448, 449, 450, 451, 454, 465, 468, 470, 485, 500, 512, 537, 560, 561, 639, 708, 737, 786, 787, 788, 847, 1099, 1100, 1101, 1102, 1105, 1116, 1119, 1121, 1136, 1151, 1163, 1189, 1233, 1298, 1299, 1339, 1340, 1343, 1344, 1359, 1369, 1381, 1382, 1393, 1394, 1396], "revers": [25, 223, 234, 290, 301, 323, 338, 360, 375, 395, 526, 639, 873, 884, 940, 951, 973, 988, 1010, 1025, 1048, 1177], "veloc": [25, 26, 40, 73, 89, 102, 138, 139, 140, 198, 446, 448, 449, 500, 510, 511, 512, 513, 521, 537, 538, 544, 589, 639, 640, 658, 692, 708, 721, 786, 787, 788, 847, 1097, 1099, 1100, 1151, 1161, 1162, 1163, 1164, 1172, 1189, 1190, 1217, 1233, 1246, 1282, 1327, 1339, 1340, 1343, 1344, 1346, 1355, 1359, 1367, 1369, 1381, 1382, 1388, 1389, 1390, 1393, 1394, 1396], "awai": [25, 639, 1391], "routin": [26, 30, 31, 33, 397, 601, 640, 645, 646, 648, 818, 1050, 1091, 1092, 1339, 1381, 1389, 1390, 1392], "rainbow5": [26, 640], "version": [26, 46, 137, 169, 523, 524, 525, 537, 600, 640, 665, 785, 1082, 1174, 1175, 1176, 1189, 1192, 1277, 1339, 1381, 1390, 1393, 1395, 1396, 1398], "22": [26, 144, 153, 161, 164, 640, 792, 803, 812, 815, 1346, 1348, 1355, 1374, 1394], "3": [26, 60, 89, 118, 119, 130, 131, 138, 139, 147, 154, 164, 198, 200, 201, 204, 235, 389, 393, 399, 453, 494, 497, 498, 512, 514, 530, 532, 561, 568, 581, 640, 679, 708, 737, 738, 778, 779, 786, 787, 796, 805, 815, 847, 849, 850, 853, 885, 1042, 1046, 1052, 1087, 1088, 1089, 1090, 1093, 1104, 1145, 1148, 1149, 1163, 1165, 1181, 1183, 1204, 1233, 1264, 1268, 1299, 1306, 1319, 1341, 1342, 1344, 1347, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1371, 1372, 1374, 1375, 1376, 1377, 1378, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1398], "34": [26, 514, 535, 640, 1165, 1186, 1376, 1379, 1392, 1394], "16": [26, 155, 159, 497, 503, 524, 537, 640, 806, 810, 1148, 1154, 1175, 1189, 1341, 1342, 1350, 1362, 1368, 1375, 1385, 1390, 1392, 1393, 1396], "35": [26, 140, 151, 152, 456, 640, 788, 801, 802, 1107, 1355, 1364, 1366, 1367, 1388], "sinc": [26, 447, 513, 526, 539, 640, 1098, 1164, 1177, 1376, 1384, 1387, 1391, 1392, 1393], "evolv": [26, 640], "constantli": [26, 640], "guaranti": [26, 640], "work": [26, 122, 125, 252, 253, 306, 334, 343, 371, 391, 393, 500, 535, 640, 741, 744, 902, 903, 956, 984, 993, 1021, 1044, 1046, 1151, 1186, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1391, 1392, 1393, 1395, 1396, 1398], "necessari": [26, 640], "adapt": [26, 118, 153, 154, 161, 164, 640, 737, 803, 805, 812, 815, 1339, 1398], "code": [26, 45, 138, 521, 537, 640, 663, 786, 1172, 1189, 1339, 1341, 1342, 1344, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1392, 1395, 1398], "accord": [26, 133, 135, 395, 444, 456, 463, 470, 471, 503, 504, 505, 507, 508, 568, 581, 640, 781, 783, 1048, 1093, 1095, 1107, 1114, 1121, 1122, 1154, 1155, 1156, 1158, 1159, 1306, 1319], "its": [26, 165, 250, 526, 584, 640, 804, 816, 900, 1177, 1322, 1381, 1391, 1395, 1396, 1398], "own": [26, 601, 640, 1355, 1381, 1389, 1392, 1395], "rais": [26, 46, 47, 61, 62, 64, 73, 90, 91, 93, 102, 168, 382, 394, 408, 436, 437, 640, 665, 666, 680, 681, 683, 692, 709, 710, 712, 721, 1035, 1047, 1063, 1064, 1074, 1075, 1192, 1193, 1205, 1206, 1208, 1217, 1234, 1235, 1237, 1246], "an": [26, 30, 31, 40, 44, 45, 46, 54, 60, 62, 63, 66, 67, 73, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 96, 102, 111, 112, 113, 114, 115, 116, 117, 131, 138, 139, 140, 141, 151, 152, 166, 169, 178, 198, 200, 201, 202, 203, 204, 205, 206, 228, 295, 328, 365, 371, 395, 398, 399, 441, 462, 469, 470, 471, 492, 502, 515, 544, 553, 557, 558, 575, 576, 580, 581, 593, 595, 602, 615, 616, 632, 633, 640, 645, 646, 658, 662, 663, 665, 673, 679, 681, 682, 685, 686, 692, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 714, 715, 721, 730, 731, 732, 733, 734, 735, 736, 755, 779, 786, 787, 788, 789, 800, 801, 802, 827, 847, 849, 850, 851, 852, 853, 854, 856, 878, 945, 978, 1015, 1021, 1031, 1048, 1051, 1052, 1068, 1078, 1080, 1087, 1088, 1090, 1091, 1092, 1093, 1113, 1120, 1121, 1122, 1143, 1153, 1166, 1192, 1200, 1204, 1206, 1207, 1210, 1211, 1217, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1239, 1240, 1246, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1282, 1291, 1295, 1296, 1313, 1314, 1318, 1319, 1331, 1333, 1339, 1344, 1347, 1350, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1368, 1369, 1370, 1371, 1372, 1374, 1376, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1391, 1393, 1394, 1395, 1396, 1397], "issu": [26, 45, 169, 306, 343, 395, 398, 640, 663, 956, 993, 1048, 1051, 1339, 1344, 1345, 1348, 1381, 1394, 1395, 1396, 1398], "upstream": [26, 640, 1396], "reflect": [26, 62, 91, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 141, 142, 143, 144, 145, 148, 149, 151, 152, 155, 156, 157, 159, 160, 170, 198, 201, 202, 225, 292, 325, 362, 445, 447, 448, 450, 452, 453, 457, 459, 460, 466, 472, 473, 474, 475, 476, 477, 480, 481, 483, 484, 488, 494, 497, 498, 499, 501, 504, 506, 507, 508, 509, 514, 516, 523, 524, 526, 530, 532, 534, 535, 572, 640, 681, 710, 747, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 789, 790, 791, 792, 793, 797, 798, 800, 801, 802, 806, 807, 808, 810, 811, 819, 847, 850, 851, 875, 942, 975, 1012, 1030, 1080, 1093, 1096, 1098, 1099, 1101, 1103, 1104, 1108, 1110, 1111, 1117, 1123, 1124, 1125, 1126, 1127, 1128, 1131, 1132, 1134, 1135, 1139, 1145, 1148, 1149, 1150, 1152, 1155, 1157, 1158, 1159, 1160, 1165, 1167, 1174, 1175, 1177, 1181, 1183, 1185, 1186, 1206, 1235, 1273, 1275, 1276, 1310, 1340, 1342, 1343, 1344, 1346, 1347, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1359, 1362, 1365, 1368, 1369, 1371, 1372, 1373, 1374, 1376, 1379, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1391, 1392, 1393, 1394], "dbuz": [26, 640], "dbzv": [26, 640], "dbuzv": [26, 640], "vu": [26, 640], "vv": [26, 640], "vvu": [26, 640], "spectrum": [26, 29, 450, 451, 500, 560, 561, 640, 644, 1101, 1102, 1151, 1298, 1299, 1339, 1389, 1393], "width": [26, 130, 153, 154, 164, 165, 251, 253, 267, 334, 371, 450, 451, 452, 472, 640, 778, 803, 804, 805, 815, 816, 901, 903, 917, 984, 1021, 1031, 1093, 1101, 1102, 1103, 1123, 1393], "w": [26, 77, 106, 140, 153, 161, 164, 456, 497, 501, 516, 523, 530, 532, 640, 696, 725, 788, 803, 812, 815, 1107, 1148, 1152, 1167, 1174, 1181, 1183, 1221, 1250, 1377, 1390, 1391, 1392], "wu": [26, 640, 1087, 1090, 1387], "wv": [26, 640], "wvu": [26, 640], "differenti": [26, 34, 127, 128, 129, 134, 142, 144, 145, 148, 149, 151, 152, 155, 156, 157, 159, 160, 198, 201, 457, 458, 459, 460, 464, 468, 483, 484, 499, 501, 505, 508, 523, 524, 525, 526, 527, 528, 530, 533, 640, 650, 775, 776, 777, 782, 790, 792, 793, 797, 798, 801, 802, 806, 807, 808, 810, 811, 847, 850, 1108, 1109, 1110, 1111, 1115, 1119, 1134, 1135, 1150, 1152, 1156, 1159, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1184, 1188, 1359, 1381, 1392], "zdr": [26, 128, 129, 133, 144, 145, 148, 149, 155, 156, 157, 165, 201, 442, 455, 456, 474, 523, 640, 776, 777, 781, 792, 793, 797, 798, 806, 807, 808, 816, 850, 1106, 1107, 1125, 1174, 1390, 1392], "zdru": [26, 640], "co": [26, 118, 122, 125, 143, 144, 145, 155, 156, 157, 198, 498, 513, 514, 546, 640, 737, 741, 744, 791, 792, 793, 806, 807, 808, 847, 1149, 1164, 1165, 1284, 1376], "correl": [26, 143, 144, 145, 155, 156, 157, 198, 201, 202, 499, 501, 521, 523, 530, 532, 548, 550, 572, 640, 791, 792, 793, 800, 806, 807, 808, 847, 850, 851, 1150, 1152, 1172, 1174, 1181, 1183, 1286, 1288, 1310, 1358, 1359, 1375, 1376], "coeffici": [26, 127, 128, 129, 148, 149, 150, 151, 153, 164, 198, 456, 497, 499, 501, 502, 523, 530, 548, 550, 551, 572, 640, 775, 776, 777, 797, 798, 799, 801, 803, 815, 847, 1107, 1148, 1150, 1152, 1153, 1174, 1181, 1286, 1288, 1289, 1310, 1358, 1359, 1375], "rhohv": [26, 133, 143, 144, 145, 155, 156, 157, 201, 202, 442, 452, 455, 456, 463, 467, 477, 478, 489, 523, 530, 532, 640, 781, 791, 792, 793, 800, 806, 807, 808, 850, 851, 1103, 1106, 1107, 1114, 1118, 1128, 1129, 1140, 1174, 1181, 1183, 1358, 1392, 1393], "rhohvu": [26, 640], "phase": [26, 34, 127, 128, 129, 134, 140, 142, 144, 145, 151, 152, 155, 156, 157, 159, 160, 201, 457, 458, 464, 468, 483, 486, 492, 499, 501, 505, 508, 521, 523, 524, 525, 526, 527, 528, 533, 640, 650, 775, 776, 777, 782, 788, 790, 792, 793, 801, 802, 806, 807, 808, 810, 811, 850, 1108, 1109, 1115, 1119, 1134, 1137, 1143, 1150, 1152, 1156, 1159, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1184, 1188, 1359, 1381, 1385, 1392], "phidp": [26, 128, 129, 134, 142, 144, 145, 151, 152, 155, 156, 157, 159, 160, 201, 524, 525, 526, 640, 776, 777, 782, 790, 792, 793, 801, 802, 806, 807, 808, 810, 811, 850, 1175, 1176, 1177, 1381, 1392], "uphidp": [26, 640], "uphidpu": [26, 640], "kdp": [26, 145, 151, 152, 155, 156, 157, 442, 456, 505, 508, 523, 524, 525, 526, 527, 528, 640, 793, 801, 802, 806, 807, 808, 1107, 1156, 1159, 1174, 1175, 1176, 1177, 1178, 1179, 1377, 1381], "ukdp": [26, 640], "ukdpu": [26, 640], "qualiti": [26, 133, 153, 154, 161, 164, 202, 527, 528, 640, 781, 800, 803, 805, 812, 815, 851, 1178, 1179, 1346], "sqi": [26, 640], "sqiu": [26, 640], "sqiv": [26, 640], "sqivu": [26, 640], "temperatur": [26, 128, 129, 136, 137, 143, 144, 145, 147, 155, 156, 157, 204, 499, 519, 523, 530, 532, 640, 776, 777, 784, 785, 791, 792, 793, 796, 806, 807, 808, 853, 1150, 1170, 1174, 1181, 1183, 1377, 1392], "temp": [26, 640, 1339, 1392], "bin": [26, 60, 89, 118, 119, 120, 129, 142, 143, 144, 145, 148, 159, 160, 394, 461, 469, 479, 492, 495, 500, 520, 524, 525, 534, 559, 560, 566, 578, 640, 679, 708, 737, 738, 739, 777, 790, 791, 792, 793, 797, 810, 811, 1047, 1112, 1120, 1130, 1143, 1146, 1151, 1171, 1175, 1176, 1185, 1204, 1233, 1297, 1298, 1304, 1316, 1350, 1385, 1389, 1393], "respect": [26, 60, 89, 162, 163, 165, 444, 498, 499, 501, 514, 523, 530, 531, 532, 534, 535, 640, 679, 708, 804, 813, 814, 816, 1095, 1149, 1150, 1152, 1165, 1174, 1181, 1182, 1183, 1185, 1186, 1204, 1233], "iso0": [26, 128, 136, 137, 143, 144, 147, 155, 156, 157, 200, 456, 499, 501, 519, 523, 530, 531, 532, 536, 640, 776, 784, 785, 791, 792, 796, 806, 807, 808, 849, 1107, 1150, 1152, 1170, 1174, 1181, 1182, 1183, 1187], "visibl": [26, 135, 205, 516, 574, 640, 783, 854, 1167, 1312, 1381], "digit": [26, 237, 303, 340, 377, 516, 615, 616, 632, 633, 640, 887, 953, 990, 1027, 1167, 1339, 1390], "elev": [26, 31, 60, 67, 72, 83, 89, 96, 101, 112, 118, 119, 120, 136, 137, 144, 145, 148, 149, 150, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 198, 206, 223, 225, 230, 234, 235, 236, 237, 250, 256, 258, 268, 270, 272, 273, 290, 292, 297, 301, 302, 303, 306, 323, 325, 333, 334, 338, 339, 340, 343, 360, 362, 370, 371, 375, 376, 377, 395, 444, 469, 492, 493, 513, 516, 520, 528, 530, 553, 559, 570, 574, 577, 582, 640, 646, 679, 686, 691, 702, 708, 715, 720, 731, 737, 738, 739, 784, 785, 792, 793, 795, 797, 798, 799, 803, 804, 805, 806, 807, 808, 812, 813, 814, 815, 816, 847, 856, 873, 875, 880, 884, 885, 886, 887, 900, 906, 908, 918, 920, 922, 923, 940, 942, 947, 951, 952, 953, 956, 973, 975, 983, 984, 988, 989, 990, 993, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1048, 1088, 1095, 1120, 1143, 1144, 1164, 1167, 1171, 1179, 1181, 1204, 1211, 1216, 1227, 1233, 1240, 1245, 1256, 1291, 1297, 1308, 1312, 1315, 1320, 1339, 1350, 1375, 1383, 1390, 1391, 1392, 1393], "model": [26, 30, 31, 60, 89, 118, 119, 136, 137, 139, 237, 303, 340, 377, 392, 398, 497, 516, 530, 532, 551, 640, 645, 646, 679, 708, 737, 738, 784, 785, 787, 887, 953, 990, 1027, 1045, 1051, 1148, 1167, 1181, 1183, 1204, 1233, 1289, 1377, 1392], "dem": [26, 237, 303, 340, 377, 516, 640, 887, 953, 990, 1027, 1167, 1381], "vi": [26, 456, 523, 640, 1107, 1174, 1377, 1390, 1392], "introduc": [26, 396, 528, 530, 640, 1049, 1179, 1181], "swissbirdradar": [29, 644, 1339], "degre": [29, 48, 56, 70, 71, 99, 100, 118, 119, 120, 121, 122, 123, 124, 125, 126, 147, 151, 152, 162, 163, 204, 206, 223, 228, 229, 237, 249, 251, 255, 257, 265, 267, 269, 271, 273, 290, 295, 296, 303, 306, 323, 328, 329, 332, 334, 340, 343, 360, 365, 366, 369, 371, 377, 461, 472, 492, 530, 537, 541, 543, 552, 553, 563, 564, 565, 577, 586, 590, 644, 667, 675, 689, 690, 718, 719, 737, 738, 739, 740, 741, 742, 743, 744, 745, 795, 796, 801, 802, 813, 814, 853, 856, 873, 878, 879, 887, 899, 901, 905, 907, 915, 917, 919, 921, 923, 940, 945, 946, 953, 956, 973, 978, 979, 982, 984, 990, 993, 1010, 1015, 1016, 1019, 1021, 1027, 1112, 1123, 1143, 1181, 1189, 1194, 1214, 1215, 1243, 1244, 1279, 1281, 1290, 1291, 1301, 1302, 1303, 1315, 1324, 1328, 1371, 1374, 1393, 1396], "abov": [29, 56, 57, 60, 62, 89, 91, 127, 128, 129, 130, 131, 136, 137, 138, 141, 143, 144, 146, 147, 151, 152, 155, 156, 157, 159, 172, 186, 198, 200, 201, 202, 204, 228, 229, 295, 296, 328, 329, 365, 366, 444, 445, 456, 497, 498, 502, 514, 516, 524, 530, 532, 537, 559, 560, 561, 564, 565, 644, 675, 676, 679, 681, 708, 710, 749, 763, 775, 776, 777, 778, 779, 784, 785, 786, 789, 791, 792, 794, 796, 800, 801, 802, 806, 807, 808, 810, 821, 835, 847, 849, 850, 851, 853, 878, 879, 945, 946, 978, 979, 1015, 1016, 1030, 1093, 1095, 1096, 1107, 1148, 1149, 1153, 1165, 1167, 1175, 1181, 1183, 1189, 1204, 1206, 1233, 1235, 1297, 1298, 1299, 1302, 1303, 1344, 1350, 1365, 1367, 1373, 1378, 1379, 1381, 1383, 1385, 1389, 1391, 1394, 1396, 1398], "sea": [29, 56, 57, 60, 89, 537, 644, 675, 676, 679, 708, 1189, 1204, 1233, 1396], "level": [29, 30, 31, 48, 54, 56, 57, 60, 77, 89, 106, 128, 129, 244, 245, 246, 247, 252, 253, 254, 256, 258, 260, 261, 262, 263, 268, 270, 272, 391, 392, 393, 399, 400, 465, 470, 485, 501, 521, 530, 531, 532, 535, 537, 560, 561, 644, 645, 646, 667, 673, 675, 676, 679, 696, 708, 725, 776, 777, 894, 895, 896, 897, 902, 903, 904, 906, 908, 910, 911, 912, 913, 918, 920, 922, 1044, 1045, 1046, 1052, 1053, 1116, 1121, 1136, 1152, 1172, 1181, 1182, 1183, 1186, 1189, 1194, 1200, 1204, 1221, 1233, 1250, 1298, 1299, 1366, 1367, 1370, 1375, 1381, 1387, 1390, 1392, 1393, 1396], "meter": [29, 56, 57, 58, 59, 71, 72, 73, 100, 101, 102, 118, 119, 120, 121, 122, 123, 124, 125, 126, 147, 206, 237, 273, 303, 306, 331, 334, 340, 343, 368, 371, 377, 445, 498, 514, 521, 526, 529, 535, 537, 563, 590, 644, 675, 676, 677, 678, 690, 691, 692, 719, 720, 721, 737, 738, 739, 740, 741, 742, 743, 744, 745, 796, 856, 887, 923, 953, 956, 981, 984, 990, 993, 1018, 1021, 1027, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1093, 1096, 1149, 1165, 1172, 1177, 1180, 1186, 1189, 1215, 1216, 1217, 1244, 1245, 1246, 1264, 1301, 1328, 1350, 1378, 1387, 1391, 1393, 1396], "compress": [30, 31, 381, 389, 390, 645, 646, 1034, 1042, 1043, 1389], "gzip": [30, 31, 381, 389, 390, 645, 646, 1034, 1042, 1043], "compression_opt": [30, 31, 645, 646], "6": [30, 31, 133, 136, 137, 158, 159, 160, 201, 497, 499, 504, 512, 516, 519, 523, 524, 525, 532, 561, 568, 581, 645, 646, 781, 784, 785, 809, 810, 811, 850, 1148, 1150, 1155, 1163, 1167, 1170, 1174, 1175, 1176, 1183, 1299, 1306, 1319, 1347, 1350, 1355, 1356, 1359, 1360, 1363, 1375, 1377, 1378, 1381, 1383, 1385, 1388, 1390, 1391, 1392, 1393, 1395, 1398], "undefined_valu": [30, 31, 645, 646], "odim_convent": [30, 31, 645, 646], "v2_2": [30, 31, 645, 646], "write": [30, 31, 32, 33, 397, 398, 399, 400, 401, 645, 646, 647, 648, 1050, 1051, 1052, 1053, 1054, 1191, 1202, 1339, 1344, 1345, 1384], "eumetnet": [30, 31, 645, 646], "opera": [30, 31, 645, 646, 1339, 1381], "compliant": [30, 31, 397, 645, 646, 1050], "produc": [30, 31, 33, 141, 388, 397, 399, 402, 470, 471, 533, 538, 645, 646, 648, 789, 1041, 1050, 1052, 1056, 1121, 1122, 1184, 1190, 1381, 1396], "follow": [30, 31, 33, 140, 198, 201, 202, 397, 398, 400, 401, 440, 497, 500, 516, 523, 526, 530, 532, 645, 646, 648, 788, 800, 847, 850, 851, 1050, 1051, 1053, 1054, 1067, 1077, 1091, 1092, 1093, 1148, 1151, 1167, 1174, 1177, 1181, 1183, 1346, 1374, 1381, 1389, 1390, 1391, 1392, 1395, 1396], "inform": [30, 31, 40, 46, 60, 77, 89, 106, 127, 138, 148, 149, 150, 151, 152, 183, 195, 223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 385, 387, 395, 398, 523, 526, 535, 600, 604, 615, 616, 632, 633, 645, 646, 658, 665, 679, 696, 708, 725, 760, 772, 775, 786, 797, 798, 799, 801, 802, 832, 844, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1038, 1040, 1048, 1051, 1174, 1177, 1186, 1192, 1204, 1221, 1233, 1250, 1347, 1367, 1381, 1389, 1396], "http": [30, 31, 126, 391, 392, 393, 447, 498, 514, 521, 572, 645, 646, 745, 1044, 1045, 1046, 1098, 1149, 1165, 1172, 1310, 1339, 1358, 1367, 1376, 1381, 1390, 1395, 1396, 1398], "www": [30, 31, 126, 391, 392, 393, 521, 645, 646, 745, 1044, 1045, 1046, 1172, 1396], "eu": [30, 31, 645, 646], "wp": [30, 31, 645, 646], "content": [30, 31, 645, 646, 1390], "upload": [30, 31, 645, 646], "2021": [30, 31, 645, 646, 1376, 1381, 1391], "07": [30, 31, 645, 646, 1338, 1347, 1358, 1372, 1376, 1393, 1394], "odim_h5_v2": [30, 31, 645, 646], "pdf": [30, 31, 223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 645, 646, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027], "save": [30, 31, 55, 208, 223, 225, 230, 234, 235, 236, 237, 244, 260, 275, 290, 292, 297, 301, 302, 303, 308, 323, 325, 333, 334, 338, 339, 340, 345, 360, 362, 370, 371, 375, 376, 377, 398, 400, 645, 646, 674, 858, 873, 875, 880, 884, 885, 886, 887, 894, 910, 925, 940, 942, 947, 951, 952, 953, 958, 973, 975, 983, 984, 988, 989, 990, 995, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1031, 1051, 1053, 1201, 1381, 1382], "equal": [30, 31, 63, 92, 121, 123, 124, 139, 175, 176, 181, 189, 190, 193, 371, 389, 400, 497, 535, 537, 559, 582, 645, 646, 682, 711, 740, 742, 743, 752, 753, 758, 766, 767, 770, 787, 824, 825, 830, 838, 839, 842, 1021, 1042, 1053, 1148, 1186, 1189, 1207, 1236, 1297, 1320, 1358, 1376, 1377, 1388, 1391, 1392], "_fillvalu": [30, 31, 33, 397, 398, 645, 646, 648, 1050, 1051, 1384, 1393], "fill": [30, 31, 43, 127, 128, 129, 535, 645, 646, 661, 775, 776, 777, 1186, 1383, 1384], "linear": [30, 31, 128, 136, 137, 151, 152, 391, 498, 514, 528, 547, 560, 561, 573, 589, 645, 646, 776, 784, 785, 801, 802, 1044, 1149, 1165, 1179, 1285, 1298, 1299, 1311, 1327, 1376, 1381], "keyword": [30, 31, 33, 222, 289, 322, 334, 359, 371, 391, 393, 468, 516, 645, 646, 648, 872, 939, 972, 984, 1009, 1021, 1031, 1044, 1046, 1119, 1167, 1384, 1387], "scale_factor": [30, 31, 33, 400, 645, 646, 648, 1053], "add_offset": [30, 31, 33, 400, 645, 646, 648, 1053], "calcul": [30, 31, 33, 34, 46, 48, 60, 71, 72, 89, 100, 101, 118, 119, 123, 127, 128, 129, 143, 144, 147, 151, 152, 155, 156, 157, 162, 170, 198, 200, 201, 202, 203, 204, 205, 206, 237, 273, 303, 306, 340, 343, 377, 445, 446, 453, 472, 473, 480, 494, 497, 498, 514, 516, 521, 533, 537, 538, 544, 546, 559, 560, 563, 564, 565, 571, 590, 596, 597, 598, 599, 645, 646, 648, 650, 665, 667, 679, 690, 691, 708, 719, 720, 737, 738, 742, 747, 775, 776, 777, 791, 792, 796, 800, 801, 802, 806, 807, 808, 813, 819, 847, 849, 850, 851, 852, 853, 854, 856, 887, 923, 953, 956, 990, 993, 1027, 1031, 1091, 1092, 1093, 1096, 1097, 1104, 1123, 1124, 1131, 1145, 1148, 1149, 1165, 1167, 1172, 1184, 1188, 1189, 1190, 1192, 1194, 1204, 1215, 1216, 1233, 1244, 1245, 1282, 1284, 1297, 1298, 1301, 1302, 1303, 1309, 1328, 1334, 1335, 1336, 1337, 1341, 1344, 1350, 1366, 1367, 1373, 1376, 1379, 1381, 1385, 1388, 1394, 1396], "fly": [30, 31, 33, 645, 646, 648], "_write_as_dtyp": [30, 31, 33, 400, 645, 646, 648, 1053], "datatyp": [30, 31, 645, 646, 1339], "It": [30, 31, 147, 153, 415, 429, 513, 516, 528, 530, 537, 544, 560, 645, 646, 796, 803, 1031, 1093, 1164, 1167, 1179, 1181, 1189, 1282, 1298, 1350, 1389, 1390, 1392, 1396, 1398], "uint8": [30, 31, 400, 645, 646, 1053], "uint16": [30, 31, 400, 645, 646, 1053], "typic": [30, 31, 122, 125, 139, 170, 174, 176, 183, 190, 195, 399, 645, 646, 741, 744, 747, 751, 753, 760, 767, 772, 787, 819, 823, 825, 832, 839, 844, 1052, 1087, 1091, 1092, 1389, 1398], "lzf": [30, 31, 645, 646], "recomend": [30, 31, 645, 646], "replac": [30, 31, 47, 61, 62, 63, 90, 91, 92, 139, 140, 174, 176, 183, 190, 195, 645, 646, 666, 680, 681, 682, 709, 710, 711, 751, 753, 760, 767, 772, 787, 788, 823, 825, 832, 839, 844, 1193, 1205, 1206, 1207, 1234, 1235, 1236, 1339], "exampl": [30, 31, 45, 62, 91, 170, 223, 230, 233, 234, 235, 236, 237, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 402, 559, 645, 646, 663, 681, 710, 747, 819, 873, 880, 883, 884, 885, 886, 887, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1056, 1080, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1202, 1206, 1235, 1297, 1341, 1342, 1343, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1383, 1385, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1398], "NOT": [30, 31, 170, 645, 646, 747, 819], "written": [30, 31, 398, 400, 401, 645, 646, 1051, 1053, 1054, 1339, 1381], "odim": [30, 31, 645, 646, 1339], "convent": [30, 31, 60, 89, 138, 449, 468, 512, 537, 538, 645, 646, 679, 708, 786, 1100, 1119, 1163, 1189, 1190, 1204, 1233, 1339, 1346, 1381, 1391, 1393], "v2_3": [30, 31, 645, 646], "support": [31, 252, 253, 334, 371, 382, 390, 391, 392, 393, 394, 402, 516, 526, 601, 646, 902, 903, 984, 1021, 1031, 1035, 1043, 1044, 1045, 1046, 1047, 1055, 1056, 1080, 1090, 1167, 1177, 1339, 1366, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1395], "featur": [31, 456, 514, 646, 1031, 1107, 1165, 1358, 1376, 1381, 1392], "ppi": [31, 60, 89, 139, 140, 141, 146, 222, 226, 230, 289, 293, 297, 322, 326, 333, 334, 359, 363, 370, 371, 469, 492, 516, 528, 552, 553, 559, 646, 679, 708, 787, 788, 789, 794, 872, 876, 880, 939, 943, 947, 972, 976, 983, 984, 1009, 1013, 1020, 1021, 1088, 1089, 1120, 1143, 1167, 1179, 1204, 1233, 1265, 1266, 1270, 1273, 1275, 1290, 1291, 1297, 1344, 1354, 1357, 1358, 1370, 1372, 1381, 1391, 1392, 1393, 1394], "pvol": [31, 646], "differ": [31, 121, 123, 124, 136, 137, 138, 148, 149, 150, 155, 156, 157, 497, 498, 500, 504, 512, 514, 526, 532, 580, 582, 646, 740, 742, 743, 784, 785, 786, 795, 797, 798, 799, 806, 807, 808, 1030, 1080, 1088, 1089, 1148, 1149, 1151, 1155, 1163, 1165, 1177, 1183, 1318, 1320, 1339, 1346, 1350, 1376, 1387, 1389, 1390, 1391, 1392, 1395, 1396], "group": [31, 646, 1396], "sector": [31, 60, 89, 646, 679, 708, 1204, 1233, 1393], "azim": [31, 646], "rhi": [31, 60, 89, 222, 223, 234, 289, 290, 301, 322, 323, 338, 359, 360, 375, 469, 492, 501, 528, 530, 552, 553, 559, 570, 582, 646, 679, 708, 872, 873, 884, 939, 940, 951, 972, 973, 988, 1009, 1010, 1025, 1089, 1120, 1143, 1152, 1179, 1181, 1204, 1233, 1266, 1276, 1290, 1291, 1297, 1308, 1320, 1344, 1354, 1372, 1381, 1391, 1393, 1394], "Not": [31, 382, 390, 646, 1035, 1043], "yet": [31, 395, 646, 1048, 1346, 1381], "fix": [31, 493, 601, 646, 1144, 1339, 1344, 1345, 1348, 1369, 1383, 1392, 1394, 1395, 1396, 1398], "stare": [31, 646], "mode": [31, 60, 77, 89, 106, 381, 493, 530, 646, 679, 696, 708, 725, 1034, 1144, 1181, 1204, 1221, 1233, 1250, 1393, 1395, 1396], "take": [32, 62, 91, 139, 153, 234, 301, 338, 375, 445, 526, 647, 681, 710, 787, 803, 884, 951, 988, 1025, 1091, 1092, 1093, 1096, 1177, 1206, 1235, 1346, 1347, 1350, 1357, 1376, 1389, 1392, 1396], "sinarame_h5": [32, 641, 647], "everi": [32, 500, 527, 528, 537, 647, 1090, 1151, 1178, 1179, 1189, 1381, 1391], "one": [32, 33, 41, 46, 54, 55, 60, 62, 89, 91, 136, 137, 146, 160, 174, 176, 183, 190, 195, 198, 202, 397, 398, 400, 444, 447, 490, 500, 501, 510, 511, 526, 527, 528, 530, 531, 532, 549, 552, 553, 559, 572, 582, 583, 589, 647, 648, 659, 665, 673, 674, 679, 681, 708, 710, 751, 753, 760, 767, 772, 784, 785, 794, 800, 811, 823, 825, 832, 839, 844, 847, 851, 1050, 1051, 1053, 1080, 1087, 1090, 1091, 1092, 1093, 1095, 1098, 1141, 1151, 1152, 1161, 1162, 1177, 1178, 1179, 1181, 1182, 1183, 1192, 1200, 1201, 1204, 1206, 1233, 1235, 1287, 1290, 1291, 1297, 1310, 1320, 1321, 1327, 1339, 1344, 1349, 1350, 1355, 1381, 1384, 1389, 1390, 1391, 1392, 1393, 1396, 1398], "volum": [32, 60, 89, 138, 140, 141, 334, 371, 391, 392, 393, 401, 443, 461, 469, 479, 492, 493, 495, 499, 501, 512, 515, 520, 530, 532, 537, 538, 552, 553, 555, 574, 591, 592, 595, 647, 679, 708, 786, 788, 789, 984, 1021, 1044, 1045, 1046, 1054, 1080, 1088, 1089, 1112, 1120, 1130, 1143, 1144, 1146, 1150, 1152, 1163, 1166, 1171, 1181, 1183, 1189, 1190, 1204, 1233, 1290, 1291, 1293, 1312, 1329, 1330, 1333, 1344, 1354, 1372, 1394], "folder": [32, 647, 1396], "netcdf4": [33, 55, 392, 397, 398, 648, 674, 1045, 1050, 1051, 1201, 1364, 1381, 1383, 1395, 1398], "time_refer": [33, 397, 648, 1050, 1383], "arm_time_vari": [33, 55, 397, 398, 648, 674, 1050, 1051, 1201], "standard": [33, 55, 60, 77, 89, 106, 118, 119, 138, 148, 149, 165, 385, 397, 398, 399, 447, 470, 499, 512, 527, 542, 543, 571, 576, 601, 648, 674, 679, 696, 708, 725, 737, 738, 786, 797, 798, 804, 816, 1038, 1050, 1051, 1052, 1098, 1121, 1150, 1163, 1178, 1201, 1204, 1221, 1233, 1250, 1268, 1280, 1281, 1309, 1314, 1383, 1384, 1385, 1390, 1392, 1396], "attempt": [33, 139, 140, 397, 398, 648, 787, 788, 1050, 1051], "also": [33, 45, 60, 89, 174, 224, 248, 266, 291, 324, 334, 361, 392, 393, 397, 399, 401, 439, 498, 514, 648, 663, 679, 708, 751, 823, 874, 898, 916, 941, 974, 984, 1011, 1045, 1046, 1050, 1052, 1054, 1066, 1076, 1080, 1088, 1149, 1165, 1204, 1233, 1346, 1350, 1376, 1381, 1383, 1387, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1398], "made": [33, 62, 91, 397, 446, 595, 648, 681, 710, 1050, 1097, 1206, 1235, 1333, 1396], "meet": [33, 174, 176, 183, 190, 195, 397, 648, 751, 753, 760, 767, 772, 823, 825, 832, 839, 844, 1050], "mani": [33, 397, 456, 648, 1050, 1107, 1381, 1387, 1391, 1396, 1398], "outlin": [33, 397, 526, 560, 561, 648, 1050, 1177, 1298, 1299, 1396], "To": [33, 46, 62, 91, 198, 200, 201, 202, 203, 204, 205, 397, 398, 400, 595, 648, 665, 681, 710, 800, 847, 849, 850, 851, 852, 853, 854, 1050, 1051, 1053, 1192, 1206, 1235, 1333, 1381, 1384, 1387, 1389, 1391, 1395, 1396, 1398], "control": [33, 45, 138, 153, 154, 161, 164, 395, 397, 398, 523, 526, 530, 648, 663, 786, 803, 805, 812, 815, 1048, 1050, 1051, 1093, 1174, 1177, 1181, 1387], "how": [33, 62, 91, 395, 397, 398, 456, 501, 648, 681, 710, 1048, 1050, 1051, 1107, 1152, 1206, 1235, 1346, 1347, 1355, 1356, 1357, 1381, 1384, 1387, 1388, 1390, 1398], "_zlib": [33, 397, 398, 648, 1050, 1051], "_deflatelevel": [33, 397, 398, 648, 1050, 1051], "_shuffl": [33, 397, 398, 648, 1050, 1051], "_fletcher32": [33, 397, 398, 648, 1050, 1051], "_contingu": [33, 397, 398, 648, 1050, 1051], "_chunksiz": [33, 397, 398, 648, 1050, 1051], "_endian": [33, 397, 398, 648, 1050, 1051], "_least_significant_digit": [33, 397, 398, 648, 1050, 1051], "see": [33, 62, 91, 119, 138, 170, 222, 236, 249, 253, 255, 257, 265, 269, 271, 289, 302, 322, 334, 339, 359, 371, 376, 389, 397, 398, 497, 498, 501, 514, 521, 535, 648, 681, 710, 738, 747, 786, 819, 872, 886, 899, 903, 905, 907, 915, 919, 921, 939, 952, 972, 984, 989, 1009, 1021, 1026, 1042, 1050, 1051, 1093, 1148, 1149, 1152, 1165, 1172, 1186, 1206, 1235, 1346, 1347, 1355, 1376, 1383, 1385, 1387, 1388, 1389, 1390, 1391, 1396], "document": [33, 138, 249, 253, 255, 257, 265, 269, 271, 334, 371, 392, 397, 398, 589, 648, 786, 899, 903, 905, 907, 915, 919, 921, 984, 1021, 1045, 1050, 1051, 1327, 1338, 1381, 1387, 1396], "detail": [33, 119, 138, 170, 253, 265, 334, 371, 397, 398, 498, 514, 648, 738, 747, 786, 819, 903, 915, 984, 1021, 1050, 1051, 1087, 1090, 1093, 1149, 1165, 1376, 1381, 1393, 1396], "netcdf4_class": [33, 55, 397, 398, 648, 674, 1050, 1051, 1201], "netcdf3_class": [33, 55, 397, 398, 648, 674, 1050, 1051, 1201], "netcdf3_64bit": [33, 55, 397, 398, 648, 674, 1050, 1051, 1201], "non": [33, 121, 123, 124, 140, 395, 397, 497, 498, 514, 526, 528, 601, 648, 740, 742, 743, 788, 1048, 1050, 1148, 1149, 1165, 1177, 1179, 1376], "zero": [33, 397, 498, 514, 516, 522, 526, 582, 589, 615, 648, 1030, 1050, 1149, 1165, 1167, 1173, 1177, 1320, 1327, 1339, 1376, 1384, 1388], "base_tim": [33, 55, 397, 398, 648, 674, 1050, 1051, 1201, 1374], "time_offset": [33, 55, 397, 398, 648, 674, 1050, 1051, 1201, 1374], "phidp_field": [34, 127, 128, 129, 134, 142, 144, 145, 151, 152, 155, 156, 157, 159, 160, 524, 525, 526, 527, 528, 650, 775, 776, 777, 782, 790, 792, 793, 801, 802, 806, 807, 808, 810, 811, 1175, 1176, 1177, 1178, 1179, 1188, 1341, 1377, 1392], "phidp_texture_field": [34, 650, 1188], "textur": [34, 201, 446, 544, 571, 594, 650, 850, 1097, 1188, 1282, 1309, 1332, 1381, 1385, 1392], "real": [34, 138, 650, 786, 1188, 1344, 1354, 1376, 1381, 1396, 1398], "part": [34, 503, 559, 650, 1154, 1188, 1297, 1346, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393], "shift": [34, 134, 142, 151, 152, 155, 159, 160, 206, 273, 306, 343, 500, 522, 524, 525, 527, 559, 650, 782, 790, 801, 802, 806, 810, 811, 856, 923, 956, 993, 1151, 1173, 1175, 1176, 1178, 1188, 1297, 1385, 1392], "texture_field": [34, 650, 1188], "gourlei": [34, 133, 155, 156, 157, 650, 781, 806, 807, 808, 1188], "j": [34, 122, 125, 140, 151, 152, 153, 154, 161, 164, 447, 497, 498, 501, 514, 523, 527, 528, 530, 533, 535, 537, 538, 650, 741, 744, 788, 801, 802, 803, 805, 812, 815, 1098, 1148, 1149, 1152, 1165, 1174, 1178, 1179, 1181, 1184, 1186, 1188, 1189, 1190, 1341, 1342, 1351, 1352, 1359, 1360, 1362, 1364, 1368, 1371, 1376, 1381, 1396], "p": [34, 36, 38, 44, 118, 122, 125, 153, 154, 161, 164, 451, 456, 465, 469, 470, 479, 485, 492, 497, 503, 533, 560, 650, 653, 655, 662, 737, 741, 744, 803, 805, 812, 815, 1087, 1090, 1102, 1107, 1116, 1120, 1121, 1130, 1136, 1143, 1148, 1154, 1184, 1188, 1262, 1298, 1381, 1396], "tabari": [34, 650, 1188], "parent": [34, 650, 1188], "du": [34, 650, 1188], "chatelet": [34, 650, 1188], "fuzzi": [34, 650, 1188], "logic": [34, 174, 176, 183, 190, 195, 650, 751, 753, 760, 767, 772, 823, 825, 832, 839, 844, 1188], "algorithm": [34, 136, 137, 138, 139, 140, 149, 155, 156, 170, 429, 451, 456, 470, 471, 497, 498, 501, 502, 514, 526, 530, 535, 650, 747, 784, 785, 786, 787, 788, 798, 806, 807, 819, 1087, 1093, 1102, 1107, 1121, 1122, 1148, 1149, 1152, 1153, 1165, 1177, 1181, 1186, 1188, 1340, 1343, 1344, 1381, 1391, 1392, 1394, 1396], "separ": [34, 150, 497, 516, 521, 535, 537, 560, 572, 650, 799, 1088, 1089, 1148, 1167, 1172, 1186, 1188, 1189, 1298, 1310, 1346, 1358, 1390, 1391, 1398], "precipit": [34, 134, 137, 142, 159, 160, 479, 492, 497, 523, 572, 650, 782, 785, 790, 810, 811, 1093, 1130, 1143, 1148, 1174, 1188, 1310, 1350, 1358, 1376, 1391, 1392, 1396], "nonprecipit": [34, 650, 1188], "echo": [34, 497, 498, 514, 516, 523, 650, 1148, 1149, 1165, 1167, 1174, 1188, 1376, 1388, 1391], "polarimetr": [34, 127, 128, 129, 133, 151, 152, 461, 467, 468, 469, 479, 492, 501, 504, 523, 530, 533, 534, 650, 775, 776, 777, 781, 801, 802, 1112, 1118, 1119, 1120, 1130, 1143, 1152, 1155, 1174, 1181, 1184, 1185, 1188, 1341, 1392], "observ": [34, 118, 136, 137, 153, 154, 156, 161, 164, 456, 479, 492, 498, 514, 526, 532, 551, 650, 737, 784, 785, 803, 805, 807, 812, 815, 1107, 1130, 1143, 1149, 1165, 1177, 1183, 1188, 1289, 1376, 1392], "journal": [34, 138, 140, 451, 465, 470, 471, 485, 503, 516, 560, 561, 650, 786, 788, 1087, 1090, 1102, 1116, 1121, 1122, 1136, 1154, 1167, 1188, 1298, 1299, 1381, 1396], "atmospher": [34, 60, 89, 118, 119, 138, 139, 153, 164, 444, 471, 503, 516, 529, 561, 650, 679, 708, 737, 738, 786, 787, 803, 815, 1093, 1095, 1122, 1154, 1167, 1180, 1188, 1204, 1233, 1299, 1346, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "ocean": [34, 138, 151, 152, 471, 498, 503, 514, 516, 533, 561, 650, 786, 801, 802, 1122, 1149, 1154, 1165, 1167, 1184, 1188, 1299, 1346, 1376], "technologi": [34, 138, 471, 503, 516, 561, 650, 786, 1122, 1154, 1167, 1188, 1299], "24": [34, 650, 1188, 1347, 1390, 1391], "8": [34, 77, 106, 126, 127, 138, 151, 155, 156, 201, 250, 252, 253, 254, 256, 258, 268, 270, 272, 497, 539, 561, 650, 696, 725, 745, 775, 786, 801, 806, 807, 850, 900, 902, 903, 904, 906, 908, 918, 920, 922, 1148, 1188, 1221, 1250, 1299, 1347, 1350, 1356, 1366, 1370, 1374, 1378, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1391, 1392, 1393, 1396], "1439": [34, 650, 1188], "1451": [34, 650, 1188], "class": [35, 46, 56, 60, 89, 170, 199, 206, 240, 252, 253, 259, 273, 306, 334, 343, 402, 415, 429, 456, 501, 502, 516, 523, 601, 651, 652, 665, 675, 679, 708, 746, 747, 818, 819, 848, 855, 856, 890, 902, 903, 909, 923, 956, 984, 993, 1055, 1056, 1069, 1079, 1080, 1081, 1083, 1091, 1092, 1107, 1152, 1153, 1167, 1174, 1191, 1192, 1202, 1204, 1233, 1338, 1339, 1381, 1387, 1388, 1392, 1396], "filetyp": [35, 41, 652, 659], "need": [35, 60, 69, 71, 72, 89, 98, 100, 101, 136, 137, 168, 399, 411, 498, 514, 563, 590, 652, 679, 688, 690, 691, 708, 717, 719, 720, 784, 785, 1052, 1149, 1165, 1204, 1213, 1215, 1216, 1233, 1242, 1244, 1245, 1301, 1328, 1346, 1350, 1355, 1376, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1392, 1393, 1395, 1396, 1398], "being": [35, 37, 138, 198, 223, 225, 230, 233, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 334, 337, 338, 339, 340, 360, 362, 370, 371, 374, 375, 376, 377, 447, 528, 575, 576, 652, 654, 786, 847, 873, 875, 880, 883, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 984, 987, 988, 989, 990, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1093, 1098, 1179, 1313, 1314, 1339, 1367, 1395], "string": [35, 46, 60, 89, 225, 228, 229, 233, 236, 251, 253, 267, 292, 295, 296, 300, 302, 325, 328, 329, 330, 331, 332, 335, 337, 339, 362, 365, 366, 367, 368, 369, 372, 374, 376, 380, 428, 462, 482, 515, 516, 521, 527, 528, 533, 537, 538, 539, 545, 546, 602, 652, 665, 679, 708, 875, 878, 879, 883, 886, 901, 903, 917, 942, 945, 946, 950, 952, 975, 978, 979, 980, 981, 982, 985, 987, 989, 1012, 1015, 1016, 1017, 1018, 1019, 1022, 1024, 1026, 1031, 1033, 1091, 1092, 1093, 1113, 1133, 1166, 1167, 1172, 1178, 1179, 1184, 1189, 1190, 1192, 1204, 1233, 1283, 1284, 1355, 1396], "initi": [35, 50, 51, 52, 56, 78, 79, 80, 81, 107, 108, 109, 110, 138, 139, 170, 206, 273, 306, 343, 402, 534, 652, 669, 670, 671, 675, 697, 698, 699, 700, 726, 727, 728, 729, 747, 786, 787, 819, 856, 923, 956, 993, 1056, 1185, 1196, 1197, 1198, 1222, 1223, 1224, 1225, 1251, 1252, 1253, 1254, 1357], "dic": [38, 46, 60, 61, 89, 90, 402, 414, 655, 665, 679, 680, 708, 709, 1056, 1192, 1204, 1205, 1233, 1234], "colormap": [39, 223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 399, 657, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1031, 1052, 1344, 1354, 1358, 1372, 1377, 1392, 1394], "select": [40, 65, 74, 94, 103, 140, 461, 469, 479, 492, 495, 510, 511, 530, 532, 534, 658, 684, 693, 713, 722, 788, 1112, 1120, 1130, 1143, 1146, 1161, 1162, 1181, 1183, 1185, 1209, 1218, 1238, 1247], "limit": [40, 138, 139, 151, 152, 198, 200, 201, 202, 203, 204, 205, 225, 239, 265, 292, 305, 325, 342, 362, 379, 389, 400, 442, 520, 526, 530, 591, 592, 658, 786, 787, 800, 801, 802, 847, 849, 850, 851, 852, 853, 854, 875, 889, 915, 942, 955, 975, 992, 1012, 1029, 1031, 1042, 1053, 1088, 1089, 1171, 1177, 1181, 1329, 1330, 1351, 1352, 1356, 1381, 1387, 1392], "relat": [40, 129, 155, 156, 157, 400, 498, 504, 507, 508, 509, 514, 527, 535, 658, 777, 806, 807, 808, 1053, 1149, 1155, 1158, 1159, 1160, 1165, 1178, 1186, 1376, 1381, 1392, 1395, 1396], "instac": [40, 658], "nyquist": [40, 73, 102, 138, 139, 140, 446, 544, 658, 692, 721, 786, 787, 788, 1097, 1217, 1246, 1282, 1385, 1391, 1393], "consid": [40, 127, 134, 136, 137, 141, 142, 143, 144, 145, 146, 148, 149, 155, 156, 157, 159, 160, 465, 470, 471, 485, 497, 498, 510, 511, 514, 520, 524, 525, 530, 531, 532, 549, 552, 553, 559, 560, 561, 577, 658, 775, 782, 784, 785, 789, 790, 791, 792, 793, 794, 797, 798, 806, 807, 808, 810, 811, 1030, 1088, 1089, 1093, 1116, 1121, 1122, 1136, 1148, 1149, 1161, 1162, 1165, 1171, 1175, 1176, 1181, 1182, 1183, 1287, 1290, 1291, 1297, 1298, 1299, 1315, 1376], "vmin": [40, 223, 225, 230, 233, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 334, 337, 338, 339, 340, 360, 362, 370, 371, 374, 375, 376, 377, 399, 658, 873, 875, 880, 883, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 984, 987, 988, 989, 990, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1052, 1341, 1342, 1346, 1347, 1350, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1384, 1385, 1387, 1388, 1391, 1392], "vmax": [40, 223, 225, 230, 233, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 334, 337, 338, 339, 340, 360, 362, 370, 371, 374, 375, 376, 377, 399, 658, 873, 875, 880, 883, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 984, 987, 988, 989, 990, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1052, 1341, 1342, 1346, 1347, 1350, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1384, 1385, 1387, 1388, 1391, 1392], "2": [40, 118, 122, 126, 140, 141, 145, 146, 148, 149, 150, 151, 153, 155, 156, 164, 201, 212, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 250, 251, 252, 256, 258, 267, 268, 270, 272, 279, 290, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 312, 323, 325, 328, 329, 333, 336, 337, 338, 339, 340, 342, 349, 360, 362, 365, 366, 370, 371, 373, 374, 375, 376, 377, 379, 391, 392, 393, 395, 437, 451, 452, 470, 479, 494, 497, 498, 500, 514, 516, 526, 532, 537, 545, 546, 561, 572, 574, 658, 737, 741, 745, 788, 789, 793, 794, 797, 798, 799, 801, 803, 806, 807, 815, 850, 862, 873, 875, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 900, 901, 902, 906, 908, 917, 918, 920, 922, 929, 940, 942, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 962, 973, 975, 978, 979, 983, 986, 987, 988, 989, 990, 992, 999, 1010, 1012, 1015, 1016, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1029, 1044, 1045, 1046, 1048, 1064, 1075, 1080, 1087, 1088, 1089, 1090, 1093, 1102, 1103, 1121, 1130, 1145, 1148, 1149, 1151, 1165, 1167, 1177, 1183, 1189, 1264, 1268, 1283, 1284, 1299, 1310, 1312, 1338, 1343, 1348, 1350, 1356, 1357, 1363, 1364, 1366, 1367, 1368, 1370, 1371, 1374, 1376, 1378, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1396], "tuplet": [40, 658], "minimun": [40, 658], "maximun": [40, 658], "teoric": [40, 658], "copi": [41, 45, 46, 62, 63, 65, 66, 67, 69, 91, 92, 94, 95, 96, 98, 184, 185, 402, 595, 659, 663, 665, 681, 682, 684, 685, 686, 688, 710, 711, 713, 714, 715, 717, 761, 762, 833, 834, 1056, 1093, 1192, 1206, 1207, 1209, 1210, 1211, 1213, 1235, 1236, 1238, 1239, 1240, 1242, 1333, 1384], "field_map": [41, 659], "anoth": [41, 461, 469, 479, 492, 495, 572, 659, 1080, 1112, 1120, 1130, 1143, 1146, 1310, 1350, 1383, 1388, 1389, 1392, 1395, 1398], "empti": [44, 408, 437, 527, 528, 662, 1064, 1075, 1178, 1179, 1262, 1264, 1267, 1339, 1383, 1391, 1392], "exist": [44, 47, 61, 62, 64, 90, 91, 93, 146, 174, 176, 183, 190, 195, 198, 201, 202, 395, 526, 595, 662, 666, 680, 681, 683, 709, 710, 712, 751, 753, 760, 767, 772, 794, 800, 823, 825, 832, 839, 844, 847, 850, 851, 1048, 1177, 1193, 1202, 1205, 1206, 1208, 1234, 1235, 1237, 1262, 1333, 1341, 1381, 1383, 1389], "self": [45, 151, 152, 155, 156, 157, 404, 407, 408, 409, 410, 413, 417, 419, 420, 424, 425, 663, 801, 802, 806, 807, 808, 1384, 1387, 1396], "descrip": [45, 663], "default_config": [45, 663, 1339], "These": [45, 138, 170, 265, 399, 578, 601, 663, 747, 786, 819, 915, 1052, 1093, 1316, 1346, 1355, 1376, 1381, 1388, 1395, 1396], "modifi": [45, 60, 89, 141, 663, 679, 708, 789, 1204, 1233, 1344, 1354, 1372, 1394, 1396], "environment": [45, 663, 1381, 1395], "pyart_config": [45, 663, 1392], "execut": [45, 663, 1343, 1348, 1353, 1372, 1379, 1380, 1394], "full": [45, 77, 106, 141, 146, 395, 663, 696, 725, 789, 794, 1048, 1221, 1250, 1339, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381], "permiss": [45, 663], "mai": [45, 138, 139, 174, 176, 183, 190, 195, 306, 343, 391, 393, 399, 402, 415, 497, 528, 530, 601, 663, 751, 753, 760, 767, 772, 786, 787, 823, 825, 832, 839, 844, 956, 993, 1044, 1046, 1052, 1056, 1093, 1148, 1179, 1181, 1277, 1376, 1381], "secur": [45, 663], "do": [45, 60, 89, 126, 138, 198, 201, 202, 399, 400, 513, 663, 679, 708, 745, 786, 800, 847, 850, 851, 1052, 1053, 1164, 1204, 1233, 1347, 1376, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1395, 1396, 1398], "un": [45, 663], "trust": [45, 663], "method": [45, 46, 62, 69, 71, 72, 91, 98, 100, 101, 127, 129, 134, 142, 151, 152, 155, 157, 170, 174, 176, 183, 190, 195, 235, 400, 401, 402, 415, 440, 465, 485, 497, 500, 515, 516, 524, 525, 526, 527, 528, 537, 559, 560, 561, 663, 665, 681, 688, 690, 691, 710, 717, 719, 720, 747, 751, 753, 760, 767, 772, 775, 777, 782, 790, 801, 802, 806, 808, 819, 823, 825, 832, 839, 844, 885, 1053, 1054, 1056, 1067, 1069, 1077, 1088, 1089, 1091, 1092, 1116, 1136, 1148, 1151, 1166, 1167, 1175, 1176, 1177, 1178, 1179, 1189, 1192, 1206, 1213, 1215, 1216, 1235, 1242, 1244, 1245, 1297, 1298, 1299, 1338, 1341, 1361, 1381, 1388, 1391, 1392, 1396], "chang": [45, 46, 60, 62, 66, 67, 69, 71, 89, 91, 95, 96, 98, 100, 138, 169, 170, 394, 402, 663, 665, 679, 681, 685, 686, 688, 690, 708, 710, 714, 715, 717, 719, 747, 786, 819, 1047, 1056, 1192, 1202, 1204, 1206, 1210, 1211, 1213, 1215, 1233, 1235, 1239, 1240, 1242, 1244, 1277, 1339, 1376, 1384, 1387, 1393, 1395, 1396], "home": [45, 663, 1389, 1396, 1398], "make": [45, 46, 501, 534, 663, 665, 1152, 1185, 1192, 1264, 1268, 1269, 1271, 1272, 1339, 1350, 1357, 1366, 1376, 1383, 1384, 1391, 1395, 1396, 1398], "adjust": [45, 122, 239, 305, 342, 379, 497, 663, 741, 889, 955, 992, 1029, 1148, 1355, 1358, 1366], "login": [45, 663], "shell": [45, 663], "session": [45, 663], "modif": [45, 62, 91, 663, 681, 710, 1206, 1235, 1339], "last": [45, 60, 89, 138, 147, 223, 224, 230, 234, 235, 236, 248, 250, 256, 258, 259, 266, 268, 270, 272, 290, 291, 297, 301, 302, 323, 324, 333, 334, 338, 339, 343, 360, 361, 370, 371, 375, 376, 559, 561, 663, 679, 708, 786, 796, 873, 874, 880, 884, 885, 886, 898, 900, 906, 908, 909, 916, 918, 920, 922, 940, 941, 947, 951, 952, 973, 974, 983, 984, 988, 989, 993, 1010, 1011, 1020, 1021, 1025, 1026, 1204, 1233, 1297, 1299, 1351, 1389, 1393], "origin_latitud": [46, 665, 1192], "origin_longitud": [46, 665, 1192], "origin_altitud": [46, 665, 1192], "z": [46, 52, 54, 60, 72, 80, 89, 101, 109, 118, 119, 120, 127, 129, 151, 152, 221, 288, 321, 358, 389, 399, 400, 447, 497, 498, 504, 507, 508, 509, 514, 521, 567, 665, 671, 673, 679, 691, 699, 708, 720, 728, 737, 738, 739, 775, 777, 801, 802, 871, 938, 971, 1008, 1031, 1042, 1052, 1053, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1098, 1148, 1149, 1155, 1158, 1159, 1160, 1165, 1172, 1192, 1198, 1200, 1204, 1216, 1224, 1233, 1245, 1253, 1264, 1305, 1341, 1364, 1366, 1367, 1376, 1381, 1384, 1392, 1396], "radar_latitud": [46, 563, 590, 665, 1192, 1301, 1328], "radar_longitud": [46, 563, 590, 665, 1192, 1301, 1328], "radar_altitud": [46, 520, 665, 1171, 1192], "radar_tim": [46, 665, 1192], "radar_nam": [46, 665, 1031, 1192], "rectilinear": [46, 665, 1192], "cartesian": [46, 48, 54, 60, 89, 118, 119, 120, 121, 122, 123, 124, 125, 389, 501, 516, 633, 665, 667, 673, 679, 708, 737, 738, 739, 740, 741, 742, 743, 744, 1042, 1079, 1080, 1087, 1090, 1091, 1092, 1093, 1152, 1167, 1192, 1194, 1200, 1204, 1233, 1339, 1344, 1349, 1353, 1356, 1381, 1382, 1391, 1394], "section": [46, 60, 62, 89, 91, 217, 219, 223, 237, 284, 286, 290, 303, 317, 319, 323, 340, 354, 356, 360, 377, 453, 472, 473, 516, 552, 553, 566, 665, 679, 681, 708, 710, 867, 869, 873, 887, 934, 936, 940, 953, 967, 969, 973, 990, 1004, 1006, 1010, 1027, 1089, 1093, 1104, 1123, 1124, 1167, 1192, 1204, 1206, 1233, 1235, 1290, 1291, 1304, 1339, 1344, 1354, 1372, 1376, 1381, 1391, 1394], "legaci": [46, 447, 665, 1098, 1192], "befor": [46, 71, 100, 138, 146, 151, 152, 169, 456, 461, 469, 479, 492, 495, 498, 514, 530, 600, 665, 690, 719, 786, 794, 801, 802, 1080, 1107, 1112, 1120, 1130, 1143, 1146, 1149, 1165, 1181, 1192, 1215, 1244, 1350, 1376, 1381, 1385, 1389, 1392, 1393, 1396], "from_legacy_paramet": [46, 665, 1192], "ax": [46, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 248, 250, 251, 252, 253, 254, 256, 258, 265, 266, 267, 268, 270, 272, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 370, 371, 373, 374, 375, 376, 377, 378, 379, 498, 514, 522, 535, 665, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 898, 900, 901, 902, 903, 904, 906, 908, 915, 916, 917, 918, 920, 922, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1084, 1085, 1086, 1149, 1165, 1173, 1186, 1192, 1341, 1342, 1346, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1370, 1374, 1375, 1376, 1377, 1378, 1385, 1390, 1391, 1392], "moment": [46, 54, 60, 89, 133, 138, 139, 140, 201, 202, 391, 392, 393, 560, 615, 616, 665, 673, 679, 708, 781, 786, 787, 788, 800, 850, 851, 1044, 1045, 1046, 1093, 1192, 1200, 1204, 1233, 1298, 1347, 1354, 1372, 1381, 1388, 1390, 1392, 1394], "describ": [46, 60, 89, 130, 198, 199, 200, 201, 202, 203, 204, 205, 251, 267, 465, 471, 485, 514, 665, 679, 708, 778, 800, 847, 848, 849, 850, 851, 852, 853, 854, 901, 917, 1116, 1122, 1136, 1165, 1192, 1204, 1233, 1376], "geograph": [46, 60, 71, 89, 100, 121, 122, 123, 124, 125, 126, 306, 334, 343, 371, 398, 665, 679, 690, 708, 719, 740, 741, 742, 743, 744, 745, 956, 984, 993, 1021, 1051, 1093, 1192, 1204, 1215, 1233, 1244, 1381], "axi": [46, 54, 60, 89, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 248, 250, 251, 252, 253, 254, 256, 258, 265, 266, 267, 268, 270, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 323, 324, 325, 326, 327, 328, 329, 333, 334, 336, 337, 338, 339, 340, 342, 360, 361, 362, 363, 364, 365, 366, 370, 371, 373, 374, 375, 376, 377, 379, 389, 399, 549, 665, 673, 679, 708, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 898, 900, 901, 902, 903, 904, 906, 908, 915, 916, 917, 918, 920, 922, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 973, 974, 975, 976, 977, 978, 979, 983, 984, 986, 987, 988, 989, 990, 992, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1029, 1042, 1052, 1192, 1200, 1204, 1233, 1287, 1341, 1356, 1367, 1376, 1378, 1391, 1392, 1393], "dimension": [46, 54, 138, 140, 514, 535, 665, 673, 786, 788, 1087, 1090, 1165, 1186, 1192, 1200, 1350, 1376, 1389], "space": [46, 60, 89, 123, 225, 292, 325, 362, 400, 497, 498, 512, 514, 521, 665, 679, 708, 742, 875, 942, 975, 1012, 1053, 1093, 1148, 1149, 1163, 1165, 1172, 1192, 1204, 1233, 1347, 1376, 1383], "along": [46, 139, 146, 237, 249, 250, 255, 256, 257, 258, 269, 270, 271, 272, 303, 340, 377, 493, 549, 552, 553, 564, 565, 594, 665, 787, 794, 887, 899, 900, 905, 906, 907, 908, 919, 920, 921, 922, 953, 990, 1027, 1144, 1192, 1287, 1290, 1291, 1302, 1303, 1332, 1376, 1391], "three": [46, 140, 198, 202, 399, 514, 535, 665, 788, 800, 847, 851, 1052, 1165, 1186, 1192, 1376, 1392], "repeat": [46, 516, 665, 1167, 1192], "throughout": [46, 665, 1192], "transform": [46, 60, 89, 121, 122, 123, 124, 125, 126, 228, 235, 295, 306, 328, 343, 365, 371, 398, 442, 456, 462, 482, 497, 523, 536, 665, 679, 708, 740, 741, 742, 743, 744, 745, 878, 885, 945, 956, 978, 993, 1015, 1021, 1051, 1093, 1107, 1113, 1133, 1148, 1174, 1187, 1192, 1204, 1233, 1355, 1376, 1390], "pyart_aeqd": [46, 60, 89, 121, 123, 124, 665, 679, 708, 740, 742, 743, 1192, 1204, 1233], "nativ": [46, 60, 89, 121, 123, 124, 382, 447, 665, 679, 708, 740, 742, 743, 1035, 1093, 1098, 1192, 1204, 1233], "azimuth": [46, 60, 66, 70, 72, 82, 89, 95, 99, 101, 111, 118, 119, 120, 121, 122, 123, 124, 125, 136, 137, 148, 149, 150, 162, 163, 165, 206, 207, 223, 225, 228, 230, 234, 235, 236, 250, 256, 258, 268, 270, 272, 273, 274, 290, 292, 295, 297, 301, 302, 306, 307, 323, 325, 328, 333, 334, 338, 339, 343, 344, 360, 362, 365, 370, 371, 375, 376, 395, 399, 447, 461, 492, 493, 510, 511, 513, 516, 528, 530, 537, 538, 547, 552, 553, 559, 562, 563, 564, 570, 574, 582, 595, 615, 665, 679, 685, 689, 691, 701, 708, 714, 718, 720, 730, 737, 738, 739, 740, 741, 742, 743, 744, 784, 785, 795, 797, 798, 799, 804, 813, 814, 816, 856, 857, 873, 875, 878, 880, 884, 885, 886, 900, 906, 908, 918, 920, 922, 923, 924, 940, 942, 945, 947, 951, 952, 956, 957, 973, 975, 978, 983, 984, 988, 989, 993, 994, 1010, 1012, 1015, 1020, 1021, 1025, 1026, 1048, 1052, 1089, 1098, 1112, 1143, 1144, 1161, 1162, 1164, 1167, 1179, 1181, 1189, 1190, 1192, 1204, 1210, 1214, 1216, 1226, 1233, 1239, 1243, 1245, 1255, 1285, 1290, 1291, 1297, 1300, 1301, 1302, 1308, 1312, 1320, 1333, 1339, 1369, 1371, 1374, 1383, 1393, 1396], "equidist": [46, 60, 89, 121, 122, 123, 124, 125, 228, 295, 328, 365, 371, 399, 665, 679, 708, 740, 741, 742, 743, 744, 878, 945, 978, 1015, 1021, 1052, 1093, 1192, 1204, 1233], "pyproj": [46, 60, 89, 121, 123, 124, 665, 679, 708, 740, 742, 743, 1192, 1204, 1233, 1395], "projparam": [46, 49, 60, 89, 121, 123, 124, 665, 668, 679, 708, 740, 742, 743, 1192, 1195, 1204, 1233], "special": [46, 60, 89, 665, 679, 708, 1192, 1204, 1233, 1339, 1390], "_include_lon_0_lat_0": [46, 60, 89, 665, 679, 708, 1192, 1204, 1233], "interpret": [46, 60, 89, 139, 140, 398, 575, 576, 665, 679, 708, 787, 788, 1051, 1192, 1204, 1233, 1313, 1314], "requir": [46, 60, 89, 121, 123, 124, 138, 141, 146, 395, 399, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 500, 537, 560, 601, 665, 679, 708, 740, 742, 743, 786, 789, 794, 1048, 1052, 1088, 1089, 1093, 1099, 1100, 1101, 1102, 1108, 1109, 1110, 1111, 1115, 1116, 1118, 1119, 1126, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1147, 1151, 1189, 1192, 1204, 1233, 1298, 1347, 1381, 1389, 1390, 1391, 1392, 1396, 1398], "get_projparam": [46, 665, 1192], "evalu": [46, 402, 411, 426, 431, 665, 1056, 1058, 1192], "up": [46, 60, 89, 128, 129, 136, 137, 155, 156, 157, 174, 176, 183, 190, 195, 447, 479, 504, 507, 508, 529, 532, 544, 578, 580, 581, 665, 679, 708, 751, 753, 760, 767, 772, 776, 777, 784, 785, 806, 807, 808, 823, 825, 832, 839, 844, 1088, 1089, 1098, 1130, 1155, 1158, 1159, 1180, 1183, 1192, 1204, 1233, 1282, 1316, 1318, 1319, 1376, 1385, 1390, 1393, 1397], "collect": [46, 183, 195, 384, 391, 392, 393, 395, 665, 760, 772, 832, 844, 1037, 1044, 1045, 1046, 1048, 1079, 1091, 1092, 1093, 1192, 1346, 1360, 1374, 1396, 1397, 1398], "nradar": [46, 665, 1192], "whose": [46, 394, 665, 1047, 1086, 1093, 1192], "wa": [46, 71, 72, 100, 101, 139, 140, 169, 183, 223, 230, 234, 235, 236, 237, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 572, 665, 690, 691, 719, 720, 760, 787, 788, 832, 873, 880, 884, 885, 886, 887, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1192, 1215, 1216, 1244, 1245, 1310, 1339, 1381, 1392, 1396, 1398], "projection_proj": [46, 665, 1192], "instanc": [46, 57, 63, 92, 138, 139, 140, 223, 230, 233, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 400, 401, 447, 501, 572, 582, 583, 589, 665, 676, 682, 711, 786, 787, 788, 873, 880, 883, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1053, 1054, 1098, 1152, 1192, 1207, 1236, 1310, 1320, 1321, 1327], "valueerror": [46, 47, 61, 62, 90, 91, 665, 666, 680, 681, 709, 710, 1192, 1193, 1205, 1206, 1234, 1235], "point_z": [46, 398, 665, 1051, 1192], "point_x": [46, 398, 665, 1051, 1192], "point_i": [46, 398, 665, 1051, 1192], "func": [46, 169, 665, 1192], "init_point_x_y_z": [46, 665, 1192], "reset": [46, 51, 52, 60, 71, 79, 80, 81, 89, 100, 108, 109, 110, 665, 670, 671, 679, 690, 698, 699, 700, 708, 719, 727, 728, 729, 1192, 1197, 1198, 1204, 1215, 1223, 1224, 1225, 1233, 1244, 1252, 1253, 1254, 1388], "point_latitud": [46, 398, 665, 1051, 1192], "point_longitud": [46, 398, 665, 1051, 1192], "perform": [46, 60, 71, 72, 73, 89, 100, 101, 102, 133, 138, 139, 140, 146, 174, 176, 183, 190, 195, 223, 228, 230, 233, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 295, 297, 300, 301, 302, 303, 323, 328, 333, 334, 337, 338, 339, 340, 343, 360, 365, 370, 371, 374, 375, 376, 377, 391, 394, 399, 456, 461, 469, 479, 492, 500, 514, 526, 595, 665, 679, 690, 691, 692, 708, 719, 720, 721, 751, 753, 760, 767, 772, 781, 786, 787, 788, 794, 823, 825, 832, 839, 844, 873, 878, 880, 883, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 945, 947, 950, 951, 952, 953, 973, 978, 983, 984, 987, 988, 989, 990, 993, 1010, 1015, 1020, 1021, 1024, 1025, 1026, 1027, 1044, 1047, 1052, 1088, 1089, 1107, 1112, 1120, 1130, 1143, 1151, 1165, 1177, 1192, 1204, 1215, 1216, 1217, 1233, 1244, 1245, 1246, 1333, 1340, 1341, 1342, 1344, 1351, 1352, 1356, 1381, 1391], "invers": [46, 60, 89, 153, 164, 462, 537, 665, 679, 708, 803, 815, 1113, 1189, 1192, 1204, 1233], "rel": [46, 60, 89, 128, 144, 147, 155, 156, 157, 200, 235, 332, 369, 442, 456, 534, 536, 665, 679, 708, 776, 792, 796, 806, 807, 808, 849, 885, 982, 1019, 1093, 1107, 1185, 1187, 1192, 1204, 1233, 1393, 1396], "init_point_longitude_latitud": [46, 665, 1192], "point_altitud": [46, 50, 398, 665, 669, 1051, 1192, 1196], "init_point_altitud": [46, 665, 1192], "init": [46, 240, 259, 402, 414, 563, 665, 890, 909, 1056, 1192, 1301], "field_dict": [47, 666, 1193], "replace_exist": [47, 61, 62, 63, 90, 91, 92, 666, 680, 681, 682, 709, 710, 711, 1193, 1205, 1206, 1207, 1234, 1235, 1236, 1376, 1384, 1385, 1396], "overwrit": [47, 559, 666, 1193, 1297], "alreadi": [47, 61, 62, 90, 91, 153, 524, 525, 666, 680, 681, 709, 710, 803, 1175, 1176, 1193, 1205, 1206, 1234, 1235], "edg": [48, 72, 101, 119, 123, 138, 139, 140, 141, 146, 223, 230, 234, 235, 236, 250, 256, 258, 268, 270, 272, 290, 297, 301, 302, 323, 333, 334, 338, 339, 360, 370, 371, 375, 376, 522, 528, 614, 667, 691, 720, 738, 742, 786, 787, 788, 789, 794, 873, 880, 884, 885, 886, 900, 906, 908, 918, 920, 922, 940, 947, 951, 952, 973, 983, 984, 988, 989, 1010, 1020, 1021, 1025, 1026, 1173, 1179, 1194, 1216, 1245, 1268, 1366, 1367, 1376, 1381], "height": [48, 54, 56, 57, 128, 129, 136, 137, 143, 144, 147, 155, 156, 157, 200, 252, 253, 254, 268, 334, 371, 442, 443, 445, 456, 461, 469, 479, 492, 495, 498, 499, 501, 514, 515, 516, 519, 523, 529, 530, 531, 532, 534, 535, 536, 537, 538, 589, 667, 673, 675, 676, 776, 777, 784, 785, 791, 792, 796, 806, 807, 808, 849, 902, 903, 904, 918, 984, 1021, 1088, 1089, 1093, 1096, 1107, 1112, 1120, 1130, 1143, 1146, 1149, 1150, 1152, 1165, 1166, 1167, 1170, 1174, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1189, 1190, 1194, 1200, 1327, 1355, 1364, 1374, 1378, 1388, 1391, 1392, 1396], "determin": [48, 60, 89, 134, 138, 139, 140, 142, 152, 159, 160, 250, 252, 253, 254, 256, 258, 265, 268, 270, 272, 334, 371, 382, 391, 392, 395, 400, 401, 446, 456, 465, 470, 485, 498, 500, 501, 503, 504, 505, 507, 508, 514, 534, 535, 537, 559, 560, 577, 589, 593, 667, 679, 708, 782, 786, 787, 788, 790, 802, 810, 811, 900, 902, 903, 904, 906, 908, 915, 918, 920, 922, 984, 1021, 1030, 1031, 1035, 1044, 1045, 1048, 1053, 1054, 1097, 1107, 1116, 1121, 1136, 1149, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1165, 1185, 1186, 1189, 1194, 1204, 1233, 1297, 1298, 1315, 1327, 1331, 1376, 1396], "same": [48, 60, 62, 70, 71, 72, 89, 91, 99, 100, 101, 122, 125, 138, 176, 190, 235, 334, 389, 395, 399, 400, 401, 444, 456, 498, 514, 521, 529, 559, 563, 574, 590, 595, 667, 679, 681, 689, 690, 691, 708, 710, 718, 719, 720, 741, 744, 753, 767, 786, 825, 839, 885, 984, 1042, 1048, 1052, 1053, 1054, 1093, 1095, 1107, 1149, 1165, 1172, 1180, 1194, 1204, 1206, 1214, 1215, 1216, 1233, 1235, 1243, 1244, 1245, 1268, 1297, 1301, 1312, 1328, 1333, 1346, 1366, 1367, 1376, 1383, 1388, 1389, 1390, 1391, 1396, 1398], "layout": [48, 388, 667, 1041, 1194], "interpol": [48, 72, 101, 119, 123, 223, 230, 234, 235, 236, 237, 250, 256, 258, 268, 270, 272, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 384, 391, 461, 469, 479, 492, 495, 501, 515, 528, 529, 530, 537, 573, 589, 667, 691, 720, 738, 742, 873, 880, 884, 885, 886, 887, 900, 906, 908, 918, 920, 922, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1037, 1044, 1091, 1092, 1093, 1112, 1120, 1130, 1143, 1146, 1152, 1166, 1179, 1180, 1181, 1189, 1194, 1216, 1245, 1311, 1327, 1339, 1347, 1376, 1387, 1391, 1392, 1396], "extrapol": [48, 119, 123, 223, 230, 234, 235, 236, 250, 256, 258, 268, 270, 272, 290, 297, 301, 302, 323, 333, 334, 338, 339, 360, 370, 371, 375, 376, 667, 738, 742, 873, 880, 884, 885, 886, 900, 906, 908, 918, 920, 922, 940, 947, 951, 952, 973, 983, 984, 988, 989, 1010, 1020, 1021, 1025, 1026, 1194], "boundari": [48, 119, 123, 146, 242, 243, 265, 371, 528, 667, 738, 742, 794, 892, 893, 915, 1021, 1179, 1194, 1268, 1377, 1390, 1392], "center": [48, 60, 72, 89, 101, 118, 119, 120, 122, 123, 125, 139, 223, 228, 230, 234, 235, 236, 250, 251, 255, 256, 257, 258, 267, 268, 269, 270, 271, 272, 290, 295, 297, 301, 302, 306, 323, 328, 333, 334, 338, 339, 360, 365, 370, 371, 375, 376, 391, 393, 461, 469, 479, 492, 495, 520, 544, 547, 571, 667, 679, 691, 708, 720, 737, 738, 739, 741, 742, 744, 787, 873, 878, 880, 884, 885, 886, 900, 901, 905, 906, 907, 908, 917, 918, 919, 920, 921, 922, 940, 945, 947, 951, 952, 956, 973, 978, 983, 984, 988, 989, 1010, 1015, 1020, 1021, 1025, 1026, 1044, 1046, 1084, 1085, 1086, 1112, 1120, 1130, 1143, 1146, 1171, 1194, 1204, 1216, 1233, 1245, 1264, 1268, 1282, 1285, 1309, 1355, 1385, 1391, 1392, 1393], "2d": [48, 70, 71, 72, 99, 100, 101, 119, 147, 389, 399, 443, 456, 523, 528, 534, 544, 571, 667, 689, 690, 691, 718, 719, 720, 738, 795, 796, 804, 1042, 1052, 1107, 1174, 1179, 1185, 1194, 1214, 1215, 1216, 1243, 1244, 1245, 1282, 1309, 1350, 1393], "point_": [51, 52, 670, 671, 1197, 1198], "properti": [53, 58, 59, 184, 185, 537, 672, 677, 678, 761, 762, 833, 834, 1081, 1083, 1189, 1199, 1390, 1396], "xarrai": [54, 240, 252, 253, 254, 565, 673, 890, 902, 903, 904, 1031, 1088, 1089, 1200, 1303, 1370, 1374, 1381, 1395], "arm_alt_lat_lon_vari": [55, 398, 674, 1051, 1201], "speed": [56, 57, 253, 516, 537, 538, 544, 675, 676, 903, 1093, 1167, 1189, 1190, 1282, 1378, 1391, 1396], "direct": [56, 77, 106, 395, 449, 468, 500, 513, 516, 526, 537, 538, 675, 696, 725, 1048, 1100, 1119, 1151, 1164, 1167, 1177, 1189, 1190, 1221, 1250, 1378, 1391, 1396], "horizont": [56, 57, 58, 59, 60, 89, 127, 132, 133, 135, 138, 223, 224, 225, 230, 234, 235, 236, 237, 248, 250, 252, 254, 256, 258, 266, 268, 270, 272, 290, 291, 292, 297, 301, 302, 303, 323, 324, 325, 333, 338, 339, 340, 360, 361, 362, 370, 375, 376, 377, 383, 384, 452, 458, 459, 460, 464, 477, 478, 490, 491, 496, 510, 511, 513, 532, 537, 589, 675, 676, 677, 678, 679, 708, 775, 780, 781, 783, 786, 873, 874, 875, 880, 884, 885, 886, 887, 898, 900, 902, 904, 906, 908, 916, 918, 920, 922, 940, 941, 942, 947, 951, 952, 953, 973, 974, 975, 983, 988, 989, 990, 1010, 1011, 1012, 1020, 1025, 1026, 1027, 1036, 1037, 1088, 1089, 1103, 1109, 1110, 1111, 1115, 1128, 1129, 1141, 1142, 1147, 1161, 1162, 1164, 1183, 1189, 1204, 1233, 1327, 1357, 1367, 1391, 1393, 1396], "wind": [56, 57, 58, 59, 138, 139, 383, 384, 510, 511, 512, 513, 537, 538, 589, 675, 676, 677, 678, 786, 787, 1036, 1037, 1161, 1162, 1163, 1164, 1189, 1190, 1327, 1339, 1378, 1382, 1396], "1d": [56, 57, 119, 123, 147, 456, 499, 502, 523, 536, 549, 561, 566, 567, 568, 570, 578, 579, 580, 581, 602, 675, 676, 738, 742, 795, 796, 804, 1107, 1150, 1153, 1174, 1187, 1287, 1299, 1304, 1305, 1306, 1308, 1316, 1317, 1318, 1319, 1393], "were": [56, 57, 174, 176, 183, 537, 580, 675, 676, 751, 753, 760, 823, 825, 832, 1189, 1318, 1339, 1392, 1396], "sampl": [56, 57, 150, 456, 465, 485, 499, 534, 536, 537, 538, 560, 675, 676, 799, 1107, 1116, 1136, 1150, 1185, 1187, 1189, 1190, 1191, 1269, 1271, 1272, 1298, 1346, 1347, 1355, 1375, 1377, 1378, 1381, 1396], "per": [56, 57, 58, 59, 73, 89, 102, 138, 156, 537, 675, 676, 677, 678, 692, 708, 721, 786, 807, 1031, 1093, 1189, 1217, 1233, 1246, 1265, 1266, 1267, 1396], "east": [56, 223, 234, 290, 301, 323, 338, 360, 375, 565, 675, 873, 884, 940, 951, 973, 988, 1010, 1025, 1303, 1359, 1392], "u_wind": [56, 57, 537, 538, 675, 676, 1189, 1190, 1378, 1391, 1396], "compon": [56, 57, 58, 59, 497, 512, 513, 675, 676, 677, 678, 1148, 1163, 1164, 1396], "v_wind": [56, 57, 537, 538, 675, 676, 1189, 1190, 1378, 1391, 1396], "classmethod": [57, 429, 676], "_rang": [60, 89, 466, 679, 708, 1117, 1204, 1233], "scan_typ": [60, 89, 206, 222, 273, 289, 306, 322, 343, 359, 679, 708, 856, 872, 923, 939, 956, 972, 993, 1009, 1204, 1233, 1393], "sweep_numb": [60, 89, 679, 708, 1204, 1233, 1364, 1383, 1393], "sweep_mod": [60, 89, 385, 679, 708, 1038, 1204, 1233, 1383, 1393], "fixed_angl": [60, 89, 206, 273, 306, 343, 582, 679, 708, 856, 923, 956, 993, 1204, 1233, 1320, 1364, 1365, 1369, 1383, 1393], "sweep_start_ray_index": [60, 89, 679, 708, 1204, 1233, 1383, 1393], "sweep_end_ray_index": [60, 89, 679, 708, 1204, 1233, 1383, 1393], "altitude_agl": [60, 89, 679, 708, 1204, 1233, 1393], "target_scan_r": [60, 89, 679, 708, 1204, 1233, 1393], "rays_are_index": [60, 89, 679, 708, 1204, 1233], "ray_angle_r": [60, 89, 679, 708, 1204, 1233], "scan_rat": [60, 89, 401, 679, 708, 1054, 1204, 1233, 1393], "antenna_transit": [60, 71, 72, 89, 100, 101, 183, 195, 223, 230, 234, 235, 236, 237, 273, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 679, 690, 691, 708, 719, 720, 760, 772, 832, 844, 873, 880, 884, 885, 886, 887, 923, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1204, 1215, 1216, 1233, 1244, 1245, 1393], "instrument_paramet": [60, 89, 138, 149, 401, 471, 473, 679, 708, 786, 798, 1054, 1122, 1124, 1204, 1233, 1339, 1385, 1393], "radar_calibr": [60, 89, 465, 473, 485, 487, 488, 679, 708, 1116, 1124, 1136, 1138, 1139, 1204, 1233, 1393], "tilt": [60, 89, 206, 235, 334, 371, 533, 679, 708, 856, 885, 984, 1021, 1184, 1204, 1233, 1347, 1363, 1370], "roll": [60, 89, 158, 206, 395, 588, 594, 679, 708, 809, 856, 1048, 1204, 1233, 1326, 1332], "drift": [60, 89, 206, 679, 708, 856, 1204, 1233], "head": [60, 89, 206, 679, 708, 856, 1204, 1233], "pitch": [60, 89, 206, 679, 708, 856, 1204, 1233], "georefs_appli": [60, 89, 679, 708, 1204, 1233], "antenna": [60, 71, 72, 89, 100, 101, 118, 119, 120, 130, 136, 137, 147, 148, 149, 150, 153, 154, 161, 163, 164, 165, 183, 195, 200, 204, 223, 230, 234, 235, 236, 237, 273, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 447, 452, 473, 480, 493, 516, 532, 582, 679, 690, 691, 708, 719, 720, 737, 738, 739, 760, 772, 778, 784, 785, 796, 797, 798, 799, 803, 804, 805, 812, 814, 815, 816, 832, 844, 849, 853, 873, 880, 884, 885, 886, 887, 923, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1098, 1103, 1124, 1131, 1144, 1167, 1183, 1204, 1215, 1216, 1233, 1244, 1245, 1320, 1339, 1340, 1344, 1349, 1350, 1351, 1352, 1381, 1387, 1393], "structur": [60, 89, 401, 497, 514, 535, 679, 708, 1054, 1148, 1165, 1186, 1204, 1233, 1346, 1376, 1388], "under": [60, 89, 138, 139, 140, 679, 708, 786, 787, 788, 1093, 1204, 1233, 1376, 1381, 1395, 1396], "sub": [60, 89, 679, 708, 1204, 1233], "meta_group": [60, 89, 679, 708, 1204, 1233, 1393], "instrument": [60, 89, 183, 195, 198, 201, 202, 401, 679, 708, 760, 772, 800, 832, 844, 847, 850, 851, 1054, 1204, 1233, 1385, 1389, 1393], "multipl": [60, 89, 153, 164, 456, 497, 532, 534, 679, 708, 803, 815, 1107, 1148, 1183, 1185, 1204, 1233, 1339, 1344, 1349, 1354, 1366, 1372, 1388, 1394, 1398], "ground": [60, 89, 447, 479, 516, 679, 708, 1098, 1130, 1167, 1204, 1233, 1346, 1391], "target": [60, 89, 154, 399, 472, 473, 561, 563, 564, 565, 570, 590, 679, 708, 805, 1052, 1123, 1124, 1204, 1233, 1269, 1271, 1272, 1273, 1274, 1275, 1276, 1299, 1301, 1302, 1303, 1308, 1328, 1393], "thr": [60, 89, 679, 708, 1204, 1233], "index": [60, 75, 89, 104, 134, 142, 143, 144, 145, 147, 159, 160, 202, 236, 252, 253, 254, 256, 258, 268, 270, 272, 302, 339, 376, 399, 447, 456, 470, 533, 679, 694, 708, 723, 782, 790, 791, 792, 793, 796, 800, 810, 811, 851, 886, 902, 903, 904, 906, 908, 918, 920, 922, 952, 989, 1026, 1052, 1080, 1098, 1107, 1121, 1184, 1204, 1219, 1233, 1248, 1382, 1389, 1396], "rays_per_sweep": [60, 81, 89, 110, 679, 700, 708, 729, 1204, 1225, 1233, 1254, 1265, 1266], "upon": [60, 89, 198, 199, 200, 201, 202, 203, 204, 205, 679, 708, 800, 847, 848, 849, 850, 851, 852, 853, 854, 1204, 1233], "prior": [60, 62, 89, 91, 146, 151, 152, 223, 230, 233, 234, 235, 236, 237, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 395, 679, 681, 708, 710, 794, 801, 802, 873, 880, 883, 884, 885, 886, 887, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1048, 1204, 1206, 1233, 1235, 1347, 1381], "init_rays_per_sweep": [60, 89, 679, 708, 1204, 1233], "intend": [60, 89, 479, 679, 708, 1130, 1204, 1233], "rate": [60, 89, 497, 498, 503, 504, 505, 506, 507, 508, 509, 514, 523, 679, 708, 1148, 1149, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1165, 1174, 1204, 1233, 1376], "whether": [60, 89, 155, 156, 162, 174, 385, 473, 524, 525, 530, 532, 569, 679, 708, 751, 795, 806, 807, 813, 823, 1031, 1038, 1087, 1090, 1124, 1175, 1176, 1181, 1183, 1204, 1233, 1307, 1388], "regular": [60, 89, 400, 461, 469, 479, 492, 495, 615, 616, 632, 633, 679, 708, 1053, 1112, 1120, 1130, 1143, 1146, 1204, 1233, 1355, 1381], "angular": [60, 89, 544, 585, 586, 679, 708, 1204, 1233, 1282, 1323, 1324], "express": [60, 89, 679, 708, 1204, 1233], "360": [60, 89, 141, 146, 335, 372, 559, 679, 708, 789, 794, 985, 1022, 1204, 1233, 1297, 1378, 1383, 1389, 1391, 1393], "represent": [60, 89, 428, 679, 708, 1204, 1233], "forbidden": [60, 89, 679, 708, 1204, 1233], "plane": [60, 89, 399, 513, 679, 708, 1052, 1088, 1089, 1164, 1204, 1233, 1393], "180": [60, 89, 120, 122, 155, 156, 532, 559, 679, 708, 739, 741, 806, 807, 1183, 1204, 1233, 1297, 1383, 1396], "gate_z": [60, 72, 89, 101, 679, 691, 708, 720, 1204, 1216, 1233, 1245], "gate_x": [60, 72, 89, 101, 679, 691, 708, 720, 1204, 1216, 1233, 1245], "gate_i": [60, 72, 89, 101, 679, 691, 708, 720, 1204, 1216, 1233, 1245], "system": [60, 89, 121, 122, 123, 134, 142, 151, 152, 159, 160, 381, 391, 399, 458, 468, 516, 679, 708, 740, 741, 742, 782, 790, 801, 802, 810, 811, 1034, 1044, 1052, 1082, 1087, 1090, 1109, 1119, 1167, 1204, 1233, 1390, 1395], "earth": [60, 89, 118, 119, 122, 125, 516, 563, 590, 656, 679, 708, 737, 738, 741, 744, 1167, 1204, 1233, 1301, 1328], "radiu": [60, 89, 118, 119, 120, 122, 125, 498, 514, 516, 535, 563, 590, 656, 679, 708, 737, 738, 739, 741, 744, 1084, 1085, 1086, 1087, 1091, 1092, 1093, 1149, 1165, 1167, 1186, 1204, 1233, 1301, 1328, 1376, 1387], "init_gate_x_y_z": [60, 89, 679, 708, 1204, 1233], "gate_latitud": [60, 71, 79, 89, 100, 108, 679, 690, 698, 708, 719, 727, 1204, 1215, 1223, 1233, 1244, 1252], "gate_longitud": [60, 71, 79, 89, 100, 108, 679, 690, 698, 708, 719, 727, 1204, 1215, 1223, 1233, 1244, 1252, 1383], "init_gate_longitude_latitud": [60, 89, 679, 708, 1204, 1233, 1383], "gate_altitud": [60, 71, 78, 89, 100, 107, 679, 690, 697, 708, 719, 726, 1204, 1215, 1222, 1233, 1244, 1251], "init_gate_altitud": [60, 89, 679, 708, 1204, 1233, 1383], "actual": [60, 89, 148, 395, 399, 497, 679, 708, 797, 1048, 1052, 1087, 1090, 1148, 1204, 1233, 1390, 1398], "flag": [60, 89, 138, 273, 395, 501, 527, 528, 531, 535, 545, 546, 574, 577, 679, 708, 786, 923, 1048, 1152, 1178, 1179, 1182, 1186, 1204, 1233, 1283, 1284, 1312, 1315, 1398], "transit": [60, 71, 72, 89, 100, 101, 183, 195, 198, 201, 202, 223, 230, 234, 235, 236, 237, 273, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 479, 492, 527, 679, 690, 691, 708, 719, 720, 760, 772, 800, 832, 844, 847, 850, 851, 873, 880, 884, 885, 886, 887, 923, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1130, 1143, 1178, 1204, 1215, 1216, 1233, 1244, 1245], "ye": [60, 89, 138, 679, 708, 786, 1204, 1233], "aircraft": [60, 89, 235, 395, 679, 708, 885, 1048, 1204, 1233], "longitudin": [60, 89, 235, 247, 258, 262, 263, 272, 679, 708, 885, 897, 908, 912, 913, 922, 1204, 1233], "orthogon": [60, 89, 474, 513, 679, 708, 1125, 1164, 1204, 1233], "platform": [60, 89, 679, 708, 1204, 1233], "right": [60, 89, 334, 443, 500, 520, 679, 708, 984, 1151, 1171, 1204, 1233, 1355, 1356, 1392], "wing": [60, 89, 679, 708, 1204, 1233], "down": [60, 89, 679, 708, 1204, 1233, 1338], "track": [60, 89, 679, 708, 1204, 1233], "compass": [60, 89, 679, 708, 1204, 1233], "nose": [60, 89, 679, 708, 1204, 1233], "had": [60, 89, 400, 679, 708, 1053, 1204, 1233, 1346, 1398], "georefer": [60, 89, 679, 708, 1204, 1233], "lead": [60, 89, 679, 708, 1204, 1233, 1339, 1350], "centric": [60, 89, 679, 708, 1204, 1233], "avaiabl": [60, 89, 679, 708, 1204, 1233], "radar_paramet": [60, 89, 679, 708, 1204, 1233], "subconvent": [60, 89, 679, 708, 1204, 1233], "calibr": [60, 89, 153, 154, 161, 164, 503, 679, 708, 803, 805, 812, 815, 1154, 1204, 1233], "ngate": [60, 70, 89, 99, 679, 689, 708, 718, 1204, 1214, 1233, 1243, 1265, 1266, 1267, 1383, 1389, 1393], "nrai": [60, 70, 89, 99, 466, 564, 679, 689, 708, 718, 1117, 1204, 1214, 1233, 1243, 1267, 1302, 1339, 1383, 1389, 1393], "nsweep": [60, 89, 679, 708, 1204, 1233, 1265, 1266, 1364, 1365, 1378, 1393], "loos": [61, 62, 90, 91, 584, 680, 681, 709, 710, 1205, 1206, 1234, 1235, 1322], "existing_field_nam": [62, 91, 681, 710, 1206, 1235], "done": [62, 91, 136, 138, 146, 516, 535, 681, 710, 784, 786, 794, 1167, 1186, 1206, 1235, 1383, 1395, 1396, 1398], "both": [62, 91, 138, 198, 202, 382, 521, 522, 681, 710, 786, 800, 847, 851, 1035, 1172, 1173, 1206, 1235, 1347, 1350, 1352, 1356, 1371, 1381, 1387, 1388, 1389, 1390, 1395, 1396], "reflectivity_copi": [62, 91, 681, 710, 1206, 1235], "gatefilt": [63, 92, 127, 128, 129, 138, 139, 140, 141, 146, 152, 198, 199, 200, 201, 202, 203, 204, 205, 223, 230, 233, 234, 235, 236, 237, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 447, 501, 526, 527, 528, 533, 537, 538, 682, 711, 775, 776, 777, 786, 787, 788, 789, 794, 800, 802, 847, 848, 849, 850, 851, 852, 853, 854, 873, 880, 883, 884, 885, 886, 887, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1080, 1091, 1092, 1093, 1098, 1152, 1177, 1178, 1179, 1184, 1189, 1190, 1207, 1236, 1342, 1350, 1351, 1352, 1356, 1375, 1382, 1385, 1392, 1396], "updat": [63, 92, 500, 559, 682, 711, 1151, 1207, 1236, 1297, 1339, 1357, 1376, 1381, 1390, 1396], "mask": [63, 92, 138, 139, 140, 141, 147, 158, 174, 176, 179, 183, 190, 194, 195, 198, 200, 201, 202, 203, 204, 205, 223, 230, 233, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 391, 392, 393, 447, 461, 469, 479, 492, 495, 529, 572, 584, 615, 616, 632, 633, 682, 711, 751, 753, 756, 760, 767, 771, 772, 786, 787, 788, 789, 796, 800, 809, 823, 825, 828, 832, 839, 843, 844, 847, 849, 850, 851, 852, 853, 854, 873, 880, 883, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1044, 1045, 1046, 1093, 1098, 1112, 1120, 1130, 1143, 1146, 1180, 1207, 1236, 1268, 1310, 1322, 1339, 1341, 1350, 1351, 1376, 1382, 1383, 1384, 1390, 1391, 1392, 1393], "condit": [63, 92, 138, 170, 174, 176, 183, 190, 195, 400, 682, 711, 747, 751, 753, 760, 767, 772, 786, 819, 823, 825, 832, 839, 844, 1053, 1207, 1236, 1342, 1384, 1388], "append": [63, 92, 682, 711, 1207, 1236, 1378, 1389], "filtered_": [63, 92, 682, 711, 1207, 1236], "check": [64, 73, 93, 102, 139, 140, 141, 146, 155, 156, 394, 446, 497, 500, 529, 563, 574, 590, 595, 683, 692, 712, 721, 787, 788, 789, 794, 806, 807, 1047, 1097, 1148, 1151, 1180, 1208, 1217, 1237, 1246, 1301, 1312, 1328, 1333, 1381, 1395, 1396, 1397], "keyerror": [64, 93, 436, 437, 683, 712, 1063, 1064, 1074, 1075, 1208, 1237, 1395], "array_lik": [65, 94, 576, 684, 713, 1209, 1238, 1314], "view": [66, 67, 69, 95, 96, 98, 402, 434, 435, 441, 685, 686, 688, 714, 715, 717, 1056, 1061, 1062, 1068, 1072, 1073, 1078, 1210, 1211, 1213, 1239, 1240, 1242, 1356, 1385, 1387, 1393], "possibl": [66, 67, 69, 95, 96, 98, 395, 456, 530, 560, 567, 685, 686, 688, 714, 715, 717, 1048, 1107, 1181, 1210, 1211, 1213, 1239, 1240, 1242, 1298, 1305, 1339, 1355, 1376, 1385, 1387, 1390, 1391], "underli": [66, 67, 69, 95, 96, 98, 223, 230, 234, 235, 236, 237, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 382, 685, 686, 688, 714, 715, 717, 873, 880, 884, 885, 886, 887, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1035, 1210, 1211, 1213, 1239, 1240, 1242, 1381], "get_gate_x_y_z": [69, 98, 688, 717, 1213, 1242, 1366, 1367], "obtain": [69, 72, 98, 101, 130, 155, 163, 452, 462, 472, 473, 482, 500, 530, 587, 688, 691, 717, 720, 778, 806, 814, 1103, 1113, 1123, 1124, 1133, 1151, 1181, 1213, 1216, 1242, 1245, 1325, 1378, 1383, 1389, 1391, 1392, 1396], "plot": [69, 72, 98, 101, 206, 207, 208, 209, 210, 211, 212, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 461, 469, 479, 492, 495, 533, 538, 688, 691, 717, 720, 856, 857, 858, 859, 860, 861, 862, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 995, 996, 997, 998, 999, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1112, 1120, 1130, 1143, 1146, 1184, 1190, 1213, 1216, 1242, 1245, 1339, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1372, 1373, 1374, 1376, 1379, 1381, 1383, 1384, 1385, 1387, 1388, 1392, 1394], "spatial": [69, 72, 98, 101, 138, 688, 691, 717, 720, 786, 1213, 1216, 1242, 1245, 1339, 1387, 1392], "context": [69, 72, 98, 101, 688, 691, 717, 720, 1213, 1216, 1242, 1245, 1374, 1381, 1396], "request": [69, 98, 123, 391, 522, 688, 717, 742, 1044, 1091, 1092, 1093, 1173, 1213, 1242, 1339, 1381, 1396], "area": [70, 99, 137, 223, 225, 230, 234, 235, 236, 237, 238, 290, 292, 297, 301, 302, 303, 304, 323, 325, 333, 334, 338, 339, 340, 341, 360, 362, 370, 371, 375, 376, 377, 378, 497, 516, 528, 535, 572, 689, 718, 785, 873, 875, 880, 884, 885, 886, 887, 888, 940, 942, 947, 951, 952, 953, 954, 973, 975, 983, 984, 988, 989, 990, 991, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1028, 1148, 1167, 1179, 1186, 1214, 1243, 1310], "squar": [70, 99, 155, 446, 521, 524, 525, 526, 537, 550, 689, 718, 806, 1097, 1172, 1175, 1176, 1177, 1189, 1214, 1243, 1288], "assumpt": [70, 99, 513, 526, 689, 718, 1164, 1177, 1214, 1243], "size": [70, 99, 129, 138, 139, 141, 146, 201, 226, 293, 326, 363, 427, 444, 446, 456, 467, 484, 487, 488, 498, 501, 514, 526, 528, 530, 544, 561, 571, 579, 594, 689, 718, 777, 786, 787, 789, 794, 850, 876, 943, 976, 1013, 1086, 1088, 1089, 1091, 1092, 1093, 1095, 1097, 1107, 1118, 1135, 1138, 1139, 1149, 1152, 1165, 1177, 1179, 1181, 1214, 1243, 1268, 1282, 1299, 1309, 1317, 1332, 1357, 1370, 1374, 1376, 1389], "reset_gate_coord": [71, 100, 690, 719, 1215, 1244], "filter_transit": [71, 72, 100, 101, 223, 230, 234, 235, 236, 237, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 690, 691, 719, 720, 873, 880, 884, 885, 886, 887, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1215, 1216, 1244, 1245], "With": [71, 72, 100, 101, 690, 691, 719, 720, 1215, 1216, 1244, 1245, 1381, 1382, 1383], "therefor": [71, 72, 100, 101, 526, 690, 691, 719, 720, 1177, 1215, 1216, 1244, 1245, 1385, 1389, 1392, 1393], "more": [71, 72, 77, 100, 101, 106, 139, 146, 155, 253, 399, 447, 497, 498, 501, 514, 535, 552, 553, 690, 691, 696, 719, 720, 725, 787, 794, 806, 903, 1052, 1087, 1090, 1091, 1092, 1093, 1098, 1148, 1149, 1152, 1165, 1186, 1215, 1216, 1221, 1244, 1245, 1250, 1290, 1291, 1339, 1350, 1355, 1366, 1367, 1381, 1385, 1389, 1390, 1391, 1392, 1393, 1396], "effici": [71, 72, 100, 101, 497, 551, 690, 691, 719, 720, 1091, 1092, 1148, 1215, 1216, 1244, 1245, 1289, 1381, 1385], "than": [71, 72, 100, 101, 139, 148, 152, 158, 223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 497, 498, 514, 516, 526, 559, 572, 582, 690, 691, 719, 720, 787, 797, 802, 809, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1148, 1149, 1165, 1167, 1177, 1215, 1216, 1244, 1245, 1297, 1310, 1320, 1339, 1376, 1390, 1391, 1392, 1398], "through": [71, 72, 100, 101, 237, 303, 340, 377, 462, 482, 523, 690, 691, 719, 720, 887, 953, 990, 1027, 1113, 1133, 1174, 1215, 1216, 1244, 1245, 1350, 1355, 1391, 1396], "pleas": [71, 100, 306, 343, 601, 690, 719, 956, 993, 1215, 1244, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "get_field": [72, 101, 691, 720, 1216, 1245, 1366, 1367, 1390], "check_uniform": [73, 102, 692, 721, 1217, 1246], "lookuperror": [73, 102, 692, 721, 1217, 1246], "except": [73, 102, 399, 692, 721, 1052, 1069, 1217, 1246, 1387], "skip": [73, 102, 139, 140, 394, 446, 692, 721, 787, 788, 1047, 1097, 1217, 1246, 1391, 1396], "nyquist_veloc": [73, 102, 139, 140, 401, 692, 721, 787, 788, 1054, 1217, 1246, 1385, 1393], "slice": [74, 86, 103, 115, 249, 250, 255, 256, 257, 258, 269, 270, 271, 272, 693, 705, 722, 734, 899, 900, 905, 906, 907, 908, 919, 920, 921, 922, 1218, 1230, 1247, 1259, 1370, 1387, 1391, 1393], "out": [77, 106, 141, 144, 145, 152, 155, 156, 157, 200, 204, 397, 398, 399, 400, 401, 447, 515, 524, 525, 600, 604, 615, 616, 632, 633, 696, 725, 789, 792, 793, 802, 806, 807, 808, 849, 853, 1050, 1051, 1052, 1053, 1054, 1098, 1166, 1175, 1176, 1221, 1250, 1351, 1352, 1356, 1367, 1375, 1377, 1381, 1387, 1392, 1395, 1396, 1397], "_io": [77, 106, 696, 725, 1221, 1250], "textiowrapp": [77, 106, 696, 725, 1221, 1250], "stdout": [77, 106, 600, 696, 725, 1221, 1250], "encod": [77, 106, 400, 539, 696, 725, 1053, 1221, 1250, 1339], "utf": [77, 106, 539, 696, 725, 1221, 1250], "print": [77, 106, 127, 151, 152, 240, 259, 395, 526, 600, 604, 615, 616, 632, 633, 696, 725, 775, 801, 802, 890, 909, 1048, 1177, 1221, 1250, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1376, 1384, 1388, 1389, 1390, 1393], "compact": [77, 106, 696, 725, 1221, 1250], "f": [77, 106, 265, 371, 440, 696, 725, 915, 1021, 1067, 1077, 1221, 1250, 1355, 1364, 1365, 1369, 1376, 1381, 1391, 1398], "minim": [77, 106, 500, 526, 535, 696, 725, 1151, 1177, 1186, 1221, 1250], "everyth": [77, 106, 696, 725, 1221, 1250, 1347, 1396], "output": [77, 106, 133, 399, 447, 462, 482, 497, 500, 501, 516, 523, 530, 532, 563, 696, 725, 781, 1052, 1088, 1098, 1113, 1133, 1148, 1151, 1152, 1167, 1174, 1181, 1183, 1221, 1250, 1301, 1339, 1381, 1390, 1392], "screen": [77, 106, 696, 725, 1221, 1250], "gate_": [80, 109, 699, 728, 1224, 1253], "iter": [82, 83, 84, 85, 86, 87, 88, 111, 112, 113, 114, 115, 116, 117, 149, 416, 440, 456, 471, 502, 526, 528, 561, 701, 702, 703, 704, 705, 706, 707, 730, 731, 732, 733, 734, 735, 736, 798, 1067, 1077, 1107, 1122, 1153, 1177, 1179, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1299, 1393], "over": [84, 87, 88, 113, 116, 117, 136, 137, 138, 139, 143, 147, 155, 156, 200, 223, 225, 230, 234, 235, 236, 237, 254, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 416, 497, 498, 514, 516, 519, 532, 534, 560, 571, 703, 706, 707, 732, 735, 736, 784, 785, 786, 787, 791, 796, 806, 807, 849, 873, 875, 880, 884, 885, 886, 887, 904, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1090, 1148, 1149, 1165, 1167, 1170, 1183, 1185, 1228, 1231, 1232, 1257, 1260, 1261, 1298, 1309, 1350, 1376, 1378, 1381, 1384, 1391, 1393], "npuls": [89, 561, 566, 567, 568, 578, 579, 580, 581, 708, 1233, 1299, 1304, 1305, 1306, 1316, 1317, 1318, 1319, 1389], "doppler_veloc": [89, 500, 708, 1151, 1233, 1389], "doppler_frequ": [89, 708, 1233], "puls": [89, 149, 153, 164, 471, 472, 516, 561, 566, 567, 568, 574, 578, 579, 580, 581, 708, 798, 803, 815, 1122, 1123, 1167, 1233, 1267, 1299, 1304, 1305, 1306, 1312, 1316, 1317, 1318, 1319, 1385], "npulses_max": [89, 708, 1233, 1267, 1389], "frequenc": [89, 128, 129, 401, 444, 456, 472, 473, 494, 503, 504, 505, 507, 508, 516, 517, 518, 523, 526, 527, 528, 536, 708, 776, 777, 1054, 1095, 1107, 1123, 1124, 1145, 1154, 1155, 1156, 1158, 1159, 1167, 1168, 1169, 1174, 1177, 1178, 1179, 1187, 1233, 1392], "ke": [118, 119, 120, 516, 656, 737, 738, 739, 1167, 1339], "kilomet": [118, 498, 514, 737, 1088, 1149, 1165], "effect": [118, 119, 120, 153, 164, 174, 176, 183, 190, 195, 235, 494, 516, 737, 738, 739, 751, 753, 760, 767, 772, 803, 815, 823, 825, 832, 839, 844, 885, 1091, 1092, 1093, 1145, 1167, 1366, 1391], "scale": [118, 119, 120, 223, 230, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 400, 401, 463, 497, 526, 527, 737, 738, 739, 873, 880, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1031, 1053, 1054, 1091, 1092, 1093, 1114, 1148, 1177, 1178, 1358, 1392], "equat": [118, 526, 560, 737, 1177, 1298], "28": [118, 737, 1372, 1376, 1378, 1381, 1391, 1396], "b": [118, 497, 498, 514, 527, 538, 737, 1030, 1148, 1149, 1165, 1178, 1190, 1396], "doviak": [118, 444, 737, 1095], "zrnic": [118, 444, 492, 737, 1095, 1143], "sqrt": [118, 122, 516, 737, 741, 1167, 1366, 1367, 1378, 1391], "r": [118, 121, 122, 123, 124, 125, 138, 140, 151, 152, 213, 228, 229, 251, 267, 280, 295, 296, 313, 328, 329, 330, 331, 350, 365, 366, 367, 368, 451, 461, 465, 470, 471, 479, 485, 497, 498, 501, 504, 507, 508, 509, 514, 530, 532, 535, 537, 560, 561, 572, 737, 740, 741, 742, 743, 744, 786, 788, 801, 802, 863, 878, 879, 901, 917, 930, 945, 946, 963, 978, 979, 980, 981, 1000, 1015, 1016, 1017, 1018, 1102, 1112, 1116, 1121, 1122, 1130, 1136, 1148, 1149, 1152, 1155, 1158, 1159, 1160, 1165, 1181, 1183, 1186, 1189, 1298, 1299, 1310, 1346, 1358, 1366, 1367, 1376, 1396], "sin": [118, 122, 125, 513, 737, 741, 744, 1164], "theta_": [118, 737], "arcsin": [118, 122, 737, 741], "frac": [118, 737], "theta_a": [118, 737], "arc": [118, 563, 737, 1301], "length": [118, 151, 152, 155, 156, 157, 158, 159, 160, 501, 516, 526, 530, 566, 578, 579, 737, 801, 802, 806, 807, 808, 809, 810, 811, 1152, 1167, 1177, 1181, 1304, 1316, 1317, 1389], "6371": [118, 122, 125, 563, 590, 737, 741, 744, 1301, 1328], "weather": [118, 138, 153, 154, 161, 164, 461, 471, 479, 516, 526, 561, 664, 737, 786, 803, 805, 812, 815, 1087, 1090, 1112, 1122, 1130, 1167, 1177, 1299, 1346, 1355, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "edit": [118, 737, 1396], "1993": [118, 444, 737, 1095], "21": [118, 737, 1339, 1390], "vector": [119, 123, 223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 466, 521, 523, 524, 525, 548, 550, 551, 738, 742, 795, 804, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1117, 1172, 1174, 1175, 1176, 1286, 1288, 1289, 1391], "util": [119, 129, 138, 139, 235, 503, 738, 777, 786, 787, 885, 1154, 1191, 1341, 1347, 1358, 1371, 1374, 1376, 1390, 1391, 1392, 1396], "antenna_to_cartesian": [119, 738], "cartograph": [121, 122, 123, 124, 125, 343, 740, 741, 742, 743, 744, 993], "build": [121, 123, 124, 170, 174, 176, 183, 190, 195, 401, 600, 740, 742, 743, 747, 751, 753, 760, 767, 772, 819, 823, 825, 832, 839, 844, 1054, 1381, 1395, 1396], "desir": [121, 123, 124, 174, 176, 183, 190, 195, 402, 479, 498, 514, 537, 567, 568, 581, 591, 592, 740, 742, 743, 751, 753, 760, 767, 772, 823, 825, 832, 839, 844, 1056, 1130, 1149, 1165, 1189, 1263, 1305, 1306, 1319, 1329, 1330, 1374, 1388], "6370997": [122, 125, 741, 744], "rho": [122, 741, 1390], "arctan2": [122, 741, 1378, 1391], "snyder": [122, 125, 741, 744], "manual": [122, 125, 741, 744, 1381], "geolog": [122, 125, 741, 744], "survei": [122, 125, 741, 744], "profession": [122, 125, 741, 744], "paper": [122, 125, 501, 741, 744, 1152, 1381, 1396], "1395": [122, 125, 741, 744], "1987": [122, 125, 741, 744], "pp": [122, 125, 444, 461, 469, 479, 492, 741, 744, 1095, 1112, 1120, 1130, 1143], "191": [122, 125, 741, 744], "202": [122, 125, 741, 744, 1366, 1372, 1394], "find": [123, 139, 146, 155, 156, 514, 515, 532, 562, 742, 787, 794, 806, 807, 1080, 1087, 1091, 1092, 1093, 1165, 1166, 1183, 1300, 1347, 1391, 1398], "arcco": [125, 744], "no_altitude_transform": [126, 745], "wgs84": [126, 237, 303, 340, 377, 399, 745, 887, 953, 990, 1027, 1052], "ch1903": [126, 745], "lv03": [126, 745], "formula": [126, 444, 745, 1095], "formeln": [126, 745], "und": [126, 745], "konstanten": [126, 745], "f\u00fcr": [126, 745], "die": [126, 745], "berechnung": [126, 745], "der": [126, 745], "schweizerischen": [126, 745], "schiefachsigen": [126, 745], "zylinderprojekt": [126, 745], "zwischen": [126, 745], "koordinatensystemen": [126, 745], "chapter": [126, 745], "n\u00e4herungsl\u00f6sungen": [126, 745], "bundesamt": [126, 745], "landestopografi": [126, 745], "swisstopo": [126, 745], "admin": [126, 745, 1396], "ch": [126, 745, 1377, 1378], "oktob": [126, 745], "2008": [126, 497, 530, 745, 1148, 1181, 1347], "input": [126, 151, 152, 399, 462, 470, 471, 482, 499, 500, 514, 516, 522, 523, 528, 530, 547, 559, 572, 745, 801, 802, 1052, 1088, 1089, 1113, 1121, 1122, 1133, 1150, 1151, 1165, 1167, 1173, 1174, 1179, 1181, 1285, 1297, 1310, 1376, 1388, 1392], "46": [126, 237, 303, 340, 377, 745, 887, 953, 990, 1027, 1374, 1392], "38": [126, 745, 1347], "87": [126, 745, 1087, 1090], "43": [126, 745, 1339], "49": [126, 745], "79": [126, 745], "650": [126, 745], "60": [126, 745, 1080, 1341, 1346, 1350, 1352, 1357, 1383, 1385, 1387, 1392], "result": [126, 136, 137, 138, 139, 140, 174, 176, 183, 190, 195, 223, 230, 233, 234, 235, 236, 237, 250, 256, 258, 268, 270, 272, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 381, 398, 402, 447, 500, 524, 525, 530, 531, 533, 537, 538, 539, 549, 561, 588, 745, 751, 753, 760, 767, 772, 784, 785, 786, 787, 788, 804, 823, 825, 832, 839, 844, 873, 880, 883, 884, 885, 886, 887, 900, 906, 908, 918, 920, 922, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1034, 1051, 1056, 1088, 1089, 1093, 1098, 1151, 1175, 1176, 1181, 1182, 1184, 1189, 1190, 1287, 1299, 1326, 1347, 1377, 1381, 1387, 1391, 1396], "chy": [126, 745], "699": [126, 745], "999": [126, 138, 402, 745, 786, 1056, 1347, 1348, 1394], "76": [126, 745], "700000": [126, 745], "chx": [126, 745], "99": [126, 452, 532, 745, 1103, 1183, 1355], "97": [126, 144, 145, 745, 792, 793, 1350, 1352, 1356, 1358, 1370, 1374, 1376, 1383], "100000": [126, 745, 1387, 1391], "chh": [126, 745], "600": [126, 745, 1383], "05": [126, 138, 536, 745, 786, 1091, 1092, 1093, 1187, 1353, 1370, 1374, 1379, 1394], "z_offset": [127, 775], "debug": [127, 138, 151, 152, 240, 259, 395, 526, 600, 775, 786, 801, 802, 890, 909, 1048, 1177], "doc": [127, 128, 129, 143, 144, 147, 152, 155, 156, 157, 775, 776, 777, 791, 792, 796, 802, 806, 807, 808, 1381, 1395, 1396, 1398], "15": [127, 516, 526, 572, 775, 1167, 1177, 1310, 1341, 1342, 1347, 1355, 1358, 1364, 1365, 1366, 1367, 1370, 1371, 1374, 1378, 1385, 1391, 1393], "fzl": [127, 128, 129, 143, 144, 147, 151, 152, 155, 156, 157, 775, 776, 777, 791, 792, 796, 801, 802, 806, 807, 808, 1392], "4000": [127, 151, 152, 775, 801, 802, 1387], "rhv_min": [127, 775], "ncp_min": [127, 775], "a_coef": [127, 129, 775, 777], "06": [127, 775, 1372, 1389, 1394], "beta": [127, 129, 503, 504, 505, 506, 507, 508, 775, 777, 795, 804, 1154, 1155, 1156, 1157, 1158, 1159], "refl_field": [127, 128, 129, 130, 134, 136, 137, 142, 143, 144, 145, 151, 152, 155, 156, 157, 159, 160, 198, 201, 202, 445, 472, 473, 474, 480, 481, 494, 497, 498, 499, 501, 504, 506, 507, 508, 509, 523, 524, 530, 535, 775, 776, 777, 778, 782, 784, 785, 790, 791, 792, 793, 800, 801, 802, 806, 807, 808, 810, 811, 847, 850, 851, 1093, 1096, 1123, 1124, 1125, 1131, 1132, 1145, 1148, 1149, 1150, 1152, 1155, 1157, 1158, 1159, 1160, 1174, 1175, 1181, 1186, 1341, 1376, 1377, 1392], "ncp_field": [127, 151, 202, 775, 800, 801, 851, 1341], "rhv_field": [127, 151, 198, 201, 202, 499, 523, 530, 775, 800, 801, 847, 850, 851, 1150, 1174, 1181, 1341, 1377, 1392], "spec_at_field": [127, 128, 129, 775, 776, 777], "corr_refl_field": [127, 128, 129, 136, 137, 775, 776, 777, 784, 785], "attenu": [127, 128, 129, 148, 149, 150, 164, 444, 473, 480, 503, 504, 507, 517, 775, 776, 777, 797, 798, 799, 815, 1095, 1124, 1131, 1154, 1155, 1158, 1168, 1339, 1340, 1343, 1344, 1377, 1381, 1394], "phi": [127, 129, 151, 775, 777, 801, 1341, 1390, 1392], "must": [127, 128, 129, 138, 334, 384, 388, 389, 394, 400, 444, 497, 501, 516, 521, 526, 527, 528, 531, 539, 589, 775, 776, 777, 786, 984, 1037, 1041, 1042, 1047, 1053, 1095, 1148, 1152, 1167, 1172, 1177, 1178, 1179, 1182, 1327, 1376, 1381, 1390, 1395, 1396], "copol_coeff": [127, 775, 1270, 1341, 1374, 1375, 1383], "norm_coherent_pow": [127, 775, 1270, 1341, 1383], "proc_dp_phase_shift": [127, 775, 1341, 1374, 1383], "reflectivity_horizont": [127, 138, 775, 786, 1270, 1341, 1350, 1355, 1357, 1361, 1363, 1364, 1365, 1369, 1371, 1374, 1375, 1376, 1383, 1384], "supress": [127, 240, 252, 253, 259, 334, 371, 775, 890, 902, 903, 909, 984, 1021], "freez": [127, 128, 129, 143, 144, 147, 155, 156, 157, 461, 479, 501, 530, 531, 532, 775, 776, 777, 791, 792, 796, 806, 807, 808, 1112, 1130, 1152, 1181, 1182, 1183, 1392], "layer": [127, 128, 129, 130, 131, 136, 137, 143, 144, 147, 155, 156, 157, 200, 204, 399, 452, 501, 504, 520, 526, 530, 531, 532, 533, 775, 776, 777, 778, 779, 784, 785, 791, 792, 796, 806, 807, 808, 849, 853, 1052, 1103, 1152, 1155, 1171, 1177, 1181, 1182, 1183, 1184, 1268, 1339, 1392], "combin": [127, 128, 129, 582, 583, 775, 776, 777, 1320, 1321, 1396], "normal": [127, 130, 136, 137, 151, 202, 223, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 297, 301, 302, 303, 323, 333, 334, 338, 339, 340, 360, 370, 371, 375, 376, 377, 429, 523, 584, 775, 778, 784, 785, 800, 801, 851, 873, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 947, 951, 952, 953, 973, 983, 984, 988, 989, 990, 1010, 1020, 1021, 1025, 1026, 1027, 1174, 1322, 1366, 1389], "coher": [127, 151, 202, 775, 800, 801, 851], "zdr_field": [127, 128, 129, 133, 144, 145, 148, 149, 155, 156, 157, 198, 201, 455, 474, 499, 523, 530, 775, 776, 777, 781, 792, 793, 797, 798, 806, 807, 808, 847, 850, 1106, 1125, 1150, 1174, 1181, 1377, 1392], "spec_at": [127, 128, 129, 775, 776, 777, 1341, 1377, 1392], "cor_z": [127, 128, 129, 775, 776, 777, 1341, 1377, 1392], "gu": [127, 129, 775, 777], "et": [127, 129, 133, 149, 471, 497, 498, 514, 523, 526, 530, 531, 535, 775, 777, 781, 798, 1122, 1148, 1149, 1165, 1174, 1177, 1181, 1182, 1186, 1376, 1392], "al": [127, 129, 133, 149, 471, 497, 498, 514, 523, 526, 527, 530, 531, 535, 775, 777, 781, 798, 1122, 1148, 1149, 1165, 1174, 1177, 1178, 1181, 1182, 1186, 1376, 1392], "heavi": [127, 129, 572, 775, 777, 1310, 1358, 1366], "rain": [127, 129, 134, 142, 143, 144, 155, 156, 157, 159, 160, 452, 461, 479, 497, 503, 504, 505, 506, 509, 514, 535, 775, 777, 782, 790, 791, 792, 806, 807, 808, 810, 811, 1103, 1112, 1130, 1148, 1154, 1155, 1156, 1157, 1160, 1165, 1186, 1358, 1366, 1376, 1377, 1391, 1392], "jamc": [127, 129, 528, 775, 777, 1179], "2011": [127, 129, 775, 777, 1374], "50": [127, 129, 145, 456, 469, 493, 495, 523, 530, 544, 775, 777, 793, 1031, 1107, 1120, 1144, 1146, 1174, 1181, 1282, 1352, 1370, 1374, 1377, 1378, 1387, 1390, 1391, 1392, 1393], "39": [127, 129, 775, 777, 1374], "58": [127, 129, 497, 775, 777, 1148, 1374], "pia_coef": [128, 776], "pida_coef": [128, 776], "temp_field": [128, 129, 136, 137, 143, 144, 145, 147, 155, 156, 157, 204, 499, 523, 530, 532, 776, 777, 784, 785, 791, 792, 793, 796, 806, 807, 808, 853, 1150, 1174, 1181, 1183, 1377, 1392], "iso0_field": [128, 129, 136, 137, 143, 144, 147, 155, 156, 157, 200, 499, 501, 523, 530, 531, 532, 776, 777, 784, 785, 791, 792, 796, 806, 807, 808, 849, 1150, 1152, 1174, 1181, 1182, 1183], "pia_field": [128, 129, 776, 777], "spec_diff_at_field": [128, 129, 776, 777], "pida_field": [128, 129, 776, 777], "corr_zdr_field": [128, 129, 776, 777], "temp_ref": [128, 129, 136, 137, 143, 144, 147, 155, 156, 157, 499, 519, 523, 530, 532, 776, 777, 784, 785, 791, 792, 796, 806, 807, 808, 1150, 1170, 1174, 1181, 1183, 1377, 1392], "dependec": [128, 776], "comput": [128, 129, 130, 131, 133, 136, 137, 148, 149, 150, 154, 155, 156, 164, 201, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 514, 516, 519, 523, 524, 525, 526, 527, 528, 530, 532, 534, 537, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 561, 571, 575, 576, 578, 580, 581, 585, 586, 594, 776, 777, 778, 779, 781, 784, 785, 797, 798, 799, 804, 805, 806, 807, 815, 850, 1090, 1095, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1165, 1167, 1170, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1183, 1185, 1189, 1278, 1279, 1280, 1281, 1282, 1285, 1286, 1287, 1288, 1289, 1299, 1309, 1313, 1314, 1316, 1318, 1319, 1323, 1324, 1332, 1377, 1378, 1381, 1391], "depend": [128, 129, 168, 504, 516, 530, 578, 601, 776, 777, 1088, 1093, 1155, 1167, 1181, 1316, 1390, 1396], "refl": [128, 129, 474, 776, 777, 1125, 1364], "integr": [128, 129, 154, 164, 776, 777, 805, 815, 1389, 1392], "pida_coeff": [128, 776], "0c": [128, 129, 147, 776, 777, 796], "isotherm": [128, 129, 147, 776, 777, 796], "height_over_iso0": [128, 129, 136, 137, 143, 144, 147, 155, 156, 157, 499, 523, 530, 532, 776, 777, 784, 785, 791, 792, 796, 806, 807, 808, 1150, 1174, 1181, 1183, 1388], "fixed_fzl": [128, 129, 144, 147, 155, 156, 157, 776, 777, 792, 796, 806, 807, 808], "pia_dict": [128, 129, 776, 777], "spec_diff_at": [128, 129, 776, 777, 1377, 1392], "pida_dict": [128, 129, 776, 777], "cor_zdr": [128, 129, 776, 777, 1377, 1392], "smooth_window_len": [129, 777], "smooth": [129, 146, 155, 156, 157, 158, 159, 160, 467, 484, 487, 488, 524, 525, 526, 563, 590, 777, 794, 806, 807, 808, 809, 810, 811, 1118, 1135, 1138, 1139, 1175, 1176, 1177, 1301, 1328, 1366, 1367, 1387], "window": [129, 138, 151, 152, 155, 156, 157, 158, 159, 160, 201, 446, 462, 467, 482, 484, 487, 488, 524, 525, 528, 530, 537, 544, 559, 566, 571, 578, 579, 588, 594, 777, 786, 801, 802, 806, 807, 808, 809, 810, 811, 850, 1097, 1113, 1118, 1133, 1135, 1138, 1139, 1175, 1176, 1179, 1181, 1189, 1282, 1297, 1304, 1309, 1316, 1317, 1326, 1332, 1381, 1396], "expon": [129, 151, 152, 503, 504, 505, 506, 507, 508, 777, 801, 802, 1154, 1155, 1156, 1157, 1158, 1159], "law": [129, 503, 504, 505, 506, 507, 508, 777, 1154, 1155, 1156, 1157, 1158, 1159], "ryzhkov": [129, 461, 469, 503, 530, 533, 777, 1112, 1120, 1154, 1181, 1184], "potenti": [129, 148, 503, 530, 777, 797, 1154, 1181], "rainfal": [129, 497, 503, 504, 505, 506, 507, 508, 509, 526, 528, 777, 1148, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1177, 1179, 1392], "mitig": [129, 503, 777, 1154], "partial": [129, 503, 777, 1154], "beam": [129, 130, 154, 452, 503, 516, 777, 778, 805, 1086, 1091, 1092, 1093, 1103, 1154, 1167], "blockag": [129, 503, 777, 1154], "network": [129, 139, 393, 503, 777, 787, 1046, 1154, 1391], "jaot": [129, 133, 777, 781], "2014": [129, 503, 527, 533, 777, 1154, 1178, 1184], "31": [129, 159, 391, 503, 524, 777, 810, 1044, 1154, 1175, 1347, 1374, 1390], "599": [129, 503, 777, 1154], "619": [129, 503, 777, 1154], "ml_top": [130, 131, 452, 520, 778, 779, 1103, 1171], "3000": [130, 131, 452, 519, 535, 778, 779, 1103, 1170, 1186, 1383, 1387], "ml_thick": [130, 131, 452, 778, 779, 1103], "200": [130, 131, 136, 137, 444, 452, 497, 532, 561, 580, 581, 778, 779, 784, 785, 1095, 1103, 1148, 1183, 1299, 1318, 1319, 1390, 1396], "val_ml": [130, 131, 778, 779], "val_dr": [130, 131, 778, 779], "h_max": [130, 131, 136, 137, 452, 532, 778, 779, 784, 785, 1103, 1183], "6000": [130, 131, 136, 137, 452, 530, 532, 778, 779, 784, 785, 1103, 1181, 1183, 1383, 1387], "h_re": [130, 131, 136, 137, 452, 532, 778, 779, 784, 785, 1103, 1183], "max_weight": [130, 136, 137, 778, 784, 785], "vpr_theo_dict": [130, 778], "normalized_reflect": [130, 778], "appar": [130, 452, 778, 1103], "vpr": [130, 136, 137, 778, 784, 785, 1339, 1381], "melt": [130, 131, 136, 137, 143, 144, 155, 156, 157, 200, 204, 452, 501, 504, 520, 526, 530, 531, 532, 533, 572, 778, 779, 784, 785, 791, 792, 806, 807, 808, 849, 853, 1103, 1152, 1155, 1171, 1177, 1181, 1182, 1183, 1184, 1310, 1339, 1358, 1376, 1377, 1392], "top": [130, 131, 136, 137, 153, 164, 259, 334, 452, 501, 510, 511, 520, 529, 530, 531, 532, 778, 779, 784, 785, 803, 815, 909, 984, 1093, 1103, 1152, 1161, 1162, 1171, 1180, 1181, 1182, 1183, 1355, 1374, 1387, 1396], "asl": [130, 131, 452, 778, 779, 1103], "thick": [130, 131, 136, 137, 143, 144, 147, 155, 156, 157, 200, 204, 452, 532, 778, 779, 784, 785, 791, 792, 796, 806, 807, 808, 849, 853, 1103, 1183], "peak": [130, 131, 136, 137, 452, 530, 532, 560, 778, 779, 784, 785, 1103, 1181, 1183, 1298, 1339, 1385], "decreas": [130, 131, 136, 137, 499, 519, 523, 778, 779, 784, 785, 1150, 1170, 1174], "ratio": [130, 131, 136, 137, 145, 201, 202, 203, 238, 304, 341, 378, 445, 454, 455, 516, 778, 779, 784, 785, 793, 800, 850, 851, 852, 888, 954, 991, 1028, 1096, 1105, 1106, 1167, 1392, 1393], "theoret": [130, 136, 137, 164, 452, 536, 778, 784, 785, 815, 1087, 1090, 1103, 1187], "multipli": [130, 452, 462, 498, 514, 532, 778, 1030, 1103, 1113, 1149, 1165, 1183, 1376, 1383], "radar_out": [130, 452, 778, 1103], "conta": [130, 131, 452, 501, 530, 531, 532, 602, 778, 779, 1103, 1152, 1181, 1182, 1183], "ideal": [131, 779], "val_theo_dict": [131, 779], "bottom": [131, 332, 334, 369, 452, 501, 520, 530, 531, 532, 779, 982, 984, 1019, 1103, 1152, 1171, 1181, 1182, 1183, 1355, 1357], "bia": [132, 137, 144, 145, 155, 156, 165, 780, 785, 792, 793, 804, 806, 807, 816], "magnitud": [132, 526, 780, 1177, 1378, 1393], "corrected_field": [132, 135, 780, 783], "urhohv_field": [133, 781], "snr_field": [133, 145, 203, 445, 481, 781, 793, 852, 1096, 1132], "nh_field": [133, 781], "nv_field": [133, 781], "rhohv_field": [133, 143, 144, 145, 155, 156, 157, 452, 455, 463, 501, 781, 791, 792, 793, 806, 807, 808, 1103, 1106, 1114, 1152], "eq": [133, 781, 1364], "2006": [133, 781, 1347], "subtract": [133, 451, 460, 467, 468, 476, 477, 478, 484, 487, 488, 489, 498, 514, 781, 1102, 1111, 1118, 1119, 1127, 1128, 1129, 1135, 1138, 1139, 1140, 1149, 1165, 1389], "uncorrect": [133, 781], "snr": [133, 145, 203, 445, 481, 568, 581, 781, 793, 852, 1096, 1132, 1306, 1319, 1392], "channel": [133, 165, 399, 458, 464, 478, 490, 491, 496, 781, 816, 1052, 1109, 1115, 1129, 1141, 1142, 1147], "meteo": [133, 136, 137, 530, 532, 781, 784, 785, 1181, 1183], "franc": [133, 136, 137, 532, 781, 784, 785, 1183], "23": [133, 781, 1378], "1340": [133, 781], "1356": [133, 781], "ind_rmin": [134, 142, 143, 144, 145, 159, 160, 470, 782, 790, 791, 792, 793, 810, 811, 1121], "10": [134, 141, 142, 143, 144, 145, 149, 151, 152, 159, 160, 161, 164, 170, 203, 205, 237, 303, 340, 377, 444, 456, 461, 471, 492, 498, 501, 512, 514, 523, 527, 528, 530, 532, 561, 572, 747, 782, 789, 790, 791, 792, 793, 798, 801, 802, 810, 811, 812, 815, 819, 852, 854, 887, 953, 990, 1027, 1087, 1090, 1093, 1095, 1107, 1112, 1122, 1143, 1149, 1152, 1163, 1165, 1174, 1178, 1179, 1181, 1183, 1299, 1310, 1342, 1347, 1350, 1351, 1355, 1358, 1359, 1361, 1363, 1366, 1367, 1370, 1376, 1378, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1396], "ind_rmax": [134, 142, 143, 144, 145, 159, 160, 782, 790, 791, 792, 793, 810, 811], "500": [134, 142, 143, 144, 145, 159, 160, 530, 782, 790, 791, 792, 793, 810, 811, 1080, 1181, 1350, 1356, 1360, 1389, 1390, 1391], "min_rcon": [134, 142, 155, 156, 159, 160, 782, 790, 806, 807, 810, 811], "11": [134, 142, 158, 159, 160, 237, 303, 340, 377, 453, 498, 514, 524, 525, 588, 782, 790, 809, 810, 811, 887, 953, 990, 1027, 1104, 1149, 1165, 1175, 1176, 1326, 1347, 1374, 1388, 1393], "zmin": [134, 142, 143, 144, 145, 159, 160, 782, 790, 791, 792, 793, 810, 811, 1391], "20": [134, 136, 137, 142, 143, 144, 148, 155, 156, 157, 159, 160, 198, 201, 202, 452, 530, 532, 533, 782, 784, 785, 790, 791, 792, 797, 800, 806, 807, 808, 810, 811, 847, 850, 851, 1103, 1181, 1183, 1184, 1346, 1347, 1350, 1356, 1357, 1358, 1361, 1363, 1364, 1365, 1366, 1367, 1369, 1375, 1376, 1383, 1387, 1391, 1393], "zmax": [134, 142, 143, 144, 145, 159, 160, 782, 790, 791, 792, 793, 810, 811, 1391], "40": [134, 140, 142, 143, 159, 160, 265, 456, 497, 524, 566, 782, 788, 790, 791, 810, 811, 915, 1107, 1148, 1175, 1304, 1342, 1352, 1357, 1361, 1363, 1366, 1376, 1390, 1391, 1392], "psidp_field": [134, 159, 160, 526, 527, 528, 782, 810, 811, 1177, 1178, 1179, 1377, 1392], "public": [134, 142, 782, 790, 1338, 1383, 1384, 1385, 1387, 1388, 1390, 1393], "min": [134, 136, 137, 142, 143, 144, 145, 148, 159, 160, 198, 225, 292, 325, 362, 470, 530, 574, 782, 784, 785, 790, 791, 792, 793, 797, 810, 811, 847, 875, 942, 975, 1012, 1090, 1121, 1181, 1312, 1378, 1391], "max": [134, 136, 137, 142, 143, 144, 145, 155, 156, 159, 160, 198, 225, 292, 325, 362, 399, 470, 501, 530, 574, 782, 784, 785, 790, 791, 792, 793, 806, 807, 810, 811, 847, 875, 942, 975, 1012, 1031, 1052, 1090, 1121, 1152, 1181, 1312, 1346, 1350, 1355, 1356, 1361, 1369, 1378, 1391], "look": [134, 142, 143, 144, 145, 148, 155, 156, 157, 159, 160, 162, 163, 447, 469, 470, 530, 533, 562, 578, 580, 581, 782, 790, 791, 792, 793, 797, 806, 807, 808, 810, 811, 813, 814, 1098, 1120, 1121, 1181, 1184, 1300, 1316, 1318, 1319, 1346, 1347, 1350, 1357, 1381, 1383, 1385, 1387, 1389, 1391, 1392, 1393], "continu": [134, 138, 140, 142, 151, 159, 160, 531, 782, 786, 788, 790, 801, 810, 811, 1182], "consecut": [134, 142, 155, 156, 159, 160, 530, 561, 782, 790, 806, 807, 810, 811, 1181, 1299], "cell": [134, 142, 159, 160, 782, 790, 810, 811, 1090, 1366], "phidp_dict": [134, 159, 160, 457, 458, 782, 810, 811, 1108, 1109], "vis_field": [135, 205, 783, 854], "nvalid_min": [136, 137, 461, 469, 479, 492, 532, 547, 549, 784, 785, 1112, 1120, 1130, 1143, 1183, 1285, 1287], "angle_min": [136, 137, 784, 785], "angle_max": [136, 137, 784, 785], "ml_thickness_min": [136, 137, 532, 784, 785, 1183], "ml_thickness_max": [136, 137, 532, 784, 785, 1183], "800": [136, 137, 149, 471, 561, 784, 785, 798, 1122, 1299], "ml_thickness_step": [136, 137, 532, 784, 785, 1183], "iso0_max": [136, 137, 532, 784, 785, 1183], "5000": [136, 137, 784, 785, 1378, 1387, 1391], "ml_top_diff_max": [136, 137, 532, 784, 785, 1183], "ml_top_step": [136, 137, 532, 784, 785, 1183], "ml_peak_min": [136, 137, 784, 785], "ml_peak_max": [136, 137, 784, 785], "ml_peak_step": [136, 137, 784, 785], "dr_min": [136, 137, 784, 785], "dr_max": [136, 137, 784, 785], "dr_step": [136, 137, 784, 785], "dr_default": [136, 137, 784, 785], "dr_alt": [136, 137, 784, 785], "h_corr_max": [136, 137, 784, 785], "15000": [136, 137, 461, 492, 784, 785, 1112, 1143, 1383, 1387], "rmin_ob": [136, 137, 784, 785], "rmax_ob": [136, 137, 784, 785], "150000": [136, 137, 784, 785], "filter_param": [136, 784], "weight_mem": [136, 137, 784, 785], "75": [136, 137, 170, 238, 304, 341, 378, 399, 456, 498, 514, 523, 530, 534, 747, 784, 785, 819, 888, 954, 991, 1028, 1052, 1107, 1149, 1165, 1174, 1181, 1185, 1350, 1366, 1376, 1383, 1387, 1388, 1390], "vpr_theo_dict_mem": [136, 137, 784, 785], "radar_mem_list": [136, 137, 784, 785], "lin_refl_field": [136, 137, 784, 785], "norm_refl_field": [136, 137, 784, 785], "corr_field": [136, 137, 784, 785], "averag": [136, 137, 139, 155, 156, 461, 465, 469, 479, 485, 492, 498, 514, 516, 532, 537, 547, 549, 560, 575, 784, 785, 787, 806, 807, 1030, 1112, 1116, 1120, 1130, 1136, 1143, 1149, 1165, 1167, 1183, 1189, 1285, 1287, 1298, 1313, 1339, 1376, 1378, 1391], "explor": [136, 137, 461, 532, 784, 785, 1112, 1183], "iso": [136, 137, 519, 532, 534, 784, 785, 1170, 1183, 1185], "proper": [136, 137, 784, 785, 1395], "could": [136, 137, 452, 551, 559, 784, 785, 1103, 1289, 1297, 1347, 1396], "abl": [136, 137, 144, 145, 784, 785, 792, 793, 1381, 1395], "dr": [136, 137, 516, 526, 784, 785, 1167, 1177], "masl": [136, 137, 520, 532, 784, 785, 1171, 1183], "weight": [136, 137, 155, 456, 479, 523, 526, 532, 537, 569, 596, 597, 598, 599, 784, 785, 806, 1088, 1089, 1090, 1091, 1092, 1093, 1107, 1130, 1174, 1177, 1183, 1189, 1307, 1334, 1335, 1336, 1337, 1387, 1391], "compar": [136, 137, 138, 174, 447, 456, 501, 532, 544, 561, 751, 784, 785, 786, 823, 1098, 1107, 1152, 1183, 1282, 1299, 1339, 1344, 1349, 1353, 1355, 1376, 1391, 1392, 1394, 1396], "previou": [136, 137, 138, 334, 371, 500, 530, 784, 785, 786, 984, 1021, 1151, 1181], "shape": [136, 176, 190, 389, 529, 584, 753, 767, 784, 825, 839, 1042, 1180, 1322, 1376, 1383, 1387, 1388, 1389, 1393, 1396], "past": [136, 137, 532, 784, 785, 1183, 1396], "refl_corr_dict": [136, 137, 784, 785], "corr_field_dict": [136, 137, 784, 785], "vpr_theo_dict_filt": [136, 137, 784, 785], "radar_rhi": [136, 137, 547, 552, 784, 785, 1285, 1290], "correct_iso0": [137, 785], "spatialis": [137, 785], "last_radar": [138, 786], "sonde_profil": [138, 786], "filt": [138, 786], "rsl_badval": [138, 786], "131072": [138, 786], "keep_origin": [138, 139, 140, 786, 787, 788], "set_limit": [138, 139, 140, 786, 787, 788, 1358, 1359, 1360, 1362, 1364, 1365, 1366, 1367, 1369], "vel_field": [138, 139, 140, 198, 446, 513, 538, 786, 787, 788, 847, 1097, 1164, 1190, 1385], "corr_vel_field": [138, 139, 140, 786, 787, 788], "last_vel_field": [138, 786], "max_shear": [138, 786], "sign": [138, 512, 537, 538, 786, 1163, 1189, 1190, 1339, 1366, 1367, 1391], "dealia": [138, 139, 140, 500, 786, 787, 788, 1151, 1339, 1340, 1343, 1344, 1385, 1391, 1394], "4dd": [138, 786, 1339], "univers": [138, 396, 509, 786, 1049, 1160, 1381], "washington": [138, 786], "sound": [138, 512, 537, 538, 786, 1163, 1189, 1190], "For": [138, 249, 255, 257, 269, 271, 389, 399, 524, 525, 526, 786, 899, 905, 907, 919, 921, 1042, 1052, 1091, 1092, 1175, 1176, 1177, 1346, 1350, 1377, 1388, 1393, 1396, 1398], "best": [138, 786], "argument": [138, 139, 140, 223, 230, 234, 235, 236, 237, 249, 250, 252, 253, 254, 255, 256, 257, 258, 268, 269, 270, 271, 272, 290, 297, 301, 302, 303, 323, 330, 331, 332, 333, 334, 335, 338, 339, 340, 360, 367, 368, 369, 370, 371, 372, 375, 376, 377, 391, 393, 401, 402, 527, 528, 786, 787, 788, 873, 880, 884, 885, 886, 887, 899, 900, 902, 903, 904, 905, 906, 907, 908, 918, 919, 920, 921, 922, 940, 947, 951, 952, 953, 973, 980, 981, 982, 983, 984, 985, 988, 989, 990, 1010, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1031, 1044, 1046, 1054, 1056, 1087, 1090, 1093, 1178, 1179, 1339, 1396], "_fourdd_interfac": [138, 786], "fourdd_dealia": [138, 786], "fine": [138, 786], "tune": [138, 786, 1376], "behavior": [138, 334, 389, 402, 786, 984, 1042, 1056], "fourdd": [138, 786], "dealias": [138, 139, 140, 500, 786, 787, 788, 1151, 1342, 1346, 1381, 1382, 1390, 1396], "mean_doppler_veloc": [138, 786, 1369, 1374, 1383], "successfulli": [138, 786], "greatli": [138, 786], "improv": [138, 527, 528, 572, 786, 1178, 1179, 1310, 1339, 1358], "final": [138, 456, 502, 527, 528, 786, 1107, 1153, 1178, 1179, 1376, 1391], "horizontalwindprofil": [138, 383, 384, 538, 589, 786, 1036, 1037, 1190, 1327, 1396], "sond": [138, 139, 383, 384, 515, 786, 787, 1036, 1037, 1166, 1342], "moment_based_gate_filt": [138, 139, 140, 786, 787, 788, 1093], "bergen": [138, 786], "alber": [138, 786], "bad": [138, 501, 526, 527, 528, 535, 786, 1152, 1177, 1178, 1179, 1186, 1391], "rsl": [138, 382, 394, 395, 786, 1035, 1047, 1048, 1339, 1381, 1395], "procedur": [138, 139, 140, 786, 787, 788], "fail": [138, 139, 140, 389, 399, 786, 787, 788, 1042, 1052, 1396], "element": [138, 139, 140, 141, 146, 170, 401, 529, 575, 576, 585, 586, 747, 786, 787, 788, 789, 794, 819, 1054, 1088, 1089, 1091, 1092, 1093, 1180, 1313, 1314, 1323, 1324, 1391], "maxshear": [138, 786], "shear": [138, 510, 511, 786, 1161, 1162], "incorpor": [138, 514, 786, 1165, 1376], "toward": [138, 512, 537, 538, 786, 1163, 1189, 1190], "neg": [138, 223, 234, 290, 301, 323, 338, 360, 375, 500, 512, 526, 537, 538, 559, 786, 873, 884, 940, 951, 973, 988, 1010, 1025, 1151, 1163, 1177, 1189, 1190, 1297, 1339, 1355, 1391], "compthresh": [138, 786], "fraction": [138, 786, 1088, 1089, 1376, 1393], "threshold": [138, 141, 146, 150, 198, 200, 201, 202, 203, 204, 205, 456, 497, 498, 501, 502, 504, 507, 508, 512, 514, 560, 561, 566, 567, 568, 572, 578, 579, 580, 581, 786, 789, 794, 799, 800, 847, 849, 850, 851, 852, 853, 854, 1030, 1107, 1148, 1149, 1152, 1153, 1155, 1158, 1159, 1163, 1165, 1298, 1299, 1304, 1305, 1306, 1310, 1316, 1317, 1318, 1319, 1376, 1385, 1388], "mark": [138, 170, 174, 183, 195, 747, 751, 760, 772, 786, 819, 823, 832, 844], "begin": [138, 139, 140, 151, 152, 170, 208, 210, 230, 234, 275, 277, 297, 301, 308, 310, 333, 338, 345, 347, 370, 375, 389, 390, 393, 395, 747, 786, 787, 788, 801, 802, 819, 858, 860, 880, 884, 925, 927, 947, 951, 958, 960, 983, 988, 995, 997, 1020, 1025, 1042, 1043, 1046, 1048], "unfold": [138, 139, 151, 152, 526, 786, 787, 801, 802, 1177, 1391], "compthresh2": [138, 786], "thresh": [138, 504, 507, 508, 786, 1155, 1158, 1159, 1392], "adjac": [138, 786], "count": [138, 786, 1350, 1385, 1393], "against": [138, 174, 751, 786, 823, 1366], "question": [138, 786, 1032, 1093], "ckval": [138, 786], "absolut": [138, 234, 301, 338, 375, 544, 582, 786, 884, 951, 988, 1025, 1282, 1320], "below": [138, 141, 147, 151, 152, 174, 188, 198, 200, 201, 202, 203, 204, 205, 223, 230, 233, 234, 235, 236, 237, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 497, 498, 504, 507, 508, 514, 526, 532, 559, 560, 751, 765, 786, 789, 796, 800, 801, 802, 823, 837, 847, 849, 850, 851, 852, 853, 854, 873, 880, 883, 884, 885, 886, 887, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1091, 1092, 1093, 1148, 1149, 1155, 1158, 1159, 1165, 1177, 1183, 1297, 1298, 1355, 1376, 1383, 1385, 1388, 1389, 1390, 1392, 1397], "stdthresh": [138, 786], "deviat": [138, 148, 149, 165, 470, 512, 542, 543, 571, 576, 786, 797, 798, 804, 816, 1121, 1163, 1268, 1280, 1281, 1309, 1314, 1385], "portion": [138, 786, 1387], "epsilon": [138, 786], "miss": [138, 501, 526, 527, 528, 535, 786, 1152, 1177, 1178, 1179, 1186, 1339, 1347], "maxcount": [138, 786], "allow": [138, 141, 146, 222, 289, 322, 359, 456, 497, 501, 512, 530, 559, 786, 789, 794, 872, 939, 972, 1009, 1080, 1107, 1148, 1152, 1163, 1181, 1297, 1350, 1393, 1398], "pass2": [138, 786], "retain": [138, 139, 140, 198, 200, 201, 202, 203, 204, 205, 595, 786, 787, 788, 800, 847, 849, 850, 851, 852, 853, 854, 1333], "rm": [138, 786], "left": [138, 332, 334, 369, 443, 500, 520, 561, 786, 982, 984, 1019, 1151, 1171, 1299, 1355, 1357, 1392], "proxim": [138, 786], "side": [138, 786], "doubl": [138, 399, 786, 1052, 1376], "captur": [138, 497, 786, 1148], "suffici": [138, 501, 786, 1152], "good": [138, 139, 786, 787, 1389, 1392], "mingood": [138, 786], "ba_mincount": [138, 786], "neighbor": [138, 391, 786, 1044, 1093, 1387], "ba_edgecount": [138, 786], "usuccess": [138, 786], "radialvelvolum": [138, 786], "lastvelvolum": [138, 786], "unfoldedvolum": [138, 786], "sondvolum": [138, 786], "vr_corr": [138, 786], "due": [138, 154, 447, 473, 480, 497, 582, 786, 805, 1098, 1124, 1131, 1148, 1320, 1350, 1385, 1392, 1395, 1398], "call": [138, 141, 169, 222, 223, 225, 230, 234, 235, 236, 237, 252, 253, 289, 290, 292, 297, 301, 302, 303, 322, 323, 325, 333, 334, 338, 339, 340, 359, 360, 362, 370, 371, 375, 376, 377, 394, 399, 402, 415, 565, 786, 789, 872, 873, 875, 880, 884, 885, 886, 887, 902, 903, 939, 940, 942, 947, 951, 952, 953, 972, 973, 975, 983, 984, 988, 989, 990, 1009, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1047, 1052, 1056, 1093, 1303, 1385, 1389, 1390, 1393, 1396, 1398], "long": [138, 159, 501, 524, 786, 810, 1152, 1175, 1384, 1393], "n": [138, 158, 212, 237, 279, 303, 312, 340, 349, 377, 497, 516, 523, 544, 566, 786, 809, 862, 887, 929, 953, 962, 990, 999, 1027, 1148, 1167, 1174, 1282, 1304, 1346, 1350, 1358, 1369, 1371, 1374, 1376, 1380, 1381, 1396, 1398], "jame": [138, 786], "houz": [138, 498, 514, 535, 786, 1030, 1149, 1165, 1186, 1376], "jr": [138, 498, 514, 535, 786, 1149, 1165, 1186, 1376], "four": [138, 391, 392, 394, 786, 1044, 1045, 1047, 1391], "dealis": [138, 786], "scheme": [138, 498, 514, 526, 786, 1030, 1087, 1090, 1149, 1165, 1177, 1376], "2001": [138, 786], "18": [138, 451, 786, 1102, 1356, 1367, 1391], "1674": [138, 786], "ref_vel_field": [139, 787], "interval_split": [139, 787], "interval_limit": [139, 787], "skip_between_rai": [139, 787], "100": [139, 141, 202, 226, 231, 237, 293, 298, 303, 326, 340, 363, 377, 401, 456, 502, 516, 532, 538, 787, 789, 800, 851, 876, 881, 887, 943, 948, 953, 976, 990, 1013, 1027, 1031, 1054, 1093, 1107, 1153, 1167, 1183, 1190, 1352, 1356, 1366, 1367, 1378, 1390, 1391], "skip_along_rai": [139, 787], "nyquist_vel": [139, 140, 787, 788, 1385], "check_nyquist_uniform": [139, 140, 446, 787, 788, 1097], "rays_wrap_around": [139, 140, 787, 788], "region": [139, 152, 265, 334, 371, 447, 497, 561, 566, 572, 574, 578, 579, 787, 802, 915, 984, 1021, 1098, 1148, 1299, 1304, 1310, 1312, 1316, 1317, 1340, 1343, 1344, 1346, 1358, 1376, 1388, 1391, 1394, 1396], "similar": [139, 456, 787, 1107, 1350, 1387, 1389, 1391], "merg": [139, 174, 176, 183, 190, 195, 384, 559, 751, 753, 760, 767, 772, 787, 823, 825, 832, 839, 844, 1037, 1297, 1339, 1391, 1396], "pair": [139, 391, 402, 437, 787, 1044, 1056, 1064, 1069, 1075, 1383, 1391], "accomplish": [139, 395, 787, 1048], "problem": [139, 151, 152, 306, 343, 787, 801, 802, 956, 993, 1093, 1347], "reduct": [139, 787], "anchor": [139, 787], "onc": [139, 787, 1376, 1389, 1395, 1398], "complet": [139, 787], "simul": [139, 516, 589, 787, 1167, 1327, 1381], "simulated_vel_from_profil": [139, 787, 1396], "segment": [139, 151, 155, 156, 330, 331, 367, 368, 787, 801, 806, 807, 980, 981, 1017, 1018], "split": [139, 572, 787, 1310], "interv": [139, 177, 182, 191, 196, 198, 202, 544, 575, 576, 754, 759, 768, 773, 787, 800, 826, 831, 840, 845, 847, 851, 1031, 1282, 1313, 1314], "larger": [139, 516, 582, 787, 1167, 1320, 1376], "longer": [139, 155, 559, 787, 806, 1297, 1381, 1389, 1395], "better": [139, 226, 231, 293, 298, 326, 335, 363, 372, 516, 787, 876, 881, 943, 948, 976, 985, 1013, 1022, 1167, 1339, 1385, 1391], "seem": [139, 787], "compromis": [139, 787], "artifact": [139, 787, 1385, 1387], "free": [139, 787, 1381], "cover": [139, 787], "entir": [139, 140, 223, 230, 234, 235, 236, 250, 256, 258, 268, 270, 272, 290, 297, 301, 302, 323, 333, 334, 338, 339, 360, 370, 371, 375, 376, 591, 592, 787, 788, 873, 880, 884, 885, 886, 900, 906, 908, 918, 920, 922, 940, 947, 951, 952, 973, 983, 984, 988, 989, 1010, 1020, 1021, 1025, 1026, 1093, 1329, 1330], "join": [139, 787, 1202], "gap": [139, 141, 146, 787, 789, 794, 1387], "connect": [139, 140, 787, 788], "disabl": [139, 140, 198, 200, 201, 202, 203, 204, 205, 787, 788, 800, 847, 849, 850, 851, 852, 853, 854, 1390], "across": [139, 787, 1031, 1375], "individu": [139, 140, 787, 788, 1093], "ident": [139, 140, 388, 787, 788, 1041, 1091, 1092], "de": [139, 140, 369, 787, 788, 1019, 1275, 1276], "alias": [139, 140, 500, 787, 788, 1151, 1275, 1276, 1385, 1391, 1393], "corr_vel": [139, 140, 787, 788, 1391], "unwrap_unit": [140, 788], "skip_check": [140, 788], "multi": [140, 537, 788, 1189, 1339], "unwrap": [140, 151, 152, 788, 801, 802], "independ": [140, 788], "often": [140, 447, 788, 1098], "give": [140, 155, 399, 500, 561, 788, 806, 1052, 1151, 1299, 1339, 1381, 1385, 1388], "superior": [140, 788], "lower": [140, 250, 252, 253, 254, 256, 258, 268, 270, 272, 443, 497, 501, 788, 900, 902, 903, 904, 906, 908, 918, 920, 922, 1148, 1152, 1351, 1352, 1391], "contamin": [140, 530, 535, 566, 788, 1181, 1186, 1304], "clutter": [140, 454, 516, 524, 525, 561, 567, 580, 788, 1105, 1167, 1175, 1176, 1299, 1305, 1318, 1385, 1388, 1390], "poor": [140, 788], "verif": [140, 788], "appropi": [140, 222, 289, 322, 359, 560, 788, 872, 939, 972, 1009, 1298], "offer": [140, 788], "extrem": [140, 249, 788, 899, 1392], "miguel": [140, 788], "arevallilo": [140, 788], "herraez": [140, 788], "david": [140, 788], "burton": [140, 788], "michael": [140, 788], "lalor": [140, 788], "munther": [140, 788], "gdeisat": [140, 788], "fast": [140, 788, 1392], "two": [140, 159, 249, 250, 401, 491, 493, 498, 514, 521, 522, 535, 548, 550, 582, 583, 585, 586, 788, 810, 899, 900, 1054, 1087, 1090, 1142, 1144, 1149, 1165, 1172, 1173, 1186, 1268, 1286, 1288, 1320, 1321, 1323, 1324, 1344, 1349, 1353, 1354, 1356, 1371, 1372, 1384, 1387, 1390, 1391, 1394, 1396], "sort": [140, 615, 788, 1391], "reliabl": [140, 788, 1391], "noncontinu": [140, 788], "optic": [140, 516, 788, 1167], "vol": [140, 451, 461, 469, 479, 492, 788, 1102, 1112, 1120, 1130, 1143, 1339], "41": [140, 788, 1374, 1378, 1387, 1391], "2002": [140, 788], "7437": [140, 788], "abdul": [140, 788], "rahman": [140, 788], "osten": [140, 788], "gorecki": [140, 788], "l": [140, 151, 152, 227, 231, 232, 265, 294, 298, 299, 327, 336, 364, 371, 373, 514, 572, 788, 801, 802, 877, 881, 882, 915, 944, 948, 949, 977, 986, 1014, 1021, 1023, 1165, 1310, 1358], "novak": [140, 788], "ed": [140, 788], "metrologi": [140, 788], "2005": [140, 498, 514, 788, 1149, 1165, 1376], "32": [140, 479, 497, 561, 788, 1130, 1148, 1268, 1299, 1355, 1359, 1360, 1361, 1371, 1374, 1378, 1391, 1392, 1393], "intern": [140, 456, 501, 788, 1107, 1152], "societi": [140, 447, 788, 1098], "photon": [140, 788], "label_dict": [141, 146, 789, 794], "delta": [141, 146, 527, 789, 794, 1178], "despeckl": [141, 789], "identifi": [141, 146, 498, 500, 514, 560, 561, 789, 794, 1030, 1149, 1151, 1165, 1298, 1299, 1358, 1376, 1388], "small": [141, 146, 497, 498, 500, 501, 513, 514, 535, 580, 789, 794, 1148, 1149, 1151, 1152, 1164, 1165, 1186, 1318, 1350, 1366], "investig": [141, 146, 533, 789, 794, 1184, 1346], "well": [141, 198, 200, 201, 202, 203, 204, 205, 371, 391, 393, 500, 601, 789, 800, 847, 849, 850, 851, 852, 853, 854, 1021, 1044, 1046, 1093, 1151, 1347, 1356, 1381, 1387, 1388, 1389, 1390, 1391, 1392], "variou": [141, 170, 198, 199, 200, 201, 202, 203, 204, 205, 565, 747, 789, 800, 819, 847, 848, 849, 850, 851, 852, 853, 854, 1303, 1339, 1344, 1373, 1381], "scipi": [141, 146, 462, 482, 526, 589, 789, 794, 1113, 1133, 1177, 1327, 1339, 1366, 1367, 1381, 1395, 1396, 1398], "core": [141, 146, 399, 497, 498, 514, 527, 528, 565, 789, 794, 1030, 1031, 1052, 1080, 1093, 1148, 1149, 1165, 1178, 1179, 1303, 1376, 1390, 1392, 1396], "queri": [141, 146, 789, 794, 1093], "speckl": [141, 789, 1376], "find_object": [141, 789], "tupl": [141, 146, 223, 225, 228, 229, 230, 233, 234, 235, 236, 237, 239, 250, 252, 256, 258, 268, 270, 272, 290, 292, 295, 296, 297, 300, 301, 302, 303, 305, 323, 325, 328, 329, 333, 334, 337, 338, 339, 340, 342, 360, 362, 365, 366, 370, 371, 374, 375, 376, 377, 379, 437, 456, 521, 522, 584, 789, 794, 873, 875, 878, 879, 880, 883, 884, 885, 886, 887, 889, 900, 902, 906, 908, 918, 920, 922, 940, 942, 945, 946, 947, 950, 951, 952, 953, 955, 973, 975, 978, 979, 983, 984, 987, 988, 989, 990, 992, 1010, 1012, 1015, 1016, 1020, 1021, 1024, 1025, 1026, 1027, 1029, 1064, 1075, 1087, 1088, 1089, 1090, 1093, 1107, 1172, 1173, 1264, 1322], "contigu": [141, 146, 789, 794], "perman": [141, 789], "altern": [142, 447, 790, 1093, 1098, 1376, 1391], "suitabl": [142, 143, 144, 145, 208, 244, 260, 275, 308, 345, 497, 532, 790, 791, 792, 793, 858, 894, 910, 925, 958, 995, 1148, 1183], "phidp0_dict": [142, 790], "first_gates_dict": [142, 790], "700": [143, 144, 155, 156, 157, 532, 791, 792, 806, 807, 808, 1183], "quantil": [143, 456, 502, 791, 1090, 1107, 1153], "rhohv_rain_dict": [143, 791], "rhohvmin": [144, 145, 792, 793], "phidpmax": [144, 145, 792, 793], "elmax": [144, 145, 198, 530, 574, 792, 793, 847, 1181, 1312], "undesir": [144, 145, 199, 200, 201, 202, 203, 204, 205, 792, 793, 800, 848, 849, 850, 851, 852, 853, 854, 1093], "moder": [144, 792], "zdr_prec_dict": [144, 792], "compli": [144, 145, 574, 792, 793, 1312], "30": [145, 149, 151, 152, 456, 469, 471, 479, 497, 498, 514, 530, 561, 793, 798, 801, 802, 1107, 1120, 1122, 1130, 1148, 1149, 1165, 1181, 1299, 1350, 1357, 1361, 1363, 1376, 1385, 1391], "snrmin": [145, 793], "snrmax": [145, 793], "kept_valu": [145, 199, 793, 848], "kdpmax": [145, 793], "tempmin": [145, 793], "tempmax": [145, 793], "hydro_field": [145, 155, 156, 157, 504, 523, 531, 793, 806, 807, 808, 1155, 1174, 1182, 1392], "kdp_field": [145, 151, 152, 156, 499, 504, 505, 507, 508, 523, 524, 525, 526, 527, 528, 793, 801, 802, 807, 1150, 1155, 1156, 1158, 1159, 1174, 1175, 1176, 1177, 1178, 1179, 1377, 1392], "snow": [145, 452, 498, 504, 514, 572, 793, 1103, 1149, 1155, 1165, 1310, 1358, 1376, 1377, 1392], "hydrometeor": [145, 155, 156, 157, 199, 399, 456, 499, 502, 504, 523, 531, 536, 793, 806, 807, 808, 848, 1052, 1107, 1150, 1153, 1155, 1174, 1182, 1187, 1344, 1373, 1379, 1385, 1390, 1394], "classif": [145, 155, 156, 157, 199, 497, 498, 499, 504, 514, 523, 531, 535, 793, 806, 807, 808, 848, 1030, 1148, 1149, 1150, 1155, 1165, 1174, 1182, 1186, 1344, 1373, 1379, 1390, 1394], "differneti": [145, 793], "zdr_snow_dict": [145, 793], "label": [146, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 229, 230, 233, 234, 235, 236, 237, 248, 250, 252, 253, 254, 256, 258, 266, 268, 270, 272, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 295, 296, 297, 300, 301, 302, 303, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 329, 332, 333, 334, 337, 338, 339, 340, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 365, 366, 369, 370, 371, 374, 375, 376, 377, 456, 595, 794, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 875, 878, 879, 880, 883, 884, 885, 886, 887, 898, 900, 902, 903, 904, 906, 908, 916, 918, 920, 922, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 945, 946, 947, 950, 951, 952, 953, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 974, 975, 978, 979, 982, 983, 984, 987, 988, 989, 990, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1027, 1107, 1333, 1339, 1350, 1356, 1357, 1366, 1367, 1371, 1377, 1389, 1390, 1392], "account": [146, 153, 794, 803, 1339], "examin": [146, 381, 395, 398, 794, 1034, 1048, 1051, 1396], "box": [146, 399, 794, 1052, 1377, 1391, 1392], "alwai": [146, 382, 395, 497, 498, 514, 526, 530, 794, 1035, 1048, 1148, 1149, 1165, 1177, 1181, 1339, 1381, 1390], "occur": [146, 178, 197, 391, 392, 755, 774, 794, 827, 846, 1044, 1045, 1385, 1391, 1393], "readi": [146, 794], "min_temp": [147, 204, 796, 853], "max_h_iso0": [147, 200, 796, 849], "beamwidth": [147, 154, 164, 200, 204, 237, 303, 340, 377, 472, 516, 532, 796, 805, 815, 849, 853, 887, 953, 990, 1027, 1123, 1167, 1183], "construct": [147, 183, 195, 532, 760, 772, 796, 832, 844, 1093, 1183], "beyond": [147, 198, 580, 581, 601, 796, 847, 1318, 1319, 1395], "extent": [147, 516, 796, 1167, 1352], "reach": [147, 796], "mask_fzl": [147, 796], "end_gate_arr": [147, 796], "delev_max": [148, 149, 150, 797, 798, 799], "dazim_max": [148, 149, 150, 797, 798, 799], "elmin": [148, 149, 150, 198, 530, 574, 797, 798, 799, 847, 1181, 1312], "rmin": [148, 198, 465, 485, 530, 574, 797, 847, 1116, 1136, 1181, 1312], "50000": [148, 479, 797, 1130, 1352, 1356, 1376, 1387], "hmin": [148, 574, 797, 1312], "10000": [148, 237, 265, 303, 340, 371, 377, 456, 461, 469, 479, 492, 495, 534, 538, 797, 887, 915, 953, 990, 1021, 1027, 1107, 1112, 1120, 1130, 1143, 1146, 1185, 1190, 1356, 1376, 1387], "nbins_min": [148, 149, 470, 797, 798, 1121], "attg": [148, 149, 150, 473, 480, 517, 797, 798, 799, 1124, 1131, 1168], "max_std_pwr": [148, 470, 797, 1121], "max_std_zdr": [148, 149, 797, 798], "sun_posit": [148, 149, 150, 797, 798, 799], "pwrh_field": [148, 149, 150, 797, 798, 799], "pwrv_field": [148, 149, 150, 797, 798, 799], "suspect": [148, 149, 150, 198, 797, 798, 799, 847], "sun": [148, 149, 150, 153, 154, 161, 162, 163, 164, 165, 795, 797, 798, 799, 803, 804, 805, 812, 813, 814, 815, 816], "hit": [148, 149, 150, 165, 795, 797, 798, 799, 804, 816, 1396], "detect": [148, 149, 150, 164, 500, 501, 514, 530, 532, 566, 797, 798, 799, 815, 1151, 1152, 1165, 1181, 1183, 1304, 1361, 1376, 1385, 1390, 1392], "hildebrand": [148, 451, 465, 470, 485, 560, 797, 1102, 1116, 1121, 1136, 1298], "sekhon": [148, 465, 470, 485, 560, 797, 1116, 1121, 1136, 1298], "higher": [148, 226, 231, 293, 298, 326, 335, 363, 372, 797, 876, 881, 943, 948, 976, 985, 1013, 1022, 1093, 1385, 1387], "ga": [148, 149, 150, 444, 473, 480, 517, 797, 798, 799, 1095, 1124, 1131, 1168], "wai": [148, 149, 150, 444, 469, 473, 480, 500, 516, 517, 533, 797, 798, 799, 1095, 1120, 1124, 1131, 1151, 1167, 1168, 1184, 1350, 1383, 1391, 1396, 1398], "pysolar": [148, 149, 150, 163, 797, 798, 799, 814], "sun_hit": [148, 149, 150, 165, 797, 798, 799, 816], "new_radar": [148, 149, 797, 798, 1384], "npulses_rai": [149, 471, 798, 1122], "ivic": [149, 471, 561, 568, 578, 580, 581, 798, 1122, 1299, 1306, 1316, 1318, 1319], "2003": [149, 798, 1376], "instead": [149, 252, 399, 471, 798, 902, 1052, 1122, 1339, 1347, 1376, 1381, 1387, 1395, 1396, 1398], "7": [149, 161, 164, 201, 389, 471, 537, 561, 571, 594, 798, 812, 815, 850, 1042, 1122, 1189, 1299, 1309, 1332, 1347, 1356, 1358, 1370, 1381, 1388, 1390, 1392, 1393, 1395, 1396], "noise_thr": [150, 799], "simpl": [150, 500, 799, 1080, 1151, 1384, 1385], "self_const": [151, 152, 801, 802], "60000": [151, 152, 801, 802, 1352, 1356, 1387], "low_z": [151, 152, 801, 802], "high_z": [151, 152, 801, 802], "min_phidp": [151, 152, 801, 802], "01": [151, 152, 332, 369, 456, 526, 539, 566, 582, 801, 802, 982, 1019, 1107, 1177, 1304, 1320, 1343, 1353, 1355, 1372, 1379, 1394], "min_ncp": [151, 202, 800, 801, 851], "min_rhv": [151, 201, 202, 800, 801, 850, 851], "sys_phas": [151, 801], "ncpt": [151, 152, 801, 802], "overide_sys_phas": [151, 801], "nowrap": [151, 152, 801, 802], "really_verbos": [151, 152, 801, 802], "lp_solver": [151, 152, 801, 802], "cylp": [151, 152, 801, 802, 1381, 1395, 1398], "unf_field": [151, 152, 801, 802], "window_len": [151, 152, 158, 801, 802, 809], "proc": [151, 152, 526, 801, 802, 1177], "coef": [151, 152, 801, 802], "914": [151, 152, 801, 802], "lp": [151, 152, 801, 802, 1381], "consist": [151, 152, 155, 156, 157, 801, 802, 806, 807, 808, 1339, 1387], "low": [151, 152, 153, 154, 161, 164, 391, 526, 801, 802, 803, 805, 812, 815, 1044, 1177, 1358, 1391], "high": [151, 152, 223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 497, 526, 801, 802, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1148, 1177, 1377, 1392], "copolar": [151, 499, 501, 523, 530, 801, 1150, 1152, 1174, 1181, 1375], "automat": [151, 395, 400, 401, 446, 516, 530, 535, 801, 1031, 1048, 1053, 1054, 1093, 1097, 1167, 1181, 1186, 1361, 1381, 1396], "lpx": [151, 152, 801, 802], "messag": [151, 152, 240, 259, 391, 801, 802, 890, 909, 1044, 1347], "suppress": [151, 152, 526, 801, 802, 1177], "pyglpk": [151, 152, 801, 802, 1381, 1395], "cvxopt": [151, 152, 801, 802, 1381, 1395], "cylp_mp": [151, 152, 801, 802], "modul": [151, 152, 801, 802, 1270, 1338, 1346, 1347, 1381, 1384, 1385, 1387, 1388, 1390, 1393, 1395, 1396], "solv": [151, 152, 801, 802], "horizon": [151, 152, 499, 523, 530, 801, 802, 1150, 1174, 1181], "sobel": [151, 152, 801, 802], "worker": [151, 152, 801, 802], "link": [151, 152, 604, 801, 802, 1392], "1z": [151, 152, 801, 802], "reproc_phas": [151, 152, 801, 802], "sob_kdp": [151, 152, 801, 802], "recalcul": [151, 152, 516, 801, 802, 1167, 1383], "giangrand": [151, 152, 530, 801, 802, 1181], "mcgraw": [151, 152, 801, 802], "lei": [151, 152, 801, 802], "applic": [151, 152, 223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 399, 498, 514, 588, 801, 802, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1052, 1149, 1165, 1326, 1396], "program": [151, 152, 516, 801, 802, 1167, 1381, 1396], "atmo": [151, 152, 497, 523, 533, 572, 801, 802, 1148, 1174, 1184, 1310, 1358, 1396], "tech": [151, 152, 523, 572, 801, 802, 1174, 1310, 1358], "2013": [151, 152, 471, 527, 533, 561, 801, 802, 1122, 1178, 1184, 1299, 1393], "1716": [151, 152, 801, 802], "system_phas": [152, 802], "first_gate_sysp": [152, 802], "carri": [152, 802], "smaller": [152, 371, 516, 582, 802, 1021, 1093, 1167, 1320, 1376, 1396], "off": [152, 223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 522, 802, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1173, 1355, 1376], "ptoa": [153, 803], "wavelen": [153, 161, 164, 803, 812, 815], "antenna_gain": [153, 164, 473, 803, 815, 1124], "coeff_band": [153, 164, 803, 815], "solar": [153, 161, 164, 803, 812, 815], "flux": [153, 161, 164, 803, 812, 815], "amospher": [153, 803], "wavelength": [153, 161, 164, 516, 803, 812, 815, 1167], "bandwidth": [153, 164, 803, 815], "s0": [153, 161, 803, 812], "10e": [153, 161, 164, 803, 812, 815], "m2": [153, 161, 164, 803, 812, 815], "hz": [153, 161, 164, 444, 472, 473, 517, 518, 523, 803, 812, 815, 1095, 1123, 1124, 1168, 1169, 1174, 1364], "altub": [153, 154, 161, 164, 803, 805, 812, 815], "bech": [153, 154, 161, 164, 803, 805, 812, 815], "o": [153, 154, 161, 164, 399, 803, 805, 812, 815, 1052, 1202, 1357, 1381, 1389, 1395, 1396], "argemi": [153, 154, 161, 164, 803, 805, 812, 815], "t": [153, 154, 161, 164, 399, 469, 497, 498, 501, 514, 526, 527, 530, 532, 533, 538, 803, 805, 812, 815, 1052, 1120, 1148, 1149, 1152, 1165, 1177, 1178, 1181, 1183, 1184, 1190, 1350, 1376, 1381, 1383, 1392], "rigo": [153, 154, 161, 164, 803, 805, 812, 815], "2015": [153, 154, 161, 164, 503, 533, 803, 805, 812, 815, 1154, 1184], "align": [153, 154, 161, 164, 803, 805, 812, 815], "midrang": [153, 154, 161, 164, 803, 805, 812, 815], "angle_step": [154, 164, 805, 815], "fact": [154, 526, 528, 805, 1177, 1179], "la": [154, 805], "zdr_kdpzh_dict": [155, 156, 157, 806, 807, 808], "min_rhohv": [155, 156, 157, 806, 807, 808], "92": [155, 156, 157, 265, 806, 807, 808, 915, 1364, 1374], "filter_rain": [155, 156, 157, 806, 807, 808], "max_phidp": [155, 156, 157, 806, 807, 808], "smooth_wind_len": [155, 156, 157, 806, 807, 808], "dphidp_min": [155, 806], "dphidp_max": [155, 806], "parametr": [155, 156, 157, 806, 807, 808], "check_wet_radom": [155, 156, 806, 807], "wet_radome_refl": [155, 156, 806, 807], "wet_radome_len_min": [155, 156, 806, 807], "wet_radome_len_max": [155, 156, 806, 807], "wet_radome_ngates_min": [155, 156, 806, 807], "valid_gates_onli": [155, 806], "keep_point": [155, 156, 806, 807], "kdp_wind_len": [155, 806], "12": [155, 806, 1089, 1341, 1346, 1347, 1352, 1353, 1357, 1363, 1364, 1372, 1374, 1384, 1388, 1391, 1393, 1394], "tabl": [155, 156, 157, 399, 578, 580, 581, 806, 807, 808, 1052, 1316, 1318, 1319, 1390], "zh": [155, 156, 157, 615, 616, 806, 807, 808, 1390, 1392], "curv": [155, 156, 157, 806, 807, 808, 1376], "wolfensberg": [155, 156, 157, 501, 806, 807, 808, 1152, 1377, 1378], "louf": [155, 156, 157, 497, 806, 807, 808, 1148], "gorgucci": [155, 156, 157, 806, 807, 808], "vaccarono": [155, 156, 157, 806, 807, 808], "kdpsim_field": [155, 156, 157, 806, 807, 808], "phidpsim_field": [155, 156, 157, 806, 807, 808], "closest": [155, 156, 384, 461, 469, 479, 492, 495, 806, 807, 1037, 1080, 1112, 1120, 1130, 1143, 1146], "radom": [155, 156, 473, 480, 806, 807, 1124, 1131], "close": [155, 156, 381, 513, 514, 526, 806, 807, 1034, 1164, 1165, 1177, 1392], "wet": [155, 156, 806, 807, 1377, 1392], "mim": [155, 156, 806, 807], "disk": [155, 156, 806, 807], "around": [155, 156, 493, 498, 501, 514, 544, 571, 806, 807, 1091, 1092, 1144, 1149, 1152, 1165, 1268, 1282, 1309, 1351, 1366, 1369, 1376, 1383, 1385, 1391, 1392], "decid": [155, 156, 532, 806, 807, 1183], "That": [155, 806], "total": [155, 516, 526, 527, 528, 806, 1167, 1177, 1178, 1179, 1341, 1342, 1343, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1394], "further": [155, 156, 565, 806, 807, 1303], "analysi": [155, 156, 497, 565, 806, 807, 1087, 1090, 1148, 1303], "least": [155, 498, 500, 514, 524, 525, 806, 1149, 1151, 1165, 1175, 1176, 1376], "refl_bias_dict": [155, 156, 806, 807], "selfconsistency_dict": [155, 156, 806, 807], "keep_poinst": [155, 156, 806, 807], "measur": [155, 156, 161, 164, 445, 498, 503, 512, 513, 514, 523, 526, 527, 528, 806, 807, 812, 815, 1096, 1149, 1154, 1163, 1164, 1165, 1174, 1177, 1178, 1179, 1376, 1383, 1384, 1385, 1387, 1388, 1390, 1391, 1392, 1393, 1396], "min_zdr": [156, 807], "bias_per_g": [156, 807], "kdp_data_dict": [156, 807], "selfconsist": [157, 808], "privat": [157, 402, 808, 1396], "kdp_sim_dict": [157, 808], "phidp_sim_dict": [157, 808], "raw_data": [158, 809], "wind_len": [158, 160, 525, 809, 811, 1176], "min_valid": [158, 160, 525, 809, 811, 1176], "wind_typ": [158, 809], "median": [158, 456, 461, 469, 479, 492, 502, 547, 549, 561, 809, 1107, 1112, 1120, 1130, 1143, 1153, 1285, 1287, 1299], "less": [158, 497, 498, 514, 528, 572, 809, 1093, 1148, 1149, 1165, 1179, 1310, 1376, 1391, 1392], "move": [158, 159, 160, 166, 167, 169, 201, 467, 484, 487, 488, 516, 524, 525, 560, 809, 810, 811, 850, 1118, 1135, 1138, 1139, 1167, 1175, 1176, 1298, 1350, 1391, 1396], "data_smooth": [158, 809], "swind_len": [159, 524, 810, 1175], "smin_valid": [159, 524, 810, 1175], "lwind_len": [159, 524, 810, 1175], "lmin_valid": [159, 524, 810, 1175], "zthr": [159, 524, 810, 1175], "short": [159, 524, 810, 1175, 1396], "solar_flux": [161, 164, 812, 815], "cm": [161, 164, 494, 812, 815, 1145, 1367, 1390], "lat_deg": [162, 813], "lon_deg": [162, 813], "refract": [162, 516, 813, 1167], "boolean": [162, 165, 170, 176, 190, 498, 513, 514, 604, 615, 616, 632, 633, 747, 753, 767, 795, 813, 816, 819, 825, 839, 1030, 1149, 1164, 1165, 1388], "elev_sun": [162, 813], "azim_sun": [162, 813], "sensor": [162, 163, 813, 814], "el": [163, 513, 545, 546, 814, 1164, 1283, 1284, 1391], "az": [163, 399, 814, 1052, 1364, 1365], "would": [164, 447, 561, 815, 1098, 1299, 1346, 1347, 1385, 1387, 1396], "without": [164, 234, 301, 338, 375, 454, 470, 584, 815, 884, 951, 988, 1025, 1093, 1105, 1121, 1264, 1277, 1322, 1395], "characterist": [164, 815, 1387], "pwr_det": [164, 815], "az_rad": [165, 816], "az_sun": [165, 816], "el_rad": [165, 816], "el_sun": [165, 816], "sun_hit_std": [165, 816], "az_width_co": [165, 816], "el_width_co": [165, 816], "az_width_cross": [165, 816], "el_width_cross": [165, 816], "is_zdr": [165, 816], "val": [165, 804, 816], "val_std": [165, 804, 816], "az_bia": [165, 804, 816], "el_bia": [165, 804, 816], "az_width": [165, 804, 816], "el_width": [165, 804, 816], "nhit": [165, 816], "par": [165, 795, 804, 816], "gaussian": [165, 467, 484, 487, 488, 534, 795, 804, 816, 1118, 1135, 1138, 1139, 1185, 1268, 1269, 1366], "fit": [165, 795, 804, 816], "warn": [166, 167, 169, 395, 398, 580, 1048, 1051, 1318, 1339, 1341, 1347, 1350, 1387, 1390, 1391, 1392], "categori": [166, 167, 497, 1148, 1392], "old_nam": 169, "new_nam": 169, "alia": [169, 1275, 1276, 1390], "namespac": [169, 649], "wrapper": [169, 1381, 1390], "deprecatedfunctionnam": 169, "exclude_bas": [170, 747, 819], "exclude_below": [170, 747, 819, 1350, 1375, 1388, 1392], "suggest": [170, 747, 819], "gate_exclud": [170, 747, 819, 1388], "gate_includ": [170, 747, 819, 1388], "lost": [170, 528, 595, 747, 819, 1179, 1333, 1387], "again": [170, 747, 819, 1339, 1347, 1357, 1390, 1395], "import": [170, 533, 537, 538, 747, 819, 1184, 1189, 1190, 1202, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395], "io": [170, 601, 747, 819, 1087, 1090, 1341, 1342, 1346, 1347, 1348, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1384, 1385, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1398], "radar_fil": [170, 633, 747, 819, 1342, 1355, 1357], "nc": [170, 747, 819, 1341, 1350, 1352, 1355, 1356, 1357, 1361, 1363, 1364, 1365, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1383, 1384, 1388, 1390, 1392], "normalized_coherent_pow": [170, 747, 819, 1388], "exclude_mask": [172, 174, 175, 176, 177, 178, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 749, 751, 752, 753, 754, 755, 758, 759, 760, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 821, 823, 824, 825, 826, 827, 830, 831, 832, 835, 837, 838, 839, 840, 842, 843, 844, 845, 846, 1351], "op": [172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 749, 751, 752, 753, 754, 755, 756, 758, 759, 760, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 821, 823, 824, 825, 826, 827, 828, 830, 831, 832, 835, 837, 838, 839, 840, 842, 843, 844, 845, 846], "inclus": [172, 174, 177, 182, 186, 188, 191, 196, 749, 751, 754, 759, 763, 765, 768, 773, 821, 823, 826, 831, 835, 837, 840, 845, 1087, 1090, 1093, 1264, 1355], "exclus": [174, 751, 823], "AND": [174, 176, 183, 190, 195, 751, 753, 760, 767, 772, 823, 825, 832, 839, 844], "OR": [174, 176, 183, 190, 195, 751, 753, 760, 767, 772, 823, 825, 832, 839, 844], "gener": [174, 176, 183, 190, 195, 207, 208, 209, 210, 211, 212, 223, 225, 230, 233, 234, 235, 236, 237, 244, 245, 246, 247, 250, 252, 253, 254, 256, 258, 260, 261, 262, 263, 268, 270, 272, 274, 275, 276, 277, 278, 279, 290, 292, 297, 300, 301, 302, 303, 307, 308, 309, 310, 311, 312, 323, 325, 333, 334, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 360, 362, 370, 371, 374, 375, 376, 377, 398, 401, 515, 516, 526, 534, 536, 751, 753, 760, 767, 772, 823, 825, 832, 839, 844, 857, 858, 859, 860, 861, 862, 873, 875, 880, 883, 884, 885, 886, 887, 894, 895, 896, 897, 900, 902, 903, 904, 906, 908, 910, 911, 912, 913, 918, 920, 922, 924, 925, 926, 927, 928, 929, 940, 942, 947, 950, 951, 952, 953, 957, 958, 959, 960, 961, 962, 973, 975, 983, 984, 987, 988, 989, 990, 994, 995, 996, 997, 998, 999, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1051, 1054, 1069, 1080, 1091, 1092, 1093, 1166, 1167, 1177, 1185, 1187, 1341, 1342, 1344, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381], "here": [174, 176, 183, 190, 195, 265, 751, 753, 760, 767, 772, 823, 825, 832, 839, 844, 915, 1350, 1376, 1381, 1383, 1388, 1390, 1391, 1392, 1395, 1398], "previous": [174, 176, 183, 190, 195, 751, 753, 760, 767, 772, 823, 825, 832, 839, 844, 1346, 1376, 1392], "becaus": [174, 176, 183, 526, 751, 753, 760, 823, 825, 832, 1177, 1376, 1391, 1392, 1398], "invalid": [174, 176, 178, 183, 198, 200, 201, 202, 203, 204, 205, 751, 753, 755, 760, 795, 800, 823, 825, 827, 832, 847, 849, 850, 851, 852, 853, 854], "v1": [177, 182, 191, 196, 754, 759, 768, 773, 826, 831, 840, 845, 1395], "v2": [177, 182, 191, 196, 754, 759, 768, 773, 826, 831, 840, 845, 1396], "insid": [177, 191, 531, 754, 768, 826, 840, 1182, 1384], "inf": [178, 197, 198, 202, 755, 774, 800, 827, 846, 847, 851], "outsid": [182, 196, 198, 202, 230, 233, 235, 236, 250, 252, 253, 254, 256, 258, 268, 270, 272, 297, 300, 302, 333, 334, 337, 339, 370, 371, 374, 376, 479, 480, 497, 759, 773, 800, 831, 845, 847, 851, 880, 883, 885, 886, 900, 902, 903, 904, 906, 908, 918, 920, 922, 947, 950, 952, 983, 984, 987, 989, 1020, 1021, 1024, 1026, 1130, 1131, 1148, 1396], "trans_valu": [183, 195, 760, 772, 832, 844], "max_zdr": [198, 847], "max_rhv": [198, 847], "min_refl": [198, 202, 800, 847, 851], "max_refl": [198, 202, 800, 847, 851], "vel_lim": [198, 847], "2000": [198, 538, 847, 1190, 1351, 1387], "25000": [198, 445, 847, 1096, 1387], "85": [198, 201, 847, 850, 1378, 1391], "bird": [198, 453, 847, 1104], "criteria": [198, 199, 200, 201, 202, 203, 204, 205, 526, 535, 574, 800, 847, 848, 849, 850, 851, 852, 853, 854, 1093, 1177, 1186, 1312], "built": [198, 199, 200, 201, 202, 203, 204, 205, 800, 847, 848, 849, 850, 851, 852, 853, 854, 1091, 1092, 1093], "highest": [198, 201, 253, 847, 850, 903], "lowest": [198, 200, 201, 202, 203, 204, 205, 447, 529, 800, 847, 849, 850, 851, 852, 853, 854, 1098, 1180, 1346, 1350, 1374, 1376], "greatest": [198, 202, 800, 847, 851], "400": [200, 204, 849, 853, 1383], "primarili": [200, 204, 849, 853], "phi_field": [201, 850], "textzdr_field": [201, 850], "textrhv_field": [201, 850], "textphi_field": [201, 850], "textrefl_field": [201, 850], "wind_siz": [201, 446, 594, 850, 1097, 1332, 1385], "max_textphi": [201, 850], "max_textrhv": [201, 850], "max_textzdr": [201, 850], "max_textrefl": [201, 850], "cross": [201, 202, 217, 219, 223, 226, 237, 249, 250, 284, 286, 290, 293, 303, 317, 319, 323, 326, 340, 354, 356, 360, 363, 377, 453, 472, 473, 516, 552, 553, 800, 850, 851, 867, 869, 873, 876, 887, 899, 900, 934, 936, 940, 943, 953, 967, 969, 973, 976, 990, 1004, 1006, 1010, 1013, 1027, 1089, 1104, 1123, 1124, 1167, 1290, 1291, 1339, 1344, 1354, 1363, 1372, 1376, 1391, 1393, 1394], "min_rhi": [202, 800, 851], "min_snr": [203, 852], "max_snr": [203, 852], "min_vi": [205, 854], "displai": [206, 223, 225, 230, 234, 235, 236, 237, 239, 273, 290, 292, 297, 301, 302, 303, 305, 306, 323, 325, 333, 334, 338, 339, 340, 342, 343, 360, 362, 370, 371, 375, 376, 377, 379, 399, 447, 516, 537, 538, 856, 873, 875, 880, 884, 885, 886, 887, 889, 923, 940, 942, 947, 951, 952, 953, 955, 956, 973, 975, 983, 984, 988, 989, 990, 992, 993, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1029, 1031, 1052, 1098, 1167, 1189, 1190, 1339, 1341, 1342, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1383, 1384, 1385, 1387, 1388, 1392, 1396], "airborn": [206, 856], "plot_var": [206, 273, 306, 343, 856, 923, 956, 993], "order": [206, 273, 306, 343, 395, 400, 401, 498, 514, 523, 526, 530, 532, 544, 856, 923, 956, 993, 1030, 1048, 1053, 1054, 1080, 1149, 1165, 1174, 1177, 1181, 1183, 1282, 1341, 1376, 1381, 1392, 1396], "cb": [206, 273, 306, 343, 856, 923, 956, 993, 1357], "colorbar": [206, 223, 224, 225, 230, 233, 234, 235, 236, 237, 248, 250, 252, 253, 254, 256, 258, 259, 266, 268, 270, 272, 273, 290, 291, 292, 297, 300, 301, 302, 303, 306, 323, 324, 325, 333, 334, 337, 338, 339, 340, 343, 360, 361, 362, 370, 371, 374, 375, 376, 377, 856, 873, 874, 875, 880, 883, 884, 885, 886, 887, 898, 900, 902, 903, 904, 906, 908, 909, 916, 918, 920, 922, 923, 940, 941, 942, 947, 950, 951, 952, 953, 956, 973, 974, 975, 983, 984, 987, 988, 989, 990, 993, 1010, 1011, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1344, 1350, 1354, 1355, 1371, 1372, 1389, 1390, 1394], "loc": [206, 273, 306, 343, 856, 923, 956, 993, 1356], "titl": [207, 209, 210, 211, 212, 223, 225, 230, 233, 234, 235, 236, 237, 245, 246, 247, 250, 252, 253, 254, 256, 258, 261, 262, 263, 268, 270, 272, 274, 276, 277, 278, 279, 290, 292, 297, 300, 301, 302, 303, 307, 309, 310, 311, 312, 323, 325, 333, 334, 337, 338, 339, 340, 344, 346, 347, 348, 349, 360, 362, 370, 371, 374, 375, 376, 377, 857, 859, 860, 861, 862, 873, 875, 880, 883, 884, 885, 886, 887, 895, 896, 897, 900, 902, 903, 904, 906, 908, 911, 912, 913, 918, 920, 922, 924, 926, 927, 928, 929, 940, 942, 947, 950, 951, 952, 953, 957, 959, 960, 961, 962, 973, 975, 983, 984, 987, 988, 989, 990, 994, 996, 997, 998, 999, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1031, 1341, 1342, 1350, 1357, 1359, 1360, 1362, 1364, 1365, 1369, 1390, 1391, 1392, 1393], "ext": [208, 244, 260, 275, 308, 345, 858, 894, 910, 925, 958, 995], "datetime_format": [208, 210, 275, 277, 308, 310, 345, 347, 858, 860, 925, 927, 958, 960, 995, 997], "use_sweep_tim": [208, 210, 275, 277, 308, 310, 345, 347, 858, 860, 925, 927, 958, 960, 995, 997], "form": [208, 225, 244, 260, 275, 292, 308, 325, 345, 362, 858, 875, 894, 910, 925, 942, 958, 975, 995, 1012], "radar_name_field_sweep_tim": [208, 275, 308, 345, 858, 925, 958, 995], "extens": [208, 244, 260, 275, 308, 345, 399, 858, 894, 910, 925, 958, 995, 1052, 1395], "strftime": [208, 210, 230, 234, 275, 277, 297, 301, 308, 310, 333, 338, 345, 347, 370, 375, 858, 860, 880, 884, 925, 927, 947, 951, 958, 960, 983, 988, 995, 997, 1020, 1025], "vpt": [211, 222, 236, 278, 289, 302, 311, 322, 339, 348, 359, 376, 577, 861, 872, 886, 928, 939, 952, 961, 972, 989, 998, 1009, 1026, 1315], "ndarrai": [212, 237, 279, 303, 312, 340, 349, 377, 523, 549, 571, 636, 862, 887, 929, 953, 962, 990, 999, 1027, 1174, 1287, 1309, 1393], "xaxi": [213, 216, 217, 280, 283, 284, 313, 316, 317, 350, 353, 354, 863, 866, 867, 930, 933, 934, 963, 966, 967, 1000, 1003, 1004, 1357, 1389], "static": [214, 215, 226, 227, 231, 238, 239, 281, 282, 293, 294, 298, 304, 305, 314, 315, 326, 327, 341, 342, 351, 352, 363, 364, 378, 379, 864, 865, 876, 877, 881, 888, 889, 931, 932, 943, 944, 948, 954, 955, 964, 965, 976, 977, 991, 992, 1001, 1002, 1013, 1014, 1028, 1029, 1381], "yaxi": [214, 215, 218, 219, 220, 221, 281, 282, 285, 286, 287, 288, 314, 315, 318, 319, 320, 321, 351, 352, 355, 356, 357, 358, 864, 865, 868, 869, 870, 871, 931, 932, 935, 936, 937, 938, 964, 965, 968, 969, 970, 971, 1001, 1002, 1005, 1006, 1007, 1008, 1389], "custom": [222, 223, 224, 225, 230, 234, 235, 236, 237, 248, 250, 252, 254, 256, 258, 266, 268, 270, 272, 289, 290, 291, 292, 297, 301, 302, 303, 322, 323, 324, 325, 333, 334, 338, 339, 340, 359, 360, 361, 362, 370, 371, 375, 376, 377, 429, 497, 817, 872, 873, 874, 875, 880, 884, 885, 886, 887, 898, 900, 902, 904, 906, 908, 916, 918, 920, 922, 939, 940, 941, 942, 947, 951, 952, 953, 972, 973, 974, 975, 983, 984, 988, 989, 990, 1009, 1010, 1011, 1012, 1020, 1021, 1025, 1026, 1027, 1031, 1091, 1092, 1148, 1387], "plot_ppi": [222, 289, 322, 359, 872, 939, 972, 1009, 1342, 1377, 1383, 1391, 1392], "plot_sweep_grid": [222, 872], "target_azimuth": [223, 290, 323, 360, 552, 873, 940, 973, 1010, 1290], "mask_tupl": [223, 230, 233, 234, 235, 236, 237, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 873, 880, 883, 884, 885, 886, 887, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027], "norm": [223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 526, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1177, 1357, 1377, 1389, 1390, 1392], "cmap": [223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 399, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1031, 1052, 1350, 1355, 1356, 1357, 1358, 1362, 1365, 1367, 1369, 1370, 1375, 1376, 1384, 1385, 1389, 1390], "mask_outsid": [223, 230, 233, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 873, 880, 883, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027, 1364, 1365, 1392], "title_flag": [223, 225, 230, 233, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 334, 337, 338, 339, 340, 360, 362, 370, 371, 374, 375, 376, 377, 873, 875, 880, 883, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 984, 987, 988, 989, 990, 1010, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1369], "axislabel": [223, 225, 230, 233, 234, 235, 236, 237, 250, 252, 256, 258, 268, 270, 272, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 337, 338, 339, 340, 360, 362, 370, 374, 375, 376, 377, 873, 875, 880, 883, 884, 885, 886, 887, 900, 902, 906, 908, 918, 920, 922, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 987, 988, 989, 990, 1010, 1012, 1020, 1024, 1025, 1026, 1027, 1359, 1364, 1365], "axislabels_flag": [223, 225, 230, 233, 234, 235, 236, 237, 250, 252, 256, 258, 268, 270, 272, 290, 292, 297, 300, 301, 302, 303, 323, 325, 333, 337, 338, 339, 340, 360, 362, 370, 374, 375, 376, 377, 873, 875, 880, 883, 884, 885, 886, 887, 900, 902, 906, 908, 918, 920, 922, 940, 942, 947, 950, 951, 952, 953, 973, 975, 983, 987, 988, 989, 990, 1010, 1012, 1020, 1024, 1025, 1026, 1027, 1376], "colorbar_flag": [223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027], "colorbar_label": [223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1341, 1342, 1346, 1359, 1360, 1364, 1365, 1366, 1367, 1371, 1391, 1392], "colorbar_ori": [223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 338, 339, 340, 360, 362, 370, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 988, 989, 990, 1010, 1012, 1020, 1025, 1026, 1027], "reverse_xaxi": [223, 234, 290, 301, 323, 338, 360, 375, 873, 884, 940, 951, 973, 988, 1010, 1025], "fig": [223, 224, 225, 230, 233, 234, 235, 236, 237, 248, 250, 252, 253, 254, 256, 258, 266, 268, 270, 272, 290, 291, 292, 297, 300, 301, 302, 303, 323, 324, 325, 333, 334, 337, 338, 339, 340, 360, 361, 362, 370, 371, 374, 375, 376, 377, 873, 874, 875, 880, 883, 884, 885, 886, 887, 898, 900, 902, 903, 904, 906, 908, 916, 918, 920, 922, 940, 941, 942, 947, 950, 951, 952, 953, 973, 974, 975, 983, 984, 987, 988, 989, 990, 1010, 1011, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1375, 1377, 1378, 1385, 1387, 1388, 1391, 1392], "tick": [223, 224, 225, 230, 234, 235, 236, 237, 248, 250, 252, 254, 256, 258, 266, 268, 270, 272, 290, 291, 292, 297, 301, 302, 303, 323, 324, 325, 333, 334, 338, 339, 340, 360, 361, 362, 370, 371, 375, 376, 377, 873, 874, 875, 880, 884, 885, 886, 887, 898, 900, 902, 904, 906, 908, 916, 918, 920, 922, 940, 941, 942, 947, 951, 952, 953, 973, 974, 975, 983, 984, 988, 989, 990, 1010, 1011, 1012, 1020, 1021, 1025, 1026, 1027, 1355, 1357, 1376, 1377, 1390, 1392], "ticklab": [223, 224, 225, 230, 234, 235, 236, 237, 248, 250, 252, 254, 256, 258, 266, 268, 270, 272, 290, 291, 292, 297, 301, 302, 303, 323, 324, 325, 333, 334, 338, 339, 340, 360, 361, 362, 370, 371, 375, 376, 377, 873, 874, 875, 880, 884, 885, 886, 887, 898, 900, 902, 904, 906, 908, 916, 918, 920, 922, 940, 941, 942, 947, 951, 952, 953, 973, 974, 975, 983, 984, 988, 989, 990, 1010, 1011, 1012, 1020, 1021, 1025, 1026, 1027, 1376, 1377, 1392], "raster": [223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 399, 516, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1052, 1167, 1339], "pseudo": [223, 290, 323, 360, 530, 873, 940, 973, 1010, 1181, 1391], "associ": [223, 290, 323, 360, 497, 873, 940, 973, 1010, 1069, 1148], "matplotlib": [223, 225, 228, 229, 230, 234, 235, 236, 237, 250, 251, 252, 254, 256, 258, 267, 268, 270, 272, 290, 292, 295, 296, 297, 301, 302, 303, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 360, 362, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 399, 873, 875, 878, 879, 880, 884, 885, 886, 887, 900, 901, 902, 904, 906, 908, 917, 918, 920, 922, 940, 942, 945, 946, 947, 951, 952, 953, 973, 975, 978, 979, 980, 981, 982, 983, 984, 985, 988, 989, 990, 1010, 1012, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1031, 1052, 1339, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1395, 1398], "pcolormesh": [223, 225, 230, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1031, 1350, 1366, 1376, 1389, 1390, 1391], "ncp": [223, 230, 233, 234, 235, 236, 237, 290, 297, 300, 301, 302, 303, 323, 333, 334, 337, 338, 339, 340, 360, 370, 371, 374, 375, 376, 377, 873, 880, 883, 884, 885, 886, 887, 940, 947, 950, 951, 952, 953, 973, 983, 984, 987, 988, 989, 990, 1010, 1020, 1021, 1024, 1025, 1026, 1027], "lumin": [223, 225, 230, 234, 235, 236, 237, 250, 252, 253, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 900, 902, 903, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027], "west": [223, 234, 290, 301, 323, 338, 360, 375, 873, 884, 940, 951, 973, 988, 1010, 1025, 1359, 1391, 1392], "leav": [223, 225, 230, 234, 235, 236, 237, 250, 252, 254, 256, 258, 268, 270, 272, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 900, 902, 904, 906, 908, 918, 920, 922, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027], "orient": [223, 224, 225, 230, 234, 235, 236, 237, 248, 250, 252, 254, 256, 258, 266, 268, 270, 272, 290, 291, 292, 297, 301, 302, 303, 323, 324, 325, 333, 338, 339, 340, 360, 361, 362, 370, 375, 376, 377, 873, 874, 875, 880, 884, 885, 886, 887, 898, 900, 902, 904, 906, 908, 916, 918, 920, 922, 940, 941, 942, 947, 951, 952, 953, 973, 974, 975, 983, 988, 989, 990, 1010, 1011, 1012, 1020, 1025, 1026, 1027, 1377, 1378, 1391, 1392], "treat": [223, 230, 234, 235, 236, 250, 256, 258, 268, 270, 272, 290, 297, 301, 302, 323, 333, 334, 338, 339, 360, 370, 371, 375, 376, 873, 880, 884, 885, 886, 900, 906, 908, 918, 920, 922, 940, 947, 951, 952, 973, 983, 984, 988, 989, 1010, 1020, 1021, 1025, 1026, 1389], "themselv": [223, 230, 234, 235, 236, 250, 256, 258, 268, 270, 272, 290, 297, 301, 302, 323, 333, 334, 338, 339, 360, 370, 371, 375, 376, 873, 880, 884, 885, 886, 900, 906, 908, 918, 920, 922, 940, 947, 951, 952, 973, 983, 984, 988, 989, 1010, 1020, 1021, 1025, 1026], "figur": [223, 224, 225, 230, 233, 234, 235, 236, 237, 248, 250, 252, 253, 254, 256, 258, 266, 268, 270, 272, 290, 291, 292, 297, 300, 301, 302, 303, 323, 324, 325, 333, 334, 337, 338, 339, 340, 360, 361, 362, 370, 371, 374, 375, 376, 377, 873, 874, 875, 880, 883, 884, 885, 886, 887, 898, 900, 902, 903, 904, 906, 908, 916, 918, 920, 922, 940, 941, 942, 947, 950, 951, 952, 953, 973, 974, 975, 983, 984, 987, 988, 989, 990, 1010, 1011, 1012, 1020, 1021, 1024, 1025, 1026, 1027, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1375, 1376, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392], "render": [223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027], "rather": [223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027], "larg": [223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 526, 535, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1177, 1186, 1392], "sure": [223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1350, 1357, 1376, 1395, 1396, 1398], "dpi": [223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1031], "your": [223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 601, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027, 1344, 1354, 1356, 1372, 1376, 1381, 1390, 1392, 1394, 1395, 1396, 1398], "ep": [223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027], "svg": [223, 225, 230, 234, 235, 236, 237, 290, 292, 297, 301, 302, 303, 323, 325, 333, 334, 338, 339, 340, 360, 362, 370, 371, 375, 376, 377, 873, 875, 880, 884, 885, 886, 887, 940, 942, 947, 951, 952, 953, 973, 975, 983, 984, 988, 989, 990, 1010, 1012, 1020, 1021, 1025, 1026, 1027], "mappabl": [224, 248, 259, 266, 291, 324, 361, 874, 898, 909, 916, 941, 974, 1011], "cax": [224, 248, 266, 291, 324, 361, 874, 898, 916, 941, 974, 1011, 1377, 1392], "imag": [224, 248, 253, 266, 291, 324, 361, 497, 522, 544, 572, 874, 898, 903, 916, 941, 974, 1011, 1148, 1173, 1282, 1310, 1344, 1354, 1372, 1374, 1376, 1394], "contourset": [224, 248, 259, 266, 291, 324, 361, 874, 898, 909, 916, 941, 974, 1011], "etc": [224, 248, 252, 253, 259, 266, 291, 324, 334, 361, 371, 398, 461, 469, 479, 492, 495, 514, 874, 898, 902, 903, 909, 916, 941, 974, 984, 1011, 1021, 1051, 1112, 1120, 1130, 1143, 1146, 1165, 1390], "onto": [224, 248, 266, 268, 291, 324, 334, 361, 371, 529, 874, 898, 916, 918, 941, 974, 984, 1011, 1021, 1080, 1087, 1090, 1093, 1180], "drawn": [224, 248, 266, 291, 324, 361, 874, 898, 916, 941, 974, 1011], "target_rang": [225, 292, 325, 362, 875, 942, 975, 1012], "delta_x": [225, 292, 325, 362, 875, 942, 975, 1012], "delta_i": [225, 292, 325, 362, 875, 942, 975, 1012], "az_limit": [225, 292, 325, 362, 875, 942, 975, 1012], "el_limit": [225, 292, 325, 362, 875, 942, 975, 1012], "reflector": [225, 292, 325, 362, 875, 942, 975, 1012], "griddata": [225, 292, 325, 362, 875, 942, 975, 1012], "npt": [226, 231, 293, 298, 326, 335, 363, 372, 876, 881, 943, 948, 976, 985, 1013, 1022], "hair": [226, 293, 326, 363, 876, 943, 976, 1013, 1363], "col": [227, 231, 232, 294, 298, 299, 327, 336, 364, 373, 877, 881, 882, 944, 948, 949, 977, 986, 1014, 1023], "line": [227, 233, 251, 252, 253, 265, 267, 294, 300, 327, 330, 331, 334, 335, 337, 364, 367, 368, 371, 372, 374, 399, 526, 877, 883, 901, 902, 903, 915, 917, 944, 950, 977, 980, 981, 984, 985, 987, 1014, 1017, 1018, 1021, 1022, 1024, 1031, 1052, 1177, 1344, 1354, 1356, 1372, 1374, 1394, 1395, 1396, 1398], "color": [227, 228, 229, 231, 232, 251, 253, 294, 295, 296, 298, 299, 327, 328, 329, 334, 336, 364, 365, 366, 373, 399, 877, 878, 879, 881, 882, 901, 903, 944, 945, 946, 948, 949, 977, 978, 979, 984, 986, 1014, 1015, 1016, 1023, 1031, 1052, 1356, 1357, 1358, 1366, 1367, 1374, 1376, 1377, 1390, 1392], "linestyl": [227, 231, 232, 251, 294, 298, 299, 327, 336, 364, 373, 877, 881, 882, 901, 944, 948, 949, 977, 986, 1014, 1023, 1356, 1357, 1367], "symbol": [228, 229, 295, 296, 328, 329, 332, 365, 366, 369, 878, 879, 945, 946, 978, 979, 982, 1015, 1016, 1019], "text_color": [228, 229, 295, 296, 328, 329, 365, 366, 878, 879, 945, 946, 978, 979, 1015, 1016], "text": [228, 229, 295, 296, 328, 329, 332, 365, 366, 369, 878, 879, 945, 946, 978, 979, 982, 1015, 1016, 1019, 1202, 1355, 1364, 1378, 1385, 1389, 1390, 1391], "just": [228, 229, 295, 296, 328, 329, 365, 366, 389, 559, 878, 879, 945, 946, 978, 979, 1015, 1016, 1042, 1297, 1355, 1358, 1383, 1393, 1396, 1398], "marker": [228, 229, 233, 251, 267, 295, 296, 300, 328, 329, 337, 365, 366, 374, 878, 879, 883, 901, 917, 945, 946, 950, 978, 979, 987, 1015, 1016, 1024], "title_datetime_format": [230, 234, 297, 301, 333, 338, 370, 375, 880, 884, 947, 951, 983, 988, 1020, 1025], "title_use_sweep_tim": [230, 234, 297, 301, 333, 338, 370, 375, 880, 884, 947, 951, 983, 988, 1020, 1025], "range_ring_location_km": [231, 298, 335, 372, 881, 948, 985, 1022], "lw": [231, 232, 298, 299, 336, 373, 881, 882, 948, 949, 986, 1023], "ring": [231, 232, 298, 299, 335, 336, 372, 373, 881, 882, 948, 949, 985, 986, 1022, 1023, 1031, 1351, 1363], "range_r": [232, 299, 336, 373, 882, 949, 986, 1023, 1031], "seri": [232, 299, 336, 373, 493, 882, 949, 986, 1023, 1144], "draw": [232, 252, 253, 265, 299, 334, 336, 371, 373, 882, 902, 903, 915, 949, 984, 986, 1021, 1023], "format_str": [233, 300, 337, 374, 883, 950, 987, 1024], "ray_min": [233, 300, 337, 374, 883, 950, 987, 1024], "ray_max": [233, 300, 337, 374, 883, 950, 987, 1024], "style": [233, 251, 267, 300, 330, 331, 335, 337, 367, 368, 372, 374, 399, 883, 901, 917, 950, 980, 981, 985, 987, 1017, 1018, 1022, 1024, 1052], "consider": [234, 301, 338, 375, 526, 884, 951, 988, 1025, 1177, 1376], "ignoretilt": [235, 885], "run": [235, 498, 514, 559, 600, 885, 1149, 1165, 1191, 1297, 1339, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1395, 1396, 1398], "antenna_to_cartesian_track_rel": [235, 885], "slant": [235, 492, 885, 1088, 1143], "ncar": [235, 885], "soloii": [235, 885], "softwar": [235, 392, 399, 649, 885, 1045, 1052, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1395, 1396], "time_axis_flag": [236, 302, 339, 376, 886, 952, 989, 1026], "date_time_form": [236, 302, 339, 376, 886, 952, 989, 1026], "tz": [236, 302, 339, 376, 886, 952, 989, 1026], "zone": [236, 302, 339, 376, 886, 952, 989, 1026], "info": [236, 302, 334, 339, 371, 376, 516, 886, 952, 984, 989, 1021, 1026, 1167, 1339, 1377, 1393], "ref_point": [237, 303, 340, 377, 887, 953, 990, 1027], "1000": [237, 303, 340, 377, 530, 546, 887, 953, 990, 1027, 1181, 1284, 1352, 1360, 1366, 1367, 1387, 1389, 1396], "vert_r": [237, 303, 340, 377, 887, 953, 990, 1027], "alt_max": [237, 303, 340, 377, 887, 953, 990, 1027], "dem_field": [237, 303, 340, 377, 887, 953, 990, 1027], "terrain_altitud": [237, 303, 340, 377, 887, 953, 990, 1027], "arbitrari": [237, 303, 340, 377, 526, 887, 953, 990, 1027, 1177, 1339, 1391], "trajectori": [237, 303, 340, 377, 887, 953, 990, 1027], "45": [237, 303, 340, 377, 512, 887, 953, 990, 1027, 1163, 1268, 1358, 1367, 1376, 1392, 1396], "47": [237, 303, 340, 377, 530, 887, 953, 990, 1027, 1181, 1378, 1391], "3db": [237, 303, 340, 377, 516, 887, 953, 990, 1027, 1167], "ist": [237, 303, 340, 377, 887, 953, 990, 1027], "aspect_ratio": [238, 304, 341, 378, 888, 954, 991, 1028], "aspect": [238, 304, 341, 378, 516, 888, 954, 991, 1028, 1167, 1355], "xlim": [239, 305, 342, 379, 889, 955, 992, 1029, 1360, 1362, 1366, 1367, 1387], "ylim": [239, 305, 342, 379, 889, 955, 992, 1029, 1360, 1362, 1364, 1365, 1366, 1367, 1369, 1371, 1389], "cartopi": [240, 241, 242, 243, 252, 253, 254, 306, 334, 890, 891, 892, 893, 902, 903, 904, 956, 984, 1031, 1344, 1346, 1347, 1350, 1354, 1356, 1357, 1370, 1372, 1374, 1376, 1381, 1384, 1385, 1387, 1388, 1391, 1392, 1394, 1395, 1396, 1398], "coastlin": [241, 252, 253, 334, 371, 891, 902, 903, 984, 1021], "polit": [242, 892], "state": [243, 527, 893, 1178], "grid_name_field_level_tim": [244, 260, 894, 910], "latitudin": [246, 256, 270, 896, 906, 920], "plot_longitudinal_level": [249, 257, 271, 899, 907, 921], "tuppl": [249, 456, 462, 482, 899, 1107, 1113, 1133], "ind_1": [250, 900], "ind_2": [250, 900], "basemap": [250, 256, 258, 259, 264, 265, 268, 270, 272, 343, 367, 368, 369, 371, 372, 900, 906, 908, 909, 914, 915, 918, 920, 922, 993, 1017, 1018, 1019, 1021, 1022, 1381, 1395], "upper": [250, 252, 253, 254, 256, 258, 268, 270, 272, 443, 546, 900, 902, 903, 904, 906, 908, 918, 920, 922, 1284, 1356], "colormesh": [250, 252, 253, 254, 256, 258, 268, 270, 272, 900, 902, 903, 904, 906, 908, 918, 920, 922], "64": [250, 252, 253, 254, 256, 258, 268, 270, 272, 900, 902, 903, 904, 906, 908, 918, 920, 922, 1355, 1360, 1361, 1362, 1366, 1368, 1370, 1371, 1374, 1388, 1395], "linewidth": [251, 253, 267, 901, 903, 917, 1357, 1366, 1367], "crosshair": [251, 267, 901, 917], "lat_lin": [252, 253, 265, 334, 371, 902, 903, 915, 984, 1021, 1031, 1350, 1363, 1374, 1392], "lon_lin": [252, 253, 265, 334, 371, 902, 903, 915, 984, 1021, 1031, 1350, 1363, 1374, 1392], "embellish": [252, 253, 334, 902, 903, 984, 1357, 1392], "add_grid_lin": [252, 334, 902, 984], "imshow": [252, 902, 1351, 1352, 1355, 1390], "reason": [252, 265, 902, 915], "america": [252, 253, 265, 334, 371, 902, 903, 915, 984, 1021], "cr": [252, 253, 306, 334, 456, 523, 902, 903, 956, 984, 1031, 1107, 1174, 1346, 1347, 1350, 1356, 1357, 1363, 1370, 1374, 1376, 1377, 1384, 1385, 1388, 1390, 1391, 1392], "subsequ": [252, 253, 334, 902, 903, 984], "geoax": [252, 253, 334, 902, 903, 984, 1384, 1387, 1391], "platecarre": [252, 253, 334, 902, 903, 984, 1346, 1350, 1356, 1357, 1370, 1374, 1376, 1385, 1388, 1391], "drawinf": [252, 253, 902, 903], "shapefil": [252, 253, 334, 371, 902, 903, 984, 1021], "certain": [252, 253, 334, 522, 572, 902, 903, 984, 1032, 1173, 1310, 1376, 1388], "contour_valu": [253, 903], "maps_list": [253, 903], "countri": [253, 903], "110m": [253, 334, 903, 984], "background_zoom": [253, 903], "contour": [253, 903, 1344, 1354, 1372, 1394], "reson": [253, 334, 371, 903, 984, 1021], "sequenc": [253, 903], "colour": [253, 903], "embelish": [253, 371, 903, 1021], "10m": [253, 334, 903, 984, 1347, 1363, 1392], "50m": [253, 334, 903, 984, 1385, 1388], "naturalearthfeatur": [253, 334, 903, 984, 1392], "zoom": [253, 903], "background": [253, 371, 498, 514, 535, 903, 1021, 1030, 1031, 1149, 1165, 1186, 1363, 1370, 1376], "cost": [253, 526, 903, 1177], "alpha": [254, 334, 371, 456, 503, 504, 505, 506, 507, 508, 795, 804, 904, 984, 1021, 1107, 1154, 1155, 1156, 1157, 1158, 1159, 1357, 1366, 1392], "transpar": [254, 381, 904, 1034, 1366], "overplot": [254, 334, 371, 904, 984, 1021], "plot_latitudinal_level": [255, 269, 905, 919], "y_index": [256, 270, 906, 920], "x_index": [258, 272, 908, 922], "veric": [261, 911], "area_thresh": [265, 371, 915, 1021], "auto_rang": [265, 915], "min_lon": [265, 334, 371, 915, 984, 1021, 1350, 1363, 1388, 1392], "max_lon": [265, 334, 371, 915, 984, 1021, 1350, 1363, 1388, 1392], "86": [265, 915], "min_lat": [265, 334, 371, 915, 984, 1021, 1350, 1363, 1388, 1392], "max_lat": [265, 334, 371, 915, 984, 1021, 1350, 1363, 1388, 1392], "44": [265, 444, 498, 514, 915, 1095, 1149, 1165, 1339, 1350, 1353, 1376, 1394, 1395], "databas": [265, 371, 915, 1021], "merc": [265, 371, 915, 1021], "line_styl": [267, 330, 331, 335, 367, 368, 372, 917, 980, 981, 985, 1017, 1018, 1022, 1363], "plot_rhi": [289, 322, 359, 939, 972, 1009, 1391], "plot_vpt": [289, 322, 359, 939, 972, 1009], "grid_project": [306, 956, 1091, 1092, 1093], "progress": [306, 343, 516, 956, 993, 1167], "some": [306, 343, 437, 528, 530, 956, 993, 1064, 1075, 1179, 1181, 1202, 1339, 1347, 1355, 1356, 1374, 1376, 1381, 1385, 1387, 1390, 1391, 1392, 1395], "correctli": [306, 343, 956, 993], "report": [306, 343, 394, 538, 600, 601, 956, 993, 1047, 1190, 1381, 1396], "github": [306, 343, 956, 993, 1339, 1367, 1381, 1395, 1398], "tracker": [306, 343, 956, 993, 1381, 1396], "azimuthalequidist": [306, 956], "line_lon": [330, 367, 980, 1017], "line_lat": [330, 367, 980, 1017], "compat": [330, 331, 332, 335, 367, 368, 369, 372, 396, 980, 981, 982, 985, 1017, 1018, 1019, 1022, 1049, 1398], "line_x": [331, 368, 981, 1018], "line_i": [331, 368, 981, 1018], "ro": [332, 369, 982, 1019], "label_text": [332, 369, 982, 1019], "label_offset": [332, 369, 982, 1019], "shapefile_kwarg": [334, 984], "single_grid_lines_label": [334, 984], "edgecolor": [334, 984, 1366, 1392], "face": [334, 984], "lambertconform": [334, 984, 1347, 1363, 1384], "domain": [334, 371, 451, 516, 984, 1021, 1102, 1167, 1350], "neither": [334, 371, 402, 984, 1021, 1056], "extend": [334, 371, 395, 415, 562, 984, 1021, 1048, 1300, 1392], "word": [334, 984], "ones": [334, 462, 482, 984, 1113, 1133, 1355], "tranpar": [334, 371, 984, 1021], "pixel": [334, 521, 522, 530, 984, 1172, 1173, 1181, 1268, 1390, 1391, 1392], "lcc": [371, 1021], "cylindr": [371, 1021], "mill": [371, 1021], "exhibit": [371, 1021], "distort": [371, 1021], "aea": [371, 1021], "laea": [371, 1021], "conform": [371, 1021, 1381, 1383, 1392], "tmerc": [371, 1021], "aeqd": [371, 1021], "cass": [371, 1021], "even": [371, 497, 528, 1021, 1148, 1179, 1366, 1381, 1387, 1392, 1398], "cyl": [371, 1021], "cannot": [371, 382, 1021, 1035, 1390], "lake": [371, 1021, 1392], "esri": [371, 1021], "untest": [371, 1021], "dtobj": [380, 1033], "storage_opt": [381, 391, 393, 1034, 1044, 1046], "anon": [381, 391, 393, 1034, 1044, 1046], "open": [381, 391, 393, 1034, 1044, 1046, 1202, 1360, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1392, 1393, 1396, 1398], "decompress": [381, 1034], "bzip2": [381, 1034], "backend": [381, 391, 1034, 1044], "googl": [381, 391, 1034, 1044, 1396], "cloud": [381, 391, 497, 526, 1034, 1044, 1148, 1177, 1344, 1345, 1348, 1392, 1394, 1396, 1398], "storag": [381, 391, 1034, 1044, 1263], "amazon": [381, 391, 1034, 1044, 1346, 1347], "servic": [381, 391, 1034, 1044, 1346, 1347, 1355], "s3": [381, 391, 1034, 1044, 1346, 1347, 1358, 1376], "file_lik": [381, 1034], "use_rsl": [382, 1035], "read_": [382, 1035], "trmm": [382, 395, 1035, 1048, 1381, 1395], "choos": [382, 1035, 1344, 1354, 1372, 1376, 1394, 1398], "typeerror": [382, 408, 1035], "launch_datetim": [383, 1036], "radiosond": [383, 1036], "launch": [383, 1036], "record": [383, 1036, 1391, 1393], "target_datetim": [384, 1037], "profile_datetim": [384, 1037], "use_arm_scan_nam": [385, 1038], "scan_nam": [385, 1038], "cfradial2": [386, 1039], "use_file_field_attribut": [387, 1040], "csu": [387, 1040], "chill": [387, 1040], "chl": [387, 1040], "field_file_nam": [387, 1040], "long_nam": [387, 1040, 1376, 1384, 1393], "write_grid": [388, 1041], "zlib": [389, 390, 1042, 1043], "read_mdv": [389, 1042, 1342, 1351, 1362, 1366, 1367, 1368], "fulli": [389, 601, 1042, 1395], "interchang": [389, 1042], "vlevel": [389, 1042], "proj_polar_radar": [389, 1042], "proj_rhi_radar": [389, 1042], "13": [389, 465, 470, 485, 560, 1042, 1116, 1121, 1136, 1298, 1341, 1347, 1369, 1377, 1379, 1388, 1392, 1393, 1394], "vlevel_typ": [389, 1042], "vert_type_z": [389, 1042], "vert_type_elev": [389, 1042], "vert_type_az": [389, 1042], "17": [389, 1042, 1364, 1369, 1370, 1372, 1394], "vert_type_pressur": [389, 1042], "vert_type_theta": [389, 1042], "unknown": [389, 1042], "most": [389, 500, 1032, 1042, 1151, 1355, 1385, 1387, 1392, 1398], "station": [391, 392, 1044, 1045, 1347], "linear_interp": [391, 1044], "nexrad": [391, 392, 393, 394, 1044, 1045, 1046, 1047, 1344, 1345, 1348, 1354, 1358, 1372, 1376, 1381, 1393, 1394], "archiv": [391, 1044, 1359, 1381], "host": [391, 393, 1044, 1046], "noaa": [391, 393, 395, 1044, 1046, 1048, 1346, 1347, 1358, 1376], "nation": [391, 393, 1044, 1046, 1346, 1355], "climat": [391, 393, 1044, 1046, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "ucar": [391, 392, 1044, 1045], "thredd": [391, 392, 398, 1044, 1045, 1051], "server": [391, 392, 1044, 1045], "letter": [391, 392, 394, 1044, 1045, 1047], "icao": [391, 392, 1044, 1045], "older": [391, 392, 1044, 1045, 1339, 1344, 1345, 1348, 1381, 1394, 1396], "mix": [391, 497, 572, 1044, 1148, 1310, 1358, 1376], "nearest": [391, 461, 469, 470, 479, 492, 495, 515, 546, 552, 553, 589, 1044, 1088, 1093, 1112, 1120, 1121, 1130, 1143, 1146, 1166, 1284, 1290, 1291, 1327, 1387, 1391], "fsspec": [391, 393, 1044, 1046], "cut": [391, 392, 393, 522, 591, 592, 1044, 1045, 1046, 1173, 1329, 1330], "ncdc": [391, 393, 1044, 1046], "gov": [391, 393, 1044, 1046, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1364, 1366, 1367, 1368, 1369, 1371, 1374, 1375], "edu": [391, 392, 521, 1044, 1045, 1172, 1358, 1376], "catalog": [391, 392, 1044, 1045], "html": [391, 392, 521, 1044, 1045, 1172, 1381, 1390, 1395, 1396], "common": [392, 1045, 1381, 1395], "cdm": [392, 398, 1045, 1051], "url": [392, 1045], "java": [392, 398, 1045, 1051], "tool": [392, 398, 1045, 1051, 1381, 1395, 1396], "opendap": [392, 1045], "accept": [392, 456, 461, 469, 479, 492, 502, 527, 528, 1045, 1107, 1112, 1120, 1130, 1143, 1153, 1178, 1179, 1339, 1396], "compil": [392, 527, 1045, 1178, 1381, 1395], "unidata": [392, 1045, 1346], "htm": [392, 1045], "nw": [393, 1046], "wsr": [393, 530, 1046, 1181], "88d": [393, 530, 1046, 1181], "iii": [393, 1046], "distribut": [393, 498, 514, 534, 536, 537, 540, 541, 542, 543, 575, 576, 1046, 1149, 1165, 1185, 1187, 1189, 1268, 1278, 1279, 1280, 1281, 1313, 1314, 1376, 1381, 1396], "roc": [393, 1046], "wsr88d": [393, 394, 1046, 1047], "level_iii": [393, 1046], "level3info": [393, 1046], "asp": [393, 1046], "radar_format": [394, 1047], "callid": [394, 1047], "skip_range_check": [394, 1047], "rsl_radar": [394, 1047], "id": [394, 399, 1047, 1052], "verifi": [394, 577, 595, 1047, 1315, 1333], "ioerror": [394, 1047], "time_ord": [395, 1048], "full_xhdr": [395, 1048], "noaa_hh_hdr": [395, 1048], "ignore_xhdr": [395, 1048], "ignore_sweep_start_m": [395, 1048], "sigmet": [395, 1048, 1381], "iri": [395, 1048, 1381, 1395], "sequenti": [395, 1048, 1355], "re": [395, 497, 1048, 1148], "manner": [395, 1048], "determind": [395, 1048], "maintain": [395, 1048, 1087, 1090], "reverse_and_rol": [395, 1048], "strictli": [395, 1048], "increas": [395, 501, 516, 526, 529, 1048, 1093, 1152, 1167, 1177, 1180, 1355, 1387, 1396], "becom": [395, 1048, 1376, 1384, 1387, 1391], "thisopt": [395, 1048], "strict": [395, 539, 1048], "header": [395, 634, 635, 1048], "decod": [395, 539, 1031, 1048], "hurrican": [395, 1048, 1376], "hunter": [395, 1048], "millisecond": [395, 1048], "precis": [395, 497, 1048, 1148, 1339], "explic": [395, 1048], "read_rsl": [395, 1048, 1395], "error": [395, 399, 527, 528, 539, 550, 580, 581, 1048, 1052, 1178, 1179, 1288, 1318, 1319, 1339, 1391, 1395], "uf": [396, 401, 1049, 1054, 1381], "implement": [396, 402, 404, 406, 415, 425, 521, 532, 1049, 1056, 1069, 1091, 1092, 1172, 1183, 1341], "write_proj_coord_si": [398, 1051], "proj_coord_si": [398, 1051], "write_point_x_y_z": [398, 1051], "write_point_lon_lat_alt": [398, 1051], "projectioncoordinatesystem": [398, 1051], "toolsui": [398, 1051], "appropri": [398, 1051], "understood": [398, 1051], "rgb": [399, 1052], "viridi": [399, 1052, 1376], "color_level": [399, 1052], "warp": [399, 1052], "sld": [399, 1052], "use_doublequot": [399, 1052], "geotiff": [399, 1052, 1381], "sphere": [399, 563, 590, 1052, 1301, 1328], "latter": [399, 1052], "usabl": [399, 1052], "former": [399, 1052], "gi": [399, 1052], "while": [399, 1052, 1090, 1385, 1398], "show": [399, 1052, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1376, 1383, 1385, 1387, 1388, 1390, 1391, 1392, 1393, 1396], "lack": [399, 440, 1052, 1067, 1077], "gdal": [399, 1052, 1381], "via": [399, 1052, 1088, 1089], "conda": [399, 1052, 1381, 1395, 1396, 1398], "rbg": [399, 1052], "column": [399, 564, 565, 1052, 1302, 1303, 1344, 1373, 1379, 1394], "categor": [399, 1052, 1377, 1392], "gdalwarp": [399, 1052], "command": [399, 1052, 1381, 1384, 1390, 1392, 1396, 1398], "descriptor": [399, 1052], "tiff": [399, 1052], "don": [399, 1052, 1350], "quot": [399, 1052], "help": [399, 1052, 1191, 1350, 1355, 1376, 1396, 1398], "translat": [399, 1052], "sr": [399, 1052], "mdv_field_nam": [400, 1053], "field_write_ord": [400, 401, 1053, 1054], "sentinel": [400, 401, 1053, 1054], "writabl": [400, 1053], "satisfi": [400, 1053], "xy": [400, 1053, 1093], "irregular": [400, 1053, 1339], "exce": [400, 1053, 1376], "122": [400, 1053, 1346, 1350, 1356, 1375], "uncompress": [400, 1053], "sai": [400, 1053, 1396], "uf_field_nam": [401, 1054], "radar_field_nam": [401, 1054], "volume_start": [401, 1054], "templates_extra": [401, 1054], "radar_beam_width_h": [401, 1054], "radar_beam_width_v": [401, 1054], "radar_receiver_bandwidth": [401, 1054], "prt": [401, 1054], "polarization_mod": [401, 1054], "round": [401, 1054, 1088, 1089, 1339], "_uf_scale_factor": [401, 1054], "charact": [401, 1031, 1054], "advanc": [401, 1054], "usag": [401, 1054], "templat": [401, 1054, 1396], "mandatory_head": [401, 1054], "optional_head": [401, 1054], "field_head": [401, 1054], "lazi": [402, 405, 411, 416, 418, 431, 438, 1055, 1056, 1058, 1065], "set_lazi": [402, 1056], "callabl": [402, 438, 1056, 1065], "cach": [402, 429, 1056], "tradit": [402, 405, 416, 418, 1056], "supplement": [402, 1056], "syntax": [402, 1056], "prevent": [402, 1056, 1093, 1396], "comparison": [402, 456, 532, 1056, 1107, 1183, 1350], "__cmp__": [402, 1056], "__ge__": [402, 1056], "__gt__": [402, 1056], "__le__": [402, 1056], "__lt__": [402, 1056], "__ne__": [402, 1056], "nor": [402, 1056], "viewitem": [402, 1056], "viewkei": [402, 1056], "viewvalu": [402, 1056], "fromkei": [402, 1056], "tradition": [402, 426, 1056], "referenc": [402, 1056], "lazyloaddictionari": [402, 1056], "henc": [402, 1056], "key1": [402, 1056], "value1": [402, 1056], "key2": [402, 1056], "value2": [402, 1056], "lazy_func": [402, 1056], "lambda": [402, 1056], "lazykey1": [402, 1056], "delattr": 404, "dir": [406, 1202], "format_spec": 408, "formatt": 408, "getattr": 410, "helper": [412, 422, 423, 1355], "pickl": [412, 422, 423], "subclass": 415, "noth": 415, "overridden": 415, "protocol": 423, "repr": [424, 539], "setattr": 425, "memori": [427, 532, 1093, 1183, 1390, 1391], "abstract": 429, "overrid": [429, 1367, 1392], "issubclass": 429, "invok": 429, "earli": 429, "abc": 429, "abcmeta": 429, "__subclasscheck__": 429, "notimpl": 429, "outcom": 429, "item": [430, 440, 1057, 1067, 1070, 1077], "els": [432, 433, 1059, 1060, 1071, 1391], "value_cal": [438, 1065], "mx": 442, "mn": 442, "relh_slop": [442, 456, 536, 1107, 1187], "005": 442, "destandard": 442, "h_iso0": [442, 456, 523, 1107, 1174], "slope": [442, 456, 516, 527, 536, 1107, 1167, 1178, 1187], "sigmoid": [442, 456, 536, 1107, 1187], "field_std": 442, "hlowerleft": 443, "hupperright": 443, "matrix": [443, 456, 527, 795, 804, 1107, 1178], "freq": [444, 472, 473, 494, 517, 518, 1095, 1123, 1124, 1145, 1168, 1169], "rng": [444, 520, 545, 546, 562, 1095, 1171, 1283, 1284, 1300], "empir": [444, 1095], "satur": [444, 1095], "latm": [444, 1095], "toa": [445, 529, 1091, 1092, 1093, 1096, 1180], "floor": [445, 1096], "nyq": [446, 1097, 1385], "check_nyq_uniform": [446, 1097], "deriv": [446, 526, 528, 1097, 1177, 1179, 1389, 1390], "try": [446, 526, 532, 1097, 1177, 1183, 1387, 1388, 1392], "vel_dict": [446, 448, 449, 1097, 1099, 1100], "entri": [446, 1097, 1393], "am": [447, 1098, 1381, 1396], "glossari": [447, 1098], "dry": [447, 1098, 1377, 1390], "world": [447, 1098, 1344, 1354], "aloft": [447, 1098, 1391, 1392], "oppos": [447, 1098, 1358], "nwp": [447, 1098, 1377, 1392], "why": [447, 1098, 1396], "easi": [447, 1080, 1098, 1381], "think": [447, 1098], "turn": [447, 1098, 1355, 1376, 1381], "spin": [447, 1098], "author": [447, 514, 1031, 1098, 1165, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378], "randi": [447, 1098], "chase": [447, 1098], "dopplerchas": [447, 1098], "american": [447, 1098], "meteorolog": [447, 538, 1098, 1190], "2022": [447, 572, 1098, 1310, 1346, 1358, 1376, 1381, 1396], "meteorologi": [447, 451, 465, 470, 485, 526, 538, 560, 1087, 1090, 1098, 1102, 1116, 1121, 1136, 1177, 1190, 1298], "ametsoc": [447, 1098], "org": [447, 498, 514, 521, 572, 1098, 1149, 1165, 1172, 1310, 1358, 1376, 1381, 1396], "wiki": [447, 521, 1098, 1172], "sdbz_field": [448, 450, 457, 459, 475, 1099, 1101, 1108, 1110, 1126], "spectral": [448, 450, 457, 459, 467, 475, 477, 483, 484, 485, 486, 487, 488, 489, 500, 560, 636, 1099, 1101, 1108, 1110, 1118, 1126, 1128, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1151, 1298, 1339, 1382], "signal_field": [449, 451, 464, 465, 476, 485, 486, 487, 488, 490, 491, 496, 1100, 1102, 1115, 1116, 1127, 1136, 1137, 1138, 1139, 1141, 1142, 1147], "negative_awai": [449, 468, 1100, 1119], "negative_toward": [449, 468, 1100, 1119], "width_dict": [450, 451, 1101, 1102], "subtract_nois": [451, 460, 467, 468, 476, 477, 478, 484, 487, 488, 489, 1102, 1111, 1118, 1119, 1127, 1128, 1129, 1135, 1138, 1139, 1140, 1389], "noise_field": [451, 466, 470, 471, 476, 481, 487, 488, 1102, 1117, 1121, 1122, 1127, 1132, 1138, 1139], "lag": [451, 460, 468, 478, 490, 491, 1102, 1111, 1119, 1129, 1141, 1142], "denomin": [451, 1102], "varianc": [451, 560, 561, 566, 578, 579, 599, 1102, 1298, 1299, 1304, 1316, 1317, 1337], "srivastava": [451, 1102], "jameson": [451, 1102], "februari": [451, 1102], "1979": [451, 1102], "rhohv_snow": [452, 532, 1103, 1183], "rhohv_rain": [452, 532, 1103, 1183], "rhohv_ml": [452, 532, 1103, 1183], "93": [452, 472, 494, 516, 532, 1103, 1123, 1145, 1167, 1183], "zh_snow": [452, 532, 1103, 1183], "zh_rain": [452, 532, 1103, 1183], "zh_ml": [452, 532, 1103, 1183], "27": [452, 532, 1103, 1183, 1374], "zv_snow": [452, 532, 1103, 1183], "zv_rain": [452, 532, 1103, 1183], "zv_ml": [452, 532, 1103, 1183], "26": [452, 461, 532, 1103, 1112, 1183], "beam_factor": [452, 532, 1103, 1183], "npts_diagram": [452, 532, 1103, 1183], "81": [452, 532, 1103, 1183, 1393], "rng_bottom_max": [452, 532, 1103, 1183], "200000": [452, 532, 1103, 1183, 1363, 1376], "theoretical_cross_correlation_ratio": [452, 1103], "diagram": [452, 1103], "rhohv_theo_dict": [452, 1103], "sigma_bird": [453, 1104], "vol_refl_field": [453, 494, 1104, 1145], "bird_density_field": [453, 1104], "densiti": [453, 536, 1104, 1187, 1377, 1392], "volumetr": [453, 494, 1104, 1145, 1382], "bird_density_dict": [453, 1104], "filt_field": [454, 1105], "unfilt_field": [454, 1105], "ccor_field": [454, 1105], "ccor": [454, 1105], "unfilt": [454, 1105, 1392], "ccor_dict": [454, 1105], "cdr_field": [455, 1106], "circular": [455, 575, 576, 1106, 1313, 1314, 1376], "depolar": [455, 1106], "cdr": [455, 1106], "features_matrix": [456, 1107], "var_nam": [456, 502, 523, 536, 1107, 1153, 1174, 1187], "hydro_nam": [456, 502, 523, 536, 1107, 1153, 1174, 1187], "ag": [456, 523, 532, 1107, 1174, 1183, 1377, 1390, 1392], "lr": [456, 523, 1107, 1174, 1377, 1390, 1392], "rp": [456, 523, 1107, 1174, 1377, 1390, 1392], "rn": [456, 523, 1107, 1174, 1377, 1390, 1392], "mh": [456, 523, 1107, 1174, 1377, 1390, 1392], "ih": [456, 523, 1107, 1174, 1377, 1390, 1392], "hdg": [456, 523, 1107, 1174, 1377, 1390, 1392], "nsamples_it": [456, 1107], "20000": [456, 499, 501, 534, 1107, 1150, 1152, 1185, 1363, 1387], "external_iter": [456, 1107], "internal_iter": [456, 1107], "cv_approach": [456, 1107], "num_samples_arr": [456, 1107], "n_samples_syn": [456, 1107], "nmedoids_min": [456, 502, 1107, 1153], "acceptance_threshold": [456, 502, 1107, 1153], "001": [456, 536, 568, 1107, 1187, 1306, 1366], "parallel": [456, 526, 527, 528, 1107, 1177, 1178, 1179], "sample_data": [456, 1107], "kmax_it": [456, 502, 1107, 1153], "nsamples_smal": [456, 1107], "40000": [456, 1107, 1352, 1356, 1363, 1387], "sampling_size_clara": [456, 1107], "niter_clara": [456, 1107], "keep_labeled_data": [456, 1107], "use_median": [456, 502, 1107, 1153], "allow_label_dupl": [456, 1107], "centroid": [456, 499, 523, 534, 1093, 1107, 1150, 1174, 1185, 1392], "nsampl": [456, 534, 536, 1107, 1185, 1187], "nvariabl": [456, 523, 1107, 1174], "extern": [456, 1107], "loop": [456, 1107, 1378], "medoid": [456, 502, 1107, 1153], "inter": [456, 502, 1107, 1153], "dispers": [456, 502, 1107, 1153], "cluster": [456, 523, 1107, 1174, 1392], "critic": [456, 1107], "approach": [456, 516, 523, 530, 532, 1107, 1167, 1174, 1181, 1183], "reject": [456, 1107], "intermedi": [456, 497, 502, 1107, 1148, 1153], "kmedoid": [456, 502, 1107, 1153], "clara": [456, 1107], "exceed": [456, 512, 1107, 1163], "kept": [456, 501, 1107, 1152], "labeled_data": [456, 1107], "medoids_dict": [456, 502, 1107, 1153], "final_medoids_dict": [456, 502, 1107, 1153], "sphidp_field": [457, 1108], "phase_offset": [458, 468, 1109, 1119], "signal_h_field": [458, 460, 467, 468, 477, 478, 483, 484, 489, 1109, 1111, 1118, 1119, 1128, 1129, 1134, 1135, 1140], "signal_v_field": [458, 460, 467, 468, 477, 478, 483, 484, 489, 1109, 1111, 1118, 1119, 1128, 1129, 1134, 1135, 1140], "sdbzv_field": [459, 1110], "zdr_dict": [459, 460, 1110, 1111], "noise_h_field": [460, 467, 468, 477, 478, 484, 489, 1111, 1118, 1119, 1128, 1129, 1135, 1140], "noise_v_field": [460, 467, 468, 477, 478, 484, 489, 1111, 1118, 1119, 1128, 1129, 1135, 1140], "ref_tim": [461, 469, 479, 492, 493, 495, 1112, 1120, 1130, 1143, 1144, 1146], "latlon_tol": [461, 492, 495, 545, 574, 1112, 1143, 1146, 1283, 1312], "0005": [461, 492, 495, 1112, 1143, 1146], "delta_rng": [461, 492, 562, 1112, 1143, 1300], "delta_azi": [461, 492, 547, 562, 1112, 1143, 1285, 1300], "hmax": [461, 469, 479, 492, 495, 574, 1112, 1120, 1130, 1143, 1146, 1312], "hre": [461, 469, 479, 492, 495, 530, 1112, 1120, 1130, 1143, 1146, 1181], "250": [461, 492, 501, 1091, 1092, 1093, 1112, 1143, 1152, 1390, 1393], "avg_typ": [461, 469, 479, 492, 547, 549, 1112, 1120, 1130, 1143, 1285, 1287], "interp_kind": [461, 469, 479, 492, 495, 589, 1112, 1120, 1130, 1143, 1146, 1327], "qvp": [461, 469, 479, 492, 495, 533, 1112, 1120, 1130, 1143, 1146, 1184], "enhanc": [461, 1112, 1398], "interest": [461, 492, 495, 1112, 1143, 1146, 1350, 1376, 1392], "central": [461, 492, 562, 1112, 1143, 1300], "evp": [461, 492, 1112, 1143], "regardless": [461, 469, 479, 492, 495, 512, 1112, 1120, 1130, 1143, 1146, 1163], "elimin": [461, 469, 479, 492, 495, 1112, 1120, 1130, 1143, 1146, 1385, 1387], "kaltenboeck": [461, 1112], "2016": [461, 469, 501, 523, 1112, 1120, 1152, 1174, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1392, 1393, 1396], "storm": [461, 514, 535, 1112, 1165, 1186, 1268, 1269, 1271, 1358, 1376, 1387, 1391], "methodologi": [461, 538, 1112, 1190, 1385], "meteorologisch": [461, 1112], "zeitschrift": [461, 1112], "207": [461, 1112], "222": [461, 1112, 1342, 1359, 1391], "fields_in_list": [462, 482, 1113, 1133], "fields_out_list": [462, 482, 500, 1113, 1133, 1151], "fourier": [462, 482, 1113, 1133], "get_window": [462, 482, 1113, 1133], "ifft": [462, 1113], "l_field": [463, 1114], "logarithm": [463, 1114], "ll": [463, 1114], "log10": [463, 1114, 1350], "mph_dict": [464, 1115], "navg": [465, 485, 560, 1116, 1136, 1298], "nnoise_min": [465, 485, 560, 1116, 1136, 1298], "dbadu_to_dbm_hh": [465, 485, 487, 488, 1116, 1136, 1138, 1139], "dbadu_to_dbm_vv": [465, 485, 487, 488, 1116, 1136, 1138, 1139], "sehkon": [465, 485, 560, 1116, 1136, 1298], "1974": [465, 470, 485, 560, 1116, 1121, 1136, 1298], "noise_dict": [465, 470, 471, 485, 1116, 1121, 1122, 1136], "808": [465, 470, 485, 560, 1116, 1121, 1136, 1298], "811": [465, 470, 485, 560, 1116, 1121, 1136, 1298], "noisedbz_v": [466, 1117], "ref_dist": [466, 1117], "noisedbz": [466, 1117], "fields_list": [467, 468, 1118, 1119], "use_pwr": [467, 1118], "smooth_window": [467, 484, 487, 488, 1118, 1135, 1138, 1139], "srhohv_field": [467, 477, 483, 1118, 1128, 1134], "pwr_h_field": [467, 477, 484, 1118, 1128, 1135], "pwr_v_field": [467, 477, 484, 1118, 1128, 1135], "quasi": [469, 479, 533, 1120, 1130, 1184], "zhang": [469, 492, 503, 533, 1120, 1143, 1154, 1184], "reev": [469, 533, 1120, 1184], "kumjian": [469, 479, 533, 1120, 1130, 1184], "tschallen": [469, 533, 1120, 1184], "tr\u00f6mel": [469, 1120], "simmer": [469, 503, 533, 1120, 1154, 1184], "jtech": [469, 492, 1120, 1143], "33": [469, 1120, 1393, 1394], "551": [469, 1120], "562": [469, 1120], "pwr_field": [470, 471, 480, 488, 500, 1121, 1122, 1131, 1139, 1151], "get_noise_po": [470, 471, 561, 1121, 1122, 1299], "noisi": [470, 471, 1121, 1122], "noise_pos_dict": [470, 471, 1121, 1122], "reserv": [470, 545, 546, 574, 1121, 1283, 1284, 1312], "ngates_min": [471, 561, 1122, 1299], "curti": [471, 561, 1122, 1299], "torr": [471, 561, 1122, 1299], "2737": [471, 561, 1122, 1299], "2753": [471, 561, 1122, 1299], "kw2": [472, 1123], "rcs_field": [472, 473, 1123, 1124], "water": [472, 494, 516, 1123, 1145, 1167], "rc": [472, 473, 516, 1123, 1124, 1167], "rcs_dict": [472, 473, 1123, 1124], "lmf": [473, 480, 1124, 1131], "radconst": [473, 480, 1124, 1131], "tx_pwr": [473, 1124], "lrx": [473, 480, 1124, 1131], "ltx": [473, 1124], "lradom": [473, 480, 1124, 1131], "neglect_gas_att": [473, 1124], "feed": [473, 480, 1124, 1131], "neglect": [473, 1124], "ort_refl_field": [474, 1125], "ort_refl": [474, 1125], "dbz_dict": [475, 476, 1126, 1127], "use_rhohv": [477, 483, 1128, 1134], "srhohv": [477, 483, 1128, 1134], "srho_hv": [477, 1128], "rhohv_dict": [477, 478, 1128, 1129], "weight_pow": [479, 1130], "ab": [479, 1130, 1389], "grng": [479, 1130], "tobin": [479, 1130], "2017": [479, 492, 1130, 1143], "surfac": [479, 498, 514, 1130, 1149, 1165, 1376], "ic": [479, 492, 1130, 1143, 1366, 1377, 1392], "pellet": [479, 1130], "forecast": [479, 1130], "2065": [479, 1130], "2082": [479, 1130], "THE": [480, 1131], "s_pwr_dict": [480, 1131], "sphidp_dict": [483, 1134], "compute_pow": [484, 488, 1135, 1139, 1389], "szdr_dict": [484, 1135], "phase_dict": [486, 1137], "pwr_dict": [487, 1138], "sdbz_dict": [488, 1139], "srhohv_dict": [489, 1140], "statist": [490, 491, 523, 549, 1090, 1141, 1142, 1174, 1287], "fluctuat": [490, 491, 1141, 1142], "st1_dict": [490, 1141], "st1": [490, 1141, 1390], "st2_dict": [491, 1142], "st2": [491, 1142, 1390], "bukovc": [492, 1143], "winter": [492, 514, 1143, 1165, 1358, 1376], "liquid": [492, 1143, 1392], "reveal": [492, 1143, 1392], "2dvd": [492, 1143], "oklahoma": [492, 1143, 1264], "56": [492, 1143, 1378, 1391], "1345": [492, 1143], "1363": [492, 1143], "along_azi": [493, 1144], "fixed_rang": [493, 1144], "fixed_azimuth": [493, 1144], "fixed_elev": [493, 1144], "rng_tol": [493, 1144], "value_start": [493, 1144], "value_stop": [493, 1144], "acoord": [493, 1144], "along_el": [493, 1144], "along_rng": [493, 1144], "stop": [493, 1144], "kw": [494, 1145], "vol_refl_dict": [494, 1145], "10log10": [494, 1145], "wide": [496, 497, 1147, 1148], "wbn_dict": [496, 1147], "cappi_level": [497, 1148], "zr_a": [497, 1148], "zr_b": [497, 1148], "core_wt_threshold": [497, 1148], "conv_wt_threshold": [497, 1148], "conv_scale_km": [497, 1148], "min_reflect": [497, 1148], "conv_min_refl": [497, 1148], "conv_core_threshold": [497, 1148], "42": [497, 498, 514, 535, 1148, 1149, 1165, 1186, 1374, 1376], "override_check": [497, 1148], "computation": [497, 1148], "classifi": [497, 498, 514, 523, 1030, 1148, 1149, 1165, 1174, 1376, 1377, 1392], "convect": [497, 498, 514, 535, 1030, 1148, 1149, 1165, 1186, 1344, 1373, 1379, 1394], "stratiform": [497, 498, 514, 535, 1030, 1148, 1149, 1165, 1186, 1344, 1373, 1379, 1391, 1394], "\u00e0": [497, 1148], "trou": [497, 1148], "wavelet": [497, 1148], "atwt": [497, 1148], "multiresolut": [497, 1148], "focus": [497, 1148], "robust": [497, 1079, 1148, 1392], "raut": [497, 1148], "2020": [497, 1148, 1358, 1381, 1395, 1396], "relationship": [497, 1148], "sensit": [497, 501, 1148, 1152], "howev": [497, 526, 1148, 1177, 1385, 1390, 1391, 1392], "signific": [497, 1148, 1392], "approxim": [497, 1148], "break": [497, 1148], "season": [497, 1148], "2018": [497, 1148], "discuss": [497, 1148, 1381], "insensit": [497, 1148], "variat": [497, 526, 1148, 1177], "dyadic": [497, 1148], "natur": [497, 1093, 1148], "scale_break_us": [497, 1148], "greater": [497, 535, 1148, 1186, 1376], "bypass": [497, 1148], "saniti": [497, 1148], "fall": [497, 1090, 1093, 1148], "strong": [497, 514, 1148, 1165, 1391, 1392], "updraft": [497, 1148, 1391], "activ": [497, 1148, 1398], "collis": [497, 1148], "coalesc": [497, 1148], "remain": [497, 1148], "intens": [497, 535, 1148, 1186, 1268, 1392], "unclassifi": [497, 1148], "karekar": [497, 1148], "puranik": [497, 1148], "techniqu": [497, 512, 1087, 1090, 1148, 1163, 1391], "infrar": [497, 1148], "satellit": [497, 1148], "ieee": [497, 527, 1148, 1178], "geosci": [497, 527, 1148, 1178], "remot": [497, 527, 1148, 1178, 1346, 1396], "sen": [497, 527, 1148, 1178], "lett": [497, 1148], "328": [497, 1148, 1359, 1372, 1394], "330": [497, 1148, 1381, 1396], "seed": [497, 1148], "reeder": [497, 1148], "jakob": [497, 1148], "cascad": [497, 1148], "downscal": [497, 1148], "geophi": [497, 1148], "123": [497, 1148], "2050": [497, 1148], "2067": [497, 1148], "gayatri": [497, 1148], "murugavel": [497, 1148], "konwar": [497, 1148], "prabhakaran": [497, 1148], "tran": [497, 1148], "5409": [497, 1148], "5415": [497, 1148], "dx": [498, 514, 516, 535, 1149, 1165, 1167, 1186, 1376], "dy": [498, 514, 535, 1149, 1165, 1186, 1376], "level_m": [498, 514, 1149, 1165], "always_core_thr": [498, 514, 1030, 1149, 1165, 1376], "bkg_rad_km": [498, 514, 1149, 1165, 1376], "use_cosin": [498, 514, 1030, 1149, 1165, 1376], "max_diff": [498, 514, 1030, 1149, 1165, 1376], "zero_diff_cos_v": [498, 514, 1030, 1149, 1165, 1376], "55": [498, 514, 1149, 1165, 1370, 1376, 1392], "scalar_diff": [498, 514, 1030, 1149, 1165, 1376], "use_addit": [498, 514, 1030, 1149, 1165, 1376], "calc_thr": [498, 514, 1149, 1165, 1376], "weak_echo_thr": [498, 514, 1149, 1165, 1376], "min_dbz_us": [498, 1149, 1376], "db_averag": [498, 514, 1149, 1165, 1376], "remove_small_object": [498, 514, 1149, 1165, 1376], "min_km2_siz": [498, 514, 1149, 1165, 1376], "val_for_max_conv_rad": [498, 1149, 1376], "max_conv_rad_km": [498, 1149, 1376], "cs_core": [498, 1149], "nosfcecho": [498, 514, 1149, 1165, 1376], "weakecho": [498, 514, 1149, 1165, 1376], "sf": [498, 1149, 1376], "conv": [498, 1149, 1376], "estimate_flag": [498, 514, 1149, 1165, 1376], "estimate_offset": [498, 514, 1149, 1165, 1376], "partit": [498, 514, 535, 1149, 1165, 1186, 1341, 1392], "yuter": [498, 514, 535, 572, 1030, 1149, 1165, 1186, 1310, 1358, 1376], "1997": [498, 514, 1030, 1149, 1165, 1376], "pars": [498, 514, 1149, 1165], "cosin": [498, 514, 1030, 1149, 1165, 1376], "simpler": [498, 514, 1149, 1165, 1376], "scalar": [498, 514, 1030, 1149, 1165, 1376], "eqn": [498, 514, 1030, 1149, 1165], "b1": [498, 514, 1030, 1149, 1165], "percentag": [498, 514, 574, 1149, 1165, 1312], "weak": [498, 514, 1149, 1165, 1376], "underestim": [498, 514, 1149, 1165, 1376], "wih": [498, 514, 1149, 1165], "convsf_dict": [498, 1149, 1376], "raindrop": [498, 514, 1149, 1165, 1376], "pacif": [498, 514, 1149, 1165, 1376], "warm": [498, 514, 526, 1149, 1165, 1177, 1376, 1392], "pool": [498, 514, 1149, 1165, 1376], "implic": [498, 514, 1149, 1165, 1376], "appl": [498, 514, 528, 533, 535, 537, 1149, 1165, 1179, 1184, 1186, 1189, 1376, 1396], "meteor": [498, 514, 528, 533, 535, 537, 1149, 1165, 1179, 1184, 1186, 1189, 1376, 1396], "36": [498, 514, 1149, 1165, 1347, 1350, 1352, 1356, 1370, 1374, 1376, 1378, 1387], "847": [498, 514, 1149, 1165, 1376], "867": [498, 514, 1149, 1165, 1376], "doi": [498, 501, 514, 523, 527, 528, 530, 572, 1149, 1152, 1165, 1174, 1178, 1179, 1181, 1310, 1358, 1376, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "1175": [498, 514, 528, 530, 1149, 1165, 1179, 1181, 1376], "1520": [498, 514, 1149, 1165, 1376], "0450": [498, 514, 1149, 1165, 1376], "036": [498, 514, 1149, 1165, 1376], "3c0847": [498, 514, 1149, 1165, 1376], "morsdo": [498, 514, 1149, 1165, 1376], "3e2": [498, 514, 1149, 1165, 1376], "smith": [498, 514, 1149, 1165, 1376], "wilheit": [498, 514, 1149, 1165, 1376], "zipser": [498, 514, 1149, 1165, 1376], "character": [498, 501, 514, 535, 1149, 1152, 1165, 1186, 1376], "tropic": [498, 514, 1149, 1165, 1376], "kwajex": [498, 514, 1149, 1165, 1376], "385": [498, 514, 1149, 1165, 1376], "415": [498, 514, 1149, 1165, 1376], "jam2206": [498, 514, 1149, 1165, 1376], "lapse_r": [499, 519, 523, 1150, 1170, 1174], "nsamples_max": [499, 1150], "prepar": [499, 1150, 1383, 1384, 1385, 1387, 1388, 1390, 1393], "refl_std": [499, 1150], "zdr_std": [499, 1150], "kdp_std": [499, 1150], "rhohv_std": [499, 1150], "relh_std": [499, 1150], "negative_vel_prior": [500, 1151], "quit": [500, 1151, 1392], "tail": [500, 1151], "prioriti": [500, 601, 1151, 1339, 1398], "chosen": [500, 1151], "twice": [500, 1151], "fill_valu": [501, 516, 526, 527, 528, 535, 573, 1152, 1167, 1177, 1178, 1179, 1186, 1311, 1383, 1384, 1393], "ml_field": [501, 530, 531, 532, 1152, 1181, 1182, 1183], "ml_pos_field": [501, 530, 531, 532, 1152, 1181, 1182, 1183], "max_rang": [501, 1152], "detect_threshold": [501, 1152], "02": [501, 1091, 1092, 1093, 1152, 1353, 1358, 1372, 1376, 1389, 1394], "interp_hol": [501, 1152], "max_length_hol": [501, 1152], "check_min_length": [501, 1152], "get_iso0": [501, 530, 531, 532, 1152, 1181, 1182, 1183], "ml": [501, 530, 1152, 1181, 1339], "plai": [501, 1152, 1395], "affect": [501, 520, 1093, 1152, 1171], "erron": [501, 1152, 1385], "hole": [501, 1152], "ml_obj": [501, 530, 531, 532, 1152, 1181, 1182, 1183], "ml_dict": [501, 530, 531, 532, 1152, 1181, 1182, 1183], "iso0_dict": [501, 530, 531, 532, 1152, 1181, 1182, 1183], "all_ml": [501, 1152], "scipion": [501, 1152], "bern": [501, 523, 527, 1152, 1174, 1178], "q": [501, 1152], "meteorol": [501, 533, 1152, 1184, 1376], "soc": [501, 1152], "142": [501, 1152], "108": [501, 1152], "124": [501, 1152, 1378, 1391], "1002": [501, 1152], "qj": [501, 1152], "2672": [501, 1152], "niter": [502, 1153], "nvar": [502, 515, 1153, 1166], "medoids_arr": [502, 1153], "a_field": [503, 504, 507, 1154, 1155, 1158, 1392], "rr_field": [503, 504, 505, 506, 507, 508, 509, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "diederich": [503, 1154], "tromel": [503, 533, 1154, 1184], "wavelenght": [503, 1154], "hydrometeorologi": [503, 1154], "487": [503, 1154], "502": [503, 1154], "alphazr": [504, 1155], "0376": [504, 506, 507, 508, 1155, 1157, 1158, 1159], "betazr": [504, 1155], "6112": [504, 506, 507, 508, 1155, 1157, 1158, 1159], "alphaz": [504, 507, 508, 1155, 1158, 1159], "betaz": [504, 507, 508, 1155, 1158, 1159], "alphaa": [504, 507, 1155, 1158], "betaa": [504, 507, 1155, 1158], "mp_factor": [504, 1155], "main_field": [504, 507, 508, 1155, 1158, 1159], "thresh_max": [504, 507, 508, 1155, 1158, 1159], "act": [504, 507, 508, 649, 1155, 1158, 1159, 1376, 1383], "master": [504, 507, 508, 1155, 1158, 1159, 1367, 1396], "slave": [504, 507, 508, 1155, 1158, 1159], "blend": [507, 508, 1158, 1159, 1366], "rain_mast": [507, 508, 1158, 1159], "alphakdp": [508, 1159], "betakdp": [508, 1159], "mm": [508, 1159, 1376, 1392], "polynomi": [509, 1160], "develop": [509, 514, 1160, 1165, 1381, 1390, 1395, 1396], "mcgill": [509, 1160, 1381], "az_tol": [510, 511, 552, 1161, 1162, 1290], "wind_field": [510, 511, 513, 1161, 1162, 1164], "windshear_field": [510, 511, 1161, 1162], "windshear": [510, 511, 1161, 1162, 1339], "npoints_min": [512, 1163], "azi_spacing_max": [512, 1163], "vel_diff_max": [512, 1163], "rad_vel_field": [512, 1163], "u_vel_field": [512, 1163], "v_vel_field": [512, 1163], "w_vel_field": [512, 1163], "vel_est_field": [512, 1163], "vel_std_field": [512, 1163], "vel_diff_field": [512, 1163], "vad": [512, 537, 538, 1163, 1189, 1190, 1339, 1344, 1373, 1379, 1394, 1396], "recomput": [512, 1163], "difer": [512, 1163], "vert_proj": [513, 1164], "neglig": [513, 1164], "v_r": [513, 1164], "v_el": [513, 1164], "v_az": [513, 1164], "perpendicular": [513, 1164], "v_h": [513, 1164], "know": [513, 1164, 1398], "hold": [513, 1164], "min_val_us": [514, 1165], "binary_clos": [514, 1165], "val_for_max_rad": [514, 1165], "max_rad_km": [514, 1165], "core_v": [514, 1165], "bkgd_val": [514, 1165], "feat_val": [514, 1165], "overest_field": [514, 1165], "underest_field": [514, 1165], "tomkin": [514, 572, 1165, 1310, 1358, 1376], "2023": [514, 1165], "steiner": [514, 535, 1165, 1186, 1376], "1995": [514, 535, 1165, 1186, 1376], "laura": [514, 1165, 1358, 1376], "lauratomkin": [514, 1165], "overestim": [514, 1165, 1376], "feature_dict": [514, 1165], "climatolog": [514, 535, 1165, 1186, 1376], "gaug": [514, 535, 1165, 1186, 1376], "1978": [514, 535, 1165, 1186, 1376, 1392], "2007": [514, 535, 1165, 1186, 1376], "miller": [514, 572, 1165, 1310, 1358], "2024": [514, 1165], "identif": [514, 572, 1165, 1310, 1358], "faint": [514, 1165], "prep": [514, 1165], "sonde_dset": [515, 1166], "time_kei": [515, 1166], "height_kei": [515, 1166], "vap": [515, 1166], "startard": [515, 1166], "ncvar": [515, 1166], "return_d": [515, 1166], "radar_spec": [516, 1167], "dem_grid": [516, 1167], "terrain_altitude_field": [516, 1167], "bent_terrain_altitude_field": [516, 1167], "terrain_slope_field": [516, 1167], "terrain_aspect_field": [516, 1167], "elevation_angle_field": [516, 1167], "visibility_field": [516, 1167], "min_vis_elevation_field": [516, 1167], "min_vis_altitude_field": [516, 1167], "min_vis_height_above_ground_field": [516, 1167], "min_rad_vis_height_above_ground_field": [516, 1167], "incident_angle_field": [516, 1167], "effective_area_field": [516, 1167], "sigma_0_field": [516, 1167], "rcs_clutter_field": [516, 1167], "dbm_clutter_field": [516, 1167], "dbz_clutter_field": [516, 1167], "visibility_polar_field": [516, 1167], "az_conv": [516, 1167], "daz": [516, 1167], "012": [516, 1167], "3333333333333333": [516, 1167], "atm_att": [516, 1167], "mosotti_kw": [516, 1167], "9644": [516, 1167], "raster_oversampl": [516, 1167], "min_radar_elev": [516, 1167], "sigma0_method": [516, 1167], "gabella": [516, 523, 1167, 1174], "clip": [516, 1167], "return_pyart_object": [516, 1167], "frequenti": [516, 1167], "ghz": [516, 1167], "tau": [516, 1167], "terrain": [516, 1167, 1355], "seen": [516, 1167, 1389, 1391, 1396], "backscatt": [516, 526, 533, 1167, 1177, 1184], "incid": [516, 1167], "topographi": [516, 1167], "rx": [516, 1167], "discret": [516, 1087, 1090, 1167], "slower": [516, 526, 1093, 1167, 1177], "equival": [516, 532, 656, 1080, 1167, 1183, 1346, 1357, 1365, 1371], "One": [516, 1167, 1383, 1393, 1396, 1398], "clausiu": [516, 1167], "mosotti": [516, 1167], "materi": [516, 1167, 1381], "sigma": [516, 534, 1167, 1185, 1268, 1269, 1366, 1367], "naught": [516, 1167], "undefin": [516, 1167], "oversampl": [516, 1167, 1339], "constraint": [516, 526, 1167, 1177], "delrieu": [516, 1167], "lot": [516, 1167, 1391], "directli": [516, 1167, 1355, 1392], "bent_terrain_altitude_d": [516, 1167], "terrain_slope_d": [516, 1167], "terrain_aspect_d": [516, 1167], "elevation_d": [516, 1167], "min_vis_elevation_d": [516, 1167], "min_vis_altitude_d": [516, 1167], "min_vis_height_above_ground_d": [516, 1167], "min_rad_vis_height_above_ground_d": [516, 1167], "visibility_d": [516, 1167], "incident_angle_d": [516, 1167], "effective_area_d": [516, 1167], "sigma_0_d": [516, 1167], "rcs_clutter_d": [516, 1167], "dbm_clutter_d": [516, 1167], "dbz_clutter_d": [516, 1167], "visibility_polar_d": [516, 1167], "perona": [516, 1167], "1998": [516, 1167], "orograph": [516, 1167], "influenc": [516, 1084, 1087, 1091, 1092, 1093, 1167, 1387], "geometr": [516, 1167], "1485": [516, 1167], "1494": [516, 1167], "freq_band": [518, 1169], "temp_ref_field": [519, 1170], "heigh_over_iso0": [519, 1170], "iso0_ref": [519, 1170], "insuffici": [519, 1170], "rng_left_km": [520, 1171], "rng_right_km": [520, 1171], "ang": [520, 1171, 1366, 1367], "ang_r": [520, 1171], "ml_bottom": [520, 1171], "msl": [520, 530, 574, 1171, 1181, 1312], "grid1": [521, 1172], "grid2": [521, 1172], "return_valu": [521, 1172], "displac": [521, 1172], "en": [521, 1172, 1381, 1390, 1395, 1396], "wikipedia": [521, 1172], "phase_correl": [521, 1172], "inspir": [521, 1172], "christoph": [521, 1172], "gohlk": [521, 1172], "lfd": [521, 1172], "uci": [521, 1172], "imreg": [521, 1172], "advect": [521, 522, 1172, 1173], "trim_edg": [522, 1173], "field_list": [522, 1082, 1173], "shifted_grid": [522, 1173], "subset": [522, 1173, 1344, 1373, 1374], "mass_cent": [523, 1174, 1392], "entropy_field": [523, 1174], "radar_freq": [523, 1174], "compute_entropi": [523, 1174], "output_dist": [523, 1174], "besic": [523, 531, 1174, 1182, 1392], "nclass": [523, 1174], "decai": [523, 1174], "celsiu": [523, 1174, 1339], "entropi": [523, 1174], "hertz": [523, 1174], "fields_dict": [523, 1174], "figuera": [523, 1174, 1381, 1396], "ventura": [523, 1174, 1381, 1396], "grazioli": [523, 527, 1174, 1178, 1381, 1396], "germann": [523, 1174, 1381, 1396], "semi": [523, 1174], "supervis": [523, 1174], "mea": [523, 572, 1174, 1310, 1358], "4425": [523, 1174], "4445": [523, 1174], "5194": [523, 572, 1174, 1310, 1358], "amt": [523, 572, 1174, 1310, 1358], "piecewis": [524, 525, 1175, 1176], "optim": [524, 525, 526, 1093, 1175, 1176, 1177], "lenght": [524, 525, 1175, 1176], "kdp_dict": [524, 525, 526, 527, 528, 1175, 1176, 1177, 1178, 1179], "cg": [526, 1177], "clpf": [526, 1177], "length_scal": [526, 1177], "first_guess": [526, 1177], "finite_ord": [526, 1177], "maesaka": [526, 1177, 1392], "2012": [526, 528, 1177, 1179, 1392], "monoton": [526, 529, 1177, 1180, 1355], "propag": [526, 527, 528, 1177, 1178, 1179], "notat": [526, 1177], "primari": [526, 1177], "proport": [526, 1177], "analys": [526, 527, 528, 1177, 1178, 1179], "nonlinear": [526, 1177], "conjug": [526, 1177], "gradient": [526, 1177, 1355], "broyden": [526, 1177], "fletcher": [526, 1177], "goldfarb": [526, 1177], "shanno": [526, 1177], "bfg": [526, 1177], "100k": [526, 1177], "parameter": [526, 1177], "attentu": [526, 1177], "bring": [526, 1177], "guess": [526, 1177], "root": [526, 1177, 1395, 1398], "signifi": [526, 535, 1177, 1186], "everywher": [526, 1177], "exactli": [526, 1177, 1350, 1389], "avoid": [526, 1177, 1339, 1391, 1398], "converg": [526, 1177], "closer": [526, 1177], "finit": [526, 1177], "accuraci": [526, 1177], "maxit": [526, 1177], "met": [526, 1177], "achiev": [526, 1177], "somewhat": [526, 1177], "thread": [526, 1177], "cpu": [526, 1177], "multiprocess": [526, 1177], "capabl": [526, 1177, 1385, 1393], "relev": [526, 1177, 1389], "phidpf_dict": [526, 1177], "phidpr_dict": [526, 527, 528, 1177, 1178, 1179], "forward": [526, 563, 564, 1177, 1301, 1302], "iwanami": [526, 1177], "maki": [526, 1177], "seventh": [526, 1177], "european": [526, 1177], "confer": [526, 1177, 1381], "hydrologi": [526, 1177], "rcov": [527, 1178], "pcov": [527, 1178], "prefilter_psidp": [527, 528, 1178, 1179], "filter_opt": [527, 528, 1178, 1179], "kalman": [527, 1178], "schneeb": [527, 1178], "psidp": [527, 528, 1178, 1179], "char": [527, 528, 1178, 1179], "capit": [527, 528, 1178, 1179], "intercept": [527, 1178], "3x3": [527, 1178], "covari": [527, 1178], "4x4": [527, 1178], "filter_psidp": [527, 528, 1178, 1179], "enabl": [527, 528, 1178, 1179], "kdp_std_dict": [527, 1178], "dev": [527, 1178, 1339, 1387, 1396], "ensembl": [527, 1178], "52": [527, 533, 1178, 1184, 1374, 1390, 1392], "5137": [527, 1178], "5149": [527, 1178], "1109": [527, 1178], "tgr": [527, 1178], "2287017": [527, 1178], "windsiz": [528, 1179], "n_iter": [528, 1179], "interp": [528, 1179], "vulpiani": [528, 1179], "pre": [528, 1179, 1391, 1392], "ex": [528, 1179, 1355, 1396], "advantag": [528, 1179], "eat": [528, 1179], "gianfranco": [528, 1179], "mario": [528, 1179], "montopoli": [528, 1179], "luca": [528, 1179], "delli": [528, 1179], "passeri": [528, 1179], "antonio": [528, 1179], "gioia": [528, 1179], "pietro": [528, 1179], "giordano": [528, 1179], "frank": [528, 1179], "marzano": [528, 1179], "On": [528, 1179], "dual": [528, 1179], "mountain": [528, 1179], "climatol": [528, 1179, 1376], "51": [528, 1179, 1374], "405": [528, 1179], "425": [528, 1179], "05024": [528, 1179], "profile_field": [529, 1180], "height_field": [529, 1180], "3re": [529, 1180], "whole": [529, 1180], "height_dict": [529, 1180], "profile_dict": [529, 1180], "nvol": [530, 1181], "maxh": [530, 1181], "rhomin": [530, 1181], "rhomax": [530, 1181], "94": [530, 1181, 1393], "zhmin": [530, 1181], "hwindow": [530, 1181], "mlzhmin": [530, 1181], "mlzhmax": [530, 1181], "mlzdrmin": [530, 1181], "mlzdrmax": [530, 1181], "htol": [530, 1181], "ml_bottom_diff_max": [530, 1181], "time_accu_max": [530, 1181], "1800": [530, 1181, 1383], "nml_points_min": [530, 1181], "wlength": [530, 1181], "percentile_bottom": [530, 1181], "percentile_top": [530, 1181], "time_nodata_allow": [530, 1181], "3600": [530, 1181, 1383], "ml_global": [530, 1181], "aggreg": [530, 532, 1181, 1183, 1377, 1392], "ml_bottom_dif_max": [530, 1181], "percentil": [530, 1181], "stack": [530, 1181, 1395, 1396], "Its": [530, 1181], "kraus": [530, 1181], "design": [530, 572, 1181, 1310, 1366, 1376, 1396], "prototyp": [530, 1181], "clim": [530, 533, 1181, 1184], "1354": [530, 1181], "1364": [530, 1181], "2007jamc1634": [530, 1181], "force_continu": [531, 1182], "dist_max": [531, 1182], "350": [531, 1182], "heightand": [531, 1182], "1400": [532, 1183], "4500": [532, 1183, 1383], "ns_factor": [532, 1183], "rhohv_corr_min": [532, 1183], "rhohv_nash_min": [532, 1183], "ang_iso0": [532, 1183], "age_iso0": [532, 1183], "ml_thickness_iso0": [532, 1183], "ml_memori": [532, 1183], "rhohv_field_ob": [532, 1183], "rhohv_field_theo": [532, 1183], "nse": [532, 1183], "hour": [532, 1183, 1346, 1347], "ml_found_obj": [532, 1183], "instantan": [532, 1183], "desired_angl": [533, 1184], "wanted_angl": [533, 1184], "dictonari": [533, 1184], "troemel": [533, 1184], "2529": [533, 1184], "2548": [533, 1184], "54": [533, 1184, 1347, 1391], "2344": [533, 1184], "2359": [533, 1184], "submit": [533, 1184, 1381], "technol": [533, 1184], "fm": [534, 1185], "rg": [534, 536, 1185, 1187], "nbin": [534, 1185], "110": [534, 1185], "pdf_zh_max": [534, 1185], "pdf_relh_max": [534, 1185], "sigma_zh": [534, 1185], "sigma_relh": [534, 1185], "random": [534, 536, 1185, 1187], "platykurtic_dbz": [534, 1185], "platykurtic_h_iso0": [534, 1185], "nfeatur": [534, 1185], "histogram": [534, 1185, 1350, 1385], "platykurtik": [534, 1185], "guassian": [534, 1185], "quantiz": [534, 1185], "platykurt": [534, 1185], "fm_sampl": [534, 1185], "work_level": [535, 1186], "peak_rel": [535, 1186], "area_rel": [535, 1186], "medium": [535, 1186], "bkg_rad": [535, 1186], "11000": [535, 1186, 1387], "use_intens": [535, 1186], "bright": [535, 1186], "sgp": [535, 1186, 1264], "peaked": [535, 1186], "eclass": [535, 1186], "par_var": [536, 1187], "probabl": [536, 566, 567, 568, 581, 1187, 1304, 1305, 1306, 1319, 1390], "membership": [536, 1187], "synthetic_ob": [536, 1187], "z_want": [537, 538, 1189, 1190, 1378, 1391, 1396], "valid_ray_min": [537, 1189, 1396], "brown": [537, 1189, 1339, 1396], "amount": [537, 1189, 1387, 1396], "_averag1d": [537, 1189, 1396], "idw": [537, 1189], "wexler": [537, 1189, 1396], "1968": [537, 1189, 1396], "kinemat": [537, 1189, 1396], "105": [537, 1189, 1378, 1391, 1396], "113": [537, 1189, 1374, 1396], "linespac": [538, 1190], "michelson": [538, 1190], "andersson": [538, 1190], "koistinen": [538, 1190], "collier": [538, 1190], "riedl": [538, 1190], "szturc": [538, 1190], "gjertsen": [538, 1190], "nielsen": [538, 1190], "overgaard": [538, 1190], "baltex": [538, 1190], "centr": [538, 1190], "smhi": [538, 1190], "climatologi": [538, 1087, 1090, 1190], "swedish": [538, 1190], "hydrolog": [538, 1190], "institut": [538, 1190, 1393], "norrkop": [538, 1190], "1970": 539, "01t00": 539, "00": [539, 1343, 1348, 1353, 1372, 1379, 1380, 1394], "00z": 539, "bytes_or_buff": 539, "expos": 539, "buffer": 539, "handler": 539, "__str__": 539, "radian": [540, 542, 585, 795, 1278, 1280, 1323], "std": [542, 543, 576, 588, 1090, 1280, 1281, 1314, 1326], "convolut": [544, 1282], "ndimag": [544, 1282, 1366, 1367], "generic_filt": [544, 1282], "pi": [544, 1282, 1385], "std_dev": [544, 1282], "radar1": [545, 546, 574, 582, 1283, 1284, 1312, 1320], "radar2": [545, 546, 574, 582, 1283, 1284, 1312, 1320], "h_tol": [545, 574, 1283, 1312], "coloc_gates_field": [545, 546, 1283, 1284], "coloc": [545, 546, 1283, 1284], "coloc_dict": [545, 546, 1283, 1284], "azi": [545, 546, 562, 1283, 1284, 1300, 1389], "coloc_rad1": [545, 546, 1283, 1284], "distance_upper_bound": [546, 1284], "neighbour": [546, 562, 1284, 1300], "ckdtree": [546, 1284], "bound": [546, 1284], "lin_tran": [547, 1285], "span": [547, 1285], "consdier": [547, 1285], "vec1": [548, 550, 1286, 1288], "vec2": [548, 550, 1286, 1288], "pearson": [548, 1286], "corr": [548, 550, 1286, 1288, 1391], "stat": [549, 569, 1287, 1307], "nvalid": [549, 1287], "arr1": [550, 1288], "arr2": [550, 1288], "obs_data": [551, 1289], "mod_data": [551, 1289], "nash": [551, 1289], "sutcliff": [551, 1289], "nash_coeff": [551, 1289], "target_elev": [553, 570, 1291, 1308], "el_tol": [553, 570, 1291, 1308], "radar_ppi": [553, 1291], "epoch": [554, 555, 556, 557, 558, 1292, 1293, 1294, 1295, 1296], "max_offset": [559, 1297], "running_win_dt": [559, 1297], "deg_rng": [559, 1297], "consider_2pi_jump": [559, 1297], "is_ppi": [559, 1297], "wise": [559, 1297], "strategi": [559, 1297], "might": [559, 1297, 1383, 1398], "goe": [559, 1297, 1390], "shot": [559, 1297], "articl": [560, 1298], "var": [560, 561, 593, 594, 596, 597, 598, 599, 1298, 1299, 1331, 1332, 1334, 1335, 1336, 1337], "nnois": [560, 561, 1298, 1299], "pwr_w_rai": [561, 1299], "pct": [561, 567, 580, 1299, 1305, 1318], "270436": [561, 1299], "flat_reg_wlen": [561, 566, 578, 1299, 1304, 1316], "flat_reg_var_max": [561, 578, 579, 1299, 1316, 1317], "439551": [561, 1299], "snr_thr": [561, 568, 1299, 1306], "769572": [561, 1299], "ngates_final_min": [561, 1299], "ngates_median": [561, 1299], "83": [561, 1299, 1392], "local": [561, 566, 571, 1263, 1299, 1304, 1309, 1381, 1395, 1396], "decibel": [561, 1299], "flat": [561, 566, 578, 579, 1299, 1304, 1316, 1317, 1346, 1391], "inds_rai": [561, 1299], "inds_ray_aux": [562, 1300], "ind_rng_aux": [562, 1300], "target_latitud": [563, 590, 1301, 1328], "target_longitud": [563, 590, 1301, 1328], "bear": [563, 1301], "alongitudeg": [563, 1301], "great": [563, 590, 1301, 1328], "circl": [563, 590, 1301, 1328, 1376], "known": [563, 1301, 1393, 1396], "6371000": [563, 590, 1301, 1328], "calculatitude": [563, 1301], "degress": [563, 590, 1301, 1328], "sphere_dist": [565, 1303], "for_azimuth": [565, 1303], "get_column_rai": [565, 1303], "xarari": [565, 1303], "prob_thr": [566, 567, 1304, 1305], "var_thr": [566, 1304], "0001": [567, 1305], "pct_out": [567, 1305], "pfa_thr": [568, 1306], "alarm": [568, 581, 1306, 1319], "weigt": [569, 1307], "xwind": [571, 1309], "ywind": [571, 1309], "win_std": [571, 1309], "mute_field": [572, 1310, 1358], "mute_threshold": [572, 1310, 1358], "field_threshold": [572, 1310, 1358], "discern": [572, 1310], "mute": [572, 1310, 1344, 1354, 1372, 1376, 1394], "allen": [572, 1310, 1358], "5515": [572, 1310, 1358], "5525": [572, 1310, 1358], "kind": [573, 589, 1311, 1327, 1341, 1392], "radarspectra": [573, 587, 1267, 1311, 1325], "psr_interp": [573, 1311], "vol_d_tol": [574, 1312], "vismin": [574, 1312], "azmin": [574, 1312], "azmax": [574, 1312], "visib_field": [574, 1312], "intersec_field": [574, 1312], "regard": [574, 1312], "decim": [574, 1312], "diamet": [574, 1312], "intersec_rad1_dict": [574, 1312], "dist": [575, 576, 1091, 1092, 1093, 1313, 1314], "interval_min": [575, 576, 1313, 1314], "interval_max": [575, 576, 1313, 1314], "endpoint": [575, 576, 1313, 1314], "to_vpt": [577, 1315], "verticl": [577, 1315], "prescrib": [578, 1316], "ivic_flat_reg_wind_len": [578, 1316], "throw": [580, 581, 1318, 1319], "pfa": [580, 581, 1318, 1319], "1e": [580, 581, 1318, 1319, 1383, 1393], "matlab": [580, 1318], "get_ivic_pct": [580, 1318], "particularli": [580, 1318], "pct_tabl": [580, 1318], "snr_thr_out": [581, 1319], "coerce_angl": [582, 1320, 1339], "slightli": [582, 1320, 1357, 1392], "slight": [582, 1320], "misposit": [582, 1320, 1339], "spectra1": [583, 1321], "spectra2": [583, 1321], "tup": [584, 1322], "guarante": [584, 1322], "broadcast": [584, 1322], "broadcasted_arrai": [584, 1322], "angles1": [585, 1323], "angles2": [585, 1323], "angle1": [586, 1324], "angle2": [586, 1324], "eg": [588, 1326], "ma": [588, 1326, 1350, 1351, 1376, 1384, 1388, 1396], "sim_vel_field": [589, 1327], "slinear": [589, 1327], "quadrat": [589, 1327], "cubic": [589, 1327], "interp1d": [589, 1327, 1396], "descript": [589, 601, 649, 651, 664, 746, 817, 818, 855, 1032, 1055, 1079, 1094, 1191, 1277, 1327, 1381, 1396], "sim_vel": [589, 1327, 1396], "coverag": [591, 592, 1329, 1330, 1391], "11pt": [593, 1331], "stdev": [593, 1331], "texarrai": [593, 1331], "pyradarobj": [593, 1331], "tex": [594, 1332], "single_scan": [595, 1333], "is_vpt": [595, 1333], "mislabel": [595, 1333], "properli": [595, 632, 633, 1333, 1347], "wt": [596, 597, 598, 599, 1202, 1334, 1335, 1336, 1337], "skew": [596, 598, 1090, 1334, 1336], "statu": [600, 1396], "dependeci": 600, "sy": [600, 1031], "polish": 601, "risk": 601, "bug": [601, 1339, 1381, 1395, 1396], "momentpm": 604, "momentm": 604, "share": 604, "extra": [604, 615, 616, 632, 633], "momentspm": 604, "momentsm": 604, "metranet_lib": 604, "keep_all_rai": 615, "physic_valu": [615, 616, 632, 633, 1390], "masked_arrai": [615, 616, 632, 633, 1383, 1393], "duplic": [615, 1339], "ret_data": [615, 616, 632, 633], "radardata": [615, 616, 632, 633], "reorder_angl": 616, "reorder": [616, 1339], "knmi_h5": [623, 1339], "file_path": 624, "cpi_head": 634, "3d": [636, 1391], "commun": [649, 1396, 1398], "interact": 664, "az_data": 795, "az_ref": 795, "el_data": 795, "el_ref": 795, "sunhit": [795, 804], "npar": [795, 804], "do_elcorr": 795, "add_map": 1031, "savedir": 1031, "show_figur": 1031, "add_slogan": 1031, "plan": 1031, "cappi": 1031, "ref": [1031, 1347, 1370], "vel": [1031, 1390], "homeyerrainbow": [1031, 1355], "dot": [1031, 1367], "inch": 1031, "slogan": 1031, "hamid": 1031, "ali": 1031, "syedhamidali": 1031, "concret": 1069, "__getitem__": 1069, "__setitem__": 1069, "__delitem__": 1069, "__iter__": 1069, "__len__": 1069, "src_radar": 1080, "dest_radar": 1080, "distance_toler": [1080, 1350], "gatefilter_src": [1080, 1350], "time_toler": [1080, 1350], "kd": 1080, "tree": [1080, 1093], "src_radar_i": 1080, "src_radar_x": 1080, "destin": [1080, 1082, 1350], "src_radar_tim": 1080, "dest_radar_tim": 1080, "gate_mapp": 1080, "src": [1080, 1347, 1389, 1390, 1391, 1392], "dest": 1080, "dest_index": 1080, "radar_map": 1080, "mapped_radar": [1080, 1350], "adequ": [1080, 1350], "getter": [1081, 1083], "zg": [1084, 1085, 1086], "yg": [1084, 1085, 1086], "xg": [1084, 1085, 1086], "roi": [1084, 1085, 1086, 1088, 1089, 1090, 1093], "grow": [1085, 1086, 1091, 1092, 1093, 1396], "virtual": [1086, 1091, 1092, 1093], "grid_shap": [1087, 1088, 1089, 1090, 1091, 1092, 1093, 1264, 1351, 1352, 1356, 1376, 1387, 1391], "grid_limit": [1087, 1088, 1089, 1090, 1091, 1092, 1093, 1264, 1351, 1352, 1356, 1376, 1387, 1391], "gridding_algo": 1087, "map_gates_to_grid": [1087, 1090], "copy_field_dtyp": [1087, 1090], "map_to_grid": [1087, 1090, 1091, 1092], "significantli": [1087, 1093], "faster": [1087, 1093], "barn": [1087, 1090, 1093, 1387], "1964": [1087, 1090], "maxim": [1087, 1090], "numer": [1087, 1090, 1392], "396": [1087, 1090], "409": [1087, 1090], "cressman": [1087, 1090, 1093, 1387], "1959": [1087, 1090], "monthli": [1087, 1090], "review": [1087, 1090], "367": [1087, 1090], "374": [1087, 1090], "paulei": [1087, 1090, 1387], "1990": [1087, 1090, 1387], "respons": [1087, 1090], "118": [1087, 1090], "1145": [1087, 1090], "1164": [1087, 1090], "target_sweep": [1088, 1089], "grid_siz": [1088, 1089, 1091, 1092, 1093], "801": [1088, 1089, 1390], "auto": [1088, 1089, 1355, 1390, 1391], "max_z": [1088, 1089], "12000": [1088, 1089, 1383, 1387], "el_rounding_frac": 1088, "add_grid_altitud": 1088, "grid_from_radar": [1088, 1089, 1091, 1092, 1093, 1351, 1352, 1356, 1376, 1387, 1391], "h_factor": [1088, 1089, 1091, 1092, 1093], "dist_factor": [1088, 1089, 1091, 1092], "radar_d": [1088, 1089], "third": [1088, 1089, 1392, 1396], "az_rounding_frac": 1089, "possibli": 1090, "qxx": 1090, "xx": [1090, 1395], "q25": 1090, "q50": 1090, "q99": 1090, "kurtosi": 1090, "grid_origin": [1091, 1092, 1093, 1352, 1356], "grid_origin_alt": [1091, 1092, 1093], "map_roi": [1091, 1092, 1093], "weighting_funct": [1091, 1092, 1093, 1387], "barnes2": [1091, 1092, 1093], "17000": [1091, 1092, 1093, 1387], "roi_func": [1091, 1092, 1093, 1387], "dist_beam": [1091, 1092, 1093, 1387], "constant_roi": [1091, 1092, 1093], "z_factor": [1091, 1092, 1093], "xy_factor": [1091, 1092, 1093], "min_radiu": [1091, 1092, 1093, 1387], "nb": [1091, 1092, 1093], "bsp": [1091, 1092, 1093], "linearli": [1091, 1092], "roifunct": [1091, 1092], "get_roi": [1091, 1092], "cython": [1091, 1092, 1339], "copy_field_data": 1093, "kd_tree": 1093, "leafsiz": 1093, "nearbi": [1093, 1352], "coodin": 1093, "azimut": 1093, "similarili": 1093, "example_roi_func_const": 1093, "example_roi_func_dist": 1093, "example_roi_func_dist_beam": 1093, "voxel": 1093, "foreach": 1093, "metet": 1093, "sacr": 1093, "sapr": [1093, 1270], "dist_mean": 1093, "preserv": [1093, 1385], "leaf": 1093, "lookup": [1093, 1339], "suffix": 1202, "tmp": 1202, "temporari": 1202, "my_cwd": 1202, "getcwd": 1202, "tmpdir": 1202, "_": [1202, 1346, 1347, 1377, 1392], "txt": [1202, 1395], "assert": [1202, 1396], "isfil": 1202, "path_to_fil": 1263, "site": [1264, 1341, 1374, 1384, 1387, 1390, 1391, 1392, 1395], "min_valu": 1268, "max_valu": 1268, "grid_len": 1268, "mu": [1268, 1269], "masked_boundari": 1268, "dp_phase_shift": [1270, 1374, 1383], "diff_phas": [1270, 1383], "differential_reflect": [1270, 1346, 1359, 1366, 1388, 1389, 1390, 1393], "rectangular": [1271, 1272], "miscellan": 1277, "depreci": 1277, "caution": 1277, "releas": [1338, 1381, 1384, 1387, 1391, 1395, 1396], "aug": 1338, "2025": [1338, 1389], "guid": [1338, 1381], "broken": 1338, "sever": [1339, 1389, 1392], "wolfidan": 1339, "com": [1339, 1367, 1395, 1396, 1398], "pyart": [1339, 1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1396, 1398], "pull": [1339, 1347, 1381, 1396], "writer": [1339, 1381], "flip": [1339, 1391], "coerc": 1339, "dealias_spectra": 1339, "output_to_geotiff": 1339, "improvemnet": 1339, "lib": [1339, 1341, 1384, 1387, 1389, 1390, 1391, 1392, 1395], "download": [1339, 1341, 1342, 1344, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1396, 1398], "gh": 1339, "action": 1339, "cfg": 1339, "handl": 1339, "typo": 1339, "odim_h5_writ": 1339, "sw_version": 1339, "led": [1339, 1398], "timestep": [1339, 1391], "wrong": 1339, "deprec": [1339, 1384, 1387, 1390, 1391], "cumtrapz": 1339, "hydro": [1339, 1377, 1390, 1392], "gecsx": [1339, 1381], "commit": [1339, 1396], "57664ce7b27c27af03f631fcd0e92a2": 1339, "linalg": 1339, "lstsq": 1339, "config": [1339, 1383, 1391, 1392, 1398], "bias_and_nois": 1339, "extract_sweeps_skyecho": 1339, "aux_io": [1339, 1389, 1390], "knmi": 1339, "h5": 1339, "proprietari": 1339, "latlon": 1339, "cross_sect": 1339, "gridmapdisplai": [1339, 1344, 1354, 1356, 1372, 1376, 1387, 1391, 1394], "_rsl_interfac": 1339, "pyx": 1339, "read_product": [1339, 1390], "behaviour": 1339, "conv_strat_yut": [1339, 1376], "juhi24": 1339, "patch": [1339, 1366], "radar_util": 1339, "register_cmap": 1339, "join_radar": [1339, 1391], "colobar": [1339, 1357], "graph": [1339, 1341, 1342, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1383, 1384, 1385, 1387, 1388, 1391, 1392], "_label_axes_latlon": 1339, "minor": [1339, 1384, 1387, 1391], "rad4alp_gif_read": 1339, "imageio": 1339, "nrow": [1339, 1355], "ncol": 1339, "agre": 1339, "cpc": 1339, "plot_xsect": [1339, 1371, 1372, 1394], "radardisplai": [1339, 1341, 1342, 1355, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1375, 1377, 1391, 1392], "rainforest": 1339, "compute_refl_time_avg": 1339, "crash": [1339, 1390], "radar_": 1339, "care": 1339, "read_odim_h5": 1339, "guidelin": 1339, "prohibit": 1339, "write_odim_grid": 1339, "interfac": 1339, "setuptool": 1339, "interpol_field": 1339, "northernmost": 1339, "msrad": [1341, 1390, 1391, 1392], "anaconda3": [1341, 1381, 1384, 1387, 1390, 1391, 1392, 1395, 1398], "wolfensb": [1341, 1347, 1390, 1391, 1392], "env": [1341, 1381, 1384, 1387, 1390, 1391, 1392, 1398], "pyart_new": 1341, "python3": [1341, 1390, 1391, 1392], "packag": [1341, 1347, 1381, 1384, 1387, 1390, 1391, 1392, 1395, 1396, 1398], "_core": 1341, "fromnumer": [1341, 1392], "820": 1341, "userwarn": [1341, 1347, 1390, 1391, 1392], "maskedarrai": [1341, 1392], "kth": [1341, 1392], "__doc__": [1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1376], "jonathan": [1341, 1342, 1351, 1352, 1359, 1360, 1362, 1364, 1368, 1371, 1398], "helmu": [1341, 1342, 1351, 1352, 1359, 1360, 1362, 1364, 1368, 1371, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396, 1398], "jhelmu": [1341, 1342, 1351, 1352, 1359, 1360, 1362, 1364, 1368, 1371], "anl": [1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1364, 1366, 1367, 1368, 1369, 1371, 1374, 1375], "licens": [1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1396], "bsd": [1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1396], "claus": [1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1396], "pyplot": [1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392], "plt": [1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392], "get_test_data": [1341, 1342, 1350, 1351, 1352, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376], "sgpcsaprsurcmaci7": [1341, 1384], "c0": [1341, 1364, 1365, 1369, 1384], "20110520": [1341, 1384], "095101": [1341, 1384], "read_cfradi": [1341, 1350, 1352, 1356, 1364, 1365, 1369, 1377, 1378, 1391, 1392], "pop": 1341, "specific_attenu": [1341, 1374, 1377, 1383, 1388, 1392], "corrected_reflectivity_horizont": [1341, 1352, 1356, 1374, 1383], "calculate_attenu": 1341, "add_field": [1341, 1342, 1376, 1377, 1384, 1385, 1391, 1392, 1396], "figsiz": [1341, 1342, 1346, 1347, 1350, 1355, 1356, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1375, 1376, 1377, 1384, 1385, 1387, 1388, 1391, 1392], "ax1": [1341, 1342, 1356, 1370, 1371, 1376], "add_subplot": [1341, 1342, 1351, 1352, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1371], "131": [1341, 1376], "raw": [1341, 1342, 1381, 1382, 1389, 1391], "ax2": [1341, 1342, 1350, 1356, 1370, 1371, 1375, 1376, 1385], "132": [1341, 1376], "ax3": [1341, 1342, 1370, 1376], "133": [1341, 1374, 1376], "suptitl": [1341, 1342, 1369, 1378, 1391], "fontsiz": [1341, 1342, 1355, 1357, 1366, 1367], "minut": [1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1391], "376": 1341, "jupyt": [1341, 1342, 1344, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1390, 1398], "notebook": [1341, 1342, 1344, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1384, 1387, 1388, 1396, 1398], "plot_attenu": [1341, 1343, 1394], "ipynb": [1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378], "zip": [1341, 1342, 1344, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381], "galleri": [1341, 1342, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1394], "sphinx": [1341, 1342, 1344, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378], "ial": 1342, "095636": [1342, 1385], "sonde_fil": 1342, "sgpinterpolatedsondec1": 1342, "c1": [1342, 1388], "20110510": 1342, "000000": 1342, "cdf": 1342, "read_arm_sonde_vap": 1342, "exclude_transit": [1342, 1351, 1352, 1356, 1375], "exclude_invalid": 1342, "exclude_outsid": 1342, "80": [1342, 1370, 1375], "dealias_data": 1342, "dealias_region_bas": [1342, 1385, 1391], "corrected_veloc": [1342, 1378, 1385, 1388, 1391], "sixth": 1342, "221": [1342, 1359, 1391], "223": [1342, 1359, 1391], "ax4": 1342, "224": [1342, 1359, 1391], "19": [1342, 1343, 1378, 1391, 1393, 1394], "145": [1342, 1343, 1374, 1394], "plot_dealia": [1342, 1343, 1394], "mem": [1343, 1348, 1353, 1372, 1379, 1380, 1394], "mb": [1343, 1348, 1353, 1372, 1379, 1380, 1394], "000": [1343, 1380, 1394], "varieti": [1344, 1345, 1396], "aw": [1344, 1345, 1347, 1348, 1394], "gatemapp": [1344, 1349, 1353, 1394], "panel": [1344, 1354, 1372, 1394], "examples_python": 1344, "examples_jupyt": 1344, "next": 1346, "quick": 1346, "grover": [1346, 1350, 1355, 1356, 1361, 1369, 1374, 1375], "mgrover": [1346, 1350, 1355, 1356, 1361, 1369, 1374, 1375], "ccr": [1346, 1347, 1350, 1356, 1357, 1363, 1370, 1374, 1376, 1384, 1385, 1388, 1391, 1392], "let": [1346, 1347, 1350, 1355, 1357, 1374, 1376, 1383, 1385, 1387, 1388, 1391, 1392, 1393, 1396, 1398], "administr": 1346, "our": [1346, 1347, 1350, 1355, 1356, 1374, 1376, 1389, 1392], "filepath": [1346, 1347], "level2": [1346, 1347, 1358, 1376], "bucket": 1346, "organ": 1346, "year": [1346, 1347, 1396], "month": [1346, 1347], "radarsit": [1346, 1347], "_v06": 1346, "houston": 1346, "texa": 1346, "khgx": 1346, "march": 1346, "1201": 1346, "utc": [1346, 1347, 1369], "aws_nexrad_level2_fil": [1346, 1347], "03": [1346, 1372, 1379, 1394], "khgx20220322_120125_v06": 1346, "read_nexrad_arch": [1346, 1347, 1358, 1359, 1360, 1376], "summari": 1346, "spectrum_width": [1346, 1388, 1390, 1393], "cross_correlation_ratio": [1346, 1358, 1359, 1376, 1388, 1393], "differential_phas": [1346, 1359, 1388, 1393], "radarmapdisplai": [1346, 1347, 1350, 1357, 1363, 1374, 1383, 1384, 1385, 1387, 1388, 1392], "subplot": [1346, 1350, 1355, 1356, 1357, 1369, 1374, 1375, 1376, 1377, 1378, 1385, 1391, 1392], "121": [1346, 1350, 1356, 1375], "plot_ppi_map": [1346, 1347, 1350, 1357, 1363, 1374, 1384, 1385, 1388, 1392], "relect": 1346, "z_": [1346, 1350, 1357], "v_": 1346, "70": [1346, 1350, 1356], "n0u": 1346, "noq": 1346, "level3": 1346, "aws_nexrad_level3_velocity_fil": 1346, "hgx_n0u_2022_03_22_12_01_25": 1346, "aws_nexrad_level3_reflectivity_fil": 1346, "hgx_n0q_2022_03_22_12_01_25": 1346, "read_nexrad_level3": 1346, "radar_level3_veloc": 1346, "radar_level3_reflect": 1346, "confirm": [1346, 1383], "setup": [1346, 1350, 1355, 1356, 1361, 1374, 1381, 1395], "reflectivity_displai": 1346, "velocity_displai": 1346, "440": [1346, 1348, 1394], "plot_nexrad_data_aw": [1346, 1348, 1394], "zachari": 1347, "sherman": 1347, "zsherman": [1347, 1398], "tendenc": 1347, "usual": [1347, 1396], "gz": 1347, "handford": 1347, "ca": 1347, "khnx": 1347, "juli": [1347, 1391], "0203": 1347, "v06": 1347, "khnx20060724_020338": 1347, "pyrad": [1347, 1381, 1390, 1391, 1392, 1396], "nexrad_arch": 1347, "231": 1347, "14": [1347, 1348, 1355, 1356, 1357, 1372, 1391, 1393, 1394], "now": [1347, 1350, 1355, 1357, 1374, 1376, 1383, 1385, 1391, 1392, 1395], "clearli": [1347, 1391, 1392], "lucki": 1347, "31417": 1347, "119": [1347, 1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "63111": 1347, "plote": [1347, 1363], "central_latitud": [1347, 1363, 1376, 1384], "central_longitud": [1347, 1363, 1376, 1384], "plot_older_nexrad_data_aw": [1347, 1348, 1394], "37": [1348, 1350, 1374, 1388, 1390, 1391], "439": 1348, "bobbi": 1350, "jackson": 1350, "rjackson": 1350, "filterwarn": 1350, "xsapr": [1350, 1352, 1356], "xsapr_sw_fil": [1350, 1352, 1356], "swx_20120520_0641": [1350, 1352, 1355, 1356, 1357, 1361, 1371, 1374, 1375, 1376], "xsapr_se_fil": [1350, 1352, 1356], "sex_20120520_0641": [1350, 1352, 1356], "radar_sw": [1350, 1352, 1356], "radar_s": [1350, 1352, 1356], "southwestern": 1350, "southeastern": 1350, "gmapper": 1350, "radar_sw_mapped_to_radar_s": 1350, "notic": [1350, 1357], "disp1": 1350, "98": [1350, 1374, 1378, 1388, 1391], "arang": [1350, 1363, 1366, 1367, 1374, 1377, 1378, 1390, 1391, 1392, 1396], "96": [1350, 1388], "disp2": 1350, "remap": [1350, 1390], "difficult": 1350, "eyebal": 1350, "fortun": 1350, "mind": [1350, 1396], "cours": [1350, 1396], "reflectivity_se_radar": 1350, "reflectivity_sw_radar": 1350, "reflectivity_differ": 1350, "add_field_lik": 1350, "reflectivity_bia": 1350, "111": [1350, 1351, 1352, 1357, 1360, 1361, 1362, 1366, 1367, 1368, 1374], "pyart_bal": [1350, 1369, 1385], "southwest": 1350, "xspar": 1350, "southeast": 1350, "neccessarili": 1350, "incl_gat": 1350, "argwher": 1350, "refl_s": 1350, "refl_sw": 1350, "values_without_mask": 1350, "logical_and": 1350, "flatten": 1350, "hist": [1350, 1385], "histogram2d": 1350, "masked_wher": [1350, 1388], "meshgrid": [1350, 1389], "pyart_homeyerrainbow": [1350, 1355, 1356, 1357, 1362, 1365, 1369, 1370, 1375], "log_": 1350, "xlabel": [1350, 1364, 1365, 1385, 1389], "ylabel": [1350, 1364, 1365, 1385, 1389], "090": [1350, 1353, 1394], "plot_compare_two_radars_gatemapp": [1350, 1353, 1394], "110635": [1351, 1362, 1387], "241": 1351, "123000": 1351, "796": [1351, 1353, 1394], "plot_map_one_radar_to_grid": [1351, 1353, 1394], "xsarp": [1352, 1364, 1365], "gatefilter_s": [1352, 1356], "exclude_abov": [1352, 1356, 1385], "gatefilter_sw": [1352, 1356], "201": [1352, 1376, 1387], "57861": [1352, 1356], "363611": [1352, 1356], "48": 1352, "729": [1352, 1353, 1394], "plot_map_two_radars_to_grid": [1352, 1353, 1394], "615": 1353, "visual": [1355, 1358, 1366, 1374, 1392], "linspac": [1355, 1358, 1376, 1383, 1396], "256": [1355, 1377, 1390, 1392], "vstack": 1355, "def": [1355, 1396], "plot_color_gradi": 1355, "cmap_categori": 1355, "cmap_list": 1355, "len": [1355, 1369, 1377, 1383, 1390, 1392], "figh": 1355, "subplots_adjust": [1355, 1364, 1365], "set_titl": [1355, 1376], "cmap_nam": 1355, "pyart_": 1355, "va": 1355, "transax": 1355, "spine": 1355, "set_axis_off": 1355, "colorblind": 1355, "friendli": 1355, "langrainbow12": 1355, "balanc": 1355, "chasespectr": [1355, 1389], "spectralextend": 1355, "perceptu": [1355, 1358], "light": [1355, 1377, 1392], "bu10": 1355, "bu7": 1355, "gray5": 1355, "gray9": 1355, "diverg": 1355, "meaning": 1355, "bluebrown11": 1355, "brbu10": 1355, "brbu12": 1355, "budor12": 1355, "budor18": 1355, "budrd12": 1355, "budrd18": 1355, "bugr14": 1355, "bugy8": 1355, "buor10": 1355, "buor12": 1355, "buor8": 1355, "buorr14": 1355, "grmg16": 1355, "rdylbu11b": 1355, "There": [1355, 1392, 1395, 1398], "bluebrown10": 1355, "nwsref": 1355, "carbone11": 1355, "carbone17": 1355, "carbone42": 1355, "cat12": 1355, "ewilson17": 1355, "nwsvel": 1355, "nws_spw": 1355, "pd17": 1355, "rrate11": 1355, "refdiff": 1355, "scook18": 1355, "stepseq25": 1355, "symgray12": 1355, "theodore16": 1355, "wild25": 1355, "spectral_r": 1355, "rememb": 1355, "front": [1355, 1391], "shown": 1355, "032": [1355, 1372, 1394], "plot_choose_a_colormap": [1355, 1372, 1394], "181": 1356, "plot_grid": [1356, 1370, 1376, 1387, 1391], "scatter": [1356, 1374], "tab": 1356, "blue": [1356, 1366, 1367, 1392], "black": [1356, 1374], "legend": 1356, "plot_cross_sect": [1356, 1372, 1394], "725": [1356, 1372, 1394], "joe": 1357, "brien": 1357, "obrienj": 1357, "perfect": 1357, "overlap": [1357, 1366], "coord": 1357, "gridlin": 1357, "gl": 1357, "draw_label": 1357, "grai": [1357, 1358, 1390, 1392], "gca": 1357, "set_major_loc": 1357, "nullloc": 1357, "top_label": 1357, "right_label": 1357, "xlabel_styl": 1357, "ylabel_styl": 1357, "delet": [1357, 1396], "del": 1357, "manipul": [1357, 1382], "axsb": 1357, "ppi_map": 1357, "cbar": 1357, "set_label": 1357, "set_tick": 1357, "446": [1357, 1372, 1394], "plot_modify_colorbar": [1357, 1372, 1394], "reduc": [1358, 1395], "promin": 1358, "deemphas": 1358, "depict": 1358, "ultim": [1358, 1392], "misinterpret": 1358, "lmtomkin": [1358, 1376], "ncsu": [1358, 1376], "citat": 1358, "mcolor": [1358, 1376], "nexrad_fil": [1358, 1376], "kbgm": 1358, "kbgm20200207_132642_v06": 1358, "image_mute_radar": [1358, 1376], "magma_cmap": 1358, "get_cmap": [1358, 1376], "magma_r": [1358, 1376], "grays_cmap": 1358, "gray_r": 1358, "nonmuted_cmap": 1358, "linearsegmentedcolormap": [1358, 1376], "from_list": [1358, 1376], "muted_cmap": 1358, "nonmuted_reflect": [1358, 1376], "muted_reflect": 1358, "300": [1358, 1359, 1383], "set_aspect": [1358, 1376, 1377, 1391, 1392], "226": [1358, 1372, 1394], "plot_nexrad_image_muted_reflect": [1358, 1372, 1394], "katx20130717_195021_v06": [1359, 1393], "plot_nexrad_multiple_mo": [1359, 1372, 1394], "level2_katx_20130717_1950": 1360, "ar2v": 1360, "super": [1360, 1384, 1387, 1391], "plot_range_r": [1360, 1361, 1363], "538": [1360, 1372, 1394], "plot_nexrad_reflect": [1360, 1372, 1394], "main": [1361, 1396], "plot_cross_hair": 1361, "984": [1361, 1372, 1394], "plot_ppi_cfradi": [1361, 1372, 1394], "150": [1362, 1370, 1372, 1385, 1394], "377": [1362, 1372, 1394], "plot_ppi_mdv": [1362, 1372, 1394], "jason": [1363, 1370], "hemeding": [1363, 1370], "nsaxsaprppic1": 1363, "a1": 1363, "20140201": 1363, "184802": 1363, "157": 1363, "156": 1363, "71": 1363, "158": 1363, "154": 1363, "69": [1363, 1391], "72": 1363, "40km": 1363, "plot_line_xi": 1363, "plot_point": 1363, "384": [1363, 1372, 1394], "plot_ppi_with_r": [1363, 1372, 1394], "sgpxsaprrhicmaci5": [1364, 1365, 1369], "20110524": [1364, 1365, 1369], "015604_nc4": [1364, 1365, 1369], "instrument_nam": [1364, 1365, 1393], "hspace": [1364, 1365], "agl": 1364, "fac": 1364, "nplot": [1364, 1365, 1369], "snum": 1364, "hsrhi": [1364, 1365], "3f": [1364, 1365], "time_start": 1364, "num2dat": 1364, "only_use_cftime_datetim": 1364, "only_use_python_datetim": 1364, "figure_titl": 1364, "isoformat": 1364, "506": [1364, 1372, 1394], "plot_rhi_cfradi": [1364, 1372, 1394], "166": [1365, 1372, 1394], "plot_rhi_cfradial_singlescan": [1365, 1372, 1394], "differnenti": 1366, "cori": [1366, 1367], "weber": [1366, 1367], "cweber": [1366, 1367], "220629": 1366, "white": 1366, "matplolib": 1366, "visabl": 1366, "border": [1366, 1392], "flow": [1366, 1390], "paramt": 1366, "compens": 1366, "nearli": 1366, "00015": 1366, "veri": [1366, 1376, 1391, 1392], "antialias": [1366, 1367], "moir": 1366, "get_start": [1366, 1367], "get_end": [1366, 1367], "blur": 1366, "nice": [1366, 1395], "arbirarli": 1366, "impact": 1366, "gaussian_filt": [1366, 1367], "levels_rain": 1366, "levels_ic": 1366, "contours_ic": 1366, "contours_rain": 1366, "red": [1366, 1367], "fmt": [1366, 1367], "0000": [1366, 1367], "clabel": [1366, 1367], "inlin": [1366, 1367, 1390], "plot_rhi_contours_differential_reflect": [1366, 1372, 1394], "spyi": 1367, "034142": 1367, "ramp": 1367, "blob": 1367, "pyart_budrd18": 1367, "comment": [1367, 1393], "coutour": 1367, "solid": 1367, "major": [1367, 1391], "axhlin": 1367, "dash": 1367, "axvlin": 1367, "00b4ff": 1367, "ff6800": 1367, "set_ylabel": [1367, 1378, 1391], "cp": 1367, "627": [1367, 1372, 1394], "plot_rhi_data_overlai": [1367, 1372, 1394], "110041": 1368, "299": [1368, 1372, 1394], "plot_rhi_mdv": [1368, 1372, 1394], "fields_to_plot": 1369, "plot_num": 1369, "grab": 1369, "u00b0": 1369, "205": [1369, 1372, 1394], "plot_rhi_two_panel": [1369, 1372, 1394], "20110520100000_nexrad_grid": 1370, "read_grid": 1370, "map_panel_ax": 1370, "x_cut_panel_ax": 1370, "y_cut_panel_ax": 1370, "add_ax": [1370, 1391], "plot_crosshair": 1370, "plot_longitude_slic": 1370, "set_ylim": [1370, 1377, 1391, 1392], "set_xlim": [1370, 1377, 1391, 1392], "plot_latitude_slic": [1370, 1387, 1391], "plot_three_panel_gridmapdisplai": [1370, 1372, 1394], "225": 1371, "270": [1371, 1391, 1396], "xsect": 1371, "cross_section_ppi": [1371, 1391], "211": 1371, "212": 1371, "tight_layout": 1371, "069": [1371, 1372, 1394], "263": 1372, "04": [1372, 1374, 1394], "maxwel": [1374, 1375], "site_lon": 1374, "73": 1374, "site_lat": 1374, "latitdu": 1374, "pathcollect": 1374, "0x2b624b4ec5f0": 1374, "columnsect": 1374, "get_field_loc": 1374, "2kb": 1374, "176b": 1374, "351": 1374, "818e": 1374, "88": 1374, "recalculated_diff_phas": [1374, 1383], "555": 1374, "2778": 1374, "unf_dp_phase_shift": [1374, 1383], "88b": 1374, "688": 1374, "144": 1374, "diff_reflect": [1374, 1383], "95": [1374, 1393], "datetime64": 1374, "8b": 1374, "20t06": 1374, "distance_from_radar": 1374, "233": 1374, "545": 1374, "latitude_of_loc": 1374, "longitude_of_loc": 1374, "line2d": 1374, "0x2b624b47f920": 1374, "215": [1374, 1379, 1394], "plot_column_subset": [1374, 1379, 1394], "compz": 1375, "composite_reflect": 1375, "composite_displai": 1375, "891": [1375, 1379, 1394], "plot_composite_reflect": [1375, 1379, 1394], "classifc": 1376, "summer": 1376, "ian": 1376, "footprint": 1376, "yield": 1376, "smoother": 1376, "rescal": 1376, "simpli": [1376, 1385, 1387, 1395, 1396, 1398], "plot_convstrat_schem": 1376, "pick": 1376, "radii": 1376, "dilat": 1376, "event": [1376, 1391, 1392], "extract_sweep": [1376, 1378], "convsf_mask": 1376, "masked_equ": 1376, "convsf": 1376, "magma_r_cmap": 1376, "ref_cmap": 1376, "albersequalarea": 1376, "convsf_und": 1376, "convsf_ov": 1376, "uncertainti": 1376, "underest": 1376, "overest": 1376, "09": 1376, "ktbw": 1376, "ktbw20220928_190142_v06": 1376, "rasumussen": 1376, "reflecit": 1376, "kokx": 1376, "kokx20210207_161413_v06": 1376, "nonmuted_ref": 1376, "masked_invalid": 1376, "nonmuted_ref_linear": 1376, "mm6": 1376, "m3": 1376, "snow_rat": 1376, "57": 1376, "67": 1376, "snow_rate_dict": 1376, "standard_nam": [1376, 1384, 1393], "hr": 1376, "40500": 1376, "purpos": 1376, "034": 1376, "ccotd": 1376, "rasmussen": 1376, "dixon": 1376, "vasiloff": 1376, "hage": 1376, "knight": 1376, "vivekanandan": 1376, "xu": 1376, "nowcast": 1376, "042": 1376, "3c0020": 1376, "snuart": 1376, "257": [1376, 1379, 1394], "plot_convective_stratiform": [1376, 1379, 1394], "daniel": [1377, 1378], "mpl": [1377, 1384, 1387, 1390, 1391, 1392], "open_radar_data": [1377, 1378], "fetch": [1377, 1378, 1396], "mll2217907250u": [1377, 1390], "003": [1377, 1392], "preinterpol": 1377, "20220628072500_savevol_cosmo_lookup_temp": 1377, "nwp_temp": 1377, "calculate_attenuation_zphi": [1377, 1392], "uncorrected_differential_phas": [1377, 1390, 1392], "pia": [1377, 1392], "pida": [1377, 1392], "corrected_reflect": [1377, 1388, 1392], "corrected_differential_reflect": [1377, 1388, 1392], "kdp_maesaka": [1377, 1392], "specific_differential_phas": [1377, 1388, 1392], "hydroclass_semisupervis": [1377, 1392], "uncorrected_cross_correlation_ratio": [1377, 1390, 1392], "radar_echo_classif": [1377, 1392], "boundarynorm": [1377, 1390, 1392], "crystal": [1377, 1392], "rime": [1377, 1392], "particl": [1377, 1392], "hail": [1377, 1392], "graupel": [1377, 1392], "841": [1377, 1379, 1394], "plot_hydrometeor": [1377, 1379, 1394], "2919": 1378, "4178130067885": 1378, "10761547461152": 1378, "5509": 1378, "768666450866": 1378, "7536260737106204": 1378, "8052": 1378, "019321078435": 1378, "342043600045145": 1378, "10640": 1378, "04439644888": 1378, "977913962677121": 1378, "14495": 1378, "494732164778": 1378, "906225782819092": 1378, "18768": 1378, "789393587038": 1378, "262494841590524": 1378, "23035": 1378, "24401461892": 1378, "614115744829178": 1378, "27293": 1378, "5715815695": 1378, "95976355858147": 1378, "31542": 1378, "48958020564": 1378, "298115176148713": 1378, "35780": 1378, "72036395222": 1378, "627849710173905": 1378, "40006": 1378, "99151830096": 1378, "94764890149236": 1378, "44220": 1378, "03622135054": 1378, "25619751494378": 1378, "50489": 1378, "064549734816": 1378, "67152879666537": 1378, "58843": 1378, "38833568245": 1378, "228615786880255": 1378, "71218": 1378, "4286093181": 1378, "68": 1378, "92037126235664": 1378, "87323": 1378, "4833560437": 1378, "46686871536076": 1378, "106930": 1378, "95716868155": 1378, "65646427776664": 1378, "125649": 1378, "4902487807": 1378, "97650004737079": 1378, "143446": 1378, "80052956566": 1378, "143": [1378, 1391], "38717443030328": 1378, "160134": 1378, "12803849299": 1378, "68632691167295": 1378, "mla2119412050u": 1378, "zlevel": [1378, 1391], "u_allsweep": 1378, "v_allsweep": 1378, "idx": 1378, "radar_1sweep": 1378, "vad_brown": [1378, 1391], "u_avg": 1378, "nanmean": [1378, 1391], "v_avg": 1378, "rad2deg": [1378, 1391], "sharei": [1378, 1391, 1392], "set_xlabel": [1378, 1391], "406": [1378, 1379, 1394], "plot_vad": [1378, 1379, 1394], "609": 1379, "08": [1379, 1394], "cookbook": [1381, 1397], "depth": [1381, 1393, 1396], "conceptu": 1381, "projectpythia": 1381, "understand": 1381, "search": [1381, 1395], "api": 1381, "demonstr": 1381, "toolkit": [1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393], "basi": 1381, "exploit": 1381, "prefer": [1381, 1395], "submodul": [1381, 1387], "superproject": 1381, "propos": 1381, "bleed": 1381, "among": 1381, "europ": 1381, "fmi": 1381, "windcub": 1381, "leospher": 1381, "research": [1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "facil": [1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "colli": [1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "languag": [1381, 1396], "e25": [1381, 1396], "5334": [1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "jor": [1381, 1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "lainer": [1381, 1396], "schauweck": [1381, 1396], "framework": [1381, 1396], "abil": [1381, 1398], "ii": [1381, 1393], "sophist": 1381, "tutori": 1381, "erad": 1381, "easiest": [1381, 1396], "latest": [1381, 1396], "januari": 1381, "1st": 1381, "anaconda": [1381, 1395, 1396], "miniconda": [1381, 1396], "environ": [1381, 1389, 1392, 1395, 1397], "yml": [1381, 1398], "Or": 1381, "basic": [1381, 1382, 1384], "pyart_env": [1381, 1384, 1387, 1398], "forg": [1381, 1395, 1396, 1398], "pyart_mch": [1381, 1395, 1396, 1398], "termin": [1381, 1396, 1398], "prompt": [1381, 1396], "wish": 1381, "unreleas": 1381, "clone": [1381, 1395], "git": [1381, 1395, 1396, 1398], "repositori": [1381, 1395, 1396, 1398], "Then": [1381, 1395, 1396], "scientif": [1381, 1396], "linux": [1381, 1396, 1398], "mac": 1381, "charg": 1381, "resourc": [1381, 1395], "lassen": 1381, "radtec": 1381, "rsl_path": [1381, 1395], "usr": 1381, "h5py": 1381, "solver": 1381, "fastest": 1381, "cbc": 1381, "glpk": 1381, "coincbc": [1381, 1395, 1398], "coin_install_dir": [1381, 1395, 1398], "wradlib": 1381, "pytest": [1381, 1395, 1396], "appreci": 1381, "sometim": 1383, "hypothet": 1383, "doesn": 1383, "partli": [1383, 1384, 1385, 1387, 1388, 1390, 1393], "depart": [1383, 1384, 1385, 1387, 1388, 1390, 1393], "energi": [1383, 1384, 1385, 1387, 1388, 1390, 1393], "radiat": [1383, 1384, 1385, 1387, 1388, 1390, 1393, 1396], "offic": [1383, 1384, 1385, 1387, 1388, 1390, 1393], "scienc": [1383, 1384, 1385, 1387, 1388, 1390, 1393], "cite": [1383, 1384, 1385, 1387, 1388, 1390, 1393], "jj": [1383, 1384, 1385, 1387, 1388, 1390, 1393], "sm": [1383, 1384, 1385, 1387, 1388, 1390, 1393], "test_radar": [1383, 1396], "idea": [1383, 1385, 1391, 1392], "dict_kei": [1383, 1388, 1389], "rain_rate_a": [1383, 1388], "time_coverage_start": [1383, 1393], "time_coverage_end": 1383, "volume_numb": 1383, "platform_typ": 1383, "instrument_typ": 1383, "primary_axi": 1383, "667": 1383, "make_empty_ppi_radar": 1383, "59416667": 1383, "As": [1383, 1385, 1387, 1388, 1396], "isn": 1383, "120": [1383, 1392], "240": 1383, "420": 1383, "480": 1383, "540": 1383, "660": 1383, "720": 1383, "780": 1383, "840": 1383, "900": 1383, "960": 1383, "1020": 1383, "1080": 1383, "1140": 1383, "1200": 1383, "1260": 1383, "1320": 1383, "1380": [1383, 1392], "1440": 1383, "1500": 1383, "1560": 1383, "1620": 1383, "1680": 1383, "1740": 1383, "1860": 1383, "1920": 1383, "1980": 1383, "2040": 1383, "2100": 1383, "2160": 1383, "2220": 1383, "2280": 1383, "2340": 1383, "2400": 1383, "2460": 1383, "2520": 1383, "2580": 1383, "2640": [1383, 1392], "2700": 1383, "2760": 1383, "2820": 1383, "2880": 1383, "2940": 1383, "3060": 1383, "3120": 1383, "3180": 1383, "3240": 1383, "3300": 1383, "3360": 1383, "3420": 1383, "3480": 1383, "3540": 1383, "3660": 1383, "3720": 1383, "3780": 1383, "3840": 1383, "3900": 1383, "3960": 1383, "4020": 1383, "4080": 1383, "4140": 1383, "4200": [1383, 1392], "4260": 1383, "4320": 1383, "4380": 1383, "4440": 1383, "4560": 1383, "4620": 1383, "4680": 1383, "4740": 1383, "4800": 1383, "4860": 1383, "4920": 1383, "4980": 1383, "5040": 1383, "5100": 1383, "5160": 1383, "5220": 1383, "5280": 1383, "5340": 1383, "5400": 1383, "5460": 1383, "5520": 1383, "5580": 1383, "5640": 1383, "5700": 1383, "5760": 1383, "5820": 1383, "5880": 1383, "5940": 1383, "6060": 1383, "6120": 1383, "6180": 1383, "6240": 1383, "6300": 1383, "6360": 1383, "6420": 1383, "6480": 1383, "6540": 1383, "6600": 1383, "6660": 1383, "6720": 1383, "6780": 1383, "6840": 1383, "6900": 1383, "6960": 1383, "7020": 1383, "7080": 1383, "7140": 1383, "7200": [1383, 1393], "7260": 1383, "7320": 1383, "7380": 1383, "7440": 1383, "7500": 1383, "7560": 1383, "7620": 1383, "7680": 1383, "7740": 1383, "7800": 1383, "7860": 1383, "7920": 1383, "7980": 1383, "8040": 1383, "8100": 1383, "8160": 1383, "8220": 1383, "8280": 1383, "8340": 1383, "8400": 1383, "8460": 1383, "8520": 1383, "8580": 1383, "8640": 1383, "8700": 1383, "8760": 1383, "8820": 1383, "8880": 1383, "8940": 1383, "9000": [1383, 1387], "9060": 1383, "9120": 1383, "9180": 1383, "9240": 1383, "9300": 1383, "9360": 1383, "9420": 1383, "9480": 1383, "9540": 1383, "9600": 1383, "9660": 1383, "9720": 1383, "9780": 1383, "9840": 1383, "9900": 1383, "9960": 1383, "10020": 1383, "10080": 1383, "10140": 1383, "10200": 1383, "10260": 1383, "10320": 1383, "10380": 1383, "10440": 1383, "10500": 1383, "10560": 1383, "10620": 1383, "10680": 1383, "10740": 1383, "10800": 1383, "10860": 1383, "10920": 1383, "10980": 1383, "11040": 1383, "11100": 1383, "11160": 1383, "11220": 1383, "11280": 1383, "11340": 1383, "11400": 1383, "11460": 1383, "11520": 1383, "11580": 1383, "11640": 1383, "11700": 1383, "11760": 1383, "11820": 1383, "11880": 1383, "11940": 1383, "12060": 1383, "12120": 1383, "12180": 1383, "12240": 1383, "12300": 1383, "12360": 1383, "12420": 1383, "12480": 1383, "12540": 1383, "12600": 1383, "12660": 1383, "12720": 1383, "12780": 1383, "12840": 1383, "12900": 1383, "12960": 1383, "13020": 1383, "13080": 1383, "13140": 1383, "13200": 1383, "13260": 1383, "13320": 1383, "13380": 1383, "13440": 1383, "13500": 1383, "13560": 1383, "13620": 1383, "13680": 1383, "13740": 1383, "13800": 1383, "13860": 1383, "13920": 1383, "13980": 1383, "14040": 1383, "14100": 1383, "14160": 1383, "14220": 1383, "14280": 1383, "14340": 1383, "14400": 1383, "14460": 1383, "14520": 1383, "14580": 1383, "14640": 1383, "14700": 1383, "14760": 1383, "14820": 1383, "14880": 1383, "14940": 1383, "15060": 1383, "15120": 1383, "15180": 1383, "15240": 1383, "15300": 1383, "15360": 1383, "15420": 1383, "15480": 1383, "15540": 1383, "15600": 1383, "15660": 1383, "15720": 1383, "15780": 1383, "15840": 1383, "15900": 1383, "15960": 1383, "16020": 1383, "16080": 1383, "16140": 1383, "16200": 1383, "16260": 1383, "16320": 1383, "16380": 1383, "16440": 1383, "16500": 1383, "16560": 1383, "16620": 1383, "16680": 1383, "16740": 1383, "16800": 1383, "16860": 1383, "16920": 1383, "16980": 1383, "17040": 1383, "17100": 1383, "17160": 1383, "17220": 1383, "17280": 1383, "17340": 1383, "17400": 1383, "17460": 1383, "17520": 1383, "17580": 1383, "17640": 1383, "17700": 1383, "17760": 1383, "17820": 1383, "17880": 1383, "17940": 1383, "18000": [1383, 1387], "18060": 1383, "18120": 1383, "18180": 1383, "18240": 1383, "18300": 1383, "18360": 1383, "18420": 1383, "18480": 1383, "18540": 1383, "18600": 1383, "18660": 1383, "18720": 1383, "18780": 1383, "18840": 1383, "18900": 1383, "18960": 1383, "19020": 1383, "19080": 1383, "19140": 1383, "19200": 1383, "19260": 1383, "19320": 1383, "19380": 1383, "19440": 1383, "19500": 1383, "19560": 1383, "19620": 1383, "19680": 1383, "19740": 1383, "19800": 1383, "19860": 1383, "19920": 1383, "19980": 1383, "20040": 1383, "20100": 1383, "20160": 1383, "20220": 1383, "20280": 1383, "20340": 1383, "20400": 1383, "20460": 1383, "20520": 1383, "20580": 1383, "20640": 1383, "20700": 1383, "20760": 1383, "20820": 1383, "20880": 1383, "20940": 1383, "21000": [1383, 1387], "21060": 1383, "21120": 1383, "21180": 1383, "21240": 1383, "21300": 1383, "21360": 1383, "21420": 1383, "21480": 1383, "21540": 1383, "21600": 1383, "21660": 1383, "21720": 1383, "21780": 1383, "21840": 1383, "21900": 1383, "21960": 1383, "22020": 1383, "22080": 1383, "22140": 1383, "22200": 1383, "22260": 1383, "22320": 1383, "22380": 1383, "22440": 1383, "22500": 1383, "22560": 1383, "22620": 1383, "22680": 1383, "22740": 1383, "22800": [1383, 1391], "22860": 1383, "22920": 1383, "22980": 1383, "23040": 1383, "23100": 1383, "23160": 1383, "23220": 1383, "23280": 1383, "23340": 1383, "23400": 1383, "23460": 1383, "23520": 1383, "23580": 1383, "23640": 1383, "23700": 1383, "23760": 1383, "23820": 1383, "23880": 1383, "23940": 1383, "24000": [1383, 1387], "24060": 1383, "24120": 1383, "24180": 1383, "24240": 1383, "24300": 1383, "24360": 1383, "24420": 1383, "24480": 1383, "24540": 1383, "24600": 1383, "24660": 1383, "24720": 1383, "24780": 1383, "24840": 1383, "24900": 1383, "24960": 1383, "25020": 1383, "25080": 1383, "25140": 1383, "25200": 1383, "25260": 1383, "25320": 1383, "25380": 1383, "25440": 1383, "25500": 1383, "25560": 1383, "25620": 1383, "25680": 1383, "25740": 1383, "25800": 1383, "25860": 1383, "25920": 1383, "25980": 1383, "26040": 1383, "26100": 1383, "26160": 1383, "26220": 1383, "26280": 1383, "26340": 1383, "26400": 1383, "26460": 1383, "26520": 1383, "26580": 1383, "26640": 1383, "26700": 1383, "26760": 1383, "26820": 1383, "26880": 1383, "26940": 1383, "27000": [1383, 1387], "27060": [1383, 1391], "27120": 1383, "27180": 1383, "27240": 1383, "27300": 1383, "27360": 1383, "27420": 1383, "27480": 1383, "27540": 1383, "27600": 1383, "27660": 1383, "27720": 1383, "27780": 1383, "27840": 1383, "27900": 1383, "27960": 1383, "28020": 1383, "28080": 1383, "28140": 1383, "28200": 1383, "28260": 1383, "28320": 1383, "28380": 1383, "28440": 1383, "28500": 1383, "28560": 1383, "28620": 1383, "28680": 1383, "28740": 1383, "28800": 1383, "28860": 1383, "28920": 1383, "28980": 1383, "29040": 1383, "29100": 1383, "29160": 1383, "29220": 1383, "29280": 1383, "29340": 1383, "29400": 1383, "29460": 1383, "29520": 1383, "29580": 1383, "29640": 1383, "29700": 1383, "29760": 1383, "29820": 1383, "29880": 1383, "29940": 1383, "30000": [1383, 1387], "30060": 1383, "30120": 1383, "30180": 1383, "30240": 1383, "30300": 1383, "30360": 1383, "30420": 1383, "30480": 1383, "30540": 1383, "30600": 1383, "30660": 1383, "30720": 1383, "30780": 1383, "30840": 1383, "30900": 1383, "30960": 1383, "31020": 1383, "31080": 1383, "31140": 1383, "31200": 1383, "31260": 1383, "31320": 1383, "31380": 1383, "31440": 1383, "31500": 1383, "31560": 1383, "31620": 1383, "31680": 1383, "31740": 1383, "31800": 1383, "31860": 1383, "31920": 1383, "31980": 1383, "32040": 1383, "32100": 1383, "32160": 1383, "32220": 1383, "32280": 1383, "32340": 1383, "32400": 1383, "32460": 1383, "32520": 1383, "32580": 1383, "32640": 1383, "32700": 1383, "32760": 1383, "32820": 1383, "32880": 1383, "32940": 1383, "33000": [1383, 1387], "33060": 1383, "33120": 1383, "33180": 1383, "33240": 1383, "33300": 1383, "33360": 1383, "33420": 1383, "33480": 1383, "33540": 1383, "33600": 1383, "33660": 1383, "33720": 1383, "33780": 1383, "33840": 1383, "33900": 1383, "33960": 1383, "34020": 1383, "34080": 1383, "34140": 1383, "34200": 1383, "34260": 1383, "34320": 1383, "34380": 1383, "34440": 1383, "34500": 1383, "34560": 1383, "34620": 1383, "34680": 1383, "34740": 1383, "34800": 1383, "34860": 1383, "34920": 1383, "34980": 1383, "35040": 1383, "35100": 1383, "35160": 1383, "35220": 1383, "35280": 1383, "35340": 1383, "35400": 1383, "35460": 1383, "35520": 1383, "35580": 1383, "35640": 1383, "35700": 1383, "35760": 1383, "35820": 1383, "35880": 1383, "35940": 1383, "36000": [1383, 1387], "36060": 1383, "36120": 1383, "36180": 1383, "36240": 1383, "36300": 1383, "36360": 1383, "36420": 1383, "36480": 1383, "36540": 1383, "36600": 1383, "36660": 1383, "36720": 1383, "36780": 1383, "36840": 1383, "36900": 1383, "36960": 1383, "37020": 1383, "37080": 1383, "37140": 1383, "37200": 1383, "37260": 1383, "37320": 1383, "37380": 1383, "37440": 1383, "37500": 1383, "37560": 1383, "37620": 1383, "37680": 1383, "37740": 1383, "37800": 1383, "37860": 1383, "37920": 1383, "37980": 1383, "38040": 1383, "38100": 1383, "38160": 1383, "38220": 1383, "38280": 1383, "38340": 1383, "38400": 1383, "38460": 1383, "38520": 1383, "38580": 1383, "38640": 1383, "38700": 1383, "38760": 1383, "38820": 1383, "38880": 1383, "38940": 1383, "39000": [1383, 1387], "39060": 1383, "39120": 1383, "39180": 1383, "39240": 1383, "39300": 1383, "39360": 1383, "39420": 1383, "39480": 1383, "39540": 1383, "39600": 1383, "39660": 1383, "39720": 1383, "39780": 1383, "39840": 1383, "39900": 1383, "39960": 1383, "squeez": 1383, "59416776": 1383, "59416886": 1383, "59489769": 1383, "59489879": 1383, "5948999": 1383, "59415662": 1383, "59414657": 1383, "5874659": 1383, "58745576": 1383, "58744563": 1383, "59414621": 1383, "59412575": 1383, "5805231": 1383, "58050246": 1383, "58048182": 1383, "59419881": 1383, "59423095": 1383, "61560159": 1383, "61563401": 1383, "61566644": 1383, "59418877": 1383, "59421087": 1383, "6089062": 1383, "6089285": 1383, "60895079": 1383, "59417836": 1383, "59419005": 1383, "60196382": 1383, "60197561": 1383, "60198741": 1383, "get_metadata": 1383, "ref_dict": 1383, "reflecitivity_horizont": 1383, "21875": 1383, "34375": 1383, "0078125": 1383, "2109375": 1383, "1171875": 1383, "59375": 1383, "421875": 1383, "5625": 1383, "7109375": 1383, "609375": 1383, "5078125": 1383, "3828125": 1383, "6875": 1383, "328125": 1383, "3203125": 1383, "859375": 1383, "6484375": 1383, "8515625": 1383, "9375": [1383, 1393], "0234375": 1383, "6328125": 1383, "2890625": 1383, "546875": 1383, "578125": 1383, "6796875": 1383, "ref_field": 1384, "ref_gt_0": 1384, "mask_dict": 1384, "reflectivity_mask": 1384, "coolwarm": 1384, "sherm": [1384, 1387], "782": [1384, 1387], "matplotlibdeprecationwarn": [1384, 1387, 1391], "set_xtick": [1384, 1387], "position": [1384, 1387], "later": [1384, 1387, 1391, 1392], "xtick": [1384, 1387], "829": [1384, 1387], "set_ytick": [1384, 1387], "ytick": [1384, 1387], "write_cfradi": 1384, "2pi": 1385, "wave": 1385, "3pi": 1385, "incorrect": 1385, "phenomena": [1385, 1393], "maximium": 1385, "unambi": 1385, "preprocess": 1385, "thankfulli": [1385, 1387], "calculate_velocity_textur": 1385, "surround": [1385, 1387, 1391, 1392], "presenc": [1385, 1391, 1392], "524973": 1385, "vel_textur": 1385, "velocity_textur": [1385, 1388], "vleociti": 1385, "At": [1385, 1391], "velocity_dealias": 1385, "much": [1385, 1387, 1388, 1391, 1392], "realist": 1385, "gates_to_grid": 1387, "deprecationwarn": [1387, 1390], "99000": 1387, "98000": 1387, "97000": 1387, "96000": 1387, "95000": 1387, "94000": 1387, "93000": 1387, "92000": 1387, "91000": 1387, "90000": 1387, "89000": 1387, "88000": 1387, "87000": 1387, "86000": 1387, "85000": 1387, "84000": 1387, "83000": 1387, "82000": 1387, "81000": 1387, "80000": 1387, "79000": 1387, "78000": 1387, "77000": 1387, "76000": 1387, "75000": 1387, "74000": 1387, "73000": 1387, "72000": 1387, "71000": 1387, "70000": 1387, "69000": 1387, "68000": 1387, "67000": 1387, "66000": 1387, "65000": 1387, "64000": 1387, "63000": 1387, "62000": 1387, "61000": 1387, "59000": 1387, "58000": 1387, "57000": 1387, "56000": 1387, "55000": 1387, "54000": 1387, "53000": 1387, "52000": 1387, "51000": 1387, "49000": 1387, "48000": 1387, "47000": 1387, "46000": 1387, "45000": 1387, "44000": 1387, "43000": 1387, "42000": 1387, "41000": 1387, "38000": 1387, "37000": 1387, "35000": 1387, "34000": 1387, "32000": 1387, "31000": 1387, "29000": 1387, "28000": 1387, "26000": 1387, "23000": 1387, "22000": 1387, "19000": 1387, "16000": 1387, "14000": 1387, "13000": 1387, "8000": [1387, 1391], "7000": 1387, "suit": [1387, 1392, 1396], "longitudn": 1387, "latitudn": 1387, "suffer": 1387, "artifici": 1387, "feather": 1387, "grid_bett": 1387, "1750": 1387, "sgpxsaprcmacsuri5": 1388, "20171004": 1388, "203018": 1388, "total_pow": 1388, "xsapr_clutt": 1388, "sounding_temperatur": 1388, "signal_to_noise_ratio": [1388, 1392], "gate_id": 1388, "simulated_veloc": 1388, "unfolded_differential_phas": 1388, "corrected_differential_phas": 1388, "filtered_corrected_differential_phas": 1388, "corrected_specific_diff_phas": 1388, "filtered_corrected_specific_diff_phas": 1388, "path_integrated_attenu": 1388, "specific_differential_attenu": 1388, "path_integrated_differential_attenu": 1388, "trip": 1388, "nonhydrometeor": 1388, "analyz": [1388, 1396], "exclude_equ": 1388, "cleaner": 1388, "tell": 1388, "refl_arrai": 1388, "reflectivity_w_mask": 1388, "iter_slic": [1388, 1393], "9344453454202706": 1388, "620691732853737": 1388, "3756584054113996": 1388, "597935968662154": 1388, "696735014111216": 1388, "061894569912447": 1388, "721673265240488": 1388, "086695918593689": 1388, "33930700509078": 1388, "599363169483158": 1388, "836875745223637": 1388, "051601529570966": 1388, "22435547210836": 1388, "378109469982695": 1388, "553820234067336": 1388, "648943841665002": 1388, "837593740986444": 1388, "049614721040282": 1388, "331202567459613": 1388, "585432697375357": 1388, "87002341270722": 1388, "993012637722325": 1388, "061966001642219": 1388, "122799449619672": 1388, "861035552720102": 1388, "74608994279257": 1388, "148801770281325": 1388, "70860719727862": 1388, "989513966551444": 1388, "188644935344827": 1388, "89301878240611": 1388, "172644371021923": 1388, "79879842243138": 1388, "912806090219976": 1388, "766281467013889": 1388, "920522471877334": 1388, "898600907318164": 1388, "971026055481874": 1388, "110503947133682": 1388, "094456418731509": 1388, "0822160050675675": 1388, "036430544969512": 1388, "259332430219459": 1388, "2438254054588604": 1388, "473482666015625": 1388, "574283685503023": 1388, "866719139946832": 1388, "771468742643597": 1388, "fft": 1389, "wherea": 1389, "raibow": 1389, "read_rainbow_psr_spectra": 1389, "timestamp": 1389, "bit": [1389, 1395], "yourself": 1389, "glob": [1389, 1391, 1396], "cmweather": 1389, "psrlib_path": 1389, "malsplu": 1389, "radarvgit": 1389, "libdx50": 1389, "file_wrl": 1389, "campaign": 1389, "meiringen_2024": 1389, "50dx": 1389, "mei24_vertppi_el90_psr": 1389, "2025060212462800dbz": 1389, "files_psr": 1389, "202506021246": 1389, "ufh": 1389, "rd": 1389, "transmitted_power_h": 1389, "transmitted_power_v": 1389, "spectral_noise_power_hh_adu": 1389, "spectral_noise_power_vv_adu": 1389, "spectral_noise_power_hv_adu": 1389, "spectral_noise_power_vh_adu": 1389, "complex_spectra_hh_adu": 1389, "complex_spectra_vv_adu": 1389, "spectral_pow": 1389, "compute_spectral_pow": 1389, "objet": 1389, "spectral_power_hh_dbm": 1389, "compute_spectral_reflect": 1389, "spectral_refl": 1389, "spectral_reflectivity_hh": 1389, "compute_spectral_phas": 1389, "compute_spectral_differential_phas": 1389, "168": 1389, "vel_bin": 1389, "compute_reflect": 1389, "compute_differential_reflect": 1389, "compute_pol_vari": 1389, "classic": 1389, "xaxis_lim": 1389, "yaxis_lim": 1389, "field_2d": 1389, "vel_bins_rai": 1389, "cm_colorblind": 1389, "compani": 1390, "eld": 1390, "dn": 1390, "lema": [1390, 1392], "data_dir": 1390, "scratch": [1390, 1398], "pyrad_cours": 1390, "mch_jan_2024": 1390, "010": 1390, "read_metranet": 1390, "rainforest_test": [1390, 1391, 1392], "tqdm": 1390, "tqdmwarn": 1390, "iprogress": 1390, "ipywidget": 1390, "readthedoc": [1390, 1396], "stabl": 1390, "user_instal": 1390, "autonotebook": 1390, "notebook_tqdm": 1390, "fieldnam": 1390, "mch": 1390, "zv": 1390, "reflectivity_vv": 1390, "wid": 1390, "clt": 1390, "clutter_exit_cod": 1390, "stat_test_lag1": 1390, "stat_test_lag2": 1390, "wbn": 1390, "wide_band_nois": 1390, "mph": 1390, "mean_phas": 1390, "discrimin": 1390, "isnan": 1390, "read_file_c": 1390, "read_file_pi": 1390, "reli": [1390, 1392], "marco": 1390, "boscacci": 1390, "anywher": 1390, "prone": [1390, 1391], "zh_dn": 1390, "mha": 1390, "mhd": 1390, "mhl": 1390, "mhp": 1390, "mhw": 1390, "fashion": 1390, "file_hr": 1390, "mhl2217907250u": [1390, 1392], "ymx": 1390, "dvx": 1390, "yml2217907257l": 1390, "810": 1390, "dealv": 1390, "dvl2217907257l": 1390, "py_decod": 1390, "dbg": 1390, "verb": 1390, "verbl": 1390, "map_hydro": 1390, "io_aux": 1390, "hydro_remap": 1390, "pyart_langrainbow12": 1390, "set_yticklabel": 1390, "welcom": 1390, "pydda": 1390, "jax": 1390, "unabl": 1390, "engin": 1390, "tensorflow": 1390, "pyrad_proc": 1390, "flow_aux": 1390, "bokeh": 1390, "primit": 1390, "bool8": 1390, "bool_": 1390, "bokeh_bool_typ": 1390, "qpe": 1390, "rzc": 1390, "poh": 1390, "bzc": 1390, "mesh": 1390, "mzc": 1390, "read_cartesian_metranet": 1390, "rzc221790725vl": 1390, "63": [1390, 1393], "pyart_rrate11": 1390, "0x2b0d2db45660": 1390, "read_fil": 1390, "read_polar": 1390, "qpe_data_dn": 1390, "qpe_data": 1390, "summar": 1390, "ezc": 1390, "impli": 1390, "unrel": 1390, "unus": 1390, "exercic": [1391, 1392], "topic": [1391, 1392], "tackl": [1391, 1392], "pseudorhi": 1391, "load_config": [1391, 1392], "mch_config": [1391, 1392], "thu": 1391, "too": [1391, 1392], "inde": [1391, 1392], "especi": 1391, "simplest": 1391, "files_radar": 1391, "exercice2_swiss_doppl": 1391, "mll221790725": 1391, "enumer": 1391, "radar_merg": 1391, "sharex": [1391, 1392], "ravel": 1391, "discontinu": 1391, "difficulti": 1391, "isol": [1391, 1392], "ymin": 1391, "xmin": 1391, "ymax": 1391, "xmax": 1391, "cappi_res_h": 1391, "cappi_res_v": 1391, "cappi_zh": 1391, "throught": 1391, "thunderstorm": [1391, 1392], "1785": 1391, "shade": 1391, "quadrilater": 1391, "gouraud": 1391, "rcparam": 1391, "pcolor": 1391, "arg": 1391, "altitudin": 1391, "downdraft": 1391, "wider": 1391, "cold": 1391, "13th": 1391, "albi": 1391, "z\u00fcrich": 1391, "widespread": 1391, "unfortun": 1391, "question_pyart_meteoswiss": 1391, "mla211941205": 1391, "corrected_velocity_neg": 1391, "2682": 1391, "5272": 1391, "7815": 1391, "464": 1391, "runtimewarn": 1391, "mean_velocity_per_g": 1391, "reshap": 1391, "549": 1391, "y_new": 1391, "y_in_window": 1391, "10403": 1391, "14259": 1391, "18533": 1391, "31310": 1391, "35549": 1391, "39777": 1391, "43991": 1391, "50263": 1391, "58621": 1391, "71002": 1391, "87118": 1391, "106740": 1391, "125476": 1391, "143293": 1391, "160000": 1391, "radiosound": 1391, "payern": 1391, "130": 1391, "though": [1391, 1398], "discrep": 1391, "startup": 1392, "cosmo": 1392, "file_radar": 1392, "exercice1_swiss_thunderstorm": 1392, "20220628073500_savevol_cosmo_lookup_temp": 1392, "problemat": 1392, "gtfilter": 1392, "moment_and_texture_based_gate_filt": 1392, "clear": 1392, "mostli": 1392, "behind": 1392, "knowledg": 1392, "insight": 1392, "oblat": 1392, "drop": 1392, "784": 1392, "mont": 1392, "8231": 1392, "2514": 1392, "0644": 1392, "9861": 1392, "0239": 1392, "1971": 1392, "9661": 1392, "1464": 1392, "9447": 1392, "1142": 1392, "9787": 1392, "974": 1392, "2450": 1392, "5540": 1392, "1459": 1392, "9937": 1392, "945": 1392, "9432": 1392, "0110": 1392, "5141": 1392, "9928": 1392, "993": 1392, "5202": 1392, "3498": 1392, "9746": 1392, "843": 1392, "5287": 1392, "9751": 1392, "9804": 1392, "6547": 1392, "7054": 1392, "5101": 1392, "9765": 1392, "1114": 1392, "4998": 1392, "6431": 1392, "9845": 1392, "1010": 1392, "complic": 1392, "few": [1392, 1398], "dai": 1392, "refin": 1392, "est_rain_rate_hydro": 1392, "land": 1392, "lon_bnd": 1392, "lat_bnd": 1392, "states_provinc": 1392, "cultur": 1392, "admin_0_countri": 1392, "facecolor": 1392, "river": 1392, "add_featur": 1392, "287": 1392, "lambert": 1392, "feature_artist": 1392, "featureartist": 1392, "0x2b9150c92f80": 1392, "didn": 1392, "uncertain": 1392, "beam_azimuth_angl": 1393, "azimuth_angle_from_true_north": 1393, "radial_azimuth_coordin": 1393, "beam_elevation_angl": 1393, "elevation_angle_from_horizontal_plan": 1393, "radial_elevation_coordin": 1393, "1832": 1393, "log_differential_reflectivity_hv": 1393, "875": 1393, "9999": 1393, "differential_phase_hv": 1393, "equivalent_reflectivity_factor": 1393, "cross_correlation_ratio_hv": 1393, "correlation_ratio": 1393, "meters_per_second": 1393, "doppler_spectrum_width": 1393, "radial_velocity_of_scatterers_away_from_instru": 1393, "target_fixed_angl": 1393, "unambiguous_rang": 1393, "unambigu": 1393, "degrees_north": 1393, "degrees_east": 1393, "projection_range_coordin": 1393, "range_to_measurement_volum": 1393, "radial_range_coordin": 1393, "spacing_is_const": 1393, "meters_to_center_of_first_g": 1393, "2125": 1393, "meters_between_g": 1393, "int32": 1393, "s20": 1393, "unitless": 1393, "coplan": 1393, "vertical_point": 1393, "idl": 1393, "azimuth_surveil": 1393, "elevation_surveil": 1393, "sunscan": 1393, "manual_ppi": 1393, "manual_rhi": 1393, "17t19": 1393, "21z": 1393, "time_in_seconds_since_volume_start": 1393, "calendar": 1393, "gregorian": 1393, "histori": 1393, "katx": 1393, "original_contain": 1393, "vcp_pattern": 1393, "7470703": 1393, "7196045": 1393, "6893921": 1393, "511719": 1393, "get_slic": 1393, "sweep_1": 1393, "52734375": 1393, "itself": 1393, "indici": 1393, "slice_indic": 1393, "9066728410400056": 1393, "478547577741713": 1393, "587792083929423": 1393, "871031288639269": 1393, "971692217963673": 1393, "830616390843327": 1393, "108188248095756": 1393, "483419908190385": 1393, "88976917057903": 1393, "852766685681688": 1393, "410455582269897": 1393, "66444787446138": 1393, "997862391449566": 1393, "172098402018502": 1393, "489752513534416": 1393, "712565619531706": 1393, "commonli": 1393, "071": 1394, "29": 1394, "8x": 1395, "But": 1395, "bash": 1395, "export": [1395, 1398], "pythonpath": 1395, "pth": 1395, "build_ext": 1395, "pip": [1395, 1396, 1398], "segfault": 1395, "newer": 1395, "Theres": 1395, "reinstal": 1395, "remedi": 1395, "fno": 1395, "protector": 1395, "d_fortify_sourc": 1395, "cflag": 1395, "makefil": 1395, "troubl": 1395, "my": 1395, "define_macro": 1395, "macro": 1395, "extra_compile_arg": 1395, "m32": 1395, "extra_link_arg": 1395, "m64": 1395, "readm": 1395, "proj_lib": 1395, "usernam": 1395, "xxx": 1395, "mpl_toolkit": 1395, "offici": 1396, "mail": 1396, "openradar": 1396, "ev": 1396, "pyart_short_cours": 1396, "youtub": 1396, "watch": 1396, "diip": 1396, "q3bkzw": 1396, "auto_exampl": 1396, "scm": 1396, "book": 1396, "pep8": 1396, "popular": 1396, "pycodestyl": 1396, "pylint": 1396, "pep": 1396, "0008": 1396, "highli": 1396, "tast": 1396, "brief": 1396, "parti": 1396, "explain": 1396, "velocity_azimuth_displai": 1396, "_inverse_dist_squar": 1396, "_average1d": 1396, "explan": 1396, "mention": [1396, 1398], "statement": 1396, "__init__": 1396, "futur": 1396, "ran": 1396, "rerun": 1396, "test_vad": 1396, "make_target_radar": 1396, "ones_lik": 1396, "z_start": 1396, "z_end": 1396, "z_count": 1396, "vad_height": 1396, "vad_spe": 1396, "98665725": 1396, "94020686": 1396, "88107152": 1396, "81939374": 1396, "75851962": 1396, "vad_direct": 1396, "359": 1396, "84659496": 1396, "30240553": 1396, "358": 1396, "58658589": 1396, "357": 1396, "81073051": 1396, "01353486": 1396, "01335138": 1396, "06014712": 1396, "12039762": 1396, "18410404": 1396, "24791911": 1396, "98663937": 1396, "9398407": 1396, "87958641": 1396, "81587601": 1396, "75205693": 1396, "assert_almost_equ": 1396, "pyarg": 1396, "test_cfradi": 1396, "cd": 1396, "contribut": [1396, 1397], "branch": [1396, 1398], "fork": 1396, "cartopy_map": 1396, "push": 1396, "branch_nam": 1396, "checkout": 1396, "task": 1396, "untrack": 1396, "switch": 1396, "acronym": 1396, "maint": 1396, "finish": [1396, 1398], "quotat": 1396, "enter": 1396, "acronymn": 1396, "gitwash": 1396, "development_workflow": 1396, "editor": [1396, 1398], "sty": 1396, "whitespac": 1396, "vim": 1396, "thing": 1396, "ff": 1396, "checker": 1396, "appveyor": 1396, "travisci": 1396, "sit": 1396, "blog_post": 1396, "instruct": 1397, "contributor": 1397, "conflict": 1398, "panda": 1398, "ask": 1398, "exit": 1398, "recent": 1398, "manag": 1398, "deactiv": 1398, "enviro": 1398, "ipython": 1398, "spyder": 1398, "yourusernam": 1398, "youranacondadir": 1398, "machin": 1398, "jjhelmu": 1398, "py3": 1398, "gitter": 1398, "im": 1398}, "objects": {"pyart": [[600, 0, 1, "", "_debug_info"], [601, 1, 0, "-", "aux_io"], [649, 1, 0, "-", "bridge"], [651, 1, 0, "-", "config"], [664, 1, 0, "-", "core"], [746, 1, 0, "-", "correct"], [817, 1, 0, "-", "exceptions"], [818, 1, 0, "-", "filters"], [855, 1, 0, "-", "graph"], [1032, 1, 0, "-", "io"], [1055, 1, 0, "-", "lazydict"], [1079, 1, 0, "-", "map"], [1094, 1, 0, "-", "retrieve"], [1191, 1, 0, "-", "testing"], [1277, 1, 0, "-", "util"]], "pyart.aux_io": [[602, 0, 1, "", "convert_data"], [603, 0, 1, "", "extract_sweeps_skyecho"], [604, 0, 1, "", "get_library"], [605, 0, 1, "", "get_sweep_time_coverage"], [606, 0, 1, "", "read_bin"], [607, 0, 1, "", "read_bin_mf"], [608, 0, 1, "", "read_cartesian_metranet"], [609, 0, 1, "", "read_cf1"], [610, 0, 1, "", "read_cf1_cartesian"], [611, 0, 1, "", "read_cf1_cartesian_mf"], [612, 0, 1, "", "read_d3r_gcpex_nc"], [613, 0, 1, "", "read_dat_mf"], [614, 0, 1, "", "read_edge_netcdf"], [615, 0, 1, "", "read_file_c"], [616, 0, 1, "", "read_file_py"], [617, 0, 1, "", "read_gamic"], [618, 0, 1, "", "read_gif"], [619, 0, 1, "", "read_grib"], [620, 0, 1, "", "read_hpl"], [621, 0, 1, "", "read_iq"], [622, 0, 1, "", "read_kazr"], [623, 0, 1, "", "read_knmi_grid_h5"], [624, 0, 1, "", "read_mch_vad"], [625, 0, 1, "", "read_metranet"], [626, 0, 1, "", "read_noxp_iphex_nc"], [627, 0, 1, "", "read_odim_grid_h5"], [628, 0, 1, "", "read_odim_h5"], [629, 0, 1, "", "read_odim_vp_h5"], [630, 0, 1, "", "read_pattern"], [631, 0, 1, "", "read_png"], [632, 0, 1, "", "read_product_c"], [633, 0, 1, "", "read_product_py"], [634, 0, 1, "", "read_psr_cpi_header"], [635, 0, 1, "", "read_psr_header"], [636, 0, 1, "", "read_psr_spectra"], [637, 0, 1, "", "read_radx"], [638, 0, 1, "", "read_rainbow_psr"], [639, 0, 1, "", "read_rainbow_psr_spectra"], [640, 0, 1, "", "read_rainbow_wrl"], [641, 0, 1, "", "read_sinarame_h5"], [642, 0, 1, "", "read_skyecho"], [643, 0, 1, "", "read_spectra"], [644, 0, 1, "", "read_swissbirdradar_spectra"], [645, 0, 1, "", "write_odim_grid_h5"], [646, 0, 1, "", "write_odim_h5"], [647, 0, 1, "", "write_sinarame_cfradial"], [648, 0, 1, "", "write_spectra"]], "pyart.bridge": [[650, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[652, 2, 1, "", "FileMetadata"], [656, 0, 1, "", "get_KE"], [657, 0, 1, "", "get_field_colormap"], [658, 0, 1, "", "get_field_limits"], [659, 0, 1, "", "get_field_mapping"], [660, 0, 1, "", "get_field_name"], [661, 0, 1, "", "get_fillvalue"], [662, 0, 1, "", "get_metadata"], [663, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[653, 3, 1, "", "__call__"], [654, 3, 1, "", "get_field_name"], [655, 3, 1, "", "get_metadata"]], "pyart.core": [[665, 2, 1, "", "Grid"], [675, 2, 1, "", "HorizontalWindProfile"], [679, 2, 1, "", "Radar"], [708, 2, 1, "", "RadarSpectra"], [737, 0, 1, "", "antenna_to_cartesian"], [738, 0, 1, "", "antenna_vectors_to_cartesian"], [739, 0, 1, "", "cartesian_to_antenna"], [740, 0, 1, "", "cartesian_to_geographic"], [741, 0, 1, "", "cartesian_to_geographic_aeqd"], [742, 0, 1, "", "cartesian_vectors_to_geographic"], [743, 0, 1, "", "geographic_to_cartesian"], [744, 0, 1, "", "geographic_to_cartesian_aeqd"], [745, 0, 1, "", "wgs84_to_swissCH1903"]], "pyart.core.Grid": [[666, 3, 1, "", "add_field"], [667, 3, 1, "", "get_point_longitude_latitude"], [668, 3, 1, "", "get_projparams"], [669, 3, 1, "", "init_point_altitude"], [670, 3, 1, "", "init_point_longitude_latitude"], [671, 3, 1, "", "init_point_x_y_z"], [672, 4, 1, "", "projection_proj"], [673, 3, 1, "", "to_xarray"], [674, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[676, 3, 1, "", "from_u_and_v"], [677, 4, 1, "", "u_wind"], [678, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[680, 3, 1, "", "add_field"], [681, 3, 1, "", "add_field_like"], [682, 3, 1, "", "add_filter"], [683, 3, 1, "", "check_field_exists"], [684, 3, 1, "", "extract_sweeps"], [685, 3, 1, "", "get_azimuth"], [686, 3, 1, "", "get_elevation"], [687, 3, 1, "", "get_end"], [688, 3, 1, "", "get_field"], [689, 3, 1, "", "get_gate_area"], [690, 3, 1, "", "get_gate_lat_lon_alt"], [691, 3, 1, "", "get_gate_x_y_z"], [692, 3, 1, "", "get_nyquist_vel"], [693, 3, 1, "", "get_slice"], [694, 3, 1, "", "get_start"], [695, 3, 1, "", "get_start_end"], [696, 3, 1, "", "info"], [697, 3, 1, "", "init_gate_altitude"], [698, 3, 1, "", "init_gate_longitude_latitude"], [699, 3, 1, "", "init_gate_x_y_z"], [700, 3, 1, "", "init_rays_per_sweep"], [701, 3, 1, "", "iter_azimuth"], [702, 3, 1, "", "iter_elevation"], [703, 3, 1, "", "iter_end"], [704, 3, 1, "", "iter_field"], [705, 3, 1, "", "iter_slice"], [706, 3, 1, "", "iter_start"], [707, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[709, 3, 1, "", "add_field"], [710, 3, 1, "", "add_field_like"], [711, 3, 1, "", "add_filter"], [712, 3, 1, "", "check_field_exists"], [713, 3, 1, "", "extract_sweeps"], [714, 3, 1, "", "get_azimuth"], [715, 3, 1, "", "get_elevation"], [716, 3, 1, "", "get_end"], [717, 3, 1, "", "get_field"], [718, 3, 1, "", "get_gate_area"], [719, 3, 1, "", "get_gate_lat_lon_alt"], [720, 3, 1, "", "get_gate_x_y_z"], [721, 3, 1, "", "get_nyquist_vel"], [722, 3, 1, "", "get_slice"], [723, 3, 1, "", "get_start"], [724, 3, 1, "", "get_start_end"], [725, 3, 1, "", "info"], [726, 3, 1, "", "init_gate_altitude"], [727, 3, 1, "", "init_gate_longitude_latitude"], [728, 3, 1, "", "init_gate_x_y_z"], [729, 3, 1, "", "init_rays_per_sweep"], [730, 3, 1, "", "iter_azimuth"], [731, 3, 1, "", "iter_elevation"], [732, 3, 1, "", "iter_end"], [733, 3, 1, "", "iter_field"], [734, 3, 1, "", "iter_slice"], [735, 3, 1, "", "iter_start"], [736, 3, 1, "", "iter_start_end"]], "pyart.correct": [[747, 2, 1, "", "GateFilter"], [775, 0, 1, "", "calculate_attenuation"], [776, 0, 1, "", "calculate_attenuation_philinear"], [777, 0, 1, "", "calculate_attenuation_zphi"], [778, 0, 1, "", "compute_apparent_vpr"], [779, 0, 1, "", "compute_theoretical_vpr"], [780, 0, 1, "", "correct_bias"], [781, 0, 1, "", "correct_noise_rhohv"], [782, 0, 1, "", "correct_sys_phase"], [783, 0, 1, "", "correct_visibility"], [784, 0, 1, "", "correct_vpr"], [785, 0, 1, "", "correct_vpr_spatialised"], [786, 0, 1, "", "dealias_fourdd"], [787, 0, 1, "", "dealias_region_based"], [788, 0, 1, "", "dealias_unwrap_phase"], [789, 0, 1, "", "despeckle_field"], [790, 0, 1, "", "det_sys_phase_ray"], [791, 0, 1, "", "est_rhohv_rain"], [792, 0, 1, "", "est_zdr_precip"], [793, 0, 1, "", "est_zdr_snow"], [794, 0, 1, "", "find_objects"], [795, 0, 1, "", "gauss_fit"], [796, 0, 1, "", "get_mask_fzl"], [797, 0, 1, "", "get_sun_hits"], [798, 0, 1, "", "get_sun_hits_ivic"], [799, 0, 1, "", "get_sun_hits_psr"], [800, 0, 1, "", "moment_based_gate_filter"], [801, 0, 1, "", "phase_proc_lp"], [802, 0, 1, "", "phase_proc_lp_gf"], [803, 0, 1, "", "ptoa_to_sf"], [804, 0, 1, "", "retrieval_result"], [805, 0, 1, "", "scanning_losses"], [806, 0, 1, "", "selfconsistency_bias"], [807, 0, 1, "", "selfconsistency_bias2"], [808, 0, 1, "", "selfconsistency_kdp_phidp"], [809, 0, 1, "", "smooth_masked"], [810, 0, 1, "", "smooth_phidp_double_window"], [811, 0, 1, "", "smooth_phidp_single_window"], [812, 0, 1, "", "solar_flux_lookup"], [813, 0, 1, "", "sun_position_mfr"], [814, 0, 1, "", "sun_position_pysolar"], [815, 0, 1, "", "sun_power"], [816, 0, 1, "", "sun_retrieval"]], "pyart.correct.GateFilter": [[748, 3, 1, "", "copy"], [749, 3, 1, "", "exclude_above"], [750, 3, 1, "", "exclude_all"], [751, 3, 1, "", "exclude_below"], [752, 3, 1, "", "exclude_equal"], [753, 3, 1, "", "exclude_gates"], [754, 3, 1, "", "exclude_inside"], [755, 3, 1, "", "exclude_invalid"], [756, 3, 1, "", "exclude_masked"], [757, 3, 1, "", "exclude_none"], [758, 3, 1, "", "exclude_not_equal"], [759, 3, 1, "", "exclude_outside"], [760, 3, 1, "", "exclude_transition"], [761, 4, 1, "", "gate_excluded"], [762, 4, 1, "", "gate_included"], [763, 3, 1, "", "include_above"], [764, 3, 1, "", "include_all"], [765, 3, 1, "", "include_below"], [766, 3, 1, "", "include_equal"], [767, 3, 1, "", "include_gates"], [768, 3, 1, "", "include_inside"], [769, 3, 1, "", "include_none"], [770, 3, 1, "", "include_not_equal"], [771, 3, 1, "", "include_not_masked"], [772, 3, 1, "", "include_not_transition"], [773, 3, 1, "", "include_outside"], [774, 3, 1, "", "include_valid"]], "pyart.exceptions": [[166, 5, 1, "", "DeprecatedAttribute"], [167, 5, 1, "", "DeprecatedFunctionName"], [168, 5, 1, "", "MissingOptionalDependency"], [169, 0, 1, "", "_deprecated_alias"]], "pyart.filters": [[819, 2, 1, "", "GateFilter"], [847, 0, 1, "", "birds_gate_filter"], [848, 0, 1, "", "class_based_gate_filter"], [849, 0, 1, "", "iso0_based_gate_filter"], [850, 0, 1, "", "moment_and_texture_based_gate_filter"], [851, 0, 1, "", "moment_based_gate_filter"], [852, 0, 1, "", "snr_based_gate_filter"], [853, 0, 1, "", "temp_based_gate_filter"], [854, 0, 1, "", "visibility_based_gate_filter"]], "pyart.filters.GateFilter": [[820, 3, 1, "", "copy"], [821, 3, 1, "", "exclude_above"], [822, 3, 1, "", "exclude_all"], [823, 3, 1, "", "exclude_below"], [824, 3, 1, "", "exclude_equal"], [825, 3, 1, "", "exclude_gates"], [826, 3, 1, "", "exclude_inside"], [827, 3, 1, "", "exclude_invalid"], [828, 3, 1, "", "exclude_masked"], [829, 3, 1, "", "exclude_none"], [830, 3, 1, "", "exclude_not_equal"], [831, 3, 1, "", "exclude_outside"], [832, 3, 1, "", "exclude_transition"], [833, 4, 1, "", "gate_excluded"], [834, 4, 1, "", "gate_included"], [835, 3, 1, "", "include_above"], [836, 3, 1, "", "include_all"], [837, 3, 1, "", "include_below"], [838, 3, 1, "", "include_equal"], [839, 3, 1, "", "include_gates"], [840, 3, 1, "", "include_inside"], [841, 3, 1, "", "include_none"], [842, 3, 1, "", "include_not_equal"], [843, 3, 1, "", "include_not_masked"], [844, 3, 1, "", "include_not_transition"], [845, 3, 1, "", "include_outside"], [846, 3, 1, "", "include_valid"]], "pyart.graph": [[856, 2, 1, "", "AirborneRadarDisplay"], [890, 2, 1, "", "GridMapDisplay"], [909, 2, 1, "", "GridMapDisplayBasemap"], [923, 2, 1, "", "RadarDisplay"], [956, 2, 1, "", "RadarMapDisplay"], [993, 2, 1, "", "RadarMapDisplayBasemap"], [1030, 0, 1, "", "plot_convstrat_scheme"], [1031, 0, 1, "", "plot_maxcappi"]], "pyart.graph.AirborneRadarDisplay": [[857, 3, 1, "", "generate_az_rhi_title"], [858, 3, 1, "", "generate_filename"], [859, 3, 1, "", "generate_ray_title"], [860, 3, 1, "", "generate_title"], [861, 3, 1, "", "generate_vpt_title"], [862, 3, 1, "", "generate_xsection_title"], [863, 3, 1, "", "label_xaxis_r"], [864, 3, 1, "", "label_xaxis_rays"], [865, 3, 1, "", "label_xaxis_time"], [866, 3, 1, "", "label_xaxis_x"], [867, 3, 1, "", "label_xaxis_xsection"], [868, 3, 1, "", "label_yaxis_field"], [869, 3, 1, "", "label_yaxis_xsection"], [870, 3, 1, "", "label_yaxis_y"], [871, 3, 1, "", "label_yaxis_z"], [872, 3, 1, "", "plot"], [873, 3, 1, "", "plot_azimuth_to_rhi"], [874, 3, 1, "", "plot_colorbar"], [875, 3, 1, "", "plot_cr_raster"], [876, 3, 1, "", "plot_cross_hair"], [877, 3, 1, "", "plot_grid_lines"], [878, 3, 1, "", "plot_label"], [879, 3, 1, "", "plot_labels"], [880, 3, 1, "", "plot_ppi"], [881, 3, 1, "", "plot_range_ring"], [882, 3, 1, "", "plot_range_rings"], [883, 3, 1, "", "plot_ray"], [884, 3, 1, "", "plot_rhi"], [885, 3, 1, "", "plot_sweep_grid"], [886, 3, 1, "", "plot_vpt"], [887, 3, 1, "", "plot_xsection"], [888, 3, 1, "", "set_aspect_ratio"], [889, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[891, 3, 1, "", "cartopy_coastlines"], [892, 3, 1, "", "cartopy_political_boundaries"], [893, 3, 1, "", "cartopy_states"], [894, 3, 1, "", "generate_filename"], [895, 3, 1, "", "generate_grid_title"], [896, 3, 1, "", "generate_latitudinal_level_title"], [897, 3, 1, "", "generate_longitudinal_level_title"], [898, 3, 1, "", "plot_colorbar"], [899, 3, 1, "", "plot_cross_section"], [900, 3, 1, "", "plot_cross_section_level"], [901, 3, 1, "", "plot_crosshairs"], [902, 3, 1, "", "plot_grid"], [903, 3, 1, "", "plot_grid_contour"], [904, 3, 1, "", "plot_grid_raw"], [905, 3, 1, "", "plot_latitude_slice"], [906, 3, 1, "", "plot_latitudinal_level"], [907, 3, 1, "", "plot_longitude_slice"], [908, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[910, 3, 1, "", "generate_filename"], [911, 3, 1, "", "generate_grid_title"], [912, 3, 1, "", "generate_latitudinal_level_title"], [913, 3, 1, "", "generate_longitudinal_level_title"], [914, 3, 1, "", "get_basemap"], [915, 3, 1, "", "plot_basemap"], [916, 3, 1, "", "plot_colorbar"], [917, 3, 1, "", "plot_crosshairs"], [918, 3, 1, "", "plot_grid"], [919, 3, 1, "", "plot_latitude_slice"], [920, 3, 1, "", "plot_latitudinal_level"], [921, 3, 1, "", "plot_longitude_slice"], [922, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[924, 3, 1, "", "generate_az_rhi_title"], [925, 3, 1, "", "generate_filename"], [926, 3, 1, "", "generate_ray_title"], [927, 3, 1, "", "generate_title"], [928, 3, 1, "", "generate_vpt_title"], [929, 3, 1, "", "generate_xsection_title"], [930, 3, 1, "", "label_xaxis_r"], [931, 3, 1, "", "label_xaxis_rays"], [932, 3, 1, "", "label_xaxis_time"], [933, 3, 1, "", "label_xaxis_x"], [934, 3, 1, "", "label_xaxis_xsection"], [935, 3, 1, "", "label_yaxis_field"], [936, 3, 1, "", "label_yaxis_xsection"], [937, 3, 1, "", "label_yaxis_y"], [938, 3, 1, "", "label_yaxis_z"], [939, 3, 1, "", "plot"], [940, 3, 1, "", "plot_azimuth_to_rhi"], [941, 3, 1, "", "plot_colorbar"], [942, 3, 1, "", "plot_cr_raster"], [943, 3, 1, "", "plot_cross_hair"], [944, 3, 1, "", "plot_grid_lines"], [945, 3, 1, "", "plot_label"], [946, 3, 1, "", "plot_labels"], [947, 3, 1, "", "plot_ppi"], [948, 3, 1, "", "plot_range_ring"], [949, 3, 1, "", "plot_range_rings"], [950, 3, 1, "", "plot_ray"], [951, 3, 1, "", "plot_rhi"], [952, 3, 1, "", "plot_vpt"], [953, 3, 1, "", "plot_xsection"], [954, 3, 1, "", "set_aspect_ratio"], [955, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[957, 3, 1, "", "generate_az_rhi_title"], [958, 3, 1, "", "generate_filename"], [959, 3, 1, "", "generate_ray_title"], [960, 3, 1, "", "generate_title"], [961, 3, 1, "", "generate_vpt_title"], [962, 3, 1, "", "generate_xsection_title"], [963, 3, 1, "", "label_xaxis_r"], [964, 3, 1, "", "label_xaxis_rays"], [965, 3, 1, "", "label_xaxis_time"], [966, 3, 1, "", "label_xaxis_x"], [967, 3, 1, "", "label_xaxis_xsection"], [968, 3, 1, "", "label_yaxis_field"], [969, 3, 1, "", "label_yaxis_xsection"], [970, 3, 1, "", "label_yaxis_y"], [971, 3, 1, "", "label_yaxis_z"], [972, 3, 1, "", "plot"], [973, 3, 1, "", "plot_azimuth_to_rhi"], [974, 3, 1, "", "plot_colorbar"], [975, 3, 1, "", "plot_cr_raster"], [976, 3, 1, "", "plot_cross_hair"], [977, 3, 1, "", "plot_grid_lines"], [978, 3, 1, "", "plot_label"], [979, 3, 1, "", "plot_labels"], [980, 3, 1, "", "plot_line_geo"], [981, 3, 1, "", "plot_line_xy"], [982, 3, 1, "", "plot_point"], [983, 3, 1, "", "plot_ppi"], [984, 3, 1, "", "plot_ppi_map"], [985, 3, 1, "", "plot_range_ring"], [986, 3, 1, "", "plot_range_rings"], [987, 3, 1, "", "plot_ray"], [988, 3, 1, "", "plot_rhi"], [989, 3, 1, "", "plot_vpt"], [990, 3, 1, "", "plot_xsection"], [991, 3, 1, "", "set_aspect_ratio"], [992, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[994, 3, 1, "", "generate_az_rhi_title"], [995, 3, 1, "", "generate_filename"], [996, 3, 1, "", "generate_ray_title"], [997, 3, 1, "", "generate_title"], [998, 3, 1, "", "generate_vpt_title"], [999, 3, 1, "", "generate_xsection_title"], [1000, 3, 1, "", "label_xaxis_r"], [1001, 3, 1, "", "label_xaxis_rays"], [1002, 3, 1, "", "label_xaxis_time"], [1003, 3, 1, "", "label_xaxis_x"], [1004, 3, 1, "", "label_xaxis_xsection"], [1005, 3, 1, "", "label_yaxis_field"], [1006, 3, 1, "", "label_yaxis_xsection"], [1007, 3, 1, "", "label_yaxis_y"], [1008, 3, 1, "", "label_yaxis_z"], [1009, 3, 1, "", "plot"], [1010, 3, 1, "", "plot_azimuth_to_rhi"], [1011, 3, 1, "", "plot_colorbar"], [1012, 3, 1, "", "plot_cr_raster"], [1013, 3, 1, "", "plot_cross_hair"], [1014, 3, 1, "", "plot_grid_lines"], [1015, 3, 1, "", "plot_label"], [1016, 3, 1, "", "plot_labels"], [1017, 3, 1, "", "plot_line_geo"], [1018, 3, 1, "", "plot_line_xy"], [1019, 3, 1, "", "plot_point"], [1020, 3, 1, "", "plot_ppi"], [1021, 3, 1, "", "plot_ppi_map"], [1022, 3, 1, "", "plot_range_ring"], [1023, 3, 1, "", "plot_range_rings"], [1024, 3, 1, "", "plot_ray"], [1025, 3, 1, "", "plot_rhi"], [1026, 3, 1, "", "plot_vpt"], [1027, 3, 1, "", "plot_xsection"], [1028, 3, 1, "", "set_aspect_ratio"], [1029, 3, 1, "", "set_limits"]], "pyart.io": [[1033, 0, 1, "", "make_time_unit_str"], [1034, 0, 1, "", "prepare_for_read"], [1035, 0, 1, "", "read"], [1036, 0, 1, "", "read_arm_sonde"], [1037, 0, 1, "", "read_arm_sonde_vap"], [1038, 0, 1, "", "read_cfradial"], [1039, 0, 1, "", "read_cfradial2"], [1040, 0, 1, "", "read_chl"], [1041, 0, 1, "", "read_grid"], [1042, 0, 1, "", "read_grid_mdv"], [1043, 0, 1, "", "read_mdv"], [1044, 0, 1, "", "read_nexrad_archive"], [1045, 0, 1, "", "read_nexrad_cdm"], [1046, 0, 1, "", "read_nexrad_level3"], [1047, 0, 1, "", "read_rsl"], [1048, 0, 1, "", "read_sigmet"], [1049, 0, 1, "", "read_uf"], [1050, 0, 1, "", "write_cfradial"], [1051, 0, 1, "", "write_grid"], [1052, 0, 1, "", "write_grid_geotiff"], [1053, 0, 1, "", "write_grid_mdv"], [1054, 0, 1, "", "write_uf"]], "pyart.lazydict": [[1056, 2, 1, "", "LazyLoadDict"], [1069, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[403, 3, 1, "", "__contains__"], [404, 3, 1, "", "__delattr__"], [405, 3, 1, "", "__delitem__"], [406, 3, 1, "", "__dir__"], [407, 3, 1, "", "__eq__"], [408, 3, 1, "", "__format__"], [409, 3, 1, "", "__ge__"], [410, 3, 1, "", "__getattribute__"], [411, 3, 1, "", "__getitem__"], [412, 3, 1, "", "__getstate__"], [413, 3, 1, "", "__gt__"], [414, 3, 1, "", "__init__"], [415, 3, 1, "", "__init_subclass__"], [416, 3, 1, "", "__iter__"], [417, 3, 1, "", "__le__"], [418, 3, 1, "", "__len__"], [419, 3, 1, "", "__lt__"], [420, 3, 1, "", "__ne__"], [421, 3, 1, "", "__new__"], [422, 3, 1, "", "__reduce__"], [423, 3, 1, "", "__reduce_ex__"], [424, 3, 1, "", "__repr__"], [425, 3, 1, "", "__setattr__"], [426, 3, 1, "", "__setitem__"], [427, 3, 1, "", "__sizeof__"], [428, 3, 1, "", "__str__"], [429, 3, 1, "", "__subclasshook__"], [1057, 3, 1, "", "clear"], [1058, 3, 1, "", "copy"], [1059, 3, 1, "", "get"], [1060, 3, 1, "", "has_key"], [1061, 3, 1, "", "items"], [1062, 3, 1, "", "keys"], [1063, 3, 1, "", "pop"], [1064, 3, 1, "", "popitem"], [1065, 3, 1, "", "set_lazy"], [1066, 3, 1, "", "setdefault"], [1067, 3, 1, "", "update"], [1068, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[1070, 3, 1, "", "clear"], [1071, 3, 1, "", "get"], [1072, 3, 1, "", "items"], [1073, 3, 1, "", "keys"], [1074, 3, 1, "", "pop"], [1075, 3, 1, "", "popitem"], [1076, 3, 1, "", "setdefault"], [1077, 3, 1, "", "update"], [1078, 3, 1, "", "values"]], "pyart.map": [[1080, 2, 1, "", "GateMapper"], [1084, 0, 1, "", "example_roi_func_constant"], [1085, 0, 1, "", "example_roi_func_dist"], [1086, 0, 1, "", "example_roi_func_dist_beam"], [1087, 0, 1, "", "grid_from_radars"], [1088, 0, 1, "", "grid_ppi_sweeps"], [1089, 0, 1, "", "grid_rhi_sweeps"], [1090, 0, 1, "", "gridstats_from_radar"], [1091, 0, 1, "", "map_gates_to_grid"], [1092, 0, 1, "", "map_gates_to_grid_to_list"], [1093, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[1081, 4, 1, "", "distance_tolerance"], [1082, 3, 1, "", "mapped_radar"], [1083, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[442, 0, 1, "", "_destandardize"], [443, 0, 1, "", "_get_res_vol_sides"], [1095, 0, 1, "", "atmospheric_gas_att"], [1096, 0, 1, "", "calculate_snr_from_reflectivity"], [1097, 0, 1, "", "calculate_velocity_texture"], [1098, 0, 1, "", "composite_reflectivity"], [1099, 0, 1, "", "compute_Doppler_velocity"], [1100, 0, 1, "", "compute_Doppler_velocity_iq"], [1101, 0, 1, "", "compute_Doppler_width"], [1102, 0, 1, "", "compute_Doppler_width_iq"], [1103, 0, 1, "", "compute_apparent_profile"], [1104, 0, 1, "", "compute_bird_density"], [1105, 0, 1, "", "compute_ccor"], [1106, 0, 1, "", "compute_cdr"], [1107, 0, 1, "", "compute_centroids"], [1108, 0, 1, "", "compute_differential_phase"], [1109, 0, 1, "", "compute_differential_phase_iq"], [1110, 0, 1, "", "compute_differential_reflectivity"], [1111, 0, 1, "", "compute_differential_reflectivity_iq"], [1112, 0, 1, "", "compute_evp"], [1113, 0, 1, "", "compute_iq"], [1114, 0, 1, "", "compute_l"], [1115, 0, 1, "", "compute_mean_phase_iq"], [1116, 0, 1, "", "compute_noise_power"], [1117, 0, 1, "", "compute_noisedBZ"], [1118, 0, 1, "", "compute_pol_variables"], [1119, 0, 1, "", "compute_pol_variables_iq"], [1120, 0, 1, "", "compute_qvp"], [1121, 0, 1, "", "compute_radial_noise_hs"], [1122, 0, 1, "", "compute_radial_noise_ivic"], [1123, 0, 1, "", "compute_rcs"], [1124, 0, 1, "", "compute_rcs_from_pr"], [1125, 0, 1, "", "compute_refl_from_zdr"], [1126, 0, 1, "", "compute_reflectivity"], [1127, 0, 1, "", "compute_reflectivity_iq"], [1128, 0, 1, "", "compute_rhohv"], [1129, 0, 1, "", "compute_rhohv_iq"], [1130, 0, 1, "", "compute_rqvp"], [1131, 0, 1, "", "compute_signal_power"], [1132, 0, 1, "", "compute_snr"], [1133, 0, 1, "", "compute_spectra"], [1134, 0, 1, "", "compute_spectral_differential_phase"], [1135, 0, 1, "", "compute_spectral_differential_reflectivity"], [1136, 0, 1, "", "compute_spectral_noise"], [1137, 0, 1, "", "compute_spectral_phase"], [1138, 0, 1, "", "compute_spectral_power"], [1139, 0, 1, "", "compute_spectral_reflectivity"], [1140, 0, 1, "", "compute_spectral_rhohv"], [1141, 0, 1, "", "compute_st1_iq"], [1142, 0, 1, "", "compute_st2_iq"], [1143, 0, 1, "", "compute_svp"], [1144, 0, 1, "", "compute_ts_along_coord"], [1145, 0, 1, "", "compute_vol_refl"], [1146, 0, 1, "", "compute_vp"], [1147, 0, 1, "", "compute_wbn_iq"], [1148, 0, 1, "", "conv_strat_raut"], [1149, 0, 1, "", "conv_strat_yuter"], [1150, 0, 1, "", "data_for_centroids"], [1151, 0, 1, "", "dealias_spectra"], [1152, 0, 1, "", "detect_ml"], [1153, 0, 1, "", "determine_medoids"], [1154, 0, 1, "", "est_rain_rate_a"], [1155, 0, 1, "", "est_rain_rate_hydro"], [1156, 0, 1, "", "est_rain_rate_kdp"], [1157, 0, 1, "", "est_rain_rate_z"], [1158, 0, 1, "", "est_rain_rate_za"], [1159, 0, 1, "", "est_rain_rate_zkdp"], [1160, 0, 1, "", "est_rain_rate_zpoly"], [1161, 0, 1, "", "est_vertical_windshear"], [1162, 0, 1, "", "est_vertical_windshear_lidar"], [1163, 0, 1, "", "est_wind_profile"], [1164, 0, 1, "", "est_wind_vel"], [1165, 0, 1, "", "feature_detection"], [1166, 0, 1, "", "fetch_radar_time_profile"], [1167, 0, 1, "", "gecsx"], [1168, 0, 1, "", "get_coeff_attg"], [1169, 0, 1, "", "get_freq_band"], [1170, 0, 1, "", "get_iso0_val"], [1171, 0, 1, "", "get_ml_rng_limits"], [1172, 0, 1, "", "grid_displacement_pc"], [1173, 0, 1, "", "grid_shift"], [1174, 0, 1, "", "hydroclass_semisupervised"], [1175, 0, 1, "", "kdp_leastsquare_double_window"], [1176, 0, 1, "", "kdp_leastsquare_single_window"], [1177, 0, 1, "", "kdp_maesaka"], [1178, 0, 1, "", "kdp_schneebeli"], [1179, 0, 1, "", "kdp_vulpiani"], [1180, 0, 1, "", "map_profile_to_gates"], [1181, 0, 1, "", "melting_layer_giangrande"], [1182, 0, 1, "", "melting_layer_hydroclass"], [1183, 0, 1, "", "melting_layer_mf"], [1184, 0, 1, "", "quasi_vertical_profile"], [1185, 0, 1, "", "select_samples"], [1186, 0, 1, "", "steiner_conv_strat"], [1187, 0, 1, "", "synthetic_obs_distribution"], [1188, 0, 1, "", "texture_of_complex_phase"], [1189, 0, 1, "", "vad_browning"], [1190, 0, 1, "", "vad_michelson"]], "pyart.testing": [[1192, 2, 1, "", "Grid"], [1202, 2, 1, "", "InTemporaryDirectory"], [1204, 2, 1, "", "Radar"], [1233, 2, 1, "", "RadarSpectra"], [1262, 0, 1, "", "get_metadata"], [1263, 0, 1, "", "get_test_data"], [1264, 0, 1, "", "make_empty_grid"], [1265, 0, 1, "", "make_empty_ppi_radar"], [1266, 0, 1, "", "make_empty_rhi_radar"], [1267, 0, 1, "", "make_empty_spectra_radar"], [1268, 0, 1, "", "make_gaussian_storm_grid"], [1269, 0, 1, "", "make_normal_storm"], [1270, 0, 1, "", "make_single_ray_radar"], [1271, 0, 1, "", "make_storm_grid"], [1272, 0, 1, "", "make_target_grid"], [1273, 0, 1, "", "make_target_radar"], [1274, 0, 1, "", "make_target_spectra_radar"], [1275, 0, 1, "", "make_velocity_aliased_radar"], [1276, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[1193, 3, 1, "", "add_field"], [1194, 3, 1, "", "get_point_longitude_latitude"], [1195, 3, 1, "", "get_projparams"], [1196, 3, 1, "", "init_point_altitude"], [1197, 3, 1, "", "init_point_longitude_latitude"], [1198, 3, 1, "", "init_point_x_y_z"], [1199, 4, 1, "", "projection_proj"], [1200, 3, 1, "", "to_xarray"], [1201, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[1203, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[1205, 3, 1, "", "add_field"], [1206, 3, 1, "", "add_field_like"], [1207, 3, 1, "", "add_filter"], [1208, 3, 1, "", "check_field_exists"], [1209, 3, 1, "", "extract_sweeps"], [1210, 3, 1, "", "get_azimuth"], [1211, 3, 1, "", "get_elevation"], [1212, 3, 1, "", "get_end"], [1213, 3, 1, "", "get_field"], [1214, 3, 1, "", "get_gate_area"], [1215, 3, 1, "", "get_gate_lat_lon_alt"], [1216, 3, 1, "", "get_gate_x_y_z"], [1217, 3, 1, "", "get_nyquist_vel"], [1218, 3, 1, "", "get_slice"], [1219, 3, 1, "", "get_start"], [1220, 3, 1, "", "get_start_end"], [1221, 3, 1, "", "info"], [1222, 3, 1, "", "init_gate_altitude"], [1223, 3, 1, "", "init_gate_longitude_latitude"], [1224, 3, 1, "", "init_gate_x_y_z"], [1225, 3, 1, "", "init_rays_per_sweep"], [1226, 3, 1, "", "iter_azimuth"], [1227, 3, 1, "", "iter_elevation"], [1228, 3, 1, "", "iter_end"], [1229, 3, 1, "", "iter_field"], [1230, 3, 1, "", "iter_slice"], [1231, 3, 1, "", "iter_start"], [1232, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[1234, 3, 1, "", "add_field"], [1235, 3, 1, "", "add_field_like"], [1236, 3, 1, "", "add_filter"], [1237, 3, 1, "", "check_field_exists"], [1238, 3, 1, "", "extract_sweeps"], [1239, 3, 1, "", "get_azimuth"], [1240, 3, 1, "", "get_elevation"], [1241, 3, 1, "", "get_end"], [1242, 3, 1, "", "get_field"], [1243, 3, 1, "", "get_gate_area"], [1244, 3, 1, "", "get_gate_lat_lon_alt"], [1245, 3, 1, "", "get_gate_x_y_z"], [1246, 3, 1, "", "get_nyquist_vel"], [1247, 3, 1, "", "get_slice"], [1248, 3, 1, "", "get_start"], [1249, 3, 1, "", "get_start_end"], [1250, 3, 1, "", "info"], [1251, 3, 1, "", "init_gate_altitude"], [1252, 3, 1, "", "init_gate_longitude_latitude"], [1253, 3, 1, "", "init_gate_x_y_z"], [1254, 3, 1, "", "init_rays_per_sweep"], [1255, 3, 1, "", "iter_azimuth"], [1256, 3, 1, "", "iter_elevation"], [1257, 3, 1, "", "iter_end"], [1258, 3, 1, "", "iter_field"], [1259, 3, 1, "", "iter_slice"], [1260, 3, 1, "", "iter_start"], [1261, 3, 1, "", "iter_start_end"]], "pyart.util": [[539, 6, 1, "", "EPOCH_UNITS"], [1278, 0, 1, "", "angular_mean"], [1279, 0, 1, "", "angular_mean_deg"], [1280, 0, 1, "", "angular_std"], [1281, 0, 1, "", "angular_std_deg"], [1282, 0, 1, "", "angular_texture_2d"], [1283, 0, 1, "", "colocated_gates"], [1284, 0, 1, "", "colocated_gates2"], [1285, 0, 1, "", "compute_azimuthal_average"], [1286, 0, 1, "", "compute_corr"], [1287, 0, 1, "", "compute_directional_stats"], [1288, 0, 1, "", "compute_mse"], [1289, 0, 1, "", "compute_nse"], [1290, 0, 1, "", "cross_section_ppi"], [1291, 0, 1, "", "cross_section_rhi"], [1292, 0, 1, "", "datetime_from_dataset"], [1293, 0, 1, "", "datetime_from_grid"], [1294, 0, 1, "", "datetime_from_radar"], [1295, 0, 1, "", "datetimes_from_dataset"], [1296, 0, 1, "", "datetimes_from_radar"], [1297, 0, 1, "", "determine_sweeps"], [1298, 0, 1, "", "estimate_noise_hs74"], [1299, 0, 1, "", "estimate_noise_ivic13"], [1300, 0, 1, "", "find_neighbour_gates"], [1301, 0, 1, "", "for_azimuth"], [1302, 0, 1, "", "get_column_rays"], [1303, 0, 1, "", "get_field_location"], [1304, 0, 1, "", "get_ivic_flat_reg_var_max"], [1305, 0, 1, "", "get_ivic_pct"], [1306, 0, 1, "", "get_ivic_snr_thr"], [1307, 0, 1, "", "get_statistic"], [1308, 0, 1, "", "get_target_elevations"], [1309, 0, 1, "", "grid_texture_2d"], [1310, 0, 1, "", "image_mute_radar"], [1311, 0, 1, "", "interpol_spectra"], [1312, 0, 1, "", "intersection"], [1313, 0, 1, "", "interval_mean"], [1314, 0, 1, "", "interval_std"], [1315, 0, 1, "", "is_vpt"], [1316, 0, 1, "", "ivic_flat_reg_var_max_table"], [1317, 0, 1, "", "ivic_flat_reg_wind_len_table"], [1318, 0, 1, "", "ivic_pct_table"], [1319, 0, 1, "", "ivic_snr_thr_table"], [1320, 0, 1, "", "join_radar"], [1321, 0, 1, "", "join_spectra"], [1322, 0, 1, "", "ma_broadcast_to"], [1323, 0, 1, "", "mean_of_two_angles"], [1324, 0, 1, "", "mean_of_two_angles_deg"], [1325, 0, 1, "", "radar_from_spectra"], [1326, 0, 1, "", "rolling_window"], [1327, 0, 1, "", "simulated_vel_from_profile"], [1328, 0, 1, "", "sphere_distance"], [1329, 0, 1, "", "subset_radar"], [1330, 0, 1, "", "subset_radar_spectra"], [1331, 0, 1, "", "texture"], [1332, 0, 1, "", "texture_along_ray"], [1333, 0, 1, "", "to_vpt"], [1334, 0, 1, "", "weighted_kurtosis"], [1335, 0, 1, "", "weighted_mean"], [1336, 0, 1, "", "weighted_skew"], [1337, 0, 1, "", "weighted_variance"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:data"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337], "aux_io": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648], "extract_sweeps_skyecho": [0, 603], "get_sweep_time_coverag": [1, 605], "read_bin": [2, 606], "read_bin_mf": [3, 607], "read_cartesian_metranet": [4, 608], "read_cf1": [5, 609], "read_cf1_cartesian": [6, 610], "read_cf1_cartesian_mf": [7, 611], "read_d3r_gcpex_nc": [8, 612], "read_dat_mf": [9, 613], "read_gam": [10, 617], "read_gif": [11, 618], "read_grib": [12, 619], "read_hpl": [13, 620], "read_iq": [14, 621], "read_kazr": [15, 622], "read_metranet": [16, 625], "read_noxp_iphex_nc": [17, 626], "read_odim_grid_h5": [18, 627], "read_odim_h5": [19, 628], "read_odim_vp_h5": [20, 629], "read_pattern": [21, 630], "read_png": [22, 631], "read_radx": [23, 637], "read_rainbow_psr": [24, 638], "read_rainbow_psr_spectra": [25, 639], "read_rainbow_wrl": [26, 640], "read_skyecho": [27, 642], "read_spectra": [28, 643], "read_swissbirdradar_spectra": [29, 644], "write_odim_grid_h5": [30, 645], "write_odim_h5": [31, 646], "write_sinarame_cfradi": [32, 647], "write_spectra": [33, 648], "bridg": [34, 649, 650], "texture_of_complex_phas": [34, 650, 1188], "config": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663], "filemetadata": [35, 36, 37, 38, 652, 653, 654, 655], "__call__": [36, 653], "get_field_nam": [37, 42, 654, 660], "get_metadata": [38, 44, 655, 662, 1262], "get_field_colormap": [39, 657], "get_field_limit": [40, 658], "get_field_map": [41, 659], "get_fillvalu": [43, 661], "load_config": [45, 663], "core": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745], "grid": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 855, 1032, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1351, 1352, 1356, 1387], "add_field": [47, 61, 90, 666, 680, 709, 1193, 1205, 1234], "get_point_longitude_latitud": [48, 667, 1194], "get_projparam": [49, 668, 1195], "init_point_altitud": [50, 669, 1196], "init_point_longitude_latitud": [51, 670, 1197], "init_point_x_y_z": [52, 671, 1198], "projection_proj": [53, 672, 1199], "to_xarrai": [54, 673, 1200], "write": [55, 601, 674, 1032, 1201], "horizontalwindprofil": [56, 57, 58, 59, 675, 676, 677, 678], "from_u_and_v": [57, 676], "u_wind": [58, 677], "v_wind": [59, 678], "radar": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 601, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 746, 818, 855, 1032, 1094, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1277, 1350, 1351, 1352, 1374, 1384, 1389, 1393, 1396], "add_field_lik": [62, 91, 681, 710, 1206, 1235], "add_filt": [63, 92, 682, 711, 1207, 1236], "check_field_exist": [64, 93, 683, 712, 1208, 1237], "extract_sweep": [65, 94, 684, 713, 1209, 1238], "get_azimuth": [66, 95, 685, 714, 1210, 1239], "get_elev": [67, 96, 686, 715, 1211, 1240], "get_end": [68, 97, 687, 716, 1212, 1241], "get_field": [69, 98, 688, 717, 1213, 1242], "get_gate_area": [70, 99, 689, 718, 1214, 1243], "get_gate_lat_lon_alt": [71, 100, 690, 719, 1215, 1244], "get_gate_x_y_z": [72, 101, 691, 720, 1216, 1245], "get_nyquist_vel": [73, 102, 692, 721, 1217, 1246], "get_slic": [74, 103, 693, 722, 1218, 1247], "get_start": [75, 104, 694, 723, 1219, 1248], "get_start_end": [76, 105, 695, 724, 1220, 1249], "info": [77, 106, 696, 725, 1221, 1250], "init_gate_altitud": [78, 107, 697, 726, 1222, 1251], "init_gate_longitude_latitud": [79, 108, 698, 727, 1223, 1252], "init_gate_x_y_z": [80, 109, 699, 728, 1224, 1253], "init_rays_per_sweep": [81, 110, 700, 729, 1225, 1254], "iter_azimuth": [82, 111, 701, 730, 1226, 1255], "iter_elev": [83, 112, 702, 731, 1227, 1256], "iter_end": [84, 113, 703, 732, 1228, 1257], "iter_field": [85, 114, 704, 733, 1229, 1258], "iter_slic": [86, 115, 705, 734, 1230, 1259], "iter_start": [87, 116, 706, 735, 1231, 1260], "iter_start_end": [88, 117, 707, 736, 1232, 1261], "radarspectra": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261], "antenna_to_cartesian": [118, 737], "antenna_vectors_to_cartesian": [119, 738], "cartesian_to_antenna": [120, 739], "cartesian_to_geograph": [121, 740], "cartesian_to_geographic_aeqd": [122, 741], "cartesian_vectors_to_geograph": [123, 742], "geographic_to_cartesian": [124, 743], "geographic_to_cartesian_aeqd": [125, 744], "wgs84_to_swissch1903": [126, 745], "test": [126, 745, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1396], "exampl": [126, 745, 1340, 1344, 1345, 1349, 1354, 1373, 1376], "correct": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 1340, 1341, 1344, 1392], "calculate_attenu": [127, 775], "calculate_attenuation_philinear": [128, 776], "calculate_attenuation_zphi": [129, 777], "compute_apparent_vpr": [130, 778], "compute_theoretical_vpr": [131, 779], "correct_bia": [132, 780], "correct_noise_rhohv": [133, 781], "correct_sys_phas": [134, 782], "correct_vis": [135, 783], "correct_vpr": [136, 784], "correct_vpr_spatialis": [137, 785], "dealias_fourdd": [138, 786], "dealias_region_bas": [139, 787], "dealias_unwrap_phas": [140, 788], "despeckle_field": [141, 789], "det_sys_phase_rai": [142, 790], "est_rhohv_rain": [143, 791], "est_zdr_precip": [144, 792], "est_zdr_snow": [145, 793], "find_object": [146, 794], "get_mask_fzl": [147, 796], "get_sun_hit": [148, 797], "get_sun_hits_iv": [149, 798], "get_sun_hits_psr": [150, 799], "phase_proc_lp": [151, 801], "phase_proc_lp_gf": [152, 802], "ptoa_to_sf": [153, 803], "scanning_loss": [154, 805], "selfconsistency_bia": [155, 806], "selfconsistency_bias2": [156, 807], "selfconsistency_kdp_phidp": [157, 808], "smooth_mask": [158, 809], "smooth_phidp_double_window": [159, 810], "smooth_phidp_single_window": [160, 811], "solar_flux_lookup": [161, 812], "sun_position_mfr": [162, 813], "sun_position_pysolar": [163, 814], "sun_pow": [164, 815], "sun_retriev": [165, 816], "except": [166, 167, 168, 169, 817], "deprecatedattribut": 166, "deprecatedfunctionnam": 167, "missingoptionaldepend": 168, "_deprecated_alia": 169, "filter": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 1392], "gatefilt": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 1388], "copi": [171, 431, 748, 820, 1058], "exclude_abov": [172, 749, 821], "exclude_al": [173, 750, 822], "exclude_below": [174, 751, 823], "exclude_equ": [175, 752, 824], "exclude_g": [176, 753, 825], "exclude_insid": [177, 754, 826], "exclude_invalid": [178, 755, 827], "exclude_mask": [179, 756, 828], "exclude_non": [180, 757, 829], "exclude_not_equ": [181, 758, 830], "exclude_outsid": [182, 759, 831], "exclude_transit": [183, 760, 832], "gate_exclud": [184, 761, 833], "gate_includ": [185, 762, 834], "include_abov": [186, 763, 835], "include_al": [187, 764, 836], "include_below": [188, 765, 837], "include_equ": [189, 766, 838], "include_g": [190, 767, 839], "include_insid": [191, 768, 840], "include_non": [192, 769, 841], "include_not_equ": [193, 770, 842], "include_not_mask": [194, 771, 843], "include_not_transit": [195, 772, 844], "include_outsid": [196, 773, 845], "include_valid": [197, 774, 846], "birds_gate_filt": [198, 847], "class_based_gate_filt": [199, 848], "iso0_based_gate_filt": [200, 849], "moment_and_texture_based_gate_filt": [201, 850], "moment_based_gate_filt": [202, 800, 851], "snr_based_gate_filt": [203, 852], "temp_based_gate_filt": [204, 853], "visibility_based_gate_filt": [205, 854], "graph": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031], "airborneradardisplai": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889], "generate_az_rhi_titl": [207, 274, 307, 344, 857, 924, 957, 994], "generate_filenam": [208, 244, 260, 275, 308, 345, 858, 894, 910, 925, 958, 995], "generate_ray_titl": [209, 276, 309, 346, 859, 926, 959, 996], "generate_titl": [210, 277, 310, 347, 860, 927, 960, 997], "generate_vpt_titl": [211, 278, 311, 348, 861, 928, 961, 998], "generate_xsection_titl": [212, 279, 312, 349, 862, 929, 962, 999], "label_xaxis_r": [213, 280, 313, 350, 863, 930, 963, 1000], "label_xaxis_rai": [214, 281, 314, 351, 864, 931, 964, 1001], "label_xaxis_tim": [215, 282, 315, 352, 865, 932, 965, 1002], "label_xaxis_x": [216, 283, 316, 353, 866, 933, 966, 1003], "label_xaxis_xsect": [217, 284, 317, 354, 867, 934, 967, 1004], "label_yaxis_field": [218, 285, 318, 355, 868, 935, 968, 1005], "label_yaxis_xsect": [219, 286, 319, 356, 869, 936, 969, 1006], "label_yaxis_i": [220, 287, 320, 357, 870, 937, 970, 1007], "label_yaxis_z": [221, 288, 321, 358, 871, 938, 971, 1008], "plot": [222, 289, 322, 359, 855, 872, 939, 972, 1009, 1344, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1375, 1377, 1378, 1389, 1391], "plot_azimuth_to_rhi": [223, 290, 323, 360, 873, 940, 973, 1010], "plot_colorbar": [224, 248, 266, 291, 324, 361, 874, 898, 916, 941, 974, 1011], "plot_cr_rast": [225, 292, 325, 362, 875, 942, 975, 1012], "plot_cross_hair": [226, 293, 326, 363, 876, 943, 976, 1013], "plot_grid_lin": [227, 294, 327, 364, 877, 944, 977, 1014], "plot_label": [228, 229, 295, 296, 328, 329, 365, 366, 878, 879, 945, 946, 978, 979, 1015, 1016], "plot_ppi": [230, 297, 333, 370, 880, 947, 983, 1020], "plot_range_r": [231, 232, 298, 299, 335, 336, 372, 373, 881, 882, 948, 949, 985, 986, 1022, 1023], "plot_rai": [233, 300, 337, 374, 883, 950, 987, 1024], "plot_rhi": [234, 301, 338, 375, 884, 951, 988, 1025], "plot_sweep_grid": [235, 885], "plot_vpt": [236, 302, 339, 376, 886, 952, 989, 1026], "plot_xsect": [237, 303, 340, 377, 887, 953, 990, 1027], "set_aspect_ratio": [238, 304, 341, 378, 888, 954, 991, 1028], "set_limit": [239, 305, 342, 379, 889, 955, 992, 1029], "gridmapdisplai": [240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 1370], "cartopy_coastlin": [241, 891], "cartopy_political_boundari": [242, 892], "cartopy_st": [243, 893], "generate_grid_titl": [245, 261, 895, 911], "generate_latitudinal_level_titl": [246, 262, 896, 912], "generate_longitudinal_level_titl": [247, 263, 897, 913], "plot_cross_sect": [249, 899], "plot_cross_section_level": [250, 900], "plot_crosshair": [251, 267, 901, 917], "plot_grid": [252, 268, 902, 918], "plot_grid_contour": [253, 903], "plot_grid_raw": [254, 904], "plot_latitude_slic": [255, 269, 905, 919], "plot_latitudinal_level": [256, 270, 906, 920], "plot_longitude_slic": [257, 271, 907, 921], "plot_longitudinal_level": [258, 272, 908, 922], "gridmapdisplaybasemap": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922], "get_basemap": [264, 914], "plot_basemap": [265, 915], "radardisplai": [273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955], "radarmapdisplai": [306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992], "plot_line_geo": [330, 367, 980, 1017], "plot_line_xi": [331, 368, 981, 1018], "plot_point": [332, 369, 982, 1019], "plot_ppi_map": [334, 371, 984, 1021], "radarmapdisplaybasemap": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029], "io": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054], "make_time_unit_str": [380, 1033], "prepare_for_read": [381, 1034], "read": [382, 601, 1032, 1035, 1346, 1347, 1389, 1390, 1391, 1392], "read_arm_sond": [383, 1036], "read_arm_sonde_vap": [384, 1037], "read_cfradi": [385, 1038], "read_cfradial2": [386, 1039], "read_chl": [387, 1040], "read_grid": [388, 1041], "read_grid_mdv": [389, 1042], "read_mdv": [390, 1043], "read_nexrad_arch": [391, 1044], "read_nexrad_cdm": [392, 1045], "read_nexrad_level3": [393, 1046], "read_rsl": [394, 1047], "read_sigmet": [395, 1048], "read_uf": [396, 1049], "write_cfradi": [397, 1050], "write_grid": [398, 1051], "write_grid_geotiff": [399, 1052], "write_grid_mdv": [400, 1053], "write_uf": [401, 1054], "lazydict": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078], "lazyloaddict": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068], "__contains__": 403, "__delattr__": 404, "__delitem__": 405, "__dir__": 406, "__eq__": 407, "__format__": 408, "__ge__": 409, "__getattribute__": 410, "__getitem__": 411, "__getstate__": 412, "__gt__": 413, "__init__": 414, "__init_subclass__": 415, "__iter__": 416, "__le__": 417, "__len__": 418, "__lt__": 419, "__ne__": 420, "__new__": 421, "__reduce__": 422, "__reduce_ex__": 423, "__repr__": 424, "__setattr__": 425, "__setitem__": 426, "__sizeof__": 427, "__str__": 428, "__subclasshook__": 429, "clear": [430, 1057, 1070], "get": [432, 1059, 1071, 1381], "has_kei": [433, 1060], "item": [434, 1061, 1072], "kei": [435, 1062, 1073], "pop": [436, 1063, 1074], "popitem": [437, 1064, 1075], "set_lazi": [438, 1065], "setdefault": [439, 1066, 1076], "updat": [440, 1067, 1077], "valu": [441, 1068, 1078], "retriev": [442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1344, 1373, 1392], "_destandard": 442, "_get_res_vol_sid": 443, "atmospheric_gas_att": [444, 1095], "calculate_snr_from_reflect": [445, 1096], "calculate_velocity_textur": [446, 1097], "composite_reflect": [447, 1098], "compute_doppler_veloc": [448, 1099], "compute_doppler_velocity_iq": [449, 1100], "compute_doppler_width": [450, 1101], "compute_doppler_width_iq": [451, 1102], "compute_apparent_profil": [452, 1103], "compute_bird_dens": [453, 1104], "compute_ccor": [454, 1105], "compute_cdr": [455, 1106], "compute_centroid": [456, 1107], "compute_differential_phas": [457, 1108], "compute_differential_phase_iq": [458, 1109], "compute_differential_reflect": [459, 1110], "compute_differential_reflectivity_iq": [460, 1111], "compute_evp": [461, 1112], "compute_iq": [462, 1113], "compute_l": [463, 1114], "compute_mean_phase_iq": [464, 1115], "compute_noise_pow": [465, 1116], "compute_noisedbz": [466, 1117], "compute_pol_vari": [467, 1118], "compute_pol_variables_iq": [468, 1119], "compute_qvp": [469, 1120], "compute_radial_noise_h": [470, 1121], "compute_radial_noise_iv": [471, 1122], "compute_rc": [472, 1123], "compute_rcs_from_pr": [473, 1124], "compute_refl_from_zdr": [474, 1125], "compute_reflect": [475, 1126], "compute_reflectivity_iq": [476, 1127], "compute_rhohv": [477, 1128], "compute_rhohv_iq": [478, 1129], "compute_rqvp": [479, 1130], "compute_signal_pow": [480, 1131], "compute_snr": [481, 1132], "compute_spectra": [482, 1133], "compute_spectral_differential_phas": [483, 1134], "compute_spectral_differential_reflect": [484, 1135], "compute_spectral_nois": [485, 1136], "compute_spectral_phas": [486, 1137], "compute_spectral_pow": [487, 1138], "compute_spectral_reflect": [488, 1139], "compute_spectral_rhohv": [489, 1140], "compute_st1_iq": [490, 1141], "compute_st2_iq": [491, 1142], "compute_svp": [492, 1143], "compute_ts_along_coord": [493, 1144], "compute_vol_refl": [494, 1145], "compute_vp": [495, 1146], "compute_wbn_iq": [496, 1147], "conv_strat_raut": [497, 1148], "conv_strat_yut": [498, 1149], "data_for_centroid": [499, 1150], "dealias_spectra": [500, 1151], "detect_ml": [501, 1152], "paremet": [501, 1152], "determine_medoid": [502, 1153], "est_rain_rate_a": [503, 1154], "est_rain_rate_hydro": [504, 1155], "est_rain_rate_kdp": [505, 1156], "est_rain_rate_z": [506, 1157], "est_rain_rate_za": [507, 1158], "est_rain_rate_zkdp": [508, 1159], "est_rain_rate_zpoli": [509, 1160], "est_vertical_windshear": [510, 1161], "est_vertical_windshear_lidar": [511, 1162], "est_wind_profil": [512, 1163], "est_wind_vel": [513, 1164], "feature_detect": [514, 1165], "fetch_radar_time_profil": [515, 1166], "gecsx": [516, 1167], "get_coeff_attg": [517, 1168], "get_freq_band": [518, 1169], "get_iso0_v": [519, 1170], "get_ml_rng_limit": [520, 1171], "grid_displacement_pc": [521, 1172], "grid_shift": [522, 1173], "hydroclass_semisupervis": [523, 1174], "kdp_leastsquare_double_window": [524, 1175], "kdp_leastsquare_single_window": [525, 1176], "kdp_maesaka": [526, 1177], "kdp_schneeb": [527, 1178], "kdp_vulpiani": [528, 1179], "map_profile_to_g": [529, 1180], "melting_layer_giangrand": [530, 1181], "melting_layer_hydroclass": [531, 1182], "melting_layer_mf": [532, 1183], "quasi_vertical_profil": [533, 1184], "select_sampl": [534, 1185], "steiner_conv_strat": [535, 1186], "synthetic_obs_distribut": [536, 1187], "vad_brown": [537, 1189], "vad_michelson": [538, 1190], "util": [539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337], "epoch_unit": 539, "angular_mean": [540, 1278], "angular_mean_deg": [541, 1279], "angular_std": [542, 1280], "angular_std_deg": [543, 1281], "angular_texture_2d": [544, 1282], "colocated_g": [545, 1283], "colocated_gates2": [546, 1284], "compute_azimuthal_averag": [547, 1285], "compute_corr": [548, 1286], "compute_directional_stat": [549, 1287], "compute_ms": [550, 1288], "compute_ns": [551, 1289], "cross_section_ppi": [552, 1290], "cross_section_rhi": [553, 1291], "datetime_from_dataset": [554, 1292], "datetime_from_grid": [555, 1293], "datetime_from_radar": [556, 1294], "datetimes_from_dataset": [557, 1295], "datetimes_from_radar": [558, 1296], "determine_sweep": [559, 1297], "estimate_noise_hs74": [560, 1298], "estimate_noise_ivic13": [561, 1299], "find_neighbour_g": [562, 1300], "for_azimuth": [563, 1301], "assumpt": [563, 590, 1301, 1328], "get_column_rai": [564, 1302], "get_field_loc": [565, 1303], "get_ivic_flat_reg_var_max": [566, 1304], "get_ivic_pct": [567, 1305], "get_ivic_snr_thr": [568, 1306], "get_statist": [569, 1307], "get_target_elev": [570, 1308], "grid_texture_2d": [571, 1309], "image_mute_radar": [572, 1310], "interpol_spectra": [573, 1311], "intersect": [574, 1312], "interval_mean": [575, 1313], "interval_std": [576, 1314], "is_vpt": [577, 1315], "ivic_flat_reg_var_max_t": [578, 1316], "ivic_flat_reg_wind_len_t": [579, 1317], "ivic_pct_t": [580, 1318], "ivic_snr_thr_t": [581, 1319], "join_radar": [582, 1320], "join_spectra": [583, 1321], "ma_broadcast_to": [584, 1322], "mean_of_two_angl": [585, 1323], "mean_of_two_angles_deg": [586, 1324], "radar_from_spectra": [587, 1325], "rolling_window": [588, 1326], "simulated_vel_from_profil": [589, 1327], "sphere_dist": [590, 1328], "paramet": [590, 1328], "subset_radar": [591, 1329], "subset_radar_spectra": [592, 1330], "textur": [593, 1331], "texture_along_rai": [594, 1332], "to_vpt": [595, 1333], "weighted_kurtosi": [596, 1334], "weighted_mean": [597, 1335], "weighted_skew": [598, 1336], "weighted_vari": [599, 1337], "_debug_info": 600, "auxiliari": 601, "input": [601, 1032, 1344, 1345], "output": [601, 1032, 1344, 1345], "data": [601, 818, 855, 1032, 1346, 1347, 1387, 1388, 1389, 1390, 1391, 1392], "special": [601, 1032], "us": [601, 1032, 1342, 1350, 1370], "convert_data": 602, "get_librari": 604, "read_edge_netcdf": 614, "read_file_c": 615, "read_file_pi": 616, "read_knmi_grid_h5": 623, "read_mch_vad": 624, "read_product_c": 632, "read_product_pi": 633, "read_psr_cpi_head": 634, "read_psr_head": 635, "read_psr_spectra": 636, "read_sinarame_h5": 641, "other": [649, 746, 1390], "toolkit": [649, 1396], "phase": [649, 746], "function": [649, 746], "get_k": 656, "class": 664, "coordin": 664, "transform": 664, "veloc": [746, 1094, 1277, 1342, 1385, 1391], "unfold": 746, "attenu": [746, 1341, 1392], "process": [746, 1094, 1389, 1391], "helper": 746, "gauss_fit": 795, "retrieval_result": 804, "plot_convstrat_schem": 1030, "plot_maxcappi": 1031, "sond": 1032, "mutablemap": [1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078], "map": [1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1344, 1349, 1351, 1352, 1363, 1387], "gatemapp": [1080, 1081, 1082, 1083, 1350], "distance_toler": 1081, "mapped_radar": 1082, "time_toler": 1083, "example_roi_func_const": 1084, "example_roi_func_dist": 1085, "example_roi_func_dist_beam": 1086, "grid_from_radar": 1087, "grid_ppi_sweep": 1088, "grid_rhi_sweep": 1089, "gridstats_from_radar": 1090, "map_gates_to_grid": 1091, "map_gates_to_grid_to_list": 1092, "map_to_grid": 1093, "composit": [1094, 1375], "reflect": [1094, 1341, 1358, 1360, 1366, 1367, 1375, 1389], "melt": 1094, "layer": 1094, "ml": 1094, "detect": 1094, "kdp": [1094, 1392], "echo": 1094, "classif": [1094, 1376, 1377, 1392], "gate": 1094, "id": 1094, "simpl": 1094, "moment": [1094, 1340, 1344, 1359, 1389], "calcul": [1094, 1375, 1377, 1378], "qpe": [1094, 1392], "quantit": 1094, "precipit": 1094, "estim": [1094, 1277, 1392], "advect": 1094, "wind": [1094, 1391], "vad": [1094, 1378, 1391], "azimuth": [1094, 1391], "displai": [1094, 1391], "qvp": 1094, "quasi": 1094, "vertic": 1094, "profil": [1094, 1378], "spectra": 1094, "iq": 1094, "visibl": 1094, "intemporarydirectori": [1202, 1203], "cleanup": 1203, "get_test_data": 1263, "make_empty_grid": 1264, "make_empty_ppi_radar": 1265, "make_empty_rhi_radar": 1266, "make_empty_spectra_radar": 1267, "make_gaussian_storm_grid": 1268, "make_normal_storm": 1269, "make_single_ray_radar": 1270, "make_storm_grid": 1271, "make_target_grid": 1272, "make_target_radar": 1273, "make_target_spectra_radar": 1274, "make_velocity_aliased_radar": 1275, "make_velocity_aliased_rhi_radar": 1276, "circular": 1277, "statist": 1277, "datetim": 1277, "column": [1277, 1374], "section": [1277, 1356, 1371], "cross": [1277, 1356, 1371], "nois": [1277, 1392], "simul": 1277, "signal": 1277, "mathemat": 1277, "weight": 1277, "api": 1338, "manual": 1338, "changelog": 1339, "v1": 1339, "9": 1339, "2": [1339, 1346, 1347], "0": 1339, "8": 1339, "7": 1339, "6": 1339, "5": 1339, "4": 1339, "3": [1339, 1346, 1370], "1": 1339, "new": 1339, "addit": [1339, 1389], "dealia": 1342, "doppler": [1342, 1391], "region": 1342, "base": 1342, "algorithm": [1342, 1376], "comput": [1343, 1348, 1353, 1372, 1379, 1380, 1389, 1394], "time": [1343, 1348, 1353, 1372, 1379, 1380, 1394], "galleri": [1344, 1382], "nexrad": [1346, 1347, 1359, 1360], "from": [1346, 1356, 1359, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1371, 1391, 1395], "aw": 1346, "cloud": 1346, "level": [1346, 1347], "older": 1347, "fix": 1347, "latitud": 1347, "longitud": 1347, "issu": 1347, "compar": 1350, "two": [1350, 1352, 1369], "singl": 1351, "cartesian": [1351, 1352, 1387, 1390], "choos": 1355, "colormap": 1355, "your": [1355, 1357], "modifi": 1357, "colorbar": 1357, "creat": [1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1383, 1398], "an": [1358, 1366, 1367, 1398], "imag": 1358, "mute": 1358, "multipl": [1359, 1364, 1365], "file": [1359, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1383, 1384, 1390, 1396], "ppi": [1361, 1362, 1363, 1371], "cfradial": 1361, "mdv": [1362, 1366, 1367, 1368], "cartopi": 1363, "panel": [1364, 1365, 1369, 1370], "rhi": [1364, 1365, 1366, 1367, 1368, 1369], "cf": [1364, 1365], "radial": [1364, 1365], "contour": [1366, 1367], "line": [1366, 1367], "volum": 1371, "extract": 1374, "abov": 1374, "point": 1374, "convect": 1376, "stratiform": 1376, "how": 1376, "work": 1376, "summari": 1376, "recommend": 1376, "best": 1376, "practic": 1376, "refer": 1376, "hydrometeor": [1377, 1392], "about": 1381, "meteoswiss": [1381, 1390], "fork": 1381, "py": [1381, 1388, 1390, 1393, 1396], "art": [1381, 1388, 1390, 1393, 1396], "cite": [1381, 1396], "what": 1381, "can": 1381, "do": 1381, "short": 1381, "cours": 1381, "instal": [1381, 1395, 1396], "depend": [1381, 1395, 1398], "option": [1381, 1395, 1398], "help": 1381, "contribut": 1381, "notebook": 1382, "basic": 1383, "ingest": 1383, "netcdf": 1383, "field": [1384, 1389], "manipul": 1384, "save": 1384, "object": [1384, 1393], "dealias": [1385, 1391], "mask": 1388, "With": 1388, "spectral": 1389, "rainbow": 1389, "format": 1389, "power": 1389, "make": 1389, "metranet": 1390, "polar": 1390, "low": 1390, "re": 1390, "mlx": 1390, "high": 1390, "mhx": 1390, "product": 1390, "swiss": [1391, 1392], "volumetr": 1391, "scan": 1391, "cappi": 1391, "raw": 1392, "c": 1392, "band": 1392, "ground": 1392, "clutter": 1392, "remov": 1392, "The": [1393, 1396], "index": 1393, "requir": 1395, "obtain": 1395, "latest": 1395, "sourc": 1395, "frequent": 1395, "ask": 1395, "question": 1395, "contributor": 1396, "": 1396, "guid": [1396, 1397], "python": 1396, "arm": 1396, "import": 1396, "link": 1396, "resourc": 1396, "code": 1396, "style": 1396, "setup": 1396, "github": 1396, "blog": 1396, "post": 1396, "user": 1397, "set": 1398, "up": 1398, "environ": 1398, "anaconda": 1398, "channel": 1398, "ad": 1398, "path": 1398, "more": 1398, "inform": 1398}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart.aux_io.extract_sweeps_skyecho": [[0, "pyart-aux-io-extract-sweeps-skyecho"], [603, "pyart-aux-io-extract-sweeps-skyecho"]], "pyart.aux_io.get_sweep_time_coverage": [[1, "pyart-aux-io-get-sweep-time-coverage"], [605, "pyart-aux-io-get-sweep-time-coverage"]], "pyart.aux_io.read_bin": [[2, "pyart-aux-io-read-bin"], [606, "pyart-aux-io-read-bin"]], "pyart.aux_io.read_bin_mf": [[3, "pyart-aux-io-read-bin-mf"], [607, "pyart-aux-io-read-bin-mf"]], "pyart.aux_io.read_cartesian_metranet": [[4, "pyart-aux-io-read-cartesian-metranet"], [608, "pyart-aux-io-read-cartesian-metranet"]], "pyart.aux_io.read_cf1": [[5, "pyart-aux-io-read-cf1"], [609, "pyart-aux-io-read-cf1"]], "pyart.aux_io.read_cf1_cartesian": [[6, "pyart-aux-io-read-cf1-cartesian"], [610, "pyart-aux-io-read-cf1-cartesian"]], "pyart.aux_io.read_cf1_cartesian_mf": [[7, "pyart-aux-io-read-cf1-cartesian-mf"], [611, "pyart-aux-io-read-cf1-cartesian-mf"]], "pyart.aux_io.read_d3r_gcpex_nc": [[8, "pyart-aux-io-read-d3r-gcpex-nc"], [612, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_dat_mf": [[9, "pyart-aux-io-read-dat-mf"], [613, "pyart-aux-io-read-dat-mf"]], "pyart.aux_io.read_gamic": [[10, "pyart-aux-io-read-gamic"], [617, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_gif": [[11, "pyart-aux-io-read-gif"], [618, "pyart-aux-io-read-gif"]], "pyart.aux_io.read_grib": [[12, "pyart-aux-io-read-grib"], [619, "pyart-aux-io-read-grib"]], "pyart.aux_io.read_hpl": [[13, "pyart-aux-io-read-hpl"], [620, "pyart-aux-io-read-hpl"]], "pyart.aux_io.read_iq": [[14, "pyart-aux-io-read-iq"], [621, "pyart-aux-io-read-iq"]], "pyart.aux_io.read_kazr": [[15, "pyart-aux-io-read-kazr"], [622, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_metranet": [[16, "pyart-aux-io-read-metranet"], [625, "pyart-aux-io-read-metranet"]], "pyart.aux_io.read_noxp_iphex_nc": [[17, "pyart-aux-io-read-noxp-iphex-nc"], [626, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_grid_h5": [[18, "pyart-aux-io-read-odim-grid-h5"], [627, "pyart-aux-io-read-odim-grid-h5"]], "pyart.aux_io.read_odim_h5": [[19, "pyart-aux-io-read-odim-h5"], [628, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_odim_vp_h5": [[20, "pyart-aux-io-read-odim-vp-h5"], [629, "pyart-aux-io-read-odim-vp-h5"]], "pyart.aux_io.read_pattern": [[21, "pyart-aux-io-read-pattern"], [630, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_png": [[22, "pyart-aux-io-read-png"], [631, "pyart-aux-io-read-png"]], "pyart.aux_io.read_radx": [[23, "pyart-aux-io-read-radx"], [637, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_rainbow_psr": [[24, "pyart-aux-io-read-rainbow-psr"], [638, "pyart-aux-io-read-rainbow-psr"]], "pyart.aux_io.read_rainbow_psr_spectra": [[25, "pyart-aux-io-read-rainbow-psr-spectra"], [639, "pyart-aux-io-read-rainbow-psr-spectra"]], "pyart.aux_io.read_rainbow_wrl": [[26, "pyart-aux-io-read-rainbow-wrl"], [640, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_skyecho": [[27, "pyart-aux-io-read-skyecho"], [642, "pyart-aux-io-read-skyecho"]], "pyart.aux_io.read_spectra": [[28, "pyart-aux-io-read-spectra"], [643, "pyart-aux-io-read-spectra"]], "pyart.aux_io.read_swissbirdradar_spectra": [[29, "pyart-aux-io-read-swissbirdradar-spectra"], [644, "pyart-aux-io-read-swissbirdradar-spectra"]], "pyart.aux_io.write_odim_grid_h5": [[30, "pyart-aux-io-write-odim-grid-h5"], [645, "pyart-aux-io-write-odim-grid-h5"]], "pyart.aux_io.write_odim_h5": [[31, "pyart-aux-io-write-odim-h5"], [646, "pyart-aux-io-write-odim-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[32, "pyart-aux-io-write-sinarame-cfradial"], [647, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.aux_io.write_spectra": [[33, "pyart-aux-io-write-spectra"], [648, "pyart-aux-io-write-spectra"]], "pyart.bridge.texture_of_complex_phase": [[34, "pyart-bridge-texture-of-complex-phase"], [650, "pyart-bridge-texture-of-complex-phase"]], "pyart.config.FileMetadata": [[35, "pyart-config-filemetadata"], [652, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[36, "pyart-config-filemetadata-call"], [653, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[37, "pyart-config-filemetadata-get-field-name"], [654, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[38, "pyart-config-filemetadata-get-metadata"], [655, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[39, "pyart-config-get-field-colormap"], [657, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[40, "pyart-config-get-field-limits"], [658, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[41, "pyart-config-get-field-mapping"], [659, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[42, "pyart-config-get-field-name"], [660, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[43, "pyart-config-get-fillvalue"], [661, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[44, "pyart-config-get-metadata"], [662, "pyart-config-get-metadata"]], "pyart.config.load_config": [[45, "pyart-config-load-config"], [663, "pyart-config-load-config"]], "pyart.core.Grid": [[46, "pyart-core-grid"], [665, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[47, "pyart-core-grid-add-field"], [666, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[48, "pyart-core-grid-get-point-longitude-latitude"], [667, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[49, "pyart-core-grid-get-projparams"], [668, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[50, "pyart-core-grid-init-point-altitude"], [669, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[51, "pyart-core-grid-init-point-longitude-latitude"], [670, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[52, "pyart-core-grid-init-point-x-y-z"], [671, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[53, "pyart-core-grid-projection-proj"], [672, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[54, "pyart-core-grid-to-xarray"], [673, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[55, "pyart-core-grid-write"], [674, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[56, "pyart-core-horizontalwindprofile"], [675, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[57, "pyart-core-horizontalwindprofile-from-u-and-v"], [676, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[58, "pyart-core-horizontalwindprofile-u-wind"], [677, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[59, "pyart-core-horizontalwindprofile-v-wind"], [678, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[60, "pyart-core-radar"], [679, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[61, "pyart-core-radar-add-field"], [680, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[62, "pyart-core-radar-add-field-like"], [681, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[63, "pyart-core-radar-add-filter"], [682, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[64, "pyart-core-radar-check-field-exists"], [683, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[65, "pyart-core-radar-extract-sweeps"], [684, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[66, "pyart-core-radar-get-azimuth"], [685, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[67, "pyart-core-radar-get-elevation"], [686, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[68, "pyart-core-radar-get-end"], [687, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[69, "pyart-core-radar-get-field"], [688, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[70, "pyart-core-radar-get-gate-area"], [689, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[71, "pyart-core-radar-get-gate-lat-lon-alt"], [690, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[72, "pyart-core-radar-get-gate-x-y-z"], [691, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[73, "pyart-core-radar-get-nyquist-vel"], [692, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[74, "pyart-core-radar-get-slice"], [693, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[75, "pyart-core-radar-get-start"], [694, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[76, "pyart-core-radar-get-start-end"], [695, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[77, "pyart-core-radar-info"], [696, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[78, "pyart-core-radar-init-gate-altitude"], [697, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[79, "pyart-core-radar-init-gate-longitude-latitude"], [698, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[80, "pyart-core-radar-init-gate-x-y-z"], [699, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[81, "pyart-core-radar-init-rays-per-sweep"], [700, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[82, "pyart-core-radar-iter-azimuth"], [701, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[83, "pyart-core-radar-iter-elevation"], [702, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[84, "pyart-core-radar-iter-end"], [703, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[85, "pyart-core-radar-iter-field"], [704, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[86, "pyart-core-radar-iter-slice"], [705, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[87, "pyart-core-radar-iter-start"], [706, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[88, "pyart-core-radar-iter-start-end"], [707, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[89, "pyart-core-radarspectra"], [708, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.add_field": [[90, "pyart-core-radarspectra-add-field"], [709, "pyart-core-radarspectra-add-field"]], "pyart.core.RadarSpectra.add_field_like": [[91, "pyart-core-radarspectra-add-field-like"], [710, "pyart-core-radarspectra-add-field-like"]], "pyart.core.RadarSpectra.add_filter": [[92, "pyart-core-radarspectra-add-filter"], [711, "pyart-core-radarspectra-add-filter"]], "pyart.core.RadarSpectra.check_field_exists": [[93, "pyart-core-radarspectra-check-field-exists"], [712, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.extract_sweeps": [[94, "pyart-core-radarspectra-extract-sweeps"], [713, "pyart-core-radarspectra-extract-sweeps"]], "pyart.core.RadarSpectra.get_azimuth": [[95, "pyart-core-radarspectra-get-azimuth"], [714, "pyart-core-radarspectra-get-azimuth"]], "pyart.core.RadarSpectra.get_elevation": [[96, "pyart-core-radarspectra-get-elevation"], [715, "pyart-core-radarspectra-get-elevation"]], "pyart.core.RadarSpectra.get_end": [[97, "pyart-core-radarspectra-get-end"], [716, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_field": [[98, "pyart-core-radarspectra-get-field"], [717, "pyart-core-radarspectra-get-field"]], "pyart.core.RadarSpectra.get_gate_area": [[99, "pyart-core-radarspectra-get-gate-area"], [718, "pyart-core-radarspectra-get-gate-area"]], "pyart.core.RadarSpectra.get_gate_lat_lon_alt": [[100, "pyart-core-radarspectra-get-gate-lat-lon-alt"], [719, "pyart-core-radarspectra-get-gate-lat-lon-alt"]], "pyart.core.RadarSpectra.get_gate_x_y_z": [[101, "pyart-core-radarspectra-get-gate-x-y-z"], [720, "pyart-core-radarspectra-get-gate-x-y-z"]], "pyart.core.RadarSpectra.get_nyquist_vel": [[102, "pyart-core-radarspectra-get-nyquist-vel"], [721, "pyart-core-radarspectra-get-nyquist-vel"]], "pyart.core.RadarSpectra.get_slice": [[103, "pyart-core-radarspectra-get-slice"], [722, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[104, "pyart-core-radarspectra-get-start"], [723, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[105, "pyart-core-radarspectra-get-start-end"], [724, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.info": [[106, "pyart-core-radarspectra-info"], [725, "pyart-core-radarspectra-info"]], "pyart.core.RadarSpectra.init_gate_altitude": [[107, "pyart-core-radarspectra-init-gate-altitude"], [726, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[108, "pyart-core-radarspectra-init-gate-longitude-latitude"], [727, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[109, "pyart-core-radarspectra-init-gate-x-y-z"], [728, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[110, "pyart-core-radarspectra-init-rays-per-sweep"], [729, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[111, "pyart-core-radarspectra-iter-azimuth"], [730, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[112, "pyart-core-radarspectra-iter-elevation"], [731, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[113, "pyart-core-radarspectra-iter-end"], [732, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[114, "pyart-core-radarspectra-iter-field"], [733, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[115, "pyart-core-radarspectra-iter-slice"], [734, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[116, "pyart-core-radarspectra-iter-start"], [735, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[117, "pyart-core-radarspectra-iter-start-end"], [736, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.antenna_to_cartesian": [[118, "pyart-core-antenna-to-cartesian"], [737, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[119, "pyart-core-antenna-vectors-to-cartesian"], [738, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[120, "pyart-core-cartesian-to-antenna"], [739, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"], [740, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"], [741, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"], [742, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"], [743, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"], [744, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.core.wgs84_to_swissCH1903": [[126, "pyart-core-wgs84-to-swissch1903"], [745, "pyart-core-wgs84-to-swissch1903"]], "Test example": [[126, "test-example"], [745, "test-example"]], "pyart.correct.calculate_attenuation": [[127, "pyart-correct-calculate-attenuation"], [775, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[128, "pyart-correct-calculate-attenuation-philinear"], [776, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[129, "pyart-correct-calculate-attenuation-zphi"], [777, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.compute_apparent_vpr": [[130, "pyart-correct-compute-apparent-vpr"], [778, "pyart-correct-compute-apparent-vpr"]], "pyart.correct.compute_theoretical_vpr": [[131, "pyart-correct-compute-theoretical-vpr"], [779, "pyart-correct-compute-theoretical-vpr"]], "pyart.correct.correct_bias": [[132, "pyart-correct-correct-bias"], [780, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[133, "pyart-correct-correct-noise-rhohv"], [781, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.correct_sys_phase": [[134, "pyart-correct-correct-sys-phase"], [782, "pyart-correct-correct-sys-phase"]], "pyart.correct.correct_visibility": [[135, "pyart-correct-correct-visibility"], [783, "pyart-correct-correct-visibility"]], "pyart.correct.correct_vpr": [[136, "pyart-correct-correct-vpr"], [784, "pyart-correct-correct-vpr"]], "pyart.correct.correct_vpr_spatialised": [[137, "pyart-correct-correct-vpr-spatialised"], [785, "pyart-correct-correct-vpr-spatialised"]], "pyart.correct.dealias_fourdd": [[138, "pyart-correct-dealias-fourdd"], [786, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[139, "pyart-correct-dealias-region-based"], [787, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[140, "pyart-correct-dealias-unwrap-phase"], [788, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[141, "pyart-correct-despeckle-field"], [789, "pyart-correct-despeckle-field"]], "pyart.correct.det_sys_phase_ray": [[142, "pyart-correct-det-sys-phase-ray"], [790, "pyart-correct-det-sys-phase-ray"]], "pyart.correct.est_rhohv_rain": [[143, "pyart-correct-est-rhohv-rain"], [791, "pyart-correct-est-rhohv-rain"]], "pyart.correct.est_zdr_precip": [[144, "pyart-correct-est-zdr-precip"], [792, "pyart-correct-est-zdr-precip"]], "pyart.correct.est_zdr_snow": [[145, "pyart-correct-est-zdr-snow"], [793, "pyart-correct-est-zdr-snow"]], "pyart.correct.find_objects": [[146, "pyart-correct-find-objects"], [794, "pyart-correct-find-objects"]], "pyart.correct.get_mask_fzl": [[147, "pyart-correct-get-mask-fzl"], [796, "pyart-correct-get-mask-fzl"]], "pyart.correct.get_sun_hits": [[148, "pyart-correct-get-sun-hits"], [797, "pyart-correct-get-sun-hits"]], "pyart.correct.get_sun_hits_ivic": [[149, "pyart-correct-get-sun-hits-ivic"], [798, "pyart-correct-get-sun-hits-ivic"]], "pyart.correct.get_sun_hits_psr": [[150, "pyart-correct-get-sun-hits-psr"], [799, "pyart-correct-get-sun-hits-psr"]], "pyart.correct.phase_proc_lp": [[151, "pyart-correct-phase-proc-lp"], [801, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[152, "pyart-correct-phase-proc-lp-gf"], [802, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.ptoa_to_sf": [[153, "pyart-correct-ptoa-to-sf"], [803, "pyart-correct-ptoa-to-sf"]], "pyart.correct.scanning_losses": [[154, "pyart-correct-scanning-losses"], [805, "pyart-correct-scanning-losses"]], "pyart.correct.selfconsistency_bias": [[155, "pyart-correct-selfconsistency-bias"], [806, "pyart-correct-selfconsistency-bias"]], "pyart.correct.selfconsistency_bias2": [[156, "pyart-correct-selfconsistency-bias2"], [807, "pyart-correct-selfconsistency-bias2"]], "pyart.correct.selfconsistency_kdp_phidp": [[157, "pyart-correct-selfconsistency-kdp-phidp"], [808, "pyart-correct-selfconsistency-kdp-phidp"]], "pyart.correct.smooth_masked": [[158, "pyart-correct-smooth-masked"], [809, "pyart-correct-smooth-masked"]], "pyart.correct.smooth_phidp_double_window": [[159, "pyart-correct-smooth-phidp-double-window"], [810, "pyart-correct-smooth-phidp-double-window"]], "pyart.correct.smooth_phidp_single_window": [[160, "pyart-correct-smooth-phidp-single-window"], [811, "pyart-correct-smooth-phidp-single-window"]], "pyart.correct.solar_flux_lookup": [[161, "pyart-correct-solar-flux-lookup"], [812, "pyart-correct-solar-flux-lookup"]], "pyart.correct.sun_position_mfr": [[162, "pyart-correct-sun-position-mfr"], [813, "pyart-correct-sun-position-mfr"]], "pyart.correct.sun_position_pysolar": [[163, "pyart-correct-sun-position-pysolar"], [814, "pyart-correct-sun-position-pysolar"]], "pyart.correct.sun_power": [[164, "pyart-correct-sun-power"], [815, "pyart-correct-sun-power"]], "pyart.correct.sun_retrieval": [[165, "pyart-correct-sun-retrieval"], [816, "pyart-correct-sun-retrieval"]], "pyart.exceptions.DeprecatedAttribute": [[166, "pyart-exceptions-deprecatedattribute"]], "pyart.exceptions.DeprecatedFunctionName": [[167, "pyart-exceptions-deprecatedfunctionname"]], "pyart.exceptions.MissingOptionalDependency": [[168, "pyart-exceptions-missingoptionaldependency"]], "pyart.exceptions._deprecated_alias": [[169, "pyart-exceptions-deprecated-alias"]], "pyart.filters.GateFilter": [[170, "pyart-filters-gatefilter"], [819, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[171, "pyart-filters-gatefilter-copy"], [820, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[172, "pyart-filters-gatefilter-exclude-above"], [821, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[173, "pyart-filters-gatefilter-exclude-all"], [822, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[174, "pyart-filters-gatefilter-exclude-below"], [823, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[175, "pyart-filters-gatefilter-exclude-equal"], [824, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[176, "pyart-filters-gatefilter-exclude-gates"], [825, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[177, "pyart-filters-gatefilter-exclude-inside"], [826, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[178, "pyart-filters-gatefilter-exclude-invalid"], [827, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[179, "pyart-filters-gatefilter-exclude-masked"], [828, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[180, "pyart-filters-gatefilter-exclude-none"], [829, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[181, "pyart-filters-gatefilter-exclude-not-equal"], [830, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[182, "pyart-filters-gatefilter-exclude-outside"], [831, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[183, "pyart-filters-gatefilter-exclude-transition"], [832, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[184, "pyart-filters-gatefilter-gate-excluded"], [833, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[185, "pyart-filters-gatefilter-gate-included"], [834, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[186, "pyart-filters-gatefilter-include-above"], [835, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[187, "pyart-filters-gatefilter-include-all"], [836, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[188, "pyart-filters-gatefilter-include-below"], [837, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[189, "pyart-filters-gatefilter-include-equal"], [838, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[190, "pyart-filters-gatefilter-include-gates"], [839, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[191, "pyart-filters-gatefilter-include-inside"], [840, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[192, "pyart-filters-gatefilter-include-none"], [841, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[193, "pyart-filters-gatefilter-include-not-equal"], [842, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[194, "pyart-filters-gatefilter-include-not-masked"], [843, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[195, "pyart-filters-gatefilter-include-not-transition"], [844, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[196, "pyart-filters-gatefilter-include-outside"], [845, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[197, "pyart-filters-gatefilter-include-valid"], [846, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.birds_gate_filter": [[198, "pyart-filters-birds-gate-filter"], [847, "pyart-filters-birds-gate-filter"]], "pyart.filters.class_based_gate_filter": [[199, "pyart-filters-class-based-gate-filter"], [848, "pyart-filters-class-based-gate-filter"]], "pyart.filters.iso0_based_gate_filter": [[200, "pyart-filters-iso0-based-gate-filter"], [849, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[201, "pyart-filters-moment-and-texture-based-gate-filter"], [850, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[202, "pyart-filters-moment-based-gate-filter"], [851, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.snr_based_gate_filter": [[203, "pyart-filters-snr-based-gate-filter"], [852, "pyart-filters-snr-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[204, "pyart-filters-temp-based-gate-filter"], [853, "pyart-filters-temp-based-gate-filter"]], "pyart.filters.visibility_based_gate_filter": [[205, "pyart-filters-visibility-based-gate-filter"], [854, "pyart-filters-visibility-based-gate-filter"]], "pyart.graph.AirborneRadarDisplay": [[206, "pyart-graph-airborneradardisplay"], [856, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[207, "pyart-graph-airborneradardisplay-generate-az-rhi-title"], [857, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[208, "pyart-graph-airborneradardisplay-generate-filename"], [858, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[209, "pyart-graph-airborneradardisplay-generate-ray-title"], [859, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[210, "pyart-graph-airborneradardisplay-generate-title"], [860, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[211, "pyart-graph-airborneradardisplay-generate-vpt-title"], [861, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.generate_xsection_title": [[212, "pyart-graph-airborneradardisplay-generate-xsection-title"], [862, "pyart-graph-airborneradardisplay-generate-xsection-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[213, "pyart-graph-airborneradardisplay-label-xaxis-r"], [863, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[214, "pyart-graph-airborneradardisplay-label-xaxis-rays"], [864, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[215, "pyart-graph-airborneradardisplay-label-xaxis-time"], [865, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[216, "pyart-graph-airborneradardisplay-label-xaxis-x"], [866, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection": [[217, "pyart-graph-airborneradardisplay-label-xaxis-xsection"], [867, "pyart-graph-airborneradardisplay-label-xaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[218, "pyart-graph-airborneradardisplay-label-yaxis-field"], [868, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection": [[219, "pyart-graph-airborneradardisplay-label-yaxis-xsection"], [869, "pyart-graph-airborneradardisplay-label-yaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[220, "pyart-graph-airborneradardisplay-label-yaxis-y"], [870, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[221, "pyart-graph-airborneradardisplay-label-yaxis-z"], [871, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[222, "pyart-graph-airborneradardisplay-plot"], [872, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[223, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"], [873, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[224, "pyart-graph-airborneradardisplay-plot-colorbar"], [874, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[225, "pyart-graph-airborneradardisplay-plot-cr-raster"], [875, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[226, "pyart-graph-airborneradardisplay-plot-cross-hair"], [876, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[227, "pyart-graph-airborneradardisplay-plot-grid-lines"], [877, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[228, "pyart-graph-airborneradardisplay-plot-label"], [878, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[229, "pyart-graph-airborneradardisplay-plot-labels"], [879, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[230, "pyart-graph-airborneradardisplay-plot-ppi"], [880, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[231, "pyart-graph-airborneradardisplay-plot-range-ring"], [881, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[232, "pyart-graph-airborneradardisplay-plot-range-rings"], [882, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[233, "pyart-graph-airborneradardisplay-plot-ray"], [883, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[234, "pyart-graph-airborneradardisplay-plot-rhi"], [884, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[235, "pyart-graph-airborneradardisplay-plot-sweep-grid"], [885, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[236, "pyart-graph-airborneradardisplay-plot-vpt"], [886, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.plot_xsection": [[237, "pyart-graph-airborneradardisplay-plot-xsection"], [887, "pyart-graph-airborneradardisplay-plot-xsection"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[238, "pyart-graph-airborneradardisplay-set-aspect-ratio"], [888, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[239, "pyart-graph-airborneradardisplay-set-limits"], [889, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[240, "pyart-graph-gridmapdisplay"], [890, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[241, "pyart-graph-gridmapdisplay-cartopy-coastlines"], [891, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[242, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"], [892, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[243, "pyart-graph-gridmapdisplay-cartopy-states"], [893, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[244, "pyart-graph-gridmapdisplay-generate-filename"], [894, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[245, "pyart-graph-gridmapdisplay-generate-grid-title"], [895, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[246, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"], [896, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[247, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"], [897, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[248, "pyart-graph-gridmapdisplay-plot-colorbar"], [898, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[249, "pyart-graph-gridmapdisplay-plot-cross-section"], [899, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_cross_section_level": [[250, "pyart-graph-gridmapdisplay-plot-cross-section-level"], [900, "pyart-graph-gridmapdisplay-plot-cross-section-level"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[251, "pyart-graph-gridmapdisplay-plot-crosshairs"], [901, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[252, "pyart-graph-gridmapdisplay-plot-grid"], [902, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_grid_contour": [[253, "pyart-graph-gridmapdisplay-plot-grid-contour"], [903, "pyart-graph-gridmapdisplay-plot-grid-contour"]], "pyart.graph.GridMapDisplay.plot_grid_raw": [[254, "pyart-graph-gridmapdisplay-plot-grid-raw"], [904, "pyart-graph-gridmapdisplay-plot-grid-raw"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[255, "pyart-graph-gridmapdisplay-plot-latitude-slice"], [905, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[256, "pyart-graph-gridmapdisplay-plot-latitudinal-level"], [906, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[257, "pyart-graph-gridmapdisplay-plot-longitude-slice"], [907, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[258, "pyart-graph-gridmapdisplay-plot-longitudinal-level"], [908, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[259, "pyart-graph-gridmapdisplaybasemap"], [909, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[260, "pyart-graph-gridmapdisplaybasemap-generate-filename"], [910, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[261, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"], [911, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[262, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"], [912, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[263, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"], [913, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[264, "pyart-graph-gridmapdisplaybasemap-get-basemap"], [914, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[265, "pyart-graph-gridmapdisplaybasemap-plot-basemap"], [915, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[266, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"], [916, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[267, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"], [917, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[268, "pyart-graph-gridmapdisplaybasemap-plot-grid"], [918, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[269, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"], [919, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[270, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"], [920, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[271, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"], [921, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[272, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"], [922, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[273, "pyart-graph-radardisplay"], [923, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[274, "pyart-graph-radardisplay-generate-az-rhi-title"], [924, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[275, "pyart-graph-radardisplay-generate-filename"], [925, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[276, "pyart-graph-radardisplay-generate-ray-title"], [926, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[277, "pyart-graph-radardisplay-generate-title"], [927, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[278, "pyart-graph-radardisplay-generate-vpt-title"], [928, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.generate_xsection_title": [[279, "pyart-graph-radardisplay-generate-xsection-title"], [929, "pyart-graph-radardisplay-generate-xsection-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[280, "pyart-graph-radardisplay-label-xaxis-r"], [930, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[281, "pyart-graph-radardisplay-label-xaxis-rays"], [931, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[282, "pyart-graph-radardisplay-label-xaxis-time"], [932, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[283, "pyart-graph-radardisplay-label-xaxis-x"], [933, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_xaxis_xsection": [[284, "pyart-graph-radardisplay-label-xaxis-xsection"], [934, "pyart-graph-radardisplay-label-xaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[285, "pyart-graph-radardisplay-label-yaxis-field"], [935, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_xsection": [[286, "pyart-graph-radardisplay-label-yaxis-xsection"], [936, "pyart-graph-radardisplay-label-yaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[287, "pyart-graph-radardisplay-label-yaxis-y"], [937, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[288, "pyart-graph-radardisplay-label-yaxis-z"], [938, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[289, "pyart-graph-radardisplay-plot"], [939, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[290, "pyart-graph-radardisplay-plot-azimuth-to-rhi"], [940, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[291, "pyart-graph-radardisplay-plot-colorbar"], [941, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[292, "pyart-graph-radardisplay-plot-cr-raster"], [942, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[293, "pyart-graph-radardisplay-plot-cross-hair"], [943, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[294, "pyart-graph-radardisplay-plot-grid-lines"], [944, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[295, "pyart-graph-radardisplay-plot-label"], [945, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[296, "pyart-graph-radardisplay-plot-labels"], [946, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[297, "pyart-graph-radardisplay-plot-ppi"], [947, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[298, "pyart-graph-radardisplay-plot-range-ring"], [948, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[299, "pyart-graph-radardisplay-plot-range-rings"], [949, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[300, "pyart-graph-radardisplay-plot-ray"], [950, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[301, "pyart-graph-radardisplay-plot-rhi"], [951, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[302, "pyart-graph-radardisplay-plot-vpt"], [952, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.plot_xsection": [[303, "pyart-graph-radardisplay-plot-xsection"], [953, "pyart-graph-radardisplay-plot-xsection"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[304, "pyart-graph-radardisplay-set-aspect-ratio"], [954, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[305, "pyart-graph-radardisplay-set-limits"], [955, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[306, "pyart-graph-radarmapdisplay"], [956, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[307, "pyart-graph-radarmapdisplay-generate-az-rhi-title"], [957, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[308, "pyart-graph-radarmapdisplay-generate-filename"], [958, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[309, "pyart-graph-radarmapdisplay-generate-ray-title"], [959, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[310, "pyart-graph-radarmapdisplay-generate-title"], [960, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[311, "pyart-graph-radarmapdisplay-generate-vpt-title"], [961, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.generate_xsection_title": [[312, "pyart-graph-radarmapdisplay-generate-xsection-title"], [962, "pyart-graph-radarmapdisplay-generate-xsection-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[313, "pyart-graph-radarmapdisplay-label-xaxis-r"], [963, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[314, "pyart-graph-radarmapdisplay-label-xaxis-rays"], [964, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[315, "pyart-graph-radarmapdisplay-label-xaxis-time"], [965, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[316, "pyart-graph-radarmapdisplay-label-xaxis-x"], [966, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_xaxis_xsection": [[317, "pyart-graph-radarmapdisplay-label-xaxis-xsection"], [967, "pyart-graph-radarmapdisplay-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[318, "pyart-graph-radarmapdisplay-label-yaxis-field"], [968, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_xsection": [[319, "pyart-graph-radarmapdisplay-label-yaxis-xsection"], [969, "pyart-graph-radarmapdisplay-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[320, "pyart-graph-radarmapdisplay-label-yaxis-y"], [970, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[321, "pyart-graph-radarmapdisplay-label-yaxis-z"], [971, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[322, "pyart-graph-radarmapdisplay-plot"], [972, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[323, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"], [973, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[324, "pyart-graph-radarmapdisplay-plot-colorbar"], [974, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[325, "pyart-graph-radarmapdisplay-plot-cr-raster"], [975, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[326, "pyart-graph-radarmapdisplay-plot-cross-hair"], [976, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[327, "pyart-graph-radarmapdisplay-plot-grid-lines"], [977, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[328, "pyart-graph-radarmapdisplay-plot-label"], [978, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[329, "pyart-graph-radarmapdisplay-plot-labels"], [979, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[330, "pyart-graph-radarmapdisplay-plot-line-geo"], [980, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[331, "pyart-graph-radarmapdisplay-plot-line-xy"], [981, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[332, "pyart-graph-radarmapdisplay-plot-point"], [982, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[333, "pyart-graph-radarmapdisplay-plot-ppi"], [983, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[334, "pyart-graph-radarmapdisplay-plot-ppi-map"], [984, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[335, "pyart-graph-radarmapdisplay-plot-range-ring"], [985, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[336, "pyart-graph-radarmapdisplay-plot-range-rings"], [986, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[337, "pyart-graph-radarmapdisplay-plot-ray"], [987, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[338, "pyart-graph-radarmapdisplay-plot-rhi"], [988, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[339, "pyart-graph-radarmapdisplay-plot-vpt"], [989, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.plot_xsection": [[340, "pyart-graph-radarmapdisplay-plot-xsection"], [990, "pyart-graph-radarmapdisplay-plot-xsection"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[341, "pyart-graph-radarmapdisplay-set-aspect-ratio"], [991, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[342, "pyart-graph-radarmapdisplay-set-limits"], [992, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[343, "pyart-graph-radarmapdisplaybasemap"], [993, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[344, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"], [994, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[345, "pyart-graph-radarmapdisplaybasemap-generate-filename"], [995, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[346, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"], [996, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[347, "pyart-graph-radarmapdisplaybasemap-generate-title"], [997, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[348, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"], [998, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title": [[349, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"], [999, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[350, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"], [1000, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[351, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"], [1001, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[352, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"], [1002, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[353, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"], [1003, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection": [[354, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"], [1004, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[355, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"], [1005, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection": [[356, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"], [1006, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[357, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"], [1007, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[358, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"], [1008, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[359, "pyart-graph-radarmapdisplaybasemap-plot"], [1009, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[360, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"], [1010, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[361, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"], [1011, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[362, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"], [1012, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[363, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"], [1013, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[364, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"], [1014, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[365, "pyart-graph-radarmapdisplaybasemap-plot-label"], [1015, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[366, "pyart-graph-radarmapdisplaybasemap-plot-labels"], [1016, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[367, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"], [1017, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[368, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"], [1018, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[369, "pyart-graph-radarmapdisplaybasemap-plot-point"], [1019, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[370, "pyart-graph-radarmapdisplaybasemap-plot-ppi"], [1020, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[371, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"], [1021, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[372, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"], [1022, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[373, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"], [1023, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[374, "pyart-graph-radarmapdisplaybasemap-plot-ray"], [1024, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[375, "pyart-graph-radarmapdisplaybasemap-plot-rhi"], [1025, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[376, "pyart-graph-radarmapdisplaybasemap-plot-vpt"], [1026, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.plot_xsection": [[377, "pyart-graph-radarmapdisplaybasemap-plot-xsection"], [1027, "pyart-graph-radarmapdisplaybasemap-plot-xsection"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[378, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"], [1028, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[379, "pyart-graph-radarmapdisplaybasemap-set-limits"], [1029, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.io.make_time_unit_str": [[380, "pyart-io-make-time-unit-str"], [1033, "pyart-io-make-time-unit-str"]], "pyart.io.prepare_for_read": [[381, "pyart-io-prepare-for-read"], [1034, "pyart-io-prepare-for-read"]], "pyart.io.read": [[382, "pyart-io-read"], [1035, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[383, "pyart-io-read-arm-sonde"], [1036, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[384, "pyart-io-read-arm-sonde-vap"], [1037, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[385, "pyart-io-read-cfradial"], [1038, "pyart-io-read-cfradial"]], "pyart.io.read_cfradial2": [[386, "pyart-io-read-cfradial2"], [1039, "pyart-io-read-cfradial2"]], "pyart.io.read_chl": [[387, "pyart-io-read-chl"], [1040, "pyart-io-read-chl"]], "pyart.io.read_grid": [[388, "pyart-io-read-grid"], [1041, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[389, "pyart-io-read-grid-mdv"], [1042, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[390, "pyart-io-read-mdv"], [1043, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[391, "pyart-io-read-nexrad-archive"], [1044, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[392, "pyart-io-read-nexrad-cdm"], [1045, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[393, "pyart-io-read-nexrad-level3"], [1046, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[394, "pyart-io-read-rsl"], [1047, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[395, "pyart-io-read-sigmet"], [1048, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[396, "pyart-io-read-uf"], [1049, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[397, "pyart-io-write-cfradial"], [1050, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[398, "pyart-io-write-grid"], [1051, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[399, "pyart-io-write-grid-geotiff"], [1052, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[400, "pyart-io-write-grid-mdv"], [1053, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[401, "pyart-io-write-uf"], [1054, "pyart-io-write-uf"]], "pyart.lazydict.LazyLoadDict": [[402, "pyart-lazydict-lazyloaddict"], [1056, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.__contains__": [[403, "pyart-lazydict-lazyloaddict-contains"]], "pyart.lazydict.LazyLoadDict.__delattr__": [[404, "pyart-lazydict-lazyloaddict-delattr"]], "pyart.lazydict.LazyLoadDict.__delitem__": [[405, "pyart-lazydict-lazyloaddict-delitem"]], "pyart.lazydict.LazyLoadDict.__dir__": [[406, "pyart-lazydict-lazyloaddict-dir"]], "pyart.lazydict.LazyLoadDict.__eq__": [[407, "pyart-lazydict-lazyloaddict-eq"]], "pyart.lazydict.LazyLoadDict.__format__": [[408, "pyart-lazydict-lazyloaddict-format"]], "pyart.lazydict.LazyLoadDict.__ge__": [[409, "pyart-lazydict-lazyloaddict-ge"]], "pyart.lazydict.LazyLoadDict.__getattribute__": [[410, "pyart-lazydict-lazyloaddict-getattribute"]], "pyart.lazydict.LazyLoadDict.__getitem__": [[411, "pyart-lazydict-lazyloaddict-getitem"]], "pyart.lazydict.LazyLoadDict.__getstate__": [[412, "pyart-lazydict-lazyloaddict-getstate"]], "pyart.lazydict.LazyLoadDict.__gt__": [[413, "pyart-lazydict-lazyloaddict-gt"]], "pyart.lazydict.LazyLoadDict.__init__": [[414, "pyart-lazydict-lazyloaddict-init"]], "pyart.lazydict.LazyLoadDict.__init_subclass__": [[415, "pyart-lazydict-lazyloaddict-init-subclass"]], "pyart.lazydict.LazyLoadDict.__iter__": [[416, "pyart-lazydict-lazyloaddict-iter"]], "pyart.lazydict.LazyLoadDict.__le__": [[417, "pyart-lazydict-lazyloaddict-le"]], "pyart.lazydict.LazyLoadDict.__len__": [[418, "pyart-lazydict-lazyloaddict-len"]], "pyart.lazydict.LazyLoadDict.__lt__": [[419, "pyart-lazydict-lazyloaddict-lt"]], "pyart.lazydict.LazyLoadDict.__ne__": [[420, "pyart-lazydict-lazyloaddict-ne"]], "pyart.lazydict.LazyLoadDict.__new__": [[421, "pyart-lazydict-lazyloaddict-new"]], "pyart.lazydict.LazyLoadDict.__reduce__": [[422, "pyart-lazydict-lazyloaddict-reduce"]], "pyart.lazydict.LazyLoadDict.__reduce_ex__": [[423, "pyart-lazydict-lazyloaddict-reduce-ex"]], "pyart.lazydict.LazyLoadDict.__repr__": [[424, "pyart-lazydict-lazyloaddict-repr"]], "pyart.lazydict.LazyLoadDict.__setattr__": [[425, "pyart-lazydict-lazyloaddict-setattr"]], "pyart.lazydict.LazyLoadDict.__setitem__": [[426, "pyart-lazydict-lazyloaddict-setitem"]], "pyart.lazydict.LazyLoadDict.__sizeof__": [[427, "pyart-lazydict-lazyloaddict-sizeof"]], "pyart.lazydict.LazyLoadDict.__str__": [[428, "pyart-lazydict-lazyloaddict-str"]], "pyart.lazydict.LazyLoadDict.__subclasshook__": [[429, "pyart-lazydict-lazyloaddict-subclasshook"]], "pyart.lazydict.LazyLoadDict.clear": [[430, "pyart-lazydict-lazyloaddict-clear"], [1057, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[431, "pyart-lazydict-lazyloaddict-copy"], [1058, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[432, "pyart-lazydict-lazyloaddict-get"], [1059, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[433, "pyart-lazydict-lazyloaddict-has-key"], [1060, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[434, "pyart-lazydict-lazyloaddict-items"], [1061, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[435, "pyart-lazydict-lazyloaddict-keys"], [1062, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[436, "pyart-lazydict-lazyloaddict-pop"], [1063, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[437, "pyart-lazydict-lazyloaddict-popitem"], [1064, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[438, "pyart-lazydict-lazyloaddict-set-lazy"], [1065, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[439, "pyart-lazydict-lazyloaddict-setdefault"], [1066, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[440, "pyart-lazydict-lazyloaddict-update"], [1067, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[441, "pyart-lazydict-lazyloaddict-values"], [1068, "pyart-lazydict-lazyloaddict-values"]], "pyart.retrieve._destandardize": [[442, "pyart-retrieve-destandardize"]], "pyart.retrieve._get_res_vol_sides": [[443, "pyart-retrieve-get-res-vol-sides"]], "pyart.retrieve.atmospheric_gas_att": [[444, "pyart-retrieve-atmospheric-gas-att"], [1095, "pyart-retrieve-atmospheric-gas-att"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[445, "pyart-retrieve-calculate-snr-from-reflectivity"], [1096, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[446, "pyart-retrieve-calculate-velocity-texture"], [1097, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[447, "pyart-retrieve-composite-reflectivity"], [1098, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_Doppler_velocity": [[448, "pyart-retrieve-compute-doppler-velocity"], [1099, "pyart-retrieve-compute-doppler-velocity"]], "pyart.retrieve.compute_Doppler_velocity_iq": [[449, "pyart-retrieve-compute-doppler-velocity-iq"], [1100, "pyart-retrieve-compute-doppler-velocity-iq"]], "pyart.retrieve.compute_Doppler_width": [[450, "pyart-retrieve-compute-doppler-width"], [1101, "pyart-retrieve-compute-doppler-width"]], "pyart.retrieve.compute_Doppler_width_iq": [[451, "pyart-retrieve-compute-doppler-width-iq"], [1102, "pyart-retrieve-compute-doppler-width-iq"]], "pyart.retrieve.compute_apparent_profile": [[452, "pyart-retrieve-compute-apparent-profile"], [1103, "pyart-retrieve-compute-apparent-profile"]], "pyart.retrieve.compute_bird_density": [[453, "pyart-retrieve-compute-bird-density"], [1104, "pyart-retrieve-compute-bird-density"]], "pyart.retrieve.compute_ccor": [[454, "pyart-retrieve-compute-ccor"], [1105, "pyart-retrieve-compute-ccor"]], "pyart.retrieve.compute_cdr": [[455, "pyart-retrieve-compute-cdr"], [1106, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_centroids": [[456, "pyart-retrieve-compute-centroids"], [1107, "pyart-retrieve-compute-centroids"]], "pyart.retrieve.compute_differential_phase": [[457, "pyart-retrieve-compute-differential-phase"], [1108, "pyart-retrieve-compute-differential-phase"]], "pyart.retrieve.compute_differential_phase_iq": [[458, "pyart-retrieve-compute-differential-phase-iq"], [1109, "pyart-retrieve-compute-differential-phase-iq"]], "pyart.retrieve.compute_differential_reflectivity": [[459, "pyart-retrieve-compute-differential-reflectivity"], [1110, "pyart-retrieve-compute-differential-reflectivity"]], "pyart.retrieve.compute_differential_reflectivity_iq": [[460, "pyart-retrieve-compute-differential-reflectivity-iq"], [1111, "pyart-retrieve-compute-differential-reflectivity-iq"]], "pyart.retrieve.compute_evp": [[461, "pyart-retrieve-compute-evp"], [1112, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_iq": [[462, "pyart-retrieve-compute-iq"], [1113, "pyart-retrieve-compute-iq"]], "pyart.retrieve.compute_l": [[463, "pyart-retrieve-compute-l"], [1114, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_mean_phase_iq": [[464, "pyart-retrieve-compute-mean-phase-iq"], [1115, "pyart-retrieve-compute-mean-phase-iq"]], "pyart.retrieve.compute_noise_power": [[465, "pyart-retrieve-compute-noise-power"], [1116, "pyart-retrieve-compute-noise-power"]], "pyart.retrieve.compute_noisedBZ": [[466, "pyart-retrieve-compute-noisedbz"], [1117, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_pol_variables": [[467, "pyart-retrieve-compute-pol-variables"], [1118, "pyart-retrieve-compute-pol-variables"]], "pyart.retrieve.compute_pol_variables_iq": [[468, "pyart-retrieve-compute-pol-variables-iq"], [1119, "pyart-retrieve-compute-pol-variables-iq"]], "pyart.retrieve.compute_qvp": [[469, "pyart-retrieve-compute-qvp"], [1120, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_radial_noise_hs": [[470, "pyart-retrieve-compute-radial-noise-hs"], [1121, "pyart-retrieve-compute-radial-noise-hs"]], "pyart.retrieve.compute_radial_noise_ivic": [[471, "pyart-retrieve-compute-radial-noise-ivic"], [1122, "pyart-retrieve-compute-radial-noise-ivic"]], "pyart.retrieve.compute_rcs": [[472, "pyart-retrieve-compute-rcs"], [1123, "pyart-retrieve-compute-rcs"]], "pyart.retrieve.compute_rcs_from_pr": [[473, "pyart-retrieve-compute-rcs-from-pr"], [1124, "pyart-retrieve-compute-rcs-from-pr"]], "pyart.retrieve.compute_refl_from_zdr": [[474, "pyart-retrieve-compute-refl-from-zdr"], [1125, "pyart-retrieve-compute-refl-from-zdr"]], "pyart.retrieve.compute_reflectivity": [[475, "pyart-retrieve-compute-reflectivity"], [1126, "pyart-retrieve-compute-reflectivity"]], "pyart.retrieve.compute_reflectivity_iq": [[476, "pyart-retrieve-compute-reflectivity-iq"], [1127, "pyart-retrieve-compute-reflectivity-iq"]], "pyart.retrieve.compute_rhohv": [[477, "pyart-retrieve-compute-rhohv"], [1128, "pyart-retrieve-compute-rhohv"]], "pyart.retrieve.compute_rhohv_iq": [[478, "pyart-retrieve-compute-rhohv-iq"], [1129, "pyart-retrieve-compute-rhohv-iq"]], "pyart.retrieve.compute_rqvp": [[479, "pyart-retrieve-compute-rqvp"], [1130, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_signal_power": [[480, "pyart-retrieve-compute-signal-power"], [1131, "pyart-retrieve-compute-signal-power"]], "pyart.retrieve.compute_snr": [[481, "pyart-retrieve-compute-snr"], [1132, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_spectra": [[482, "pyart-retrieve-compute-spectra"], [1133, "pyart-retrieve-compute-spectra"]], "pyart.retrieve.compute_spectral_differential_phase": [[483, "pyart-retrieve-compute-spectral-differential-phase"], [1134, "pyart-retrieve-compute-spectral-differential-phase"]], "pyart.retrieve.compute_spectral_differential_reflectivity": [[484, "pyart-retrieve-compute-spectral-differential-reflectivity"], [1135, "pyart-retrieve-compute-spectral-differential-reflectivity"]], "pyart.retrieve.compute_spectral_noise": [[485, "pyart-retrieve-compute-spectral-noise"], [1136, "pyart-retrieve-compute-spectral-noise"]], "pyart.retrieve.compute_spectral_phase": [[486, "pyart-retrieve-compute-spectral-phase"], [1137, "pyart-retrieve-compute-spectral-phase"]], "pyart.retrieve.compute_spectral_power": [[487, "pyart-retrieve-compute-spectral-power"], [1138, "pyart-retrieve-compute-spectral-power"]], "pyart.retrieve.compute_spectral_reflectivity": [[488, "pyart-retrieve-compute-spectral-reflectivity"], [1139, "pyart-retrieve-compute-spectral-reflectivity"]], "pyart.retrieve.compute_spectral_rhohv": [[489, "pyart-retrieve-compute-spectral-rhohv"], [1140, "pyart-retrieve-compute-spectral-rhohv"]], "pyart.retrieve.compute_st1_iq": [[490, "pyart-retrieve-compute-st1-iq"], [1141, "pyart-retrieve-compute-st1-iq"]], "pyart.retrieve.compute_st2_iq": [[491, "pyart-retrieve-compute-st2-iq"], [1142, "pyart-retrieve-compute-st2-iq"]], "pyart.retrieve.compute_svp": [[492, "pyart-retrieve-compute-svp"], [1143, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[493, "pyart-retrieve-compute-ts-along-coord"], [1144, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vol_refl": [[494, "pyart-retrieve-compute-vol-refl"], [1145, "pyart-retrieve-compute-vol-refl"]], "pyart.retrieve.compute_vp": [[495, "pyart-retrieve-compute-vp"], [1146, "pyart-retrieve-compute-vp"]], "pyart.retrieve.compute_wbn_iq": [[496, "pyart-retrieve-compute-wbn-iq"], [1147, "pyart-retrieve-compute-wbn-iq"]], "pyart.retrieve.conv_strat_raut": [[497, "pyart-retrieve-conv-strat-raut"], [1148, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[498, "pyart-retrieve-conv-strat-yuter"], [1149, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.data_for_centroids": [[499, "pyart-retrieve-data-for-centroids"], [1150, "pyart-retrieve-data-for-centroids"]], "pyart.retrieve.dealias_spectra": [[500, "pyart-retrieve-dealias-spectra"], [1151, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.detect_ml": [[501, "pyart-retrieve-detect-ml"], [1152, "pyart-retrieve-detect-ml"]], "Paremeters": [[501, "paremeters"], [1152, "paremeters"]], "pyart.retrieve.determine_medoids": [[502, "pyart-retrieve-determine-medoids"], [1153, "pyart-retrieve-determine-medoids"]], "pyart.retrieve.est_rain_rate_a": [[503, "pyart-retrieve-est-rain-rate-a"], [1154, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[504, "pyart-retrieve-est-rain-rate-hydro"], [1155, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[505, "pyart-retrieve-est-rain-rate-kdp"], [1156, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[506, "pyart-retrieve-est-rain-rate-z"], [1157, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[507, "pyart-retrieve-est-rain-rate-za"], [1158, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[508, "pyart-retrieve-est-rain-rate-zkdp"], [1159, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[509, "pyart-retrieve-est-rain-rate-zpoly"], [1160, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.est_vertical_windshear": [[510, "pyart-retrieve-est-vertical-windshear"], [1161, "pyart-retrieve-est-vertical-windshear"]], "pyart.retrieve.est_vertical_windshear_lidar": [[511, "pyart-retrieve-est-vertical-windshear-lidar"], [1162, "pyart-retrieve-est-vertical-windshear-lidar"]], "pyart.retrieve.est_wind_profile": [[512, "pyart-retrieve-est-wind-profile"], [1163, "pyart-retrieve-est-wind-profile"]], "pyart.retrieve.est_wind_vel": [[513, "pyart-retrieve-est-wind-vel"], [1164, "pyart-retrieve-est-wind-vel"]], "pyart.retrieve.feature_detection": [[514, "pyart-retrieve-feature-detection"], [1165, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[515, "pyart-retrieve-fetch-radar-time-profile"], [1166, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.gecsx": [[516, "pyart-retrieve-gecsx"], [1167, "pyart-retrieve-gecsx"]], "pyart.retrieve.get_coeff_attg": [[517, "pyart-retrieve-get-coeff-attg"], [1168, "pyart-retrieve-get-coeff-attg"]], "pyart.retrieve.get_freq_band": [[518, "pyart-retrieve-get-freq-band"], [1169, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.get_iso0_val": [[519, "pyart-retrieve-get-iso0-val"], [1170, "pyart-retrieve-get-iso0-val"]], "pyart.retrieve.get_ml_rng_limits": [[520, "pyart-retrieve-get-ml-rng-limits"], [1171, "pyart-retrieve-get-ml-rng-limits"]], "pyart.retrieve.grid_displacement_pc": [[521, "pyart-retrieve-grid-displacement-pc"], [1172, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[522, "pyart-retrieve-grid-shift"], [1173, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[523, "pyart-retrieve-hydroclass-semisupervised"], [1174, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_leastsquare_double_window": [[524, "pyart-retrieve-kdp-leastsquare-double-window"], [1175, "pyart-retrieve-kdp-leastsquare-double-window"]], "pyart.retrieve.kdp_leastsquare_single_window": [[525, "pyart-retrieve-kdp-leastsquare-single-window"], [1176, "pyart-retrieve-kdp-leastsquare-single-window"]], "pyart.retrieve.kdp_maesaka": [[526, "pyart-retrieve-kdp-maesaka"], [1177, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[527, "pyart-retrieve-kdp-schneebeli"], [1178, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[528, "pyart-retrieve-kdp-vulpiani"], [1179, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[529, "pyart-retrieve-map-profile-to-gates"], [1180, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.melting_layer_giangrande": [[530, "pyart-retrieve-melting-layer-giangrande"], [1181, "pyart-retrieve-melting-layer-giangrande"]], "pyart.retrieve.melting_layer_hydroclass": [[531, "pyart-retrieve-melting-layer-hydroclass"], [1182, "pyart-retrieve-melting-layer-hydroclass"]], "pyart.retrieve.melting_layer_mf": [[532, "pyart-retrieve-melting-layer-mf"], [1183, "pyart-retrieve-melting-layer-mf"]], "pyart.retrieve.quasi_vertical_profile": [[533, "pyart-retrieve-quasi-vertical-profile"], [1184, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.select_samples": [[534, "pyart-retrieve-select-samples"], [1185, "pyart-retrieve-select-samples"]], "pyart.retrieve.steiner_conv_strat": [[535, "pyart-retrieve-steiner-conv-strat"], [1186, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.synthetic_obs_distribution": [[536, "pyart-retrieve-synthetic-obs-distribution"], [1187, "pyart-retrieve-synthetic-obs-distribution"]], "pyart.retrieve.vad_browning": [[537, "pyart-retrieve-vad-browning"], [1189, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[538, "pyart-retrieve-vad-michelson"], [1190, "pyart-retrieve-vad-michelson"]], "pyart.util.EPOCH_UNITS": [[539, "pyart-util-epoch-units"]], "pyart.util.angular_mean": [[540, "pyart-util-angular-mean"], [1278, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[541, "pyart-util-angular-mean-deg"], [1279, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[542, "pyart-util-angular-std"], [1280, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[543, "pyart-util-angular-std-deg"], [1281, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[544, "pyart-util-angular-texture-2d"], [1282, "pyart-util-angular-texture-2d"]], "pyart.util.colocated_gates": [[545, "pyart-util-colocated-gates"], [1283, "pyart-util-colocated-gates"]], "pyart.util.colocated_gates2": [[546, "pyart-util-colocated-gates2"], [1284, "pyart-util-colocated-gates2"]], "pyart.util.compute_azimuthal_average": [[547, "pyart-util-compute-azimuthal-average"], [1285, "pyart-util-compute-azimuthal-average"]], "pyart.util.compute_corr": [[548, "pyart-util-compute-corr"], [1286, "pyart-util-compute-corr"]], "pyart.util.compute_directional_stats": [[549, "pyart-util-compute-directional-stats"], [1287, "pyart-util-compute-directional-stats"]], "pyart.util.compute_mse": [[550, "pyart-util-compute-mse"], [1288, "pyart-util-compute-mse"]], "pyart.util.compute_nse": [[551, "pyart-util-compute-nse"], [1289, "pyart-util-compute-nse"]], "pyart.util.cross_section_ppi": [[552, "pyart-util-cross-section-ppi"], [1290, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[553, "pyart-util-cross-section-rhi"], [1291, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[554, "pyart-util-datetime-from-dataset"], [1292, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[555, "pyart-util-datetime-from-grid"], [1293, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[556, "pyart-util-datetime-from-radar"], [1294, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[557, "pyart-util-datetimes-from-dataset"], [1295, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[558, "pyart-util-datetimes-from-radar"], [1296, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[559, "pyart-util-determine-sweeps"], [1297, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[560, "pyart-util-estimate-noise-hs74"], [1298, "pyart-util-estimate-noise-hs74"]], "pyart.util.estimate_noise_ivic13": [[561, "pyart-util-estimate-noise-ivic13"], [1299, "pyart-util-estimate-noise-ivic13"]], "pyart.util.find_neighbour_gates": [[562, "pyart-util-find-neighbour-gates"], [1300, "pyart-util-find-neighbour-gates"]], "pyart.util.for_azimuth": [[563, "pyart-util-for-azimuth"], [1301, "pyart-util-for-azimuth"]], "Assumptions": [[563, "assumptions"], [590, "assumptions"], [1301, "assumptions"], [1328, "assumptions"]], "pyart.util.get_column_rays": [[564, "pyart-util-get-column-rays"], [1302, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[565, "pyart-util-get-field-location"], [1303, "pyart-util-get-field-location"]], "pyart.util.get_ivic_flat_reg_var_max": [[566, "pyart-util-get-ivic-flat-reg-var-max"], [1304, "pyart-util-get-ivic-flat-reg-var-max"]], "pyart.util.get_ivic_pct": [[567, "pyart-util-get-ivic-pct"], [1305, "pyart-util-get-ivic-pct"]], "pyart.util.get_ivic_snr_thr": [[568, "pyart-util-get-ivic-snr-thr"], [1306, "pyart-util-get-ivic-snr-thr"]], "pyart.util.get_statistic": [[569, "pyart-util-get-statistic"], [1307, "pyart-util-get-statistic"]], "pyart.util.get_target_elevations": [[570, "pyart-util-get-target-elevations"], [1308, "pyart-util-get-target-elevations"]], "pyart.util.grid_texture_2d": [[571, "pyart-util-grid-texture-2d"], [1309, "pyart-util-grid-texture-2d"]], "pyart.util.image_mute_radar": [[572, "pyart-util-image-mute-radar"], [1310, "pyart-util-image-mute-radar"]], "pyart.util.interpol_spectra": [[573, "pyart-util-interpol-spectra"], [1311, "pyart-util-interpol-spectra"]], "pyart.util.intersection": [[574, "pyart-util-intersection"], [1312, "pyart-util-intersection"]], "pyart.util.interval_mean": [[575, "pyart-util-interval-mean"], [1313, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[576, "pyart-util-interval-std"], [1314, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[577, "pyart-util-is-vpt"], [1315, "pyart-util-is-vpt"]], "pyart.util.ivic_flat_reg_var_max_table": [[578, "pyart-util-ivic-flat-reg-var-max-table"], [1316, "pyart-util-ivic-flat-reg-var-max-table"]], "pyart.util.ivic_flat_reg_wind_len_table": [[579, "pyart-util-ivic-flat-reg-wind-len-table"], [1317, "pyart-util-ivic-flat-reg-wind-len-table"]], "pyart.util.ivic_pct_table": [[580, "pyart-util-ivic-pct-table"], [1318, "pyart-util-ivic-pct-table"]], "pyart.util.ivic_snr_thr_table": [[581, "pyart-util-ivic-snr-thr-table"], [1319, "pyart-util-ivic-snr-thr-table"]], "pyart.util.join_radar": [[582, "pyart-util-join-radar"], [1320, "pyart-util-join-radar"]], "pyart.util.join_spectra": [[583, "pyart-util-join-spectra"], [1321, "pyart-util-join-spectra"]], "pyart.util.ma_broadcast_to": [[584, "pyart-util-ma-broadcast-to"], [1322, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[585, "pyart-util-mean-of-two-angles"], [1323, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[586, "pyart-util-mean-of-two-angles-deg"], [1324, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.radar_from_spectra": [[587, "pyart-util-radar-from-spectra"], [1325, "pyart-util-radar-from-spectra"]], "pyart.util.rolling_window": [[588, "pyart-util-rolling-window"], [1326, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[589, "pyart-util-simulated-vel-from-profile"], [1327, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[590, "pyart-util-sphere-distance"], [1328, "pyart-util-sphere-distance"]], "Parameter": [[590, "parameter"], [1328, "parameter"]], "pyart.util.subset_radar": [[591, "pyart-util-subset-radar"], [1329, "pyart-util-subset-radar"]], "pyart.util.subset_radar_spectra": [[592, "pyart-util-subset-radar-spectra"], [1330, "pyart-util-subset-radar-spectra"]], "pyart.util.texture": [[593, "pyart-util-texture"], [1331, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[594, "pyart-util-texture-along-ray"], [1332, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[595, "pyart-util-to-vpt"], [1333, "pyart-util-to-vpt"]], "pyart.util.weighted_kurtosis": [[596, "pyart-util-weighted-kurtosis"], [1334, "pyart-util-weighted-kurtosis"]], "pyart.util.weighted_mean": [[597, "pyart-util-weighted-mean"], [1335, "pyart-util-weighted-mean"]], "pyart.util.weighted_skew": [[598, "pyart-util-weighted-skew"], [1336, "pyart-util-weighted-skew"]], "pyart.util.weighted_variance": [[599, "pyart-util-weighted-variance"], [1337, "pyart-util-weighted-variance"]], "pyart._debug_info": [[600, "pyart-debug-info"]], "pyart.aux_io": [[601, "pyart-aux-io"]], "Auxiliary input and output (pyart.aux_io)": [[601, "auxiliary-input-and-output-pyart-aux-io"]], "Reading radar data": [[601, "reading-radar-data"], [1032, "reading-radar-data"]], "Writing radar data": [[601, "writing-radar-data"], [1032, "writing-radar-data"]], "Special use": [[601, "special-use"], [1032, "special-use"]], "pyart.aux_io.convert_data": [[602, "pyart-aux-io-convert-data"]], "pyart.aux_io.get_library": [[604, "pyart-aux-io-get-library"]], "pyart.aux_io.read_edge_netcdf": [[614, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_file_c": [[615, "pyart-aux-io-read-file-c"]], "pyart.aux_io.read_file_py": [[616, "pyart-aux-io-read-file-py"]], "pyart.aux_io.read_knmi_grid_h5": [[623, "pyart-aux-io-read-knmi-grid-h5"]], "pyart.aux_io.read_mch_vad": [[624, "pyart-aux-io-read-mch-vad"]], "pyart.aux_io.read_product_c": [[632, "pyart-aux-io-read-product-c"]], "pyart.aux_io.read_product_py": [[633, "pyart-aux-io-read-product-py"]], "pyart.aux_io.read_psr_cpi_header": [[634, "pyart-aux-io-read-psr-cpi-header"]], "pyart.aux_io.read_psr_header": [[635, "pyart-aux-io-read-psr-header"]], "pyart.aux_io.read_psr_spectra": [[636, "pyart-aux-io-read-psr-spectra"]], "pyart.aux_io.read_sinarame_h5": [[641, "pyart-aux-io-read-sinarame-h5"]], "pyart.bridge": [[649, "pyart-bridge"]], "Bridging to other toolkits (pyart.bridge)": [[649, "bridging-to-other-toolkits-pyart-bridge"]], "Phase functions": [[649, "phase-functions"]], "pyart.config": [[651, "pyart-config"], [651, "id1"]], "pyart.config.get_KE": [[656, "pyart-config-get-ke"]], "pyart.core": [[664, "pyart-core"]], "Core (pyart.core)": [[664, "core-pyart-core"]], "Core classes": [[664, "core-classes"]], "Coordinate transformations": [[664, "coordinate-transformations"]], "pyart.correct": [[746, "pyart-correct"]], "Radar Corrections (pyart.correct)": [[746, "radar-corrections-pyart-correct"]], "Velocity unfolding": [[746, "velocity-unfolding"]], "Attenuation": [[746, "attenuation"]], "Phase processing": [[746, "phase-processing"]], "Other corrections": [[746, "other-corrections"]], "Helper functions": [[746, "helper-functions"]], "pyart.correct.GateFilter": [[747, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[748, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[749, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[750, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[751, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[752, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[753, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[754, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[755, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[756, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[757, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[758, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[759, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[760, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[761, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[762, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[763, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[764, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[765, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[766, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[767, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[768, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[769, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[770, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[771, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[772, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[773, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[774, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.gauss_fit": [[795, "pyart-correct-gauss-fit"]], "pyart.correct.moment_based_gate_filter": [[800, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.retrieval_result": [[804, "pyart-correct-retrieval-result"]], "pyart.exceptions": [[817, "pyart-exceptions"], [817, "id1"]], "pyart.filters": [[818, "pyart-filters"]], "Filters (pyart.filters)": [[818, "filters-pyart-filters"]], "Filtering radar data": [[818, "filtering-radar-data"]], "pyart.graph": [[855, "pyart-graph"]], "Graphing (pyart.graph)": [[855, "graphing-pyart-graph"]], "Plotting radar data": [[855, "plotting-radar-data"]], "Plotting grid data": [[855, "plotting-grid-data"]], "pyart.graph.plot_convstrat_scheme": [[1030, "pyart-graph-plot-convstrat-scheme"]], "pyart.graph.plot_maxcappi": [[1031, "pyart-graph-plot-maxcappi"]], "pyart.io": [[1032, "pyart-io"]], "Input and output (pyart.io)": [[1032, "input-and-output-pyart-io"]], "Reading grid data": [[1032, "reading-grid-data"]], "Writing grid data": [[1032, "writing-grid-data"]], "Reading Sonde data": [[1032, "reading-sonde-data"]], "pyart.lazydict": [[1055, "pyart-lazydict"], [1055, "id1"]], "pyart.lazydict.MutableMapping": [[1069, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[1070, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[1071, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[1072, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[1073, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[1074, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[1075, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[1076, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[1077, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[1078, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[1079, "pyart-map"]], "pyart.map.GateMapper": [[1080, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[1081, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[1082, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[1083, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[1084, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[1085, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[1086, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[1087, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[1088, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[1089, "pyart-map-grid-rhi-sweeps"]], "pyart.map.gridstats_from_radar": [[1090, "pyart-map-gridstats-from-radar"]], "pyart.map.map_gates_to_grid": [[1091, "pyart-map-map-gates-to-grid"]], "pyart.map.map_gates_to_grid_to_list": [[1092, "pyart-map-map-gates-to-grid-to-list"]], "pyart.map.map_to_grid": [[1093, "pyart-map-map-to-grid"]], "pyart.retrieve": [[1094, "pyart-retrieve"]], "Radar Retrievals (pyart.retrieve)": [[1094, "radar-retrievals-pyart-retrieve"]], "Composite Reflectivity": [[1094, "composite-reflectivity"]], "Melting Layer (ML) Detection": [[1094, "melting-layer-ml-detection"]], "KDP Processing": [[1094, "kdp-processing"]], "Echo Classification": [[1094, "echo-classification"]], "Gate ID": [[1094, "gate-id"]], "Simple Moment Calculations": [[1094, "simple-moment-calculations"]], "QPE (Quantitative Precipitation Estimation)": [[1094, "qpe-quantitative-precipitation-estimation"]], "Advection": [[1094, "advection"]], "Wind Estimation": [[1094, "wind-estimation"]], "VAD (Velocity Azimuth Display)": [[1094, "vad-velocity-azimuth-display"]], "QVP (Quasi Vertical Profile) Retrievals": [[1094, "qvp-quasi-vertical-profile-retrievals"]], "Spectra Processing": [[1094, "spectra-processing"]], "IQ Processing": [[1094, "iq-processing"]], "Visibility estimation": [[1094, "visibility-estimation"]], "pyart.retrieve.texture_of_complex_phase": [[1188, "pyart-retrieve-texture-of-complex-phase"]], "pyart.testing": [[1191, "pyart-testing"]], "pyart.testing.Grid": [[1192, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[1193, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[1194, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[1195, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[1196, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[1197, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[1198, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[1199, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[1200, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[1201, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[1202, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[1203, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[1204, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[1205, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[1206, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[1207, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[1208, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[1209, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[1210, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[1211, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[1212, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[1213, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[1214, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[1215, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[1216, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[1217, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[1218, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[1219, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[1220, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[1221, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[1222, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[1223, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[1224, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[1225, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[1226, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[1227, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[1228, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[1229, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[1230, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[1231, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[1232, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[1233, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.add_field": [[1234, "pyart-testing-radarspectra-add-field"]], "pyart.testing.RadarSpectra.add_field_like": [[1235, "pyart-testing-radarspectra-add-field-like"]], "pyart.testing.RadarSpectra.add_filter": [[1236, "pyart-testing-radarspectra-add-filter"]], "pyart.testing.RadarSpectra.check_field_exists": [[1237, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.extract_sweeps": [[1238, "pyart-testing-radarspectra-extract-sweeps"]], "pyart.testing.RadarSpectra.get_azimuth": [[1239, "pyart-testing-radarspectra-get-azimuth"]], "pyart.testing.RadarSpectra.get_elevation": [[1240, "pyart-testing-radarspectra-get-elevation"]], "pyart.testing.RadarSpectra.get_end": [[1241, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_field": [[1242, "pyart-testing-radarspectra-get-field"]], "pyart.testing.RadarSpectra.get_gate_area": [[1243, "pyart-testing-radarspectra-get-gate-area"]], "pyart.testing.RadarSpectra.get_gate_lat_lon_alt": [[1244, "pyart-testing-radarspectra-get-gate-lat-lon-alt"]], "pyart.testing.RadarSpectra.get_gate_x_y_z": [[1245, "pyart-testing-radarspectra-get-gate-x-y-z"]], "pyart.testing.RadarSpectra.get_nyquist_vel": [[1246, "pyart-testing-radarspectra-get-nyquist-vel"]], "pyart.testing.RadarSpectra.get_slice": [[1247, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[1248, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[1249, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.info": [[1250, "pyart-testing-radarspectra-info"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[1251, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[1252, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[1253, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[1254, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[1255, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[1256, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[1257, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[1258, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[1259, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[1260, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[1261, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.get_metadata": [[1262, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[1263, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[1264, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[1265, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[1266, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[1267, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[1268, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[1269, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[1270, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[1271, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[1272, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[1273, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[1274, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[1275, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[1276, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[1277, "pyart-util"]], "Circular Statistics": [[1277, "circular-statistics"]], "Datetime Utilities": [[1277, "datetime-utilities"]], "Column Section": [[1277, "column-section"]], "Cross Section": [[1277, "cross-section"]], "Noise estimation": [[1277, "noise-estimation"]], "Radar Utilities": [[1277, "radar-utilities"]], "Simulated Velocity": [[1277, "simulated-velocity"]], "Signal Mathematics": [[1277, "signal-mathematics"]], "Weighted statistics": [[1277, "weighted-statistics"]], "API Manual": [[1338, "api-manual"]], "Changelog": [[1339, "changelog"]], "v1.9.2": [[1339, "v1-9-2"]], "v1.9.0": [[1339, "v1-9-0"]], "v1.8.9": [[1339, "v1-8-9"]], "v1.8.8": [[1339, "v1-8-8"]], "v1.8.7": [[1339, "v1-8-7"]], "v1.8.6": [[1339, "v1-8-6"]], "v1.8.5": [[1339, "v1-8-5"]], "v1.8.4": [[1339, "v1-8-4"]], "v1.8.3": [[1339, "v1-8-3"]], "v1.8.2": [[1339, "v1-8-2"]], "v1.8.1": [[1339, "v1-8-1"]], "v1.8": [[1339, "v1-8"]], "v1.7.1": [[1339, "v1-7-1"]], "v1.7": [[1339, "v1-7"]], "v1.6.4": [[1339, "v1-6-4"]], "New additions": [[1339, "new-additions"]], "v1.6.3": [[1339, "v1-6-3"]], "v1.6.2": [[1339, "v1-6-2"]], "v1.6.1": [[1339, "v1-6-1"]], "v1.6": [[1339, "v1-6"]], "Moment correction examples": [[1340, "moment-correction-examples"], [1344, "moment-correction-examples"]], "Correct reflectivity attenuation": [[1341, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[1342, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[1343, "computation-times"], [1348, "computation-times"], [1353, "computation-times"], [1372, "computation-times"], [1379, "computation-times"], [1380, "computation-times"], [1394, "computation-times"]], "Example Gallery": [[1344, "example-gallery"]], "Input/Output Examples": [[1344, "input-output-examples"], [1345, "input-output-examples"]], "Mapping examples": [[1344, "mapping-examples"], [1349, "mapping-examples"]], "Plotting examples": [[1344, "plotting-examples"], [1354, "plotting-examples"]], "Retrieval Examples": [[1344, "retrieval-examples"], [1373, "retrieval-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[1346, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[1346, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[1346, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[1347, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[1347, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[1350, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[1351, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[1352, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[1355, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[1356, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[1357, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[1358, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[1359, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[1360, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[1361, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[1362, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[1363, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[1364, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [1365, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[1366, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [1367, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[1368, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[1369, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[1370, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[1371, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[1374, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[1375, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[1376, "convective-stratiform-classification"]], "How the algorithm works": [[1376, "how-the-algorithm-works"]], "Examples": [[1376, "examples"]], "Summary of recommendations and best practices": [[1376, "summary-of-recommendations-and-best-practices"]], "References": [[1376, "references"]], "Calculate and Plot hydrometeor classification": [[1377, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[1378, "calculate-and-plot-vad-profile"]], "About the MeteoSwiss fork of Py-ART": [[1381, "about-the-meteoswiss-fork-of-py-art"]], "Citing Py-ART": [[1381, "citing-py-art"]], "What can Py-ART do?": [[1381, "what-can-py-art-do"]], "Short Courses": [[1381, "short-courses"]], "Install": [[1381, "install"], [1396, "install"]], "Dependencies": [[1381, "dependencies"]], "Optional Dependences": [[1381, "optional-dependences"]], "Getting help": [[1381, "getting-help"]], "Contributing": [[1381, "contributing"]], "Notebook Gallery": [[1382, "notebook-gallery"]], "Notebooks": [[1382, null]], "Creating a basic ingest of a NetCDF file": [[1383, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[1384, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[1385, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[1387, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[1388, "masking-data-with-py-art-gatefilters"]], "Reading and processing spectral data (Rainbow format)": [[1389, "reading-and-processing-spectral-data-rainbow-format"]], "Compute additional fields": [[1389, "compute-additional-fields"]], "Spectral power": [[1389, "spectral-power"]], "Spectral reflectivity": [[1389, "spectral-reflectivity"]], "Radar moments": [[1389, "radar-moments"]], "Make a plot of the spectral reflectivity": [[1389, "make-a-plot-of-the-spectral-reflectivity"]], "Reading MeteoSwiss Metranet data with Py-ART": [[1390, "reading-meteoswiss-metranet-data-with-py-art"]], "Reading Polar data": [[1390, "reading-polar-data"]], "Low-res data (MLx files)": [[1390, "low-res-data-mlx-files"]], "High-res data (MHx files)": [[1390, "high-res-data-mhx-files"]], "Reading other polar products": [[1390, "reading-other-polar-products"]], "Reading Cartesian products": [[1390, "reading-cartesian-products"]], "Processing of Doppler wind data from a Swiss volumetric scan": [[1391, "processing-of-doppler-wind-data-from-a-swiss-volumetric-scan"]], "Reading and dealiasing the data": [[1391, "reading-and-dealiasing-the-data"]], "CAPPI plots": [[1391, "cappi-plots"]], "Velocity azimuth display (VAD)": [[1391, "velocity-azimuth-display-vad"]], "Filtering and retrievals on raw Swiss C-band data": [[1392, "filtering-and-retrievals-on-raw-swiss-c-band-data"]], "Reading the data": [[1392, "reading-the-data"]], "Ground-clutter and noise removal": [[1392, "ground-clutter-and-noise-removal"]], "Attenuation correction": [[1392, "attenuation-correction"]], "KDP estimation": [[1392, "kdp-estimation"]], "Hydrometeor classification": [[1392, "hydrometeor-classification"]], "QPE": [[1392, "qpe"]], "The Py-ART Radar object and indexing": [[1393, "the-py-art-radar-object-and-indexing"]], "Installation": [[1395, "installation"]], "Required Dependencies": [[1395, "required-dependencies"]], "Optional Dependencies": [[1395, "optional-dependencies"]], "Obtaining the latest source": [[1395, "obtaining-the-latest-source"]], "Installing from Source": [[1395, "installing-from-source"]], "Frequently asked questions": [[1395, "frequently-asked-questions"]], "Contributor\u2019s Guide": [[1396, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[1396, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[1396, "important-links"]], "Citing": [[1396, "citing"]], "Resources": [[1396, "resources"]], "Code Style": [[1396, "code-style"]], "Python File Setup": [[1396, "python-file-setup"]], "Testing": [[1396, "testing"]], "GitHub": [[1396, "github"]], "Blog Posts": [[1396, "blog-posts"]], "User Guide": [[1397, "user-guide"]], "Setting up an Environment": [[1398, "setting-up-an-environment"]], "Anaconda": [[1398, "anaconda"]], "Setting a Channel": [[1398, "setting-a-channel"]], "Creating an Environment": [[1398, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[1398, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[1398, "more-information"]]}, "indexentries": {"extract_sweeps_skyecho() (in module pyart.aux_io)": [[0, "pyart.aux_io.extract_sweeps_skyecho"], [603, "pyart.aux_io.extract_sweeps_skyecho"]], "get_sweep_time_coverage() (in module pyart.aux_io)": [[1, "pyart.aux_io.get_sweep_time_coverage"], [605, "pyart.aux_io.get_sweep_time_coverage"]], "read_bin() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_bin"], [606, "pyart.aux_io.read_bin"]], "read_bin_mf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_bin_mf"], [607, "pyart.aux_io.read_bin_mf"]], "read_cartesian_metranet() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_cartesian_metranet"], [608, "pyart.aux_io.read_cartesian_metranet"]], "read_cf1() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_cf1"], [609, "pyart.aux_io.read_cf1"]], "read_cf1_cartesian() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_cf1_cartesian"], [610, "pyart.aux_io.read_cf1_cartesian"]], "read_cf1_cartesian_mf() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_cf1_cartesian_mf"], [611, "pyart.aux_io.read_cf1_cartesian_mf"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_d3r_gcpex_nc"], [612, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_dat_mf() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_dat_mf"], [613, "pyart.aux_io.read_dat_mf"]], "read_gamic() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_gamic"], [617, "pyart.aux_io.read_gamic"]], "read_gif() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_gif"], [618, "pyart.aux_io.read_gif"]], "read_grib() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_grib"], [619, "pyart.aux_io.read_grib"]], "read_hpl() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_hpl"], [620, "pyart.aux_io.read_hpl"]], "read_iq() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_iq"], [621, "pyart.aux_io.read_iq"]], "read_kazr() (in module pyart.aux_io)": [[15, "pyart.aux_io.read_kazr"], [622, "pyart.aux_io.read_kazr"]], "read_metranet() (in module pyart.aux_io)": [[16, "pyart.aux_io.read_metranet"], [625, "pyart.aux_io.read_metranet"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[17, "pyart.aux_io.read_noxp_iphex_nc"], [626, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_grid_h5() (in module pyart.aux_io)": [[18, "pyart.aux_io.read_odim_grid_h5"], [627, "pyart.aux_io.read_odim_grid_h5"]], "read_odim_h5() (in module pyart.aux_io)": [[19, "pyart.aux_io.read_odim_h5"], [628, "pyart.aux_io.read_odim_h5"]], "read_odim_vp_h5() (in module pyart.aux_io)": [[20, "pyart.aux_io.read_odim_vp_h5"], [629, "pyart.aux_io.read_odim_vp_h5"]], "read_pattern() (in module pyart.aux_io)": [[21, "pyart.aux_io.read_pattern"], [630, "pyart.aux_io.read_pattern"]], "read_png() (in module pyart.aux_io)": [[22, "pyart.aux_io.read_png"], [631, "pyart.aux_io.read_png"]], "read_radx() (in module pyart.aux_io)": [[23, "pyart.aux_io.read_radx"], [637, "pyart.aux_io.read_radx"]], "read_rainbow_psr() (in module pyart.aux_io)": [[24, "pyart.aux_io.read_rainbow_psr"], [638, "pyart.aux_io.read_rainbow_psr"]], "read_rainbow_psr_spectra() (in module pyart.aux_io)": [[25, "pyart.aux_io.read_rainbow_psr_spectra"], [639, "pyart.aux_io.read_rainbow_psr_spectra"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[26, "pyart.aux_io.read_rainbow_wrl"], [640, "pyart.aux_io.read_rainbow_wrl"]], "read_skyecho() (in module pyart.aux_io)": [[27, "pyart.aux_io.read_skyecho"], [642, "pyart.aux_io.read_skyecho"]], "read_spectra() (in module pyart.aux_io)": [[28, "pyart.aux_io.read_spectra"], [643, "pyart.aux_io.read_spectra"]], "read_swissbirdradar_spectra() (in module pyart.aux_io)": [[29, "pyart.aux_io.read_swissbirdradar_spectra"], [644, "pyart.aux_io.read_swissbirdradar_spectra"]], "write_odim_grid_h5() (in module pyart.aux_io)": [[30, "pyart.aux_io.write_odim_grid_h5"], [645, "pyart.aux_io.write_odim_grid_h5"]], "write_odim_h5() (in module pyart.aux_io)": [[31, "pyart.aux_io.write_odim_h5"], [646, "pyart.aux_io.write_odim_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[32, "pyart.aux_io.write_sinarame_cfradial"], [647, "pyart.aux_io.write_sinarame_cfradial"]], "write_spectra() (in module pyart.aux_io)": [[33, "pyart.aux_io.write_spectra"], [648, "pyart.aux_io.write_spectra"]], "texture_of_complex_phase() (in module pyart.bridge)": [[34, "pyart.bridge.texture_of_complex_phase"], [650, "pyart.bridge.texture_of_complex_phase"]], "filemetadata (class in pyart.config)": [[35, "pyart.config.FileMetadata"], [652, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[36, "pyart.config.FileMetadata.__call__"], [653, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[37, "pyart.config.FileMetadata.get_field_name"], [654, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[38, "pyart.config.FileMetadata.get_metadata"], [655, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[39, "pyart.config.get_field_colormap"], [657, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[40, "pyart.config.get_field_limits"], [658, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[41, "pyart.config.get_field_mapping"], [659, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[42, "pyart.config.get_field_name"], [660, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[43, "pyart.config.get_fillvalue"], [661, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[44, "pyart.config.get_metadata"], [662, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[45, "pyart.config.load_config"], [663, "pyart.config.load_config"]], "grid (class in pyart.core)": [[46, "pyart.core.Grid"], [665, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[47, "pyart.core.Grid.add_field"], [666, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[48, "pyart.core.Grid.get_point_longitude_latitude"], [667, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[49, "pyart.core.Grid.get_projparams"], [668, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[50, "pyart.core.Grid.init_point_altitude"], [669, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[51, "pyart.core.Grid.init_point_longitude_latitude"], [670, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[52, "pyart.core.Grid.init_point_x_y_z"], [671, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[53, "pyart.core.Grid.projection_proj"], [672, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[54, "pyart.core.Grid.to_xarray"], [673, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[55, "pyart.core.Grid.write"], [674, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[56, "pyart.core.HorizontalWindProfile"], [675, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[57, "pyart.core.HorizontalWindProfile.from_u_and_v"], [676, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[58, "pyart.core.HorizontalWindProfile.u_wind"], [677, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[59, "pyart.core.HorizontalWindProfile.v_wind"], [678, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[60, "pyart.core.Radar"], [679, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[61, "pyart.core.Radar.add_field"], [680, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[62, "pyart.core.Radar.add_field_like"], [681, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[63, "pyart.core.Radar.add_filter"], [682, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[64, "pyart.core.Radar.check_field_exists"], [683, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[65, "pyart.core.Radar.extract_sweeps"], [684, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[66, "pyart.core.Radar.get_azimuth"], [685, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[67, "pyart.core.Radar.get_elevation"], [686, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[68, "pyart.core.Radar.get_end"], [687, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[69, "pyart.core.Radar.get_field"], [688, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[70, "pyart.core.Radar.get_gate_area"], [689, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[71, "pyart.core.Radar.get_gate_lat_lon_alt"], [690, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[72, "pyart.core.Radar.get_gate_x_y_z"], [691, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[73, "pyart.core.Radar.get_nyquist_vel"], [692, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[74, "pyart.core.Radar.get_slice"], [693, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[75, "pyart.core.Radar.get_start"], [694, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[76, "pyart.core.Radar.get_start_end"], [695, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[77, "pyart.core.Radar.info"], [696, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[78, "pyart.core.Radar.init_gate_altitude"], [697, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[79, "pyart.core.Radar.init_gate_longitude_latitude"], [698, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[80, "pyart.core.Radar.init_gate_x_y_z"], [699, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[81, "pyart.core.Radar.init_rays_per_sweep"], [700, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[82, "pyart.core.Radar.iter_azimuth"], [701, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[83, "pyart.core.Radar.iter_elevation"], [702, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[84, "pyart.core.Radar.iter_end"], [703, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[85, "pyart.core.Radar.iter_field"], [704, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[86, "pyart.core.Radar.iter_slice"], [705, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[87, "pyart.core.Radar.iter_start"], [706, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[88, "pyart.core.Radar.iter_start_end"], [707, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[89, "pyart.core.RadarSpectra"], [708, "pyart.core.RadarSpectra"]], "add_field() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.add_field"], [709, "pyart.core.RadarSpectra.add_field"]], "add_field_like() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.add_field_like"], [710, "pyart.core.RadarSpectra.add_field_like"]], "add_filter() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.add_filter"], [711, "pyart.core.RadarSpectra.add_filter"]], "check_field_exists() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.check_field_exists"], [712, "pyart.core.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.extract_sweeps"], [713, "pyart.core.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.get_azimuth"], [714, "pyart.core.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.get_elevation"], [715, "pyart.core.RadarSpectra.get_elevation"]], "get_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.get_end"], [716, "pyart.core.RadarSpectra.get_end"]], "get_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.get_field"], [717, "pyart.core.RadarSpectra.get_field"]], "get_gate_area() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.get_gate_area"], [718, "pyart.core.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"], [719, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.get_gate_x_y_z"], [720, "pyart.core.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radarspectra method)": [[102, "pyart.core.RadarSpectra.get_nyquist_vel"], [721, "pyart.core.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.core.radarspectra method)": [[103, "pyart.core.RadarSpectra.get_slice"], [722, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[104, "pyart.core.RadarSpectra.get_start"], [723, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[105, "pyart.core.RadarSpectra.get_start_end"], [724, "pyart.core.RadarSpectra.get_start_end"]], "info() (pyart.core.radarspectra method)": [[106, "pyart.core.RadarSpectra.info"], [725, "pyart.core.RadarSpectra.info"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[107, "pyart.core.RadarSpectra.init_gate_altitude"], [726, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[108, "pyart.core.RadarSpectra.init_gate_longitude_latitude"], [727, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[109, "pyart.core.RadarSpectra.init_gate_x_y_z"], [728, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[110, "pyart.core.RadarSpectra.init_rays_per_sweep"], [729, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[111, "pyart.core.RadarSpectra.iter_azimuth"], [730, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[112, "pyart.core.RadarSpectra.iter_elevation"], [731, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[113, "pyart.core.RadarSpectra.iter_end"], [732, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[114, "pyart.core.RadarSpectra.iter_field"], [733, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[115, "pyart.core.RadarSpectra.iter_slice"], [734, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[116, "pyart.core.RadarSpectra.iter_start"], [735, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.iter_start_end"], [736, "pyart.core.RadarSpectra.iter_start_end"]], "antenna_to_cartesian() (in module pyart.core)": [[118, "pyart.core.antenna_to_cartesian"], [737, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_vectors_to_cartesian"], [738, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[120, "pyart.core.cartesian_to_antenna"], [739, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"], [740, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"], [741, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"], [742, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"], [743, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"], [744, "pyart.core.geographic_to_cartesian_aeqd"]], "wgs84_to_swissch1903() (in module pyart.core)": [[126, "pyart.core.wgs84_to_swissCH1903"], [745, "pyart.core.wgs84_to_swissCH1903"]], "calculate_attenuation() (in module pyart.correct)": [[127, "pyart.correct.calculate_attenuation"], [775, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[128, "pyart.correct.calculate_attenuation_philinear"], [776, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[129, "pyart.correct.calculate_attenuation_zphi"], [777, "pyart.correct.calculate_attenuation_zphi"]], "compute_apparent_vpr() (in module pyart.correct)": [[130, "pyart.correct.compute_apparent_vpr"], [778, "pyart.correct.compute_apparent_vpr"]], "compute_theoretical_vpr() (in module pyart.correct)": [[131, "pyart.correct.compute_theoretical_vpr"], [779, "pyart.correct.compute_theoretical_vpr"]], "correct_bias() (in module pyart.correct)": [[132, "pyart.correct.correct_bias"], [780, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[133, "pyart.correct.correct_noise_rhohv"], [781, "pyart.correct.correct_noise_rhohv"]], "correct_sys_phase() (in module pyart.correct)": [[134, "pyart.correct.correct_sys_phase"], [782, "pyart.correct.correct_sys_phase"]], "correct_visibility() (in module pyart.correct)": [[135, "pyart.correct.correct_visibility"], [783, "pyart.correct.correct_visibility"]], "correct_vpr() (in module pyart.correct)": [[136, "pyart.correct.correct_vpr"], [784, "pyart.correct.correct_vpr"]], "correct_vpr_spatialised() (in module pyart.correct)": [[137, "pyart.correct.correct_vpr_spatialised"], [785, "pyart.correct.correct_vpr_spatialised"]], "dealias_fourdd() (in module pyart.correct)": [[138, "pyart.correct.dealias_fourdd"], [786, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[139, "pyart.correct.dealias_region_based"], [787, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[140, "pyart.correct.dealias_unwrap_phase"], [788, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[141, "pyart.correct.despeckle_field"], [789, "pyart.correct.despeckle_field"]], "det_sys_phase_ray() (in module pyart.correct)": [[142, "pyart.correct.det_sys_phase_ray"], [790, "pyart.correct.det_sys_phase_ray"]], "est_rhohv_rain() (in module pyart.correct)": [[143, "pyart.correct.est_rhohv_rain"], [791, "pyart.correct.est_rhohv_rain"]], "est_zdr_precip() (in module pyart.correct)": [[144, "pyart.correct.est_zdr_precip"], [792, "pyart.correct.est_zdr_precip"]], "est_zdr_snow() (in module pyart.correct)": [[145, "pyart.correct.est_zdr_snow"], [793, "pyart.correct.est_zdr_snow"]], "find_objects() (in module pyart.correct)": [[146, "pyart.correct.find_objects"], [794, "pyart.correct.find_objects"]], "get_mask_fzl() (in module pyart.correct)": [[147, "pyart.correct.get_mask_fzl"], [796, "pyart.correct.get_mask_fzl"]], "get_sun_hits() (in module pyart.correct)": [[148, "pyart.correct.get_sun_hits"], [797, "pyart.correct.get_sun_hits"]], "get_sun_hits_ivic() (in module pyart.correct)": [[149, "pyart.correct.get_sun_hits_ivic"], [798, "pyart.correct.get_sun_hits_ivic"]], "get_sun_hits_psr() (in module pyart.correct)": [[150, "pyart.correct.get_sun_hits_psr"], [799, "pyart.correct.get_sun_hits_psr"]], "phase_proc_lp() (in module pyart.correct)": [[151, "pyart.correct.phase_proc_lp"], [801, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[152, "pyart.correct.phase_proc_lp_gf"], [802, "pyart.correct.phase_proc_lp_gf"]], "ptoa_to_sf() (in module pyart.correct)": [[153, "pyart.correct.ptoa_to_sf"], [803, "pyart.correct.ptoa_to_sf"]], "scanning_losses() (in module pyart.correct)": [[154, "pyart.correct.scanning_losses"], [805, "pyart.correct.scanning_losses"]], "selfconsistency_bias() (in module pyart.correct)": [[155, "pyart.correct.selfconsistency_bias"], [806, "pyart.correct.selfconsistency_bias"]], "selfconsistency_bias2() (in module pyart.correct)": [[156, "pyart.correct.selfconsistency_bias2"], [807, "pyart.correct.selfconsistency_bias2"]], "selfconsistency_kdp_phidp() (in module pyart.correct)": [[157, "pyart.correct.selfconsistency_kdp_phidp"], [808, "pyart.correct.selfconsistency_kdp_phidp"]], "smooth_masked() (in module pyart.correct)": [[158, "pyart.correct.smooth_masked"], [809, "pyart.correct.smooth_masked"]], "smooth_phidp_double_window() (in module pyart.correct)": [[159, "pyart.correct.smooth_phidp_double_window"], [810, "pyart.correct.smooth_phidp_double_window"]], "smooth_phidp_single_window() (in module pyart.correct)": [[160, "pyart.correct.smooth_phidp_single_window"], [811, "pyart.correct.smooth_phidp_single_window"]], "solar_flux_lookup() (in module pyart.correct)": [[161, "pyart.correct.solar_flux_lookup"], [812, "pyart.correct.solar_flux_lookup"]], "sun_position_mfr() (in module pyart.correct)": [[162, "pyart.correct.sun_position_mfr"], [813, "pyart.correct.sun_position_mfr"]], "sun_position_pysolar() (in module pyart.correct)": [[163, "pyart.correct.sun_position_pysolar"], [814, "pyart.correct.sun_position_pysolar"]], "sun_power() (in module pyart.correct)": [[164, "pyart.correct.sun_power"], [815, "pyart.correct.sun_power"]], "sun_retrieval() (in module pyart.correct)": [[165, "pyart.correct.sun_retrieval"], [816, "pyart.correct.sun_retrieval"]], "deprecatedattribute": [[166, "pyart.exceptions.DeprecatedAttribute"]], "deprecatedfunctionname": [[167, "pyart.exceptions.DeprecatedFunctionName"]], "missingoptionaldependency": [[168, "pyart.exceptions.MissingOptionalDependency"]], "_deprecated_alias() (in module pyart.exceptions)": [[169, "pyart.exceptions._deprecated_alias"]], "gatefilter (class in pyart.filters)": [[170, "pyart.filters.GateFilter"], [819, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.copy"], [820, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_above"], [821, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_all"], [822, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_below"], [823, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_equal"], [824, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_gates"], [825, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_inside"], [826, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_invalid"], [827, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_masked"], [828, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_none"], [829, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_not_equal"], [830, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_outside"], [831, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_transition"], [832, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[184, "pyart.filters.GateFilter.gate_excluded"], [833, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[185, "pyart.filters.GateFilter.gate_included"], [834, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_above"], [835, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_all"], [836, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_below"], [837, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_equal"], [838, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_gates"], [839, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_inside"], [840, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_none"], [841, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_not_equal"], [842, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_not_masked"], [843, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_not_transition"], [844, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_outside"], [845, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_valid"], [846, "pyart.filters.GateFilter.include_valid"]], "birds_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.birds_gate_filter"], [847, "pyart.filters.birds_gate_filter"]], "class_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.class_based_gate_filter"], [848, "pyart.filters.class_based_gate_filter"]], "iso0_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.iso0_based_gate_filter"], [849, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[201, "pyart.filters.moment_and_texture_based_gate_filter"], [850, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[202, "pyart.filters.moment_based_gate_filter"], [851, "pyart.filters.moment_based_gate_filter"]], "snr_based_gate_filter() (in module pyart.filters)": [[203, "pyart.filters.snr_based_gate_filter"], [852, "pyart.filters.snr_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[204, "pyart.filters.temp_based_gate_filter"], [853, "pyart.filters.temp_based_gate_filter"]], "visibility_based_gate_filter() (in module pyart.filters)": [[205, "pyart.filters.visibility_based_gate_filter"], [854, "pyart.filters.visibility_based_gate_filter"]], "airborneradardisplay (class in pyart.graph)": [[206, "pyart.graph.AirborneRadarDisplay"], [856, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"], [857, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_filename"], [858, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.generate_ray_title"], [859, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[210, "pyart.graph.AirborneRadarDisplay.generate_title"], [860, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"], [861, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"], [862, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"], [863, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[214, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"], [864, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[215, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"], [865, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"], [866, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"], [867, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"], [868, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"], [869, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[220, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"], [870, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[221, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"], [871, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot"], [872, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"], [873, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_colorbar"], [874, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"], [875, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"], [876, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"], [877, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_label"], [878, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_labels"], [879, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_ppi"], [880, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_range_ring"], [881, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_range_rings"], [882, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[233, "pyart.graph.AirborneRadarDisplay.plot_ray"], [883, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[234, "pyart.graph.AirborneRadarDisplay.plot_rhi"], [884, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[235, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"], [885, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[236, "pyart.graph.AirborneRadarDisplay.plot_vpt"], [886, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.airborneradardisplay method)": [[237, "pyart.graph.AirborneRadarDisplay.plot_xsection"], [887, "pyart.graph.AirborneRadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[238, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"], [888, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[239, "pyart.graph.AirborneRadarDisplay.set_limits"], [889, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[240, "pyart.graph.GridMapDisplay"], [890, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.cartopy_coastlines"], [891, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"], [892, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.cartopy_states"], [893, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.generate_filename"], [894, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.generate_grid_title"], [895, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"], [896, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"], [897, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_colorbar"], [898, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.plot_cross_section"], [899, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_cross_section_level() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.plot_cross_section_level"], [900, "pyart.graph.GridMapDisplay.plot_cross_section_level"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_crosshairs"], [901, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_grid"], [902, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_grid_contour() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_grid_contour"], [903, "pyart.graph.GridMapDisplay.plot_grid_contour"]], "plot_grid_raw() (pyart.graph.gridmapdisplay method)": [[254, "pyart.graph.GridMapDisplay.plot_grid_raw"], [904, "pyart.graph.GridMapDisplay.plot_grid_raw"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[255, "pyart.graph.GridMapDisplay.plot_latitude_slice"], [905, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[256, "pyart.graph.GridMapDisplay.plot_latitudinal_level"], [906, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[257, "pyart.graph.GridMapDisplay.plot_longitude_slice"], [907, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[258, "pyart.graph.GridMapDisplay.plot_longitudinal_level"], [908, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[259, "pyart.graph.GridMapDisplayBasemap"], [909, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.generate_filename"], [910, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"], [911, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"], [912, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"], [913, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.get_basemap"], [914, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.plot_basemap"], [915, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"], [916, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"], [917, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[268, "pyart.graph.GridMapDisplayBasemap.plot_grid"], [918, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[269, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"], [919, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[270, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"], [920, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[271, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"], [921, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[272, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"], [922, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[273, "pyart.graph.RadarDisplay"], [923, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.generate_az_rhi_title"], [924, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.generate_filename"], [925, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.generate_ray_title"], [926, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.generate_title"], [927, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.generate_vpt_title"], [928, "pyart.graph.RadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.generate_xsection_title"], [929, "pyart.graph.RadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.label_xaxis_r"], [930, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.label_xaxis_rays"], [931, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[282, "pyart.graph.RadarDisplay.label_xaxis_time"], [932, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.label_xaxis_x"], [933, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.label_xaxis_xsection"], [934, "pyart.graph.RadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.label_yaxis_field"], [935, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.label_yaxis_xsection"], [936, "pyart.graph.RadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.label_yaxis_y"], [937, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.label_yaxis_z"], [938, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot"], [939, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[290, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"], [940, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[291, "pyart.graph.RadarDisplay.plot_colorbar"], [941, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[292, "pyart.graph.RadarDisplay.plot_cr_raster"], [942, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[293, "pyart.graph.RadarDisplay.plot_cross_hair"], [943, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[294, "pyart.graph.RadarDisplay.plot_grid_lines"], [944, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[295, "pyart.graph.RadarDisplay.plot_label"], [945, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[296, "pyart.graph.RadarDisplay.plot_labels"], [946, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[297, "pyart.graph.RadarDisplay.plot_ppi"], [947, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[298, "pyart.graph.RadarDisplay.plot_range_ring"], [948, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[299, "pyart.graph.RadarDisplay.plot_range_rings"], [949, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[300, "pyart.graph.RadarDisplay.plot_ray"], [950, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[301, "pyart.graph.RadarDisplay.plot_rhi"], [951, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[302, "pyart.graph.RadarDisplay.plot_vpt"], [952, "pyart.graph.RadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radardisplay method)": [[303, "pyart.graph.RadarDisplay.plot_xsection"], [953, "pyart.graph.RadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[304, "pyart.graph.RadarDisplay.set_aspect_ratio"], [954, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[305, "pyart.graph.RadarDisplay.set_limits"], [955, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[306, "pyart.graph.RadarMapDisplay"], [956, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"], [957, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.generate_filename"], [958, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.generate_ray_title"], [959, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.generate_title"], [960, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.generate_vpt_title"], [961, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.generate_xsection_title"], [962, "pyart.graph.RadarMapDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.label_xaxis_r"], [963, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[314, "pyart.graph.RadarMapDisplay.label_xaxis_rays"], [964, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[315, "pyart.graph.RadarMapDisplay.label_xaxis_time"], [965, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.label_xaxis_x"], [966, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"], [967, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.label_yaxis_field"], [968, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"], [969, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.label_yaxis_y"], [970, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.label_yaxis_z"], [971, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot"], [972, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"], [973, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_colorbar"], [974, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[325, "pyart.graph.RadarMapDisplay.plot_cr_raster"], [975, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[326, "pyart.graph.RadarMapDisplay.plot_cross_hair"], [976, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[327, "pyart.graph.RadarMapDisplay.plot_grid_lines"], [977, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[328, "pyart.graph.RadarMapDisplay.plot_label"], [978, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[329, "pyart.graph.RadarMapDisplay.plot_labels"], [979, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[330, "pyart.graph.RadarMapDisplay.plot_line_geo"], [980, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[331, "pyart.graph.RadarMapDisplay.plot_line_xy"], [981, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[332, "pyart.graph.RadarMapDisplay.plot_point"], [982, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[333, "pyart.graph.RadarMapDisplay.plot_ppi"], [983, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[334, "pyart.graph.RadarMapDisplay.plot_ppi_map"], [984, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[335, "pyart.graph.RadarMapDisplay.plot_range_ring"], [985, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[336, "pyart.graph.RadarMapDisplay.plot_range_rings"], [986, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[337, "pyart.graph.RadarMapDisplay.plot_ray"], [987, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[338, "pyart.graph.RadarMapDisplay.plot_rhi"], [988, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[339, "pyart.graph.RadarMapDisplay.plot_vpt"], [989, "pyart.graph.RadarMapDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplay method)": [[340, "pyart.graph.RadarMapDisplay.plot_xsection"], [990, "pyart.graph.RadarMapDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[341, "pyart.graph.RadarMapDisplay.set_aspect_ratio"], [991, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[342, "pyart.graph.RadarMapDisplay.set_limits"], [992, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[343, "pyart.graph.RadarMapDisplayBasemap"], [993, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"], [994, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.generate_filename"], [995, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"], [996, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.generate_title"], [997, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"], [998, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"], [999, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"], [1000, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[351, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"], [1001, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[352, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"], [1002, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"], [1003, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"], [1004, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"], [1005, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"], [1006, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"], [1007, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"], [1008, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot"], [1009, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"], [1010, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[361, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"], [1011, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[362, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"], [1012, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[363, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"], [1013, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[364, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"], [1014, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[365, "pyart.graph.RadarMapDisplayBasemap.plot_label"], [1015, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[366, "pyart.graph.RadarMapDisplayBasemap.plot_labels"], [1016, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[367, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"], [1017, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[368, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"], [1018, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[369, "pyart.graph.RadarMapDisplayBasemap.plot_point"], [1019, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[370, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"], [1020, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[371, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"], [1021, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[372, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"], [1022, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[373, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"], [1023, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[374, "pyart.graph.RadarMapDisplayBasemap.plot_ray"], [1024, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[375, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"], [1025, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[376, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"], [1026, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[377, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"], [1027, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[378, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"], [1028, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[379, "pyart.graph.RadarMapDisplayBasemap.set_limits"], [1029, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "make_time_unit_str() (in module pyart.io)": [[380, "pyart.io.make_time_unit_str"], [1033, "pyart.io.make_time_unit_str"]], "prepare_for_read() (in module pyart.io)": [[381, "pyart.io.prepare_for_read"], [1034, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[382, "pyart.io.read"], [1035, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[383, "pyart.io.read_arm_sonde"], [1036, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[384, "pyart.io.read_arm_sonde_vap"], [1037, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[385, "pyart.io.read_cfradial"], [1038, "pyart.io.read_cfradial"]], "read_cfradial2() (in module pyart.io)": [[386, "pyart.io.read_cfradial2"], [1039, "pyart.io.read_cfradial2"]], "read_chl() (in module pyart.io)": [[387, "pyart.io.read_chl"], [1040, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[388, "pyart.io.read_grid"], [1041, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[389, "pyart.io.read_grid_mdv"], [1042, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[390, "pyart.io.read_mdv"], [1043, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[391, "pyart.io.read_nexrad_archive"], [1044, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[392, "pyart.io.read_nexrad_cdm"], [1045, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[393, "pyart.io.read_nexrad_level3"], [1046, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[394, "pyart.io.read_rsl"], [1047, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[395, "pyart.io.read_sigmet"], [1048, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[396, "pyart.io.read_uf"], [1049, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[397, "pyart.io.write_cfradial"], [1050, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[398, "pyart.io.write_grid"], [1051, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[399, "pyart.io.write_grid_geotiff"], [1052, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[400, "pyart.io.write_grid_mdv"], [1053, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[401, "pyart.io.write_uf"], [1054, "pyart.io.write_uf"]], "lazyloaddict (class in pyart.lazydict)": [[402, "pyart.lazydict.LazyLoadDict"], [1056, "pyart.lazydict.LazyLoadDict"]], "__contains__() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.__contains__"]], "__delattr__() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.__delattr__"]], "__delitem__() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.__delitem__"]], "__dir__() (pyart.lazydict.lazyloaddict method)": [[406, "pyart.lazydict.LazyLoadDict.__dir__"]], "__eq__() (pyart.lazydict.lazyloaddict method)": [[407, "pyart.lazydict.LazyLoadDict.__eq__"]], "__format__() (pyart.lazydict.lazyloaddict method)": [[408, "pyart.lazydict.LazyLoadDict.__format__"]], "__ge__() (pyart.lazydict.lazyloaddict method)": [[409, "pyart.lazydict.LazyLoadDict.__ge__"]], "__getattribute__() (pyart.lazydict.lazyloaddict method)": [[410, "pyart.lazydict.LazyLoadDict.__getattribute__"]], "__getitem__() (pyart.lazydict.lazyloaddict method)": [[411, "pyart.lazydict.LazyLoadDict.__getitem__"]], "__getstate__() (pyart.lazydict.lazyloaddict method)": [[412, "pyart.lazydict.LazyLoadDict.__getstate__"]], "__gt__() (pyart.lazydict.lazyloaddict method)": [[413, "pyart.lazydict.LazyLoadDict.__gt__"]], "__init__() (pyart.lazydict.lazyloaddict method)": [[414, "pyart.lazydict.LazyLoadDict.__init__"]], "__init_subclass__() (pyart.lazydict.lazyloaddict method)": [[415, "pyart.lazydict.LazyLoadDict.__init_subclass__"]], "__iter__() (pyart.lazydict.lazyloaddict method)": [[416, "pyart.lazydict.LazyLoadDict.__iter__"]], "__le__() (pyart.lazydict.lazyloaddict method)": [[417, "pyart.lazydict.LazyLoadDict.__le__"]], "__len__() (pyart.lazydict.lazyloaddict method)": [[418, "pyart.lazydict.LazyLoadDict.__len__"]], "__lt__() (pyart.lazydict.lazyloaddict method)": [[419, "pyart.lazydict.LazyLoadDict.__lt__"]], "__ne__() (pyart.lazydict.lazyloaddict method)": [[420, "pyart.lazydict.LazyLoadDict.__ne__"]], "__new__() (pyart.lazydict.lazyloaddict method)": [[421, "pyart.lazydict.LazyLoadDict.__new__"]], "__reduce__() (pyart.lazydict.lazyloaddict method)": [[422, "pyart.lazydict.LazyLoadDict.__reduce__"]], "__reduce_ex__() (pyart.lazydict.lazyloaddict method)": [[423, "pyart.lazydict.LazyLoadDict.__reduce_ex__"]], "__repr__() (pyart.lazydict.lazyloaddict method)": [[424, "pyart.lazydict.LazyLoadDict.__repr__"]], "__setattr__() (pyart.lazydict.lazyloaddict method)": [[425, "pyart.lazydict.LazyLoadDict.__setattr__"]], "__setitem__() (pyart.lazydict.lazyloaddict method)": [[426, "pyart.lazydict.LazyLoadDict.__setitem__"]], "__sizeof__() (pyart.lazydict.lazyloaddict method)": [[427, "pyart.lazydict.LazyLoadDict.__sizeof__"]], "__str__() (pyart.lazydict.lazyloaddict method)": [[428, "pyart.lazydict.LazyLoadDict.__str__"]], "__subclasshook__() (pyart.lazydict.lazyloaddict class method)": [[429, "pyart.lazydict.LazyLoadDict.__subclasshook__"]], "clear() (pyart.lazydict.lazyloaddict method)": [[430, "pyart.lazydict.LazyLoadDict.clear"], [1057, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[431, "pyart.lazydict.LazyLoadDict.copy"], [1058, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[432, "pyart.lazydict.LazyLoadDict.get"], [1059, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[433, "pyart.lazydict.LazyLoadDict.has_key"], [1060, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[434, "pyart.lazydict.LazyLoadDict.items"], [1061, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[435, "pyart.lazydict.LazyLoadDict.keys"], [1062, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[436, "pyart.lazydict.LazyLoadDict.pop"], [1063, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[437, "pyart.lazydict.LazyLoadDict.popitem"], [1064, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[438, "pyart.lazydict.LazyLoadDict.set_lazy"], [1065, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[439, "pyart.lazydict.LazyLoadDict.setdefault"], [1066, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[440, "pyart.lazydict.LazyLoadDict.update"], [1067, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[441, "pyart.lazydict.LazyLoadDict.values"], [1068, "pyart.lazydict.LazyLoadDict.values"]], "_destandardize() (in module pyart.retrieve)": [[442, "pyart.retrieve._destandardize"]], "_get_res_vol_sides() (in module pyart.retrieve)": [[443, "pyart.retrieve._get_res_vol_sides"]], "atmospheric_gas_att() (in module pyart.retrieve)": [[444, "pyart.retrieve.atmospheric_gas_att"], [1095, "pyart.retrieve.atmospheric_gas_att"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[445, "pyart.retrieve.calculate_snr_from_reflectivity"], [1096, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[446, "pyart.retrieve.calculate_velocity_texture"], [1097, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[447, "pyart.retrieve.composite_reflectivity"], [1098, "pyart.retrieve.composite_reflectivity"]], "compute_doppler_velocity() (in module pyart.retrieve)": [[448, "pyart.retrieve.compute_Doppler_velocity"], [1099, "pyart.retrieve.compute_Doppler_velocity"]], "compute_doppler_velocity_iq() (in module pyart.retrieve)": [[449, "pyart.retrieve.compute_Doppler_velocity_iq"], [1100, "pyart.retrieve.compute_Doppler_velocity_iq"]], "compute_doppler_width() (in module pyart.retrieve)": [[450, "pyart.retrieve.compute_Doppler_width"], [1101, "pyart.retrieve.compute_Doppler_width"]], "compute_doppler_width_iq() (in module pyart.retrieve)": [[451, "pyart.retrieve.compute_Doppler_width_iq"], [1102, "pyart.retrieve.compute_Doppler_width_iq"]], "compute_apparent_profile() (in module pyart.retrieve)": [[452, "pyart.retrieve.compute_apparent_profile"], [1103, "pyart.retrieve.compute_apparent_profile"]], "compute_bird_density() (in module pyart.retrieve)": [[453, "pyart.retrieve.compute_bird_density"], [1104, "pyart.retrieve.compute_bird_density"]], "compute_ccor() (in module pyart.retrieve)": [[454, "pyart.retrieve.compute_ccor"], [1105, "pyart.retrieve.compute_ccor"]], "compute_cdr() (in module pyart.retrieve)": [[455, "pyart.retrieve.compute_cdr"], [1106, "pyart.retrieve.compute_cdr"]], "compute_centroids() (in module pyart.retrieve)": [[456, "pyart.retrieve.compute_centroids"], [1107, "pyart.retrieve.compute_centroids"]], "compute_differential_phase() (in module pyart.retrieve)": [[457, "pyart.retrieve.compute_differential_phase"], [1108, "pyart.retrieve.compute_differential_phase"]], "compute_differential_phase_iq() (in module pyart.retrieve)": [[458, "pyart.retrieve.compute_differential_phase_iq"], [1109, "pyart.retrieve.compute_differential_phase_iq"]], "compute_differential_reflectivity() (in module pyart.retrieve)": [[459, "pyart.retrieve.compute_differential_reflectivity"], [1110, "pyart.retrieve.compute_differential_reflectivity"]], "compute_differential_reflectivity_iq() (in module pyart.retrieve)": [[460, "pyart.retrieve.compute_differential_reflectivity_iq"], [1111, "pyart.retrieve.compute_differential_reflectivity_iq"]], "compute_evp() (in module pyart.retrieve)": [[461, "pyart.retrieve.compute_evp"], [1112, "pyart.retrieve.compute_evp"]], "compute_iq() (in module pyart.retrieve)": [[462, "pyart.retrieve.compute_iq"], [1113, "pyart.retrieve.compute_iq"]], "compute_l() (in module pyart.retrieve)": [[463, "pyart.retrieve.compute_l"], [1114, "pyart.retrieve.compute_l"]], "compute_mean_phase_iq() (in module pyart.retrieve)": [[464, "pyart.retrieve.compute_mean_phase_iq"], [1115, "pyart.retrieve.compute_mean_phase_iq"]], "compute_noise_power() (in module pyart.retrieve)": [[465, "pyart.retrieve.compute_noise_power"], [1116, "pyart.retrieve.compute_noise_power"]], "compute_noisedbz() (in module pyart.retrieve)": [[466, "pyart.retrieve.compute_noisedBZ"], [1117, "pyart.retrieve.compute_noisedBZ"]], "compute_pol_variables() (in module pyart.retrieve)": [[467, "pyart.retrieve.compute_pol_variables"], [1118, "pyart.retrieve.compute_pol_variables"]], "compute_pol_variables_iq() (in module pyart.retrieve)": [[468, "pyart.retrieve.compute_pol_variables_iq"], [1119, "pyart.retrieve.compute_pol_variables_iq"]], "compute_qvp() (in module pyart.retrieve)": [[469, "pyart.retrieve.compute_qvp"], [1120, "pyart.retrieve.compute_qvp"]], "compute_radial_noise_hs() (in module pyart.retrieve)": [[470, "pyart.retrieve.compute_radial_noise_hs"], [1121, "pyart.retrieve.compute_radial_noise_hs"]], "compute_radial_noise_ivic() (in module pyart.retrieve)": [[471, "pyart.retrieve.compute_radial_noise_ivic"], [1122, "pyart.retrieve.compute_radial_noise_ivic"]], "compute_rcs() (in module pyart.retrieve)": [[472, "pyart.retrieve.compute_rcs"], [1123, "pyart.retrieve.compute_rcs"]], "compute_rcs_from_pr() (in module pyart.retrieve)": [[473, "pyart.retrieve.compute_rcs_from_pr"], [1124, "pyart.retrieve.compute_rcs_from_pr"]], "compute_refl_from_zdr() (in module pyart.retrieve)": [[474, "pyart.retrieve.compute_refl_from_zdr"], [1125, "pyart.retrieve.compute_refl_from_zdr"]], "compute_reflectivity() (in module pyart.retrieve)": [[475, "pyart.retrieve.compute_reflectivity"], [1126, "pyart.retrieve.compute_reflectivity"]], "compute_reflectivity_iq() (in module pyart.retrieve)": [[476, "pyart.retrieve.compute_reflectivity_iq"], [1127, "pyart.retrieve.compute_reflectivity_iq"]], "compute_rhohv() (in module pyart.retrieve)": [[477, "pyart.retrieve.compute_rhohv"], [1128, "pyart.retrieve.compute_rhohv"]], "compute_rhohv_iq() (in module pyart.retrieve)": [[478, "pyart.retrieve.compute_rhohv_iq"], [1129, "pyart.retrieve.compute_rhohv_iq"]], "compute_rqvp() (in module pyart.retrieve)": [[479, "pyart.retrieve.compute_rqvp"], [1130, "pyart.retrieve.compute_rqvp"]], "compute_signal_power() (in module pyart.retrieve)": [[480, "pyart.retrieve.compute_signal_power"], [1131, "pyart.retrieve.compute_signal_power"]], "compute_snr() (in module pyart.retrieve)": [[481, "pyart.retrieve.compute_snr"], [1132, "pyart.retrieve.compute_snr"]], "compute_spectra() (in module pyart.retrieve)": [[482, "pyart.retrieve.compute_spectra"], [1133, "pyart.retrieve.compute_spectra"]], "compute_spectral_differential_phase() (in module pyart.retrieve)": [[483, "pyart.retrieve.compute_spectral_differential_phase"], [1134, "pyart.retrieve.compute_spectral_differential_phase"]], "compute_spectral_differential_reflectivity() (in module pyart.retrieve)": [[484, "pyart.retrieve.compute_spectral_differential_reflectivity"], [1135, "pyart.retrieve.compute_spectral_differential_reflectivity"]], "compute_spectral_noise() (in module pyart.retrieve)": [[485, "pyart.retrieve.compute_spectral_noise"], [1136, "pyart.retrieve.compute_spectral_noise"]], "compute_spectral_phase() (in module pyart.retrieve)": [[486, "pyart.retrieve.compute_spectral_phase"], [1137, "pyart.retrieve.compute_spectral_phase"]], "compute_spectral_power() (in module pyart.retrieve)": [[487, "pyart.retrieve.compute_spectral_power"], [1138, "pyart.retrieve.compute_spectral_power"]], "compute_spectral_reflectivity() (in module pyart.retrieve)": [[488, "pyart.retrieve.compute_spectral_reflectivity"], [1139, "pyart.retrieve.compute_spectral_reflectivity"]], "compute_spectral_rhohv() (in module pyart.retrieve)": [[489, "pyart.retrieve.compute_spectral_rhohv"], [1140, "pyart.retrieve.compute_spectral_rhohv"]], "compute_st1_iq() (in module pyart.retrieve)": [[490, "pyart.retrieve.compute_st1_iq"], [1141, "pyart.retrieve.compute_st1_iq"]], "compute_st2_iq() (in module pyart.retrieve)": [[491, "pyart.retrieve.compute_st2_iq"], [1142, "pyart.retrieve.compute_st2_iq"]], "compute_svp() (in module pyart.retrieve)": [[492, "pyart.retrieve.compute_svp"], [1143, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[493, "pyart.retrieve.compute_ts_along_coord"], [1144, "pyart.retrieve.compute_ts_along_coord"]], "compute_vol_refl() (in module pyart.retrieve)": [[494, "pyart.retrieve.compute_vol_refl"], [1145, "pyart.retrieve.compute_vol_refl"]], "compute_vp() (in module pyart.retrieve)": [[495, "pyart.retrieve.compute_vp"], [1146, "pyart.retrieve.compute_vp"]], "compute_wbn_iq() (in module pyart.retrieve)": [[496, "pyart.retrieve.compute_wbn_iq"], [1147, "pyart.retrieve.compute_wbn_iq"]], "conv_strat_raut() (in module pyart.retrieve)": [[497, "pyart.retrieve.conv_strat_raut"], [1148, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[498, "pyart.retrieve.conv_strat_yuter"], [1149, "pyart.retrieve.conv_strat_yuter"]], "data_for_centroids() (in module pyart.retrieve)": [[499, "pyart.retrieve.data_for_centroids"], [1150, "pyart.retrieve.data_for_centroids"]], "dealias_spectra() (in module pyart.retrieve)": [[500, "pyart.retrieve.dealias_spectra"], [1151, "pyart.retrieve.dealias_spectra"]], "detect_ml() (in module pyart.retrieve)": [[501, "pyart.retrieve.detect_ml"], [1152, "pyart.retrieve.detect_ml"]], "determine_medoids() (in module pyart.retrieve)": [[502, "pyart.retrieve.determine_medoids"], [1153, "pyart.retrieve.determine_medoids"]], "est_rain_rate_a() (in module pyart.retrieve)": [[503, "pyart.retrieve.est_rain_rate_a"], [1154, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[504, "pyart.retrieve.est_rain_rate_hydro"], [1155, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[505, "pyart.retrieve.est_rain_rate_kdp"], [1156, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[506, "pyart.retrieve.est_rain_rate_z"], [1157, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[507, "pyart.retrieve.est_rain_rate_za"], [1158, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[508, "pyart.retrieve.est_rain_rate_zkdp"], [1159, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[509, "pyart.retrieve.est_rain_rate_zpoly"], [1160, "pyart.retrieve.est_rain_rate_zpoly"]], "est_vertical_windshear() (in module pyart.retrieve)": [[510, "pyart.retrieve.est_vertical_windshear"], [1161, "pyart.retrieve.est_vertical_windshear"]], "est_vertical_windshear_lidar() (in module pyart.retrieve)": [[511, "pyart.retrieve.est_vertical_windshear_lidar"], [1162, "pyart.retrieve.est_vertical_windshear_lidar"]], "est_wind_profile() (in module pyart.retrieve)": [[512, "pyart.retrieve.est_wind_profile"], [1163, "pyart.retrieve.est_wind_profile"]], "est_wind_vel() (in module pyart.retrieve)": [[513, "pyart.retrieve.est_wind_vel"], [1164, "pyart.retrieve.est_wind_vel"]], "feature_detection() (in module pyart.retrieve)": [[514, "pyart.retrieve.feature_detection"], [1165, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[515, "pyart.retrieve.fetch_radar_time_profile"], [1166, "pyart.retrieve.fetch_radar_time_profile"]], "gecsx() (in module pyart.retrieve)": [[516, "pyart.retrieve.gecsx"], [1167, "pyart.retrieve.gecsx"]], "get_coeff_attg() (in module pyart.retrieve)": [[517, "pyart.retrieve.get_coeff_attg"], [1168, "pyart.retrieve.get_coeff_attg"]], "get_freq_band() (in module pyart.retrieve)": [[518, "pyart.retrieve.get_freq_band"], [1169, "pyart.retrieve.get_freq_band"]], "get_iso0_val() (in module pyart.retrieve)": [[519, "pyart.retrieve.get_iso0_val"], [1170, "pyart.retrieve.get_iso0_val"]], "get_ml_rng_limits() (in module pyart.retrieve)": [[520, "pyart.retrieve.get_ml_rng_limits"], [1171, "pyart.retrieve.get_ml_rng_limits"]], "grid_displacement_pc() (in module pyart.retrieve)": [[521, "pyart.retrieve.grid_displacement_pc"], [1172, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[522, "pyart.retrieve.grid_shift"], [1173, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[523, "pyart.retrieve.hydroclass_semisupervised"], [1174, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_leastsquare_double_window() (in module pyart.retrieve)": [[524, "pyart.retrieve.kdp_leastsquare_double_window"], [1175, "pyart.retrieve.kdp_leastsquare_double_window"]], "kdp_leastsquare_single_window() (in module pyart.retrieve)": [[525, "pyart.retrieve.kdp_leastsquare_single_window"], [1176, "pyart.retrieve.kdp_leastsquare_single_window"]], "kdp_maesaka() (in module pyart.retrieve)": [[526, "pyart.retrieve.kdp_maesaka"], [1177, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[527, "pyart.retrieve.kdp_schneebeli"], [1178, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[528, "pyart.retrieve.kdp_vulpiani"], [1179, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[529, "pyart.retrieve.map_profile_to_gates"], [1180, "pyart.retrieve.map_profile_to_gates"]], "melting_layer_giangrande() (in module pyart.retrieve)": [[530, "pyart.retrieve.melting_layer_giangrande"], [1181, "pyart.retrieve.melting_layer_giangrande"]], "melting_layer_hydroclass() (in module pyart.retrieve)": [[531, "pyart.retrieve.melting_layer_hydroclass"], [1182, "pyart.retrieve.melting_layer_hydroclass"]], "melting_layer_mf() (in module pyart.retrieve)": [[532, "pyart.retrieve.melting_layer_mf"], [1183, "pyart.retrieve.melting_layer_mf"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[533, "pyart.retrieve.quasi_vertical_profile"], [1184, "pyart.retrieve.quasi_vertical_profile"]], "select_samples() (in module pyart.retrieve)": [[534, "pyart.retrieve.select_samples"], [1185, "pyart.retrieve.select_samples"]], "steiner_conv_strat() (in module pyart.retrieve)": [[535, "pyart.retrieve.steiner_conv_strat"], [1186, "pyart.retrieve.steiner_conv_strat"]], "synthetic_obs_distribution() (in module pyart.retrieve)": [[536, "pyart.retrieve.synthetic_obs_distribution"], [1187, "pyart.retrieve.synthetic_obs_distribution"]], "vad_browning() (in module pyart.retrieve)": [[537, "pyart.retrieve.vad_browning"], [1189, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[538, "pyart.retrieve.vad_michelson"], [1190, "pyart.retrieve.vad_michelson"]], "epoch_units (in module pyart.util)": [[539, "pyart.util.EPOCH_UNITS"]], "angular_mean() (in module pyart.util)": [[540, "pyart.util.angular_mean"], [1278, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[541, "pyart.util.angular_mean_deg"], [1279, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[542, "pyart.util.angular_std"], [1280, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[543, "pyart.util.angular_std_deg"], [1281, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[544, "pyart.util.angular_texture_2d"], [1282, "pyart.util.angular_texture_2d"]], "colocated_gates() (in module pyart.util)": [[545, "pyart.util.colocated_gates"], [1283, "pyart.util.colocated_gates"]], "colocated_gates2() (in module pyart.util)": [[546, "pyart.util.colocated_gates2"], [1284, "pyart.util.colocated_gates2"]], "compute_azimuthal_average() (in module pyart.util)": [[547, "pyart.util.compute_azimuthal_average"], [1285, "pyart.util.compute_azimuthal_average"]], "compute_corr() (in module pyart.util)": [[548, "pyart.util.compute_corr"], [1286, "pyart.util.compute_corr"]], "compute_directional_stats() (in module pyart.util)": [[549, "pyart.util.compute_directional_stats"], [1287, "pyart.util.compute_directional_stats"]], "compute_mse() (in module pyart.util)": [[550, "pyart.util.compute_mse"], [1288, "pyart.util.compute_mse"]], "compute_nse() (in module pyart.util)": [[551, "pyart.util.compute_nse"], [1289, "pyart.util.compute_nse"]], "cross_section_ppi() (in module pyart.util)": [[552, "pyart.util.cross_section_ppi"], [1290, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[553, "pyart.util.cross_section_rhi"], [1291, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[554, "pyart.util.datetime_from_dataset"], [1292, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[555, "pyart.util.datetime_from_grid"], [1293, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[556, "pyart.util.datetime_from_radar"], [1294, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[557, "pyart.util.datetimes_from_dataset"], [1295, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[558, "pyart.util.datetimes_from_radar"], [1296, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[559, "pyart.util.determine_sweeps"], [1297, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[560, "pyart.util.estimate_noise_hs74"], [1298, "pyart.util.estimate_noise_hs74"]], "estimate_noise_ivic13() (in module pyart.util)": [[561, "pyart.util.estimate_noise_ivic13"], [1299, "pyart.util.estimate_noise_ivic13"]], "find_neighbour_gates() (in module pyart.util)": [[562, "pyart.util.find_neighbour_gates"], [1300, "pyart.util.find_neighbour_gates"]], "for_azimuth() (in module pyart.util)": [[563, "pyart.util.for_azimuth"], [1301, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[564, "pyart.util.get_column_rays"], [1302, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[565, "pyart.util.get_field_location"], [1303, "pyart.util.get_field_location"]], "get_ivic_flat_reg_var_max() (in module pyart.util)": [[566, "pyart.util.get_ivic_flat_reg_var_max"], [1304, "pyart.util.get_ivic_flat_reg_var_max"]], "get_ivic_pct() (in module pyart.util)": [[567, "pyart.util.get_ivic_pct"], [1305, "pyart.util.get_ivic_pct"]], "get_ivic_snr_thr() (in module pyart.util)": [[568, "pyart.util.get_ivic_snr_thr"], [1306, "pyart.util.get_ivic_snr_thr"]], "get_statistic() (in module pyart.util)": [[569, "pyart.util.get_statistic"], [1307, "pyart.util.get_statistic"]], "get_target_elevations() (in module pyart.util)": [[570, "pyart.util.get_target_elevations"], [1308, "pyart.util.get_target_elevations"]], "grid_texture_2d() (in module pyart.util)": [[571, "pyart.util.grid_texture_2d"], [1309, "pyart.util.grid_texture_2d"]], "image_mute_radar() (in module pyart.util)": [[572, "pyart.util.image_mute_radar"], [1310, "pyart.util.image_mute_radar"]], "interpol_spectra() (in module pyart.util)": [[573, "pyart.util.interpol_spectra"], [1311, "pyart.util.interpol_spectra"]], "intersection() (in module pyart.util)": [[574, "pyart.util.intersection"], [1312, "pyart.util.intersection"]], "interval_mean() (in module pyart.util)": [[575, "pyart.util.interval_mean"], [1313, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[576, "pyart.util.interval_std"], [1314, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[577, "pyart.util.is_vpt"], [1315, "pyart.util.is_vpt"]], "ivic_flat_reg_var_max_table() (in module pyart.util)": [[578, "pyart.util.ivic_flat_reg_var_max_table"], [1316, "pyart.util.ivic_flat_reg_var_max_table"]], "ivic_flat_reg_wind_len_table() (in module pyart.util)": [[579, "pyart.util.ivic_flat_reg_wind_len_table"], [1317, "pyart.util.ivic_flat_reg_wind_len_table"]], "ivic_pct_table() (in module pyart.util)": [[580, "pyart.util.ivic_pct_table"], [1318, "pyart.util.ivic_pct_table"]], "ivic_snr_thr_table() (in module pyart.util)": [[581, "pyart.util.ivic_snr_thr_table"], [1319, "pyart.util.ivic_snr_thr_table"]], "join_radar() (in module pyart.util)": [[582, "pyart.util.join_radar"], [1320, "pyart.util.join_radar"]], "join_spectra() (in module pyart.util)": [[583, "pyart.util.join_spectra"], [1321, "pyart.util.join_spectra"]], "ma_broadcast_to() (in module pyart.util)": [[584, "pyart.util.ma_broadcast_to"], [1322, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[585, "pyart.util.mean_of_two_angles"], [1323, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[586, "pyart.util.mean_of_two_angles_deg"], [1324, "pyart.util.mean_of_two_angles_deg"]], "radar_from_spectra() (in module pyart.util)": [[587, "pyart.util.radar_from_spectra"], [1325, "pyart.util.radar_from_spectra"]], "rolling_window() (in module pyart.util)": [[588, "pyart.util.rolling_window"], [1326, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[589, "pyart.util.simulated_vel_from_profile"], [1327, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[590, "pyart.util.sphere_distance"], [1328, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[591, "pyart.util.subset_radar"], [1329, "pyart.util.subset_radar"]], "subset_radar_spectra() (in module pyart.util)": [[592, "pyart.util.subset_radar_spectra"], [1330, "pyart.util.subset_radar_spectra"]], "texture() (in module pyart.util)": [[593, "pyart.util.texture"], [1331, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[594, "pyart.util.texture_along_ray"], [1332, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[595, "pyart.util.to_vpt"], [1333, "pyart.util.to_vpt"]], "weighted_kurtosis() (in module pyart.util)": [[596, "pyart.util.weighted_kurtosis"], [1334, "pyart.util.weighted_kurtosis"]], "weighted_mean() (in module pyart.util)": [[597, "pyart.util.weighted_mean"], [1335, "pyart.util.weighted_mean"]], "weighted_skew() (in module pyart.util)": [[598, "pyart.util.weighted_skew"], [1336, "pyart.util.weighted_skew"]], "weighted_variance() (in module pyart.util)": [[599, "pyart.util.weighted_variance"], [1337, "pyart.util.weighted_variance"]], "_debug_info() (in module pyart)": [[600, "pyart._debug_info"]], "module": [[601, "module-pyart.aux_io"], [649, "module-pyart.bridge"], [651, "module-pyart.config"], [664, "module-pyart.core"], [746, "module-pyart.correct"], [817, "module-pyart.exceptions"], [818, "module-pyart.filters"], [855, "module-pyart.graph"], [1032, "module-pyart.io"], [1055, "module-pyart.lazydict"], [1079, "module-pyart.map"], [1094, "module-pyart.retrieve"], [1191, "module-pyart.testing"], [1277, "module-pyart.util"]], "pyart.aux_io": [[601, "module-pyart.aux_io"]], "convert_data() (in module pyart.aux_io)": [[602, "pyart.aux_io.convert_data"]], "get_library() (in module pyart.aux_io)": [[604, "pyart.aux_io.get_library"]], "read_edge_netcdf() (in module pyart.aux_io)": [[614, "pyart.aux_io.read_edge_netcdf"]], "read_file_c() (in module pyart.aux_io)": [[615, "pyart.aux_io.read_file_c"]], "read_file_py() (in module pyart.aux_io)": [[616, "pyart.aux_io.read_file_py"]], "read_knmi_grid_h5() (in module pyart.aux_io)": [[623, "pyart.aux_io.read_knmi_grid_h5"]], "read_mch_vad() (in module pyart.aux_io)": [[624, "pyart.aux_io.read_mch_vad"]], "read_product_c() (in module pyart.aux_io)": [[632, "pyart.aux_io.read_product_c"]], "read_product_py() (in module pyart.aux_io)": [[633, "pyart.aux_io.read_product_py"]], "read_psr_cpi_header() (in module pyart.aux_io)": [[634, "pyart.aux_io.read_psr_cpi_header"]], "read_psr_header() (in module pyart.aux_io)": [[635, "pyart.aux_io.read_psr_header"]], "read_psr_spectra() (in module pyart.aux_io)": [[636, "pyart.aux_io.read_psr_spectra"]], "read_sinarame_h5() (in module pyart.aux_io)": [[641, "pyart.aux_io.read_sinarame_h5"]], "pyart.bridge": [[649, "module-pyart.bridge"]], "pyart.config": [[651, "module-pyart.config"]], "get_ke() (in module pyart.config)": [[656, "pyart.config.get_KE"]], "pyart.core": [[664, "module-pyart.core"]], "pyart.correct": [[746, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[747, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[748, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[749, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[750, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[751, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[752, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[753, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[754, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[755, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[756, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[757, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[758, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[759, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[760, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[761, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[762, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[763, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[764, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[765, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[766, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[767, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[768, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[769, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[770, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[771, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[772, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[773, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[774, "pyart.correct.GateFilter.include_valid"]], "gauss_fit() (in module pyart.correct)": [[795, "pyart.correct.gauss_fit"]], "moment_based_gate_filter() (in module pyart.correct)": [[800, "pyart.correct.moment_based_gate_filter"]], "retrieval_result() (in module pyart.correct)": [[804, "pyart.correct.retrieval_result"]], "pyart.exceptions": [[817, "module-pyart.exceptions"]], "pyart.filters": [[818, "module-pyart.filters"]], "pyart.graph": [[855, "module-pyart.graph"]], "plot_convstrat_scheme() (in module pyart.graph)": [[1030, "pyart.graph.plot_convstrat_scheme"]], "plot_maxcappi() (in module pyart.graph)": [[1031, "pyart.graph.plot_maxcappi"]], "pyart.io": [[1032, "module-pyart.io"]], "pyart.lazydict": [[1055, "module-pyart.lazydict"]], "mutablemapping (class in pyart.lazydict)": [[1069, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[1070, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[1071, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[1072, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[1073, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[1074, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[1075, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[1076, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[1077, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[1078, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[1079, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[1080, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[1081, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[1082, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[1083, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[1084, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[1085, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[1086, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[1087, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[1088, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[1089, "pyart.map.grid_rhi_sweeps"]], "gridstats_from_radar() (in module pyart.map)": [[1090, "pyart.map.gridstats_from_radar"]], "map_gates_to_grid() (in module pyart.map)": [[1091, "pyart.map.map_gates_to_grid"]], "map_gates_to_grid_to_list() (in module pyart.map)": [[1092, "pyart.map.map_gates_to_grid_to_list"]], "map_to_grid() (in module pyart.map)": [[1093, "pyart.map.map_to_grid"]], "pyart.retrieve": [[1094, "module-pyart.retrieve"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[1188, "pyart.retrieve.texture_of_complex_phase"]], "pyart.testing": [[1191, "module-pyart.testing"]], "grid (class in pyart.testing)": [[1192, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[1193, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[1194, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[1195, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[1196, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[1197, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[1198, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[1199, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[1200, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[1201, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[1202, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[1203, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[1204, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[1205, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[1206, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[1207, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[1208, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[1209, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[1210, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[1211, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[1212, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[1213, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[1214, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[1215, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[1216, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[1217, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[1218, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[1219, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[1220, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[1221, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[1222, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[1223, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[1224, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[1225, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[1226, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[1227, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[1228, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[1229, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[1230, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[1231, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[1232, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[1233, "pyart.testing.RadarSpectra"]], "add_field() (pyart.testing.radarspectra method)": [[1234, "pyart.testing.RadarSpectra.add_field"]], "add_field_like() (pyart.testing.radarspectra method)": [[1235, "pyart.testing.RadarSpectra.add_field_like"]], "add_filter() (pyart.testing.radarspectra method)": [[1236, "pyart.testing.RadarSpectra.add_filter"]], "check_field_exists() (pyart.testing.radarspectra method)": [[1237, "pyart.testing.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.testing.radarspectra method)": [[1238, "pyart.testing.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.testing.radarspectra method)": [[1239, "pyart.testing.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.testing.radarspectra method)": [[1240, "pyart.testing.RadarSpectra.get_elevation"]], "get_end() (pyart.testing.radarspectra method)": [[1241, "pyart.testing.RadarSpectra.get_end"]], "get_field() (pyart.testing.radarspectra method)": [[1242, "pyart.testing.RadarSpectra.get_field"]], "get_gate_area() (pyart.testing.radarspectra method)": [[1243, "pyart.testing.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radarspectra method)": [[1244, "pyart.testing.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radarspectra method)": [[1245, "pyart.testing.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radarspectra method)": [[1246, "pyart.testing.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.testing.radarspectra method)": [[1247, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[1248, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[1249, "pyart.testing.RadarSpectra.get_start_end"]], "info() (pyart.testing.radarspectra method)": [[1250, "pyart.testing.RadarSpectra.info"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[1251, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[1252, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[1253, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[1254, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[1255, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[1256, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[1257, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[1258, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[1259, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[1260, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[1261, "pyart.testing.RadarSpectra.iter_start_end"]], "get_metadata() (in module pyart.testing)": [[1262, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[1263, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[1264, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[1265, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[1266, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[1267, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[1268, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[1269, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[1270, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[1271, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[1272, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[1273, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[1274, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[1275, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[1276, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[1277, "module-pyart.util"]]}})