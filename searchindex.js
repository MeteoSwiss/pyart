Search.setIndex({"docnames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/generated/pyart.aux_io.read_bin", "API/generated/generated/pyart.aux_io.read_bin_mf", "API/generated/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/generated/pyart.aux_io.read_cf1", "API/generated/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/generated/pyart.aux_io.read_dat_mf", "API/generated/generated/pyart.aux_io.read_gamic", "API/generated/generated/pyart.aux_io.read_gif", "API/generated/generated/pyart.aux_io.read_grib", "API/generated/generated/pyart.aux_io.read_hpl", "API/generated/generated/pyart.aux_io.read_iq", "API/generated/generated/pyart.aux_io.read_kazr", "API/generated/generated/pyart.aux_io.read_metranet", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/generated/pyart.aux_io.read_odim_h5", "API/generated/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/generated/pyart.aux_io.read_pattern", "API/generated/generated/pyart.aux_io.read_png", "API/generated/generated/pyart.aux_io.read_radx", "API/generated/generated/pyart.aux_io.read_rainbow_psr", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/generated/pyart.aux_io.read_skyecho", "API/generated/generated/pyart.aux_io.read_spectra", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/generated/pyart.aux_io.write_odim_h5", "API/generated/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/generated/pyart.aux_io.write_spectra", "API/generated/generated/pyart.bridge.texture_of_complex_phase", "API/generated/generated/pyart.config.FileMetadata", "API/generated/generated/pyart.config.FileMetadata.__call__", "API/generated/generated/pyart.config.FileMetadata.get_field_name", "API/generated/generated/pyart.config.FileMetadata.get_metadata", "API/generated/generated/pyart.config.get_field_colormap", "API/generated/generated/pyart.config.get_field_limits", "API/generated/generated/pyart.config.get_field_mapping", "API/generated/generated/pyart.config.get_field_name", "API/generated/generated/pyart.config.get_fillvalue", "API/generated/generated/pyart.config.get_metadata", "API/generated/generated/pyart.config.load_config", "API/generated/generated/pyart.core.Grid", "API/generated/generated/pyart.core.Grid.add_field", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.get_projparams", "API/generated/generated/pyart.core.Grid.init_point_altitude", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/generated/pyart.core.Grid.projection_proj", "API/generated/generated/pyart.core.Grid.to_xarray", "API/generated/generated/pyart.core.Grid.write", "API/generated/generated/pyart.core.HorizontalWindProfile", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/generated/pyart.core.Radar", "API/generated/generated/pyart.core.Radar.add_field", "API/generated/generated/pyart.core.Radar.add_field_like", "API/generated/generated/pyart.core.Radar.add_filter", "API/generated/generated/pyart.core.Radar.check_field_exists", "API/generated/generated/pyart.core.Radar.extract_sweeps", "API/generated/generated/pyart.core.Radar.get_azimuth", "API/generated/generated/pyart.core.Radar.get_elevation", "API/generated/generated/pyart.core.Radar.get_end", "API/generated/generated/pyart.core.Radar.get_field", "API/generated/generated/pyart.core.Radar.get_gate_area", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/generated/pyart.core.Radar.get_slice", "API/generated/generated/pyart.core.Radar.get_start", "API/generated/generated/pyart.core.Radar.get_start_end", "API/generated/generated/pyart.core.Radar.info", "API/generated/generated/pyart.core.Radar.init_gate_altitude", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/generated/pyart.core.Radar.iter_azimuth", "API/generated/generated/pyart.core.Radar.iter_elevation", "API/generated/generated/pyart.core.Radar.iter_end", "API/generated/generated/pyart.core.Radar.iter_field", "API/generated/generated/pyart.core.Radar.iter_slice", "API/generated/generated/pyart.core.Radar.iter_start", "API/generated/generated/pyart.core.Radar.iter_start_end", "API/generated/generated/pyart.core.RadarSpectra", "API/generated/generated/pyart.core.RadarSpectra.add_field", "API/generated/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/generated/pyart.core.RadarSpectra.add_filter", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/generated/pyart.core.RadarSpectra.get_end", "API/generated/generated/pyart.core.RadarSpectra.get_field", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/generated/pyart.core.RadarSpectra.get_slice", "API/generated/generated/pyart.core.RadarSpectra.get_start", "API/generated/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/generated/pyart.core.RadarSpectra.info", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/generated/pyart.core.RadarSpectra.iter_end", "API/generated/generated/pyart.core.RadarSpectra.iter_field", "API/generated/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/generated/pyart.core.RadarSpectra.iter_start", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/generated/pyart.core.antenna_to_cartesian", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/generated/pyart.core.cartesian_to_antenna", "API/generated/generated/pyart.core.cartesian_to_geographic", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/generated/pyart.core.geographic_to_cartesian", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/generated/pyart.correct.compute_apparent_vpr", "API/generated/generated/pyart.correct.compute_theoretical_vpr", "API/generated/generated/pyart.correct.correct_sys_phase", "API/generated/generated/pyart.correct.dealias_fourdd", "API/generated/generated/pyart.correct.dealias_region_based", "API/generated/generated/pyart.correct.dealias_unwrap_phase", "API/generated/generated/pyart.correct.det_sys_phase_ray", "API/generated/generated/pyart.correct.find_objects", "API/generated/generated/pyart.correct.get_mask_fzl", "API/generated/generated/pyart.correct.phase_proc_lp", "API/generated/generated/pyart.correct.phase_proc_lp_gf", "API/generated/generated/pyart.correct.ptoa_to_sf", "API/generated/generated/pyart.correct.scanning_losses", "API/generated/generated/pyart.correct.smooth_masked", "API/generated/generated/pyart.correct.smooth_phidp_double_window", "API/generated/generated/pyart.correct.smooth_phidp_single_window", "API/generated/generated/pyart.correct.solar_flux_lookup", "API/generated/generated/pyart.correct.sun_position_mfr", "API/generated/generated/pyart.correct.sun_position_pysolar", "API/generated/generated/pyart.correct.sun_power", "API/generated/generated/pyart.exceptions.DeprecatedAttribute", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName", "API/generated/generated/pyart.exceptions.MissingOptionalDependency", "API/generated/generated/pyart.exceptions._deprecated_alias", "API/generated/generated/pyart.filters.GateFilter", "API/generated/generated/pyart.filters.GateFilter.copy", "API/generated/generated/pyart.filters.GateFilter.exclude_above", "API/generated/generated/pyart.filters.GateFilter.exclude_all", "API/generated/generated/pyart.filters.GateFilter.exclude_below", "API/generated/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/generated/pyart.filters.GateFilter.exclude_none", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/generated/pyart.filters.GateFilter.gate_included", "API/generated/generated/pyart.filters.GateFilter.include_above", "API/generated/generated/pyart.filters.GateFilter.include_all", "API/generated/generated/pyart.filters.GateFilter.include_below", "API/generated/generated/pyart.filters.GateFilter.include_equal", "API/generated/generated/pyart.filters.GateFilter.include_gates", "API/generated/generated/pyart.filters.GateFilter.include_inside", "API/generated/generated/pyart.filters.GateFilter.include_none", "API/generated/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/generated/pyart.filters.GateFilter.include_outside", "API/generated/generated/pyart.filters.GateFilter.include_valid", "API/generated/generated/pyart.filters.birds_gate_filter", "API/generated/generated/pyart.filters.class_based_gate_filter", "API/generated/generated/pyart.filters.iso0_based_gate_filter", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/generated/pyart.filters.moment_based_gate_filter", "API/generated/generated/pyart.filters.snr_based_gate_filter", "API/generated/generated/pyart.filters.temp_based_gate_filter", "API/generated/generated/pyart.filters.visibility_based_gate_filter", "API/generated/generated/pyart.graph.AirborneRadarDisplay", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/generated/pyart.graph.GridMapDisplay", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/generated/pyart.graph.RadarDisplay", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarDisplay.plot", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplay", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/generated/pyart.io.make_time_unit_str", "API/generated/generated/pyart.io.prepare_for_read", "API/generated/generated/pyart.io.read", "API/generated/generated/pyart.io.read_arm_sonde", "API/generated/generated/pyart.io.read_arm_sonde_vap", "API/generated/generated/pyart.io.read_cfradial", "API/generated/generated/pyart.io.read_cfradial2", "API/generated/generated/pyart.io.read_chl", "API/generated/generated/pyart.io.read_grid", "API/generated/generated/pyart.io.read_grid_mdv", "API/generated/generated/pyart.io.read_mdv", "API/generated/generated/pyart.io.read_nexrad_archive", "API/generated/generated/pyart.io.read_nexrad_cdm", "API/generated/generated/pyart.io.read_nexrad_level3", "API/generated/generated/pyart.io.read_rsl", "API/generated/generated/pyart.io.read_sigmet", "API/generated/generated/pyart.io.read_uf", "API/generated/generated/pyart.io.write_cfradial", "API/generated/generated/pyart.io.write_grid", "API/generated/generated/pyart.io.write_grid_geotiff", "API/generated/generated/pyart.io.write_grid_mdv", "API/generated/generated/pyart.io.write_uf", "API/generated/generated/pyart.lazydict.LazyLoadDict", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/generated/pyart.retrieve._destandardize", "API/generated/generated/pyart.retrieve._get_res_vol_sides", "API/generated/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/generated/pyart.retrieve.composite_reflectivity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/generated/pyart.retrieve.compute_Doppler_width", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/generated/pyart.retrieve.compute_apparent_profile", "API/generated/generated/pyart.retrieve.compute_bird_density", "API/generated/generated/pyart.retrieve.compute_ccor", "API/generated/generated/pyart.retrieve.compute_cdr", "API/generated/generated/pyart.retrieve.compute_centroids", "API/generated/generated/pyart.retrieve.compute_differential_phase", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_evp", "API/generated/generated/pyart.retrieve.compute_iq", "API/generated/generated/pyart.retrieve.compute_l", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/generated/pyart.retrieve.compute_noise_power", "API/generated/generated/pyart.retrieve.compute_noisedBZ", "API/generated/generated/pyart.retrieve.compute_pol_variables", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/generated/pyart.retrieve.compute_qvp", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/generated/pyart.retrieve.compute_rcs", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/generated/pyart.retrieve.compute_refl_from_zdr", "API/generated/generated/pyart.retrieve.compute_reflectivity", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_rhohv", "API/generated/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/generated/pyart.retrieve.compute_rqvp", "API/generated/generated/pyart.retrieve.compute_signal_power", "API/generated/generated/pyart.retrieve.compute_snr", "API/generated/generated/pyart.retrieve.compute_spectra", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_noise", "API/generated/generated/pyart.retrieve.compute_spectral_phase", "API/generated/generated/pyart.retrieve.compute_spectral_power", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/generated/pyart.retrieve.compute_st1_iq", "API/generated/generated/pyart.retrieve.compute_st2_iq", "API/generated/generated/pyart.retrieve.compute_svp", "API/generated/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/generated/pyart.retrieve.compute_vol_refl", "API/generated/generated/pyart.retrieve.compute_vp", "API/generated/generated/pyart.retrieve.compute_wbn_iq", "API/generated/generated/pyart.retrieve.conv_strat_raut", "API/generated/generated/pyart.retrieve.conv_strat_yuter", "API/generated/generated/pyart.retrieve.data_for_centroids", "API/generated/generated/pyart.retrieve.dealias_spectra", "API/generated/generated/pyart.retrieve.detect_ml", "API/generated/generated/pyart.retrieve.determine_medoids", "API/generated/generated/pyart.retrieve.est_rain_rate_a", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/generated/pyart.retrieve.est_rain_rate_z", "API/generated/generated/pyart.retrieve.est_rain_rate_za", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/generated/pyart.retrieve.est_vertical_windshear", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/generated/pyart.retrieve.est_wind_profile", "API/generated/generated/pyart.retrieve.est_wind_vel", "API/generated/generated/pyart.retrieve.feature_detection", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/generated/pyart.retrieve.gecsx", "API/generated/generated/pyart.retrieve.get_coeff_attg", "API/generated/generated/pyart.retrieve.get_freq_band", "API/generated/generated/pyart.retrieve.get_iso0_val", "API/generated/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/generated/pyart.retrieve.grid_displacement_pc", "API/generated/generated/pyart.retrieve.grid_shift", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/generated/pyart.retrieve.kdp_maesaka", "API/generated/generated/pyart.retrieve.kdp_schneebeli", "API/generated/generated/pyart.retrieve.kdp_vulpiani", "API/generated/generated/pyart.retrieve.map_profile_to_gates", "API/generated/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/generated/pyart.retrieve.melting_layer_mf", "API/generated/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/generated/pyart.retrieve.select_samples", "API/generated/generated/pyart.retrieve.steiner_conv_strat", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/generated/pyart.retrieve.vad_browning", "API/generated/generated/pyart.retrieve.vad_michelson", "API/generated/generated/pyart.util.EPOCH_UNITS", "API/generated/generated/pyart.util.angular_mean", "API/generated/generated/pyart.util.angular_mean_deg", "API/generated/generated/pyart.util.angular_std", "API/generated/generated/pyart.util.angular_std_deg", "API/generated/generated/pyart.util.angular_texture_2d", "API/generated/generated/pyart.util.colocated_gates", "API/generated/generated/pyart.util.colocated_gates2", "API/generated/generated/pyart.util.compute_azimuthal_average", "API/generated/generated/pyart.util.compute_corr", "API/generated/generated/pyart.util.compute_directional_stats", "API/generated/generated/pyart.util.compute_mse", "API/generated/generated/pyart.util.compute_nse", "API/generated/generated/pyart.util.cross_section_ppi", "API/generated/generated/pyart.util.cross_section_rhi", "API/generated/generated/pyart.util.datetime_from_dataset", "API/generated/generated/pyart.util.datetime_from_grid", "API/generated/generated/pyart.util.datetime_from_radar", "API/generated/generated/pyart.util.datetimes_from_dataset", "API/generated/generated/pyart.util.datetimes_from_radar", "API/generated/generated/pyart.util.determine_sweeps", "API/generated/generated/pyart.util.estimate_noise_hs74", "API/generated/generated/pyart.util.estimate_noise_ivic13", "API/generated/generated/pyart.util.find_neighbour_gates", "API/generated/generated/pyart.util.for_azimuth", "API/generated/generated/pyart.util.get_column_rays", "API/generated/generated/pyart.util.get_field_location", "API/generated/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/generated/pyart.util.get_ivic_pct", "API/generated/generated/pyart.util.get_ivic_snr_thr", "API/generated/generated/pyart.util.get_target_elevations", "API/generated/generated/pyart.util.grid_texture_2d", "API/generated/generated/pyart.util.image_mute_radar", "API/generated/generated/pyart.util.interpol_spectra", "API/generated/generated/pyart.util.intersection", "API/generated/generated/pyart.util.interval_mean", "API/generated/generated/pyart.util.interval_std", "API/generated/generated/pyart.util.is_vpt", "API/generated/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/generated/pyart.util.ivic_pct_table", "API/generated/generated/pyart.util.ivic_snr_thr_table", "API/generated/generated/pyart.util.join_radar", "API/generated/generated/pyart.util.join_spectra", "API/generated/generated/pyart.util.ma_broadcast_to", "API/generated/generated/pyart.util.mean_of_two_angles", "API/generated/generated/pyart.util.mean_of_two_angles_deg", "API/generated/generated/pyart.util.radar_from_spectra", "API/generated/generated/pyart.util.rolling_window", "API/generated/generated/pyart.util.simulated_vel_from_profile", "API/generated/generated/pyart.util.sphere_distance", "API/generated/generated/pyart.util.subset_radar", "API/generated/generated/pyart.util.subset_radar_spectra", "API/generated/generated/pyart.util.texture", "API/generated/generated/pyart.util.texture_along_ray", "API/generated/generated/pyart.util.to_vpt", "API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.convert_data", "API/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/pyart.aux_io.get_library", "API/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/pyart.aux_io.read_bin", "API/generated/pyart.aux_io.read_bin_mf", "API/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/pyart.aux_io.read_cf1", "API/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_dat_mf", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_file_c", "API/generated/pyart.aux_io.read_file_py", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_gif", "API/generated/pyart.aux_io.read_grib", "API/generated/pyart.aux_io.read_hpl", "API/generated/pyart.aux_io.read_iq", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_knmi_grid_h5", "API/generated/pyart.aux_io.read_mch_vad", "API/generated/pyart.aux_io.read_metranet", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_png", "API/generated/pyart.aux_io.read_product_c", "API/generated/pyart.aux_io.read_product_py", "API/generated/pyart.aux_io.read_psr_cpi_header", "API/generated/pyart.aux_io.read_psr_header", "API/generated/pyart.aux_io.read_psr_spectra", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_rainbow_psr", "API/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.read_skyecho", "API/generated/pyart.aux_io.read_spectra", "API/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/pyart.aux_io.write_odim_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.aux_io.write_spectra", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_KE", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.add_field", "API/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/pyart.core.RadarSpectra.add_filter", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_field", "API/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.info", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.compute_apparent_vpr", "API/generated/pyart.correct.compute_theoretical_vpr", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.correct_sys_phase", "API/generated/pyart.correct.correct_visibility", "API/generated/pyart.correct.correct_vpr", "API/generated/pyart.correct.correct_vpr_spatialised", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.det_sys_phase_ray", "API/generated/pyart.correct.est_rhohv_rain", "API/generated/pyart.correct.est_zdr_precip", "API/generated/pyart.correct.est_zdr_snow", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.gauss_fit", "API/generated/pyart.correct.get_mask_fzl", "API/generated/pyart.correct.get_sun_hits", "API/generated/pyart.correct.get_sun_hits_ivic", "API/generated/pyart.correct.get_sun_hits_psr", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.ptoa_to_sf", "API/generated/pyart.correct.retrieval_result", "API/generated/pyart.correct.scanning_losses", "API/generated/pyart.correct.selfconsistency_bias", "API/generated/pyart.correct.selfconsistency_bias2", "API/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/pyart.correct.smooth_masked", "API/generated/pyart.correct.smooth_phidp_double_window", "API/generated/pyart.correct.smooth_phidp_single_window", "API/generated/pyart.correct.solar_flux_lookup", "API/generated/pyart.correct.sun_position_mfr", "API/generated/pyart.correct.sun_position_pysolar", "API/generated/pyart.correct.sun_power", "API/generated/pyart.correct.sun_retrieval", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.birds_gate_filter", "API/generated/pyart.filters.class_based_gate_filter", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.snr_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.filters.visibility_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.make_time_unit_str", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_cfradial2", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/pyart.retrieve.compute_Doppler_width", "API/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/pyart.retrieve.compute_apparent_profile", "API/generated/pyart.retrieve.compute_bird_density", "API/generated/pyart.retrieve.compute_ccor", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_centroids", "API/generated/pyart.retrieve.compute_differential_phase", "API/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_iq", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/pyart.retrieve.compute_noise_power", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_pol_variables", "API/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/pyart.retrieve.compute_rcs", "API/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/pyart.retrieve.compute_refl_from_zdr", "API/generated/pyart.retrieve.compute_reflectivity", "API/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/pyart.retrieve.compute_rhohv", "API/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_signal_power", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_spectra", "API/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/pyart.retrieve.compute_spectral_noise", "API/generated/pyart.retrieve.compute_spectral_phase", "API/generated/pyart.retrieve.compute_spectral_power", "API/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/pyart.retrieve.compute_st1_iq", "API/generated/pyart.retrieve.compute_st2_iq", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vol_refl", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.compute_wbn_iq", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.data_for_centroids", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.detect_ml", "API/generated/pyart.retrieve.determine_medoids", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.est_vertical_windshear", "API/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/pyart.retrieve.est_wind_profile", "API/generated/pyart.retrieve.est_wind_vel", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.gecsx", "API/generated/pyart.retrieve.get_coeff_attg", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.get_iso0_val", "API/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/pyart.retrieve.melting_layer_mf", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.select_samples", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.add_field", "API/generated/pyart.testing.RadarSpectra.add_field_like", "API/generated/pyart.testing.RadarSpectra.add_filter", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.extract_sweeps", "API/generated/pyart.testing.RadarSpectra.get_azimuth", "API/generated/pyart.testing.RadarSpectra.get_elevation", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_field", "API/generated/pyart.testing.RadarSpectra.get_gate_area", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.info", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.colocated_gates", "API/generated/pyart.util.colocated_gates2", "API/generated/pyart.util.compute_azimuthal_average", "API/generated/pyart.util.compute_corr", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.compute_mse", "API/generated/pyart.util.compute_nse", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.estimate_noise_ivic13", "API/generated/pyart.util.find_neighbour_gates", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/pyart.util.get_ivic_pct", "API/generated/pyart.util.get_ivic_snr_thr", "API/generated/pyart.util.get_target_elevations", "API/generated/pyart.util.grid_texture_2d", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interpol_spectra", "API/generated/pyart.util.intersection", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/pyart.util.ivic_pct_table", "API/generated/pyart.util.ivic_snr_thr_table", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.join_spectra", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.radar_from_spectra", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.subset_radar_spectra", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "changelog", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/read_mch_metranet_data", "notebooks/swiss_doppler", "notebooks/swiss_thunderstorm", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/generated/pyart.aux_io.read_bin.rst", "API/generated/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/generated/pyart.aux_io.read_cf1.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/generated/pyart.aux_io.read_gamic.rst", "API/generated/generated/pyart.aux_io.read_gif.rst", "API/generated/generated/pyart.aux_io.read_grib.rst", "API/generated/generated/pyart.aux_io.read_hpl.rst", "API/generated/generated/pyart.aux_io.read_iq.rst", "API/generated/generated/pyart.aux_io.read_kazr.rst", "API/generated/generated/pyart.aux_io.read_metranet.rst", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/generated/pyart.aux_io.read_pattern.rst", "API/generated/generated/pyart.aux_io.read_png.rst", "API/generated/generated/pyart.aux_io.read_radx.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/generated/pyart.aux_io.read_skyecho.rst", "API/generated/generated/pyart.aux_io.read_spectra.rst", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/generated/pyart.aux_io.write_spectra.rst", "API/generated/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/generated/pyart.config.FileMetadata.rst", "API/generated/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/generated/pyart.config.get_field_colormap.rst", "API/generated/generated/pyart.config.get_field_limits.rst", "API/generated/generated/pyart.config.get_field_mapping.rst", "API/generated/generated/pyart.config.get_field_name.rst", "API/generated/generated/pyart.config.get_fillvalue.rst", "API/generated/generated/pyart.config.get_metadata.rst", "API/generated/generated/pyart.config.load_config.rst", "API/generated/generated/pyart.core.Grid.rst", "API/generated/generated/pyart.core.Grid.add_field.rst", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.get_projparams.rst", "API/generated/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/generated/pyart.core.Grid.projection_proj.rst", "API/generated/generated/pyart.core.Grid.to_xarray.rst", "API/generated/generated/pyart.core.Grid.write.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/generated/pyart.core.Radar.rst", "API/generated/generated/pyart.core.Radar.add_field.rst", "API/generated/generated/pyart.core.Radar.add_field_like.rst", "API/generated/generated/pyart.core.Radar.add_filter.rst", "API/generated/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/generated/pyart.core.Radar.get_elevation.rst", "API/generated/generated/pyart.core.Radar.get_end.rst", "API/generated/generated/pyart.core.Radar.get_field.rst", "API/generated/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/generated/pyart.core.Radar.get_slice.rst", "API/generated/generated/pyart.core.Radar.get_start.rst", "API/generated/generated/pyart.core.Radar.get_start_end.rst", "API/generated/generated/pyart.core.Radar.info.rst", "API/generated/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/generated/pyart.core.Radar.iter_end.rst", "API/generated/generated/pyart.core.Radar.iter_field.rst", "API/generated/generated/pyart.core.Radar.iter_slice.rst", "API/generated/generated/pyart.core.Radar.iter_start.rst", "API/generated/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.info.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/generated/pyart.correct.correct_sys_phase.rst", "API/generated/generated/pyart.correct.dealias_fourdd.rst", "API/generated/generated/pyart.correct.dealias_region_based.rst", "API/generated/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/generated/pyart.correct.find_objects.rst", "API/generated/generated/pyart.correct.get_mask_fzl.rst", "API/generated/generated/pyart.correct.phase_proc_lp.rst", "API/generated/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/generated/pyart.correct.scanning_losses.rst", "API/generated/generated/pyart.correct.smooth_masked.rst", "API/generated/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/generated/pyart.correct.sun_position_mfr.rst", "API/generated/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/generated/pyart.correct.sun_power.rst", "API/generated/generated/pyart.exceptions.DeprecatedAttribute.rst", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName.rst", "API/generated/generated/pyart.exceptions.MissingOptionalDependency.rst", "API/generated/generated/pyart.exceptions._deprecated_alias.rst", "API/generated/generated/pyart.filters.GateFilter.rst", "API/generated/generated/pyart.filters.GateFilter.copy.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/generated/pyart.filters.birds_gate_filter.rst", "API/generated/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.GridMapDisplay.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.RadarDisplay.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/generated/pyart.io.make_time_unit_str.rst", "API/generated/generated/pyart.io.prepare_for_read.rst", "API/generated/generated/pyart.io.read.rst", "API/generated/generated/pyart.io.read_arm_sonde.rst", "API/generated/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/generated/pyart.io.read_cfradial.rst", "API/generated/generated/pyart.io.read_cfradial2.rst", "API/generated/generated/pyart.io.read_chl.rst", "API/generated/generated/pyart.io.read_grid.rst", "API/generated/generated/pyart.io.read_grid_mdv.rst", "API/generated/generated/pyart.io.read_mdv.rst", "API/generated/generated/pyart.io.read_nexrad_archive.rst", "API/generated/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/generated/pyart.io.read_nexrad_level3.rst", "API/generated/generated/pyart.io.read_rsl.rst", "API/generated/generated/pyart.io.read_sigmet.rst", "API/generated/generated/pyart.io.read_uf.rst", "API/generated/generated/pyart.io.write_cfradial.rst", "API/generated/generated/pyart.io.write_grid.rst", "API/generated/generated/pyart.io.write_grid_geotiff.rst", "API/generated/generated/pyart.io.write_grid_mdv.rst", "API/generated/generated/pyart.io.write_uf.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/generated/pyart.retrieve._destandardize.rst", "API/generated/generated/pyart.retrieve._get_res_vol_sides.rst", "API/generated/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/generated/pyart.retrieve.compute_ccor.rst", "API/generated/generated/pyart.retrieve.compute_cdr.rst", "API/generated/generated/pyart.retrieve.compute_centroids.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_evp.rst", "API/generated/generated/pyart.retrieve.compute_iq.rst", "API/generated/generated/pyart.retrieve.compute_l.rst", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/generated/pyart.retrieve.compute_qvp.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/generated/pyart.retrieve.compute_rcs.rst", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/generated/pyart.retrieve.compute_refl_from_zdr.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/generated/pyart.retrieve.compute_snr.rst", "API/generated/generated/pyart.retrieve.compute_spectra.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/generated/pyart.retrieve.compute_svp.rst", "API/generated/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/generated/pyart.retrieve.compute_vp.rst", "API/generated/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/generated/pyart.retrieve.detect_ml.rst", "API/generated/generated/pyart.retrieve.determine_medoids.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/generated/pyart.retrieve.feature_detection.rst", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/generated/pyart.retrieve.gecsx.rst", "API/generated/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/generated/pyart.retrieve.get_freq_band.rst", "API/generated/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/generated/pyart.retrieve.grid_shift.rst", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/generated/pyart.retrieve.select_samples.rst", "API/generated/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/generated/pyart.retrieve.vad_browning.rst", "API/generated/generated/pyart.retrieve.vad_michelson.rst", "API/generated/generated/pyart.util.EPOCH_UNITS.rst", "API/generated/generated/pyart.util.angular_mean.rst", "API/generated/generated/pyart.util.angular_mean_deg.rst", "API/generated/generated/pyart.util.angular_std.rst", "API/generated/generated/pyart.util.angular_std_deg.rst", "API/generated/generated/pyart.util.angular_texture_2d.rst", "API/generated/generated/pyart.util.colocated_gates.rst", "API/generated/generated/pyart.util.colocated_gates2.rst", "API/generated/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/generated/pyart.util.compute_corr.rst", "API/generated/generated/pyart.util.compute_directional_stats.rst", "API/generated/generated/pyart.util.compute_mse.rst", "API/generated/generated/pyart.util.compute_nse.rst", "API/generated/generated/pyart.util.cross_section_ppi.rst", "API/generated/generated/pyart.util.cross_section_rhi.rst", "API/generated/generated/pyart.util.datetime_from_dataset.rst", "API/generated/generated/pyart.util.datetime_from_grid.rst", "API/generated/generated/pyart.util.datetime_from_radar.rst", "API/generated/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/generated/pyart.util.datetimes_from_radar.rst", "API/generated/generated/pyart.util.determine_sweeps.rst", "API/generated/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/generated/pyart.util.find_neighbour_gates.rst", "API/generated/generated/pyart.util.for_azimuth.rst", "API/generated/generated/pyart.util.get_column_rays.rst", "API/generated/generated/pyart.util.get_field_location.rst", "API/generated/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/generated/pyart.util.get_ivic_pct.rst", "API/generated/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/generated/pyart.util.get_target_elevations.rst", "API/generated/generated/pyart.util.grid_texture_2d.rst", "API/generated/generated/pyart.util.image_mute_radar.rst", "API/generated/generated/pyart.util.interpol_spectra.rst", "API/generated/generated/pyart.util.intersection.rst", "API/generated/generated/pyart.util.interval_mean.rst", "API/generated/generated/pyart.util.interval_std.rst", "API/generated/generated/pyart.util.is_vpt.rst", "API/generated/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/generated/pyart.util.ivic_pct_table.rst", "API/generated/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/generated/pyart.util.join_radar.rst", "API/generated/generated/pyart.util.join_spectra.rst", "API/generated/generated/pyart.util.ma_broadcast_to.rst", "API/generated/generated/pyart.util.mean_of_two_angles.rst", "API/generated/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/generated/pyart.util.radar_from_spectra.rst", "API/generated/generated/pyart.util.rolling_window.rst", "API/generated/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/generated/pyart.util.sphere_distance.rst", "API/generated/generated/pyart.util.subset_radar.rst", "API/generated/generated/pyart.util.subset_radar_spectra.rst", "API/generated/generated/pyart.util.texture.rst", "API/generated/generated/pyart.util.texture_along_ray.rst", "API/generated/generated/pyart.util.to_vpt.rst", "API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.convert_data.rst", "API/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/pyart.aux_io.get_library.rst", "API/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/pyart.aux_io.read_bin.rst", "API/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/pyart.aux_io.read_cf1.rst", "API/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_file_c.rst", "API/generated/pyart.aux_io.read_file_py.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_gif.rst", "API/generated/pyart.aux_io.read_grib.rst", "API/generated/pyart.aux_io.read_hpl.rst", "API/generated/pyart.aux_io.read_iq.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_knmi_grid_h5.rst", "API/generated/pyart.aux_io.read_mch_vad.rst", "API/generated/pyart.aux_io.read_metranet.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_png.rst", "API/generated/pyart.aux_io.read_product_c.rst", "API/generated/pyart.aux_io.read_product_py.rst", "API/generated/pyart.aux_io.read_psr_cpi_header.rst", "API/generated/pyart.aux_io.read_psr_header.rst", "API/generated/pyart.aux_io.read_psr_spectra.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.read_skyecho.rst", "API/generated/pyart.aux_io.read_spectra.rst", "API/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.aux_io.write_spectra.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_KE.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.info.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.correct_sys_phase.rst", "API/generated/pyart.correct.correct_visibility.rst", "API/generated/pyart.correct.correct_vpr.rst", "API/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/pyart.correct.est_zdr_precip.rst", "API/generated/pyart.correct.est_zdr_snow.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.gauss_fit.rst", "API/generated/pyart.correct.get_mask_fzl.rst", "API/generated/pyart.correct.get_sun_hits.rst", "API/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/pyart.correct.retrieval_result.rst", "API/generated/pyart.correct.scanning_losses.rst", "API/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/pyart.correct.smooth_masked.rst", "API/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/pyart.correct.sun_position_mfr.rst", "API/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/pyart.correct.sun_power.rst", "API/generated/pyart.correct.sun_retrieval.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.birds_gate_filter.rst", "API/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.make_time_unit_str.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_cfradial2.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/pyart.retrieve.compute_ccor.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_centroids.rst", "API/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_iq.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/pyart.retrieve.compute_rcs.rst", "API/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/pyart.retrieve.compute_refl_from_zdr.rst", "API/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_spectra.rst", "API/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.detect_ml.rst", "API/generated/pyart.retrieve.determine_medoids.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.gecsx.rst", "API/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.select_samples.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.add_field.rst", "API/generated/pyart.testing.RadarSpectra.add_field_like.rst", "API/generated/pyart.testing.RadarSpectra.add_filter.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.testing.RadarSpectra.get_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.get_elevation.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_field.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_area.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.info.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.colocated_gates.rst", "API/generated/pyart.util.colocated_gates2.rst", "API/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/pyart.util.compute_corr.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.compute_mse.rst", "API/generated/pyart.util.compute_nse.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/pyart.util.find_neighbour_gates.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/pyart.util.get_ivic_pct.rst", "API/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/pyart.util.get_target_elevations.rst", "API/generated/pyart.util.grid_texture_2d.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interpol_spectra.rst", "API/generated/pyart.util.intersection.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/pyart.util.ivic_pct_table.rst", "API/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.join_spectra.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.radar_from_spectra.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.subset_radar_spectra.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "changelog.md", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/read_mch_metranet_data.ipynb", "notebooks/swiss_doppler.ipynb", "notebooks/swiss_thunderstorm.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge.texture_of_complex_phase", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_sys_phase", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.det_sys_phase_ray", "pyart.correct.find_objects", "pyart.correct.get_mask_fzl", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.scanning_losses", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.exceptions.DeprecatedAttribute", "pyart.exceptions.DeprecatedFunctionName", "pyart.exceptions.MissingOptionalDependency", "pyart.exceptions._deprecated_alias", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.__contains__", "pyart.lazydict.LazyLoadDict.__delattr__", "pyart.lazydict.LazyLoadDict.__delitem__", "pyart.lazydict.LazyLoadDict.__dir__", "pyart.lazydict.LazyLoadDict.__eq__", "pyart.lazydict.LazyLoadDict.__format__", "pyart.lazydict.LazyLoadDict.__ge__", "pyart.lazydict.LazyLoadDict.__getattribute__", "pyart.lazydict.LazyLoadDict.__getitem__", "pyart.lazydict.LazyLoadDict.__getstate__", "pyart.lazydict.LazyLoadDict.__gt__", "pyart.lazydict.LazyLoadDict.__init__", "pyart.lazydict.LazyLoadDict.__init_subclass__", "pyart.lazydict.LazyLoadDict.__iter__", "pyart.lazydict.LazyLoadDict.__le__", "pyart.lazydict.LazyLoadDict.__len__", "pyart.lazydict.LazyLoadDict.__lt__", "pyart.lazydict.LazyLoadDict.__ne__", "pyart.lazydict.LazyLoadDict.__new__", "pyart.lazydict.LazyLoadDict.__reduce__", "pyart.lazydict.LazyLoadDict.__reduce_ex__", "pyart.lazydict.LazyLoadDict.__repr__", "pyart.lazydict.LazyLoadDict.__setattr__", "pyart.lazydict.LazyLoadDict.__setitem__", "pyart.lazydict.LazyLoadDict.__sizeof__", "pyart.lazydict.LazyLoadDict.__str__", "pyart.lazydict.LazyLoadDict.__subclasshook__", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.retrieve._destandardize", "pyart.retrieve._get_res_vol_sides", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_refl_from_zdr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.util.EPOCH_UNITS", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "pyart._debug_info", "pyart.aux_io", "pyart.aux_io.convert_data", "pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_library", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_file_c", "pyart.aux_io.read_file_py", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_knmi_grid_h5", "pyart.aux_io.read_mch_vad", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_product_c", "pyart.aux_io.read_product_py", "pyart.aux_io.read_psr_cpi_header", "pyart.aux_io.read_psr_header", "pyart.aux_io.read_psr_spectra", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_KE", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.gauss_fit", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.retrieval_result", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_refl_from_zdr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.add_field", "pyart.testing.RadarSpectra.add_field_like", "pyart.testing.RadarSpectra.add_filter", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.extract_sweeps", "pyart.testing.RadarSpectra.get_azimuth", "pyart.testing.RadarSpectra.get_elevation", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_field", "pyart.testing.RadarSpectra.get_gate_area", "pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "pyart.testing.RadarSpectra.get_gate_x_y_z", "pyart.testing.RadarSpectra.get_nyquist_vel", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.info", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Manual", "Changelog", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "About the MeteoSwiss fork of Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "Reading MeteoSwiss Metranet data with Py-ART", "Processing of Doppler wind data from a Swiss volumetric scan", "Filtering and retrievals on raw Swiss C-band data", "The Py-ART Radar object and indexing", "Computation times", "Installation", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"filenam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 55, 189, 225, 241, 256, 289, 315, 326, 352, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 639, 650, 834, 870, 886, 901, 934, 960, 971, 997, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1174, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1363], "basepath": [0, 579], "none": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 40, 45, 46, 56, 60, 63, 71, 72, 89, 92, 100, 101, 118, 119, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 411, 413, 421, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 526, 527, 528, 529, 531, 532, 533, 534, 543, 552, 554, 569, 571, 572, 576, 579, 582, 583, 584, 585, 586, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626, 628, 630, 634, 639, 641, 651, 655, 658, 666, 667, 684, 687, 695, 696, 713, 714, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 786, 787, 792, 823, 824, 825, 826, 827, 828, 829, 830, 836, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 891, 892, 893, 894, 895, 896, 897, 898, 899, 903, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 936, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 955, 958, 959, 960, 962, 963, 964, 965, 966, 967, 968, 969, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1034, 1042, 1045, 1046, 1052, 1055, 1063, 1064, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1175, 1177, 1180, 1188, 1189, 1206, 1209, 1217, 1218, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1273, 1282, 1284, 1299, 1301, 1302, 1325, 1334, 1344, 1357, 1359, 1360, 1363], "sweep_dir": [0, 579], "dir_timeformat": [0, 579], "y": [0, 3, 9, 22, 46, 52, 54, 72, 80, 101, 109, 118, 119, 120, 121, 122, 123, 124, 125, 187, 189, 201, 204, 206, 209, 211, 214, 215, 216, 217, 218, 220, 231, 233, 237, 239, 249, 251, 253, 254, 256, 268, 271, 273, 276, 278, 281, 282, 283, 284, 286, 287, 289, 301, 304, 306, 309, 312, 314, 318, 319, 320, 321, 323, 324, 326, 338, 341, 343, 346, 349, 351, 355, 356, 357, 358, 360, 479, 495, 502, 503, 516, 551, 579, 583, 589, 607, 641, 647, 649, 667, 675, 696, 704, 713, 714, 715, 716, 717, 718, 719, 720, 832, 834, 846, 849, 851, 854, 856, 859, 860, 861, 862, 863, 865, 876, 878, 882, 884, 894, 896, 898, 899, 901, 913, 916, 918, 921, 923, 926, 927, 928, 929, 931, 932, 934, 946, 949, 951, 954, 957, 959, 963, 964, 965, 966, 968, 969, 971, 983, 986, 988, 991, 994, 996, 1000, 1001, 1002, 1003, 1005, 1055, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1122, 1138, 1145, 1146, 1159, 1165, 1171, 1173, 1189, 1197, 1218, 1226, 1237, 1281, 1318, 1324, 1325, 1334, 1335, 1342, 1344, 1358], "m": [0, 3, 9, 14, 16, 22, 24, 25, 70, 73, 99, 102, 120, 126, 127, 128, 132, 135, 138, 143, 146, 179, 181, 185, 189, 256, 289, 326, 433, 442, 447, 450, 452, 460, 473, 474, 476, 478, 484, 495, 497, 501, 502, 504, 507, 508, 511, 513, 514, 516, 526, 527, 542, 543, 552, 554, 571, 572, 579, 580, 583, 589, 597, 601, 607, 614, 615, 665, 668, 694, 697, 715, 721, 754, 755, 760, 761, 764, 772, 773, 779, 782, 783, 784, 788, 791, 823, 825, 829, 834, 901, 934, 971, 1062, 1066, 1076, 1085, 1090, 1093, 1095, 1103, 1116, 1117, 1119, 1121, 1127, 1138, 1140, 1144, 1145, 1147, 1150, 1151, 1154, 1156, 1157, 1159, 1187, 1190, 1216, 1219, 1256, 1257, 1272, 1273, 1282, 1284, 1301, 1302, 1314, 1326, 1335, 1344, 1346, 1349, 1357, 1358, 1359, 1362, 1363], "d": [0, 3, 9, 22, 132, 189, 256, 289, 326, 383, 411, 413, 415, 416, 417, 418, 420, 421, 422, 460, 473, 478, 482, 509, 519, 579, 583, 589, 607, 753, 764, 834, 901, 934, 971, 1031, 1032, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1103, 1116, 1121, 1125, 1152, 1163, 1342, 1363], "file_prefix": [0, 579], "file_sufix": [0, 579], "file_timeformat": [0, 579], "dt": [0, 144, 145, 579, 789, 790, 1310], "h": [0, 9, 14, 132, 189, 246, 256, 289, 326, 352, 432, 439, 445, 446, 450, 451, 466, 471, 472, 477, 489, 514, 541, 579, 589, 597, 764, 773, 774, 775, 834, 891, 901, 934, 971, 997, 1075, 1082, 1088, 1089, 1093, 1094, 1109, 1114, 1115, 1120, 1132, 1157, 1271, 1318, 1325, 1359], "": [0, 9, 45, 46, 60, 73, 77, 89, 102, 106, 118, 119, 122, 125, 131, 132, 136, 137, 138, 146, 189, 191, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 256, 258, 271, 278, 282, 283, 284, 289, 291, 304, 314, 319, 320, 321, 326, 328, 341, 351, 356, 357, 358, 415, 416, 422, 437, 446, 450, 451, 452, 453, 466, 479, 484, 485, 495, 499, 502, 507, 508, 509, 511, 514, 516, 517, 519, 541, 542, 552, 579, 589, 639, 641, 655, 668, 672, 684, 697, 701, 713, 714, 717, 720, 763, 764, 777, 778, 779, 791, 834, 836, 849, 856, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 901, 903, 916, 923, 927, 928, 929, 934, 936, 949, 959, 964, 965, 966, 971, 973, 986, 996, 1001, 1002, 1003, 1036, 1037, 1043, 1047, 1048, 1053, 1055, 1057, 1062, 1080, 1089, 1093, 1094, 1095, 1096, 1109, 1122, 1127, 1128, 1138, 1142, 1145, 1150, 1151, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1177, 1190, 1194, 1206, 1219, 1223, 1271, 1272, 1282, 1314, 1315, 1318, 1323, 1325, 1326, 1335, 1342, 1344, 1346, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1364], "sweep_start_tim": [0, 579], "sweep_end_tim": [0, 27, 579, 618], "field_nam": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 35, 37, 47, 61, 62, 64, 69, 85, 90, 91, 93, 98, 114, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 423, 442, 450, 460, 473, 474, 476, 528, 571, 572, 579, 583, 585, 586, 587, 588, 589, 593, 595, 597, 598, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 618, 619, 620, 621, 622, 628, 630, 642, 656, 657, 659, 664, 680, 685, 686, 688, 693, 709, 756, 759, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1085, 1093, 1103, 1116, 1117, 1119, 1166, 1178, 1179, 1181, 1186, 1202, 1207, 1208, 1210, 1215, 1231, 1258, 1301, 1302, 1318, 1355], "additional_metadata": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 35, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 579, 582, 583, 584, 585, 588, 589, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 618, 619, 620, 628, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "file_field_nam": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 37, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 579, 585, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 628, 630, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1029], "fals": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 30, 31, 33, 35, 47, 48, 55, 61, 62, 63, 66, 67, 69, 71, 72, 73, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 126, 130, 131, 132, 136, 137, 151, 153, 155, 157, 163, 164, 167, 169, 171, 176, 177, 189, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 246, 249, 251, 253, 256, 271, 273, 278, 281, 282, 283, 284, 289, 304, 306, 314, 315, 318, 319, 320, 321, 326, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 410, 414, 427, 437, 441, 448, 449, 451, 452, 454, 457, 458, 459, 464, 465, 468, 469, 470, 478, 479, 482, 483, 485, 494, 495, 504, 505, 506, 507, 508, 509, 511, 512, 535, 536, 537, 538, 539, 540, 542, 547, 549, 557, 561, 575, 579, 580, 585, 586, 587, 588, 591, 592, 593, 597, 598, 599, 601, 602, 603, 604, 605, 608, 609, 614, 615, 616, 617, 618, 619, 621, 622, 624, 628, 642, 643, 650, 656, 657, 658, 661, 662, 664, 666, 667, 668, 685, 686, 687, 690, 691, 693, 695, 696, 697, 714, 718, 721, 723, 725, 727, 729, 735, 736, 739, 741, 743, 748, 749, 751, 760, 762, 763, 764, 777, 778, 782, 783, 792, 795, 797, 799, 801, 807, 808, 811, 813, 815, 820, 821, 834, 849, 851, 856, 859, 860, 861, 862, 863, 866, 876, 878, 879, 880, 882, 884, 885, 891, 894, 896, 898, 901, 916, 918, 923, 926, 927, 928, 929, 934, 949, 951, 959, 960, 963, 964, 965, 966, 971, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1006, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1035, 1065, 1066, 1070, 1080, 1084, 1091, 1092, 1094, 1095, 1097, 1100, 1101, 1102, 1107, 1108, 1111, 1112, 1113, 1121, 1122, 1125, 1126, 1128, 1137, 1138, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1166, 1167, 1174, 1175, 1178, 1179, 1180, 1183, 1184, 1186, 1188, 1189, 1190, 1207, 1208, 1209, 1212, 1213, 1215, 1217, 1218, 1219, 1248, 1249, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1277, 1279, 1287, 1291, 1305, 1325, 1332, 1334, 1335, 1337, 1344, 1351, 1352, 1356, 1357, 1360, 1363], "exclude_field": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 579, 585, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 628, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1029], "include_field": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 63, 92, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 579, 585, 588, 593, 597, 598, 599, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 628, 658, 687, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1180, 1209], "verbos": [0, 497, 507, 579, 580, 591, 592, 608, 609, 1140, 1150, 1363], "kwarg": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 130, 131, 132, 203, 204, 205, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 246, 249, 250, 251, 252, 253, 270, 271, 272, 278, 282, 283, 284, 303, 304, 305, 311, 312, 313, 314, 315, 316, 319, 320, 321, 340, 341, 342, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 402, 507, 535, 536, 537, 538, 539, 579, 582, 583, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 597, 599, 601, 602, 603, 604, 605, 606, 607, 613, 614, 615, 616, 617, 618, 619, 762, 763, 764, 848, 849, 850, 856, 860, 861, 862, 863, 875, 876, 878, 879, 880, 881, 882, 883, 884, 891, 894, 895, 896, 897, 898, 915, 916, 917, 923, 927, 928, 929, 948, 949, 950, 956, 957, 958, 959, 960, 961, 964, 965, 966, 985, 986, 987, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1062, 1063, 1064, 1065, 1066, 1150, 1265, 1266, 1267, 1268, 1269, 1358], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 106, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 197, 201, 202, 203, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 311, 312, 313, 315, 316, 324, 348, 349, 350, 352, 353, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 392, 395, 397, 399, 407, 409, 412, 414, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 701, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 842, 846, 847, 848, 861, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 956, 957, 958, 960, 961, 969, 993, 994, 995, 997, 998, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1033, 1035, 1040, 1055, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1211, 1223, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1309, 1310, 1312, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363, 1365], "read": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 151, 204, 215, 271, 282, 304, 319, 341, 356, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 628, 630, 723, 795, 849, 860, 916, 927, 949, 964, 986, 1001, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1029, 1307, 1309, 1310, 1312, 1313, 1316, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1329, 1331, 1334, 1335, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1360, 1361], "skyecho": [0, 1, 27, 579, 581, 618, 1307], "netcdf": [0, 1, 5, 6, 7, 8, 13, 15, 17, 21, 27, 28, 33, 55, 364, 365, 366, 367, 369, 373, 378, 379, 496, 535, 538, 579, 581, 585, 586, 587, 588, 590, 596, 598, 602, 606, 618, 619, 624, 650, 1011, 1012, 1013, 1014, 1016, 1020, 1025, 1026, 1139, 1174, 1265, 1268, 1307, 1349, 1350], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 45, 55, 60, 77, 89, 106, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 426, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 479, 480, 481, 482, 495, 497, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 569, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628, 630, 633, 634, 635, 636, 639, 650, 655, 672, 684, 701, 751, 752, 753, 758, 762, 763, 764, 766, 767, 768, 769, 772, 776, 777, 778, 782, 783, 784, 786, 787, 823, 824, 825, 826, 827, 828, 829, 830, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1069, 1072, 1073, 1074, 1075, 1081, 1082, 1083, 1084, 1088, 1089, 1091, 1092, 1099, 1100, 1101, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1122, 1123, 1124, 1125, 1138, 1140, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1161, 1164, 1174, 1177, 1194, 1206, 1223, 1236, 1299, 1307, 1309, 1311, 1312, 1314, 1315, 1316, 1319, 1321, 1322, 1323, 1326, 1328, 1331, 1337, 1338, 1339, 1340, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1356, 1358, 1359, 1360, 1361, 1362, 1365], "creat": [0, 30, 31, 33, 46, 57, 60, 62, 65, 89, 91, 94, 130, 131, 132, 150, 179, 180, 181, 182, 183, 184, 185, 186, 187, 203, 217, 221, 240, 254, 270, 283, 287, 303, 315, 320, 324, 340, 352, 357, 373, 378, 379, 380, 381, 382, 442, 450, 460, 473, 474, 476, 493, 514, 518, 519, 520, 568, 569, 579, 621, 622, 624, 641, 652, 655, 657, 660, 684, 686, 689, 762, 763, 764, 765, 776, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 848, 862, 866, 885, 899, 915, 928, 932, 948, 960, 965, 969, 985, 997, 1002, 1020, 1025, 1026, 1027, 1028, 1029, 1065, 1066, 1085, 1093, 1103, 1116, 1117, 1119, 1136, 1157, 1162, 1163, 1165, 1175, 1177, 1179, 1182, 1206, 1208, 1211, 1298, 1299, 1309, 1310, 1312, 1315, 1318, 1319, 1320, 1322, 1323, 1325, 1339, 1340, 1344, 1349, 1350, 1352, 1355, 1358, 1359, 1361, 1363], "new": [0, 45, 62, 63, 65, 91, 92, 94, 155, 157, 164, 171, 176, 442, 450, 460, 473, 474, 476, 503, 514, 518, 520, 528, 552, 567, 571, 572, 579, 639, 657, 658, 660, 686, 687, 689, 727, 729, 736, 743, 748, 765, 799, 801, 808, 815, 820, 1085, 1093, 1103, 1116, 1117, 1119, 1146, 1157, 1162, 1179, 1180, 1182, 1208, 1209, 1211, 1258, 1282, 1297, 1301, 1302, 1318, 1342, 1345, 1349, 1352, 1353, 1363, 1365], "cf": [0, 5, 6, 7, 13, 23, 28, 33, 60, 89, 366, 367, 378, 379, 496, 579, 585, 586, 587, 596, 613, 619, 624, 655, 684, 1013, 1014, 1025, 1026, 1139, 1177, 1206, 1312, 1322, 1340, 1349, 1360, 1361], "radial": [0, 5, 6, 7, 13, 23, 28, 33, 60, 89, 130, 131, 366, 367, 378, 427, 451, 452, 493, 494, 507, 518, 519, 525, 542, 569, 579, 585, 586, 587, 596, 613, 619, 624, 655, 684, 762, 763, 1013, 1014, 1025, 1070, 1094, 1095, 1136, 1137, 1150, 1162, 1163, 1177, 1206, 1255, 1272, 1299, 1308, 1312, 1314, 1322, 1340, 1349, 1353, 1358, 1360, 1361], "singl": [0, 31, 45, 131, 132, 134, 209, 210, 212, 214, 276, 277, 279, 281, 309, 310, 316, 318, 346, 347, 353, 355, 380, 540, 575, 579, 622, 639, 763, 764, 765, 770, 782, 854, 855, 857, 859, 921, 922, 924, 926, 954, 955, 961, 963, 991, 992, 998, 1000, 1027, 1066, 1243, 1270, 1305, 1312, 1314, 1317, 1318, 1321, 1342, 1357, 1358, 1361, 1363], "sweep": [0, 1, 27, 31, 40, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 130, 131, 132, 134, 164, 176, 179, 182, 183, 189, 191, 203, 204, 206, 211, 215, 216, 217, 218, 256, 258, 270, 271, 273, 278, 282, 283, 284, 289, 291, 303, 304, 306, 314, 315, 319, 320, 321, 326, 328, 340, 341, 343, 351, 352, 356, 357, 358, 372, 373, 374, 376, 427, 450, 473, 518, 533, 534, 540, 579, 581, 618, 622, 634, 655, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 677, 678, 679, 680, 681, 682, 683, 684, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 706, 707, 708, 709, 710, 711, 712, 736, 748, 762, 763, 764, 767, 770, 773, 774, 776, 808, 820, 823, 826, 827, 834, 836, 848, 849, 851, 856, 860, 861, 862, 863, 901, 903, 915, 916, 918, 923, 927, 928, 929, 934, 936, 948, 949, 951, 959, 960, 964, 965, 966, 971, 973, 985, 986, 988, 996, 997, 1001, 1002, 1003, 1019, 1020, 1021, 1023, 1055, 1063, 1064, 1070, 1093, 1116, 1162, 1177, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1238, 1239, 1263, 1264, 1270, 1307, 1310, 1314, 1318, 1334, 1335, 1337, 1342, 1344, 1346, 1353, 1356, 1357, 1358, 1359, 1360], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 77, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 106, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628, 629, 630, 631, 634, 635, 638, 639, 641, 642, 643, 650, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 672, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 701, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 727, 729, 736, 743, 748, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 799, 801, 808, 815, 820, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 972, 973, 974, 975, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1055, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1194, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1223, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1304, 1305, 1338, 1344, 1352, 1353, 1355, 1360, 1362, 1363], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 45, 46, 47, 55, 60, 61, 62, 64, 69, 89, 90, 91, 93, 98, 121, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 150, 155, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 389, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 520, 528, 530, 552, 569, 571, 572, 574, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628, 630, 631, 634, 635, 639, 641, 642, 650, 655, 656, 657, 659, 664, 684, 685, 686, 688, 693, 716, 718, 719, 727, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 785, 786, 787, 799, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 932, 933, 934, 935, 936, 937, 938, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 974, 975, 985, 986, 987, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1057, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1142, 1143, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1165, 1166, 1174, 1177, 1178, 1179, 1181, 1186, 1206, 1207, 1208, 1210, 1215, 1236, 1258, 1260, 1282, 1299, 1301, 1302, 1304], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 37, 39, 40, 41, 42, 45, 46, 47, 60, 61, 62, 64, 69, 77, 89, 90, 91, 93, 98, 106, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 150, 155, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 385, 391, 406, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 526, 527, 528, 552, 569, 574, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 626, 628, 630, 633, 634, 635, 636, 639, 641, 642, 655, 656, 657, 659, 664, 672, 684, 685, 686, 688, 693, 701, 727, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 786, 787, 799, 823, 824, 825, 826, 827, 828, 829, 830, 849, 851, 856, 859, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1142, 1143, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1165, 1166, 1177, 1178, 1179, 1181, 1186, 1194, 1206, 1207, 1208, 1210, 1215, 1223, 1236, 1250, 1256, 1257, 1258, 1282, 1299, 1304, 1307, 1314, 1352, 1357, 1359, 1360], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 46, 47, 60, 61, 62, 65, 66, 67, 69, 70, 71, 72, 73, 82, 83, 85, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 111, 112, 114, 130, 131, 132, 135, 140, 141, 142, 155, 164, 176, 179, 187, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 249, 251, 253, 254, 271, 273, 278, 281, 282, 283, 284, 287, 304, 306, 314, 315, 318, 319, 320, 321, 324, 341, 343, 351, 352, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 423, 428, 430, 432, 434, 437, 439, 441, 442, 443, 445, 446, 450, 457, 459, 460, 463, 466, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 492, 493, 495, 496, 497, 500, 505, 506, 507, 508, 509, 511, 514, 515, 516, 517, 518, 519, 520, 526, 527, 540, 552, 571, 572, 575, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 634, 640, 641, 642, 655, 656, 657, 660, 661, 662, 664, 665, 666, 667, 668, 677, 678, 680, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 706, 707, 709, 727, 736, 748, 756, 757, 760, 761, 762, 763, 764, 768, 769, 771, 772, 773, 774, 775, 780, 782, 783, 784, 785, 786, 787, 792, 799, 808, 820, 823, 832, 849, 851, 856, 859, 860, 861, 862, 863, 866, 876, 878, 879, 880, 882, 884, 885, 894, 896, 898, 899, 916, 918, 923, 926, 927, 928, 929, 932, 949, 951, 959, 960, 963, 964, 965, 966, 969, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1054, 1055, 1062, 1063, 1064, 1066, 1071, 1073, 1075, 1077, 1080, 1082, 1084, 1085, 1086, 1088, 1089, 1093, 1100, 1102, 1103, 1106, 1109, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1135, 1136, 1138, 1139, 1140, 1143, 1148, 1149, 1150, 1151, 1152, 1154, 1157, 1158, 1159, 1160, 1162, 1163, 1165, 1166, 1177, 1178, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1199, 1200, 1202, 1206, 1207, 1208, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1228, 1229, 1231, 1236, 1241, 1243, 1256, 1257, 1270, 1282, 1301, 1302, 1305, 1307, 1309, 1310, 1312, 1313, 1316, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1337, 1339, 1341, 1342, 1344, 1346, 1349, 1350, 1351, 1352, 1353, 1360, 1361, 1363], "from": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 45, 46, 49, 54, 57, 60, 62, 65, 69, 70, 71, 72, 89, 91, 94, 98, 99, 100, 101, 118, 119, 120, 122, 125, 126, 130, 131, 132, 135, 136, 137, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 204, 205, 206, 211, 214, 215, 216, 217, 218, 221, 229, 231, 233, 234, 235, 237, 239, 240, 246, 247, 249, 251, 253, 254, 271, 272, 273, 278, 281, 282, 283, 284, 287, 304, 305, 306, 312, 314, 315, 318, 319, 320, 321, 324, 341, 342, 343, 349, 351, 352, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 411, 419, 421, 426, 427, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 488, 489, 490, 493, 495, 496, 497, 502, 503, 505, 506, 507, 509, 510, 511, 514, 516, 518, 519, 520, 525, 533, 534, 540, 541, 544, 545, 546, 551, 552, 554, 555, 556, 557, 558, 560, 561, 567, 569, 576, 577, 579, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 633, 634, 635, 636, 639, 641, 644, 649, 652, 655, 657, 660, 664, 665, 666, 667, 684, 686, 689, 693, 694, 695, 696, 713, 714, 715, 717, 720, 721, 723, 727, 729, 736, 743, 748, 751, 752, 753, 757, 762, 763, 764, 767, 768, 772, 773, 774, 775, 776, 777, 778, 780, 782, 783, 784, 792, 794, 795, 799, 801, 808, 815, 820, 823, 824, 825, 826, 827, 828, 829, 830, 832, 849, 850, 851, 856, 859, 860, 861, 862, 863, 866, 874, 876, 878, 879, 880, 882, 884, 885, 891, 892, 894, 896, 898, 899, 916, 917, 918, 923, 926, 927, 928, 929, 932, 949, 950, 951, 957, 959, 960, 963, 964, 965, 966, 969, 986, 987, 988, 994, 996, 997, 1000, 1001, 1002, 1003, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1040, 1042, 1045, 1052, 1054, 1057, 1059, 1060, 1061, 1065, 1066, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1136, 1138, 1139, 1140, 1145, 1146, 1148, 1149, 1150, 1152, 1153, 1154, 1157, 1159, 1161, 1162, 1163, 1165, 1168, 1173, 1177, 1179, 1182, 1186, 1187, 1188, 1189, 1206, 1208, 1211, 1215, 1216, 1217, 1218, 1243, 1255, 1263, 1264, 1270, 1271, 1274, 1275, 1276, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1290, 1291, 1297, 1299, 1307, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1328, 1331, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1365], "base": [0, 60, 65, 66, 67, 69, 70, 71, 72, 73, 89, 94, 95, 96, 98, 99, 100, 101, 102, 131, 132, 151, 179, 180, 181, 182, 183, 184, 185, 186, 217, 283, 320, 357, 380, 432, 452, 460, 478, 479, 482, 495, 507, 542, 552, 579, 655, 660, 661, 662, 664, 665, 666, 667, 668, 684, 689, 690, 691, 693, 694, 695, 696, 697, 723, 763, 764, 776, 795, 823, 824, 825, 826, 827, 828, 829, 830, 862, 928, 965, 1002, 1027, 1061, 1065, 1066, 1075, 1095, 1103, 1121, 1122, 1125, 1138, 1150, 1177, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1206, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1272, 1282, 1308, 1311, 1312, 1314, 1349, 1353, 1356, 1359, 1360, 1361, 1363], "path": [0, 23, 32, 132, 579, 613, 623, 752, 753, 764, 1175, 1236, 1314, 1315, 1349, 1359, 1362, 1363], "where": [0, 5, 6, 7, 28, 32, 71, 72, 100, 101, 118, 122, 125, 129, 130, 131, 132, 133, 135, 137, 141, 142, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 182, 183, 204, 211, 214, 215, 216, 217, 218, 232, 248, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 366, 367, 428, 442, 450, 451, 460, 473, 474, 476, 479, 494, 495, 510, 511, 513, 519, 528, 533, 534, 543, 544, 552, 574, 579, 585, 586, 587, 619, 623, 666, 667, 695, 696, 713, 717, 720, 725, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 742, 743, 744, 746, 747, 748, 749, 750, 752, 753, 758, 760, 761, 762, 763, 764, 766, 767, 768, 769, 772, 776, 778, 786, 787, 797, 799, 800, 801, 802, 803, 804, 806, 807, 808, 811, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 826, 827, 849, 856, 859, 860, 861, 862, 863, 877, 893, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003, 1006, 1013, 1014, 1071, 1085, 1093, 1094, 1103, 1116, 1117, 1119, 1122, 1137, 1138, 1153, 1154, 1156, 1163, 1188, 1189, 1217, 1218, 1258, 1263, 1264, 1273, 1274, 1282, 1304, 1314, 1315, 1318, 1323, 1326, 1342, 1344, 1349, 1352, 1356, 1365], "store": [0, 3, 9, 14, 16, 22, 26, 30, 31, 33, 46, 60, 89, 130, 131, 132, 383, 407, 428, 442, 450, 460, 473, 474, 476, 513, 579, 583, 589, 597, 601, 607, 616, 621, 622, 624, 641, 655, 684, 762, 763, 764, 782, 783, 1031, 1066, 1071, 1085, 1093, 1103, 1116, 1117, 1119, 1156, 1165, 1177, 1206, 1309, 1314, 1342, 1349, 1352, 1355, 1357, 1358, 1359, 1360, 1365], "extract": [0, 10, 204, 271, 304, 341, 376, 474, 478, 496, 533, 534, 546, 579, 593, 849, 916, 949, 986, 1023, 1117, 1121, 1139, 1263, 1264, 1276, 1312, 1318, 1339, 1341, 1344, 1347, 1349, 1361], "If": [0, 6, 7, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 29, 30, 31, 45, 46, 47, 60, 62, 63, 64, 71, 89, 91, 92, 93, 100, 121, 123, 124, 126, 127, 130, 134, 164, 176, 179, 182, 183, 189, 191, 204, 205, 210, 211, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 271, 272, 277, 278, 282, 283, 284, 289, 291, 304, 305, 310, 313, 314, 315, 319, 320, 321, 326, 328, 341, 342, 347, 350, 351, 352, 356, 357, 358, 363, 365, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 410, 417, 421, 425, 432, 437, 441, 442, 443, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 463, 464, 465, 468, 469, 470, 473, 474, 476, 478, 479, 482, 483, 484, 485, 486, 488, 489, 493, 494, 495, 496, 497, 504, 507, 508, 509, 510, 511, 512, 515, 516, 520, 528, 533, 534, 541, 542, 560, 561, 562, 571, 572, 579, 580, 586, 587, 588, 591, 592, 597, 599, 601, 602, 603, 604, 605, 608, 609, 614, 615, 616, 617, 618, 620, 621, 622, 639, 641, 642, 655, 657, 658, 659, 666, 684, 686, 687, 688, 695, 716, 718, 719, 721, 736, 748, 754, 756, 760, 761, 762, 765, 769, 770, 774, 776, 782, 783, 784, 808, 820, 823, 826, 827, 834, 836, 849, 850, 855, 856, 860, 861, 862, 863, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 891, 892, 893, 894, 895, 896, 897, 898, 901, 903, 916, 917, 922, 923, 927, 928, 929, 934, 936, 949, 950, 955, 958, 959, 960, 964, 965, 966, 971, 973, 986, 987, 992, 995, 996, 997, 1001, 1002, 1003, 1006, 1010, 1012, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1038, 1042, 1049, 1052, 1066, 1068, 1075, 1080, 1084, 1085, 1086, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1111, 1112, 1113, 1116, 1117, 1119, 1121, 1122, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1136, 1137, 1138, 1139, 1140, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1158, 1159, 1165, 1166, 1177, 1179, 1180, 1181, 1188, 1206, 1208, 1209, 1210, 1217, 1258, 1263, 1264, 1271, 1272, 1290, 1291, 1292, 1301, 1302, 1344, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1362, 1363, 1365], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 45, 46, 47, 48, 53, 60, 62, 63, 70, 71, 72, 73, 77, 89, 91, 92, 99, 100, 101, 102, 106, 118, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 149, 151, 153, 155, 156, 157, 158, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 176, 177, 179, 182, 183, 189, 191, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 271, 272, 273, 276, 277, 278, 281, 282, 283, 284, 287, 289, 291, 304, 305, 306, 309, 310, 314, 315, 318, 319, 320, 321, 324, 326, 328, 341, 342, 343, 346, 347, 351, 352, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 389, 396, 410, 417, 418, 421, 425, 427, 428, 433, 435, 437, 441, 442, 443, 446, 450, 451, 452, 457, 460, 464, 466, 473, 474, 476, 478, 479, 481, 483, 484, 485, 488, 489, 494, 495, 496, 497, 500, 504, 505, 507, 508, 509, 511, 512, 513, 515, 516, 518, 520, 525, 526, 527, 533, 534, 540, 541, 542, 544, 551, 552, 554, 557, 560, 561, 562, 564, 570, 571, 572, 574, 575, 579, 582, 583, 584, 585, 586, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 634, 639, 641, 642, 643, 648, 655, 657, 658, 665, 666, 667, 668, 672, 684, 686, 687, 694, 695, 696, 697, 701, 713, 716, 717, 718, 719, 720, 723, 725, 727, 728, 729, 730, 732, 734, 735, 736, 739, 741, 742, 743, 744, 746, 748, 749, 751, 752, 753, 754, 756, 760, 761, 762, 763, 764, 765, 766, 769, 770, 771, 772, 774, 776, 777, 778, 781, 782, 783, 784, 785, 786, 792, 795, 797, 799, 800, 801, 802, 804, 806, 807, 808, 811, 813, 814, 815, 816, 818, 820, 821, 823, 826, 827, 834, 836, 849, 850, 851, 854, 855, 856, 859, 860, 861, 862, 863, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 891, 892, 893, 894, 895, 896, 897, 898, 901, 903, 916, 917, 918, 921, 922, 923, 926, 927, 928, 929, 932, 934, 936, 949, 950, 951, 954, 955, 959, 960, 963, 964, 965, 966, 969, 971, 973, 986, 987, 988, 991, 992, 996, 997, 1000, 1001, 1002, 1003, 1006, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1038, 1039, 1042, 1044, 1049, 1050, 1052, 1055, 1062, 1063, 1064, 1065, 1066, 1068, 1070, 1071, 1076, 1078, 1080, 1084, 1085, 1086, 1089, 1093, 1094, 1095, 1100, 1103, 1107, 1109, 1116, 1117, 1119, 1121, 1122, 1124, 1126, 1127, 1128, 1131, 1132, 1137, 1138, 1139, 1140, 1143, 1147, 1148, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1162, 1165, 1166, 1167, 1172, 1177, 1179, 1180, 1187, 1188, 1189, 1190, 1194, 1206, 1208, 1209, 1216, 1217, 1218, 1219, 1223, 1243, 1255, 1256, 1257, 1263, 1264, 1270, 1271, 1272, 1274, 1281, 1282, 1284, 1287, 1290, 1291, 1292, 1294, 1300, 1301, 1302, 1304, 1305, 1306, 1309, 1314, 1315, 1318, 1323, 1324, 1325, 1326, 1329, 1334, 1335, 1342, 1344, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1365], "current": [0, 43, 48, 130, 155, 157, 164, 171, 176, 189, 191, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 229, 231, 232, 233, 234, 235, 237, 239, 246, 247, 248, 249, 251, 253, 256, 258, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 291, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 326, 328, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 371, 424, 442, 450, 460, 473, 474, 476, 497, 507, 540, 579, 632, 637, 643, 727, 729, 736, 743, 748, 760, 761, 762, 799, 801, 808, 815, 820, 834, 836, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 874, 876, 877, 878, 879, 880, 882, 884, 891, 892, 893, 894, 896, 898, 901, 903, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 934, 936, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 971, 973, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1005, 1018, 1056, 1058, 1085, 1093, 1103, 1116, 1117, 1119, 1140, 1150, 1167, 1270, 1307, 1363], "directori": [0, 45, 576, 579, 639, 1175, 1306, 1314, 1362, 1363], "time": [0, 1, 3, 9, 18, 22, 27, 30, 33, 46, 54, 55, 60, 89, 130, 144, 145, 189, 191, 204, 206, 211, 215, 216, 217, 218, 256, 258, 271, 273, 278, 282, 283, 284, 289, 291, 304, 306, 314, 315, 319, 320, 321, 326, 328, 341, 343, 351, 352, 356, 357, 358, 361, 364, 365, 376, 378, 379, 432, 441, 442, 449, 450, 459, 460, 473, 474, 476, 478, 496, 502, 511, 513, 535, 538, 579, 581, 583, 589, 599, 603, 607, 618, 621, 624, 641, 649, 650, 655, 684, 760, 761, 762, 789, 790, 834, 836, 849, 851, 856, 860, 861, 862, 863, 901, 903, 916, 918, 923, 927, 928, 929, 934, 936, 949, 951, 959, 960, 964, 965, 966, 971, 973, 986, 988, 996, 997, 1001, 1002, 1003, 1008, 1011, 1012, 1023, 1025, 1026, 1055, 1058, 1066, 1075, 1084, 1085, 1092, 1093, 1102, 1103, 1116, 1117, 1119, 1121, 1139, 1145, 1154, 1156, 1165, 1173, 1174, 1177, 1206, 1265, 1268, 1307, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1351, 1357, 1358, 1360, 1363, 1365], "format": [0, 3, 9, 22, 26, 33, 54, 55, 60, 89, 189, 191, 204, 206, 211, 214, 215, 216, 217, 218, 256, 258, 271, 273, 278, 281, 282, 283, 284, 289, 291, 304, 306, 314, 315, 318, 319, 320, 321, 326, 328, 341, 343, 351, 352, 355, 356, 357, 358, 363, 373, 375, 377, 378, 379, 381, 577, 578, 579, 583, 589, 607, 616, 624, 649, 650, 655, 684, 834, 836, 849, 851, 856, 859, 860, 861, 862, 863, 901, 903, 916, 918, 923, 926, 927, 928, 929, 934, 936, 949, 951, 959, 960, 963, 964, 965, 966, 971, 973, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1007, 1010, 1020, 1022, 1024, 1025, 1026, 1028, 1173, 1174, 1177, 1206, 1307, 1335, 1349, 1351, 1357], "prefix": [0, 63, 92, 579, 658, 687, 1175, 1180, 1209], "add": [0, 3, 9, 22, 47, 61, 62, 90, 91, 137, 204, 206, 211, 214, 215, 216, 217, 218, 231, 232, 233, 234, 235, 237, 239, 246, 248, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 439, 442, 450, 460, 473, 476, 579, 583, 589, 607, 642, 656, 657, 685, 686, 765, 778, 849, 851, 856, 859, 860, 861, 862, 863, 876, 877, 878, 879, 880, 882, 884, 891, 893, 894, 896, 898, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1082, 1085, 1093, 1103, 1116, 1119, 1166, 1178, 1179, 1207, 1208, 1307, 1318, 1323, 1324, 1325, 1334, 1335, 1337, 1342, 1344, 1345, 1353, 1359, 1362, 1363, 1365], "contain": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 34, 40, 45, 46, 47, 48, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 127, 130, 131, 132, 134, 135, 136, 137, 179, 180, 181, 182, 183, 184, 185, 186, 193, 204, 211, 214, 215, 216, 217, 218, 220, 230, 260, 271, 278, 281, 282, 283, 284, 286, 293, 304, 314, 315, 318, 319, 320, 321, 323, 330, 341, 351, 352, 355, 356, 357, 358, 360, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 456, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 504, 507, 508, 509, 510, 511, 512, 513, 514, 516, 519, 525, 526, 527, 533, 534, 540, 542, 546, 569, 571, 572, 575, 579, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 626, 634, 639, 641, 642, 643, 655, 656, 660, 661, 662, 664, 665, 666, 667, 668, 684, 685, 689, 690, 691, 693, 694, 695, 696, 697, 751, 752, 753, 754, 760, 761, 762, 763, 764, 770, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 823, 824, 825, 826, 827, 828, 829, 830, 838, 849, 856, 859, 860, 861, 862, 863, 865, 875, 905, 916, 923, 926, 927, 928, 929, 931, 938, 949, 959, 960, 963, 964, 965, 966, 968, 975, 986, 996, 997, 1000, 1001, 1002, 1003, 1005, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1029, 1031, 1044, 1062, 1063, 1064, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1161, 1163, 1165, 1166, 1167, 1177, 1178, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1206, 1207, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1255, 1256, 1257, 1263, 1264, 1270, 1272, 1276, 1299, 1301, 1302, 1305, 1315, 1327, 1328, 1349, 1351, 1352, 1355, 1357, 1358, 1359, 1360, 1362, 1363, 1365], "sufix": [0, 579], "datetim": [0, 1, 27, 144, 145, 189, 191, 211, 215, 217, 256, 258, 278, 282, 283, 289, 291, 314, 319, 320, 326, 328, 351, 356, 357, 361, 364, 365, 382, 442, 450, 460, 473, 474, 476, 535, 536, 537, 538, 539, 579, 581, 618, 789, 790, 834, 836, 856, 860, 862, 901, 903, 923, 927, 928, 934, 936, 959, 964, 965, 971, 973, 996, 1001, 1002, 1008, 1011, 1012, 1029, 1085, 1093, 1103, 1116, 1117, 1119, 1265, 1266, 1267, 1268, 1269], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 46, 47, 54, 55, 61, 62, 63, 65, 66, 67, 69, 77, 86, 89, 90, 91, 92, 94, 95, 96, 98, 106, 115, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 144, 145, 151, 179, 180, 181, 182, 183, 184, 185, 186, 187, 205, 218, 221, 229, 233, 234, 240, 247, 254, 272, 284, 287, 305, 315, 321, 324, 342, 358, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 389, 408, 409, 415, 416, 419, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 511, 512, 513, 514, 518, 519, 520, 526, 527, 528, 540, 541, 543, 545, 546, 550, 552, 553, 554, 557, 562, 563, 567, 568, 571, 572, 574, 575, 576, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626, 630, 641, 642, 649, 650, 656, 657, 658, 660, 661, 662, 664, 672, 681, 684, 685, 686, 687, 689, 690, 691, 693, 701, 710, 723, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 786, 787, 789, 790, 795, 823, 824, 825, 826, 827, 828, 829, 830, 832, 850, 863, 866, 874, 878, 879, 885, 892, 899, 917, 929, 932, 950, 960, 966, 969, 987, 1003, 1008, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1036, 1037, 1040, 1043, 1047, 1048, 1053, 1055, 1062, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1154, 1155, 1156, 1157, 1161, 1162, 1163, 1164, 1165, 1166, 1173, 1174, 1178, 1179, 1180, 1182, 1183, 1184, 1186, 1194, 1203, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1215, 1223, 1232, 1237, 1238, 1239, 1240, 1243, 1256, 1257, 1258, 1270, 1271, 1273, 1275, 1276, 1280, 1282, 1283, 1284, 1287, 1292, 1293, 1297, 1298, 1301, 1302, 1304, 1305, 1314, 1318, 1325, 1326, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1342, 1344, 1345, 1349, 1350, 1351, 1355, 1356, 1357, 1358, 1359, 1363], "The": [0, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 45, 46, 60, 89, 118, 122, 125, 126, 129, 130, 131, 132, 133, 135, 139, 140, 141, 142, 150, 180, 181, 185, 209, 234, 276, 309, 346, 352, 362, 363, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 396, 423, 424, 427, 428, 430, 433, 437, 442, 443, 446, 447, 449, 450, 460, 462, 463, 466, 468, 473, 474, 476, 478, 479, 480, 481, 482, 494, 495, 497, 500, 502, 504, 505, 506, 507, 508, 509, 511, 512, 515, 516, 517, 518, 521, 522, 525, 528, 529, 530, 531, 532, 540, 541, 542, 543, 547, 548, 549, 551, 553, 555, 556, 558, 559, 560, 561, 564, 567, 569, 571, 572, 574, 578, 579, 583, 584, 588, 589, 596, 597, 599, 601, 602, 603, 604, 605, 607, 612, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 639, 641, 655, 684, 713, 717, 720, 721, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 772, 773, 774, 775, 781, 782, 783, 784, 785, 786, 787, 824, 825, 829, 854, 879, 921, 954, 991, 997, 1009, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1031, 1055, 1056, 1057, 1058, 1062, 1065, 1066, 1070, 1071, 1073, 1076, 1080, 1085, 1086, 1089, 1090, 1092, 1093, 1103, 1105, 1106, 1109, 1111, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1137, 1138, 1140, 1143, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1158, 1159, 1160, 1162, 1165, 1177, 1206, 1236, 1250, 1251, 1252, 1255, 1258, 1259, 1260, 1261, 1262, 1270, 1271, 1272, 1273, 1277, 1278, 1279, 1281, 1283, 1285, 1286, 1288, 1289, 1290, 1291, 1294, 1297, 1299, 1301, 1302, 1304, 1312, 1315, 1326, 1337, 1344, 1349, 1350, 1353, 1356, 1357, 1358, 1359, 1362], "start": [0, 1, 18, 30, 46, 60, 75, 76, 87, 88, 89, 104, 105, 116, 117, 230, 376, 382, 451, 474, 496, 511, 536, 579, 581, 591, 599, 603, 621, 641, 655, 670, 671, 682, 683, 684, 699, 700, 711, 712, 875, 1023, 1029, 1094, 1117, 1139, 1154, 1165, 1177, 1192, 1193, 1204, 1205, 1206, 1221, 1222, 1233, 1234, 1266, 1314, 1323, 1324, 1334, 1335, 1349, 1351, 1357, 1359, 1363, 1364], "end": [0, 1, 18, 27, 30, 45, 68, 76, 84, 88, 97, 105, 113, 117, 131, 132, 135, 137, 230, 511, 579, 581, 599, 603, 618, 621, 639, 663, 671, 679, 683, 692, 700, 708, 712, 751, 752, 753, 763, 764, 767, 768, 772, 778, 782, 783, 784, 875, 1154, 1185, 1193, 1201, 1205, 1214, 1222, 1230, 1234, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1358], "period": [0, 134, 540, 579, 770, 1270, 1353], "we": [0, 494, 579, 773, 1137, 1307, 1314, 1315, 1318, 1323, 1342, 1344, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1364, 1365], "want": [0, 8, 579, 588, 1315, 1349, 1356, 1360, 1363, 1365], "dict": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 34, 35, 38, 41, 46, 47, 49, 54, 60, 61, 89, 90, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 141, 142, 187, 254, 287, 315, 324, 362, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 381, 382, 383, 423, 427, 433, 434, 436, 437, 444, 447, 451, 452, 453, 454, 455, 461, 462, 475, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 526, 527, 528, 554, 569, 579, 582, 583, 584, 585, 586, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 610, 611, 614, 615, 616, 617, 618, 619, 620, 626, 628, 631, 635, 641, 642, 644, 649, 655, 656, 684, 685, 716, 718, 719, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 773, 774, 775, 777, 778, 782, 783, 784, 786, 787, 832, 899, 932, 960, 969, 1009, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1028, 1029, 1031, 1065, 1066, 1070, 1076, 1077, 1079, 1080, 1087, 1090, 1094, 1095, 1096, 1097, 1098, 1104, 1105, 1118, 1121, 1122, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1165, 1166, 1168, 1173, 1177, 1178, 1206, 1207, 1256, 1257, 1258, 1284, 1299, 1351], "option": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 46, 47, 48, 55, 56, 60, 61, 62, 63, 66, 67, 69, 71, 72, 77, 89, 92, 95, 96, 98, 100, 101, 118, 119, 120, 122, 123, 125, 130, 131, 132, 134, 135, 136, 137, 149, 151, 155, 157, 164, 171, 176, 204, 211, 215, 216, 217, 218, 220, 231, 233, 235, 237, 239, 246, 249, 251, 253, 271, 278, 282, 283, 284, 286, 304, 312, 313, 314, 315, 319, 320, 321, 323, 341, 349, 350, 351, 352, 356, 357, 358, 360, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 423, 426, 427, 436, 444, 446, 447, 455, 462, 466, 467, 468, 469, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 493, 495, 496, 497, 502, 503, 504, 507, 508, 509, 510, 516, 518, 519, 533, 534, 541, 557, 569, 574, 575, 579, 582, 583, 584, 585, 588, 589, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626, 634, 641, 642, 643, 650, 651, 655, 656, 657, 658, 661, 662, 664, 666, 667, 672, 684, 687, 690, 691, 693, 695, 696, 713, 714, 715, 717, 718, 720, 723, 727, 729, 736, 743, 748, 751, 752, 753, 756, 757, 762, 763, 764, 765, 770, 772, 777, 778, 795, 799, 801, 808, 815, 820, 849, 856, 860, 861, 862, 863, 865, 876, 878, 880, 882, 884, 891, 894, 896, 898, 916, 923, 927, 928, 929, 931, 949, 957, 958, 959, 960, 964, 965, 966, 968, 986, 994, 995, 996, 997, 1001, 1002, 1003, 1005, 1006, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1066, 1069, 1070, 1079, 1087, 1089, 1090, 1098, 1105, 1109, 1110, 1111, 1112, 1121, 1122, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1138, 1139, 1140, 1145, 1146, 1147, 1150, 1151, 1152, 1153, 1159, 1161, 1162, 1163, 1165, 1166, 1167, 1174, 1177, 1178, 1179, 1180, 1183, 1184, 1186, 1188, 1189, 1194, 1206, 1209, 1212, 1213, 1215, 1217, 1218, 1263, 1264, 1271, 1287, 1299, 1304, 1305, 1307, 1344, 1360], "dictionari": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 37, 38, 41, 44, 46, 47, 60, 61, 62, 64, 89, 90, 91, 93, 121, 123, 124, 127, 128, 130, 131, 132, 134, 136, 137, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 386, 412, 414, 426, 427, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 445, 446, 451, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 504, 510, 511, 512, 513, 516, 517, 526, 527, 528, 569, 579, 582, 583, 584, 585, 586, 587, 588, 589, 593, 594, 595, 597, 598, 599, 601, 602, 603, 604, 605, 607, 610, 611, 614, 615, 616, 617, 618, 619, 620, 624, 626, 628, 630, 631, 635, 638, 641, 642, 655, 656, 657, 659, 684, 685, 686, 688, 716, 718, 719, 751, 752, 753, 754, 755, 760, 761, 762, 763, 764, 765, 770, 773, 774, 775, 777, 778, 782, 783, 784, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1029, 1030, 1031, 1033, 1035, 1062, 1065, 1066, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1078, 1080, 1081, 1082, 1083, 1084, 1088, 1089, 1094, 1099, 1100, 1101, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1121, 1122, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1147, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1165, 1166, 1177, 1178, 1179, 1181, 1206, 1207, 1208, 1210, 1235, 1256, 1257, 1258, 1299, 1315, 1352, 1360], "map": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 41, 46, 60, 89, 122, 125, 209, 233, 234, 235, 246, 276, 287, 309, 311, 312, 313, 315, 316, 324, 346, 348, 349, 350, 352, 353, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 421, 428, 510, 579, 585, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 628, 635, 641, 655, 684, 717, 720, 854, 878, 879, 880, 891, 921, 932, 954, 956, 957, 958, 960, 961, 969, 991, 993, 994, 995, 997, 998, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1042, 1052, 1071, 1153, 1165, 1177, 1206, 1318, 1321, 1322, 1324, 1325, 1340, 1342, 1344, 1349, 1350, 1357, 1358, 1359, 1361, 1363], "field": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 46, 47, 54, 60, 61, 62, 63, 64, 69, 72, 85, 89, 90, 91, 92, 93, 98, 101, 114, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 167, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 203, 204, 205, 206, 211, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 270, 271, 272, 273, 278, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 299, 303, 304, 305, 306, 314, 315, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 336, 340, 341, 342, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 423, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 525, 526, 527, 528, 530, 546, 551, 552, 554, 569, 571, 572, 573, 574, 579, 583, 585, 586, 587, 588, 589, 593, 595, 597, 598, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628, 630, 633, 634, 635, 636, 641, 642, 649, 655, 656, 657, 658, 659, 664, 667, 680, 684, 685, 686, 687, 688, 693, 696, 709, 722, 723, 725, 727, 728, 729, 730, 731, 732, 734, 735, 739, 741, 742, 743, 744, 746, 747, 749, 750, 751, 752, 753, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 776, 777, 778, 782, 783, 784, 786, 787, 795, 797, 799, 800, 801, 802, 803, 804, 806, 807, 811, 813, 814, 815, 816, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 844, 848, 849, 850, 851, 856, 859, 860, 861, 862, 863, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 911, 915, 916, 917, 918, 923, 926, 927, 928, 929, 932, 933, 934, 935, 936, 937, 938, 944, 948, 949, 950, 951, 959, 960, 963, 964, 965, 966, 969, 970, 971, 972, 973, 974, 975, 981, 985, 986, 987, 988, 996, 997, 1000, 1001, 1002, 1003, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1057, 1062, 1063, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1166, 1173, 1177, 1178, 1179, 1180, 1181, 1186, 1189, 1202, 1206, 1207, 1208, 1209, 1210, 1215, 1218, 1231, 1237, 1238, 1239, 1240, 1241, 1243, 1246, 1247, 1248, 1249, 1255, 1256, 1257, 1258, 1260, 1276, 1281, 1282, 1284, 1299, 1301, 1302, 1303, 1304, 1307, 1309, 1312, 1314, 1318, 1319, 1320, 1323, 1324, 1326, 1337, 1341, 1342, 1343, 1344, 1345, 1349, 1350, 1351, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1363], "radar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 40, 46, 54, 89, 91, 92, 94, 95, 96, 98, 101, 106, 118, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 151, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 203, 204, 209, 211, 215, 216, 217, 218, 231, 235, 237, 239, 249, 251, 253, 254, 270, 271, 276, 278, 282, 283, 284, 287, 303, 304, 309, 312, 314, 315, 319, 320, 321, 324, 340, 341, 346, 349, 351, 352, 356, 357, 358, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 526, 527, 528, 530, 533, 534, 537, 539, 540, 542, 543, 544, 545, 546, 550, 552, 554, 557, 562, 567, 569, 570, 571, 572, 573, 574, 575, 579, 582, 583, 585, 586, 587, 588, 589, 590, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626, 628, 630, 634, 640, 641, 649, 684, 686, 687, 689, 690, 691, 693, 696, 701, 713, 714, 715, 723, 736, 748, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 786, 787, 788, 791, 792, 795, 808, 820, 823, 824, 825, 826, 827, 828, 829, 830, 832, 848, 849, 854, 856, 860, 861, 862, 863, 876, 880, 882, 884, 894, 896, 898, 899, 915, 916, 921, 923, 927, 928, 929, 932, 948, 949, 954, 957, 959, 960, 964, 965, 966, 969, 985, 986, 991, 994, 996, 997, 1001, 1002, 1003, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1054, 1055, 1057, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1165, 1173, 1206, 1208, 1209, 1211, 1212, 1213, 1215, 1218, 1223, 1238, 1239, 1240, 1243, 1246, 1247, 1248, 1249, 1256, 1257, 1258, 1260, 1263, 1264, 1267, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1280, 1282, 1284, 1287, 1292, 1297, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1317, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1353, 1355, 1356, 1357, 1358, 1359, 1361, 1364], "unlik": [0, 5, 10, 15, 27, 28, 366, 367, 579, 585, 593, 598, 618, 619, 1013, 1014], "other": [0, 5, 10, 15, 26, 27, 28, 46, 54, 56, 60, 89, 130, 131, 132, 134, 179, 183, 204, 206, 211, 214, 215, 216, 217, 218, 233, 234, 235, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 369, 372, 374, 376, 380, 388, 479, 495, 497, 511, 513, 514, 518, 579, 585, 593, 598, 616, 618, 619, 641, 649, 651, 655, 684, 762, 763, 764, 765, 770, 776, 823, 827, 849, 851, 856, 859, 860, 861, 862, 863, 878, 879, 880, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1010, 1013, 1014, 1016, 1019, 1021, 1023, 1027, 1055, 1066, 1122, 1138, 1140, 1154, 1156, 1157, 1162, 1165, 1173, 1177, 1206, 1238, 1239, 1240, 1307, 1344, 1349, 1351, 1358, 1362, 1363, 1365], "function": [0, 5, 10, 13, 15, 27, 28, 32, 45, 71, 100, 134, 148, 150, 179, 180, 181, 182, 183, 184, 185, 186, 203, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 270, 271, 278, 282, 283, 284, 287, 303, 304, 314, 319, 320, 321, 324, 340, 341, 351, 356, 357, 358, 363, 366, 367, 370, 371, 377, 380, 423, 428, 437, 443, 460, 463, 478, 479, 495, 507, 509, 515, 517, 518, 546, 552, 557, 558, 559, 568, 569, 575, 577, 579, 585, 593, 596, 598, 618, 619, 623, 627, 639, 640, 666, 695, 770, 773, 774, 775, 776, 794, 823, 824, 825, 826, 827, 828, 829, 830, 831, 848, 849, 856, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 915, 916, 923, 927, 928, 929, 932, 948, 949, 959, 964, 965, 966, 969, 985, 986, 996, 1001, 1002, 1003, 1006, 1007, 1010, 1013, 1014, 1017, 1018, 1024, 1027, 1054, 1055, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1071, 1080, 1086, 1103, 1106, 1121, 1122, 1138, 1150, 1152, 1158, 1160, 1162, 1164, 1188, 1217, 1250, 1276, 1282, 1287, 1288, 1289, 1298, 1299, 1305, 1306, 1307, 1323, 1342, 1344, 1349, 1353, 1355, 1357, 1358, 1359, 1360, 1362, 1363], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 45, 46, 48, 60, 62, 63, 66, 67, 69, 71, 72, 73, 89, 91, 92, 95, 96, 98, 100, 101, 102, 121, 123, 124, 130, 131, 132, 134, 135, 136, 137, 151, 155, 164, 179, 180, 181, 182, 183, 184, 185, 186, 203, 235, 270, 287, 303, 315, 324, 340, 352, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 396, 410, 421, 425, 427, 428, 437, 442, 450, 452, 460, 473, 474, 476, 478, 479, 493, 494, 495, 496, 497, 507, 508, 509, 513, 516, 518, 519, 525, 540, 541, 551, 552, 557, 560, 561, 562, 575, 576, 579, 582, 583, 584, 585, 586, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 634, 639, 641, 643, 655, 657, 658, 661, 662, 664, 666, 667, 668, 684, 686, 687, 690, 691, 693, 695, 696, 697, 716, 718, 719, 723, 727, 736, 751, 752, 753, 757, 762, 763, 764, 767, 768, 769, 770, 772, 774, 776, 777, 778, 782, 783, 784, 795, 799, 808, 823, 824, 825, 826, 827, 828, 829, 830, 848, 880, 915, 932, 948, 960, 969, 985, 997, 1006, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1031, 1042, 1044, 1052, 1055, 1057, 1063, 1064, 1065, 1066, 1068, 1070, 1071, 1080, 1085, 1093, 1095, 1103, 1116, 1117, 1119, 1121, 1122, 1136, 1137, 1138, 1139, 1140, 1150, 1151, 1152, 1156, 1159, 1162, 1163, 1165, 1167, 1177, 1179, 1180, 1183, 1184, 1186, 1188, 1189, 1190, 1206, 1208, 1209, 1212, 1213, 1215, 1217, 1218, 1219, 1243, 1255, 1270, 1271, 1281, 1282, 1287, 1290, 1291, 1292, 1305, 1306, 1309, 1310, 1314, 1315, 1318, 1319, 1323, 1324, 1325, 1326, 1329, 1335, 1342, 1344, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1365], "have": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 48, 60, 63, 71, 89, 92, 100, 130, 136, 155, 157, 164, 171, 176, 204, 215, 240, 271, 282, 304, 315, 319, 341, 356, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 425, 433, 474, 479, 495, 497, 502, 511, 512, 528, 540, 542, 562, 579, 585, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 643, 655, 658, 666, 684, 687, 695, 727, 729, 736, 743, 748, 751, 752, 753, 762, 777, 799, 801, 808, 815, 820, 849, 860, 885, 916, 927, 949, 960, 964, 986, 1001, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1068, 1076, 1117, 1122, 1138, 1140, 1145, 1154, 1155, 1167, 1177, 1180, 1188, 1206, 1209, 1217, 1241, 1258, 1270, 1272, 1292, 1314, 1315, 1342, 1344, 1349, 1355, 1357, 1358, 1359, 1362, 1363, 1364, 1365], "valu": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 43, 45, 46, 60, 63, 89, 92, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 153, 155, 156, 157, 159, 162, 164, 167, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 271, 272, 273, 275, 278, 279, 280, 281, 282, 283, 284, 304, 305, 306, 308, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 341, 342, 343, 345, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 388, 390, 392, 394, 398, 400, 401, 406, 407, 417, 418, 423, 425, 427, 428, 433, 437, 442, 447, 450, 454, 460, 461, 473, 474, 476, 478, 479, 480, 481, 482, 485, 488, 489, 493, 495, 497, 502, 504, 505, 506, 507, 508, 509, 511, 512, 513, 516, 518, 519, 525, 530, 540, 541, 548, 552, 555, 556, 558, 560, 562, 578, 579, 582, 583, 584, 585, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 632, 634, 637, 639, 641, 655, 658, 684, 687, 716, 717, 718, 719, 720, 723, 725, 727, 728, 729, 731, 734, 736, 739, 741, 742, 743, 746, 748, 750, 751, 752, 753, 754, 755, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 776, 777, 778, 780, 782, 783, 784, 786, 787, 792, 795, 797, 799, 800, 801, 803, 806, 808, 811, 813, 814, 815, 818, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 849, 850, 851, 853, 856, 857, 858, 859, 860, 861, 862, 863, 874, 876, 878, 879, 880, 882, 884, 891, 892, 894, 896, 898, 916, 917, 918, 920, 923, 924, 925, 926, 927, 928, 929, 949, 950, 951, 953, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 986, 987, 988, 990, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1006, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1038, 1039, 1044, 1049, 1050, 1065, 1066, 1068, 1070, 1071, 1076, 1080, 1085, 1090, 1093, 1097, 1103, 1104, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1128, 1131, 1132, 1136, 1138, 1140, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1159, 1162, 1163, 1165, 1177, 1180, 1206, 1209, 1238, 1239, 1240, 1241, 1255, 1260, 1270, 1271, 1278, 1282, 1285, 1286, 1288, 1290, 1292, 1307, 1315, 1318, 1323, 1326, 1342, 1343, 1344, 1352, 1353, 1356, 1357, 1358, 1363], "ar": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 45, 46, 60, 71, 73, 89, 100, 102, 122, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 164, 176, 179, 181, 182, 183, 184, 185, 186, 204, 210, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 271, 277, 278, 282, 283, 284, 304, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 412, 427, 428, 437, 443, 446, 451, 463, 464, 466, 468, 474, 478, 479, 484, 485, 486, 488, 489, 493, 495, 497, 504, 507, 509, 516, 518, 519, 533, 534, 541, 544, 555, 556, 558, 560, 561, 570, 575, 577, 579, 585, 588, 592, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 639, 641, 655, 666, 668, 684, 695, 697, 717, 720, 721, 736, 748, 751, 752, 753, 760, 761, 762, 763, 764, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 794, 808, 820, 823, 825, 826, 827, 828, 829, 830, 849, 855, 856, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 891, 894, 896, 898, 916, 922, 923, 927, 928, 929, 949, 955, 956, 957, 958, 959, 960, 961, 964, 965, 966, 986, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1031, 1033, 1061, 1062, 1065, 1066, 1070, 1071, 1080, 1086, 1089, 1094, 1106, 1107, 1109, 1111, 1117, 1121, 1122, 1127, 1128, 1129, 1131, 1132, 1136, 1138, 1140, 1147, 1150, 1152, 1159, 1162, 1163, 1165, 1177, 1188, 1190, 1206, 1217, 1219, 1238, 1239, 1240, 1263, 1264, 1271, 1274, 1285, 1286, 1288, 1290, 1291, 1300, 1305, 1310, 1312, 1314, 1315, 1318, 1323, 1325, 1326, 1334, 1337, 1342, 1344, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1365], "still": [0, 5, 10, 15, 27, 28, 130, 287, 324, 366, 367, 382, 557, 579, 585, 593, 598, 618, 619, 762, 932, 969, 1013, 1014, 1029, 1066, 1287, 1314, 1363], "includ": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 33, 35, 37, 60, 65, 71, 72, 89, 94, 100, 101, 130, 131, 132, 134, 135, 151, 155, 157, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 503, 518, 528, 564, 579, 582, 583, 584, 585, 588, 589, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 618, 619, 620, 623, 624, 628, 630, 655, 660, 666, 667, 684, 689, 695, 696, 723, 727, 729, 733, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 762, 763, 764, 765, 767, 768, 770, 772, 776, 782, 783, 784, 794, 795, 799, 801, 805, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 830, 849, 856, 860, 861, 862, 863, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1063, 1064, 1065, 1066, 1146, 1162, 1177, 1182, 1188, 1189, 1206, 1211, 1217, 1218, 1258, 1294, 1314, 1318, 1337, 1349, 1356, 1357, 1362, 1363], "exclud": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 63, 92, 136, 137, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 171, 173, 176, 179, 181, 182, 183, 184, 185, 186, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 478, 482, 507, 508, 509, 511, 514, 518, 519, 579, 585, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 628, 658, 687, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 743, 745, 748, 751, 752, 753, 776, 777, 778, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 815, 817, 820, 823, 825, 826, 827, 828, 829, 830, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1121, 1125, 1150, 1151, 1152, 1154, 1157, 1162, 1163, 1180, 1209, 1310, 1319, 1356], "them": [0, 5, 10, 15, 18, 19, 20, 27, 28, 71, 100, 130, 131, 132, 221, 240, 315, 366, 367, 376, 482, 493, 512, 542, 577, 579, 585, 591, 593, 598, 603, 604, 605, 618, 619, 666, 695, 762, 763, 764, 765, 866, 885, 960, 1013, 1014, 1023, 1066, 1125, 1136, 1155, 1188, 1217, 1272, 1307, 1323, 1349, 1357, 1358, 1365], "us": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 40, 45, 46, 48, 60, 62, 69, 71, 72, 89, 91, 98, 100, 101, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 151, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 291, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 328, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 354, 355, 356, 357, 358, 360, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 410, 423, 426, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 495, 497, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 525, 527, 528, 530, 533, 534, 540, 541, 542, 557, 558, 562, 564, 569, 571, 572, 573, 574, 575, 576, 579, 582, 583, 584, 585, 588, 589, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 628, 634, 639, 641, 643, 655, 657, 664, 666, 667, 684, 686, 693, 695, 696, 716, 717, 718, 719, 720, 723, 736, 748, 751, 752, 753, 754, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 795, 808, 820, 823, 824, 825, 826, 827, 828, 829, 830, 832, 834, 836, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 903, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 934, 936, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 960, 962, 963, 964, 965, 966, 968, 969, 971, 973, 985, 986, 987, 988, 989, 990, 991, 992, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1055, 1062, 1063, 1064, 1065, 1066, 1069, 1071, 1072, 1073, 1074, 1075, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1138, 1140, 1143, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1167, 1177, 1179, 1186, 1188, 1189, 1206, 1208, 1215, 1217, 1218, 1243, 1250, 1255, 1257, 1258, 1260, 1263, 1264, 1270, 1271, 1272, 1287, 1288, 1292, 1294, 1299, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1315, 1317, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1340, 1342, 1344, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365], "which": [0, 5, 10, 13, 15, 27, 28, 30, 31, 34, 46, 48, 56, 57, 60, 65, 69, 82, 83, 85, 86, 89, 94, 98, 111, 112, 114, 115, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 147, 148, 150, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 204, 205, 209, 210, 211, 214, 215, 216, 217, 218, 221, 229, 231, 233, 234, 237, 239, 240, 246, 247, 249, 251, 253, 271, 272, 276, 277, 278, 281, 282, 283, 284, 304, 305, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 362, 363, 365, 366, 367, 372, 373, 376, 377, 379, 380, 381, 382, 383, 407, 426, 427, 430, 432, 433, 437, 446, 448, 449, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 474, 480, 481, 483, 493, 494, 496, 497, 504, 505, 506, 507, 508, 509, 511, 513, 516, 518, 519, 525, 528, 529, 530, 531, 532, 533, 534, 541, 542, 545, 546, 551, 552, 555, 556, 569, 574, 579, 585, 593, 596, 598, 618, 619, 621, 622, 626, 641, 643, 651, 652, 655, 660, 664, 677, 678, 680, 681, 684, 689, 693, 706, 707, 709, 710, 723, 727, 729, 736, 743, 748, 754, 755, 758, 762, 763, 764, 765, 766, 767, 768, 769, 772, 773, 776, 777, 778, 782, 783, 784, 786, 787, 795, 799, 801, 808, 815, 820, 823, 824, 825, 826, 827, 828, 829, 830, 849, 850, 854, 855, 856, 859, 860, 861, 862, 863, 866, 874, 876, 878, 879, 882, 884, 885, 891, 892, 894, 896, 898, 916, 917, 921, 922, 923, 926, 927, 928, 929, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 986, 987, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1009, 1010, 1012, 1013, 1014, 1019, 1020, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1069, 1070, 1073, 1075, 1076, 1080, 1089, 1091, 1092, 1101, 1102, 1103, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1123, 1124, 1126, 1136, 1137, 1139, 1140, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1156, 1159, 1161, 1162, 1163, 1165, 1167, 1177, 1182, 1186, 1199, 1200, 1202, 1203, 1206, 1211, 1215, 1228, 1229, 1231, 1232, 1255, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1271, 1272, 1275, 1276, 1281, 1282, 1285, 1286, 1299, 1304, 1307, 1310, 1314, 1315, 1318, 1323, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1342, 1349, 1353, 1355, 1357, 1358, 1359, 1360, 1362, 1363], "renam": [0, 5, 10, 15, 27, 28, 45, 147, 148, 150, 366, 367, 377, 579, 585, 593, 598, 618, 619, 639, 1013, 1014, 1024], "kei": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 33, 46, 47, 60, 61, 62, 89, 90, 91, 121, 123, 124, 130, 131, 132, 315, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 386, 392, 397, 399, 407, 412, 414, 417, 418, 419, 421, 446, 466, 468, 469, 496, 497, 579, 585, 586, 587, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 624, 641, 642, 655, 656, 657, 684, 685, 686, 716, 718, 719, 762, 763, 764, 960, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1040, 1042, 1044, 1049, 1050, 1052, 1065, 1066, 1089, 1109, 1111, 1112, 1139, 1140, 1165, 1166, 1177, 1178, 1179, 1206, 1207, 1208, 1243, 1351, 1352, 1356], "uniform": [0, 5, 10, 13, 15, 27, 28, 73, 102, 131, 132, 366, 367, 375, 427, 478, 517, 553, 579, 585, 593, 596, 598, 618, 619, 668, 697, 763, 764, 1013, 1014, 1022, 1070, 1121, 1160, 1190, 1219, 1283, 1323, 1326, 1349, 1351], "bool": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 47, 48, 55, 61, 62, 63, 66, 67, 69, 71, 72, 73, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 126, 130, 131, 132, 136, 137, 151, 155, 157, 164, 171, 176, 189, 191, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 246, 249, 251, 253, 256, 258, 271, 273, 278, 281, 282, 283, 284, 289, 291, 304, 306, 314, 315, 318, 319, 320, 321, 326, 328, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 427, 432, 437, 441, 448, 449, 451, 452, 454, 457, 458, 459, 464, 465, 468, 469, 470, 478, 479, 482, 483, 485, 488, 489, 495, 497, 504, 505, 506, 507, 508, 509, 511, 512, 513, 515, 516, 540, 542, 557, 575, 579, 585, 586, 587, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 642, 643, 650, 656, 657, 658, 661, 662, 664, 666, 667, 668, 685, 686, 687, 690, 691, 693, 695, 696, 697, 714, 718, 721, 723, 727, 729, 736, 743, 748, 751, 760, 761, 762, 763, 764, 777, 778, 782, 783, 784, 795, 799, 801, 808, 815, 820, 834, 836, 849, 851, 856, 859, 860, 861, 862, 863, 866, 876, 878, 879, 880, 882, 884, 885, 891, 894, 896, 898, 901, 903, 916, 918, 923, 926, 927, 928, 929, 934, 936, 949, 951, 959, 960, 963, 964, 965, 966, 971, 973, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1006, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1062, 1063, 1066, 1070, 1075, 1080, 1084, 1091, 1092, 1094, 1095, 1097, 1100, 1101, 1102, 1107, 1108, 1111, 1112, 1113, 1121, 1122, 1125, 1126, 1128, 1131, 1132, 1138, 1140, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1166, 1167, 1174, 1178, 1179, 1180, 1183, 1184, 1186, 1188, 1189, 1190, 1207, 1208, 1209, 1212, 1213, 1215, 1217, 1218, 1219, 1270, 1272, 1287, 1305, 1307], "true": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 46, 47, 48, 55, 60, 61, 62, 63, 66, 67, 69, 71, 72, 73, 89, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 130, 131, 132, 136, 137, 144, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 189, 191, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 246, 249, 251, 253, 256, 258, 271, 273, 278, 281, 282, 283, 284, 289, 291, 304, 306, 314, 315, 318, 319, 320, 321, 326, 328, 341, 343, 351, 352, 355, 356, 357, 358, 362, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 410, 414, 427, 432, 437, 441, 448, 449, 451, 452, 457, 458, 459, 464, 465, 468, 469, 470, 478, 479, 482, 483, 485, 488, 489, 494, 495, 497, 504, 507, 508, 509, 511, 512, 513, 515, 516, 540, 542, 557, 575, 579, 580, 585, 586, 587, 588, 591, 592, 593, 597, 598, 599, 601, 602, 603, 604, 605, 608, 609, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 641, 642, 643, 650, 655, 656, 657, 658, 661, 662, 664, 666, 667, 668, 684, 685, 686, 687, 690, 691, 693, 695, 696, 697, 714, 718, 723, 725, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 742, 743, 744, 746, 747, 748, 749, 750, 751, 760, 761, 762, 763, 764, 771, 777, 778, 782, 783, 784, 789, 795, 797, 799, 800, 801, 802, 803, 804, 806, 807, 808, 811, 813, 814, 815, 816, 818, 819, 820, 821, 822, 834, 836, 849, 851, 856, 859, 860, 861, 862, 863, 866, 876, 878, 879, 880, 882, 884, 885, 891, 894, 896, 898, 901, 903, 916, 918, 923, 926, 927, 928, 929, 934, 936, 949, 951, 959, 960, 963, 964, 965, 966, 971, 973, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1006, 1009, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1035, 1062, 1063, 1065, 1066, 1070, 1075, 1080, 1084, 1091, 1092, 1094, 1095, 1100, 1101, 1102, 1107, 1108, 1111, 1112, 1113, 1121, 1122, 1125, 1126, 1128, 1131, 1132, 1137, 1138, 1140, 1147, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1165, 1166, 1167, 1174, 1175, 1177, 1178, 1179, 1180, 1183, 1184, 1186, 1188, 1189, 1190, 1206, 1207, 1208, 1209, 1212, 1213, 1215, 1217, 1218, 1219, 1248, 1249, 1270, 1272, 1287, 1305, 1325, 1332, 1333, 1334, 1335, 1344, 1346, 1352, 1353, 1357, 1358, 1359, 1360, 1363], "forc": [0, 5, 10, 15, 18, 19, 20, 27, 28, 366, 367, 377, 427, 512, 562, 579, 585, 593, 598, 603, 604, 605, 618, 619, 1013, 1014, 1024, 1070, 1155, 1292], "case": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 40, 121, 123, 124, 130, 132, 164, 176, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 421, 497, 579, 585, 586, 587, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 621, 622, 634, 716, 718, 719, 736, 748, 762, 764, 808, 820, 1007, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1042, 1052, 1140, 1307, 1314, 1315, 1318, 1335, 1357, 1363], "ignor": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 130, 131, 132, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 427, 579, 585, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 762, 763, 764, 849, 851, 856, 859, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1063, 1064, 1070, 1309, 1318, 1359], "list": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 35, 63, 92, 180, 187, 206, 210, 213, 234, 240, 254, 273, 277, 280, 287, 306, 310, 317, 324, 343, 347, 354, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 437, 442, 443, 448, 449, 450, 460, 463, 473, 474, 476, 481, 496, 503, 528, 533, 534, 545, 579, 585, 586, 587, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 621, 622, 628, 658, 687, 760, 761, 769, 824, 832, 851, 855, 858, 879, 885, 899, 918, 922, 925, 932, 951, 955, 962, 969, 988, 992, 999, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1057, 1063, 1064, 1066, 1080, 1085, 1086, 1091, 1092, 1093, 1103, 1106, 1116, 1117, 1119, 1124, 1139, 1146, 1180, 1209, 1258, 1263, 1264, 1275, 1314, 1363, 1364], "appli": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 60, 63, 89, 92, 131, 132, 134, 136, 137, 138, 146, 179, 182, 183, 204, 205, 211, 214, 215, 216, 217, 218, 229, 247, 271, 272, 278, 281, 282, 283, 284, 304, 305, 314, 315, 318, 319, 320, 321, 341, 342, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 428, 432, 446, 448, 451, 465, 466, 468, 469, 479, 485, 495, 511, 513, 541, 542, 579, 585, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 655, 658, 684, 687, 756, 759, 760, 761, 763, 764, 770, 776, 777, 778, 779, 791, 823, 826, 827, 849, 850, 856, 859, 860, 861, 862, 863, 874, 892, 916, 917, 923, 926, 927, 928, 929, 949, 950, 959, 960, 963, 964, 965, 966, 986, 987, 996, 997, 1000, 1001, 1002, 1003, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1055, 1062, 1066, 1071, 1075, 1089, 1091, 1094, 1108, 1109, 1111, 1112, 1122, 1128, 1138, 1154, 1156, 1177, 1180, 1206, 1209, 1271, 1272, 1314, 1323, 1334, 1344, 1353], "after": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 130, 131, 150, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 497, 507, 542, 579, 585, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 762, 763, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1031, 1140, 1150, 1272, 1315, 1344, 1358, 1359, 1362, 1363, 1365], "set": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 46, 60, 71, 72, 73, 89, 100, 101, 102, 121, 122, 123, 124, 125, 126, 130, 131, 132, 136, 137, 151, 155, 157, 164, 171, 176, 179, 181, 182, 183, 184, 185, 186, 204, 206, 211, 214, 215, 216, 217, 218, 219, 220, 233, 234, 235, 271, 273, 278, 281, 282, 283, 284, 285, 286, 304, 306, 314, 315, 318, 319, 320, 321, 322, 323, 341, 343, 351, 352, 355, 356, 357, 358, 359, 360, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 407, 415, 416, 419, 420, 451, 460, 478, 484, 485, 486, 488, 489, 497, 507, 508, 509, 525, 528, 540, 562, 565, 566, 579, 585, 588, 593, 597, 598, 599, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 639, 641, 655, 666, 667, 668, 684, 695, 696, 697, 716, 717, 718, 719, 720, 721, 723, 727, 729, 736, 743, 748, 751, 752, 753, 762, 763, 764, 776, 777, 778, 782, 783, 795, 799, 801, 808, 815, 820, 823, 825, 826, 827, 828, 829, 830, 849, 851, 856, 859, 860, 861, 862, 863, 864, 865, 878, 879, 880, 916, 918, 923, 926, 927, 928, 929, 930, 931, 949, 951, 959, 960, 963, 964, 965, 966, 967, 968, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1004, 1005, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1029, 1036, 1037, 1040, 1041, 1047, 1048, 1051, 1066, 1094, 1103, 1121, 1127, 1128, 1129, 1131, 1132, 1140, 1150, 1151, 1152, 1165, 1177, 1188, 1189, 1190, 1206, 1217, 1218, 1219, 1238, 1239, 1240, 1248, 1249, 1255, 1258, 1270, 1292, 1295, 1296, 1307, 1315, 1318, 1324, 1331, 1334, 1335, 1338, 1339, 1344, 1349, 1353, 1358, 1362, 1363, 1364], "all": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 46, 48, 60, 63, 71, 72, 89, 92, 100, 101, 119, 130, 131, 132, 134, 136, 137, 151, 154, 161, 164, 168, 173, 176, 179, 183, 204, 210, 211, 214, 215, 216, 217, 218, 233, 234, 271, 277, 278, 281, 282, 283, 284, 304, 310, 314, 315, 318, 319, 320, 321, 341, 347, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 397, 411, 427, 442, 450, 460, 473, 476, 478, 479, 481, 495, 496, 497, 503, 507, 509, 528, 541, 577, 579, 585, 586, 587, 588, 593, 597, 598, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 641, 643, 655, 658, 666, 667, 684, 687, 695, 696, 714, 723, 726, 733, 736, 740, 745, 748, 762, 763, 764, 768, 769, 770, 776, 777, 778, 782, 783, 784, 795, 798, 805, 808, 812, 817, 820, 823, 827, 849, 855, 856, 859, 860, 861, 862, 863, 878, 879, 916, 922, 923, 926, 927, 928, 929, 949, 955, 959, 960, 963, 964, 965, 966, 986, 992, 996, 997, 1000, 1001, 1002, 1003, 1006, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1032, 1044, 1045, 1062, 1063, 1064, 1065, 1066, 1070, 1085, 1093, 1103, 1116, 1119, 1121, 1122, 1124, 1138, 1139, 1140, 1146, 1150, 1152, 1165, 1167, 1177, 1180, 1188, 1189, 1206, 1209, 1217, 1218, 1258, 1271, 1306, 1312, 1323, 1342, 1343, 1344, 1346, 1349, 1357, 1358, 1359, 1360, 1361, 1363, 1365], "specifi": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 53, 60, 63, 71, 72, 89, 92, 100, 101, 121, 123, 124, 130, 131, 132, 155, 157, 171, 204, 206, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 246, 249, 250, 251, 252, 253, 271, 273, 278, 282, 283, 284, 304, 306, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 343, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 417, 482, 507, 508, 509, 520, 528, 569, 574, 579, 582, 583, 584, 585, 588, 589, 593, 594, 595, 597, 598, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 641, 648, 655, 658, 666, 667, 684, 687, 695, 696, 716, 718, 719, 727, 729, 743, 762, 763, 764, 794, 799, 801, 815, 849, 851, 856, 860, 861, 862, 863, 875, 876, 878, 879, 880, 881, 882, 883, 884, 891, 894, 895, 896, 897, 898, 916, 918, 923, 927, 928, 929, 949, 951, 956, 957, 958, 959, 960, 961, 964, 965, 966, 986, 988, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1038, 1049, 1055, 1065, 1066, 1125, 1150, 1151, 1152, 1165, 1172, 1177, 1180, 1188, 1189, 1206, 1209, 1217, 1218, 1258, 1299, 1304, 1307, 1310, 1314, 1355, 1356, 1358, 1362], "Be": [0, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 579, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003], "about": [0, 60, 89, 497, 579, 655, 684, 1140, 1177, 1206], "process": [0, 30, 31, 131, 136, 137, 234, 437, 497, 579, 621, 622, 763, 777, 778, 879, 1080, 1140, 1307, 1314, 1349, 1350, 1359, 1363], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 152, 165, 166, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 225, 226, 227, 228, 241, 242, 243, 244, 255, 256, 257, 258, 259, 260, 288, 289, 290, 291, 292, 293, 325, 326, 327, 328, 329, 330, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 388, 389, 390, 391, 394, 398, 399, 400, 401, 405, 409, 410, 412, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 564, 565, 566, 567, 569, 570, 571, 572, 574, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 626, 630, 631, 632, 633, 634, 635, 636, 637, 638, 643, 644, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 677, 678, 679, 680, 681, 682, 683, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 737, 738, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 796, 809, 810, 823, 824, 825, 826, 827, 828, 829, 830, 833, 834, 835, 836, 837, 838, 870, 871, 872, 873, 886, 887, 888, 889, 900, 901, 902, 903, 904, 905, 933, 934, 935, 936, 937, 938, 970, 971, 972, 973, 974, 975, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1033, 1038, 1039, 1049, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1167, 1168, 1175, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1304, 1342, 1344, 1352, 1355, 1360, 1363], "note": [0, 5, 13, 27, 28, 62, 91, 118, 130, 134, 155, 157, 164, 171, 176, 233, 234, 315, 366, 367, 370, 371, 381, 478, 502, 507, 518, 540, 579, 585, 596, 618, 619, 657, 686, 713, 727, 729, 736, 743, 748, 762, 770, 799, 801, 808, 815, 820, 878, 879, 960, 1013, 1014, 1017, 1018, 1028, 1063, 1064, 1066, 1121, 1145, 1150, 1162, 1179, 1208, 1270, 1314, 1315, 1325, 1344, 1358, 1359, 1362, 1363], "ha": [0, 5, 8, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 32, 60, 89, 130, 147, 148, 150, 189, 225, 240, 241, 256, 289, 324, 326, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 414, 421, 483, 485, 488, 489, 541, 553, 574, 579, 585, 588, 596, 597, 599, 601, 602, 603, 604, 605, 608, 609, 614, 615, 616, 617, 618, 619, 620, 623, 655, 684, 757, 762, 834, 870, 885, 886, 901, 934, 969, 971, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1035, 1042, 1052, 1054, 1126, 1128, 1131, 1132, 1177, 1206, 1243, 1271, 1283, 1304, 1307, 1314, 1323, 1344, 1349, 1355, 1357, 1358, 1360, 1362, 1363, 1365], "been": [0, 5, 13, 26, 27, 28, 130, 147, 148, 150, 155, 157, 164, 171, 176, 240, 324, 366, 367, 369, 372, 373, 374, 376, 483, 528, 541, 579, 585, 596, 608, 609, 616, 618, 619, 727, 729, 736, 743, 748, 757, 762, 799, 801, 808, 815, 820, 885, 969, 1013, 1014, 1016, 1019, 1020, 1021, 1023, 1126, 1258, 1271, 1314, 1344, 1349, 1355, 1359, 1362, 1363], "test": [0, 5, 13, 26, 27, 28, 130, 366, 367, 372, 374, 383, 437, 471, 472, 577, 579, 585, 596, 616, 618, 619, 762, 1013, 1014, 1019, 1021, 1031, 1080, 1114, 1115, 1307, 1309, 1310, 1318, 1319, 1320, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1349, 1351], "stream": [0, 5, 13, 27, 28, 77, 106, 366, 367, 576, 579, 585, 596, 618, 619, 672, 701, 1013, 1014, 1194, 1223], "cfradial": [0, 5, 13, 27, 28, 32, 366, 367, 579, 585, 596, 618, 619, 623, 1013, 1014, 1307, 1312, 1322, 1323, 1337, 1339, 1340, 1351, 1359, 1361], "get": [1, 25, 40, 138, 146, 222, 223, 224, 245, 366, 383, 392, 420, 498, 501, 511, 517, 547, 548, 549, 550, 558, 559, 560, 561, 581, 615, 634, 773, 774, 775, 779, 791, 867, 868, 869, 890, 1013, 1031, 1041, 1051, 1055, 1141, 1144, 1154, 1160, 1277, 1278, 1279, 1280, 1288, 1289, 1290, 1291, 1307, 1315, 1334, 1335, 1344, 1351, 1353, 1356, 1358, 1360, 1362, 1363, 1364, 1365], "each": [1, 2, 3, 9, 11, 22, 32, 46, 54, 56, 60, 70, 89, 99, 128, 131, 132, 133, 135, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 376, 380, 382, 437, 474, 480, 482, 483, 493, 500, 501, 504, 511, 512, 513, 515, 517, 518, 547, 548, 549, 551, 558, 559, 560, 561, 581, 582, 583, 589, 594, 607, 623, 641, 649, 651, 655, 665, 684, 694, 751, 752, 753, 755, 763, 764, 765, 766, 767, 768, 772, 782, 783, 784, 792, 849, 856, 860, 861, 862, 876, 882, 884, 894, 896, 898, 916, 923, 927, 928, 949, 959, 960, 964, 965, 986, 996, 997, 1001, 1002, 1023, 1027, 1029, 1055, 1062, 1065, 1066, 1080, 1117, 1123, 1125, 1126, 1136, 1143, 1144, 1147, 1154, 1155, 1156, 1158, 1160, 1162, 1165, 1173, 1177, 1187, 1206, 1216, 1238, 1239, 1240, 1277, 1278, 1279, 1281, 1288, 1289, 1290, 1291, 1314, 1319, 1334, 1337, 1344, 1356, 1360, 1363], "assum": [1, 3, 9, 60, 89, 118, 119, 130, 133, 453, 454, 481, 494, 497, 502, 507, 509, 510, 540, 581, 583, 589, 655, 684, 713, 714, 762, 765, 766, 767, 768, 782, 783, 784, 1096, 1097, 1124, 1137, 1140, 1145, 1150, 1152, 1153, 1177, 1206, 1270, 1359], "clockwis": [1, 60, 89, 581, 655, 684, 1177, 1206], "rotat": [1, 60, 89, 187, 581, 655, 684, 832, 1177, 1206], "north": [1, 56, 60, 89, 233, 234, 246, 315, 352, 546, 581, 651, 655, 684, 878, 879, 891, 960, 997, 1177, 1206, 1276, 1327, 1359, 1360], "tstart": [1, 581], "tend": [1, 581, 1358], "arrai": [1, 8, 14, 16, 26, 46, 48, 54, 56, 57, 62, 66, 67, 69, 70, 71, 72, 73, 91, 95, 96, 98, 99, 100, 101, 102, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 134, 135, 140, 143, 146, 151, 155, 157, 164, 171, 176, 187, 193, 204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 254, 260, 271, 272, 273, 278, 282, 283, 284, 287, 293, 304, 305, 306, 311, 312, 314, 315, 319, 320, 321, 324, 330, 341, 342, 343, 348, 349, 351, 352, 356, 357, 358, 423, 424, 425, 437, 447, 479, 480, 483, 495, 501, 504, 508, 509, 510, 515, 517, 518, 519, 521, 522, 523, 524, 525, 529, 531, 532, 538, 539, 541, 542, 547, 548, 549, 550, 551, 555, 556, 558, 559, 560, 561, 564, 565, 566, 568, 578, 581, 588, 591, 592, 597, 601, 608, 609, 616, 641, 643, 649, 651, 652, 657, 661, 662, 664, 665, 666, 667, 668, 686, 690, 691, 693, 694, 695, 696, 697, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 727, 729, 736, 743, 748, 762, 763, 764, 770, 771, 772, 780, 785, 788, 791, 792, 795, 799, 801, 808, 815, 820, 832, 838, 849, 850, 851, 856, 860, 861, 862, 863, 874, 876, 878, 879, 880, 882, 884, 891, 892, 894, 896, 898, 899, 905, 916, 917, 918, 923, 927, 928, 929, 932, 938, 949, 950, 951, 956, 957, 959, 960, 964, 965, 966, 969, 975, 986, 987, 988, 993, 994, 996, 997, 1001, 1002, 1003, 1055, 1065, 1066, 1068, 1080, 1090, 1122, 1123, 1126, 1138, 1144, 1147, 1151, 1152, 1153, 1158, 1160, 1162, 1163, 1165, 1167, 1173, 1179, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1208, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1251, 1252, 1253, 1254, 1255, 1259, 1261, 1262, 1268, 1269, 1271, 1272, 1277, 1278, 1279, 1280, 1281, 1285, 1286, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1318, 1331, 1344, 1346, 1351, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1363], "sweep_start": [1, 581], "sweep_end": [1, 581], "indic": [1, 37, 46, 60, 84, 87, 88, 89, 113, 116, 117, 137, 151, 155, 164, 176, 231, 376, 482, 507, 508, 509, 514, 518, 519, 542, 543, 545, 581, 630, 641, 655, 679, 682, 683, 684, 708, 711, 712, 723, 727, 736, 748, 771, 778, 782, 783, 795, 799, 808, 820, 876, 1023, 1125, 1150, 1151, 1152, 1157, 1162, 1163, 1165, 1177, 1201, 1204, 1205, 1206, 1230, 1233, 1234, 1272, 1273, 1275, 1314, 1331, 1358, 1359], "chy0": [2, 4, 6, 7, 11, 582, 584, 586, 587, 594], "255": [2, 4, 6, 11, 380, 582, 584, 586, 594, 1027, 1357], "0": [2, 3, 4, 6, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 30, 31, 40, 48, 60, 65, 66, 67, 69, 70, 71, 72, 73, 89, 94, 95, 96, 98, 99, 100, 101, 102, 122, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 141, 142, 145, 151, 176, 179, 181, 182, 183, 184, 185, 186, 187, 203, 204, 211, 214, 215, 216, 217, 218, 219, 233, 234, 235, 249, 254, 270, 271, 278, 281, 282, 283, 284, 285, 287, 303, 304, 313, 314, 315, 318, 319, 320, 321, 322, 324, 340, 341, 350, 351, 352, 355, 356, 357, 358, 359, 376, 380, 423, 426, 428, 433, 437, 439, 441, 442, 446, 449, 450, 451, 453, 454, 459, 460, 461, 466, 473, 474, 475, 476, 478, 479, 482, 483, 485, 487, 488, 489, 491, 492, 493, 495, 497, 500, 503, 504, 505, 507, 508, 511, 512, 513, 514, 515, 516, 517, 519, 526, 527, 530, 540, 542, 547, 548, 549, 553, 554, 557, 562, 582, 583, 584, 586, 589, 594, 597, 601, 603, 604, 605, 607, 614, 615, 621, 622, 634, 643, 655, 660, 661, 662, 664, 665, 666, 667, 668, 684, 689, 690, 691, 693, 694, 695, 696, 697, 717, 720, 723, 748, 751, 752, 754, 755, 756, 758, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 786, 787, 790, 795, 820, 823, 825, 826, 827, 828, 829, 830, 832, 848, 849, 856, 859, 860, 861, 862, 863, 864, 878, 879, 880, 894, 899, 915, 916, 923, 926, 927, 928, 929, 930, 932, 948, 949, 958, 959, 960, 963, 964, 965, 966, 967, 969, 985, 986, 995, 996, 997, 1000, 1001, 1002, 1003, 1004, 1023, 1027, 1055, 1063, 1064, 1065, 1066, 1069, 1071, 1076, 1080, 1082, 1084, 1085, 1089, 1092, 1093, 1094, 1096, 1097, 1102, 1103, 1104, 1109, 1116, 1117, 1118, 1119, 1121, 1122, 1125, 1126, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1140, 1143, 1146, 1147, 1148, 1150, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1167, 1177, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1206, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1241, 1256, 1257, 1260, 1270, 1272, 1277, 1278, 1279, 1283, 1284, 1287, 1292, 1306, 1309, 1310, 1311, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363], "chx0": [2, 4, 6, 7, 11, 582, 584, 586, 587, 594], "160": [2, 4, 6, 11, 582, 584, 586, 594, 1346, 1355, 1357, 1358], "xre": [2, 3, 9, 11, 22, 582, 583, 589, 594, 607], "1": [2, 3, 5, 6, 7, 9, 11, 14, 18, 19, 20, 22, 26, 30, 31, 46, 60, 70, 89, 99, 118, 122, 125, 127, 128, 130, 132, 136, 137, 138, 146, 164, 179, 218, 234, 254, 284, 321, 358, 366, 372, 373, 374, 379, 425, 432, 433, 437, 442, 444, 446, 450, 451, 454, 460, 461, 466, 473, 474, 478, 479, 481, 483, 485, 493, 495, 497, 498, 504, 507, 509, 511, 513, 515, 518, 519, 526, 527, 528, 530, 540, 541, 542, 548, 554, 560, 561, 568, 582, 583, 585, 586, 587, 589, 594, 597, 603, 604, 605, 607, 616, 621, 622, 641, 655, 665, 684, 694, 713, 717, 720, 736, 754, 755, 760, 761, 762, 764, 773, 774, 775, 777, 778, 779, 791, 808, 823, 863, 879, 899, 929, 966, 1003, 1013, 1019, 1020, 1021, 1026, 1065, 1066, 1068, 1075, 1076, 1080, 1085, 1087, 1089, 1093, 1094, 1097, 1103, 1104, 1109, 1116, 1117, 1121, 1122, 1124, 1126, 1128, 1136, 1138, 1140, 1141, 1147, 1150, 1152, 1154, 1156, 1158, 1162, 1163, 1165, 1177, 1187, 1206, 1216, 1241, 1256, 1257, 1258, 1260, 1270, 1271, 1272, 1278, 1284, 1290, 1291, 1298, 1309, 1310, 1314, 1318, 1319, 1320, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1342, 1344, 1345, 1346, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1363], "yre": [2, 3, 9, 11, 22, 582, 583, 589, 594, 607], "nx": [2, 3, 9, 11, 22, 46, 582, 583, 589, 594, 607, 641, 1165, 1358], "710": [2, 11, 582, 594], "ny": [2, 3, 9, 11, 22, 46, 582, 583, 589, 594, 607, 641, 1165, 1358], "640": [2, 11, 582, 594], "nz": [2, 3, 9, 11, 22, 46, 582, 583, 589, 594, 607, 641, 1165, 1358], "meteoswiss": [2, 11, 30, 31, 582, 594, 621, 622, 1307, 1345, 1346, 1350, 1358, 1359, 1362, 1363], "oper": [2, 3, 9, 11, 155, 157, 164, 171, 176, 376, 495, 509, 516, 582, 583, 589, 594, 727, 729, 736, 743, 748, 760, 761, 799, 801, 808, 815, 820, 1023, 1062, 1066, 1138, 1152, 1159, 1344, 1358, 1359, 1362], "binari": [2, 3, 9, 18, 19, 20, 30, 31, 33, 362, 495, 582, 583, 589, 603, 604, 605, 621, 622, 624, 1009, 1138, 1357], "retriev": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 36, 38, 46, 66, 67, 69, 70, 71, 72, 73, 95, 96, 98, 99, 100, 101, 102, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 526, 527, 542, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 629, 631, 641, 661, 662, 664, 665, 666, 667, 668, 690, 691, 693, 694, 695, 696, 697, 760, 761, 774, 780, 792, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1165, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1256, 1257, 1272, 1307, 1343, 1344, 1345, 1346, 1347, 1350, 1353, 1358, 1361, 1363], "metadata": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 38, 44, 45, 46, 47, 60, 61, 62, 89, 90, 91, 130, 131, 132, 133, 136, 137, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 426, 428, 434, 453, 454, 461, 475, 478, 482, 497, 505, 506, 507, 508, 509, 510, 511, 512, 513, 569, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 621, 622, 624, 626, 628, 629, 631, 638, 639, 641, 642, 655, 656, 657, 684, 685, 686, 751, 752, 753, 762, 763, 764, 766, 767, 768, 769, 777, 778, 782, 783, 784, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1069, 1071, 1077, 1096, 1097, 1104, 1118, 1121, 1125, 1140, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1161, 1165, 1166, 1177, 1178, 1179, 1206, 1207, 1208, 1235, 1237, 1243, 1299, 1315, 1332, 1333, 1337, 1360], "dure": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 35, 130, 131, 132, 164, 176, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 479, 507, 516, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 628, 736, 748, 757, 762, 763, 764, 808, 820, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1122, 1150, 1159, 1358, 1359, 1362, 1365], "ani": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 33, 45, 61, 62, 90, 91, 130, 131, 132, 136, 137, 151, 155, 157, 164, 171, 176, 179, 182, 183, 287, 324, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 428, 480, 504, 511, 512, 575, 582, 583, 584, 585, 586, 587, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 619, 620, 621, 622, 624, 639, 656, 657, 685, 686, 723, 727, 729, 736, 743, 748, 751, 752, 753, 762, 763, 764, 765, 776, 777, 778, 795, 799, 801, 808, 815, 820, 823, 826, 827, 932, 969, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1029, 1063, 1064, 1066, 1071, 1123, 1147, 1154, 1155, 1178, 1179, 1207, 1208, 1237, 1305, 1351, 1357], "success": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "unless": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 73, 102, 121, 123, 124, 132, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 668, 697, 716, 718, 719, 764, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1190, 1219], "explicitli": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1063, 1064], "A": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 35, 46, 60, 62, 89, 91, 122, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 150, 151, 179, 180, 181, 182, 183, 184, 185, 186, 187, 221, 234, 240, 254, 287, 313, 324, 350, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 383, 427, 428, 432, 433, 442, 450, 478, 479, 480, 481, 482, 484, 493, 495, 497, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 516, 518, 519, 552, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 626, 628, 641, 655, 657, 684, 686, 717, 720, 723, 751, 752, 753, 754, 755, 758, 760, 761, 762, 763, 764, 766, 767, 768, 769, 772, 776, 777, 778, 782, 783, 784, 786, 787, 795, 823, 824, 825, 826, 827, 828, 829, 830, 832, 866, 879, 885, 899, 932, 958, 969, 995, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1030, 1031, 1044, 1062, 1063, 1064, 1065, 1066, 1070, 1071, 1075, 1076, 1085, 1093, 1121, 1122, 1123, 1124, 1125, 1127, 1136, 1138, 1140, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1177, 1179, 1206, 1208, 1241, 1282, 1326, 1344, 1348, 1349, 1357, 1359, 1363], "default": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 34, 41, 45, 46, 60, 66, 67, 69, 71, 72, 77, 89, 95, 96, 98, 100, 101, 106, 121, 122, 123, 124, 125, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 211, 214, 215, 216, 217, 218, 220, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 278, 281, 282, 283, 284, 286, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 314, 315, 318, 319, 320, 321, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 351, 352, 355, 356, 357, 358, 360, 363, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 387, 389, 396, 413, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 452, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 485, 488, 489, 495, 496, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 518, 520, 528, 530, 540, 541, 542, 569, 582, 583, 584, 588, 589, 593, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 621, 622, 624, 626, 635, 639, 641, 655, 661, 662, 664, 666, 667, 672, 684, 690, 691, 693, 695, 696, 701, 716, 717, 718, 719, 720, 723, 727, 729, 736, 743, 748, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 772, 774, 776, 777, 778, 782, 783, 784, 786, 787, 795, 799, 801, 808, 815, 820, 823, 824, 825, 826, 827, 828, 829, 830, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 859, 860, 861, 862, 863, 865, 874, 876, 878, 879, 880, 882, 884, 891, 892, 894, 896, 898, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 923, 926, 927, 928, 929, 931, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 959, 960, 963, 964, 965, 966, 968, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 996, 997, 1000, 1001, 1002, 1003, 1005, 1010, 1013, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1034, 1046, 1066, 1069, 1071, 1072, 1073, 1074, 1075, 1081, 1082, 1083, 1084, 1088, 1089, 1091, 1092, 1095, 1099, 1100, 1101, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1131, 1132, 1138, 1139, 1140, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1161, 1162, 1165, 1177, 1183, 1184, 1186, 1188, 1189, 1194, 1206, 1212, 1213, 1215, 1217, 1218, 1223, 1238, 1239, 1240, 1258, 1260, 1270, 1271, 1272, 1299, 1334, 1335, 1344, 1349, 1359, 1362, 1363, 1365], "introduct": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 617, 620, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1363], "addit": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 35, 130, 131, 132, 134, 203, 204, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 249, 250, 251, 252, 253, 270, 271, 278, 282, 283, 284, 303, 304, 311, 312, 313, 314, 315, 316, 319, 320, 321, 340, 341, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 451, 452, 479, 495, 552, 577, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 628, 762, 763, 764, 770, 848, 849, 856, 860, 861, 862, 863, 875, 876, 878, 879, 880, 881, 882, 883, 884, 894, 895, 896, 897, 898, 915, 916, 923, 927, 928, 929, 948, 949, 956, 957, 958, 959, 960, 961, 964, 965, 966, 985, 986, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1006, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1055, 1062, 1063, 1064, 1066, 1094, 1095, 1122, 1138, 1282, 1312, 1314, 1341, 1344, 1349], "specif": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 137, 164, 176, 324, 352, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 480, 484, 485, 486, 488, 489, 496, 497, 504, 505, 506, 507, 508, 509, 552, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 736, 748, 751, 752, 753, 768, 769, 778, 782, 783, 784, 808, 820, 969, 997, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1066, 1123, 1127, 1128, 1129, 1131, 1132, 1139, 1140, 1147, 1148, 1149, 1150, 1151, 1152, 1282, 1309, 1323, 1344, 1349, 1359, 1363, 1365], "py": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 34, 45, 46, 60, 89, 121, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 287, 304, 306, 314, 315, 319, 320, 321, 324, 341, 343, 351, 352, 356, 357, 358, 368, 369, 370, 371, 375, 377, 380, 426, 427, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 480, 481, 482, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 545, 546, 569, 576, 577, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 621, 622, 625, 626, 627, 639, 640, 641, 655, 684, 716, 718, 719, 723, 751, 752, 753, 758, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 776, 777, 778, 782, 783, 784, 786, 787, 793, 795, 823, 824, 825, 826, 827, 828, 829, 830, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 932, 949, 951, 959, 960, 964, 965, 966, 969, 986, 988, 996, 997, 1001, 1002, 1003, 1015, 1016, 1017, 1018, 1022, 1024, 1027, 1054, 1069, 1070, 1072, 1073, 1074, 1075, 1081, 1082, 1083, 1084, 1088, 1089, 1091, 1092, 1099, 1100, 1101, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1138, 1140, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1161, 1165, 1177, 1206, 1241, 1250, 1275, 1276, 1299, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1351, 1352, 1353, 1355, 1358, 1359, 1361, 1362, 1365], "art": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 34, 45, 46, 60, 89, 121, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 287, 304, 306, 314, 315, 319, 320, 321, 324, 341, 343, 351, 352, 356, 357, 358, 368, 369, 370, 371, 375, 377, 380, 426, 427, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 480, 481, 482, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 545, 546, 569, 577, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 621, 622, 625, 626, 627, 639, 640, 641, 655, 684, 716, 718, 719, 723, 751, 752, 753, 758, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 776, 777, 778, 782, 783, 784, 786, 787, 793, 795, 823, 824, 825, 826, 827, 828, 829, 830, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 932, 949, 951, 959, 960, 964, 965, 966, 969, 986, 988, 996, 997, 1001, 1002, 1003, 1015, 1016, 1017, 1018, 1022, 1024, 1027, 1054, 1069, 1070, 1072, 1073, 1074, 1075, 1081, 1082, 1083, 1084, 1088, 1089, 1091, 1092, 1099, 1100, 1101, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1138, 1140, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1161, 1165, 1177, 1206, 1241, 1250, 1275, 1276, 1299, 1306, 1307, 1309, 1310, 1312, 1313, 1314, 1315, 1322, 1323, 1325, 1342, 1350, 1351, 1352, 1353, 1355, 1358, 1359, 1362, 1365], "configur": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 39, 40, 42, 45, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 426, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 479, 480, 481, 482, 495, 497, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 569, 582, 583, 584, 588, 589, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 620, 626, 627, 633, 634, 636, 639, 751, 752, 753, 758, 762, 763, 764, 766, 767, 768, 769, 772, 776, 777, 778, 782, 783, 784, 786, 787, 823, 824, 825, 826, 827, 828, 829, 830, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1069, 1072, 1073, 1074, 1075, 1081, 1082, 1083, 1084, 1088, 1089, 1091, 1092, 1099, 1100, 1101, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1122, 1123, 1124, 1125, 1138, 1140, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1161, 1299, 1314, 1318, 1343, 1359, 1363], "float": [2, 3, 4, 6, 7, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 40, 73, 102, 118, 119, 120, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 179, 181, 182, 183, 184, 185, 186, 187, 188, 204, 206, 207, 211, 212, 214, 215, 216, 217, 218, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 248, 249, 250, 251, 252, 253, 254, 255, 271, 273, 274, 278, 279, 281, 282, 283, 284, 287, 288, 304, 306, 307, 313, 314, 315, 316, 318, 319, 320, 321, 324, 325, 341, 343, 344, 350, 351, 352, 353, 355, 356, 357, 358, 380, 423, 425, 426, 427, 433, 434, 437, 439, 442, 447, 449, 450, 451, 453, 454, 460, 461, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 562, 570, 571, 572, 578, 582, 583, 584, 586, 587, 589, 594, 597, 601, 603, 604, 605, 607, 614, 615, 616, 620, 621, 622, 634, 668, 697, 713, 714, 715, 717, 720, 727, 751, 752, 753, 754, 755, 756, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 799, 823, 825, 826, 827, 828, 829, 830, 832, 833, 849, 851, 852, 856, 857, 859, 860, 861, 862, 863, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 891, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 923, 924, 926, 927, 928, 929, 932, 933, 949, 951, 952, 958, 959, 960, 961, 963, 964, 965, 966, 969, 970, 986, 988, 989, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1006, 1027, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1068, 1069, 1070, 1076, 1077, 1080, 1082, 1085, 1090, 1092, 1093, 1094, 1096, 1097, 1103, 1104, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1190, 1219, 1237, 1241, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1292, 1300, 1301, 1302, 1307, 1358], "swiss": [2, 4, 6, 7, 11, 126, 582, 584, 586, 587, 594, 721, 1350], "coordin": [2, 3, 4, 6, 7, 9, 11, 22, 46, 48, 54, 60, 71, 89, 100, 118, 119, 120, 121, 122, 123, 124, 125, 126, 145, 193, 204, 211, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 260, 271, 278, 282, 283, 284, 293, 304, 314, 315, 319, 320, 321, 330, 341, 351, 352, 356, 357, 358, 379, 474, 482, 497, 525, 551, 582, 583, 584, 586, 587, 589, 594, 607, 641, 643, 649, 655, 666, 684, 695, 713, 714, 715, 716, 717, 718, 719, 720, 721, 790, 838, 849, 856, 860, 861, 862, 863, 876, 882, 884, 894, 896, 898, 905, 916, 923, 927, 928, 929, 938, 949, 959, 960, 964, 965, 966, 975, 986, 996, 997, 1001, 1002, 1003, 1026, 1054, 1055, 1057, 1062, 1066, 1117, 1125, 1140, 1165, 1167, 1173, 1177, 1188, 1206, 1217, 1237, 1255, 1281, 1307, 1308, 1312, 1315, 1317, 1318, 1319, 1320, 1342, 1349, 1355, 1360], "posit": [2, 4, 6, 7, 11, 25, 26, 60, 89, 122, 125, 130, 139, 144, 145, 428, 452, 454, 461, 481, 482, 493, 507, 511, 512, 513, 518, 519, 526, 527, 582, 584, 586, 587, 594, 615, 616, 655, 684, 717, 720, 752, 753, 762, 773, 774, 775, 780, 781, 789, 790, 792, 1071, 1095, 1097, 1104, 1124, 1125, 1136, 1150, 1154, 1155, 1156, 1162, 1163, 1177, 1206, 1256, 1257, 1318, 1323, 1325, 1358, 1359, 1360], "south": [2, 4, 6, 7, 11, 582, 584, 586, 587, 594, 1327, 1358], "western": [2, 4, 6, 7, 11, 582, 584, 586, 587, 594], "point": [2, 3, 4, 6, 7, 9, 11, 22, 45, 46, 48, 62, 91, 123, 135, 136, 137, 139, 140, 193, 207, 212, 218, 230, 231, 232, 248, 260, 274, 279, 284, 287, 293, 307, 312, 313, 316, 321, 330, 344, 349, 350, 353, 358, 370, 371, 374, 376, 380, 424, 433, 442, 450, 453, 454, 460, 461, 473, 476, 479, 493, 495, 511, 516, 528, 530, 541, 542, 546, 548, 557, 560, 575, 582, 583, 584, 586, 587, 589, 594, 607, 639, 641, 643, 657, 686, 718, 751, 752, 753, 767, 768, 772, 773, 774, 775, 777, 778, 781, 782, 783, 784, 785, 838, 852, 857, 863, 875, 876, 877, 893, 905, 919, 924, 929, 932, 938, 952, 957, 958, 961, 966, 975, 989, 994, 995, 998, 1003, 1017, 1018, 1021, 1023, 1027, 1062, 1065, 1066, 1076, 1085, 1093, 1096, 1097, 1103, 1104, 1116, 1119, 1122, 1136, 1138, 1154, 1159, 1165, 1167, 1179, 1208, 1237, 1258, 1260, 1271, 1272, 1276, 1278, 1287, 1290, 1305, 1307, 1312, 1324, 1331, 1341, 1344, 1347, 1349, 1353, 1355, 1358, 1359, 1360, 1361], "grid": [2, 3, 4, 6, 7, 9, 11, 12, 18, 22, 30, 40, 60, 89, 206, 208, 216, 218, 221, 225, 230, 232, 233, 234, 235, 236, 238, 240, 241, 246, 248, 249, 250, 252, 273, 275, 284, 306, 308, 315, 321, 343, 345, 358, 369, 370, 379, 380, 381, 442, 450, 460, 473, 476, 478, 479, 495, 497, 502, 503, 516, 536, 551, 553, 571, 572, 582, 583, 584, 586, 587, 589, 594, 595, 599, 603, 607, 621, 634, 655, 684, 851, 853, 861, 863, 866, 870, 875, 877, 878, 879, 880, 881, 883, 885, 886, 891, 893, 894, 895, 897, 918, 920, 929, 951, 953, 960, 966, 988, 990, 1003, 1016, 1017, 1026, 1027, 1028, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1085, 1093, 1103, 1116, 1119, 1121, 1122, 1138, 1140, 1145, 1146, 1159, 1177, 1206, 1237, 1241, 1242, 1244, 1245, 1266, 1281, 1283, 1301, 1302, 1307, 1312, 1317, 1321, 1322, 1325, 1335, 1338, 1340, 1344, 1349, 1350, 1357, 1358, 1359, 1361], "resolut": [2, 3, 9, 11, 22, 60, 89, 127, 128, 204, 206, 207, 211, 212, 215, 216, 217, 218, 234, 246, 271, 273, 274, 278, 279, 282, 283, 284, 304, 306, 307, 314, 315, 316, 319, 320, 321, 341, 343, 344, 351, 352, 353, 356, 357, 358, 372, 424, 433, 442, 450, 460, 473, 476, 478, 479, 495, 497, 501, 507, 513, 516, 542, 582, 583, 589, 594, 607, 655, 684, 754, 755, 760, 761, 849, 851, 852, 856, 857, 860, 861, 862, 863, 879, 891, 916, 918, 919, 923, 924, 927, 928, 929, 949, 951, 952, 959, 960, 961, 964, 965, 966, 986, 988, 989, 996, 997, 998, 1001, 1002, 1003, 1019, 1066, 1076, 1085, 1093, 1103, 1116, 1119, 1121, 1122, 1138, 1140, 1144, 1150, 1156, 1159, 1177, 1206, 1241, 1272, 1315, 1328, 1331, 1353, 1355, 1356, 1357, 1358, 1359], "km": [2, 3, 9, 11, 22, 118, 122, 125, 187, 207, 212, 213, 220, 254, 274, 279, 280, 286, 287, 307, 316, 317, 323, 324, 344, 352, 353, 354, 360, 425, 434, 447, 475, 478, 479, 480, 495, 497, 500, 501, 504, 507, 542, 544, 570, 582, 583, 589, 594, 607, 713, 717, 720, 832, 852, 857, 858, 865, 899, 919, 924, 925, 931, 932, 952, 961, 962, 968, 969, 989, 997, 998, 999, 1005, 1064, 1068, 1077, 1090, 1118, 1121, 1122, 1123, 1138, 1140, 1143, 1144, 1147, 1150, 1241, 1272, 1274, 1300, 1327, 1332, 1333, 1335, 1342, 1355, 1358, 1359], "int": [2, 3, 9, 11, 14, 16, 22, 26, 40, 46, 48, 60, 66, 67, 69, 70, 71, 72, 73, 89, 95, 96, 98, 99, 100, 101, 102, 129, 130, 131, 133, 134, 136, 137, 141, 142, 164, 176, 180, 182, 189, 190, 191, 203, 207, 211, 212, 214, 215, 216, 218, 225, 226, 227, 228, 233, 234, 235, 241, 242, 243, 244, 246, 249, 256, 257, 258, 270, 274, 278, 279, 281, 282, 284, 289, 290, 291, 303, 307, 314, 315, 316, 318, 319, 321, 326, 327, 328, 340, 344, 351, 352, 353, 355, 356, 358, 380, 427, 432, 433, 437, 441, 442, 446, 447, 448, 449, 450, 451, 452, 459, 460, 465, 466, 468, 469, 473, 479, 480, 483, 493, 495, 497, 505, 506, 507, 509, 511, 513, 515, 517, 518, 519, 525, 528, 530, 541, 542, 543, 545, 547, 551, 574, 578, 582, 583, 589, 594, 597, 601, 607, 616, 634, 641, 643, 655, 661, 662, 664, 665, 666, 667, 668, 684, 690, 691, 693, 694, 695, 696, 697, 736, 748, 753, 758, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 773, 774, 777, 778, 780, 782, 783, 784, 786, 787, 792, 808, 820, 824, 826, 834, 835, 836, 848, 852, 856, 857, 859, 860, 861, 863, 870, 871, 872, 873, 878, 879, 880, 886, 887, 888, 889, 891, 894, 901, 902, 903, 915, 919, 923, 924, 926, 927, 929, 934, 935, 936, 948, 952, 959, 960, 961, 963, 964, 966, 971, 972, 973, 985, 989, 996, 997, 998, 1000, 1001, 1003, 1027, 1063, 1064, 1066, 1070, 1075, 1076, 1080, 1084, 1085, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1102, 1103, 1108, 1109, 1111, 1112, 1116, 1122, 1123, 1126, 1136, 1138, 1140, 1148, 1149, 1150, 1152, 1154, 1156, 1158, 1160, 1162, 1163, 1165, 1167, 1177, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1206, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1238, 1239, 1240, 1241, 1255, 1258, 1260, 1271, 1272, 1273, 1275, 1277, 1281, 1304, 1307, 1358, 1363], "dimens": [2, 3, 9, 11, 22, 46, 89, 130, 370, 428, 479, 495, 496, 502, 507, 509, 516, 551, 571, 572, 582, 583, 589, 594, 607, 641, 684, 762, 1017, 1063, 1064, 1066, 1071, 1122, 1138, 1139, 1145, 1150, 1152, 1159, 1165, 1206, 1281, 1301, 1302, 1342, 1344, 1351, 1355, 1358, 1360], "1536": [3, 9, 583, 589], "dtype": [3, 8, 151, 583, 588, 723, 795, 1062, 1066, 1307, 1351, 1353, 1360], "float32": [3, 16, 26, 381, 583, 601, 616, 1028, 1307, 1342, 1351, 1353, 1360], "date_format": [3, 9, 22, 583, 589, 607], "added_tim": [3, 9, 22, 583, 589, 607], "86400": [3, 583], "x_offset": [3, 9, 22, 583, 589, 607], "619652": [3, 9, 583, 589], "074056": [3, 9, 583, 589], "y_offset": [3, 9, 22, 583, 589, 607], "3526818": [3, 9, 583, 589], "337932": [3, 9, 583, 589], "lat_0": [3, 9, 22, 46, 60, 89, 122, 125, 315, 352, 583, 589, 607, 641, 655, 684, 717, 720, 960, 997, 1165, 1177, 1206, 1331, 1359], "90": [3, 9, 494, 557, 583, 589, 1137, 1287, 1363], "lon_0": [3, 9, 22, 46, 60, 89, 122, 125, 315, 352, 583, 589, 607, 641, 655, 684, 717, 720, 960, 997, 1165, 1177, 1206, 1331, 1359], "proj": [3, 22, 46, 53, 60, 89, 121, 123, 124, 246, 324, 583, 607, 641, 648, 655, 684, 716, 718, 719, 891, 969, 1165, 1172, 1177, 1206], "gnom": [3, 583], "rainfall_accumul": [3, 583], "meteofr": [3, 9, 12, 22, 583, 589, 595, 607, 1349], "stereopolar": [3, 9, 583, 589], "project": [3, 9, 21, 22, 46, 49, 53, 60, 89, 121, 122, 123, 124, 125, 209, 221, 233, 234, 235, 246, 276, 287, 309, 315, 346, 352, 370, 379, 380, 442, 450, 460, 473, 476, 494, 583, 589, 606, 607, 625, 641, 644, 648, 655, 684, 716, 717, 718, 719, 720, 854, 866, 878, 879, 880, 891, 921, 932, 954, 960, 991, 997, 1017, 1026, 1027, 1066, 1085, 1093, 1103, 1116, 1119, 1137, 1165, 1168, 1172, 1177, 1206, 1314, 1315, 1318, 1324, 1325, 1331, 1338, 1342, 1344, 1349, 1352, 1353, 1355, 1356, 1358, 1359, 1362], "type": [3, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 35, 41, 60, 89, 131, 132, 140, 187, 254, 287, 324, 363, 368, 370, 371, 372, 373, 375, 376, 377, 381, 382, 423, 437, 442, 450, 460, 473, 476, 478, 483, 485, 504, 507, 517, 528, 530, 540, 583, 588, 597, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 620, 621, 622, 628, 635, 655, 684, 763, 764, 782, 783, 784, 785, 832, 899, 932, 969, 1010, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1028, 1029, 1080, 1085, 1093, 1103, 1116, 1119, 1121, 1126, 1128, 1147, 1150, 1160, 1177, 1206, 1258, 1260, 1270, 1357, 1359, 1360, 1363], "date": [3, 9, 22, 364, 365, 583, 589, 607, 1011, 1012, 1306, 1314, 1315], "second": [3, 9, 22, 56, 57, 58, 59, 62, 73, 91, 102, 118, 130, 376, 383, 493, 509, 518, 520, 540, 565, 566, 583, 589, 607, 651, 652, 653, 654, 657, 668, 686, 697, 713, 762, 1023, 1031, 1055, 1136, 1152, 1162, 1179, 1190, 1208, 1219, 1270, 1295, 1296, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1356, 1357, 1360, 1363], "nomin": [3, 9, 14, 22, 24, 25, 583, 589, 597, 607, 614, 615], "24h": [3, 9, 583, 589], "accumul": [3, 9, 511, 583, 589, 1154, 1307, 1344], "mf": [3, 9, 583, 589, 773, 774, 775], "x": [3, 9, 21, 22, 46, 52, 54, 72, 80, 89, 101, 109, 118, 119, 120, 121, 122, 123, 124, 125, 187, 193, 197, 204, 206, 209, 211, 214, 215, 216, 217, 218, 220, 231, 233, 237, 239, 249, 251, 253, 254, 260, 264, 271, 273, 276, 278, 281, 282, 283, 284, 286, 287, 293, 297, 304, 306, 309, 312, 314, 318, 319, 320, 321, 323, 324, 330, 334, 341, 343, 346, 349, 351, 355, 356, 357, 358, 360, 437, 479, 484, 495, 499, 502, 503, 507, 508, 509, 516, 517, 551, 583, 589, 606, 607, 641, 647, 649, 667, 675, 684, 696, 704, 713, 714, 715, 716, 717, 718, 719, 720, 832, 838, 842, 849, 851, 854, 856, 859, 860, 861, 862, 863, 865, 876, 878, 882, 884, 894, 896, 898, 899, 905, 909, 916, 918, 921, 923, 926, 927, 928, 929, 931, 932, 938, 942, 949, 951, 954, 957, 959, 963, 964, 965, 966, 968, 969, 975, 979, 986, 988, 991, 994, 996, 1000, 1001, 1002, 1003, 1005, 1055, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1080, 1122, 1127, 1138, 1142, 1145, 1146, 1150, 1151, 1152, 1159, 1160, 1165, 1171, 1173, 1189, 1197, 1206, 1218, 1226, 1237, 1241, 1281, 1318, 1324, 1325, 1334, 1335, 1344, 1355, 1356, 1358, 1359, 1360, 1362], "offset": [3, 9, 18, 19, 20, 22, 30, 31, 33, 129, 136, 137, 141, 142, 187, 254, 287, 313, 324, 350, 439, 449, 479, 495, 540, 557, 583, 589, 603, 604, 605, 607, 621, 622, 624, 751, 758, 777, 778, 786, 787, 832, 899, 932, 958, 969, 995, 1082, 1092, 1122, 1138, 1270, 1287], "origin": [3, 9, 22, 46, 54, 130, 131, 132, 187, 254, 287, 324, 376, 378, 379, 383, 412, 495, 533, 534, 553, 583, 589, 607, 641, 649, 762, 763, 764, 832, 899, 932, 969, 1023, 1025, 1026, 1031, 1033, 1062, 1066, 1138, 1165, 1173, 1263, 1264, 1283, 1318, 1319, 1320, 1343, 1344, 1349, 1363], "stereo": [3, 9, 583, 589], "polar": [3, 9, 26, 138, 179, 370, 371, 455, 482, 497, 509, 583, 589, 608, 616, 767, 768, 769, 773, 774, 775, 779, 782, 783, 784, 823, 1017, 1018, 1098, 1125, 1140, 1152, 1307, 1359], "correspond": [3, 9, 13, 22, 122, 125, 151, 203, 233, 234, 235, 249, 270, 303, 340, 364, 417, 443, 463, 517, 541, 545, 547, 548, 549, 558, 559, 560, 561, 578, 583, 589, 596, 607, 717, 720, 723, 795, 848, 878, 879, 880, 894, 915, 948, 985, 1011, 1038, 1049, 1063, 1066, 1086, 1106, 1160, 1271, 1275, 1277, 1278, 1279, 1288, 1289, 1290, 1291, 1314, 1326, 1353, 1357, 1359, 1360, 1363], "northwest": [3, 9, 22, 583, 589, 607], "corner": [3, 9, 22, 206, 273, 306, 313, 343, 350, 583, 589, 607, 851, 918, 951, 958, 988, 995, 1358], "metropolitan": [3, 9, 22, 583, 589, 607], "french": [3, 9, 22, 583, 589, 607], "composit": [3, 9, 22, 380, 428, 583, 589, 607, 1027, 1071, 1312, 1341, 1347, 1361], "9": [3, 9, 22, 30, 31, 127, 179, 218, 284, 321, 358, 370, 504, 511, 513, 541, 583, 589, 607, 621, 622, 754, 760, 761, 823, 863, 929, 966, 1003, 1017, 1147, 1154, 1156, 1271, 1315, 1326, 1335, 1342, 1343, 1344, 1351, 1356, 1357, 1359, 1360], "965": [3, 9, 22, 583, 589, 607], "53": [3, 9, 22, 136, 137, 583, 589, 607, 777, 778], "670": [3, 9, 22, 583, 589, 607], "deg": [3, 9, 14, 22, 24, 25, 126, 134, 139, 146, 179, 181, 185, 425, 442, 473, 474, 476, 480, 494, 497, 500, 504, 507, 526, 543, 554, 571, 572, 583, 589, 597, 607, 614, 615, 721, 765, 770, 781, 791, 823, 825, 829, 1068, 1085, 1116, 1117, 1119, 1123, 1137, 1140, 1143, 1147, 1150, 1256, 1273, 1284, 1301, 1302, 1346, 1358], "latitud": [3, 9, 22, 29, 46, 48, 51, 54, 56, 60, 71, 89, 100, 121, 122, 123, 125, 126, 144, 145, 187, 209, 210, 230, 232, 233, 234, 236, 237, 238, 246, 248, 250, 251, 252, 254, 276, 277, 287, 309, 310, 311, 313, 315, 324, 346, 347, 348, 350, 352, 442, 473, 476, 526, 544, 545, 546, 554, 570, 583, 589, 607, 620, 641, 643, 646, 649, 651, 655, 666, 684, 695, 716, 717, 718, 720, 721, 789, 790, 832, 854, 855, 875, 877, 878, 879, 881, 882, 883, 891, 893, 895, 896, 897, 899, 921, 922, 932, 954, 955, 956, 958, 960, 969, 991, 992, 993, 995, 997, 1066, 1085, 1116, 1119, 1165, 1167, 1170, 1173, 1177, 1188, 1206, 1217, 1256, 1274, 1275, 1276, 1284, 1300, 1307, 1312, 1313, 1316, 1324, 1331, 1338, 1342, 1344, 1351, 1352, 1358, 1359, 1360, 1361], "longitud": [3, 9, 22, 29, 46, 48, 51, 54, 56, 60, 71, 89, 100, 121, 122, 123, 125, 126, 144, 145, 187, 209, 210, 230, 232, 233, 234, 236, 238, 239, 246, 248, 250, 252, 253, 254, 276, 277, 287, 309, 310, 311, 313, 315, 324, 346, 347, 348, 350, 352, 442, 473, 476, 526, 544, 545, 546, 554, 570, 583, 589, 607, 620, 641, 643, 646, 649, 651, 655, 666, 684, 695, 716, 717, 718, 720, 721, 789, 790, 832, 854, 855, 875, 877, 878, 879, 881, 883, 884, 891, 893, 895, 897, 898, 899, 921, 922, 932, 954, 955, 956, 958, 960, 969, 991, 992, 993, 995, 997, 1066, 1085, 1116, 1119, 1165, 1167, 1170, 1173, 1177, 1188, 1206, 1217, 1256, 1274, 1275, 1276, 1284, 1300, 1312, 1313, 1316, 1324, 1331, 1338, 1342, 1344, 1351, 1352, 1358, 1359, 1360, 1361], "stereograph": [3, 9, 583, 589], "can": [3, 4, 13, 14, 16, 18, 22, 24, 25, 26, 30, 31, 33, 45, 60, 69, 72, 89, 98, 101, 121, 123, 124, 130, 135, 140, 151, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 203, 270, 303, 340, 362, 370, 371, 373, 376, 380, 381, 382, 410, 430, 433, 437, 442, 446, 449, 450, 460, 466, 468, 473, 474, 476, 480, 482, 495, 497, 500, 504, 507, 508, 509, 511, 513, 514, 517, 519, 528, 558, 564, 576, 583, 584, 596, 597, 599, 601, 603, 607, 614, 615, 616, 621, 622, 624, 625, 639, 655, 664, 667, 684, 693, 696, 716, 718, 719, 723, 736, 748, 752, 753, 760, 761, 762, 765, 767, 768, 772, 773, 774, 775, 776, 782, 783, 784, 785, 795, 808, 820, 823, 824, 825, 826, 827, 828, 829, 830, 848, 915, 948, 985, 1009, 1017, 1018, 1020, 1023, 1027, 1028, 1029, 1065, 1066, 1073, 1076, 1080, 1085, 1089, 1092, 1093, 1103, 1109, 1111, 1116, 1117, 1119, 1123, 1125, 1138, 1140, 1143, 1147, 1150, 1151, 1152, 1154, 1156, 1157, 1160, 1163, 1177, 1186, 1189, 1206, 1215, 1218, 1258, 1288, 1294, 1307, 1314, 1315, 1318, 1323, 1342, 1344, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1365], "webmerc": [3, 22, 583, 607], "stere": [3, 22, 352, 583, 607, 997], "reader": [4, 14, 16, 584, 597, 601, 1307, 1315, 1349], "c": [4, 14, 16, 77, 106, 118, 122, 125, 130, 132, 246, 352, 410, 432, 437, 442, 450, 452, 478, 484, 499, 507, 508, 509, 514, 517, 519, 542, 580, 584, 597, 601, 672, 701, 713, 717, 720, 751, 753, 757, 762, 764, 891, 997, 1075, 1080, 1085, 1093, 1095, 1121, 1127, 1142, 1150, 1151, 1152, 1157, 1160, 1163, 1194, 1223, 1243, 1272, 1307, 1318, 1349, 1350, 1352, 1355, 1357, 1358, 1362, 1363, 1365], "metranet": [4, 6, 7, 14, 16, 580, 584, 586, 587, 591, 592, 597, 601, 608, 609, 1307, 1350], "product": [4, 374, 376, 428, 497, 519, 584, 1021, 1023, 1071, 1140, 1163, 1307], "librari": [4, 14, 16, 145, 363, 373, 376, 379, 380, 580, 584, 597, 601, 790, 1010, 1020, 1023, 1026, 1027, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1362, 1363], "either": [4, 14, 16, 18, 30, 31, 130, 131, 132, 135, 204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 281, 282, 283, 284, 304, 305, 306, 314, 318, 319, 320, 321, 341, 342, 343, 351, 355, 356, 357, 358, 365, 421, 442, 450, 460, 473, 480, 481, 485, 488, 489, 497, 504, 584, 597, 599, 601, 603, 621, 622, 752, 753, 762, 763, 764, 767, 768, 772, 782, 783, 784, 792, 849, 850, 851, 856, 859, 860, 861, 862, 863, 874, 876, 878, 879, 880, 882, 884, 892, 894, 896, 898, 916, 917, 918, 923, 926, 927, 928, 929, 949, 950, 951, 959, 963, 964, 965, 966, 986, 987, 988, 996, 1000, 1001, 1002, 1003, 1012, 1042, 1052, 1085, 1093, 1103, 1116, 1123, 1124, 1128, 1131, 1132, 1140, 1147, 1344, 1349, 1357, 1358, 1359, 1362, 1363], "python": [4, 14, 16, 45, 380, 576, 584, 597, 601, 639, 1027, 1307, 1309, 1310, 1312, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1362, 1365], "delay_field_load": [5, 6, 7, 28, 363, 366, 367, 370, 371, 372, 375, 377, 585, 586, 587, 619, 1010, 1013, 1014, 1017, 1018, 1019, 1022, 1024], "delai": [5, 6, 7, 28, 363, 366, 367, 370, 371, 372, 375, 542, 585, 586, 587, 619, 1010, 1013, 1014, 1017, 1018, 1019, 1022, 1272], "load": [5, 6, 7, 28, 45, 363, 366, 367, 370, 371, 372, 375, 383, 419, 580, 585, 586, 587, 619, 639, 1010, 1013, 1014, 1017, 1018, 1019, 1022, 1030, 1031, 1040, 1357, 1358, 1359, 1360], "until": [5, 6, 7, 28, 45, 131, 363, 366, 367, 370, 371, 372, 375, 585, 586, 587, 619, 639, 763, 1010, 1013, 1014, 1017, 1018, 1019, 1022, 1358], "particular": [5, 6, 7, 28, 363, 366, 367, 370, 371, 372, 375, 474, 498, 511, 585, 586, 587, 619, 1010, 1013, 1014, 1017, 1018, 1019, 1022, 1066, 1117, 1141, 1154, 1349], "access": [5, 6, 7, 28, 35, 46, 60, 71, 72, 89, 100, 101, 151, 363, 366, 367, 370, 371, 372, 375, 383, 585, 586, 587, 619, 628, 641, 655, 666, 667, 684, 695, 696, 723, 795, 1010, 1013, 1014, 1017, 1018, 1019, 1022, 1031, 1165, 1177, 1188, 1189, 1206, 1217, 1218, 1236, 1314, 1315, 1355, 1360], "In": [5, 6, 7, 28, 30, 31, 121, 123, 124, 132, 134, 363, 366, 367, 370, 371, 372, 374, 375, 421, 428, 474, 507, 519, 525, 585, 586, 587, 619, 621, 622, 716, 718, 719, 764, 770, 1007, 1010, 1013, 1014, 1017, 1018, 1019, 1021, 1022, 1042, 1052, 1055, 1071, 1117, 1150, 1163, 1255, 1309, 1310, 1315, 1344, 1349, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1362, 1363], "attribut": [5, 6, 7, 18, 19, 20, 28, 30, 31, 33, 46, 49, 50, 51, 52, 53, 60, 71, 72, 78, 79, 80, 81, 89, 100, 101, 107, 108, 109, 110, 130, 147, 151, 164, 176, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 375, 378, 379, 382, 454, 585, 586, 587, 599, 603, 604, 605, 619, 621, 622, 624, 641, 644, 645, 646, 647, 648, 655, 666, 667, 673, 674, 675, 676, 684, 695, 696, 702, 703, 704, 705, 723, 736, 748, 762, 795, 808, 820, 849, 856, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1022, 1025, 1026, 1029, 1097, 1165, 1168, 1169, 1170, 1171, 1172, 1177, 1188, 1189, 1195, 1196, 1197, 1198, 1206, 1217, 1218, 1224, 1225, 1226, 1227, 1342, 1351, 1357, 1360], "lazyloaddict": [5, 6, 7, 28, 46, 60, 89, 363, 366, 367, 370, 371, 372, 375, 585, 586, 587, 619, 641, 655, 684, 1010, 1013, 1014, 1017, 1018, 1019, 1022, 1165, 1177, 1206], "provid": [5, 6, 7, 8, 13, 28, 60, 63, 89, 92, 130, 210, 234, 277, 310, 315, 347, 365, 366, 367, 368, 373, 376, 380, 381, 382, 383, 415, 416, 422, 497, 504, 552, 569, 585, 586, 587, 588, 596, 619, 655, 658, 684, 687, 762, 855, 879, 922, 955, 960, 992, 1012, 1013, 1014, 1015, 1020, 1023, 1027, 1028, 1029, 1031, 1036, 1037, 1043, 1044, 1047, 1048, 1053, 1055, 1140, 1147, 1177, 1180, 1206, 1209, 1282, 1299, 1306, 1315, 1342, 1344, 1349, 1356, 1357, 1359, 1362, 1363], "speedup": [5, 6, 7, 28, 233, 234, 315, 352, 366, 367, 585, 586, 587, 619, 878, 879, 960, 997, 1013, 1014], "number": [5, 6, 7, 14, 16, 26, 28, 33, 45, 46, 60, 66, 67, 69, 70, 71, 72, 73, 89, 95, 96, 98, 99, 100, 101, 102, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 203, 207, 211, 212, 214, 215, 216, 217, 234, 270, 274, 278, 279, 281, 282, 283, 303, 307, 314, 315, 316, 318, 319, 320, 340, 344, 351, 352, 353, 355, 356, 357, 366, 367, 374, 380, 381, 399, 433, 437, 442, 446, 447, 450, 451, 452, 460, 466, 473, 480, 482, 483, 493, 503, 505, 506, 507, 509, 511, 513, 515, 517, 528, 530, 540, 541, 542, 547, 548, 549, 558, 559, 560, 561, 575, 577, 585, 586, 587, 597, 601, 616, 619, 624, 639, 641, 655, 661, 662, 664, 665, 666, 667, 668, 684, 690, 691, 693, 694, 695, 696, 697, 751, 752, 753, 758, 760, 761, 762, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 777, 778, 780, 782, 783, 784, 785, 786, 787, 792, 848, 852, 856, 857, 859, 860, 861, 862, 879, 915, 919, 923, 924, 926, 927, 928, 948, 952, 959, 960, 961, 963, 964, 965, 985, 989, 996, 997, 998, 1000, 1001, 1002, 1007, 1013, 1014, 1021, 1027, 1028, 1062, 1065, 1066, 1076, 1080, 1085, 1089, 1090, 1093, 1094, 1095, 1103, 1109, 1116, 1123, 1125, 1126, 1136, 1146, 1148, 1149, 1150, 1152, 1154, 1156, 1158, 1160, 1165, 1177, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1206, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1237, 1238, 1239, 1240, 1241, 1258, 1260, 1270, 1271, 1272, 1277, 1278, 1279, 1288, 1289, 1290, 1291, 1305, 1323, 1325, 1349, 1357, 1358, 1360, 1363], "gate": [5, 6, 7, 28, 60, 70, 71, 72, 89, 99, 100, 101, 118, 119, 120, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 254, 271, 278, 282, 283, 287, 304, 314, 315, 319, 320, 324, 341, 351, 352, 356, 357, 366, 367, 372, 373, 374, 375, 451, 452, 481, 482, 491, 492, 493, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 525, 526, 527, 542, 543, 545, 546, 551, 554, 585, 586, 587, 619, 655, 665, 666, 667, 684, 694, 695, 696, 713, 714, 715, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 758, 762, 763, 764, 765, 766, 767, 768, 770, 772, 774, 776, 777, 778, 782, 783, 784, 786, 787, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 849, 856, 860, 861, 862, 876, 882, 884, 894, 896, 898, 899, 916, 923, 927, 928, 932, 949, 959, 960, 964, 965, 969, 986, 996, 997, 1001, 1002, 1013, 1014, 1019, 1020, 1021, 1022, 1055, 1062, 1065, 1066, 1094, 1095, 1124, 1125, 1134, 1135, 1136, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1162, 1163, 1177, 1187, 1188, 1189, 1206, 1216, 1217, 1218, 1238, 1239, 1240, 1255, 1256, 1257, 1272, 1273, 1275, 1276, 1281, 1284, 1310, 1315, 1318, 1319, 1320, 1324, 1351, 1353, 1355, 1356, 1357, 1359, 1360], "vari": [5, 6, 7, 28, 366, 367, 370, 478, 562, 585, 586, 587, 619, 1013, 1014, 1017, 1121, 1292, 1344, 1357], "between": [5, 6, 7, 14, 24, 25, 28, 30, 31, 48, 60, 71, 72, 89, 100, 101, 119, 122, 123, 130, 131, 134, 164, 176, 179, 182, 183, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 366, 367, 372, 375, 381, 382, 435, 437, 478, 479, 485, 493, 495, 497, 512, 513, 527, 529, 531, 532, 540, 560, 561, 570, 585, 586, 587, 597, 614, 615, 619, 621, 622, 643, 655, 666, 667, 684, 695, 696, 714, 717, 718, 736, 748, 760, 761, 762, 763, 765, 770, 773, 774, 775, 776, 784, 808, 820, 823, 826, 827, 849, 856, 860, 861, 862, 863, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1006, 1013, 1014, 1019, 1022, 1028, 1029, 1055, 1078, 1080, 1121, 1122, 1128, 1136, 1138, 1140, 1155, 1156, 1167, 1177, 1188, 1189, 1206, 1217, 1218, 1250, 1257, 1259, 1261, 1262, 1270, 1290, 1291, 1300, 1307, 1318, 1324, 1334, 1344, 1353, 1355, 1358, 1359, 1363, 1365], "rai": [5, 6, 7, 28, 31, 60, 68, 71, 72, 73, 74, 75, 76, 89, 97, 100, 101, 102, 103, 104, 105, 119, 130, 131, 132, 133, 134, 135, 137, 164, 176, 182, 188, 190, 193, 195, 196, 204, 211, 214, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 255, 257, 260, 262, 263, 271, 278, 281, 282, 283, 284, 288, 290, 293, 295, 296, 304, 314, 315, 318, 319, 320, 321, 325, 327, 330, 332, 333, 341, 351, 352, 355, 356, 357, 358, 365, 366, 367, 372, 375, 376, 424, 427, 447, 452, 482, 511, 512, 513, 518, 530, 537, 539, 542, 543, 545, 547, 548, 549, 558, 559, 560, 561, 574, 575, 585, 586, 587, 619, 622, 655, 663, 666, 667, 668, 669, 670, 671, 684, 692, 695, 696, 697, 698, 699, 700, 714, 736, 748, 751, 752, 753, 760, 761, 762, 763, 764, 766, 767, 768, 770, 772, 773, 774, 778, 782, 783, 784, 808, 820, 826, 833, 835, 838, 840, 841, 849, 856, 859, 860, 861, 862, 863, 876, 882, 884, 894, 896, 898, 900, 902, 905, 907, 908, 916, 923, 926, 927, 928, 929, 933, 935, 938, 940, 941, 949, 959, 960, 963, 964, 965, 966, 970, 972, 975, 977, 978, 986, 996, 997, 1000, 1001, 1002, 1003, 1012, 1013, 1014, 1019, 1022, 1023, 1055, 1070, 1090, 1095, 1125, 1154, 1155, 1156, 1162, 1177, 1185, 1188, 1189, 1190, 1191, 1192, 1193, 1206, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1238, 1239, 1240, 1243, 1260, 1267, 1269, 1272, 1273, 1275, 1277, 1278, 1279, 1288, 1289, 1290, 1291, 1304, 1305, 1307, 1319, 1351, 1360, 1363], "ngates_vari": [5, 6, 7, 28, 366, 367, 585, 586, 587, 619, 1013, 1014], "recommend": [5, 6, 7, 28, 45, 60, 89, 130, 132, 352, 366, 367, 376, 478, 479, 495, 507, 525, 585, 586, 587, 619, 639, 655, 684, 762, 764, 997, 1013, 1014, 1023, 1066, 1121, 1122, 1138, 1150, 1177, 1206, 1255, 1323, 1349, 1362, 1363, 1364, 1365], "read_altitude_from_nc": [8, 588], "d3r": [8, 588], "gcpex": [8, 588], "odim_h5": [8, 18, 19, 20, 30, 31, 588, 599, 603, 604, 605, 621, 622, 1307], "found": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 45, 133, 149, 363, 368, 370, 371, 372, 373, 375, 376, 377, 417, 428, 483, 496, 558, 588, 597, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 620, 639, 760, 761, 765, 766, 1010, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1038, 1049, 1062, 1065, 1066, 1071, 1126, 1139, 1288, 1315, 1349, 1357, 1362, 1363, 1365], "doe": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 64, 93, 121, 123, 124, 130, 131, 132, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 396, 421, 575, 588, 597, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 620, 659, 688, 716, 718, 719, 762, 763, 764, 849, 851, 856, 859, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1042, 1052, 1181, 1210, 1305, 1307, 1335, 1349, 1351, 1357, 1362, 1363, 1365], "appear": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 557, 588, 597, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 620, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1287], "place": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 135, 205, 209, 210, 229, 232, 247, 248, 272, 276, 277, 305, 309, 310, 342, 346, 347, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 433, 513, 575, 588, 597, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 620, 772, 850, 854, 855, 874, 877, 892, 893, 917, 921, 922, 950, 954, 955, 987, 991, 992, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1076, 1156, 1305, 1355, 1362], "defin": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 46, 60, 89, 121, 123, 124, 129, 130, 133, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 209, 210, 214, 276, 277, 281, 309, 310, 318, 346, 347, 355, 363, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 382, 427, 460, 474, 480, 497, 504, 505, 506, 507, 511, 512, 513, 516, 520, 525, 588, 597, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 620, 621, 622, 641, 655, 684, 716, 718, 719, 751, 752, 753, 758, 760, 761, 762, 765, 766, 767, 768, 769, 772, 776, 777, 778, 782, 783, 784, 786, 787, 823, 824, 825, 826, 827, 828, 829, 830, 854, 855, 859, 921, 922, 926, 954, 955, 963, 991, 992, 1000, 1010, 1013, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1029, 1065, 1066, 1070, 1103, 1117, 1123, 1140, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1159, 1165, 1177, 1206, 1255, 1324, 1325, 1342, 1344, 1359], "mdv": [8, 14, 16, 18, 19, 20, 24, 25, 26, 29, 370, 371, 381, 588, 597, 599, 601, 603, 604, 605, 614, 615, 616, 617, 620, 1017, 1018, 1028, 1310, 1312, 1319, 1322, 1340, 1349, 1353, 1355, 1361], "like": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 40, 56, 57, 77, 106, 121, 122, 124, 125, 126, 131, 132, 362, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 415, 416, 428, 482, 511, 512, 513, 521, 522, 523, 524, 541, 542, 555, 576, 588, 597, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 620, 634, 651, 652, 672, 701, 716, 717, 719, 720, 721, 763, 764, 1009, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1036, 1037, 1047, 1048, 1071, 1125, 1154, 1155, 1156, 1194, 1223, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1271, 1272, 1285, 1314, 1315, 1318, 1349, 1351, 1353, 1355, 1359, 1363], "onli": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 32, 65, 71, 72, 94, 100, 101, 130, 132, 133, 135, 136, 137, 151, 204, 215, 233, 234, 271, 282, 304, 315, 319, 341, 352, 356, 363, 368, 370, 371, 372, 373, 374, 375, 376, 481, 482, 497, 507, 533, 534, 547, 557, 564, 571, 572, 588, 597, 599, 601, 602, 603, 604, 605, 614, 615, 616, 617, 620, 623, 660, 666, 667, 689, 695, 696, 723, 751, 752, 753, 757, 762, 764, 766, 772, 777, 778, 782, 783, 784, 795, 849, 860, 878, 879, 916, 927, 949, 960, 964, 986, 997, 1001, 1010, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1063, 1064, 1066, 1124, 1125, 1140, 1150, 1182, 1188, 1189, 1211, 1217, 1218, 1263, 1264, 1277, 1287, 1294, 1301, 1302, 1307, 1318, 1325, 1335, 1344, 1352, 1353, 1355, 1357, 1358, 1359, 1363], "you": [8, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 482, 588, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1125, 1314, 1344, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1362, 1363, 1365], "altitud": [8, 29, 46, 60, 71, 89, 100, 126, 127, 128, 136, 137, 187, 218, 284, 321, 358, 428, 433, 497, 500, 501, 513, 516, 526, 544, 554, 570, 588, 620, 641, 655, 666, 684, 695, 721, 754, 755, 760, 761, 773, 777, 778, 832, 863, 929, 966, 1003, 1063, 1066, 1071, 1076, 1140, 1143, 1144, 1156, 1159, 1165, 1177, 1188, 1206, 1217, 1256, 1274, 1284, 1300, 1307, 1335, 1346, 1351, 1355, 1358, 1360], "np": [8, 14, 16, 26, 447, 519, 568, 588, 597, 601, 616, 1055, 1090, 1163, 1298, 1307, 1318, 1319, 1323, 1326, 1331, 1334, 1335, 1337, 1342, 1344, 1345, 1346, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1363], "295": [8, 588], "float64": [8, 588, 1065, 1066, 1342, 1360], "nd": [9, 589], "65535": [9, 589], "radar_estimated_rain_r": [9, 589, 1357, 1359], "integ": [9, 204, 271, 304, 341, 382, 502, 503, 589, 849, 916, 949, 986, 1029, 1145, 1146], "repres": [9, 60, 89, 129, 130, 133, 141, 142, 480, 493, 497, 504, 505, 506, 511, 513, 518, 519, 575, 589, 655, 684, 758, 762, 766, 767, 768, 769, 782, 783, 784, 786, 787, 1063, 1064, 1123, 1136, 1140, 1147, 1148, 1149, 1154, 1156, 1162, 1163, 1177, 1206, 1238, 1239, 1305], "No": [9, 71, 72, 100, 101, 132, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 380, 432, 497, 589, 666, 667, 695, 696, 764, 849, 856, 860, 861, 862, 863, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1027, 1066, 1075, 1140, 1188, 1189, 1217, 1218, 1357, 1359], "valid_range_from_fil": [10, 593], "units_from_fil": [10, 593], "pulse_width": [10, 138, 146, 382, 453, 593, 779, 791, 1029, 1096], "gamic": [10, 593], "hdf5": [10, 19, 30, 31, 593, 604, 621, 622, 1349], "valid": [10, 46, 60, 89, 130, 133, 135, 136, 140, 141, 142, 178, 205, 229, 247, 272, 305, 342, 372, 381, 382, 425, 437, 442, 446, 450, 451, 452, 460, 466, 473, 480, 482, 493, 505, 506, 511, 513, 528, 530, 533, 534, 541, 542, 593, 641, 655, 684, 750, 751, 760, 761, 762, 766, 772, 773, 774, 775, 777, 782, 783, 784, 785, 786, 787, 822, 850, 874, 892, 917, 950, 987, 1019, 1028, 1029, 1063, 1064, 1066, 1068, 1080, 1085, 1089, 1093, 1094, 1095, 1103, 1109, 1116, 1123, 1125, 1136, 1148, 1149, 1154, 1156, 1165, 1177, 1206, 1258, 1260, 1263, 1264, 1271, 1272, 1363], "rang": [10, 14, 16, 24, 25, 26, 60, 70, 72, 89, 99, 101, 118, 119, 120, 129, 133, 141, 142, 179, 187, 204, 206, 211, 212, 213, 215, 216, 217, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 254, 271, 273, 278, 279, 280, 282, 283, 287, 304, 306, 314, 315, 316, 317, 319, 320, 324, 341, 343, 351, 352, 353, 354, 356, 357, 375, 424, 425, 433, 442, 446, 447, 460, 466, 473, 474, 478, 481, 482, 493, 497, 501, 507, 509, 511, 512, 513, 530, 540, 543, 554, 560, 561, 571, 572, 593, 597, 601, 614, 615, 616, 655, 665, 667, 684, 694, 696, 713, 714, 715, 753, 758, 760, 761, 766, 767, 768, 769, 773, 786, 787, 823, 832, 849, 851, 856, 857, 858, 860, 861, 862, 876, 878, 879, 880, 882, 884, 891, 894, 896, 898, 899, 916, 918, 923, 924, 925, 927, 928, 932, 949, 951, 959, 960, 961, 962, 964, 965, 969, 986, 988, 996, 997, 998, 999, 1001, 1002, 1022, 1063, 1064, 1066, 1068, 1076, 1085, 1089, 1090, 1103, 1109, 1116, 1117, 1121, 1124, 1125, 1136, 1140, 1144, 1150, 1152, 1154, 1155, 1156, 1177, 1187, 1189, 1206, 1216, 1218, 1260, 1270, 1273, 1284, 1290, 1291, 1301, 1302, 1307, 1323, 1328, 1331, 1337, 1346, 1351, 1358, 1360], "valid_min": [10, 130, 131, 132, 368, 593, 762, 763, 764, 1015, 1344, 1360], "valid_max": [10, 130, 131, 132, 368, 593, 762, 763, 764, 1015, 1344, 1360], "when": [10, 18, 19, 20, 33, 35, 46, 60, 61, 62, 66, 67, 69, 71, 72, 89, 90, 91, 95, 96, 98, 100, 101, 130, 131, 132, 136, 137, 144, 145, 149, 150, 151, 155, 157, 164, 171, 176, 204, 211, 215, 216, 217, 218, 233, 234, 240, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 324, 341, 351, 352, 356, 357, 358, 372, 373, 375, 376, 378, 382, 383, 396, 427, 437, 442, 450, 460, 473, 476, 481, 485, 488, 489, 493, 497, 500, 505, 507, 508, 509, 513, 518, 519, 541, 562, 593, 603, 604, 605, 624, 628, 641, 655, 656, 657, 661, 662, 664, 666, 667, 684, 685, 686, 690, 691, 693, 695, 696, 723, 727, 729, 736, 743, 748, 760, 761, 762, 763, 764, 777, 778, 782, 789, 790, 795, 799, 801, 808, 815, 820, 849, 856, 860, 861, 862, 863, 878, 879, 885, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 969, 986, 996, 997, 1001, 1002, 1003, 1019, 1020, 1022, 1023, 1025, 1029, 1031, 1055, 1066, 1070, 1080, 1085, 1093, 1103, 1116, 1119, 1124, 1128, 1131, 1132, 1136, 1140, 1143, 1148, 1150, 1151, 1152, 1156, 1162, 1163, 1164, 1165, 1177, 1178, 1179, 1183, 1184, 1186, 1188, 1189, 1206, 1207, 1208, 1212, 1213, 1215, 1217, 1218, 1271, 1292, 1307, 1323, 1344, 1349, 1352, 1353, 1356, 1358, 1362, 1363, 1365], "thei": [10, 73, 102, 130, 131, 132, 134, 155, 157, 164, 352, 368, 376, 382, 437, 474, 478, 507, 577, 591, 593, 668, 697, 727, 729, 736, 762, 763, 764, 770, 782, 783, 784, 799, 801, 808, 997, 1015, 1023, 1029, 1080, 1117, 1121, 1150, 1190, 1219, 1344, 1357, 1363], "present": [10, 45, 46, 60, 89, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 381, 382, 421, 593, 639, 641, 655, 684, 849, 856, 860, 861, 862, 863, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1028, 1029, 1042, 1052, 1066, 1165, 1177, 1206, 1351, 1356], "unit": [10, 18, 19, 20, 70, 99, 121, 122, 123, 124, 125, 131, 132, 194, 197, 198, 199, 200, 201, 202, 209, 261, 264, 265, 266, 267, 268, 269, 276, 294, 297, 298, 299, 300, 301, 302, 309, 331, 334, 335, 336, 337, 338, 339, 346, 361, 368, 370, 446, 466, 468, 495, 502, 528, 541, 542, 593, 603, 604, 605, 665, 694, 716, 717, 718, 719, 720, 760, 761, 763, 764, 839, 842, 843, 844, 845, 846, 847, 854, 906, 909, 910, 911, 912, 913, 914, 921, 939, 942, 943, 944, 945, 946, 947, 954, 976, 979, 980, 981, 982, 983, 984, 991, 1008, 1015, 1017, 1089, 1109, 1111, 1138, 1145, 1164, 1187, 1216, 1243, 1258, 1271, 1272, 1307, 1332, 1337, 1344, 1349, 1352, 1357, 1360, 1363], "avail": [10, 18, 19, 20, 60, 71, 72, 73, 89, 100, 101, 102, 134, 135, 164, 176, 231, 233, 234, 235, 237, 239, 249, 251, 253, 370, 380, 497, 528, 564, 593, 603, 604, 605, 625, 655, 666, 667, 668, 684, 695, 696, 697, 736, 748, 751, 752, 753, 770, 772, 782, 783, 784, 808, 820, 876, 878, 879, 880, 882, 884, 894, 896, 898, 1017, 1027, 1140, 1177, 1188, 1189, 1190, 1206, 1217, 1218, 1219, 1258, 1294, 1312, 1314, 1323, 1349, 1357], "mandatori": [10, 593], "processor": [10, 593], "pulsewidth": [10, 497, 593, 1140], "enum": [10, 593], "should": [10, 26, 37, 46, 60, 62, 69, 89, 91, 98, 130, 131, 132, 135, 137, 151, 155, 187, 232, 248, 315, 352, 362, 376, 379, 381, 382, 410, 479, 482, 493, 495, 497, 505, 506, 507, 508, 509, 514, 516, 518, 519, 540, 541, 542, 577, 593, 616, 630, 641, 655, 657, 664, 684, 686, 693, 723, 727, 757, 762, 763, 764, 772, 778, 795, 799, 832, 877, 893, 960, 997, 1006, 1007, 1009, 1023, 1026, 1028, 1029, 1063, 1064, 1065, 1066, 1122, 1125, 1136, 1138, 1140, 1148, 1149, 1150, 1151, 1152, 1157, 1159, 1162, 1163, 1165, 1177, 1179, 1186, 1206, 1208, 1215, 1270, 1271, 1272, 1323, 1344, 1349, 1362, 1363, 1365], "u": [10, 56, 57, 58, 122, 125, 504, 518, 519, 593, 651, 652, 653, 717, 720, 1147, 1162, 1163, 1315, 1346, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1363], "gif": [11, 594, 1307], "precipitation_typ": [12, 22, 595, 607], "grib": [12, 595], "locat": [13, 46, 48, 60, 70, 71, 72, 89, 99, 100, 101, 187, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 254, 271, 272, 273, 276, 277, 278, 279, 280, 282, 283, 284, 287, 304, 305, 306, 309, 310, 312, 314, 315, 316, 317, 319, 320, 321, 324, 341, 342, 343, 346, 347, 349, 351, 352, 353, 354, 356, 357, 358, 372, 373, 375, 381, 527, 544, 545, 546, 596, 641, 643, 655, 665, 666, 667, 684, 694, 695, 696, 832, 849, 850, 851, 854, 855, 856, 857, 858, 860, 861, 862, 863, 874, 876, 878, 879, 880, 882, 884, 891, 892, 894, 896, 898, 899, 916, 917, 918, 921, 922, 923, 924, 925, 927, 928, 929, 932, 949, 950, 951, 954, 955, 957, 959, 960, 961, 962, 964, 965, 966, 969, 986, 987, 988, 991, 992, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1019, 1020, 1022, 1028, 1055, 1062, 1065, 1066, 1165, 1167, 1177, 1187, 1188, 1189, 1206, 1216, 1217, 1218, 1237, 1250, 1257, 1274, 1275, 1276, 1329, 1331, 1342, 1349, 1355, 1358, 1362, 1363], "hpl": [13, 596], "ascii": [13, 596], "halo": [13, 596], "photono": [13, 596], "steamlin": [13, 596], "lidar": [13, 492, 596, 1135, 1307, 1349], "come": [13, 511, 596, 1154, 1344], "assign": [13, 130, 504, 596, 762, 782, 1147, 1344], "lat": [13, 55, 71, 100, 121, 122, 123, 124, 125, 126, 144, 145, 193, 218, 231, 232, 233, 234, 236, 237, 238, 239, 248, 250, 251, 252, 253, 260, 284, 293, 311, 313, 315, 321, 330, 348, 350, 358, 379, 380, 442, 473, 476, 596, 650, 666, 695, 716, 717, 718, 719, 720, 721, 789, 790, 838, 863, 876, 877, 878, 879, 881, 882, 883, 884, 893, 895, 896, 897, 898, 905, 929, 938, 956, 958, 960, 966, 975, 993, 995, 1003, 1026, 1027, 1085, 1116, 1119, 1174, 1188, 1217, 1324, 1325, 1338, 1355, 1358], "lon": [13, 55, 71, 100, 121, 122, 123, 124, 125, 126, 144, 145, 193, 218, 231, 232, 233, 234, 236, 237, 238, 239, 248, 250, 251, 252, 253, 260, 284, 293, 311, 313, 315, 321, 330, 348, 350, 358, 379, 380, 442, 473, 476, 596, 650, 666, 695, 716, 717, 718, 719, 720, 721, 789, 790, 838, 863, 876, 877, 878, 879, 881, 882, 883, 884, 893, 895, 896, 897, 898, 905, 929, 938, 956, 958, 960, 966, 975, 993, 995, 1003, 1026, 1027, 1085, 1116, 1119, 1174, 1188, 1217, 1325, 1338, 1358], "alt": [13, 55, 71, 100, 126, 379, 596, 650, 666, 695, 721, 1026, 1174, 1188, 1217, 1358], "ad": [13, 46, 60, 62, 89, 91, 134, 136, 137, 240, 313, 350, 478, 479, 495, 497, 596, 641, 655, 657, 684, 686, 770, 777, 778, 885, 958, 995, 1063, 1065, 1121, 1122, 1138, 1140, 1165, 1177, 1179, 1206, 1208, 1241, 1307, 1334, 1335, 1351, 1352, 1362, 1363], "global": [13, 60, 89, 596, 655, 684, 1177, 1206, 1360, 1362], "variabl": [13, 33, 45, 46, 54, 55, 56, 60, 70, 89, 99, 151, 187, 221, 240, 254, 287, 324, 378, 379, 437, 448, 449, 483, 485, 496, 504, 507, 510, 514, 515, 517, 541, 596, 624, 639, 641, 649, 650, 651, 655, 665, 684, 694, 723, 795, 832, 866, 885, 899, 932, 969, 1025, 1026, 1055, 1063, 1080, 1091, 1092, 1126, 1128, 1139, 1147, 1150, 1153, 1157, 1158, 1160, 1165, 1173, 1174, 1177, 1187, 1206, 1216, 1271, 1307, 1314, 1318, 1342, 1344, 1349, 1351, 1352, 1357, 1359, 1360, 1362], "location_campaign": [13, 596], "script": [13, 45, 576, 596, 639, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346], "filenames_iq": [14, 597], "nbyte": [14, 16, 26, 597, 601, 616], "4": [14, 16, 26, 30, 31, 60, 89, 118, 119, 126, 366, 370, 427, 478, 510, 511, 560, 597, 601, 616, 621, 622, 655, 684, 713, 714, 721, 760, 761, 782, 783, 1013, 1017, 1062, 1070, 1121, 1153, 1154, 1177, 1206, 1290, 1314, 1315, 1323, 1325, 1332, 1333, 1334, 1335, 1337, 1338, 1342, 1344, 1346, 1349, 1356, 1357, 1358, 1359, 1363], "prf": [14, 597, 1358], "ang_tol": [14, 24, 25, 450, 473, 474, 597, 614, 615, 1093, 1116, 1117], "noise_h": [14, 597], "noise_v": [14, 597], "rconst_h": [14, 597], "rconst_v": [14, 597], "radconst_h": [14, 597], "radconst_v": [14, 597], "mfloss_h": [14, 597], "mfloss_v": [14, 597], "azi_min": [14, 24, 25, 571, 572, 597, 614, 615, 1301, 1302], "azi_max": [14, 24, 25, 571, 572, 597, 614, 615, 1301, 1302], "ele_min": [14, 24, 25, 571, 572, 597, 614, 615, 1301, 1302], "ele_max": [14, 24, 25, 571, 572, 597, 614, 615, 1301, 1302], "rng_min": [14, 24, 25, 501, 571, 572, 597, 614, 615, 1144, 1301, 1302], "rng_max": [14, 24, 25, 501, 571, 572, 597, 614, 615, 1144, 1301, 1302], "rad4alp": [14, 597, 1307], "iq": [14, 430, 432, 439, 441, 443, 445, 449, 457, 459, 463, 471, 472, 477, 597, 1073, 1075, 1082, 1084, 1086, 1088, 1092, 1100, 1102, 1106, 1114, 1115, 1120, 1349], "refer": [14, 18, 24, 25, 30, 34, 46, 60, 62, 89, 91, 118, 122, 125, 127, 128, 130, 131, 132, 135, 136, 137, 138, 139, 143, 146, 193, 218, 260, 284, 293, 321, 330, 358, 372, 373, 374, 428, 432, 433, 437, 442, 446, 447, 450, 451, 452, 454, 460, 461, 466, 473, 474, 476, 478, 479, 480, 482, 484, 495, 497, 500, 504, 507, 508, 509, 511, 513, 514, 516, 518, 519, 541, 542, 552, 567, 597, 599, 603, 614, 615, 621, 626, 641, 655, 657, 684, 686, 713, 717, 720, 751, 752, 753, 754, 755, 757, 760, 761, 762, 763, 764, 767, 768, 772, 777, 778, 779, 781, 782, 783, 784, 788, 791, 838, 863, 905, 929, 938, 966, 975, 1003, 1019, 1020, 1021, 1062, 1071, 1075, 1076, 1080, 1085, 1089, 1090, 1093, 1094, 1095, 1097, 1103, 1104, 1109, 1116, 1117, 1119, 1121, 1122, 1123, 1125, 1127, 1138, 1140, 1143, 1147, 1150, 1151, 1152, 1154, 1156, 1157, 1159, 1161, 1162, 1163, 1165, 1177, 1179, 1206, 1208, 1271, 1272, 1282, 1297, 1349, 1360, 1363], "rainbow": [14, 24, 25, 26, 597, 614, 615, 616], "byte": [14, 16, 26, 380, 408, 597, 601, 616, 1027, 1307, 1357], "numpi": [14, 16, 26, 62, 91, 157, 171, 564, 591, 592, 597, 601, 608, 609, 616, 657, 686, 729, 743, 801, 815, 1179, 1208, 1294, 1307, 1309, 1318, 1319, 1323, 1326, 1331, 1334, 1335, 1337, 1342, 1344, 1345, 1346, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1365], "e": [14, 16, 26, 31, 132, 134, 136, 137, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 364, 380, 421, 435, 474, 478, 479, 495, 507, 511, 513, 516, 526, 527, 552, 554, 597, 601, 616, 622, 764, 770, 777, 778, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1011, 1027, 1042, 1052, 1078, 1117, 1121, 1122, 1138, 1150, 1154, 1156, 1159, 1256, 1257, 1282, 1284, 1314, 1326, 1344, 1358, 1362, 1363], "g": [14, 16, 26, 31, 134, 380, 473, 495, 497, 507, 509, 519, 597, 601, 616, 622, 770, 1027, 1062, 1116, 1138, 1140, 1150, 1152, 1163], "go": [14, 16, 26, 135, 136, 437, 464, 484, 485, 486, 488, 489, 504, 513, 526, 527, 554, 571, 572, 597, 601, 616, 772, 777, 782, 783, 784, 1080, 1107, 1127, 1128, 1129, 1131, 1132, 1147, 1156, 1256, 1257, 1284, 1301, 1302, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1352], "float6432": [14, 597], "scan": [14, 18, 30, 31, 60, 89, 130, 131, 132, 139, 187, 203, 204, 206, 217, 254, 270, 271, 273, 283, 287, 303, 304, 306, 320, 324, 340, 341, 343, 357, 372, 428, 482, 511, 513, 540, 544, 557, 562, 569, 575, 597, 599, 603, 621, 622, 655, 684, 762, 763, 764, 765, 768, 781, 832, 848, 849, 851, 862, 899, 915, 916, 918, 928, 932, 948, 949, 951, 965, 969, 985, 986, 988, 1002, 1019, 1063, 1071, 1125, 1154, 1156, 1177, 1206, 1238, 1239, 1270, 1274, 1287, 1292, 1299, 1305, 1307, 1315, 1318, 1328, 1329, 1339, 1350, 1359], "toler": [14, 24, 25, 442, 450, 473, 474, 476, 491, 492, 526, 533, 534, 550, 554, 597, 614, 615, 1055, 1056, 1058, 1085, 1093, 1116, 1117, 1119, 1134, 1135, 1256, 1263, 1264, 1280, 1284], "angl": [14, 24, 25, 60, 66, 67, 89, 95, 96, 118, 119, 120, 138, 139, 143, 144, 145, 146, 187, 204, 216, 254, 271, 287, 304, 324, 341, 425, 450, 473, 474, 494, 497, 501, 509, 511, 513, 514, 521, 522, 523, 524, 528, 533, 534, 540, 544, 545, 550, 554, 562, 565, 566, 575, 592, 597, 614, 615, 655, 661, 662, 684, 690, 691, 713, 714, 715, 760, 761, 773, 774, 775, 779, 781, 788, 789, 790, 791, 832, 849, 861, 899, 916, 932, 949, 969, 986, 1068, 1093, 1116, 1117, 1137, 1140, 1144, 1152, 1154, 1156, 1157, 1177, 1183, 1184, 1206, 1212, 1213, 1251, 1252, 1253, 1254, 1258, 1263, 1264, 1270, 1274, 1275, 1280, 1284, 1292, 1295, 1296, 1305, 1307, 1337, 1339, 1346, 1351, 1360], "distanc": [14, 24, 25, 46, 54, 72, 101, 118, 119, 120, 204, 215, 271, 282, 304, 319, 341, 356, 442, 447, 473, 482, 502, 504, 509, 511, 512, 513, 527, 533, 534, 542, 544, 545, 546, 570, 597, 614, 615, 641, 649, 667, 696, 713, 714, 715, 849, 860, 916, 927, 949, 964, 986, 1001, 1055, 1056, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1085, 1090, 1116, 1125, 1145, 1147, 1152, 1154, 1155, 1156, 1165, 1173, 1189, 1218, 1257, 1263, 1264, 1272, 1274, 1275, 1276, 1300, 1318, 1327, 1332, 1333, 1334, 1358], "psr": [14, 24, 25, 553, 567, 597, 610, 611, 612, 614, 615, 775, 1283, 1297], "estim": [14, 133, 181, 185, 206, 273, 306, 343, 434, 446, 447, 449, 451, 452, 454, 466, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497, 507, 508, 509, 512, 514, 541, 542, 597, 753, 766, 767, 768, 769, 771, 773, 774, 782, 783, 784, 792, 825, 829, 851, 918, 951, 988, 1063, 1077, 1089, 1090, 1092, 1094, 1095, 1097, 1109, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1150, 1151, 1152, 1155, 1157, 1271, 1272, 1344, 1358], "v": [14, 26, 56, 57, 59, 417, 418, 421, 439, 445, 471, 472, 477, 478, 494, 511, 518, 519, 597, 616, 651, 652, 654, 773, 774, 775, 1038, 1039, 1042, 1049, 1050, 1052, 1082, 1088, 1114, 1115, 1120, 1121, 1137, 1154, 1162, 1163, 1334, 1335, 1346, 1363], "nois": [14, 24, 25, 184, 426, 432, 441, 446, 447, 448, 449, 451, 452, 457, 458, 459, 462, 465, 466, 468, 469, 470, 477, 481, 541, 542, 547, 558, 597, 614, 615, 757, 769, 773, 774, 775, 828, 1069, 1075, 1084, 1089, 1090, 1091, 1092, 1094, 1095, 1100, 1101, 1102, 1105, 1108, 1109, 1111, 1112, 1113, 1120, 1124, 1271, 1272, 1277, 1288, 1353], "power": [14, 24, 25, 136, 138, 146, 183, 441, 446, 448, 451, 452, 454, 457, 458, 460, 461, 465, 466, 468, 469, 481, 484, 485, 486, 487, 488, 489, 497, 542, 547, 597, 614, 615, 751, 753, 773, 774, 775, 776, 777, 779, 791, 792, 827, 1084, 1089, 1091, 1094, 1095, 1097, 1100, 1101, 1103, 1104, 1108, 1109, 1111, 1112, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1140, 1272, 1277], "adu": [14, 446, 448, 449, 464, 465, 466, 467, 468, 469, 470, 597, 1089, 1091, 1092, 1107, 1108, 1109, 1110, 1111, 1112, 1113], "dynam": [14, 131, 597, 763], "factor": [14, 118, 119, 120, 127, 136, 137, 382, 428, 433, 475, 481, 484, 485, 486, 487, 488, 489, 497, 513, 515, 525, 597, 632, 713, 714, 715, 754, 777, 778, 1029, 1071, 1076, 1118, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1140, 1156, 1158, 1255, 1325, 1333, 1339, 1355], "convers": [14, 30, 31, 450, 473, 478, 525, 597, 621, 622, 1093, 1116, 1121, 1255, 1357], "dbadu": [14, 446, 466, 468, 597, 1089, 1109, 1111], "dbm": [14, 138, 146, 446, 451, 452, 454, 461, 466, 468, 597, 773, 774, 775, 779, 791, 792, 1089, 1094, 1095, 1097, 1104, 1109, 1111], "dbz": [14, 26, 136, 137, 423, 433, 437, 447, 462, 478, 479, 495, 504, 511, 516, 597, 616, 751, 757, 777, 778, 1076, 1080, 1090, 1105, 1121, 1122, 1138, 1147, 1154, 1159, 1314, 1318, 1325, 1332, 1333, 1339, 1344, 1357, 1359, 1360], "constant": [14, 372, 453, 454, 461, 475, 502, 507, 597, 761, 1019, 1059, 1065, 1066, 1096, 1097, 1104, 1118, 1145, 1150, 1315, 1358], "match": [14, 130, 134, 187, 254, 287, 324, 376, 454, 461, 493, 518, 519, 597, 762, 765, 770, 832, 899, 932, 969, 1023, 1055, 1097, 1104, 1136, 1162, 1163, 1307, 1318, 1325, 1358], "filter": [14, 63, 92, 130, 131, 132, 134, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 435, 454, 461, 505, 506, 507, 508, 509, 597, 658, 687, 723, 727, 729, 736, 743, 748, 760, 761, 762, 763, 764, 765, 768, 769, 770, 776, 782, 783, 784, 849, 856, 860, 861, 862, 863, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1055, 1065, 1066, 1078, 1097, 1104, 1148, 1149, 1150, 1151, 1152, 1180, 1209, 1310, 1318, 1319, 1320, 1324, 1343, 1350, 1353, 1356, 1357, 1358], "loss": [14, 139, 454, 461, 497, 597, 781, 1097, 1104, 1140], "receiv": [14, 138, 139, 143, 146, 454, 461, 597, 779, 781, 788, 791, 1063, 1064, 1097, 1104, 1353], "db": [14, 135, 138, 139, 146, 181, 185, 425, 426, 454, 461, 497, 511, 547, 597, 772, 773, 774, 779, 781, 791, 792, 825, 829, 1068, 1069, 1097, 1104, 1140, 1154, 1277, 1334, 1359, 1360], "minimum": [14, 24, 25, 129, 133, 135, 136, 137, 140, 141, 142, 179, 182, 183, 184, 185, 186, 204, 206, 211, 214, 215, 216, 217, 218, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 437, 442, 446, 450, 452, 460, 466, 473, 474, 478, 479, 483, 493, 495, 497, 501, 505, 506, 511, 513, 528, 530, 541, 542, 554, 597, 614, 615, 751, 758, 760, 761, 766, 767, 768, 769, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 785, 786, 787, 823, 826, 827, 828, 829, 830, 849, 851, 856, 859, 860, 861, 862, 863, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1027, 1062, 1066, 1080, 1085, 1089, 1093, 1095, 1103, 1109, 1116, 1117, 1121, 1122, 1126, 1136, 1138, 1140, 1144, 1148, 1149, 1154, 1156, 1237, 1241, 1258, 1260, 1271, 1272, 1284, 1344, 1355], "maximum": [14, 16, 24, 25, 89, 127, 128, 129, 130, 131, 133, 135, 136, 137, 141, 142, 179, 181, 182, 183, 184, 204, 206, 211, 214, 215, 216, 217, 218, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 428, 433, 437, 442, 450, 460, 473, 474, 476, 479, 480, 482, 485, 488, 489, 493, 495, 501, 507, 511, 512, 513, 525, 540, 542, 547, 557, 558, 559, 597, 601, 614, 615, 684, 754, 755, 758, 760, 761, 762, 763, 766, 767, 768, 769, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 786, 787, 823, 825, 826, 827, 828, 849, 851, 856, 859, 860, 861, 862, 863, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1006, 1027, 1062, 1063, 1064, 1066, 1071, 1076, 1080, 1085, 1093, 1103, 1116, 1117, 1119, 1122, 1123, 1125, 1128, 1131, 1132, 1136, 1138, 1144, 1150, 1154, 1155, 1156, 1206, 1237, 1241, 1255, 1270, 1272, 1277, 1287, 1288, 1289, 1343, 1344, 1360], "keep": [14, 24, 25, 35, 130, 180, 376, 480, 571, 572, 591, 597, 614, 615, 628, 762, 769, 824, 1023, 1123, 1301, 1302, 1318, 1344, 1363, 1365], "k": [15, 125, 208, 209, 210, 212, 213, 214, 234, 275, 276, 277, 279, 280, 281, 308, 309, 310, 316, 317, 318, 345, 346, 347, 353, 354, 355, 413, 417, 418, 420, 421, 437, 478, 497, 507, 518, 598, 720, 853, 854, 855, 857, 858, 859, 879, 920, 921, 922, 924, 925, 926, 953, 954, 955, 961, 962, 963, 990, 991, 992, 998, 999, 1000, 1034, 1038, 1039, 1041, 1042, 1046, 1049, 1050, 1051, 1052, 1080, 1121, 1140, 1150, 1162, 1324, 1331, 1334, 1335, 1363], "band": [15, 21, 380, 437, 442, 477, 484, 499, 507, 508, 509, 516, 517, 598, 606, 751, 753, 757, 1027, 1080, 1085, 1120, 1127, 1142, 1150, 1151, 1152, 1159, 1160, 1350, 1358], "arm": [15, 33, 55, 364, 365, 366, 378, 379, 496, 598, 624, 650, 1011, 1012, 1013, 1025, 1026, 1066, 1139, 1174, 1237, 1243, 1307, 1320, 1335, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1362, 1365], "zenith": [15, 598], "kazr": [15, 598], "ingest": [15, 598, 1349, 1350], "rmax": [16, 179, 460, 554, 601, 823, 1103, 1284], "noxp": [17, 602], "iphex": [17, 602], "gain": [18, 19, 20, 30, 31, 33, 138, 146, 454, 497, 603, 604, 605, 621, 622, 624, 779, 791, 1097, 1140], "nodata": [18, 19, 20, 30, 31, 603, 604, 605, 621, 622, 1307], "nan": [18, 19, 20, 130, 159, 178, 179, 183, 509, 591, 592, 603, 604, 605, 608, 609, 731, 750, 762, 776, 803, 822, 823, 827, 1152, 1342, 1357, 1358], "undetect": [18, 19, 20, 30, 31, 603, 604, 605, 621, 622, 1307], "use_file_convers": [18, 19, 20, 603, 604, 605], "time_ref": [18, 30, 599, 603, 621], "convert": [18, 19, 20, 23, 30, 31, 54, 126, 138, 479, 495, 557, 575, 578, 603, 604, 605, 613, 621, 622, 649, 721, 779, 1122, 1138, 1173, 1287, 1305, 1344, 1358], "what": [18, 19, 20, 30, 130, 599, 603, 604, 605, 621, 762, 794, 1066, 1314, 1323, 1351, 1353, 1356, 1363, 1365], "user": [18, 19, 20, 26, 45, 63, 92, 352, 380, 465, 469, 478, 574, 603, 604, 605, 616, 639, 658, 687, 752, 753, 765, 997, 1027, 1108, 1112, 1121, 1180, 1209, 1304, 1315, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1365], "physic": [18, 19, 20, 30, 31, 33, 428, 479, 495, 591, 592, 603, 604, 605, 608, 609, 621, 622, 624, 780, 1055, 1071, 1122, 1138, 1344, 1357, 1359], "otherwis": [18, 19, 20, 130, 389, 410, 417, 437, 442, 448, 450, 458, 460, 464, 465, 469, 473, 474, 476, 483, 485, 488, 489, 494, 497, 502, 520, 532, 564, 591, 592, 603, 604, 605, 608, 609, 762, 782, 783, 1038, 1049, 1080, 1085, 1091, 1093, 1101, 1103, 1107, 1108, 1112, 1116, 1117, 1119, 1126, 1128, 1131, 1132, 1137, 1140, 1145, 1262, 1294], "pass": [18, 19, 20, 121, 123, 124, 130, 131, 132, 203, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 270, 271, 278, 282, 283, 284, 303, 304, 311, 312, 313, 314, 315, 316, 319, 320, 321, 340, 341, 348, 349, 350, 351, 352, 353, 356, 357, 358, 362, 363, 372, 374, 493, 507, 603, 604, 605, 716, 718, 719, 762, 763, 764, 848, 849, 856, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 891, 894, 896, 898, 915, 916, 923, 927, 928, 929, 948, 949, 956, 957, 958, 959, 960, 961, 964, 965, 966, 985, 986, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1009, 1010, 1019, 1021, 1062, 1066, 1136, 1150, 1314, 1315, 1352, 1355, 1358], "mid": [18, 30, 599, 603, 621], "expect": [18, 30, 218, 284, 321, 358, 509, 599, 603, 621, 863, 929, 966, 1003, 1152, 1359, 1363], "starttim": [18, 30, 599, 603, 621], "middl": [18, 25, 30, 599, 603, 615, 621], "endtim": [18, 30, 599, 603, 621], "include_dataset": [19, 604], "exclude_dataset": [19, 604], "dataset": [19, 30, 31, 235, 315, 352, 372, 374, 449, 496, 535, 538, 546, 604, 621, 622, 880, 960, 997, 1019, 1021, 1063, 1064, 1092, 1139, 1265, 1268, 1276, 1307, 1314, 1342, 1345, 1346, 1349, 1351], "given": [19, 37, 40, 41, 42, 44, 46, 48, 60, 66, 67, 68, 69, 72, 73, 74, 75, 76, 89, 95, 96, 97, 98, 101, 102, 103, 104, 105, 130, 139, 143, 144, 146, 153, 155, 156, 157, 158, 160, 162, 163, 167, 169, 170, 171, 172, 174, 175, 177, 179, 182, 183, 204, 209, 210, 230, 231, 232, 236, 237, 238, 239, 248, 250, 251, 252, 253, 271, 276, 277, 304, 309, 310, 311, 312, 341, 346, 347, 348, 349, 417, 437, 455, 460, 465, 469, 494, 497, 504, 510, 520, 540, 545, 546, 555, 556, 569, 604, 630, 634, 635, 636, 638, 641, 643, 655, 661, 662, 663, 664, 667, 668, 669, 670, 671, 684, 690, 691, 692, 693, 696, 697, 698, 699, 700, 725, 727, 728, 729, 730, 732, 734, 735, 739, 741, 742, 743, 744, 746, 747, 749, 760, 761, 762, 776, 781, 788, 789, 791, 797, 799, 800, 801, 802, 804, 806, 807, 811, 813, 814, 815, 816, 818, 819, 821, 823, 826, 827, 849, 854, 855, 875, 876, 877, 881, 882, 883, 884, 893, 895, 896, 897, 898, 916, 921, 922, 949, 954, 955, 956, 957, 986, 991, 992, 993, 994, 1038, 1049, 1055, 1063, 1064, 1065, 1066, 1080, 1098, 1103, 1108, 1112, 1137, 1140, 1147, 1153, 1165, 1167, 1177, 1183, 1184, 1185, 1186, 1189, 1190, 1191, 1192, 1193, 1206, 1212, 1213, 1214, 1215, 1218, 1219, 1220, 1221, 1222, 1235, 1270, 1275, 1276, 1285, 1286, 1299, 1342, 1344, 1349, 1358], "dataset1": [19, 604], "dataset2": [19, 604], "vertic": [20, 60, 89, 128, 130, 204, 205, 206, 211, 215, 216, 217, 218, 226, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 319, 320, 321, 341, 342, 343, 351, 356, 357, 358, 380, 433, 439, 440, 441, 442, 445, 450, 458, 459, 460, 471, 472, 473, 476, 477, 480, 491, 492, 493, 494, 500, 502, 504, 513, 514, 557, 575, 605, 655, 684, 755, 757, 762, 768, 849, 850, 851, 856, 860, 861, 862, 863, 871, 874, 876, 878, 880, 882, 884, 892, 894, 896, 898, 916, 917, 918, 923, 927, 928, 929, 949, 950, 951, 959, 964, 965, 966, 986, 987, 988, 996, 1001, 1002, 1003, 1027, 1063, 1064, 1076, 1082, 1083, 1084, 1085, 1088, 1093, 1101, 1102, 1103, 1114, 1115, 1116, 1119, 1120, 1123, 1134, 1135, 1136, 1137, 1143, 1145, 1147, 1156, 1157, 1177, 1206, 1287, 1305, 1335, 1345, 1346, 1349, 1358, 1359], "profil": [20, 31, 56, 127, 128, 130, 364, 365, 433, 442, 450, 460, 473, 476, 493, 496, 508, 509, 510, 513, 514, 532, 569, 605, 622, 651, 754, 755, 760, 761, 762, 1011, 1012, 1076, 1085, 1093, 1103, 1116, 1119, 1136, 1139, 1151, 1152, 1153, 1156, 1157, 1262, 1299, 1310, 1312, 1341, 1347, 1349, 1357, 1358, 1361, 1363], "those": [20, 63, 70, 92, 99, 131, 132, 151, 376, 451, 560, 577, 605, 658, 665, 687, 694, 723, 763, 764, 795, 1023, 1065, 1066, 1094, 1180, 1187, 1209, 1216, 1290, 1306, 1365], "vol2bird": [20, 605], "pattern": [21, 513, 606, 760, 761, 1156, 1241, 1334], "25": [22, 478, 607, 782, 783, 1063, 1064, 1121, 1314, 1318, 1334, 1335, 1338, 1342, 1351, 1356, 1357, 1358, 1359], "889375": [22, 607], "418": [22, 607], "4794775": [22, 607], "243": [22, 607], "png": [22, 189, 225, 241, 256, 289, 326, 607, 834, 870, 886, 901, 934, 971], "web": [22, 362, 372, 380, 607, 1009, 1019, 1027, 1314, 1315], "mercat": [22, 246, 607, 891], "radx_dir": [23, 613], "first": [23, 27, 33, 60, 73, 89, 102, 130, 132, 133, 135, 137, 364, 365, 375, 378, 454, 479, 495, 507, 508, 509, 516, 535, 537, 540, 565, 566, 613, 618, 624, 655, 668, 684, 697, 762, 764, 766, 772, 778, 1011, 1012, 1022, 1025, 1055, 1066, 1097, 1122, 1138, 1150, 1151, 1152, 1159, 1177, 1190, 1206, 1219, 1265, 1267, 1270, 1295, 1296, 1307, 1310, 1314, 1315, 1328, 1337, 1342, 1344, 1353, 1355, 1356, 1357, 1358, 1360, 1363], "radxconvert": [23, 613], "radx": [23, 613], "instal": [23, 121, 123, 124, 134, 380, 577, 613, 716, 718, 719, 765, 770, 1027, 1357, 1364, 1365], "filenames_psr": [24, 25, 614, 615], "undo_txcorr": [24, 25, 614, 615], "cpi": [24, 25, 610, 614, 615], "mean": [24, 29, 118, 140, 430, 432, 442, 445, 449, 450, 460, 473, 481, 518, 521, 522, 528, 530, 531, 541, 542, 547, 555, 565, 566, 614, 620, 713, 785, 1073, 1075, 1085, 1088, 1092, 1093, 1103, 1116, 1124, 1162, 1241, 1251, 1252, 1258, 1260, 1261, 1271, 1272, 1277, 1285, 1295, 1296, 1314, 1315, 1356, 1357, 1358, 1360, 1363], "5": [24, 25, 26, 46, 130, 134, 136, 183, 204, 211, 214, 215, 216, 217, 218, 234, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 379, 437, 478, 479, 480, 483, 485, 491, 492, 495, 500, 504, 511, 513, 515, 540, 557, 614, 615, 616, 641, 751, 753, 760, 761, 762, 765, 770, 773, 774, 775, 776, 777, 782, 783, 784, 792, 827, 849, 856, 859, 860, 861, 862, 863, 879, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003, 1026, 1080, 1121, 1122, 1123, 1126, 1128, 1134, 1135, 1138, 1143, 1147, 1154, 1156, 1158, 1165, 1241, 1270, 1287, 1309, 1310, 1315, 1319, 1323, 1326, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1342, 1343, 1344, 1345, 1346, 1347, 1351, 1353, 1356, 1357, 1358, 1359, 1360, 1363], "correct": [24, 25, 69, 72, 98, 101, 151, 179, 180, 181, 182, 183, 184, 185, 186, 370, 435, 496, 497, 507, 614, 615, 664, 667, 693, 696, 795, 823, 824, 825, 826, 827, 828, 829, 830, 1017, 1078, 1139, 1140, 1150, 1186, 1189, 1215, 1218, 1243, 1307, 1310, 1311, 1315, 1325, 1345, 1349, 1353, 1358, 1361, 1363], "transmit": [24, 25, 454, 614, 615, 1097, 1353], "remov": [24, 25, 46, 60, 71, 72, 89, 100, 101, 130, 135, 179, 180, 181, 182, 183, 184, 185, 186, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 386, 411, 417, 418, 449, 479, 493, 495, 542, 614, 615, 641, 655, 666, 667, 684, 695, 696, 751, 752, 753, 762, 767, 768, 772, 776, 782, 783, 784, 823, 824, 825, 826, 827, 828, 829, 830, 849, 856, 860, 861, 862, 863, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1032, 1038, 1039, 1045, 1049, 1050, 1092, 1122, 1136, 1138, 1165, 1177, 1188, 1189, 1206, 1217, 1218, 1272, 1309, 1319, 1325, 1334, 1344, 1353, 1356, 1363], "signal": [24, 25, 26, 183, 184, 426, 430, 432, 435, 441, 443, 446, 448, 449, 451, 452, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 481, 497, 541, 542, 547, 614, 615, 616, 757, 769, 773, 774, 775, 776, 792, 827, 828, 1069, 1073, 1075, 1078, 1084, 1086, 1089, 1091, 1092, 1094, 1095, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1124, 1140, 1271, 1272, 1277], "low_prf": [24, 25, 614, 615], "intermediate_prf": [24, 25, 614, 615], "high_prf": [24, 25, 614, 615], "within": [24, 45, 62, 63, 91, 92, 129, 130, 131, 132, 133, 137, 141, 142, 151, 179, 218, 284, 321, 358, 427, 442, 450, 460, 473, 476, 480, 504, 505, 506, 511, 533, 534, 543, 544, 546, 555, 556, 614, 639, 657, 658, 686, 687, 723, 758, 762, 763, 764, 765, 766, 767, 768, 769, 778, 782, 783, 784, 786, 787, 795, 823, 863, 929, 966, 1003, 1062, 1065, 1066, 1070, 1085, 1093, 1103, 1116, 1119, 1123, 1147, 1148, 1149, 1154, 1179, 1180, 1208, 1209, 1250, 1263, 1264, 1273, 1274, 1276, 1285, 1286, 1306, 1314, 1315, 1325, 1326, 1349, 1353, 1355, 1359, 1363, 1365], "step": [24, 218, 284, 321, 358, 380, 442, 450, 452, 460, 473, 474, 476, 511, 513, 542, 549, 561, 614, 760, 761, 774, 863, 929, 966, 1003, 1027, 1085, 1093, 1095, 1103, 1116, 1117, 1119, 1154, 1156, 1272, 1279, 1291, 1314, 1334, 1335, 1344, 1365], "taken": [24, 118, 126, 136, 137, 204, 271, 304, 341, 533, 534, 541, 555, 556, 614, 713, 721, 777, 778, 849, 916, 949, 986, 1243, 1263, 1264, 1271, 1285, 1286, 1327], "fold": [25, 130, 131, 481, 615, 762, 763, 1124, 1314, 1358], "positive_awai": [25, 615], "complex": [25, 34, 446, 448, 458, 464, 465, 466, 467, 468, 469, 470, 612, 615, 626, 1089, 1091, 1101, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1161], "spectra": [25, 28, 29, 33, 89, 429, 431, 432, 438, 440, 443, 446, 448, 451, 456, 458, 463, 464, 465, 466, 467, 468, 469, 470, 481, 541, 553, 563, 572, 612, 615, 619, 620, 624, 684, 1072, 1074, 1075, 1081, 1083, 1086, 1089, 1091, 1094, 1099, 1101, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1124, 1206, 1240, 1247, 1271, 1283, 1293, 1302], "so": [25, 131, 204, 215, 271, 282, 304, 319, 341, 356, 376, 425, 553, 615, 763, 771, 849, 860, 916, 927, 949, 964, 986, 1001, 1023, 1066, 1068, 1283, 1307, 1314, 1315, 1344, 1357, 1358, 1359, 1363, 1365], "doppler": [25, 89, 118, 130, 131, 132, 179, 429, 430, 431, 432, 435, 446, 449, 451, 466, 481, 493, 518, 541, 542, 615, 684, 713, 762, 763, 764, 823, 1072, 1073, 1074, 1075, 1078, 1089, 1092, 1094, 1109, 1124, 1136, 1162, 1206, 1271, 1272, 1307, 1308, 1311, 1312, 1327, 1337, 1349, 1350, 1360, 1361, 1363], "revers": [25, 204, 215, 271, 282, 304, 319, 341, 356, 376, 507, 615, 849, 860, 916, 927, 949, 964, 986, 1001, 1023, 1150], "veloc": [25, 26, 40, 73, 89, 102, 130, 131, 132, 179, 427, 429, 430, 481, 491, 492, 493, 494, 502, 518, 519, 525, 569, 615, 616, 634, 668, 684, 697, 762, 763, 764, 823, 1070, 1072, 1073, 1124, 1134, 1135, 1136, 1137, 1145, 1162, 1163, 1190, 1206, 1219, 1255, 1299, 1307, 1308, 1311, 1312, 1314, 1323, 1327, 1335, 1337, 1349, 1350, 1356, 1357, 1360, 1361, 1363], "awai": [25, 615, 1358], "routin": [26, 30, 31, 33, 378, 577, 616, 621, 622, 624, 794, 1025, 1065, 1307, 1349, 1357, 1359], "rainbow5": [26, 616], "version": [26, 46, 150, 504, 505, 506, 518, 576, 616, 641, 761, 1057, 1147, 1148, 1149, 1162, 1165, 1250, 1307, 1349, 1357, 1360, 1362, 1363, 1365], "22": [26, 138, 143, 146, 616, 768, 779, 788, 791, 1314, 1316, 1323, 1342, 1361], "3": [26, 60, 89, 118, 119, 127, 128, 130, 131, 135, 139, 146, 179, 181, 182, 185, 216, 370, 374, 380, 434, 475, 478, 479, 493, 495, 511, 513, 542, 549, 561, 616, 655, 684, 713, 714, 754, 755, 762, 763, 772, 781, 791, 823, 825, 826, 829, 861, 1017, 1021, 1027, 1062, 1063, 1064, 1066, 1077, 1118, 1121, 1122, 1136, 1138, 1154, 1156, 1177, 1206, 1237, 1241, 1272, 1279, 1291, 1306, 1309, 1310, 1312, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365], "34": [26, 495, 516, 616, 1138, 1159, 1344, 1347, 1359, 1361], "16": [26, 141, 478, 484, 505, 518, 616, 782, 786, 1121, 1127, 1148, 1162, 1309, 1310, 1318, 1330, 1336, 1343, 1353, 1357, 1359, 1360, 1363], "35": [26, 132, 136, 137, 437, 616, 764, 777, 778, 1080, 1323, 1332, 1334, 1335, 1356], "sinc": [26, 428, 494, 507, 520, 616, 1071, 1137, 1150, 1344, 1352, 1355, 1358, 1359, 1360], "evolv": [26, 616], "constantli": [26, 616], "guaranti": [26, 616], "work": [26, 122, 125, 233, 234, 287, 315, 324, 352, 372, 374, 481, 516, 616, 717, 720, 878, 879, 932, 960, 969, 997, 1019, 1021, 1124, 1159, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1365], "necessari": [26, 616], "adapt": [26, 118, 138, 139, 143, 146, 616, 713, 779, 781, 788, 791, 1307, 1365], "code": [26, 45, 130, 502, 518, 616, 639, 762, 1145, 1162, 1307, 1309, 1310, 1312, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1359, 1362, 1365], "accord": [26, 376, 425, 437, 444, 451, 452, 484, 485, 486, 488, 489, 549, 561, 616, 757, 759, 1023, 1066, 1068, 1080, 1087, 1094, 1095, 1127, 1128, 1129, 1131, 1132, 1279, 1291], "its": [26, 231, 507, 564, 616, 780, 792, 876, 1150, 1294, 1349, 1358, 1362, 1363, 1365], "own": [26, 577, 616, 1323, 1349, 1359, 1362], "rais": [26, 46, 47, 53, 61, 62, 64, 73, 90, 91, 93, 102, 149, 363, 375, 389, 417, 418, 616, 641, 642, 648, 656, 657, 659, 668, 685, 686, 688, 697, 1010, 1022, 1038, 1039, 1049, 1050, 1165, 1166, 1172, 1178, 1179, 1181, 1190, 1207, 1208, 1210, 1219], "an": [26, 30, 31, 40, 44, 45, 46, 54, 60, 62, 63, 66, 67, 73, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 96, 102, 111, 112, 113, 114, 115, 116, 117, 128, 130, 131, 132, 136, 137, 147, 150, 159, 179, 181, 182, 183, 184, 185, 186, 187, 209, 276, 309, 346, 352, 376, 379, 380, 422, 443, 450, 451, 452, 473, 483, 496, 525, 534, 538, 539, 555, 556, 560, 561, 573, 575, 578, 591, 592, 608, 609, 616, 621, 622, 634, 638, 639, 641, 649, 655, 657, 658, 661, 662, 668, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 690, 691, 697, 706, 707, 708, 709, 710, 711, 712, 731, 755, 762, 763, 764, 765, 776, 777, 778, 803, 823, 825, 826, 827, 828, 829, 830, 832, 854, 921, 954, 991, 997, 1023, 1026, 1027, 1043, 1053, 1055, 1062, 1063, 1065, 1066, 1086, 1093, 1094, 1095, 1116, 1126, 1139, 1165, 1173, 1177, 1179, 1180, 1183, 1184, 1190, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1212, 1213, 1219, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1255, 1264, 1268, 1269, 1285, 1286, 1290, 1291, 1303, 1305, 1307, 1312, 1315, 1318, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1342, 1344, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1364], "issu": [26, 45, 150, 287, 324, 376, 379, 616, 639, 932, 969, 1023, 1026, 1307, 1312, 1313, 1316, 1349, 1361, 1362, 1363, 1365], "upstream": [26, 616, 1363], "reflect": [26, 62, 91, 127, 128, 129, 133, 136, 137, 141, 142, 151, 179, 182, 183, 206, 273, 306, 343, 426, 428, 429, 431, 433, 434, 438, 440, 441, 447, 453, 454, 455, 456, 457, 458, 461, 462, 464, 465, 469, 475, 478, 479, 480, 482, 485, 487, 488, 489, 490, 495, 497, 504, 505, 507, 511, 513, 515, 516, 552, 616, 657, 686, 723, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 765, 766, 767, 768, 769, 773, 774, 776, 777, 778, 782, 783, 784, 786, 787, 795, 823, 826, 827, 851, 918, 951, 988, 1006, 1055, 1066, 1069, 1071, 1072, 1074, 1076, 1077, 1081, 1083, 1084, 1090, 1096, 1097, 1098, 1099, 1100, 1101, 1104, 1105, 1107, 1108, 1112, 1118, 1121, 1122, 1123, 1125, 1128, 1130, 1131, 1132, 1133, 1138, 1140, 1147, 1148, 1150, 1154, 1156, 1158, 1159, 1179, 1208, 1246, 1248, 1249, 1282, 1308, 1310, 1311, 1312, 1314, 1315, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1327, 1330, 1333, 1336, 1337, 1339, 1340, 1341, 1342, 1344, 1347, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361], "dbuz": [26, 616], "dbzv": [26, 616], "dbuzv": [26, 616], "vu": [26, 616], "vv": [26, 616], "vvu": [26, 616], "spectrum": [26, 29, 431, 432, 481, 541, 542, 616, 620, 1074, 1075, 1124, 1271, 1272, 1307, 1360], "width": [26, 127, 138, 139, 146, 232, 234, 248, 315, 352, 431, 432, 433, 453, 616, 754, 779, 780, 781, 791, 792, 877, 879, 893, 960, 997, 1066, 1074, 1075, 1076, 1096, 1360], "w": [26, 77, 106, 132, 138, 143, 146, 437, 478, 482, 497, 504, 511, 513, 616, 672, 701, 764, 779, 788, 791, 1080, 1121, 1125, 1140, 1147, 1154, 1156, 1194, 1223, 1345, 1357, 1358, 1359], "wu": [26, 616, 1062, 1355], "wv": [26, 616], "wvu": [26, 616], "differenti": [26, 34, 129, 133, 136, 137, 141, 142, 179, 182, 438, 439, 440, 441, 445, 449, 464, 465, 480, 482, 486, 489, 504, 505, 506, 507, 508, 509, 511, 514, 616, 626, 751, 752, 753, 758, 766, 768, 769, 773, 774, 777, 778, 782, 783, 784, 786, 787, 823, 826, 1081, 1082, 1083, 1084, 1088, 1092, 1107, 1108, 1123, 1125, 1129, 1132, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1157, 1161, 1327, 1349, 1359], "zdr": [26, 182, 423, 436, 437, 455, 504, 616, 752, 753, 757, 768, 769, 773, 774, 782, 783, 784, 792, 826, 1079, 1080, 1098, 1147, 1357, 1359], "zdru": [26, 616], "co": [26, 118, 122, 125, 179, 479, 494, 495, 527, 616, 713, 717, 720, 767, 768, 769, 782, 783, 784, 823, 1122, 1137, 1138, 1257, 1344], "correl": [26, 179, 182, 183, 480, 482, 502, 504, 511, 513, 529, 531, 552, 616, 767, 768, 769, 776, 782, 783, 784, 823, 826, 827, 1123, 1125, 1145, 1147, 1154, 1156, 1259, 1261, 1282, 1326, 1327, 1343, 1344], "coeffici": [26, 136, 138, 146, 179, 437, 478, 480, 482, 483, 504, 511, 529, 531, 532, 552, 616, 751, 752, 753, 773, 774, 775, 777, 779, 791, 823, 1080, 1121, 1123, 1125, 1126, 1147, 1154, 1259, 1261, 1262, 1282, 1326, 1327, 1343], "rhohv": [26, 182, 183, 423, 433, 436, 437, 444, 448, 458, 459, 470, 504, 511, 513, 616, 757, 767, 768, 769, 776, 782, 783, 784, 826, 827, 1076, 1079, 1080, 1087, 1091, 1101, 1102, 1113, 1147, 1154, 1156, 1326, 1359, 1360], "rhohvu": [26, 616], "phase": [26, 34, 129, 132, 133, 136, 137, 141, 142, 182, 438, 439, 445, 449, 464, 467, 473, 480, 482, 486, 489, 502, 504, 505, 506, 507, 508, 509, 514, 616, 626, 751, 752, 753, 758, 764, 766, 768, 769, 777, 778, 782, 783, 784, 786, 787, 826, 1081, 1082, 1088, 1092, 1107, 1110, 1116, 1123, 1125, 1129, 1132, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1157, 1161, 1327, 1349, 1353, 1359], "phidp": [26, 129, 133, 136, 137, 141, 142, 182, 505, 506, 507, 616, 752, 753, 758, 766, 768, 769, 777, 778, 782, 783, 784, 786, 787, 826, 1148, 1149, 1150, 1349, 1359], "uphidp": [26, 616], "uphidpu": [26, 616], "kdp": [26, 136, 137, 423, 437, 486, 489, 504, 505, 506, 507, 508, 509, 616, 769, 777, 778, 782, 783, 784, 1080, 1129, 1132, 1147, 1148, 1149, 1150, 1151, 1152, 1345, 1349], "ukdp": [26, 616], "ukdpu": [26, 616], "qualiti": [26, 138, 139, 143, 146, 183, 508, 509, 616, 757, 776, 779, 781, 788, 791, 827, 1151, 1152, 1314], "sqi": [26, 616], "sqiu": [26, 616], "sqiv": [26, 616], "sqivu": [26, 616], "temperatur": [26, 135, 185, 480, 500, 504, 511, 513, 616, 752, 753, 760, 761, 767, 768, 769, 772, 782, 783, 784, 829, 1123, 1143, 1147, 1154, 1156, 1345, 1359], "temp": [26, 616, 1307, 1359], "bin": [26, 60, 89, 118, 119, 120, 133, 141, 142, 375, 442, 450, 460, 473, 476, 481, 501, 505, 506, 515, 540, 541, 547, 558, 616, 655, 684, 713, 714, 715, 753, 766, 767, 768, 769, 773, 786, 787, 1022, 1085, 1093, 1103, 1116, 1119, 1124, 1144, 1148, 1149, 1158, 1177, 1206, 1270, 1271, 1277, 1288, 1318, 1353, 1360], "respect": [26, 60, 89, 144, 145, 425, 479, 480, 482, 495, 504, 511, 512, 513, 515, 516, 616, 655, 684, 780, 789, 790, 792, 1068, 1122, 1123, 1125, 1138, 1147, 1154, 1155, 1156, 1158, 1159, 1177, 1206], "iso0": [26, 135, 181, 437, 480, 482, 500, 504, 511, 512, 513, 517, 616, 752, 760, 761, 767, 768, 772, 782, 783, 784, 825, 1080, 1123, 1125, 1143, 1147, 1154, 1155, 1156, 1160], "visibl": [26, 186, 497, 554, 616, 759, 830, 1140, 1284, 1349], "digit": [26, 218, 284, 321, 358, 497, 591, 592, 608, 609, 616, 863, 929, 966, 1003, 1140, 1307, 1357], "elev": [26, 31, 60, 67, 72, 83, 89, 96, 101, 112, 118, 119, 120, 138, 139, 143, 144, 145, 146, 179, 187, 204, 206, 211, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 254, 271, 273, 278, 282, 283, 284, 287, 304, 306, 314, 315, 319, 320, 321, 324, 341, 343, 351, 352, 356, 357, 358, 376, 425, 450, 473, 474, 494, 497, 501, 509, 511, 534, 540, 550, 554, 557, 562, 616, 622, 655, 662, 667, 678, 684, 691, 696, 707, 713, 714, 715, 760, 761, 768, 769, 771, 773, 774, 775, 779, 780, 781, 782, 783, 784, 788, 789, 790, 791, 792, 823, 832, 849, 851, 856, 860, 861, 862, 863, 876, 882, 884, 894, 896, 898, 899, 916, 918, 923, 927, 928, 929, 932, 949, 951, 959, 960, 964, 965, 966, 969, 986, 988, 996, 997, 1001, 1002, 1003, 1023, 1063, 1068, 1093, 1116, 1117, 1137, 1140, 1144, 1152, 1154, 1177, 1184, 1189, 1200, 1206, 1213, 1218, 1229, 1264, 1270, 1280, 1284, 1287, 1292, 1307, 1318, 1343, 1351, 1357, 1358, 1359, 1360], "model": [26, 30, 31, 60, 89, 118, 119, 131, 218, 284, 321, 358, 373, 379, 478, 497, 511, 513, 532, 616, 621, 622, 655, 684, 713, 714, 760, 761, 763, 863, 929, 966, 1003, 1020, 1026, 1121, 1140, 1154, 1156, 1177, 1206, 1262, 1345, 1359], "dem": [26, 218, 284, 321, 358, 497, 616, 863, 929, 966, 1003, 1140, 1349], "vi": [26, 437, 504, 616, 1080, 1147, 1345, 1357, 1359], "introduc": [26, 377, 509, 511, 616, 1024, 1152, 1154], "swissbirdradar": [29, 620, 1307], "degre": [29, 48, 56, 70, 71, 99, 100, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136, 137, 144, 145, 185, 187, 204, 209, 210, 218, 230, 232, 236, 238, 246, 248, 250, 252, 254, 271, 276, 277, 284, 287, 304, 309, 310, 313, 315, 321, 324, 341, 346, 347, 350, 352, 358, 442, 453, 473, 511, 518, 522, 524, 533, 534, 544, 545, 546, 557, 566, 570, 620, 643, 651, 665, 666, 694, 695, 713, 714, 715, 716, 717, 718, 719, 720, 721, 771, 772, 777, 778, 789, 790, 829, 832, 849, 854, 855, 863, 875, 877, 881, 883, 891, 893, 895, 897, 899, 916, 921, 922, 929, 932, 949, 954, 955, 958, 960, 966, 969, 986, 991, 992, 995, 997, 1003, 1085, 1096, 1116, 1154, 1162, 1167, 1187, 1188, 1216, 1217, 1252, 1254, 1263, 1264, 1274, 1275, 1276, 1287, 1296, 1300, 1339, 1342, 1360, 1363], "abov": [29, 56, 57, 60, 62, 89, 91, 127, 128, 130, 134, 135, 136, 137, 141, 153, 167, 179, 181, 182, 183, 185, 209, 210, 276, 277, 309, 310, 346, 347, 425, 426, 437, 478, 479, 483, 495, 505, 511, 513, 518, 540, 541, 542, 545, 546, 620, 651, 652, 655, 657, 684, 686, 725, 739, 751, 752, 753, 754, 755, 760, 761, 762, 765, 767, 768, 770, 772, 776, 777, 778, 782, 783, 784, 786, 797, 811, 823, 825, 826, 827, 829, 854, 855, 921, 922, 954, 955, 991, 992, 1006, 1066, 1068, 1069, 1080, 1121, 1122, 1126, 1138, 1148, 1154, 1156, 1162, 1177, 1179, 1206, 1208, 1270, 1271, 1272, 1275, 1276, 1312, 1318, 1333, 1335, 1341, 1346, 1347, 1349, 1351, 1353, 1358, 1361, 1363, 1365], "sea": [29, 56, 57, 60, 89, 518, 620, 651, 652, 655, 684, 1162, 1177, 1206, 1363], "level": [29, 30, 31, 48, 54, 56, 57, 60, 77, 89, 106, 225, 226, 227, 228, 233, 234, 235, 237, 239, 241, 242, 243, 244, 249, 251, 253, 372, 373, 374, 380, 381, 446, 451, 466, 482, 502, 511, 512, 513, 516, 518, 541, 542, 620, 621, 622, 643, 649, 651, 652, 655, 672, 684, 701, 752, 753, 870, 871, 872, 873, 878, 879, 880, 882, 884, 886, 887, 888, 889, 894, 896, 898, 1019, 1020, 1021, 1027, 1028, 1089, 1094, 1109, 1125, 1145, 1154, 1155, 1156, 1159, 1162, 1167, 1173, 1177, 1194, 1206, 1223, 1271, 1272, 1334, 1335, 1338, 1343, 1349, 1355, 1357, 1359, 1360, 1363], "meter": [29, 56, 57, 58, 59, 71, 72, 73, 100, 101, 102, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 187, 218, 254, 284, 287, 312, 315, 321, 324, 349, 352, 358, 426, 479, 495, 502, 507, 510, 516, 518, 544, 570, 620, 651, 652, 653, 654, 666, 667, 668, 695, 696, 697, 713, 714, 715, 716, 717, 718, 719, 720, 721, 772, 832, 863, 899, 929, 932, 957, 960, 966, 969, 994, 997, 1003, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1069, 1122, 1138, 1145, 1150, 1153, 1159, 1162, 1188, 1189, 1190, 1217, 1218, 1219, 1237, 1274, 1300, 1318, 1346, 1355, 1358, 1360, 1363], "compress": [30, 31, 362, 370, 371, 621, 622, 1009, 1017, 1018], "gzip": [30, 31, 362, 370, 371, 621, 622, 1009, 1017, 1018], "compression_opt": [30, 31, 621, 622], "6": [30, 31, 140, 141, 142, 182, 478, 480, 485, 493, 497, 500, 504, 505, 506, 513, 542, 549, 561, 621, 622, 757, 760, 761, 785, 786, 787, 826, 1121, 1123, 1128, 1136, 1140, 1143, 1147, 1148, 1149, 1156, 1272, 1279, 1291, 1315, 1318, 1323, 1324, 1327, 1328, 1331, 1343, 1345, 1346, 1349, 1351, 1353, 1356, 1357, 1358, 1359, 1360, 1362, 1365], "undefined_valu": [30, 31, 621, 622], "odim_convent": [30, 31, 621, 622], "v2_2": [30, 31, 621, 622], "write": [30, 31, 32, 33, 378, 379, 380, 381, 382, 621, 622, 623, 624, 1025, 1026, 1027, 1028, 1029, 1164, 1175, 1307, 1312, 1313, 1352], "eumetnet": [30, 31, 621, 622], "opera": [30, 31, 621, 622, 1307, 1349], "compliant": [30, 31, 378, 621, 622, 1025], "produc": [30, 31, 33, 369, 378, 380, 383, 451, 452, 514, 519, 621, 622, 624, 765, 1016, 1025, 1027, 1031, 1094, 1095, 1157, 1163, 1349, 1363], "follow": [30, 31, 33, 132, 179, 182, 183, 378, 379, 381, 382, 421, 478, 481, 497, 504, 507, 511, 513, 621, 622, 624, 764, 776, 823, 826, 827, 1025, 1026, 1028, 1029, 1042, 1052, 1065, 1066, 1121, 1124, 1140, 1147, 1150, 1154, 1156, 1314, 1342, 1349, 1357, 1358, 1359, 1362, 1363], "inform": [30, 31, 40, 46, 60, 77, 89, 106, 130, 136, 137, 164, 176, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 366, 368, 376, 379, 507, 516, 576, 580, 591, 592, 608, 609, 621, 622, 634, 641, 655, 672, 684, 701, 736, 748, 751, 762, 773, 774, 775, 777, 778, 808, 820, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1013, 1015, 1023, 1026, 1150, 1159, 1165, 1177, 1194, 1206, 1223, 1315, 1335, 1349, 1363], "http": [30, 31, 126, 372, 373, 374, 428, 479, 495, 502, 552, 621, 622, 721, 1019, 1020, 1021, 1071, 1122, 1138, 1145, 1282, 1307, 1326, 1335, 1344, 1349, 1357, 1362, 1363, 1365], "www": [30, 31, 126, 372, 373, 374, 502, 621, 622, 721, 1019, 1020, 1021, 1145, 1363], "eu": [30, 31, 621, 622], "wp": [30, 31, 621, 622], "content": [30, 31, 621, 622, 1357], "upload": [30, 31, 621, 622], "2021": [30, 31, 621, 622, 1344, 1349, 1358], "07": [30, 31, 621, 622, 1315, 1326, 1340, 1344, 1360, 1361], "odim_h5_v2": [30, 31, 621, 622], "pdf": [30, 31, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 621, 622, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003], "save": [30, 31, 55, 189, 204, 206, 211, 215, 216, 217, 218, 225, 241, 256, 271, 273, 278, 282, 283, 284, 289, 304, 306, 314, 315, 319, 320, 321, 326, 341, 343, 351, 352, 356, 357, 358, 379, 381, 621, 622, 650, 834, 849, 851, 856, 860, 861, 862, 863, 870, 886, 901, 916, 918, 923, 927, 928, 929, 934, 949, 951, 959, 960, 964, 965, 966, 971, 986, 988, 996, 997, 1001, 1002, 1003, 1026, 1028, 1174, 1349, 1350], "equal": [30, 31, 63, 92, 121, 123, 124, 131, 156, 157, 162, 170, 171, 174, 352, 370, 381, 478, 516, 518, 540, 562, 621, 622, 658, 687, 716, 718, 719, 728, 729, 734, 742, 743, 746, 763, 800, 801, 806, 814, 815, 818, 997, 1017, 1028, 1121, 1159, 1162, 1180, 1209, 1270, 1292, 1326, 1344, 1345, 1356, 1358, 1359], "_fillvalu": [30, 31, 33, 378, 379, 621, 622, 624, 1025, 1026, 1352, 1360], "fill": [30, 31, 43, 516, 621, 622, 637, 751, 752, 753, 1159, 1351, 1352], "linear": [30, 31, 136, 137, 372, 479, 495, 509, 528, 541, 542, 553, 569, 621, 622, 752, 760, 761, 777, 778, 1019, 1122, 1138, 1152, 1258, 1271, 1272, 1283, 1299, 1344, 1349], "keyword": [30, 31, 33, 203, 270, 303, 315, 340, 352, 372, 374, 449, 497, 621, 622, 624, 848, 915, 948, 960, 985, 997, 1019, 1021, 1092, 1140, 1352, 1355], "scale_factor": [30, 31, 33, 381, 621, 622, 624, 1028], "add_offset": [30, 31, 33, 381, 621, 622, 624, 1028], "calcul": [30, 31, 33, 34, 46, 48, 60, 71, 72, 89, 100, 101, 118, 119, 123, 135, 136, 137, 144, 151, 179, 181, 182, 183, 184, 185, 186, 187, 218, 254, 284, 287, 321, 324, 358, 426, 427, 434, 453, 454, 461, 475, 478, 479, 495, 497, 502, 514, 518, 519, 525, 527, 540, 541, 544, 545, 546, 551, 570, 621, 622, 624, 626, 641, 643, 655, 666, 667, 684, 695, 696, 713, 714, 718, 723, 751, 752, 753, 767, 768, 772, 776, 777, 778, 782, 783, 784, 789, 795, 823, 825, 826, 827, 828, 829, 830, 832, 863, 899, 929, 932, 966, 969, 1003, 1065, 1066, 1069, 1070, 1077, 1096, 1097, 1104, 1118, 1121, 1122, 1138, 1140, 1145, 1157, 1161, 1162, 1163, 1165, 1167, 1177, 1188, 1189, 1206, 1217, 1218, 1255, 1257, 1270, 1271, 1274, 1275, 1276, 1281, 1300, 1309, 1312, 1318, 1334, 1335, 1341, 1344, 1347, 1349, 1353, 1356, 1361, 1363], "fly": [30, 31, 33, 621, 622, 624], "_write_as_dtyp": [30, 31, 33, 381, 621, 622, 624, 1028], "datatyp": [30, 31, 621, 622, 1307], "It": [30, 31, 135, 138, 396, 410, 494, 509, 511, 518, 525, 541, 621, 622, 772, 779, 1066, 1137, 1152, 1154, 1162, 1255, 1271, 1318, 1357, 1359, 1363, 1365], "uint8": [30, 31, 381, 621, 622, 1028], "uint16": [30, 31, 381, 621, 622, 1028], "typic": [30, 31, 122, 125, 131, 151, 155, 157, 164, 171, 176, 380, 621, 622, 717, 720, 723, 727, 729, 736, 743, 748, 763, 795, 799, 801, 808, 815, 820, 1027, 1062, 1065, 1365], "lzf": [30, 31, 621, 622], "recomend": [30, 31, 621, 622], "replac": [30, 31, 47, 61, 62, 63, 90, 91, 92, 131, 132, 155, 157, 164, 171, 176, 621, 622, 642, 656, 657, 658, 685, 686, 687, 727, 729, 736, 743, 748, 763, 764, 799, 801, 808, 815, 820, 1166, 1178, 1179, 1180, 1207, 1208, 1209, 1307], "exampl": [30, 31, 45, 62, 91, 151, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 383, 540, 621, 622, 639, 657, 686, 723, 795, 849, 856, 859, 860, 861, 862, 863, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003, 1031, 1055, 1059, 1060, 1061, 1065, 1066, 1175, 1179, 1208, 1270, 1309, 1310, 1311, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1351, 1353, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365], "NOT": [30, 31, 151, 621, 622, 723, 795], "written": [30, 31, 379, 381, 382, 621, 622, 1026, 1028, 1029, 1307, 1349], "odim": [30, 31, 621, 622, 1307], "convent": [30, 31, 60, 89, 130, 430, 449, 493, 518, 519, 621, 622, 655, 684, 762, 1073, 1092, 1136, 1162, 1163, 1177, 1206, 1307, 1314, 1349, 1358, 1360], "v2_3": [30, 31, 621, 622], "support": [31, 233, 234, 315, 352, 363, 371, 372, 373, 374, 375, 383, 507, 577, 622, 878, 879, 960, 997, 1010, 1018, 1019, 1020, 1021, 1022, 1030, 1031, 1055, 1150, 1307, 1334, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1362], "featur": [31, 437, 495, 622, 1080, 1138, 1326, 1344, 1349, 1359], "ppi": [31, 60, 89, 131, 132, 134, 203, 207, 211, 270, 274, 278, 303, 307, 314, 315, 340, 344, 351, 352, 450, 473, 497, 509, 533, 534, 540, 622, 655, 684, 763, 764, 765, 770, 848, 852, 856, 915, 919, 923, 948, 952, 959, 960, 985, 989, 996, 997, 1063, 1064, 1093, 1116, 1140, 1152, 1177, 1206, 1238, 1239, 1243, 1246, 1248, 1263, 1264, 1270, 1312, 1322, 1325, 1326, 1338, 1340, 1349, 1358, 1359, 1360, 1361], "pvol": [31, 622], "differ": [31, 121, 123, 124, 130, 478, 479, 481, 485, 493, 495, 507, 513, 560, 562, 622, 716, 718, 719, 760, 761, 762, 771, 773, 774, 775, 782, 783, 784, 1006, 1055, 1063, 1064, 1121, 1122, 1124, 1128, 1136, 1138, 1150, 1156, 1290, 1292, 1307, 1314, 1318, 1344, 1355, 1357, 1358, 1359, 1362, 1363], "group": [31, 622, 1363], "sector": [31, 60, 89, 622, 655, 684, 1177, 1206, 1360], "azim": [31, 622], "rhi": [31, 60, 89, 203, 204, 215, 270, 271, 282, 303, 304, 319, 340, 341, 356, 450, 473, 482, 509, 511, 533, 534, 540, 550, 562, 622, 655, 684, 848, 849, 860, 915, 916, 927, 948, 949, 964, 985, 986, 1001, 1064, 1093, 1116, 1125, 1152, 1154, 1177, 1206, 1239, 1249, 1263, 1264, 1270, 1280, 1292, 1312, 1322, 1340, 1349, 1358, 1360, 1361], "Not": [31, 363, 371, 622, 1010, 1018], "yet": [31, 376, 622, 1023, 1314, 1349], "fix": [31, 474, 577, 622, 1117, 1307, 1312, 1313, 1316, 1337, 1351, 1359, 1361, 1362, 1363, 1365], "stare": [31, 622], "mode": [31, 60, 77, 89, 106, 362, 474, 511, 622, 655, 672, 684, 701, 1009, 1117, 1154, 1177, 1194, 1206, 1223, 1360, 1362, 1363], "take": [32, 62, 91, 131, 138, 215, 282, 319, 356, 426, 507, 623, 657, 686, 763, 779, 860, 927, 964, 1001, 1065, 1066, 1069, 1150, 1179, 1208, 1314, 1315, 1318, 1325, 1344, 1359, 1363], "sinarame_h5": [32, 617, 623], "everi": [32, 481, 508, 509, 518, 623, 1124, 1151, 1152, 1162, 1349, 1358], "one": [32, 33, 41, 46, 54, 55, 60, 62, 89, 91, 134, 142, 155, 157, 164, 171, 176, 179, 183, 378, 379, 381, 425, 428, 471, 481, 482, 491, 492, 507, 508, 509, 511, 512, 513, 530, 533, 534, 540, 552, 562, 563, 569, 623, 624, 635, 641, 649, 650, 655, 657, 684, 686, 727, 729, 736, 743, 748, 760, 761, 770, 776, 787, 799, 801, 808, 815, 820, 823, 827, 1025, 1026, 1028, 1055, 1062, 1065, 1066, 1068, 1071, 1114, 1124, 1125, 1134, 1135, 1150, 1151, 1152, 1154, 1155, 1156, 1165, 1173, 1174, 1177, 1179, 1206, 1208, 1260, 1263, 1264, 1270, 1282, 1292, 1293, 1299, 1307, 1312, 1317, 1318, 1323, 1349, 1352, 1357, 1358, 1359, 1360, 1363, 1365], "volum": [32, 60, 89, 130, 132, 315, 352, 372, 373, 374, 382, 424, 442, 450, 460, 473, 474, 476, 480, 482, 493, 496, 501, 511, 513, 518, 519, 533, 534, 536, 554, 571, 572, 575, 623, 655, 684, 762, 764, 765, 960, 997, 1019, 1020, 1021, 1029, 1055, 1063, 1064, 1085, 1093, 1103, 1116, 1117, 1119, 1123, 1125, 1136, 1139, 1144, 1154, 1156, 1162, 1163, 1177, 1206, 1263, 1264, 1266, 1284, 1301, 1302, 1305, 1312, 1322, 1340, 1361], "folder": [32, 623, 1363], "netcdf4": [33, 55, 373, 378, 379, 624, 650, 1020, 1025, 1026, 1174, 1332, 1349, 1351, 1362, 1365], "time_refer": [33, 378, 624, 1025, 1351], "arm_time_vari": [33, 55, 378, 379, 624, 650, 1025, 1026, 1174], "standard": [33, 55, 60, 77, 89, 106, 118, 119, 130, 366, 378, 379, 380, 428, 451, 480, 493, 508, 523, 524, 551, 556, 577, 624, 650, 655, 672, 684, 701, 713, 714, 762, 773, 774, 780, 792, 1013, 1025, 1026, 1027, 1071, 1094, 1123, 1136, 1151, 1174, 1177, 1194, 1206, 1223, 1241, 1253, 1254, 1281, 1286, 1351, 1352, 1353, 1357, 1359, 1363], "attempt": [33, 131, 132, 378, 379, 624, 763, 764, 1025, 1026], "also": [33, 45, 60, 89, 155, 205, 229, 247, 272, 305, 315, 342, 373, 374, 378, 380, 382, 420, 479, 495, 624, 639, 655, 684, 727, 799, 850, 874, 892, 917, 950, 960, 987, 1020, 1021, 1025, 1027, 1029, 1041, 1051, 1055, 1063, 1122, 1138, 1177, 1206, 1314, 1318, 1344, 1349, 1351, 1355, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365], "made": [33, 62, 91, 378, 427, 575, 624, 657, 686, 1025, 1070, 1179, 1208, 1305, 1363], "meet": [33, 155, 157, 164, 171, 176, 378, 624, 727, 729, 736, 743, 748, 799, 801, 808, 815, 820, 1025], "mani": [33, 378, 437, 624, 1025, 1080, 1349, 1355, 1358, 1363, 1365], "outlin": [33, 378, 507, 541, 542, 624, 1025, 1150, 1271, 1272, 1363], "To": [33, 46, 62, 91, 179, 181, 182, 183, 184, 185, 186, 378, 379, 381, 575, 624, 641, 657, 686, 776, 823, 825, 826, 827, 828, 829, 830, 1025, 1026, 1028, 1165, 1179, 1208, 1305, 1349, 1352, 1355, 1358, 1362, 1363, 1365], "control": [33, 45, 130, 138, 139, 143, 146, 376, 378, 379, 504, 507, 511, 624, 639, 762, 779, 781, 788, 791, 1023, 1025, 1026, 1066, 1147, 1150, 1154, 1355], "how": [33, 62, 91, 376, 378, 379, 437, 482, 624, 657, 686, 1023, 1025, 1026, 1080, 1125, 1179, 1208, 1314, 1315, 1323, 1324, 1325, 1349, 1352, 1355, 1356, 1357, 1365], "_zlib": [33, 378, 379, 624, 1025, 1026], "_deflatelevel": [33, 378, 379, 624, 1025, 1026], "_shuffl": [33, 378, 379, 624, 1025, 1026], "_fletcher32": [33, 378, 379, 624, 1025, 1026], "_contingu": [33, 378, 379, 624, 1025, 1026], "_chunksiz": [33, 378, 379, 624, 1025, 1026], "_endian": [33, 378, 379, 624, 1025, 1026], "_least_significant_digit": [33, 378, 379, 624, 1025, 1026], "see": [33, 62, 91, 119, 130, 151, 203, 217, 230, 234, 236, 238, 246, 250, 252, 270, 283, 303, 315, 320, 340, 352, 357, 370, 378, 379, 478, 479, 482, 495, 502, 516, 624, 657, 686, 714, 723, 762, 795, 848, 862, 875, 879, 881, 883, 891, 895, 897, 915, 928, 948, 960, 965, 985, 997, 1002, 1017, 1025, 1026, 1066, 1121, 1122, 1125, 1138, 1145, 1159, 1179, 1208, 1314, 1315, 1323, 1344, 1351, 1353, 1355, 1356, 1357, 1358, 1363], "document": [33, 130, 230, 234, 236, 238, 246, 250, 252, 315, 352, 373, 378, 379, 569, 624, 762, 875, 879, 881, 883, 891, 895, 897, 960, 997, 1020, 1025, 1026, 1299, 1306, 1349, 1355, 1363], "detail": [33, 119, 130, 151, 234, 246, 315, 352, 378, 379, 479, 495, 624, 714, 723, 762, 795, 879, 891, 960, 997, 1025, 1026, 1062, 1066, 1122, 1138, 1344, 1349, 1360, 1363], "netcdf4_class": [33, 55, 378, 379, 624, 650, 1025, 1026, 1174], "netcdf3_class": [33, 55, 378, 379, 624, 650, 1025, 1026, 1174], "netcdf3_64bit": [33, 55, 378, 379, 624, 650, 1025, 1026, 1174], "non": [33, 121, 123, 124, 132, 376, 378, 478, 479, 495, 507, 509, 577, 624, 716, 718, 719, 764, 1023, 1025, 1121, 1122, 1138, 1150, 1152, 1344], "zero": [33, 378, 479, 495, 497, 503, 507, 562, 569, 591, 624, 1006, 1025, 1122, 1138, 1140, 1146, 1150, 1292, 1299, 1307, 1344, 1352, 1356], "base_tim": [33, 55, 378, 379, 624, 650, 1025, 1026, 1174, 1342], "time_offset": [33, 55, 378, 379, 624, 650, 1025, 1026, 1174, 1342], "phidp_field": [34, 129, 133, 136, 137, 141, 142, 505, 506, 507, 508, 509, 626, 751, 752, 753, 758, 766, 768, 769, 777, 778, 782, 783, 784, 786, 787, 1148, 1149, 1150, 1151, 1152, 1161, 1309, 1345, 1359], "phidp_texture_field": [34, 626, 1161], "textur": [34, 182, 427, 525, 551, 574, 626, 826, 1070, 1161, 1255, 1281, 1304, 1349, 1353, 1359], "real": [34, 130, 626, 762, 1161, 1312, 1322, 1344, 1349, 1363, 1365], "part": [34, 484, 540, 626, 1127, 1161, 1270, 1314, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360], "shift": [34, 129, 133, 136, 137, 141, 142, 187, 254, 287, 324, 481, 503, 505, 506, 508, 540, 626, 758, 766, 777, 778, 782, 786, 787, 832, 899, 932, 969, 1124, 1146, 1148, 1149, 1151, 1161, 1270, 1353, 1359], "texture_field": [34, 626, 1161], "gourlei": [34, 626, 757, 782, 783, 784, 1161], "j": [34, 122, 125, 132, 136, 137, 138, 139, 143, 146, 428, 478, 479, 482, 495, 504, 508, 509, 511, 514, 516, 518, 519, 626, 717, 720, 764, 777, 778, 779, 781, 788, 791, 1071, 1121, 1122, 1125, 1138, 1147, 1151, 1152, 1154, 1157, 1159, 1161, 1162, 1163, 1309, 1310, 1319, 1320, 1327, 1328, 1330, 1332, 1336, 1339, 1344, 1349, 1363], "p": [34, 36, 38, 44, 118, 122, 125, 138, 139, 143, 146, 432, 437, 446, 450, 451, 460, 466, 473, 478, 484, 514, 541, 626, 629, 631, 638, 713, 717, 720, 779, 781, 788, 791, 1062, 1075, 1080, 1089, 1093, 1094, 1103, 1109, 1116, 1121, 1127, 1157, 1161, 1235, 1271, 1349, 1363], "tabari": [34, 626, 1161], "parent": [34, 626, 1161], "du": [34, 626, 1161], "chatelet": [34, 626, 1161], "fuzzi": [34, 626, 1161], "logic": [34, 155, 157, 164, 171, 176, 626, 727, 729, 736, 743, 748, 799, 801, 808, 815, 820, 1161], "algorithm": [34, 130, 131, 132, 151, 410, 432, 437, 451, 452, 478, 479, 482, 483, 495, 507, 511, 516, 626, 723, 760, 761, 762, 763, 764, 774, 782, 783, 795, 1062, 1066, 1075, 1080, 1094, 1095, 1121, 1122, 1125, 1126, 1138, 1150, 1154, 1159, 1161, 1308, 1311, 1312, 1349, 1358, 1359, 1361, 1363], "separ": [34, 478, 497, 502, 516, 518, 541, 552, 626, 775, 1063, 1064, 1121, 1140, 1145, 1159, 1161, 1162, 1271, 1282, 1314, 1326, 1357, 1358, 1365], "precipit": [34, 129, 133, 141, 142, 460, 473, 478, 504, 552, 626, 758, 761, 766, 786, 787, 1066, 1103, 1116, 1121, 1147, 1161, 1282, 1318, 1326, 1344, 1358, 1359, 1363], "nonprecipit": [34, 626, 1161], "echo": [34, 478, 479, 495, 497, 504, 626, 1121, 1122, 1138, 1140, 1147, 1161, 1344, 1356, 1358], "polarimetr": [34, 136, 137, 442, 448, 449, 450, 460, 473, 482, 485, 504, 511, 514, 515, 626, 751, 752, 753, 757, 777, 778, 1085, 1091, 1092, 1093, 1103, 1116, 1125, 1128, 1147, 1154, 1157, 1158, 1161, 1309, 1359], "observ": [34, 118, 138, 139, 143, 146, 437, 460, 473, 479, 495, 507, 513, 532, 626, 713, 760, 761, 779, 781, 783, 788, 791, 1080, 1103, 1116, 1122, 1138, 1150, 1156, 1161, 1262, 1344, 1359], "journal": [34, 130, 132, 432, 446, 451, 452, 466, 484, 497, 541, 542, 626, 762, 764, 1062, 1075, 1089, 1094, 1095, 1109, 1127, 1140, 1161, 1271, 1272, 1349, 1363], "atmospher": [34, 60, 89, 118, 119, 130, 131, 138, 146, 425, 452, 484, 497, 510, 542, 626, 655, 684, 713, 714, 762, 763, 779, 791, 1066, 1068, 1095, 1127, 1140, 1153, 1161, 1177, 1206, 1272, 1314, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "ocean": [34, 130, 136, 137, 452, 479, 484, 495, 497, 514, 542, 626, 762, 777, 778, 1095, 1122, 1127, 1138, 1140, 1157, 1161, 1272, 1314, 1344], "technologi": [34, 130, 452, 484, 497, 542, 626, 762, 1095, 1127, 1140, 1161, 1272], "24": [34, 626, 1161, 1315, 1357, 1358], "8": [34, 77, 106, 126, 130, 136, 182, 231, 233, 234, 235, 237, 239, 249, 251, 253, 478, 542, 626, 672, 701, 721, 751, 762, 777, 782, 783, 826, 876, 878, 879, 880, 882, 884, 894, 896, 898, 1121, 1161, 1194, 1223, 1272, 1315, 1318, 1324, 1334, 1338, 1342, 1346, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1363], "1439": [34, 626, 1161], "1451": [34, 626, 1161], "class": [35, 46, 56, 60, 89, 151, 180, 187, 221, 233, 234, 240, 254, 287, 315, 324, 383, 396, 410, 437, 482, 483, 497, 504, 577, 627, 628, 641, 651, 655, 684, 722, 723, 794, 795, 824, 831, 832, 866, 878, 879, 885, 899, 932, 960, 969, 1030, 1031, 1044, 1054, 1055, 1056, 1058, 1065, 1080, 1125, 1126, 1140, 1147, 1164, 1165, 1175, 1177, 1206, 1306, 1307, 1349, 1355, 1356, 1359, 1363], "filetyp": [35, 41, 628, 635], "need": [35, 60, 69, 71, 72, 89, 98, 100, 101, 149, 380, 392, 479, 495, 544, 570, 628, 655, 664, 666, 667, 684, 693, 695, 696, 760, 761, 1027, 1122, 1138, 1177, 1186, 1188, 1189, 1206, 1215, 1217, 1218, 1274, 1300, 1314, 1318, 1323, 1344, 1349, 1351, 1352, 1353, 1355, 1356, 1359, 1360, 1362, 1363, 1365], "being": [35, 37, 130, 179, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 428, 509, 555, 556, 628, 630, 762, 823, 849, 851, 856, 859, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1066, 1071, 1152, 1285, 1286, 1307, 1335, 1362], "string": [35, 46, 60, 89, 206, 209, 210, 214, 217, 232, 234, 248, 273, 276, 277, 281, 283, 306, 309, 310, 311, 312, 313, 316, 318, 320, 343, 346, 347, 348, 349, 350, 353, 355, 357, 361, 409, 443, 463, 496, 497, 502, 508, 509, 514, 518, 519, 520, 526, 527, 578, 628, 641, 655, 684, 851, 854, 855, 859, 862, 877, 879, 893, 918, 921, 922, 926, 928, 951, 954, 955, 956, 957, 958, 961, 963, 965, 988, 991, 992, 993, 994, 995, 998, 1000, 1002, 1008, 1065, 1066, 1086, 1106, 1139, 1140, 1145, 1151, 1152, 1157, 1162, 1163, 1165, 1177, 1206, 1256, 1257, 1323, 1363], "initi": [35, 50, 51, 52, 56, 78, 79, 80, 81, 107, 108, 109, 110, 130, 131, 151, 187, 254, 287, 324, 383, 515, 628, 645, 646, 647, 651, 673, 674, 675, 676, 702, 703, 704, 705, 723, 762, 763, 795, 832, 899, 932, 969, 1031, 1158, 1169, 1170, 1171, 1195, 1196, 1197, 1198, 1224, 1225, 1226, 1227, 1325], "dic": [38, 46, 60, 61, 89, 90, 383, 395, 631, 641, 655, 656, 684, 685, 1031, 1165, 1177, 1178, 1206, 1207], "colormap": [39, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 633, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1027, 1312, 1322, 1326, 1340, 1345, 1359, 1361], "select": [40, 65, 74, 94, 103, 132, 442, 450, 460, 473, 476, 491, 492, 511, 513, 515, 634, 660, 669, 689, 698, 764, 1085, 1093, 1103, 1116, 1119, 1134, 1135, 1154, 1156, 1158, 1182, 1191, 1211, 1220], "limit": [40, 130, 131, 136, 137, 179, 181, 182, 183, 184, 185, 186, 206, 220, 246, 273, 286, 306, 323, 343, 360, 370, 381, 423, 501, 507, 511, 571, 572, 634, 762, 763, 776, 777, 778, 823, 825, 826, 827, 828, 829, 830, 851, 865, 891, 918, 931, 951, 968, 988, 1005, 1017, 1028, 1063, 1064, 1144, 1150, 1154, 1301, 1302, 1319, 1320, 1324, 1349, 1355, 1359], "relat": [40, 381, 479, 485, 488, 489, 490, 495, 508, 516, 634, 753, 782, 783, 784, 1028, 1122, 1128, 1131, 1132, 1133, 1138, 1151, 1159, 1344, 1349, 1359, 1362, 1363], "instac": [40, 634], "nyquist": [40, 73, 102, 130, 131, 132, 427, 525, 634, 668, 697, 762, 763, 764, 1070, 1190, 1219, 1255, 1353, 1358, 1360], "consid": [40, 129, 133, 134, 141, 142, 446, 451, 452, 466, 478, 479, 491, 492, 495, 501, 505, 506, 511, 512, 513, 530, 533, 534, 540, 541, 542, 557, 634, 751, 758, 760, 761, 765, 766, 767, 768, 769, 770, 773, 774, 782, 783, 784, 786, 787, 1006, 1063, 1064, 1089, 1094, 1095, 1109, 1121, 1122, 1134, 1135, 1138, 1144, 1148, 1149, 1154, 1155, 1156, 1260, 1263, 1264, 1270, 1271, 1272, 1287, 1344], "vmin": [40, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 634, 849, 851, 856, 859, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1027, 1309, 1310, 1314, 1315, 1318, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1352, 1353, 1355, 1356, 1358, 1359], "vmax": [40, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 634, 849, 851, 856, 859, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1027, 1309, 1310, 1314, 1315, 1318, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1352, 1353, 1355, 1356, 1358, 1359], "2": [40, 118, 122, 126, 132, 134, 136, 138, 146, 182, 193, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 231, 232, 233, 237, 239, 248, 249, 251, 253, 260, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 293, 304, 306, 309, 310, 314, 317, 318, 319, 320, 321, 323, 330, 341, 343, 346, 347, 351, 352, 354, 355, 356, 357, 358, 360, 372, 373, 374, 376, 418, 432, 433, 451, 460, 475, 478, 479, 481, 495, 497, 507, 513, 518, 526, 527, 542, 552, 554, 634, 713, 717, 721, 764, 765, 769, 770, 773, 774, 775, 777, 779, 782, 783, 791, 826, 838, 849, 851, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 876, 877, 878, 882, 884, 893, 894, 896, 898, 905, 916, 918, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 938, 949, 951, 954, 955, 959, 962, 963, 964, 965, 966, 968, 975, 986, 988, 991, 992, 996, 997, 999, 1000, 1001, 1002, 1003, 1005, 1019, 1020, 1021, 1023, 1039, 1050, 1055, 1062, 1063, 1064, 1066, 1075, 1076, 1094, 1103, 1118, 1121, 1122, 1124, 1138, 1140, 1150, 1156, 1162, 1237, 1241, 1256, 1257, 1272, 1282, 1284, 1306, 1311, 1316, 1318, 1324, 1325, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1342, 1344, 1346, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1363], "tuplet": [40, 634], "minimun": [40, 634], "maximun": [40, 634], "teoric": [40, 634], "copi": [41, 45, 46, 62, 63, 65, 66, 67, 69, 91, 92, 94, 95, 96, 98, 165, 166, 383, 575, 635, 639, 641, 657, 658, 660, 661, 662, 664, 686, 687, 689, 690, 691, 693, 737, 738, 809, 810, 1031, 1066, 1165, 1179, 1180, 1182, 1183, 1184, 1186, 1208, 1209, 1211, 1212, 1213, 1215, 1305, 1352], "field_map": [41, 635], "anoth": [41, 442, 450, 460, 473, 476, 552, 635, 1055, 1085, 1093, 1103, 1116, 1119, 1282, 1318, 1351, 1356, 1359, 1362, 1365], "empti": [44, 389, 418, 508, 509, 638, 1039, 1050, 1151, 1152, 1235, 1237, 1240, 1307, 1351, 1358, 1359], "exist": [44, 47, 61, 62, 64, 90, 91, 93, 134, 155, 157, 164, 171, 176, 179, 182, 183, 376, 507, 575, 638, 642, 656, 657, 659, 685, 686, 688, 727, 729, 736, 743, 748, 770, 776, 799, 801, 808, 815, 820, 823, 826, 827, 1023, 1150, 1166, 1175, 1178, 1179, 1181, 1207, 1208, 1210, 1235, 1305, 1309, 1349, 1351], "self": [45, 136, 137, 385, 388, 389, 390, 391, 394, 398, 400, 401, 405, 406, 639, 777, 778, 782, 783, 784, 1352, 1355, 1363], "descrip": [45, 639], "default_config": [45, 639, 1307], "These": [45, 130, 151, 246, 380, 558, 577, 639, 723, 762, 795, 891, 1027, 1066, 1288, 1314, 1323, 1344, 1349, 1356, 1362, 1363], "modifi": [45, 60, 89, 639, 655, 684, 765, 1177, 1206, 1312, 1322, 1340, 1361, 1363], "environment": [45, 639, 1349, 1362], "pyart_config": [45, 639, 1359], "execut": [45, 639, 1311, 1316, 1321, 1340, 1347, 1348, 1361], "full": [45, 77, 106, 134, 376, 639, 672, 701, 765, 770, 1023, 1194, 1223, 1307, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349], "permiss": [45, 639], "mai": [45, 130, 131, 155, 157, 164, 171, 176, 287, 324, 372, 374, 380, 383, 396, 478, 509, 511, 577, 639, 727, 729, 736, 743, 748, 762, 763, 799, 801, 808, 815, 820, 932, 969, 1019, 1021, 1027, 1031, 1066, 1121, 1152, 1154, 1250, 1344, 1349], "secur": [45, 639], "do": [45, 60, 89, 126, 130, 179, 182, 183, 380, 381, 494, 639, 655, 684, 721, 762, 776, 823, 826, 827, 1027, 1028, 1137, 1177, 1206, 1315, 1344, 1351, 1352, 1353, 1355, 1356, 1358, 1362, 1363, 1365], "un": [45, 639], "trust": [45, 639], "method": [45, 46, 62, 69, 71, 72, 91, 98, 100, 101, 129, 133, 136, 137, 151, 155, 157, 164, 171, 176, 216, 381, 382, 383, 396, 421, 446, 466, 478, 481, 496, 497, 505, 506, 507, 508, 509, 518, 540, 541, 542, 639, 641, 657, 664, 666, 667, 686, 693, 695, 696, 723, 727, 729, 736, 743, 748, 751, 753, 758, 766, 777, 778, 782, 784, 795, 799, 801, 808, 815, 820, 861, 1028, 1029, 1031, 1042, 1044, 1052, 1063, 1064, 1065, 1089, 1109, 1121, 1124, 1139, 1140, 1148, 1149, 1150, 1151, 1152, 1162, 1165, 1179, 1186, 1188, 1189, 1208, 1215, 1217, 1218, 1270, 1271, 1272, 1306, 1309, 1329, 1349, 1356, 1358, 1359, 1363], "chang": [45, 46, 60, 62, 66, 67, 69, 71, 89, 91, 95, 96, 98, 100, 130, 150, 151, 375, 383, 639, 641, 655, 657, 661, 662, 664, 666, 684, 686, 690, 691, 693, 695, 723, 762, 795, 1022, 1031, 1165, 1175, 1177, 1179, 1183, 1184, 1186, 1188, 1206, 1208, 1212, 1213, 1215, 1217, 1250, 1307, 1344, 1352, 1355, 1360, 1362, 1363], "home": [45, 639, 1363, 1365], "make": [45, 46, 482, 515, 639, 641, 1125, 1158, 1165, 1237, 1241, 1242, 1244, 1245, 1307, 1318, 1325, 1334, 1344, 1351, 1352, 1358, 1362, 1363, 1365], "adjust": [45, 122, 220, 286, 323, 360, 478, 639, 717, 865, 931, 968, 1005, 1121, 1323, 1326, 1334], "login": [45, 639], "shell": [45, 639], "session": [45, 639], "modif": [45, 62, 91, 639, 657, 686, 1179, 1208, 1307], "last": [45, 60, 89, 130, 135, 204, 205, 211, 215, 216, 217, 229, 231, 237, 239, 240, 247, 249, 251, 253, 271, 272, 278, 282, 283, 304, 305, 314, 315, 319, 320, 324, 341, 342, 351, 352, 356, 357, 540, 542, 639, 655, 684, 762, 772, 849, 850, 856, 860, 861, 862, 874, 876, 882, 884, 885, 892, 894, 896, 898, 916, 917, 923, 927, 928, 949, 950, 959, 960, 964, 965, 969, 986, 987, 996, 997, 1001, 1002, 1177, 1206, 1270, 1272, 1319, 1360], "origin_latitud": [46, 641, 1165], "origin_longitud": [46, 641, 1165], "origin_altitud": [46, 641, 1165], "z": [46, 52, 54, 60, 72, 80, 89, 101, 109, 118, 119, 120, 136, 137, 202, 269, 302, 339, 370, 380, 381, 428, 478, 479, 485, 488, 489, 490, 495, 502, 548, 641, 647, 649, 655, 667, 675, 684, 696, 704, 713, 714, 715, 751, 753, 777, 778, 847, 914, 947, 984, 1017, 1027, 1028, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1071, 1121, 1122, 1128, 1131, 1132, 1133, 1138, 1145, 1165, 1171, 1173, 1177, 1189, 1197, 1206, 1218, 1226, 1237, 1278, 1309, 1332, 1334, 1335, 1344, 1349, 1352, 1359, 1363], "radar_latitud": [46, 544, 570, 641, 1165, 1274, 1300], "radar_longitud": [46, 544, 570, 641, 1165, 1274, 1300], "radar_altitud": [46, 501, 641, 1144, 1165], "radar_tim": [46, 641, 1165], "radar_nam": [46, 641, 1165], "rectilinear": [46, 641, 1165], "cartesian": [46, 48, 54, 60, 89, 118, 119, 120, 121, 122, 123, 124, 125, 370, 482, 497, 609, 641, 643, 649, 655, 684, 713, 714, 715, 716, 717, 718, 719, 720, 1017, 1054, 1055, 1062, 1065, 1066, 1125, 1140, 1165, 1167, 1173, 1177, 1206, 1307, 1312, 1317, 1321, 1324, 1349, 1350, 1358, 1361], "section": [46, 60, 62, 89, 91, 198, 200, 204, 218, 265, 267, 271, 284, 298, 300, 304, 321, 335, 337, 341, 358, 434, 453, 454, 497, 533, 534, 547, 641, 655, 657, 684, 686, 843, 845, 849, 863, 910, 912, 916, 929, 943, 945, 949, 966, 980, 982, 986, 1003, 1064, 1066, 1077, 1096, 1097, 1140, 1165, 1177, 1179, 1206, 1208, 1263, 1264, 1277, 1307, 1312, 1322, 1340, 1344, 1349, 1358, 1361], "legaci": [46, 428, 641, 1071, 1165], "befor": [46, 71, 100, 130, 134, 136, 137, 150, 437, 442, 450, 460, 473, 476, 479, 495, 511, 576, 641, 666, 695, 762, 770, 777, 778, 1055, 1080, 1085, 1093, 1103, 1116, 1119, 1122, 1138, 1154, 1165, 1188, 1217, 1318, 1344, 1349, 1353, 1359, 1360, 1363], "from_legacy_paramet": [46, 641, 1165], "ax": [46, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 229, 231, 232, 233, 234, 235, 237, 239, 246, 247, 248, 249, 251, 253, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 351, 352, 354, 355, 356, 357, 358, 359, 360, 479, 495, 503, 516, 641, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 876, 877, 878, 879, 880, 882, 884, 891, 892, 893, 894, 896, 898, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1059, 1060, 1061, 1122, 1138, 1146, 1159, 1165, 1309, 1310, 1314, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1338, 1342, 1343, 1344, 1345, 1346, 1353, 1357, 1358, 1359], "moment": [46, 54, 60, 89, 130, 131, 132, 182, 183, 372, 373, 374, 541, 591, 592, 641, 649, 655, 684, 757, 762, 763, 764, 776, 826, 827, 1019, 1020, 1021, 1066, 1165, 1173, 1177, 1206, 1271, 1315, 1322, 1340, 1349, 1356, 1357, 1359, 1361], "describ": [46, 60, 89, 127, 179, 180, 181, 182, 183, 184, 185, 186, 232, 248, 446, 452, 466, 495, 641, 655, 684, 754, 776, 823, 824, 825, 826, 827, 828, 829, 830, 877, 893, 1089, 1095, 1109, 1138, 1165, 1177, 1206, 1344], "geograph": [46, 60, 71, 89, 100, 121, 122, 123, 124, 125, 126, 287, 315, 324, 352, 379, 641, 655, 666, 684, 695, 716, 717, 718, 719, 720, 721, 932, 960, 969, 997, 1026, 1066, 1165, 1177, 1188, 1206, 1217, 1349], "axi": [46, 54, 60, 89, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 229, 231, 232, 233, 234, 235, 237, 239, 246, 247, 248, 249, 251, 253, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 304, 305, 306, 307, 308, 309, 310, 314, 315, 317, 318, 319, 320, 321, 323, 341, 342, 343, 344, 345, 346, 347, 351, 352, 354, 355, 356, 357, 358, 360, 370, 380, 530, 641, 649, 655, 684, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 874, 876, 877, 878, 879, 880, 882, 884, 891, 892, 893, 894, 896, 898, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 949, 950, 951, 952, 953, 954, 955, 959, 960, 962, 963, 964, 965, 966, 968, 986, 987, 988, 989, 990, 991, 992, 996, 997, 999, 1000, 1001, 1002, 1003, 1005, 1017, 1027, 1165, 1173, 1177, 1206, 1260, 1309, 1324, 1335, 1344, 1346, 1358, 1359, 1360], "dimension": [46, 54, 130, 132, 495, 516, 641, 649, 762, 764, 1062, 1138, 1159, 1165, 1173, 1318, 1344], "space": [46, 60, 89, 123, 206, 273, 306, 343, 381, 478, 479, 493, 495, 502, 641, 655, 684, 718, 851, 918, 951, 988, 1028, 1066, 1121, 1122, 1136, 1138, 1145, 1165, 1177, 1206, 1315, 1344, 1351], "along": [46, 131, 134, 218, 230, 231, 236, 237, 238, 239, 250, 251, 252, 253, 284, 321, 358, 474, 530, 533, 534, 545, 546, 574, 641, 763, 770, 863, 875, 876, 881, 882, 883, 884, 895, 896, 897, 898, 929, 966, 1003, 1117, 1165, 1260, 1263, 1264, 1275, 1276, 1304, 1344, 1358], "three": [46, 132, 179, 183, 380, 495, 516, 641, 764, 776, 823, 827, 1027, 1138, 1159, 1165, 1344, 1359], "repeat": [46, 497, 641, 1140, 1165], "throughout": [46, 641, 1165], "transform": [46, 60, 89, 121, 122, 123, 124, 125, 126, 209, 216, 276, 287, 309, 324, 346, 352, 379, 423, 437, 443, 463, 478, 504, 517, 641, 655, 684, 716, 717, 718, 719, 720, 721, 854, 861, 921, 932, 954, 969, 991, 997, 1026, 1066, 1080, 1086, 1106, 1121, 1147, 1160, 1165, 1177, 1206, 1323, 1344, 1357], "pyart_aeqd": [46, 53, 60, 89, 121, 123, 124, 641, 648, 655, 684, 716, 718, 719, 1165, 1172, 1177, 1206], "nativ": [46, 60, 89, 121, 123, 124, 363, 428, 641, 655, 684, 716, 718, 719, 1010, 1066, 1071, 1165, 1177, 1206], "azimuth": [46, 60, 66, 67, 70, 72, 82, 89, 95, 96, 99, 101, 111, 118, 119, 120, 121, 122, 123, 124, 125, 144, 145, 187, 188, 204, 206, 209, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 254, 255, 271, 273, 276, 278, 282, 283, 287, 288, 304, 306, 309, 314, 315, 319, 320, 324, 325, 341, 343, 346, 351, 352, 356, 357, 376, 380, 428, 442, 473, 474, 491, 492, 494, 497, 509, 511, 518, 519, 528, 533, 534, 540, 543, 544, 545, 550, 554, 562, 575, 591, 641, 655, 661, 662, 665, 667, 677, 684, 690, 691, 694, 696, 706, 713, 714, 715, 716, 717, 718, 719, 720, 760, 761, 771, 773, 774, 775, 780, 789, 790, 792, 832, 833, 849, 851, 854, 856, 860, 861, 862, 876, 882, 884, 894, 896, 898, 899, 900, 916, 918, 921, 923, 927, 928, 932, 933, 949, 951, 954, 959, 960, 964, 965, 969, 970, 986, 988, 991, 996, 997, 1001, 1002, 1023, 1027, 1064, 1071, 1085, 1116, 1117, 1134, 1135, 1137, 1140, 1152, 1154, 1162, 1163, 1165, 1177, 1183, 1184, 1187, 1189, 1199, 1206, 1212, 1213, 1216, 1218, 1228, 1258, 1263, 1264, 1270, 1273, 1274, 1275, 1280, 1284, 1292, 1305, 1307, 1337, 1339, 1342, 1351, 1360, 1363], "equidist": [46, 60, 89, 121, 122, 123, 124, 125, 209, 276, 309, 346, 352, 380, 641, 655, 684, 716, 717, 718, 719, 720, 854, 921, 954, 991, 997, 1027, 1066, 1165, 1177, 1206], "pyproj": [46, 60, 89, 121, 123, 124, 641, 655, 684, 716, 718, 719, 1165, 1177, 1206, 1362], "projparam": [46, 49, 60, 89, 121, 123, 124, 641, 644, 655, 684, 716, 718, 719, 1165, 1168, 1177, 1206], "special": [46, 60, 89, 641, 655, 684, 1165, 1177, 1206, 1307, 1357], "_include_lon_0_lat_0": [46, 60, 89, 641, 655, 684, 1165, 1177, 1206], "interpret": [46, 60, 89, 131, 132, 379, 555, 556, 641, 655, 684, 763, 764, 1026, 1165, 1177, 1206, 1285, 1286], "requir": [46, 60, 89, 121, 123, 124, 130, 134, 376, 380, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 481, 518, 541, 577, 641, 655, 684, 716, 718, 719, 762, 765, 770, 1023, 1027, 1063, 1064, 1066, 1072, 1073, 1074, 1075, 1081, 1082, 1083, 1084, 1088, 1089, 1091, 1092, 1099, 1100, 1101, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1124, 1162, 1165, 1177, 1206, 1271, 1315, 1349, 1357, 1358, 1359, 1363, 1365], "get_projparam": [46, 641, 1165], "evalu": [46, 383, 392, 407, 412, 641, 1031, 1033, 1165], "up": [46, 60, 89, 155, 157, 164, 171, 176, 428, 460, 485, 488, 489, 510, 513, 525, 558, 560, 561, 641, 655, 684, 727, 729, 736, 743, 748, 752, 753, 760, 761, 782, 783, 784, 799, 801, 808, 815, 820, 1063, 1064, 1071, 1103, 1128, 1131, 1132, 1153, 1156, 1165, 1177, 1206, 1255, 1288, 1290, 1291, 1344, 1353, 1357, 1360, 1364], "collect": [46, 164, 176, 365, 372, 373, 374, 376, 641, 736, 748, 808, 820, 1012, 1019, 1020, 1021, 1023, 1054, 1065, 1066, 1165, 1314, 1328, 1342, 1363, 1364, 1365], "nradar": [46, 641, 1165], "whose": [46, 375, 641, 1022, 1061, 1165], "wa": [46, 71, 72, 100, 101, 131, 132, 150, 164, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 552, 641, 666, 667, 695, 696, 736, 763, 764, 808, 849, 856, 860, 861, 862, 863, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1165, 1188, 1189, 1217, 1218, 1282, 1307, 1349, 1359, 1363, 1365], "projection_proj": [46, 641, 1165], "instanc": [46, 53, 57, 63, 92, 130, 131, 132, 204, 211, 214, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 381, 382, 428, 482, 552, 562, 563, 569, 641, 648, 652, 658, 687, 762, 763, 764, 849, 856, 859, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003, 1028, 1029, 1071, 1125, 1165, 1172, 1180, 1209, 1282, 1292, 1293, 1299], "valueerror": [46, 47, 53, 61, 62, 90, 91, 641, 642, 648, 656, 657, 685, 686, 1165, 1166, 1172, 1178, 1179, 1207, 1208], "point_z": [46, 379, 641, 1026, 1165], "point_x": [46, 379, 641, 1026, 1165], "point_i": [46, 379, 641, 1026, 1165], "func": [46, 150, 641, 1165], "init_point_x_y_z": [46, 641, 1165], "reset": [46, 51, 52, 60, 71, 79, 80, 81, 89, 100, 108, 109, 110, 641, 646, 647, 655, 666, 674, 675, 676, 684, 695, 703, 704, 705, 1165, 1170, 1171, 1177, 1188, 1196, 1197, 1198, 1206, 1217, 1225, 1226, 1227, 1356], "point_latitud": [46, 379, 641, 1026, 1165], "point_longitud": [46, 379, 641, 1026, 1165], "perform": [46, 60, 71, 72, 73, 89, 100, 101, 102, 130, 131, 132, 134, 155, 157, 164, 171, 176, 204, 209, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 276, 278, 281, 282, 283, 284, 304, 309, 314, 315, 318, 319, 320, 321, 324, 341, 346, 351, 352, 355, 356, 357, 358, 372, 375, 380, 437, 442, 450, 460, 473, 481, 495, 507, 575, 641, 655, 666, 667, 668, 684, 695, 696, 697, 727, 729, 736, 743, 748, 757, 762, 763, 764, 770, 799, 801, 808, 815, 820, 849, 854, 856, 859, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 921, 923, 926, 927, 928, 929, 949, 954, 959, 960, 963, 964, 965, 966, 969, 986, 991, 996, 997, 1000, 1001, 1002, 1003, 1019, 1022, 1027, 1063, 1064, 1080, 1085, 1093, 1103, 1116, 1124, 1138, 1150, 1165, 1177, 1188, 1189, 1190, 1206, 1217, 1218, 1219, 1305, 1308, 1309, 1310, 1312, 1319, 1320, 1324, 1349, 1358], "invers": [46, 60, 89, 138, 146, 443, 518, 641, 655, 684, 779, 791, 1086, 1162, 1165, 1177, 1206], "rel": [46, 60, 89, 135, 181, 216, 313, 350, 423, 437, 515, 517, 641, 655, 684, 752, 768, 772, 782, 783, 784, 825, 861, 958, 995, 1066, 1080, 1158, 1160, 1165, 1177, 1206, 1360, 1363], "init_point_longitude_latitud": [46, 641, 1165], "point_altitud": [46, 50, 379, 641, 645, 1026, 1165, 1169], "init_point_altitud": [46, 641, 1165], "init": [46, 221, 240, 383, 395, 544, 641, 866, 885, 1031, 1165, 1274], "field_dict": [47, 642, 1166], "replace_exist": [47, 61, 62, 63, 90, 91, 92, 642, 656, 657, 658, 685, 686, 687, 1166, 1178, 1179, 1180, 1207, 1208, 1209, 1344, 1352, 1353, 1363], "overwrit": [47, 540, 642, 1166, 1270], "alreadi": [47, 61, 62, 90, 91, 138, 505, 506, 642, 656, 657, 685, 686, 779, 1148, 1149, 1166, 1178, 1179, 1207, 1208], "edg": [48, 72, 101, 119, 123, 130, 131, 132, 134, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 503, 509, 590, 643, 667, 696, 714, 718, 762, 763, 764, 765, 770, 849, 856, 860, 861, 862, 876, 882, 884, 894, 896, 898, 916, 923, 927, 928, 949, 959, 960, 964, 965, 986, 996, 997, 1001, 1002, 1146, 1152, 1167, 1189, 1218, 1241, 1334, 1335, 1344, 1349], "height": [48, 54, 56, 57, 135, 181, 233, 234, 235, 249, 315, 352, 423, 424, 426, 437, 442, 450, 460, 473, 476, 479, 480, 482, 495, 496, 497, 500, 504, 510, 511, 512, 513, 515, 516, 517, 518, 519, 569, 643, 649, 651, 652, 752, 753, 760, 761, 767, 768, 772, 782, 783, 784, 825, 878, 879, 880, 894, 960, 997, 1063, 1064, 1066, 1069, 1080, 1085, 1093, 1103, 1116, 1119, 1122, 1123, 1125, 1138, 1139, 1140, 1143, 1147, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1162, 1163, 1167, 1173, 1299, 1323, 1332, 1342, 1346, 1356, 1358, 1359, 1363], "determin": [48, 60, 89, 129, 130, 131, 132, 133, 137, 141, 142, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 315, 352, 363, 372, 373, 376, 381, 382, 427, 437, 446, 451, 466, 479, 481, 482, 484, 485, 486, 488, 489, 495, 515, 516, 518, 540, 541, 557, 569, 573, 643, 655, 684, 758, 762, 763, 764, 766, 778, 786, 787, 876, 878, 879, 880, 882, 884, 891, 894, 896, 898, 960, 997, 1006, 1010, 1019, 1020, 1023, 1028, 1029, 1070, 1080, 1089, 1094, 1109, 1122, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1138, 1158, 1159, 1162, 1167, 1177, 1206, 1270, 1271, 1287, 1299, 1303, 1344, 1363], "same": [48, 60, 62, 70, 71, 72, 89, 91, 99, 100, 101, 122, 125, 130, 157, 171, 216, 315, 370, 376, 380, 381, 382, 425, 437, 479, 495, 502, 510, 540, 544, 554, 570, 575, 643, 655, 657, 665, 666, 667, 684, 686, 694, 695, 696, 717, 720, 729, 743, 762, 801, 815, 861, 960, 1017, 1023, 1027, 1028, 1029, 1066, 1068, 1080, 1122, 1138, 1145, 1153, 1167, 1177, 1179, 1187, 1188, 1189, 1206, 1208, 1216, 1217, 1218, 1241, 1270, 1274, 1284, 1300, 1305, 1314, 1334, 1335, 1344, 1351, 1356, 1357, 1358, 1363, 1365], "layout": [48, 369, 643, 1016, 1167], "interpol": [48, 72, 101, 119, 123, 204, 211, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 365, 372, 442, 450, 460, 473, 476, 482, 496, 509, 510, 511, 518, 553, 569, 643, 667, 696, 714, 718, 849, 856, 860, 861, 862, 863, 876, 882, 884, 894, 896, 898, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1012, 1019, 1065, 1066, 1085, 1093, 1103, 1116, 1119, 1125, 1139, 1152, 1153, 1154, 1162, 1167, 1189, 1218, 1283, 1299, 1307, 1315, 1344, 1355, 1358, 1359, 1363], "extrapol": [48, 119, 123, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 643, 714, 718, 849, 856, 860, 861, 862, 876, 882, 884, 894, 896, 898, 916, 923, 927, 928, 949, 959, 960, 964, 965, 986, 996, 997, 1001, 1002, 1167], "boundari": [48, 119, 123, 134, 223, 224, 246, 352, 509, 643, 714, 718, 770, 868, 869, 891, 997, 1152, 1167, 1241, 1345, 1357, 1359], "center": [48, 60, 72, 89, 101, 118, 119, 120, 122, 123, 125, 131, 204, 209, 211, 215, 216, 217, 231, 232, 236, 237, 238, 239, 248, 249, 250, 251, 252, 253, 271, 276, 278, 282, 283, 287, 304, 309, 314, 315, 319, 320, 341, 346, 351, 352, 356, 357, 372, 374, 442, 450, 460, 473, 476, 501, 525, 528, 551, 643, 655, 667, 684, 696, 713, 714, 715, 717, 718, 720, 763, 849, 854, 856, 860, 861, 862, 876, 877, 881, 882, 883, 884, 893, 894, 895, 896, 897, 898, 916, 921, 923, 927, 928, 932, 949, 954, 959, 960, 964, 965, 986, 991, 996, 997, 1001, 1002, 1019, 1021, 1059, 1060, 1061, 1085, 1093, 1103, 1116, 1119, 1144, 1167, 1177, 1189, 1206, 1218, 1237, 1241, 1255, 1258, 1281, 1323, 1353, 1358, 1359, 1360], "2d": [48, 70, 71, 72, 99, 100, 101, 119, 135, 370, 380, 424, 437, 504, 509, 515, 525, 551, 643, 665, 666, 667, 694, 695, 696, 714, 771, 772, 780, 1017, 1027, 1080, 1147, 1152, 1158, 1167, 1187, 1188, 1189, 1216, 1217, 1218, 1255, 1281, 1318, 1360], "point_": [51, 52, 646, 647, 1170, 1171], "properti": [53, 58, 59, 165, 166, 518, 648, 653, 654, 737, 738, 809, 810, 1056, 1058, 1162, 1172, 1357, 1363], "xarrai": [54, 221, 233, 234, 235, 546, 649, 866, 878, 879, 880, 1063, 1064, 1173, 1276, 1338, 1342, 1349, 1362], "arm_alt_lat_lon_vari": [55, 379, 650, 1026, 1174], "speed": [56, 57, 234, 497, 518, 519, 525, 651, 652, 879, 1066, 1140, 1162, 1163, 1255, 1346, 1358, 1363], "direct": [56, 77, 106, 376, 430, 449, 481, 494, 497, 507, 518, 519, 651, 672, 701, 1023, 1073, 1092, 1124, 1137, 1140, 1150, 1162, 1163, 1194, 1223, 1346, 1358, 1363], "horizont": [56, 57, 58, 59, 60, 89, 130, 204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 319, 320, 321, 341, 342, 343, 351, 356, 357, 358, 364, 365, 433, 439, 440, 441, 445, 458, 459, 471, 472, 477, 491, 492, 494, 513, 518, 569, 651, 652, 653, 654, 655, 684, 751, 756, 757, 759, 762, 849, 850, 851, 856, 860, 861, 862, 863, 874, 876, 878, 880, 882, 884, 892, 894, 896, 898, 916, 917, 918, 923, 927, 928, 929, 949, 950, 951, 959, 964, 965, 966, 986, 987, 988, 996, 1001, 1002, 1003, 1011, 1012, 1063, 1064, 1076, 1082, 1083, 1084, 1088, 1101, 1102, 1114, 1115, 1120, 1134, 1135, 1137, 1156, 1162, 1177, 1206, 1299, 1325, 1335, 1358, 1360, 1363], "wind": [56, 57, 58, 59, 130, 131, 364, 365, 491, 492, 493, 494, 518, 519, 569, 651, 652, 653, 654, 762, 763, 1011, 1012, 1134, 1135, 1136, 1137, 1162, 1163, 1299, 1307, 1346, 1350, 1363], "1d": [56, 57, 119, 123, 135, 437, 480, 483, 504, 517, 530, 542, 547, 548, 549, 550, 558, 559, 560, 561, 578, 651, 652, 714, 718, 771, 772, 780, 1080, 1123, 1126, 1147, 1160, 1260, 1272, 1277, 1278, 1279, 1280, 1288, 1289, 1290, 1291, 1360], "were": [56, 57, 155, 157, 164, 518, 560, 651, 652, 727, 729, 736, 799, 801, 808, 1162, 1290, 1307, 1359, 1363], "sampl": [56, 57, 437, 446, 466, 480, 515, 517, 518, 519, 541, 651, 652, 775, 1080, 1089, 1109, 1123, 1158, 1160, 1162, 1163, 1164, 1242, 1244, 1245, 1271, 1314, 1315, 1323, 1343, 1345, 1346, 1349, 1363], "per": [56, 57, 58, 59, 73, 89, 102, 130, 518, 651, 652, 653, 654, 668, 684, 697, 762, 783, 1066, 1162, 1190, 1206, 1219, 1238, 1239, 1240, 1363], "east": [56, 204, 215, 271, 282, 304, 319, 341, 356, 546, 651, 849, 860, 916, 927, 949, 964, 986, 1001, 1276, 1327, 1359], "u_wind": [56, 57, 518, 519, 651, 652, 1162, 1163, 1346, 1358, 1363], "compon": [56, 57, 58, 59, 478, 493, 494, 651, 652, 653, 654, 1121, 1136, 1137, 1363], "v_wind": [56, 57, 518, 519, 651, 652, 1162, 1163, 1346, 1358, 1363], "classmethod": [57, 410, 652], "_rang": [60, 89, 447, 655, 684, 1090, 1177, 1206], "scan_typ": [60, 89, 187, 203, 254, 270, 287, 303, 324, 340, 655, 684, 832, 848, 899, 915, 932, 948, 969, 985, 1177, 1206, 1360], "sweep_numb": [60, 89, 655, 684, 1177, 1206, 1332, 1351, 1360], "sweep_mod": [60, 89, 366, 655, 684, 1013, 1177, 1206, 1351, 1360], "fixed_angl": [60, 89, 187, 254, 287, 324, 562, 655, 684, 832, 899, 932, 969, 1177, 1206, 1292, 1332, 1333, 1337, 1351, 1360], "sweep_start_ray_index": [60, 89, 655, 684, 1177, 1206, 1351, 1360], "sweep_end_ray_index": [60, 89, 655, 684, 1177, 1206, 1351, 1360], "altitude_agl": [60, 89, 655, 684, 1177, 1206, 1360], "target_scan_r": [60, 89, 655, 684, 1177, 1206, 1360], "rays_are_index": [60, 89, 655, 684, 1177, 1206], "ray_angle_r": [60, 89, 655, 684, 1177, 1206], "scan_rat": [60, 89, 382, 655, 684, 1029, 1177, 1206, 1360], "antenna_transit": [60, 71, 72, 89, 100, 101, 164, 176, 204, 211, 215, 216, 217, 218, 254, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 655, 666, 667, 684, 695, 696, 736, 748, 808, 820, 849, 856, 860, 861, 862, 863, 899, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1177, 1188, 1189, 1206, 1217, 1218, 1360], "instrument_paramet": [60, 89, 130, 382, 452, 454, 655, 684, 762, 774, 1029, 1095, 1097, 1177, 1206, 1307, 1353, 1360], "radar_calibr": [60, 89, 446, 454, 466, 468, 469, 655, 684, 1089, 1097, 1109, 1111, 1112, 1177, 1206, 1360], "tilt": [60, 89, 187, 216, 315, 352, 514, 655, 684, 832, 861, 960, 997, 1157, 1177, 1206, 1315, 1331, 1338], "roll": [60, 89, 140, 187, 376, 568, 574, 655, 684, 785, 832, 1023, 1177, 1206, 1298, 1304], "drift": [60, 89, 187, 655, 684, 832, 1177, 1206], "head": [60, 89, 187, 655, 684, 832, 1177, 1206], "pitch": [60, 89, 187, 655, 684, 832, 1177, 1206], "georefs_appli": [60, 89, 655, 684, 1177, 1206], "antenna": [60, 71, 72, 89, 100, 101, 118, 119, 120, 127, 135, 138, 139, 143, 145, 146, 164, 176, 181, 185, 204, 211, 215, 216, 217, 218, 254, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 428, 433, 454, 461, 474, 497, 513, 562, 655, 666, 667, 684, 695, 696, 713, 714, 715, 736, 748, 754, 760, 761, 772, 773, 774, 775, 779, 780, 781, 788, 790, 791, 792, 808, 820, 825, 829, 849, 856, 860, 861, 862, 863, 899, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1071, 1076, 1097, 1104, 1117, 1140, 1156, 1177, 1188, 1189, 1206, 1217, 1218, 1292, 1307, 1308, 1312, 1317, 1318, 1319, 1320, 1349, 1355, 1360], "structur": [60, 89, 382, 478, 495, 516, 655, 684, 1029, 1121, 1138, 1159, 1177, 1206, 1314, 1344, 1356], "under": [60, 89, 130, 131, 132, 655, 684, 762, 763, 764, 1066, 1177, 1206, 1344, 1349, 1362, 1363], "sub": [60, 89, 655, 684, 1177, 1206], "meta_group": [60, 89, 655, 684, 1177, 1206, 1360], "instrument": [60, 89, 164, 176, 179, 182, 183, 382, 655, 684, 736, 748, 776, 808, 820, 823, 826, 827, 1029, 1177, 1206, 1353, 1360], "multipl": [60, 89, 138, 146, 437, 478, 513, 515, 655, 684, 779, 791, 1080, 1121, 1156, 1158, 1177, 1206, 1307, 1312, 1317, 1322, 1334, 1340, 1356, 1361, 1365], "ground": [60, 89, 428, 460, 497, 655, 684, 1071, 1103, 1140, 1177, 1206, 1314, 1358], "target": [60, 89, 139, 380, 453, 454, 542, 544, 545, 546, 550, 570, 655, 684, 781, 1027, 1096, 1097, 1177, 1206, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1272, 1274, 1275, 1276, 1280, 1300, 1360], "thr": [60, 89, 655, 684, 1177, 1206], "index": [60, 75, 89, 104, 129, 133, 135, 141, 142, 183, 217, 233, 234, 235, 237, 239, 249, 251, 253, 283, 320, 357, 380, 428, 437, 451, 514, 655, 670, 684, 699, 758, 766, 767, 768, 769, 772, 776, 786, 787, 827, 862, 878, 879, 880, 882, 884, 894, 896, 898, 928, 965, 1002, 1027, 1055, 1071, 1080, 1094, 1157, 1177, 1192, 1206, 1221, 1350, 1363], "rays_per_sweep": [60, 81, 89, 110, 655, 676, 684, 705, 1177, 1198, 1206, 1227, 1238, 1239], "upon": [60, 89, 179, 180, 181, 182, 183, 184, 185, 186, 655, 684, 776, 823, 824, 825, 826, 827, 828, 829, 830, 1177, 1206], "prior": [60, 62, 89, 91, 134, 136, 137, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 376, 655, 657, 684, 686, 770, 777, 778, 849, 856, 859, 860, 861, 862, 863, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003, 1023, 1177, 1179, 1206, 1208, 1315, 1349], "init_rays_per_sweep": [60, 89, 655, 684, 1177, 1206], "intend": [60, 89, 460, 655, 684, 1103, 1177, 1206], "rate": [60, 89, 478, 479, 484, 485, 486, 487, 488, 489, 490, 495, 504, 655, 684, 1121, 1122, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1138, 1147, 1177, 1206, 1344], "whether": [60, 89, 144, 155, 366, 454, 505, 506, 511, 513, 655, 684, 727, 771, 782, 783, 789, 799, 1013, 1062, 1097, 1148, 1149, 1154, 1156, 1177, 1206, 1356], "regular": [60, 89, 381, 442, 450, 460, 473, 476, 591, 592, 608, 609, 655, 684, 1028, 1085, 1093, 1103, 1116, 1119, 1177, 1206, 1323, 1349], "angular": [60, 89, 525, 565, 566, 655, 684, 1177, 1206, 1255, 1295, 1296], "express": [60, 89, 655, 684, 1177, 1206], "360": [60, 89, 134, 316, 353, 540, 655, 684, 765, 770, 961, 998, 1177, 1206, 1270, 1346, 1351, 1358, 1360], "represent": [60, 89, 409, 655, 684, 1177, 1206], "forbidden": [60, 89, 655, 684, 1177, 1206], "plane": [60, 89, 380, 494, 655, 684, 1027, 1063, 1064, 1137, 1177, 1206, 1360], "180": [60, 89, 120, 122, 513, 540, 655, 684, 715, 717, 782, 783, 1156, 1177, 1206, 1270, 1351, 1363], "gate_z": [60, 72, 89, 101, 655, 667, 684, 696, 1177, 1189, 1206, 1218], "gate_x": [60, 72, 89, 101, 655, 667, 684, 696, 1177, 1189, 1206, 1218], "gate_i": [60, 72, 89, 101, 655, 667, 684, 696, 1177, 1189, 1206, 1218], "system": [60, 89, 121, 122, 123, 129, 133, 136, 137, 141, 142, 362, 372, 380, 439, 449, 497, 655, 684, 716, 717, 718, 758, 766, 777, 778, 786, 787, 1009, 1019, 1027, 1057, 1062, 1082, 1092, 1140, 1177, 1206, 1357, 1362], "earth": [60, 89, 118, 119, 122, 125, 497, 544, 570, 632, 655, 684, 713, 714, 717, 720, 1140, 1177, 1206, 1274, 1300], "radiu": [60, 89, 118, 119, 120, 122, 125, 479, 495, 497, 516, 544, 570, 632, 655, 684, 713, 714, 715, 717, 720, 1059, 1060, 1061, 1062, 1065, 1066, 1122, 1138, 1140, 1159, 1177, 1206, 1274, 1300, 1344, 1355], "init_gate_x_y_z": [60, 89, 655, 684, 1177, 1206], "gate_latitud": [60, 71, 79, 89, 100, 108, 655, 666, 674, 684, 695, 703, 1177, 1188, 1196, 1206, 1217, 1225], "gate_longitud": [60, 71, 79, 89, 100, 108, 655, 666, 674, 684, 695, 703, 1177, 1188, 1196, 1206, 1217, 1225, 1351], "init_gate_longitude_latitud": [60, 89, 655, 684, 1177, 1206, 1351], "gate_altitud": [60, 71, 78, 89, 100, 107, 655, 666, 673, 684, 695, 702, 1177, 1188, 1195, 1206, 1217, 1224], "init_gate_altitud": [60, 89, 655, 684, 1177, 1206, 1351], "actual": [60, 89, 376, 380, 478, 655, 684, 773, 1023, 1027, 1062, 1121, 1177, 1206, 1357, 1365], "flag": [60, 89, 130, 254, 376, 482, 508, 509, 512, 516, 526, 527, 554, 557, 655, 684, 762, 899, 1023, 1125, 1151, 1152, 1155, 1159, 1177, 1206, 1256, 1257, 1284, 1287, 1365], "transit": [60, 71, 72, 89, 100, 101, 164, 176, 179, 182, 183, 204, 211, 215, 216, 217, 218, 254, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 460, 473, 508, 655, 666, 667, 684, 695, 696, 736, 748, 776, 808, 820, 823, 826, 827, 849, 856, 860, 861, 862, 863, 899, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1103, 1116, 1151, 1177, 1188, 1189, 1206, 1217, 1218], "ye": [60, 89, 130, 655, 684, 762, 1177, 1206], "aircraft": [60, 89, 216, 376, 655, 684, 861, 1023, 1177, 1206], "longitudin": [60, 89, 216, 228, 239, 243, 244, 253, 655, 684, 861, 873, 884, 888, 889, 898, 1177, 1206], "orthogon": [60, 89, 455, 494, 655, 684, 1098, 1137, 1177, 1206], "platform": [60, 89, 655, 684, 1177, 1206], "right": [60, 89, 315, 424, 481, 501, 655, 684, 960, 1124, 1144, 1177, 1206, 1323, 1324, 1359], "wing": [60, 89, 655, 684, 1177, 1206], "down": [60, 89, 655, 684, 1177, 1206, 1306], "track": [60, 89, 655, 684, 1177, 1206], "compass": [60, 89, 655, 684, 1177, 1206], "nose": [60, 89, 655, 684, 1177, 1206], "had": [60, 89, 381, 655, 684, 1028, 1177, 1206, 1314, 1365], "georefer": [60, 89, 655, 684, 1177, 1206], "lead": [60, 89, 655, 684, 1177, 1206, 1307, 1318], "centric": [60, 89, 655, 684, 1177, 1206], "avaiabl": [60, 89, 655, 684, 1177, 1206], "radar_paramet": [60, 89, 655, 684, 1177, 1206], "subconvent": [60, 89, 655, 684, 1177, 1206], "calibr": [60, 89, 138, 139, 143, 146, 484, 655, 684, 779, 781, 788, 791, 1127, 1177, 1206], "ngate": [60, 70, 89, 99, 655, 665, 684, 694, 1177, 1187, 1206, 1216, 1238, 1239, 1240, 1351, 1360], "nrai": [60, 70, 89, 99, 447, 545, 655, 665, 684, 694, 1090, 1177, 1187, 1206, 1216, 1240, 1275, 1307, 1351, 1360], "nsweep": [60, 89, 655, 684, 1177, 1206, 1238, 1239, 1332, 1333, 1346, 1360], "loos": [61, 62, 90, 91, 564, 656, 657, 685, 686, 1178, 1179, 1207, 1208, 1294], "existing_field_nam": [62, 91, 657, 686, 1179, 1208], "done": [62, 91, 130, 134, 497, 516, 657, 686, 760, 762, 770, 1140, 1159, 1179, 1208, 1351, 1362, 1363, 1365], "both": [62, 91, 130, 179, 183, 363, 502, 503, 657, 686, 762, 776, 823, 827, 1010, 1145, 1146, 1179, 1208, 1315, 1318, 1320, 1324, 1339, 1349, 1355, 1356, 1357, 1362, 1363], "reflectivity_copi": [62, 91, 657, 686, 1179, 1208], "gatefilt": [63, 92, 130, 131, 132, 134, 137, 179, 180, 181, 182, 183, 184, 185, 186, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 428, 482, 507, 508, 509, 514, 518, 519, 658, 687, 751, 752, 753, 762, 763, 764, 765, 770, 776, 778, 823, 824, 825, 826, 827, 828, 829, 830, 849, 856, 859, 860, 861, 862, 863, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003, 1055, 1065, 1066, 1071, 1125, 1150, 1151, 1152, 1157, 1162, 1163, 1180, 1209, 1310, 1318, 1319, 1320, 1324, 1343, 1350, 1353, 1359, 1363], "updat": [63, 92, 481, 540, 658, 687, 1124, 1180, 1209, 1270, 1307, 1325, 1344, 1349, 1357, 1363], "mask": [63, 92, 130, 131, 132, 135, 140, 155, 157, 160, 164, 171, 175, 176, 179, 181, 182, 183, 184, 185, 186, 204, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 372, 373, 374, 428, 442, 450, 460, 473, 476, 510, 552, 564, 591, 592, 608, 609, 658, 687, 727, 729, 732, 736, 743, 747, 748, 762, 763, 764, 765, 772, 776, 785, 799, 801, 804, 808, 815, 819, 820, 823, 825, 826, 827, 828, 829, 830, 849, 856, 859, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003, 1019, 1020, 1021, 1066, 1071, 1085, 1093, 1103, 1116, 1119, 1153, 1180, 1209, 1241, 1282, 1294, 1307, 1309, 1318, 1319, 1344, 1350, 1351, 1352, 1357, 1358, 1359, 1360], "condit": [63, 92, 130, 151, 155, 157, 164, 171, 176, 381, 658, 687, 723, 727, 729, 736, 743, 748, 762, 795, 799, 801, 808, 815, 820, 1028, 1180, 1209, 1310, 1352, 1356], "append": [63, 92, 658, 687, 1180, 1209, 1346], "filtered_": [63, 92, 658, 687, 1180, 1209], "check": [64, 73, 93, 102, 131, 132, 134, 375, 427, 478, 481, 510, 544, 554, 570, 575, 659, 668, 688, 697, 763, 764, 765, 770, 782, 783, 1022, 1070, 1121, 1124, 1153, 1181, 1190, 1210, 1219, 1274, 1284, 1300, 1305, 1349, 1362, 1363, 1364], "keyerror": [64, 93, 417, 418, 659, 688, 1038, 1039, 1049, 1050, 1181, 1210, 1362], "array_lik": [65, 94, 556, 660, 689, 1182, 1211, 1286], "view": [66, 67, 69, 95, 96, 98, 383, 415, 416, 422, 661, 662, 664, 690, 691, 693, 1031, 1036, 1037, 1043, 1047, 1048, 1053, 1183, 1184, 1186, 1212, 1213, 1215, 1324, 1353, 1355, 1360], "possibl": [66, 67, 69, 95, 96, 98, 376, 437, 511, 541, 548, 661, 662, 664, 690, 691, 693, 1023, 1080, 1154, 1183, 1184, 1186, 1212, 1213, 1215, 1271, 1278, 1307, 1323, 1344, 1353, 1355, 1357, 1358], "underli": [66, 67, 69, 95, 96, 98, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 363, 661, 662, 664, 690, 691, 693, 849, 856, 860, 861, 862, 863, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1010, 1183, 1184, 1186, 1212, 1213, 1215, 1349], "get_gate_x_y_z": [69, 98, 664, 693, 1186, 1215, 1334, 1335], "obtain": [69, 72, 98, 101, 127, 145, 433, 443, 453, 454, 463, 481, 511, 567, 664, 667, 693, 696, 754, 782, 790, 1076, 1086, 1096, 1097, 1106, 1124, 1154, 1186, 1189, 1215, 1218, 1297, 1346, 1351, 1358, 1359, 1363], "plot": [69, 72, 98, 101, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 442, 450, 460, 473, 476, 514, 519, 664, 667, 693, 696, 832, 833, 834, 835, 836, 837, 838, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 932, 933, 934, 935, 936, 937, 938, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1085, 1093, 1103, 1116, 1119, 1157, 1163, 1186, 1189, 1215, 1218, 1307, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1340, 1341, 1342, 1344, 1347, 1349, 1351, 1352, 1353, 1355, 1356, 1359, 1361], "spatial": [69, 72, 98, 101, 130, 664, 667, 693, 696, 762, 1186, 1189, 1215, 1218, 1307, 1355, 1359], "context": [69, 72, 98, 101, 664, 667, 693, 696, 1186, 1189, 1215, 1218, 1342, 1349, 1363], "request": [69, 98, 123, 372, 503, 664, 693, 718, 1019, 1065, 1066, 1146, 1186, 1215, 1307, 1349, 1363], "area": [70, 99, 204, 206, 211, 215, 216, 217, 218, 219, 271, 273, 278, 282, 283, 284, 285, 304, 306, 314, 315, 319, 320, 321, 322, 341, 343, 351, 352, 356, 357, 358, 359, 478, 497, 509, 516, 552, 665, 694, 761, 849, 851, 856, 860, 861, 862, 863, 864, 916, 918, 923, 927, 928, 929, 930, 949, 951, 959, 960, 964, 965, 966, 967, 986, 988, 996, 997, 1001, 1002, 1003, 1004, 1121, 1140, 1152, 1159, 1187, 1216, 1282], "squar": [70, 99, 427, 502, 505, 506, 507, 518, 531, 665, 694, 782, 1070, 1145, 1148, 1149, 1150, 1162, 1187, 1216, 1261], "assumpt": [70, 99, 494, 507, 665, 694, 1137, 1150, 1187, 1216], "size": [70, 99, 130, 131, 134, 182, 207, 274, 307, 344, 408, 425, 427, 437, 448, 465, 468, 469, 479, 482, 495, 507, 509, 511, 525, 542, 551, 559, 574, 665, 694, 753, 762, 763, 765, 770, 826, 852, 919, 952, 989, 1061, 1063, 1064, 1065, 1066, 1068, 1070, 1080, 1091, 1108, 1111, 1112, 1122, 1125, 1138, 1150, 1152, 1154, 1187, 1216, 1241, 1255, 1272, 1281, 1289, 1304, 1325, 1338, 1342, 1344], "reset_gate_coord": [71, 100, 666, 695, 1188, 1217], "filter_transit": [71, 72, 100, 101, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 666, 667, 695, 696, 849, 856, 860, 861, 862, 863, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1188, 1189, 1217, 1218], "With": [71, 72, 100, 101, 666, 667, 695, 696, 1188, 1189, 1217, 1218, 1349, 1350, 1351], "therefor": [71, 72, 100, 101, 507, 666, 667, 695, 696, 1150, 1188, 1189, 1217, 1218, 1353, 1359, 1360], "more": [71, 72, 77, 100, 101, 106, 131, 134, 234, 380, 428, 478, 479, 482, 495, 516, 533, 534, 666, 667, 672, 695, 696, 701, 763, 770, 782, 879, 1027, 1062, 1065, 1066, 1071, 1121, 1122, 1125, 1138, 1159, 1188, 1189, 1194, 1217, 1218, 1223, 1263, 1264, 1307, 1318, 1323, 1334, 1335, 1349, 1353, 1357, 1358, 1359, 1360, 1363], "effici": [71, 72, 100, 101, 478, 532, 666, 667, 695, 696, 1065, 1121, 1188, 1189, 1217, 1218, 1262, 1349, 1353], "than": [71, 72, 100, 101, 131, 137, 140, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 478, 479, 495, 497, 507, 540, 552, 562, 666, 667, 695, 696, 763, 773, 778, 785, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1121, 1122, 1138, 1140, 1150, 1188, 1189, 1217, 1218, 1270, 1282, 1292, 1307, 1344, 1357, 1358, 1359, 1365], "through": [71, 72, 100, 101, 218, 284, 321, 358, 443, 463, 504, 666, 667, 695, 696, 863, 929, 966, 1003, 1086, 1106, 1147, 1188, 1189, 1217, 1218, 1318, 1323, 1358, 1363], "pleas": [71, 100, 287, 324, 577, 666, 695, 932, 969, 1188, 1217, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "get_field": [72, 101, 667, 696, 1189, 1218, 1334, 1335, 1357], "check_uniform": [73, 102, 668, 697, 1190, 1219], "lookuperror": [73, 102, 668, 697, 1190, 1219], "except": [73, 102, 380, 668, 697, 1027, 1044, 1190, 1219, 1355], "skip": [73, 102, 131, 132, 375, 427, 668, 697, 763, 764, 1022, 1070, 1190, 1219, 1358, 1363], "nyquist_veloc": [73, 102, 131, 132, 382, 668, 697, 763, 764, 1029, 1190, 1219, 1353, 1360], "slice": [74, 86, 103, 115, 230, 231, 236, 237, 238, 239, 250, 251, 252, 253, 669, 681, 698, 710, 875, 876, 881, 882, 883, 884, 895, 896, 897, 898, 1191, 1203, 1220, 1232, 1338, 1355, 1358, 1360], "out": [77, 106, 137, 181, 185, 378, 379, 380, 381, 382, 428, 496, 505, 506, 576, 580, 591, 592, 608, 609, 672, 701, 765, 768, 769, 778, 782, 783, 784, 825, 829, 1025, 1026, 1027, 1028, 1029, 1071, 1139, 1148, 1149, 1194, 1223, 1319, 1320, 1324, 1335, 1343, 1345, 1349, 1355, 1359, 1362, 1363, 1364], "_io": [77, 106, 672, 701, 1194, 1223], "textiowrapp": [77, 106, 672, 701, 1194, 1223], "stdout": [77, 106, 576, 672, 701, 1194, 1223], "encod": [77, 106, 381, 520, 672, 701, 1028, 1194, 1223, 1307], "utf": [77, 106, 672, 701, 1194, 1223], "print": [77, 106, 136, 137, 221, 240, 376, 507, 576, 580, 591, 592, 608, 609, 672, 701, 751, 777, 778, 866, 885, 1023, 1150, 1194, 1223, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1344, 1352, 1356, 1357, 1360], "compact": [77, 106, 672, 701, 1194, 1223], "f": [77, 106, 246, 352, 421, 672, 701, 891, 997, 1042, 1052, 1194, 1223, 1323, 1332, 1333, 1337, 1344, 1349, 1358, 1365], "minim": [77, 106, 481, 507, 516, 672, 701, 1124, 1150, 1159, 1194, 1223], "everyth": [77, 106, 672, 701, 1194, 1223, 1315, 1363], "output": [77, 106, 380, 428, 443, 463, 478, 481, 482, 497, 504, 511, 513, 544, 672, 701, 757, 1027, 1063, 1071, 1086, 1106, 1121, 1124, 1125, 1140, 1147, 1154, 1156, 1194, 1223, 1274, 1307, 1349, 1357, 1359], "screen": [77, 106, 672, 701, 1194, 1223], "gate_": [80, 109, 675, 704, 1197, 1226], "iter": [82, 83, 84, 85, 86, 87, 88, 111, 112, 113, 114, 115, 116, 117, 397, 421, 437, 452, 483, 507, 509, 542, 677, 678, 679, 680, 681, 682, 683, 706, 707, 708, 709, 710, 711, 712, 774, 1042, 1052, 1080, 1095, 1126, 1150, 1152, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1272, 1360], "over": [84, 87, 88, 113, 116, 117, 130, 131, 135, 181, 204, 206, 211, 215, 216, 217, 218, 235, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 397, 478, 479, 495, 497, 500, 513, 515, 541, 551, 679, 682, 683, 708, 711, 712, 760, 761, 762, 763, 767, 772, 782, 783, 825, 849, 851, 856, 860, 861, 862, 863, 880, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1121, 1122, 1138, 1140, 1143, 1156, 1158, 1201, 1204, 1205, 1230, 1233, 1234, 1271, 1281, 1318, 1344, 1346, 1349, 1352, 1358, 1360], "npuls": [89, 542, 547, 548, 549, 558, 559, 560, 561, 684, 1206, 1272, 1277, 1278, 1279, 1288, 1289, 1290, 1291], "doppler_veloc": [89, 481, 684, 1124, 1206], "doppler_frequ": [89, 684, 1206], "puls": [89, 138, 146, 452, 453, 497, 542, 547, 548, 549, 554, 558, 559, 560, 561, 684, 774, 779, 791, 1095, 1096, 1140, 1206, 1240, 1272, 1277, 1278, 1279, 1284, 1288, 1289, 1290, 1291, 1353], "npulses_max": [89, 684, 1206, 1240], "frequenc": [89, 382, 425, 437, 453, 454, 475, 484, 485, 486, 488, 489, 497, 498, 499, 507, 508, 509, 517, 684, 752, 753, 1029, 1068, 1080, 1096, 1097, 1118, 1127, 1128, 1129, 1131, 1132, 1140, 1141, 1142, 1150, 1151, 1152, 1160, 1206, 1359], "ke": [118, 119, 120, 497, 632, 713, 714, 715, 1140, 1307], "kilomet": [118, 479, 495, 713, 1063, 1122, 1138], "effect": [118, 119, 120, 138, 146, 155, 157, 164, 171, 176, 216, 475, 497, 713, 714, 715, 727, 729, 736, 743, 748, 779, 791, 799, 801, 808, 815, 820, 861, 1065, 1066, 1118, 1140, 1334, 1358], "scale": [118, 119, 120, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 381, 382, 444, 478, 507, 508, 713, 714, 715, 849, 856, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1028, 1029, 1065, 1066, 1087, 1121, 1150, 1151, 1326, 1359], "equat": [118, 507, 541, 713, 1150, 1271], "28": [118, 713, 1340, 1344, 1346, 1349, 1358, 1363], "b": [118, 478, 479, 495, 508, 519, 713, 1006, 1121, 1122, 1138, 1151, 1163, 1363], "doviak": [118, 425, 713, 1068], "zrnic": [118, 425, 473, 713, 1068, 1116], "sqrt": [118, 122, 497, 713, 717, 1140, 1334, 1335, 1346, 1358], "r": [118, 121, 122, 123, 124, 125, 130, 132, 136, 137, 194, 209, 210, 232, 248, 261, 276, 277, 294, 309, 310, 311, 312, 331, 346, 347, 348, 349, 432, 442, 446, 451, 452, 460, 466, 478, 479, 482, 485, 488, 489, 490, 495, 511, 513, 516, 518, 541, 542, 552, 713, 716, 717, 718, 719, 720, 762, 764, 777, 778, 839, 854, 855, 877, 893, 906, 921, 922, 939, 954, 955, 956, 957, 976, 991, 992, 993, 994, 1075, 1085, 1089, 1094, 1095, 1103, 1109, 1121, 1122, 1125, 1128, 1131, 1132, 1133, 1138, 1154, 1156, 1159, 1162, 1271, 1272, 1282, 1314, 1326, 1334, 1335, 1344, 1363], "sin": [118, 122, 125, 494, 713, 717, 720, 1137], "theta_": [118, 713], "arcsin": [118, 122, 713, 717], "frac": [118, 713], "theta_a": [118, 713], "arc": [118, 544, 713, 1274], "length": [118, 136, 137, 140, 141, 142, 482, 497, 507, 511, 547, 558, 559, 713, 777, 778, 782, 783, 784, 785, 786, 787, 1125, 1140, 1150, 1154, 1277, 1288, 1289], "6371": [118, 122, 125, 544, 570, 713, 717, 720, 1274, 1300], "weather": [118, 130, 138, 139, 143, 146, 442, 452, 460, 497, 507, 542, 640, 713, 762, 779, 781, 788, 791, 1062, 1085, 1095, 1103, 1140, 1150, 1272, 1314, 1323, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "edit": [118, 713, 1363], "1993": [118, 425, 713, 1068], "21": [118, 713, 1307, 1357], "vector": [119, 123, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 447, 502, 504, 505, 506, 529, 531, 532, 714, 718, 771, 780, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1090, 1145, 1147, 1148, 1149, 1259, 1261, 1262, 1358], "util": [119, 130, 131, 216, 484, 714, 753, 762, 763, 861, 1127, 1164, 1309, 1315, 1326, 1339, 1342, 1344, 1357, 1358, 1359, 1363], "antenna_to_cartesian": [119, 714], "cartograph": [121, 122, 123, 124, 125, 324, 716, 717, 718, 719, 720, 969], "build": [121, 123, 124, 151, 155, 157, 164, 171, 176, 382, 576, 716, 718, 719, 723, 727, 729, 736, 743, 748, 795, 799, 801, 808, 815, 820, 1029, 1349, 1362, 1363], "desir": [121, 123, 124, 155, 157, 164, 171, 176, 383, 460, 479, 495, 518, 548, 549, 561, 571, 572, 716, 718, 719, 727, 729, 736, 743, 748, 799, 801, 808, 815, 820, 1031, 1103, 1122, 1138, 1162, 1236, 1278, 1279, 1291, 1301, 1302, 1342, 1356], "6370997": [122, 125, 717, 720], "rho": [122, 717, 1357], "arctan2": [122, 717, 1346, 1358], "snyder": [122, 125, 717, 720], "manual": [122, 125, 717, 720, 1349], "geolog": [122, 125, 717, 720], "survei": [122, 125, 717, 720], "profession": [122, 125, 717, 720], "paper": [122, 125, 482, 717, 720, 1125, 1349, 1363], "1395": [122, 125, 717, 720], "1987": [122, 125, 717, 720], "pp": [122, 125, 425, 442, 450, 460, 473, 717, 720, 1068, 1085, 1093, 1103, 1116], "191": [122, 125, 717, 720], "202": [122, 125, 717, 720, 1334, 1340, 1361], "find": [123, 131, 134, 495, 496, 513, 543, 718, 763, 770, 782, 783, 1055, 1062, 1065, 1066, 1138, 1139, 1156, 1273, 1315, 1358, 1365], "arcco": [125, 720], "no_altitude_transform": [126, 721], "wgs84": [126, 218, 284, 321, 358, 380, 721, 863, 929, 966, 1003, 1027], "ch1903": [126, 721], "lv03": [126, 721], "formula": [126, 425, 721, 1068], "formeln": [126, 721], "und": [126, 721], "konstanten": [126, 721], "f\u00fcr": [126, 721], "die": [126, 721], "berechnung": [126, 721], "der": [126, 721], "schweizerischen": [126, 721], "schiefachsigen": [126, 721], "zylinderprojekt": [126, 721], "zwischen": [126, 721], "koordinatensystemen": [126, 721], "chapter": [126, 721], "n\u00e4herungsl\u00f6sungen": [126, 721], "bundesamt": [126, 721], "landestopografi": [126, 721], "swisstopo": [126, 721], "admin": [126, 721, 1363], "ch": [126, 721, 1345, 1346], "oktob": [126, 721], "2008": [126, 478, 511, 721, 1121, 1154, 1315], "input": [126, 136, 137, 380, 443, 451, 452, 463, 480, 481, 495, 497, 503, 504, 509, 511, 528, 540, 552, 721, 777, 778, 1027, 1063, 1064, 1086, 1094, 1095, 1106, 1123, 1124, 1138, 1140, 1146, 1147, 1152, 1154, 1258, 1270, 1282, 1344, 1356, 1359], "46": [126, 218, 284, 321, 358, 721, 863, 929, 966, 1003, 1342, 1359], "38": [126, 721, 1315], "87": [126, 721, 1062], "43": [126, 721, 1307], "49": [126, 721], "79": [126, 721], "650": [126, 721], "60": [126, 721, 1055, 1309, 1314, 1318, 1320, 1325, 1351, 1353, 1355, 1359], "result": [126, 130, 131, 132, 155, 157, 164, 171, 176, 204, 211, 214, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 362, 379, 383, 428, 481, 505, 506, 511, 512, 514, 518, 519, 520, 530, 542, 568, 721, 727, 729, 736, 743, 748, 760, 761, 762, 763, 764, 780, 799, 801, 808, 815, 820, 849, 856, 859, 860, 861, 862, 863, 876, 882, 884, 894, 896, 898, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003, 1009, 1026, 1031, 1063, 1064, 1066, 1071, 1124, 1148, 1149, 1154, 1155, 1157, 1162, 1163, 1260, 1272, 1298, 1315, 1345, 1349, 1355, 1358, 1363], "chy": [126, 721], "699": [126, 721], "999": [126, 130, 383, 721, 762, 1031, 1315, 1316, 1361], "76": [126, 721], "700000": [126, 721], "chx": [126, 721], "99": [126, 433, 513, 721, 1076, 1156, 1323], "97": [126, 721, 768, 769, 1318, 1320, 1324, 1326, 1338, 1342, 1344, 1351], "100000": [126, 721, 1355, 1358], "chh": [126, 721], "600": [126, 721, 1351], "05": [126, 130, 517, 721, 762, 1065, 1066, 1160, 1321, 1338, 1342, 1347, 1361], "ml_top": [127, 128, 433, 501, 754, 755, 1076, 1144], "3000": [127, 128, 433, 500, 516, 754, 755, 1076, 1143, 1159, 1351, 1355], "ml_thick": [127, 128, 433, 754, 755, 1076], "200": [127, 128, 425, 433, 478, 513, 542, 560, 561, 754, 755, 760, 761, 1068, 1076, 1121, 1156, 1272, 1290, 1291, 1357, 1363], "val_ml": [127, 128, 754, 755], "val_dr": [127, 128, 754, 755], "h_max": [127, 128, 433, 513, 754, 755, 760, 761, 1076, 1156], "6000": [127, 128, 433, 511, 513, 754, 755, 760, 761, 1076, 1154, 1156, 1351, 1355], "h_re": [127, 128, 433, 513, 754, 755, 760, 761, 1076, 1156], "max_weight": [127, 754, 760, 761], "vpr_theo_dict": [127, 754], "refl_field": [127, 129, 133, 136, 137, 141, 142, 179, 182, 183, 426, 453, 454, 455, 461, 462, 475, 478, 479, 480, 482, 485, 487, 488, 489, 490, 504, 505, 511, 516, 751, 752, 753, 754, 758, 760, 761, 766, 767, 768, 769, 776, 777, 778, 782, 783, 784, 786, 787, 823, 826, 827, 1066, 1069, 1096, 1097, 1098, 1104, 1105, 1118, 1121, 1122, 1123, 1125, 1128, 1130, 1131, 1132, 1133, 1147, 1148, 1154, 1159, 1309, 1344, 1345, 1359], "normalized_reflect": [127, 754], "comput": [127, 128, 139, 146, 182, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 495, 497, 500, 504, 505, 506, 507, 508, 509, 511, 513, 515, 518, 521, 522, 523, 524, 525, 528, 529, 530, 531, 532, 542, 551, 555, 556, 558, 560, 561, 565, 566, 574, 752, 753, 754, 755, 757, 760, 761, 773, 774, 775, 780, 781, 782, 783, 791, 826, 1068, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1126, 1138, 1140, 1143, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1156, 1158, 1162, 1251, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1262, 1272, 1281, 1285, 1286, 1288, 1290, 1291, 1295, 1296, 1304, 1345, 1346, 1349, 1358], "appar": [127, 433, 754, 1076], "vpr": [127, 754, 760, 761, 1307, 1349], "melt": [127, 128, 181, 185, 433, 482, 485, 501, 507, 511, 512, 513, 514, 552, 754, 755, 760, 761, 767, 768, 782, 783, 784, 825, 829, 1076, 1125, 1128, 1144, 1150, 1154, 1155, 1156, 1157, 1282, 1307, 1326, 1344, 1345, 1359], "layer": [127, 128, 135, 181, 185, 380, 433, 482, 485, 501, 507, 511, 512, 513, 514, 751, 752, 753, 754, 755, 760, 761, 767, 768, 772, 782, 783, 784, 825, 829, 1027, 1076, 1125, 1128, 1144, 1150, 1154, 1155, 1156, 1157, 1241, 1307, 1359], "top": [127, 128, 138, 146, 240, 315, 433, 482, 491, 492, 501, 510, 511, 512, 513, 754, 755, 760, 761, 779, 791, 885, 960, 1066, 1076, 1125, 1134, 1135, 1144, 1153, 1154, 1155, 1156, 1323, 1342, 1355, 1363], "asl": [127, 128, 433, 754, 755, 1076], "thick": [127, 128, 135, 181, 185, 433, 513, 754, 755, 760, 761, 767, 768, 772, 782, 783, 784, 825, 829, 1076, 1156], "peak": [127, 128, 433, 511, 513, 541, 754, 755, 760, 761, 1076, 1154, 1156, 1271, 1307, 1353], "decreas": [127, 128, 480, 500, 504, 754, 755, 760, 761, 1123, 1143, 1147], "ratio": [127, 128, 182, 183, 184, 219, 285, 322, 359, 426, 435, 436, 497, 754, 755, 760, 761, 769, 776, 826, 827, 828, 864, 930, 967, 1004, 1069, 1078, 1079, 1140, 1359, 1360], "theoret": [127, 146, 433, 517, 754, 760, 761, 791, 1062, 1076, 1160], "beam": [127, 139, 433, 484, 497, 753, 754, 781, 1061, 1065, 1066, 1076, 1127, 1140], "multipli": [127, 433, 443, 479, 495, 513, 754, 1006, 1076, 1086, 1122, 1138, 1156, 1344, 1351], "radar_out": [127, 433, 754, 1076], "normal": [127, 136, 183, 204, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 410, 504, 564, 751, 754, 760, 761, 776, 777, 827, 849, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 986, 996, 997, 1001, 1002, 1003, 1147, 1294, 1334], "conta": [127, 128, 433, 482, 511, 512, 513, 578, 754, 755, 1076, 1125, 1154, 1155, 1156], "ideal": [128, 755], "val_theo_dict": [128, 755], "bottom": [128, 313, 315, 350, 433, 482, 501, 511, 512, 513, 755, 958, 960, 995, 1076, 1125, 1144, 1154, 1155, 1156, 1323, 1325], "ind_rmin": [129, 133, 141, 142, 451, 758, 766, 767, 768, 769, 786, 787, 1094], "10": [129, 133, 136, 137, 141, 142, 143, 146, 151, 184, 186, 218, 284, 321, 358, 425, 437, 442, 452, 473, 479, 482, 493, 495, 504, 508, 509, 511, 513, 542, 552, 723, 758, 765, 766, 767, 768, 769, 774, 777, 778, 786, 787, 788, 791, 795, 828, 830, 863, 929, 966, 1003, 1062, 1066, 1068, 1080, 1085, 1095, 1116, 1122, 1125, 1136, 1138, 1147, 1151, 1152, 1154, 1156, 1272, 1282, 1310, 1315, 1318, 1319, 1323, 1326, 1327, 1329, 1331, 1334, 1335, 1338, 1344, 1346, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1363], "ind_rmax": [129, 133, 141, 142, 758, 766, 767, 768, 769, 786, 787], "500": [129, 133, 141, 142, 511, 758, 766, 767, 768, 769, 786, 787, 1055, 1154, 1318, 1324, 1328, 1357, 1358], "min_rcon": [129, 133, 141, 142, 758, 766, 782, 783, 786, 787], "11": [129, 133, 140, 141, 142, 218, 284, 321, 358, 434, 479, 495, 505, 506, 568, 758, 766, 785, 786, 787, 863, 929, 966, 1003, 1077, 1122, 1138, 1148, 1149, 1298, 1315, 1342, 1356, 1360], "zmin": [129, 133, 141, 142, 758, 766, 767, 768, 769, 786, 787, 1358], "20": [129, 133, 141, 142, 179, 182, 183, 433, 511, 513, 514, 758, 760, 761, 766, 767, 768, 773, 776, 782, 783, 784, 786, 787, 823, 826, 827, 1076, 1154, 1156, 1157, 1314, 1315, 1318, 1324, 1325, 1326, 1329, 1331, 1332, 1333, 1334, 1335, 1337, 1343, 1344, 1351, 1355, 1358, 1360], "zmax": [129, 133, 141, 142, 758, 766, 767, 768, 769, 786, 787, 1358], "40": [129, 132, 133, 141, 142, 246, 437, 478, 505, 547, 758, 764, 766, 767, 786, 787, 891, 1080, 1121, 1148, 1277, 1310, 1320, 1325, 1329, 1331, 1334, 1344, 1357, 1358, 1359], "psidp_field": [129, 141, 142, 507, 508, 509, 758, 786, 787, 1150, 1151, 1152, 1345, 1359], "public": [129, 133, 758, 766, 1306, 1351, 1352, 1353, 1355, 1356, 1357, 1360], "min": [129, 133, 141, 142, 179, 206, 273, 306, 343, 451, 511, 554, 758, 760, 761, 766, 767, 768, 769, 773, 786, 787, 823, 851, 918, 951, 988, 1094, 1154, 1284, 1346, 1358], "max": [129, 133, 141, 142, 179, 206, 273, 306, 343, 380, 451, 482, 511, 554, 758, 760, 761, 766, 767, 768, 769, 782, 783, 786, 787, 823, 851, 918, 951, 988, 1027, 1094, 1125, 1154, 1284, 1314, 1318, 1323, 1324, 1329, 1337, 1346, 1358], "look": [129, 133, 141, 142, 144, 145, 428, 450, 451, 511, 514, 543, 558, 560, 561, 758, 766, 767, 768, 769, 773, 782, 783, 784, 786, 787, 789, 790, 1071, 1093, 1094, 1154, 1157, 1273, 1288, 1290, 1291, 1314, 1315, 1318, 1325, 1349, 1351, 1353, 1355, 1358, 1359, 1360], "continu": [129, 130, 132, 133, 136, 141, 142, 512, 758, 762, 764, 766, 777, 786, 787, 1155], "consecut": [129, 133, 141, 142, 511, 542, 758, 766, 782, 783, 786, 787, 1154, 1272], "rain": [129, 133, 141, 142, 433, 442, 460, 478, 484, 485, 486, 487, 490, 495, 516, 751, 753, 758, 766, 767, 768, 782, 783, 784, 786, 787, 1076, 1085, 1103, 1121, 1127, 1128, 1129, 1130, 1133, 1138, 1159, 1326, 1334, 1344, 1345, 1358, 1359], "cell": [129, 133, 141, 142, 758, 766, 786, 787, 1334], "phidp_dict": [129, 141, 142, 438, 439, 758, 786, 787, 1081, 1082], "last_radar": [130, 762], "sonde_profil": [130, 762], "filt": [130, 762], "rsl_badval": [130, 762], "131072": [130, 762], "keep_origin": [130, 131, 132, 762, 763, 764], "set_limit": [130, 131, 132, 762, 763, 764, 1326, 1327, 1328, 1330, 1332, 1333, 1334, 1335, 1337], "vel_field": [130, 131, 132, 179, 427, 494, 519, 762, 763, 764, 823, 1070, 1137, 1163, 1353], "corr_vel_field": [130, 131, 132, 762, 763, 764], "last_vel_field": [130, 762], "debug": [130, 136, 137, 221, 240, 376, 507, 576, 751, 762, 777, 778, 866, 885, 1023, 1150], "max_shear": [130, 762], "sign": [130, 493, 518, 519, 762, 1136, 1162, 1163, 1307, 1334, 1335, 1358], "dealia": [130, 131, 132, 481, 762, 763, 764, 1124, 1307, 1308, 1311, 1312, 1353, 1358, 1361], "4dd": [130, 762, 1307], "univers": [130, 377, 490, 762, 1024, 1133, 1349], "washington": [130, 762], "previou": [130, 315, 352, 481, 511, 760, 761, 762, 960, 997, 1124, 1154], "sound": [130, 493, 518, 519, 762, 1136, 1162, 1163], "must": [130, 315, 365, 369, 370, 375, 381, 425, 478, 482, 497, 502, 507, 508, 509, 512, 520, 569, 751, 752, 753, 762, 960, 1012, 1016, 1017, 1022, 1028, 1068, 1121, 1125, 1140, 1145, 1150, 1151, 1152, 1155, 1299, 1344, 1349, 1357, 1362, 1363], "For": [130, 230, 236, 238, 250, 252, 370, 380, 505, 506, 507, 762, 875, 881, 883, 895, 897, 1017, 1027, 1065, 1148, 1149, 1150, 1314, 1318, 1345, 1356, 1360, 1363, 1365], "best": [130, 762], "argument": [130, 131, 132, 204, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 249, 250, 251, 252, 253, 271, 278, 282, 283, 284, 304, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 348, 349, 350, 351, 352, 353, 356, 357, 358, 372, 374, 382, 383, 508, 509, 762, 763, 764, 849, 856, 860, 861, 862, 863, 875, 876, 878, 879, 880, 881, 882, 883, 884, 894, 895, 896, 897, 898, 916, 923, 927, 928, 929, 949, 956, 957, 958, 959, 960, 961, 964, 965, 966, 986, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1019, 1021, 1029, 1031, 1062, 1066, 1151, 1152, 1307, 1363], "_fourdd_interfac": [130, 762], "fourdd_dealia": [130, 762], "fine": [130, 762], "tune": [130, 762, 1344], "behavior": [130, 315, 370, 383, 762, 960, 1017, 1031], "fourdd": [130, 762], "dealias": [130, 131, 132, 481, 762, 763, 764, 1124, 1310, 1314, 1349, 1350, 1357, 1363], "reflectivity_horizont": [130, 751, 762, 1243, 1309, 1318, 1323, 1325, 1329, 1331, 1332, 1333, 1337, 1339, 1342, 1343, 1344, 1351, 1352], "mean_doppler_veloc": [130, 762, 1337, 1342, 1351], "successfulli": [130, 762], "greatli": [130, 762], "improv": [130, 508, 509, 552, 762, 1151, 1152, 1282, 1307, 1326], "final": [130, 437, 483, 508, 509, 762, 1080, 1126, 1151, 1152, 1344, 1358], "horizontalwindprofil": [130, 364, 365, 519, 569, 762, 1011, 1012, 1163, 1299, 1363], "sond": [130, 131, 364, 365, 496, 762, 763, 1011, 1012, 1139, 1310], "moment_based_gate_filt": [130, 131, 132, 762, 763, 764, 1066], "bergen": [130, 762], "alber": [130, 762], "bad": [130, 482, 507, 508, 509, 516, 762, 1125, 1150, 1151, 1152, 1159, 1358], "rsl": [130, 363, 375, 376, 762, 1010, 1022, 1023, 1307, 1349, 1362], "procedur": [130, 131, 132, 762, 763, 764], "fail": [130, 131, 132, 370, 380, 762, 763, 764, 1017, 1027, 1363], "element": [130, 131, 132, 134, 151, 382, 510, 555, 556, 565, 566, 723, 762, 763, 764, 765, 770, 795, 1029, 1063, 1064, 1065, 1066, 1153, 1285, 1286, 1295, 1296, 1358], "maxshear": [130, 762], "shear": [130, 491, 492, 762, 1134, 1135], "incorpor": [130, 495, 762, 1138, 1344], "toward": [130, 493, 518, 519, 762, 1136, 1162, 1163], "neg": [130, 204, 215, 271, 282, 304, 319, 341, 356, 481, 493, 507, 518, 519, 540, 762, 849, 860, 916, 927, 949, 964, 986, 1001, 1124, 1136, 1150, 1162, 1163, 1270, 1307, 1323, 1358], "compthresh": [130, 762], "fraction": [130, 762, 1063, 1064, 1344, 1360], "threshold": [130, 134, 179, 181, 182, 183, 184, 185, 186, 437, 478, 479, 482, 483, 485, 488, 489, 493, 495, 541, 542, 547, 548, 549, 552, 558, 559, 560, 561, 762, 765, 770, 775, 776, 823, 825, 826, 827, 828, 829, 830, 1006, 1080, 1121, 1122, 1125, 1126, 1128, 1131, 1132, 1136, 1138, 1271, 1272, 1277, 1278, 1279, 1282, 1288, 1289, 1290, 1291, 1344, 1353, 1356], "mark": [130, 151, 155, 164, 176, 723, 727, 736, 748, 762, 795, 799, 808, 820], "begin": [130, 131, 132, 136, 137, 151, 189, 191, 211, 215, 256, 258, 278, 282, 289, 291, 314, 319, 326, 328, 351, 356, 370, 371, 374, 376, 723, 762, 763, 764, 777, 778, 795, 834, 836, 856, 860, 901, 903, 923, 927, 934, 936, 959, 964, 971, 973, 996, 1001, 1017, 1018, 1021, 1023], "unfold": [130, 131, 136, 137, 507, 762, 763, 777, 778, 1150, 1358], "compthresh2": [130, 762], "thresh": [130, 485, 488, 489, 762, 1128, 1131, 1132, 1359], "adjac": [130, 762], "count": [130, 762, 1318, 1353, 1360], "against": [130, 155, 727, 762, 799, 1334], "question": [130, 762, 1007, 1066], "ckval": [130, 762], "absolut": [130, 215, 282, 319, 356, 525, 562, 762, 860, 927, 964, 1001, 1255, 1292], "below": [130, 135, 136, 137, 155, 169, 179, 181, 182, 183, 184, 185, 186, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 478, 479, 485, 488, 489, 495, 507, 513, 540, 541, 727, 741, 762, 765, 772, 776, 777, 778, 799, 813, 823, 825, 826, 827, 828, 829, 830, 849, 856, 859, 860, 861, 862, 863, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003, 1065, 1066, 1121, 1122, 1128, 1131, 1132, 1138, 1150, 1156, 1270, 1271, 1323, 1344, 1351, 1353, 1356, 1357, 1359, 1364], "stdthresh": [130, 762], "deviat": [130, 451, 493, 523, 524, 551, 556, 762, 773, 774, 780, 792, 1094, 1136, 1241, 1253, 1254, 1281, 1286, 1353], "window": [130, 136, 137, 140, 141, 142, 182, 427, 443, 448, 463, 465, 468, 469, 505, 506, 509, 511, 518, 525, 540, 547, 551, 558, 559, 568, 574, 753, 762, 777, 778, 782, 783, 784, 785, 786, 787, 826, 1070, 1086, 1091, 1106, 1108, 1111, 1112, 1148, 1149, 1152, 1154, 1162, 1255, 1270, 1277, 1281, 1288, 1289, 1298, 1304, 1349, 1363], "portion": [130, 762, 1355], "epsilon": [130, 762], "compar": [130, 155, 428, 437, 482, 513, 525, 542, 727, 760, 761, 762, 799, 1071, 1080, 1125, 1156, 1255, 1272, 1307, 1312, 1317, 1321, 1323, 1344, 1358, 1359, 1361, 1363], "miss": [130, 482, 507, 508, 509, 516, 762, 1125, 1150, 1151, 1152, 1159, 1307, 1315], "maxcount": [130, 762], "allow": [130, 134, 203, 270, 303, 340, 437, 478, 482, 493, 511, 540, 762, 765, 770, 848, 915, 948, 985, 1055, 1080, 1121, 1125, 1136, 1154, 1270, 1318, 1360, 1365], "pass2": [130, 762], "retain": [130, 131, 132, 179, 181, 182, 183, 184, 185, 186, 575, 762, 763, 764, 776, 823, 825, 826, 827, 828, 829, 830, 1305], "rm": [130, 762], "left": [130, 313, 315, 350, 424, 481, 501, 542, 762, 958, 960, 995, 1124, 1144, 1272, 1323, 1325, 1359], "proxim": [130, 762], "side": [130, 762], "doubl": [130, 380, 762, 1027, 1344], "captur": [130, 478, 762, 1121], "suffici": [130, 482, 762, 1125], "good": [130, 131, 762, 763, 1359], "mingood": [130, 762], "ba_mincount": [130, 762], "neighbor": [130, 372, 762, 1019, 1066, 1355], "ba_edgecount": [130, 762], "usuccess": [130, 762], "radialvelvolum": [130, 762], "lastvelvolum": [130, 762], "unfoldedvolum": [130, 762], "sondvolum": [130, 762], "vr_corr": [130, 762], "due": [130, 139, 428, 454, 461, 478, 562, 762, 781, 1071, 1097, 1104, 1121, 1292, 1318, 1353, 1359, 1362, 1365], "call": [130, 150, 203, 204, 206, 211, 215, 216, 217, 218, 233, 234, 270, 271, 273, 278, 282, 283, 284, 303, 304, 306, 314, 315, 319, 320, 321, 340, 341, 343, 351, 352, 356, 357, 358, 375, 380, 383, 396, 546, 762, 765, 848, 849, 851, 856, 860, 861, 862, 863, 878, 879, 915, 916, 918, 923, 927, 928, 929, 948, 949, 951, 959, 960, 964, 965, 966, 985, 986, 988, 996, 997, 1001, 1002, 1003, 1022, 1027, 1031, 1276, 1353, 1357, 1360, 1363, 1365], "long": [130, 141, 482, 505, 762, 786, 1125, 1148, 1352, 1360], "n": [130, 140, 193, 218, 260, 284, 293, 321, 330, 358, 478, 497, 504, 525, 547, 762, 785, 838, 863, 905, 929, 938, 966, 975, 1003, 1121, 1140, 1147, 1255, 1277, 1314, 1318, 1326, 1337, 1339, 1342, 1344, 1348, 1349, 1363, 1365], "jame": [130, 762], "houz": [130, 479, 495, 516, 762, 1006, 1122, 1138, 1159, 1344], "jr": [130, 479, 495, 516, 762, 1122, 1138, 1159, 1344], "four": [130, 372, 373, 375, 762, 1019, 1020, 1022, 1358], "dealis": [130, 762], "scheme": [130, 479, 495, 507, 762, 1006, 1062, 1122, 1138, 1150, 1344], "2001": [130, 762], "18": [130, 432, 762, 1075, 1324, 1335, 1358], "1674": [130, 762], "ref_vel_field": [131, 763], "interval_split": [131, 763], "interval_limit": [131, 763], "skip_between_rai": [131, 763], "100": [131, 183, 207, 212, 218, 274, 279, 284, 307, 321, 344, 358, 382, 437, 483, 497, 513, 519, 763, 765, 776, 827, 852, 857, 863, 919, 924, 929, 952, 966, 989, 1003, 1029, 1066, 1080, 1126, 1140, 1156, 1163, 1320, 1324, 1334, 1335, 1346, 1357, 1358], "skip_along_rai": [131, 763], "nyquist_vel": [131, 132, 763, 764, 1353], "check_nyquist_uniform": [131, 132, 427, 763, 764, 1070], "rays_wrap_around": [131, 132, 763, 764], "region": [131, 137, 246, 315, 352, 428, 478, 542, 547, 552, 554, 558, 559, 763, 778, 891, 960, 997, 1071, 1121, 1272, 1277, 1282, 1284, 1288, 1289, 1308, 1311, 1312, 1314, 1326, 1344, 1356, 1358, 1361, 1363], "similar": [131, 437, 763, 1080, 1318, 1355, 1358], "merg": [131, 155, 157, 164, 171, 176, 365, 540, 727, 729, 736, 743, 748, 763, 799, 801, 808, 815, 820, 1012, 1270, 1307, 1358, 1363], "pair": [131, 372, 383, 418, 763, 1019, 1031, 1039, 1044, 1050, 1351, 1358], "accomplish": [131, 376, 763, 1023], "problem": [131, 136, 137, 287, 324, 763, 777, 778, 932, 969, 1066, 1315], "network": [131, 374, 484, 753, 763, 1021, 1127, 1358], "reduct": [131, 763], "anchor": [131, 763], "onc": [131, 763, 1344, 1362, 1365], "complet": [131, 763], "simul": [131, 497, 569, 763, 1140, 1299, 1349], "simulated_vel_from_profil": [131, 763, 1363], "segment": [131, 136, 311, 312, 348, 349, 763, 777, 782, 783, 956, 957, 993, 994], "split": [131, 552, 763, 1282], "interv": [131, 158, 163, 172, 177, 179, 183, 525, 555, 556, 730, 735, 744, 749, 763, 776, 802, 807, 816, 821, 823, 827, 1255, 1285, 1286], "larger": [131, 497, 562, 763, 1140, 1292, 1344], "longer": [131, 540, 763, 782, 1270, 1349, 1362], "better": [131, 207, 212, 274, 279, 307, 316, 344, 353, 497, 763, 852, 857, 919, 924, 952, 961, 989, 998, 1140, 1307, 1353, 1358], "seem": [131, 763], "compromis": [131, 763], "artifact": [131, 763, 1353, 1355], "free": [131, 763, 1349], "cover": [131, 763], "entir": [131, 132, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 571, 572, 763, 764, 849, 856, 860, 861, 862, 876, 882, 884, 894, 896, 898, 916, 923, 927, 928, 949, 959, 960, 964, 965, 986, 996, 997, 1001, 1002, 1066, 1301, 1302], "join": [131, 763, 1175], "gap": [131, 134, 763, 765, 770, 1355], "connect": [131, 132, 763, 764], "disabl": [131, 132, 179, 181, 182, 183, 184, 185, 186, 763, 764, 776, 823, 825, 826, 827, 828, 829, 830, 1357], "across": [131, 763, 1343], "averag": [131, 442, 446, 450, 460, 466, 473, 479, 495, 497, 513, 518, 528, 530, 541, 555, 760, 761, 763, 782, 783, 1006, 1085, 1089, 1093, 1103, 1109, 1116, 1122, 1138, 1140, 1156, 1162, 1258, 1260, 1271, 1285, 1307, 1344, 1346, 1358], "individu": [131, 132, 763, 764, 1066], "ident": [131, 132, 369, 763, 764, 1016, 1065], "de": [131, 132, 350, 763, 764, 995, 1248, 1249], "alias": [131, 132, 481, 763, 764, 1124, 1248, 1249, 1353, 1358, 1360], "corr_vel": [131, 132, 763, 764, 1358], "unwrap_unit": [132, 764], "skip_check": [132, 764], "multi": [132, 518, 764, 1162, 1307], "unwrap": [132, 136, 137, 764, 777, 778], "independ": [132, 764], "often": [132, 428, 764, 1071], "give": [132, 380, 481, 542, 764, 782, 1027, 1124, 1272, 1307, 1349, 1353, 1356], "superior": [132, 764], "lower": [132, 231, 233, 234, 235, 237, 239, 249, 251, 253, 424, 478, 482, 764, 876, 878, 879, 880, 882, 884, 894, 896, 898, 1121, 1125, 1319, 1320, 1358], "contamin": [132, 511, 516, 547, 764, 1154, 1159, 1277], "clutter": [132, 435, 497, 505, 506, 542, 548, 560, 764, 1078, 1140, 1148, 1149, 1272, 1278, 1290, 1353, 1356, 1357], "poor": [132, 764], "verif": [132, 764], "appropi": [132, 203, 270, 303, 340, 541, 764, 848, 915, 948, 985, 1271], "offer": [132, 764], "extrem": [132, 230, 764, 875, 1359], "miguel": [132, 764], "arevallilo": [132, 764], "herraez": [132, 764], "david": [132, 764], "burton": [132, 764], "michael": [132, 764], "lalor": [132, 764], "munther": [132, 764], "gdeisat": [132, 764], "fast": [132, 764, 1359], "two": [132, 141, 230, 231, 382, 472, 474, 479, 495, 502, 503, 516, 529, 531, 562, 563, 565, 566, 764, 786, 875, 876, 1029, 1062, 1115, 1117, 1122, 1138, 1145, 1146, 1159, 1241, 1259, 1261, 1292, 1293, 1295, 1296, 1312, 1317, 1321, 1322, 1324, 1339, 1340, 1352, 1355, 1357, 1358, 1361, 1363], "sort": [132, 591, 764, 1358], "reliabl": [132, 764, 1358], "noncontinu": [132, 764], "optic": [132, 497, 764, 1140], "vol": [132, 432, 442, 450, 460, 473, 764, 1075, 1085, 1093, 1103, 1116, 1307], "41": [132, 764, 1342, 1346, 1355, 1358], "2002": [132, 764], "7437": [132, 764], "abdul": [132, 764], "rahman": [132, 764], "osten": [132, 764], "gorecki": [132, 764], "l": [132, 136, 137, 208, 212, 213, 246, 275, 279, 280, 308, 317, 345, 352, 354, 495, 552, 764, 777, 778, 853, 857, 858, 891, 920, 924, 925, 953, 962, 990, 997, 999, 1138, 1282, 1326], "novak": [132, 764], "ed": [132, 764], "metrologi": [132, 764], "2005": [132, 479, 495, 764, 1122, 1138, 1344], "32": [132, 460, 478, 542, 764, 1103, 1121, 1241, 1272, 1323, 1327, 1328, 1329, 1339, 1342, 1346, 1358, 1359, 1360], "intern": [132, 437, 482, 764, 1080, 1125], "societi": [132, 428, 764, 1071], "photon": [132, 764], "altern": [133, 428, 766, 1066, 1071, 1344, 1358], "suitabl": [133, 189, 225, 241, 256, 289, 326, 478, 513, 766, 767, 768, 769, 834, 870, 886, 901, 934, 971, 1121, 1156], "phidp0_dict": [133, 766], "first_gates_dict": [133, 766], "smooth": [134, 140, 141, 142, 448, 465, 468, 469, 505, 506, 507, 544, 570, 753, 770, 782, 783, 784, 785, 786, 787, 1091, 1108, 1111, 1112, 1148, 1149, 1150, 1274, 1300, 1334, 1335, 1355], "delta": [134, 508, 765, 770, 1151], "contigu": [134, 765, 770], "label": [134, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 278, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 309, 310, 313, 314, 315, 318, 319, 320, 321, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 350, 351, 352, 355, 356, 357, 358, 437, 575, 770, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 854, 855, 856, 859, 860, 861, 862, 863, 874, 876, 878, 879, 880, 882, 884, 892, 894, 896, 898, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 921, 922, 923, 926, 927, 928, 929, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 954, 955, 958, 959, 960, 963, 964, 965, 966, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 991, 992, 995, 996, 997, 1000, 1001, 1002, 1003, 1080, 1305, 1307, 1318, 1324, 1325, 1334, 1335, 1339, 1345, 1357, 1359], "account": [134, 138, 770, 779, 1307], "scipi": [134, 443, 463, 507, 569, 765, 770, 1086, 1106, 1150, 1299, 1307, 1334, 1335, 1349, 1362, 1363, 1365], "core": [134, 380, 478, 479, 495, 508, 509, 546, 765, 770, 1006, 1027, 1055, 1066, 1121, 1122, 1138, 1151, 1152, 1276, 1344, 1357, 1359, 1363], "queri": [134, 765, 770, 1066], "investig": [134, 514, 765, 770, 1157, 1314], "tupl": [134, 204, 206, 209, 210, 211, 214, 215, 216, 217, 218, 220, 231, 233, 237, 239, 249, 251, 253, 271, 273, 276, 277, 278, 281, 282, 283, 284, 286, 304, 306, 309, 310, 314, 315, 318, 319, 320, 321, 323, 341, 343, 346, 347, 351, 352, 355, 356, 357, 358, 360, 418, 437, 502, 503, 564, 765, 770, 849, 851, 854, 855, 856, 859, 860, 861, 862, 863, 865, 876, 878, 882, 884, 894, 896, 898, 916, 918, 921, 922, 923, 926, 927, 928, 929, 931, 949, 951, 954, 955, 959, 960, 963, 964, 965, 966, 968, 986, 988, 991, 992, 996, 997, 1000, 1001, 1002, 1003, 1005, 1039, 1050, 1062, 1063, 1064, 1066, 1080, 1145, 1146, 1237, 1294], "identifi": [134, 479, 481, 495, 541, 542, 765, 770, 1006, 1122, 1124, 1138, 1271, 1272, 1326, 1344, 1356], "examin": [134, 362, 376, 379, 770, 1009, 1023, 1026, 1363], "box": [134, 380, 770, 1027, 1345, 1358, 1359], "alwai": [134, 363, 376, 478, 479, 495, 507, 511, 770, 1010, 1023, 1121, 1122, 1138, 1150, 1154, 1307, 1349, 1357], "occur": [134, 159, 178, 372, 373, 731, 750, 770, 803, 822, 1019, 1020, 1353, 1358, 1360], "small": [134, 478, 479, 481, 482, 494, 495, 516, 560, 765, 770, 1121, 1122, 1124, 1125, 1137, 1138, 1159, 1290, 1318, 1334], "label_dict": [134, 765, 770], "readi": [134, 770], "fzl": [135, 136, 137, 751, 752, 753, 767, 768, 772, 777, 778, 782, 783, 784, 1359], "doc": [135, 137, 751, 752, 753, 767, 768, 772, 778, 782, 783, 784, 1349, 1362, 1363, 1365], "min_temp": [135, 185, 772, 829], "max_h_iso0": [135, 181, 772, 825], "beamwidth": [135, 139, 146, 181, 185, 218, 284, 321, 358, 453, 497, 513, 772, 781, 791, 825, 829, 863, 929, 966, 1003, 1096, 1140, 1156], "temp_field": [135, 185, 480, 504, 511, 513, 752, 753, 760, 761, 767, 768, 769, 772, 782, 783, 784, 829, 1123, 1147, 1154, 1156, 1345, 1359], "iso0_field": [135, 181, 480, 482, 504, 511, 512, 513, 752, 753, 760, 761, 767, 768, 772, 782, 783, 784, 825, 1123, 1125, 1147, 1154, 1155, 1156], "temp_ref": [135, 480, 500, 504, 511, 513, 752, 753, 760, 761, 767, 768, 772, 782, 783, 784, 1123, 1143, 1147, 1154, 1156, 1345, 1359], "construct": [135, 164, 176, 513, 736, 748, 772, 808, 820, 1066, 1156], "beyond": [135, 179, 560, 561, 577, 772, 823, 1290, 1291, 1362], "freez": [135, 442, 460, 482, 511, 512, 513, 751, 752, 753, 767, 768, 772, 782, 783, 784, 1085, 1103, 1125, 1154, 1155, 1156, 1359], "extent": [135, 497, 772, 1140, 1320], "reach": [135, 772], "0c": [135, 752, 753, 772], "isotherm": [135, 752, 753, 772], "height_over_iso0": [135, 480, 504, 511, 513, 752, 753, 760, 761, 767, 768, 772, 782, 783, 784, 1123, 1147, 1154, 1156, 1356], "fixed_fzl": [135, 752, 753, 768, 772, 782, 783, 784], "mask_fzl": [135, 772], "end_gate_arr": [135, 772], "self_const": [136, 137, 777, 778], "60000": [136, 137, 777, 778, 1320, 1324, 1355], "low_z": [136, 137, 777, 778], "high_z": [136, 137, 777, 778], "min_phidp": [136, 137, 777, 778], "01": [136, 137, 313, 350, 437, 507, 520, 547, 562, 777, 778, 958, 995, 1080, 1150, 1277, 1292, 1311, 1321, 1323, 1340, 1347, 1361], "min_ncp": [136, 183, 776, 777, 827], "min_rhv": [136, 182, 183, 776, 777, 826, 827], "4000": [136, 137, 751, 777, 778, 1355], "sys_phas": [136, 777], "ncpt": [136, 137, 777, 778], "overide_sys_phas": [136, 777], "nowrap": [136, 137, 777, 778], "really_verbos": [136, 137, 777, 778], "lp_solver": [136, 137, 777, 778], "cylp": [136, 137, 777, 778, 1349, 1362, 1365], "ncp_field": [136, 183, 751, 776, 777, 827, 1309], "rhv_field": [136, 179, 182, 183, 480, 504, 511, 751, 776, 777, 823, 826, 827, 1123, 1147, 1154, 1309, 1345, 1359], "kdp_field": [136, 137, 480, 485, 486, 488, 489, 504, 505, 506, 507, 508, 509, 769, 777, 778, 783, 1123, 1128, 1129, 1131, 1132, 1147, 1148, 1149, 1150, 1151, 1152, 1345, 1359], "unf_field": [136, 137, 777, 778], "window_len": [136, 137, 140, 777, 778, 785], "proc": [136, 137, 507, 777, 778, 1150], "coef": [136, 137, 777, 778], "914": [136, 137, 777, 778], "lp": [136, 137, 777, 778, 1349], "consist": [136, 137, 777, 778, 782, 783, 784, 1307, 1355], "low": [136, 137, 138, 139, 143, 146, 372, 507, 777, 778, 779, 781, 788, 791, 1019, 1150, 1326, 1358], "high": [136, 137, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 478, 507, 777, 778, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1121, 1150, 1345, 1359], "phi": [136, 751, 753, 777, 1309, 1357, 1359], "coher": [136, 183, 751, 776, 777, 827], "copolar": [136, 480, 482, 504, 511, 777, 1123, 1125, 1147, 1154, 1343], "automat": [136, 376, 381, 382, 427, 497, 511, 516, 777, 1023, 1028, 1029, 1066, 1070, 1140, 1154, 1159, 1329, 1349, 1363], "lpx": [136, 137, 777, 778], "messag": [136, 137, 221, 240, 372, 777, 778, 866, 885, 1019, 1315], "suppress": [136, 137, 507, 777, 778, 1150], "pyglpk": [136, 137, 777, 778, 1349, 1362], "cvxopt": [136, 137, 777, 778, 1349, 1362], "cylp_mp": [136, 137, 777, 778], "modul": [136, 137, 777, 778, 1243, 1306, 1314, 1315, 1349, 1352, 1353, 1355, 1356, 1357, 1360, 1362, 1363], "solv": [136, 137, 777, 778], "horizon": [136, 137, 480, 504, 511, 777, 778, 1123, 1147, 1154], "sobel": [136, 137, 777, 778], "worker": [136, 137, 777, 778], "expon": [136, 137, 484, 485, 486, 487, 488, 489, 753, 777, 778, 1127, 1128, 1129, 1130, 1131, 1132], "link": [136, 137, 580, 777, 778, 1359], "1z": [136, 137, 777, 778], "reproc_phas": [136, 137, 777, 778], "sob_kdp": [136, 137, 777, 778], "recalcul": [136, 137, 497, 777, 778, 1140, 1351], "giangrand": [136, 137, 511, 777, 778, 1154], "mcgraw": [136, 137, 777, 778], "lei": [136, 137, 777, 778], "applic": [136, 137, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 479, 495, 568, 777, 778, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1027, 1122, 1138, 1298, 1363], "program": [136, 137, 497, 777, 778, 1140, 1349, 1363], "atmo": [136, 137, 478, 504, 514, 552, 777, 778, 1121, 1147, 1157, 1282, 1326, 1363], "tech": [136, 137, 504, 552, 777, 778, 1147, 1282, 1326], "2013": [136, 137, 452, 508, 514, 542, 777, 778, 1095, 1151, 1157, 1272, 1360], "30": [136, 137, 437, 450, 452, 460, 478, 479, 495, 511, 542, 769, 774, 777, 778, 1080, 1093, 1095, 1103, 1121, 1122, 1138, 1154, 1272, 1318, 1325, 1329, 1331, 1344, 1353, 1358], "1716": [136, 137, 777, 778], "system_phas": [137, 778], "first_gate_sysp": [137, 778], "carri": [137, 778], "smaller": [137, 352, 497, 562, 778, 997, 1066, 1140, 1292, 1344, 1363], "off": [137, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 503, 778, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1146, 1323, 1344], "ptoa": [138, 779], "wavelen": [138, 143, 146, 779, 788, 791], "antenna_gain": [138, 146, 454, 779, 791, 1097], "coeff_band": [138, 146, 779, 791], "sun": [138, 139, 143, 144, 145, 146, 771, 773, 774, 775, 779, 780, 781, 788, 789, 790, 791, 792], "solar": [138, 143, 146, 779, 788, 791], "flux": [138, 143, 146, 779, 788, 791], "amospher": [138, 779], "wavelength": [138, 143, 146, 497, 779, 788, 791, 1140], "bandwidth": [138, 146, 779, 791], "s0": [138, 143, 779, 788], "10e": [138, 143, 146, 779, 788, 791], "m2": [138, 143, 146, 779, 788, 791], "hz": [138, 143, 146, 425, 453, 454, 498, 499, 779, 788, 791, 1068, 1096, 1097, 1141, 1142, 1332], "altub": [138, 139, 143, 146, 779, 781, 788, 791], "bech": [138, 139, 143, 146, 779, 781, 788, 791], "o": [138, 139, 143, 146, 380, 779, 781, 788, 791, 1027, 1175, 1325, 1349, 1362, 1363], "argemi": [138, 139, 143, 146, 779, 781, 788, 791], "t": [138, 139, 143, 146, 380, 450, 478, 479, 482, 495, 507, 508, 511, 513, 514, 519, 779, 781, 788, 791, 1027, 1093, 1121, 1122, 1125, 1138, 1150, 1151, 1154, 1156, 1157, 1163, 1318, 1344, 1349, 1351, 1359], "rigo": [138, 139, 143, 146, 779, 781, 788, 791], "2015": [138, 139, 143, 146, 484, 514, 779, 781, 788, 791, 1127, 1157], "align": [138, 139, 143, 146, 779, 781, 788, 791], "midrang": [138, 139, 143, 146, 779, 781, 788, 791], "angle_step": [139, 146, 781, 791], "integr": [139, 146, 752, 753, 781, 791, 1359], "fact": [139, 507, 509, 781, 1150, 1152], "la": [139, 781], "raw_data": [140, 785], "wind_len": [140, 142, 506, 785, 787, 1149], "min_valid": [140, 142, 506, 785, 787, 1149], "wind_typ": [140, 785], "median": [140, 437, 442, 450, 460, 473, 483, 528, 530, 542, 785, 1080, 1085, 1093, 1103, 1116, 1126, 1258, 1260, 1272], "less": [140, 478, 479, 495, 509, 552, 785, 1066, 1121, 1122, 1138, 1152, 1282, 1344, 1358, 1359], "move": [140, 141, 142, 147, 148, 150, 182, 448, 465, 468, 469, 497, 505, 506, 541, 785, 786, 787, 826, 1091, 1108, 1111, 1112, 1140, 1148, 1149, 1271, 1318, 1358, 1363], "data_smooth": [140, 785], "swind_len": [141, 505, 786, 1148], "smin_valid": [141, 505, 786, 1148], "lwind_len": [141, 505, 786, 1148], "31": [141, 372, 484, 505, 753, 786, 1019, 1127, 1148, 1315, 1342, 1357], "lmin_valid": [141, 505, 786, 1148], "zthr": [141, 505, 786, 1148], "short": [141, 505, 786, 1148, 1363], "solar_flux": [143, 146, 788, 791], "7": [143, 146, 182, 370, 452, 518, 542, 551, 574, 774, 788, 791, 826, 1017, 1095, 1162, 1272, 1281, 1304, 1315, 1324, 1326, 1338, 1349, 1356, 1357, 1359, 1360, 1362, 1363], "cm": [143, 146, 475, 788, 791, 1118, 1335, 1357], "measur": [143, 146, 426, 479, 484, 493, 494, 495, 504, 507, 508, 509, 782, 783, 788, 791, 1069, 1122, 1127, 1136, 1137, 1138, 1147, 1150, 1151, 1152, 1344, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1363], "lat_deg": [144, 789], "lon_deg": [144, 789], "refract": [144, 497, 789, 1140], "boolean": [144, 151, 157, 171, 479, 494, 495, 580, 591, 592, 608, 609, 723, 729, 743, 771, 789, 792, 795, 801, 815, 1006, 1122, 1137, 1138, 1356], "elev_sun": [144, 789], "azim_sun": [144, 789], "sensor": [144, 145, 789, 790], "pysolar": [145, 773, 774, 775, 790], "el": [145, 494, 526, 527, 790, 1137, 1256, 1257, 1358], "az": [145, 380, 790, 1027, 1332, 1333], "detect": [146, 481, 482, 495, 511, 513, 547, 773, 774, 775, 791, 1124, 1125, 1138, 1154, 1156, 1277, 1329, 1344, 1353, 1357, 1359], "would": [146, 428, 542, 791, 1071, 1272, 1314, 1315, 1353, 1355, 1363], "without": [146, 215, 282, 319, 356, 435, 451, 564, 791, 860, 927, 964, 1001, 1078, 1094, 1237, 1250, 1294, 1362], "attenu": [146, 425, 454, 461, 484, 485, 488, 498, 751, 752, 753, 773, 774, 775, 791, 1068, 1097, 1104, 1127, 1128, 1131, 1141, 1307, 1308, 1311, 1312, 1345, 1349, 1361], "characterist": [146, 791, 1355], "pwr_det": [146, 791], "warn": [147, 148, 150, 376, 379, 560, 1023, 1026, 1290, 1307, 1309, 1315, 1318, 1355, 1357, 1358, 1359], "categori": [147, 148, 478, 1121, 1359], "depend": [149, 485, 497, 511, 558, 577, 752, 753, 1063, 1066, 1128, 1140, 1154, 1288, 1357, 1363], "old_nam": 150, "new_nam": 150, "alia": [150, 1248, 1249, 1357], "namespac": [150, 625], "wrapper": [150, 1349, 1357], "deprecatedfunctionnam": 150, "exclude_bas": [151, 723, 795], "variou": [151, 179, 180, 181, 182, 183, 184, 185, 186, 546, 723, 765, 776, 795, 823, 824, 825, 826, 827, 828, 829, 830, 1276, 1307, 1312, 1341, 1349], "exclude_below": [151, 723, 795, 1318, 1343, 1356, 1359], "suggest": [151, 723, 795], "gate_exclud": [151, 723, 795, 1356], "gate_includ": [151, 723, 795, 1356], "lost": [151, 509, 575, 723, 795, 1152, 1305, 1355], "again": [151, 723, 795, 1307, 1315, 1325, 1357, 1362], "import": [151, 514, 518, 519, 723, 795, 1157, 1162, 1163, 1175, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362], "io": [151, 577, 723, 795, 1062, 1309, 1310, 1314, 1315, 1316, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365], "radar_fil": [151, 609, 723, 795, 1310, 1323, 1325], "nc": [151, 723, 795, 1309, 1318, 1320, 1323, 1324, 1325, 1329, 1331, 1332, 1333, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1351, 1352, 1356, 1357, 1359], "normalized_coherent_pow": [151, 723, 795, 1356], "75": [151, 219, 285, 322, 359, 380, 437, 479, 495, 504, 511, 515, 723, 760, 761, 795, 864, 930, 967, 1004, 1027, 1080, 1122, 1138, 1147, 1154, 1158, 1318, 1334, 1344, 1351, 1355, 1356, 1357], "exclude_mask": [153, 155, 156, 157, 158, 159, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 725, 727, 728, 729, 730, 731, 734, 735, 736, 739, 741, 742, 743, 744, 746, 747, 748, 749, 750, 797, 799, 800, 801, 802, 803, 806, 807, 808, 811, 813, 814, 815, 816, 818, 819, 820, 821, 822, 1319], "op": [153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 725, 727, 728, 729, 730, 731, 732, 734, 735, 736, 739, 741, 742, 743, 744, 746, 747, 748, 749, 750, 797, 799, 800, 801, 802, 803, 804, 806, 807, 808, 811, 813, 814, 815, 816, 818, 819, 820, 821, 822], "inclus": [153, 155, 158, 163, 167, 169, 172, 177, 725, 727, 730, 735, 739, 741, 744, 749, 797, 799, 802, 807, 811, 813, 816, 821, 1062, 1066, 1237, 1323], "exclus": [155, 727, 799], "AND": [155, 157, 164, 171, 176, 727, 729, 736, 743, 748, 799, 801, 808, 815, 820], "OR": [155, 157, 164, 171, 176, 727, 729, 736, 743, 748, 799, 801, 808, 815, 820], "gener": [155, 157, 164, 171, 176, 188, 189, 190, 191, 192, 193, 204, 206, 211, 214, 215, 216, 217, 218, 225, 226, 227, 228, 231, 233, 234, 235, 237, 239, 241, 242, 243, 244, 249, 251, 253, 255, 256, 257, 258, 259, 260, 271, 273, 278, 281, 282, 283, 284, 288, 289, 290, 291, 292, 293, 304, 306, 314, 315, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 341, 343, 351, 352, 355, 356, 357, 358, 379, 382, 496, 497, 507, 515, 517, 727, 729, 736, 743, 748, 799, 801, 808, 815, 820, 833, 834, 835, 836, 837, 838, 849, 851, 856, 859, 860, 861, 862, 863, 870, 871, 872, 873, 876, 878, 879, 880, 882, 884, 886, 887, 888, 889, 894, 896, 898, 900, 901, 902, 903, 904, 905, 916, 918, 923, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 949, 951, 959, 960, 963, 964, 965, 966, 970, 971, 972, 973, 974, 975, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1026, 1029, 1044, 1055, 1065, 1066, 1139, 1140, 1150, 1158, 1160, 1309, 1310, 1312, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349], "here": [155, 157, 164, 171, 176, 246, 727, 729, 736, 743, 748, 799, 801, 808, 815, 820, 891, 1318, 1344, 1349, 1351, 1356, 1357, 1358, 1359, 1362, 1365], "previous": [155, 157, 164, 171, 176, 727, 729, 736, 743, 748, 799, 801, 808, 815, 820, 1314, 1344, 1359], "becaus": [155, 157, 164, 507, 727, 729, 736, 799, 801, 808, 1150, 1344, 1358, 1359, 1365], "invalid": [155, 157, 159, 164, 179, 181, 182, 183, 184, 185, 186, 727, 729, 731, 736, 771, 776, 799, 801, 803, 808, 823, 825, 826, 827, 828, 829, 830], "shape": [157, 171, 370, 510, 564, 729, 743, 760, 801, 815, 1017, 1153, 1294, 1344, 1351, 1355, 1356, 1360, 1363], "v1": [158, 163, 172, 177, 730, 735, 744, 749, 802, 807, 816, 821, 1362], "v2": [158, 163, 172, 177, 730, 735, 744, 749, 802, 807, 816, 821, 1363], "insid": [158, 172, 512, 730, 744, 802, 816, 1155, 1352], "inf": [159, 178, 179, 183, 731, 750, 776, 803, 822, 823, 827], "outsid": [163, 177, 179, 183, 211, 214, 216, 217, 231, 233, 234, 235, 237, 239, 249, 251, 253, 278, 281, 283, 314, 315, 318, 320, 351, 352, 355, 357, 460, 461, 478, 735, 749, 776, 807, 821, 823, 827, 856, 859, 861, 862, 876, 878, 879, 880, 882, 884, 894, 896, 898, 923, 926, 928, 959, 960, 963, 965, 996, 997, 1000, 1002, 1103, 1104, 1121, 1363], "trans_valu": [164, 176, 736, 748, 808, 820], "zdr_field": [179, 182, 436, 455, 480, 504, 511, 751, 752, 753, 757, 768, 769, 773, 774, 782, 783, 784, 823, 826, 1079, 1098, 1123, 1147, 1154, 1345, 1359], "max_zdr": [179, 823], "max_rhv": [179, 823], "min_refl": [179, 183, 776, 823, 827], "max_refl": [179, 183, 776, 823, 827], "vel_lim": [179, 823], "rmin": [179, 446, 466, 511, 554, 773, 823, 1089, 1109, 1154, 1284], "2000": [179, 519, 823, 1163, 1319, 1355], "25000": [179, 426, 823, 1069, 1355], "elmin": [179, 511, 554, 773, 774, 775, 823, 1154, 1284], "elmax": [179, 511, 554, 768, 769, 823, 1154, 1284], "85": [179, 182, 823, 826, 1346, 1358], "suspect": [179, 773, 774, 775, 823], "bird": [179, 434, 823, 1077], "criteria": [179, 180, 181, 182, 183, 184, 185, 186, 507, 516, 554, 776, 823, 824, 825, 826, 827, 828, 829, 830, 1066, 1150, 1159, 1284], "built": [179, 180, 181, 182, 183, 184, 185, 186, 776, 823, 824, 825, 826, 827, 828, 829, 830, 1065, 1066], "well": [179, 181, 182, 183, 184, 185, 186, 352, 372, 374, 481, 577, 765, 776, 823, 825, 826, 827, 828, 829, 830, 997, 1019, 1021, 1066, 1124, 1315, 1324, 1349, 1355, 1356, 1357, 1358, 1359], "highest": [179, 182, 234, 823, 826, 879], "lowest": [179, 181, 182, 183, 184, 185, 186, 428, 510, 776, 823, 825, 826, 827, 828, 829, 830, 1071, 1153, 1314, 1318, 1342, 1344], "greatest": [179, 183, 776, 823, 827], "kept_valu": [180, 769, 824], "undesir": [180, 181, 182, 183, 184, 185, 186, 768, 769, 776, 824, 825, 826, 827, 828, 829, 830, 1066], "classif": [180, 478, 479, 480, 485, 495, 504, 512, 516, 769, 782, 783, 784, 824, 1006, 1121, 1122, 1123, 1128, 1138, 1147, 1155, 1159, 1312, 1341, 1347, 1357, 1361], "hydrometeor": [180, 380, 437, 480, 483, 485, 504, 512, 517, 769, 782, 783, 784, 824, 1027, 1080, 1123, 1126, 1128, 1147, 1155, 1160, 1312, 1341, 1347, 1353, 1357, 1361], "400": [181, 185, 825, 829, 1351], "primarili": [181, 185, 825, 829], "phi_field": [182, 826], "textzdr_field": [182, 826], "textrhv_field": [182, 826], "textphi_field": [182, 826], "textrefl_field": [182, 826], "wind_siz": [182, 427, 574, 826, 1070, 1304, 1353], "max_textphi": [182, 826], "max_textrhv": [182, 826], "max_textzdr": [182, 826], "max_textrefl": [182, 826], "cross": [182, 183, 198, 200, 204, 207, 218, 230, 231, 265, 267, 271, 274, 284, 298, 300, 304, 307, 321, 335, 337, 341, 344, 358, 434, 453, 454, 497, 533, 534, 776, 826, 827, 843, 845, 849, 852, 863, 875, 876, 910, 912, 916, 919, 929, 943, 945, 949, 952, 966, 980, 982, 986, 989, 1003, 1064, 1077, 1096, 1097, 1140, 1263, 1264, 1307, 1312, 1322, 1331, 1340, 1344, 1358, 1360, 1361], "min_rhi": [183, 776, 827], "snr_field": [184, 426, 462, 757, 769, 828, 1069, 1105], "min_snr": [184, 828], "max_snr": [184, 828], "snr": [184, 426, 462, 549, 561, 757, 769, 828, 1069, 1105, 1279, 1291, 1359], "vis_field": [186, 759, 830], "min_vi": [186, 830], "displai": [187, 204, 206, 211, 215, 216, 217, 218, 220, 254, 271, 273, 278, 282, 283, 284, 286, 287, 304, 306, 314, 315, 319, 320, 321, 323, 324, 341, 343, 351, 352, 356, 357, 358, 360, 380, 428, 497, 518, 519, 832, 849, 851, 856, 860, 861, 862, 863, 865, 899, 916, 918, 923, 927, 928, 929, 931, 932, 949, 951, 959, 960, 964, 965, 966, 968, 969, 986, 988, 996, 997, 1001, 1002, 1003, 1005, 1027, 1071, 1140, 1162, 1163, 1307, 1309, 1310, 1314, 1315, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1351, 1352, 1353, 1355, 1356, 1359, 1363], "airborn": [187, 832], "plot_var": [187, 254, 287, 324, 832, 899, 932, 969], "order": [187, 254, 287, 324, 376, 381, 382, 479, 495, 504, 507, 511, 513, 525, 832, 899, 932, 969, 1006, 1023, 1028, 1029, 1055, 1122, 1138, 1147, 1150, 1154, 1156, 1255, 1309, 1344, 1349, 1359, 1363], "cb": [187, 254, 287, 324, 832, 899, 932, 969, 1325], "colorbar": [187, 204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 240, 247, 249, 251, 253, 254, 271, 272, 273, 278, 281, 282, 283, 284, 287, 304, 305, 306, 314, 315, 318, 319, 320, 321, 324, 341, 342, 343, 351, 352, 355, 356, 357, 358, 832, 849, 850, 851, 856, 859, 860, 861, 862, 863, 874, 876, 878, 879, 880, 882, 884, 885, 892, 894, 896, 898, 899, 916, 917, 918, 923, 926, 927, 928, 929, 932, 949, 950, 951, 959, 960, 963, 964, 965, 966, 969, 986, 987, 988, 996, 997, 1000, 1001, 1002, 1003, 1312, 1318, 1322, 1323, 1339, 1340, 1357, 1361], "loc": [187, 254, 287, 324, 832, 899, 932, 969, 1324], "titl": [188, 190, 191, 192, 193, 204, 206, 211, 214, 215, 216, 217, 218, 226, 227, 228, 231, 233, 234, 235, 237, 239, 242, 243, 244, 249, 251, 253, 255, 257, 258, 259, 260, 271, 273, 278, 281, 282, 283, 284, 288, 290, 291, 292, 293, 304, 306, 314, 315, 318, 319, 320, 321, 325, 327, 328, 329, 330, 341, 343, 351, 352, 355, 356, 357, 358, 833, 835, 836, 837, 838, 849, 851, 856, 859, 860, 861, 862, 863, 871, 872, 873, 876, 878, 879, 880, 882, 884, 887, 888, 889, 894, 896, 898, 900, 902, 903, 904, 905, 916, 918, 923, 926, 927, 928, 929, 933, 935, 936, 937, 938, 949, 951, 959, 960, 963, 964, 965, 966, 970, 972, 973, 974, 975, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1309, 1310, 1318, 1325, 1327, 1328, 1330, 1332, 1333, 1337, 1357, 1358, 1359, 1360], "ext": [189, 225, 241, 256, 289, 326, 834, 870, 886, 901, 934, 971], "datetime_format": [189, 191, 256, 258, 289, 291, 326, 328, 834, 836, 901, 903, 934, 936, 971, 973], "use_sweep_tim": [189, 191, 256, 258, 289, 291, 326, 328, 834, 836, 901, 903, 934, 936, 971, 973], "form": [189, 206, 225, 241, 256, 273, 289, 306, 326, 343, 834, 851, 870, 886, 901, 918, 934, 951, 971, 988], "radar_name_field_sweep_tim": [189, 256, 289, 326, 834, 901, 934, 971], "extens": [189, 225, 241, 256, 289, 326, 380, 834, 870, 886, 901, 934, 971, 1027, 1362], "strftime": [189, 191, 211, 215, 256, 258, 278, 282, 289, 291, 314, 319, 326, 328, 351, 356, 834, 836, 856, 860, 901, 903, 923, 927, 934, 936, 959, 964, 971, 973, 996, 1001], "vpt": [192, 203, 217, 259, 270, 283, 292, 303, 320, 329, 340, 357, 557, 837, 848, 862, 904, 915, 928, 937, 948, 965, 974, 985, 1002, 1287], "ndarrai": [193, 218, 260, 284, 293, 321, 330, 358, 504, 530, 551, 612, 838, 863, 905, 929, 938, 966, 975, 1003, 1147, 1260, 1281, 1360], "xaxi": [194, 197, 198, 261, 264, 265, 294, 297, 298, 331, 334, 335, 839, 842, 843, 906, 909, 910, 939, 942, 943, 976, 979, 980, 1325], "static": [195, 196, 207, 208, 212, 219, 220, 262, 263, 274, 275, 279, 285, 286, 295, 296, 307, 308, 322, 323, 332, 333, 344, 345, 359, 360, 840, 841, 852, 853, 857, 864, 865, 907, 908, 919, 920, 924, 930, 931, 940, 941, 952, 953, 967, 968, 977, 978, 989, 990, 1004, 1005, 1349], "yaxi": [195, 196, 199, 200, 201, 202, 262, 263, 266, 267, 268, 269, 295, 296, 299, 300, 301, 302, 332, 333, 336, 337, 338, 339, 840, 841, 844, 845, 846, 847, 907, 908, 911, 912, 913, 914, 940, 941, 944, 945, 946, 947, 977, 978, 981, 982, 983, 984], "custom": [203, 204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 270, 271, 272, 273, 278, 282, 283, 284, 303, 304, 305, 306, 314, 315, 319, 320, 321, 340, 341, 342, 343, 351, 352, 356, 357, 358, 410, 478, 793, 848, 849, 850, 851, 856, 860, 861, 862, 863, 874, 876, 878, 880, 882, 884, 892, 894, 896, 898, 915, 916, 917, 918, 923, 927, 928, 929, 948, 949, 950, 951, 959, 960, 964, 965, 966, 985, 986, 987, 988, 996, 997, 1001, 1002, 1003, 1065, 1121, 1355], "plot_ppi": [203, 270, 303, 340, 848, 915, 948, 985, 1310, 1345, 1351, 1358, 1359], "plot_sweep_grid": [203, 848], "target_azimuth": [204, 271, 304, 341, 533, 849, 916, 949, 986, 1263], "mask_tupl": [204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 849, 856, 859, 860, 861, 862, 863, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003], "norm": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 507, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1150, 1325, 1345, 1357, 1359], "cmap": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1027, 1318, 1323, 1324, 1325, 1326, 1330, 1333, 1335, 1337, 1338, 1343, 1344, 1352, 1353, 1357], "mask_outsid": [204, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 849, 856, 859, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003, 1332, 1333, 1359], "title_flag": [204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 849, 851, 856, 859, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 986, 988, 996, 997, 1000, 1001, 1002, 1003, 1337], "axislabel": [204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 318, 319, 320, 321, 341, 343, 351, 355, 356, 357, 358, 849, 851, 856, 859, 860, 861, 862, 863, 876, 878, 882, 884, 894, 896, 898, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 963, 964, 965, 966, 986, 988, 996, 1000, 1001, 1002, 1003, 1327, 1332, 1333], "axislabels_flag": [204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 318, 319, 320, 321, 341, 343, 351, 355, 356, 357, 358, 849, 851, 856, 859, 860, 861, 862, 863, 876, 878, 882, 884, 894, 896, 898, 916, 918, 923, 926, 927, 928, 929, 949, 951, 959, 963, 964, 965, 966, 986, 988, 996, 1000, 1001, 1002, 1003, 1344], "colorbar_flag": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003], "colorbar_label": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1309, 1310, 1314, 1327, 1328, 1332, 1333, 1334, 1335, 1339, 1358, 1359], "colorbar_ori": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 319, 320, 321, 341, 343, 351, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 964, 965, 966, 986, 988, 996, 1001, 1002, 1003], "reverse_xaxi": [204, 215, 271, 282, 304, 319, 341, 356, 849, 860, 916, 927, 949, 964, 986, 1001], "fig": [204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 281, 282, 283, 284, 304, 305, 306, 314, 315, 318, 319, 320, 321, 341, 342, 343, 351, 352, 355, 356, 357, 358, 849, 850, 851, 856, 859, 860, 861, 862, 863, 874, 876, 878, 879, 880, 882, 884, 892, 894, 896, 898, 916, 917, 918, 923, 926, 927, 928, 929, 949, 950, 951, 959, 960, 963, 964, 965, 966, 986, 987, 988, 996, 997, 1000, 1001, 1002, 1003, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1343, 1345, 1346, 1353, 1355, 1356, 1358, 1359], "tick": [204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 315, 319, 320, 321, 341, 342, 343, 351, 352, 356, 357, 358, 849, 850, 851, 856, 860, 861, 862, 863, 874, 876, 878, 880, 882, 884, 892, 894, 896, 898, 916, 917, 918, 923, 927, 928, 929, 949, 950, 951, 959, 960, 964, 965, 966, 986, 987, 988, 996, 997, 1001, 1002, 1003, 1323, 1325, 1344, 1345, 1357, 1359], "ticklab": [204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 315, 319, 320, 321, 341, 342, 343, 351, 352, 356, 357, 358, 849, 850, 851, 856, 860, 861, 862, 863, 874, 876, 878, 880, 882, 884, 892, 894, 896, 898, 916, 917, 918, 923, 927, 928, 929, 949, 950, 951, 959, 960, 964, 965, 966, 986, 987, 988, 996, 997, 1001, 1002, 1003, 1344, 1345, 1359], "raster": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 497, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1027, 1140, 1307], "pseudo": [204, 271, 304, 341, 511, 849, 916, 949, 986, 1154, 1358], "associ": [204, 271, 304, 341, 478, 849, 916, 949, 986, 1044, 1121], "matplotlib": [204, 206, 209, 210, 211, 215, 216, 217, 218, 231, 232, 233, 235, 237, 239, 248, 249, 251, 253, 271, 273, 276, 277, 278, 282, 283, 284, 304, 306, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 380, 849, 851, 854, 855, 856, 860, 861, 862, 863, 876, 877, 878, 880, 882, 884, 893, 894, 896, 898, 916, 918, 921, 922, 923, 927, 928, 929, 949, 951, 954, 955, 956, 957, 958, 959, 960, 961, 964, 965, 966, 986, 988, 991, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1027, 1307, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1362, 1365], "pcolormesh": [204, 206, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1318, 1334, 1344, 1357, 1358], "ncp": [204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 849, 856, 859, 860, 861, 862, 863, 916, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 996, 997, 1000, 1001, 1002, 1003], "lumin": [204, 206, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 876, 878, 879, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003], "west": [204, 215, 271, 282, 304, 319, 341, 356, 849, 860, 916, 927, 949, 964, 986, 1001, 1327, 1358, 1359], "leav": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 876, 878, 880, 882, 884, 894, 896, 898, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003], "orient": [204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 319, 320, 321, 341, 342, 343, 351, 356, 357, 358, 849, 850, 851, 856, 860, 861, 862, 863, 874, 876, 878, 880, 882, 884, 892, 894, 896, 898, 916, 917, 918, 923, 927, 928, 929, 949, 950, 951, 959, 964, 965, 966, 986, 987, 988, 996, 1001, 1002, 1003, 1345, 1346, 1358, 1359], "treat": [204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 849, 856, 860, 861, 862, 876, 882, 884, 894, 896, 898, 916, 923, 927, 928, 949, 959, 960, 964, 965, 986, 996, 997, 1001, 1002], "themselv": [204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 849, 856, 860, 861, 862, 876, 882, 884, 894, 896, 898, 916, 923, 927, 928, 949, 959, 960, 964, 965, 986, 996, 997, 1001, 1002], "figur": [204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 281, 282, 283, 284, 304, 305, 306, 314, 315, 318, 319, 320, 321, 341, 342, 343, 351, 352, 355, 356, 357, 358, 849, 850, 851, 856, 859, 860, 861, 862, 863, 874, 876, 878, 879, 880, 882, 884, 892, 894, 896, 898, 916, 917, 918, 923, 926, 927, 928, 929, 949, 950, 951, 959, 960, 963, 964, 965, 966, 986, 987, 988, 996, 997, 1000, 1001, 1002, 1003, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1343, 1344, 1352, 1353, 1355, 1356, 1357, 1358, 1359], "render": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003], "rather": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003], "larg": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 507, 516, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1150, 1159, 1359], "sure": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1318, 1325, 1344, 1362, 1363, 1365], "dpi": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003], "your": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 577, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003, 1312, 1322, 1324, 1340, 1344, 1349, 1357, 1359, 1361, 1362, 1363, 1365], "ep": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003], "svg": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 849, 851, 856, 860, 861, 862, 863, 916, 918, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 986, 988, 996, 997, 1001, 1002, 1003], "mappabl": [205, 229, 240, 247, 272, 305, 342, 850, 874, 885, 892, 917, 950, 987], "cax": [205, 229, 247, 272, 305, 342, 850, 874, 892, 917, 950, 987, 1345, 1359], "imag": [205, 229, 234, 247, 272, 305, 342, 478, 503, 525, 552, 850, 874, 879, 892, 917, 950, 987, 1121, 1146, 1255, 1282, 1312, 1322, 1340, 1342, 1344, 1361], "contourset": [205, 229, 240, 247, 272, 305, 342, 850, 874, 885, 892, 917, 950, 987], "etc": [205, 229, 233, 234, 240, 247, 272, 305, 315, 342, 352, 379, 442, 450, 460, 473, 476, 495, 850, 874, 878, 879, 885, 892, 917, 950, 960, 987, 997, 1026, 1085, 1093, 1103, 1116, 1119, 1138, 1357], "onto": [205, 229, 247, 249, 272, 305, 315, 342, 352, 510, 850, 874, 892, 894, 917, 950, 960, 987, 997, 1055, 1062, 1066, 1153], "drawn": [205, 229, 247, 272, 305, 342, 850, 874, 892, 917, 950, 987], "target_rang": [206, 273, 306, 343, 851, 918, 951, 988], "delta_x": [206, 273, 306, 343, 851, 918, 951, 988], "delta_i": [206, 273, 306, 343, 851, 918, 951, 988], "az_limit": [206, 273, 306, 343, 851, 918, 951, 988], "el_limit": [206, 273, 306, 343, 851, 918, 951, 988], "reflector": [206, 273, 306, 343, 851, 918, 951, 988], "griddata": [206, 273, 306, 343, 851, 918, 951, 988], "npt": [207, 212, 274, 279, 307, 316, 344, 353, 852, 857, 919, 924, 952, 961, 989, 998], "hair": [207, 274, 307, 344, 852, 919, 952, 989, 1331], "higher": [207, 212, 274, 279, 307, 316, 344, 353, 773, 852, 857, 919, 924, 952, 961, 989, 998, 1066, 1353, 1355], "col": [208, 212, 213, 275, 279, 280, 308, 317, 345, 354, 853, 857, 858, 920, 924, 925, 953, 962, 990, 999], "line": [208, 214, 232, 233, 234, 246, 248, 275, 281, 308, 311, 312, 315, 316, 318, 345, 348, 349, 352, 353, 355, 380, 507, 853, 859, 877, 878, 879, 891, 893, 920, 926, 953, 956, 957, 960, 961, 963, 990, 993, 994, 997, 998, 1000, 1027, 1150, 1312, 1322, 1324, 1340, 1342, 1361, 1362, 1363, 1365], "color": [208, 209, 210, 212, 213, 232, 234, 275, 276, 277, 279, 280, 308, 309, 310, 315, 317, 345, 346, 347, 354, 380, 853, 854, 855, 857, 858, 877, 879, 920, 921, 922, 924, 925, 953, 954, 955, 960, 962, 990, 991, 992, 999, 1027, 1324, 1325, 1326, 1334, 1335, 1342, 1344, 1345, 1357, 1359], "linestyl": [208, 212, 213, 232, 275, 279, 280, 308, 317, 345, 354, 853, 857, 858, 877, 920, 924, 925, 953, 962, 990, 999, 1324, 1325, 1335], "symbol": [209, 210, 276, 277, 309, 310, 313, 346, 347, 350, 854, 855, 921, 922, 954, 955, 958, 991, 992, 995], "text_color": [209, 210, 276, 277, 309, 310, 346, 347, 854, 855, 921, 922, 954, 955, 991, 992], "text": [209, 210, 276, 277, 309, 310, 313, 346, 347, 350, 854, 855, 921, 922, 954, 955, 958, 991, 992, 995, 1175, 1323, 1332, 1346, 1353, 1357, 1358], "just": [209, 210, 276, 277, 309, 310, 346, 347, 370, 540, 854, 855, 921, 922, 954, 955, 991, 992, 1017, 1270, 1323, 1326, 1351, 1360, 1363, 1365], "marker": [209, 210, 214, 232, 248, 276, 277, 281, 309, 310, 318, 346, 347, 355, 854, 855, 859, 877, 893, 921, 922, 926, 954, 955, 963, 991, 992, 1000], "title_datetime_format": [211, 215, 278, 282, 314, 319, 351, 356, 856, 860, 923, 927, 959, 964, 996, 1001], "title_use_sweep_tim": [211, 215, 278, 282, 314, 319, 351, 356, 856, 860, 923, 927, 959, 964, 996, 1001], "range_ring_location_km": [212, 279, 316, 353, 857, 924, 961, 998], "lw": [212, 213, 279, 280, 317, 354, 857, 858, 924, 925, 962, 999], "ring": [212, 213, 279, 280, 316, 317, 353, 354, 857, 858, 924, 925, 961, 962, 998, 999, 1319, 1331], "range_r": [213, 280, 317, 354, 858, 925, 962, 999], "seri": [213, 280, 317, 354, 474, 858, 925, 962, 999, 1117], "draw": [213, 233, 234, 246, 280, 315, 317, 352, 354, 858, 878, 879, 891, 925, 960, 962, 997, 999], "format_str": [214, 281, 318, 355, 859, 926, 963, 1000], "ray_min": [214, 281, 318, 355, 859, 926, 963, 1000], "ray_max": [214, 281, 318, 355, 859, 926, 963, 1000], "style": [214, 232, 248, 281, 311, 312, 316, 318, 348, 349, 353, 355, 380, 859, 877, 893, 926, 956, 957, 961, 963, 993, 994, 998, 1000, 1027], "consider": [215, 282, 319, 356, 507, 860, 927, 964, 1001, 1150, 1344], "ignoretilt": [216, 861], "run": [216, 479, 495, 540, 576, 861, 1122, 1138, 1164, 1270, 1307, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1362, 1363, 1365], "antenna_to_cartesian_track_rel": [216, 861], "slant": [216, 473, 861, 1063, 1116], "ncar": [216, 861], "soloii": [216, 861], "softwar": [216, 373, 380, 625, 861, 1020, 1027, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1362, 1363], "time_axis_flag": [217, 283, 320, 357, 862, 928, 965, 1002], "date_time_form": [217, 283, 320, 357, 862, 928, 965, 1002], "tz": [217, 283, 320, 357, 862, 928, 965, 1002], "zone": [217, 283, 320, 357, 862, 928, 965, 1002], "info": [217, 283, 315, 320, 352, 357, 497, 862, 928, 960, 965, 997, 1002, 1140, 1307, 1345, 1360], "ref_point": [218, 284, 321, 358, 863, 929, 966, 1003], "1000": [218, 284, 321, 358, 511, 527, 863, 929, 966, 1003, 1154, 1257, 1320, 1328, 1334, 1335, 1355, 1363], "vert_r": [218, 284, 321, 358, 863, 929, 966, 1003], "alt_max": [218, 284, 321, 358, 863, 929, 966, 1003], "10000": [218, 246, 284, 321, 352, 358, 437, 442, 450, 460, 473, 476, 515, 519, 773, 863, 891, 929, 966, 997, 1003, 1080, 1085, 1093, 1103, 1116, 1119, 1158, 1163, 1324, 1344, 1355], "dem_field": [218, 284, 321, 358, 863, 929, 966, 1003], "terrain_altitud": [218, 284, 321, 358, 863, 929, 966, 1003], "arbitrari": [218, 284, 321, 358, 507, 863, 929, 966, 1003, 1150, 1307, 1358], "trajectori": [218, 284, 321, 358, 863, 929, 966, 1003], "45": [218, 284, 321, 358, 493, 863, 929, 966, 1003, 1136, 1241, 1326, 1335, 1344, 1359, 1363], "47": [218, 284, 321, 358, 511, 863, 929, 966, 1003, 1154, 1346, 1358], "3db": [218, 284, 321, 358, 497, 863, 929, 966, 1003, 1140], "ist": [218, 284, 321, 358, 863, 929, 966, 1003], "aspect_ratio": [219, 285, 322, 359, 864, 930, 967, 1004], "aspect": [219, 285, 322, 359, 497, 864, 930, 967, 1004, 1140, 1323], "xlim": [220, 286, 323, 360, 865, 931, 968, 1005, 1328, 1330, 1334, 1335, 1355], "ylim": [220, 286, 323, 360, 865, 931, 968, 1005, 1328, 1330, 1332, 1333, 1334, 1335, 1337, 1339], "cartopi": [221, 222, 223, 224, 233, 234, 235, 287, 315, 866, 867, 868, 869, 878, 879, 880, 932, 960, 1312, 1314, 1315, 1318, 1322, 1324, 1325, 1338, 1340, 1342, 1344, 1349, 1352, 1353, 1355, 1356, 1358, 1359, 1361, 1362, 1363, 1365], "supress": [221, 233, 234, 240, 315, 352, 751, 866, 878, 879, 885, 960, 997], "coastlin": [222, 233, 234, 315, 352, 867, 878, 879, 960, 997], "polit": [223, 868], "state": [224, 508, 869, 1151], "grid_name_field_level_tim": [225, 241, 870, 886], "latitudin": [227, 237, 251, 872, 882, 896], "plot_longitudinal_level": [230, 238, 252, 875, 883, 897], "tuppl": [230, 437, 443, 463, 875, 1080, 1086, 1106], "ind_1": [231, 876], "ind_2": [231, 876], "basemap": [231, 237, 239, 240, 245, 246, 249, 251, 253, 324, 348, 349, 350, 352, 353, 876, 882, 884, 885, 890, 891, 894, 896, 898, 969, 993, 994, 995, 997, 998, 1349, 1362], "upper": [231, 233, 234, 235, 237, 239, 249, 251, 253, 424, 527, 876, 878, 879, 880, 882, 884, 894, 896, 898, 1257, 1324], "colormesh": [231, 233, 234, 235, 237, 239, 249, 251, 253, 876, 878, 879, 880, 882, 884, 894, 896, 898], "64": [231, 233, 234, 235, 237, 239, 249, 251, 253, 876, 878, 879, 880, 882, 884, 894, 896, 898, 1323, 1328, 1329, 1330, 1334, 1336, 1338, 1339, 1342, 1356, 1362], "linewidth": [232, 234, 248, 877, 879, 893, 1325, 1334, 1335], "crosshair": [232, 248, 877, 893], "lat_lin": [233, 234, 246, 315, 352, 878, 879, 891, 960, 997, 1318, 1331, 1342, 1359], "lon_lin": [233, 234, 246, 315, 352, 878, 879, 891, 960, 997, 1318, 1331, 1342, 1359], "embellish": [233, 234, 315, 878, 879, 960, 1325, 1359], "add_grid_lin": [233, 315, 878, 960], "imshow": [233, 878, 1319, 1320, 1323, 1357], "reason": [233, 246, 878, 891], "america": [233, 234, 246, 315, 352, 878, 879, 891, 960, 997], "cr": [233, 234, 287, 315, 437, 504, 878, 879, 932, 960, 1080, 1147, 1314, 1315, 1318, 1324, 1325, 1331, 1338, 1342, 1344, 1345, 1352, 1353, 1356, 1357, 1358, 1359], "subsequ": [233, 234, 315, 878, 879, 960], "geoax": [233, 234, 315, 878, 879, 960, 1352, 1355, 1358], "platecarre": [233, 234, 315, 878, 879, 960, 1314, 1318, 1324, 1325, 1338, 1342, 1344, 1353, 1356, 1358], "drawinf": [233, 234, 878, 879], "shapefil": [233, 234, 315, 352, 878, 879, 960, 997], "certain": [233, 234, 315, 503, 552, 878, 879, 960, 1007, 1146, 1282, 1344, 1356], "instead": [233, 380, 452, 774, 878, 1027, 1095, 1307, 1315, 1344, 1349, 1355, 1362, 1363, 1365], "contour_valu": [234, 879], "maps_list": [234, 879], "countri": [234, 879], "110m": [234, 315, 879, 960], "background_zoom": [234, 879], "contour": [234, 879, 1312, 1322, 1340, 1361], "reson": [234, 315, 352, 879, 960, 997], "sequenc": [234, 879], "colour": [234, 879], "embelish": [234, 352, 879, 997], "10m": [234, 315, 879, 960, 1315, 1331, 1359], "50m": [234, 315, 879, 960, 1353, 1356], "naturalearthfeatur": [234, 315, 879, 960, 1359], "zoom": [234, 879], "background": [234, 352, 479, 495, 516, 879, 997, 1006, 1122, 1138, 1159, 1331, 1338, 1344], "cost": [234, 507, 879, 1150], "alpha": [235, 315, 352, 437, 484, 485, 486, 487, 488, 489, 771, 780, 880, 960, 997, 1080, 1127, 1128, 1129, 1130, 1131, 1132, 1325, 1334, 1359], "transpar": [235, 362, 880, 1009, 1334], "overplot": [235, 315, 352, 880, 960, 997], "plot_latitudinal_level": [236, 250, 881, 895], "y_index": [237, 251, 882, 896], "x_index": [239, 253, 884, 898], "veric": [242, 887], "area_thresh": [246, 352, 891, 997], "auto_rang": [246, 891], "min_lon": [246, 315, 352, 891, 960, 997, 1318, 1331, 1356, 1359], "92": [246, 782, 783, 784, 891, 1332, 1342], "max_lon": [246, 315, 352, 891, 960, 997, 1318, 1331, 1356, 1359], "86": [246, 891], "min_lat": [246, 315, 352, 891, 960, 997, 1318, 1331, 1356, 1359], "max_lat": [246, 315, 352, 891, 960, 997, 1318, 1331, 1356, 1359], "44": [246, 425, 479, 495, 891, 1068, 1122, 1138, 1307, 1318, 1321, 1344, 1361, 1362], "databas": [246, 352, 891, 997], "merc": [246, 352, 891, 997], "line_styl": [248, 311, 312, 316, 348, 349, 353, 893, 956, 957, 961, 993, 994, 998, 1331], "plot_rhi": [270, 303, 340, 915, 948, 985, 1358], "plot_vpt": [270, 303, 340, 915, 948, 985], "grid_project": [287, 932, 1065, 1066], "progress": [287, 324, 497, 932, 969, 1140], "some": [287, 324, 418, 509, 511, 932, 969, 1039, 1050, 1152, 1154, 1175, 1307, 1315, 1323, 1324, 1342, 1344, 1349, 1353, 1355, 1357, 1358, 1359, 1362], "correctli": [287, 324, 932, 969], "report": [287, 324, 375, 519, 576, 577, 932, 969, 1022, 1163, 1349, 1363], "github": [287, 324, 932, 969, 1307, 1335, 1349, 1362, 1365], "tracker": [287, 324, 932, 969, 1349, 1363], "azimuthalequidist": [287, 932], "line_lon": [311, 348, 956, 993], "line_lat": [311, 348, 956, 993], "compat": [311, 312, 313, 316, 348, 349, 350, 353, 377, 956, 957, 958, 961, 993, 994, 995, 998, 1024, 1365], "line_x": [312, 349, 957, 994], "line_i": [312, 349, 957, 994], "ro": [313, 350, 958, 995], "label_text": [313, 350, 958, 995], "label_offset": [313, 350, 958, 995], "shapefile_kwarg": [315, 960], "single_grid_lines_label": [315, 960], "edgecolor": [315, 960, 1334, 1359], "face": [315, 960], "lambertconform": [315, 960, 1315, 1331, 1352], "domain": [315, 352, 432, 497, 960, 997, 1075, 1140, 1318], "neither": [315, 352, 383, 960, 997, 1031], "extend": [315, 352, 376, 396, 543, 960, 997, 1023, 1273, 1359], "word": [315, 960], "ones": [315, 443, 463, 960, 1086, 1106, 1323], "tranpar": [315, 352, 960, 997], "pixel": [315, 502, 503, 511, 960, 1145, 1146, 1154, 1241, 1357, 1358, 1359], "lcc": [352, 997], "cylindr": [352, 997], "mill": [352, 997], "exhibit": [352, 997], "distort": [352, 997], "aea": [352, 997], "laea": [352, 997], "conform": [352, 997, 1349, 1351, 1359], "tmerc": [352, 997], "aeqd": [352, 997], "cass": [352, 997], "even": [352, 478, 509, 997, 1121, 1152, 1334, 1349, 1355, 1359, 1365], "cyl": [352, 997], "cannot": [352, 363, 997, 1010, 1357], "lake": [352, 997, 1359], "esri": [352, 997], "untest": [352, 997], "dtobj": [361, 1008], "storage_opt": [362, 372, 374, 1009, 1019, 1021], "anon": [362, 372, 374, 1009, 1019, 1021], "open": [362, 372, 374, 1009, 1019, 1021, 1175, 1328, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1363, 1365], "decompress": [362, 1009], "bzip2": [362, 1009], "close": [362, 494, 495, 507, 782, 783, 1009, 1137, 1138, 1150, 1359], "backend": [362, 372, 1009, 1019], "googl": [362, 372, 1009, 1019, 1363], "cloud": [362, 372, 478, 507, 1009, 1019, 1121, 1150, 1312, 1313, 1316, 1359, 1361, 1363, 1365], "storag": [362, 372, 1009, 1019, 1236], "amazon": [362, 372, 1009, 1019, 1314, 1315], "servic": [362, 372, 1009, 1019, 1314, 1315, 1323], "s3": [362, 372, 1009, 1019, 1314, 1315, 1326, 1344], "file_lik": [362, 1009], "use_rsl": [363, 1010], "read_": [363, 1010], "trmm": [363, 376, 1010, 1023, 1349, 1362], "choos": [363, 1010, 1312, 1322, 1340, 1344, 1361, 1365], "typeerror": [363, 389, 1010], "launch_datetim": [364, 1011], "radiosond": [364, 1011], "launch": [364, 1011], "record": [364, 1011, 1358, 1360], "target_datetim": [365, 1012], "closest": [365, 442, 450, 460, 473, 476, 782, 783, 1012, 1055, 1085, 1093, 1103, 1116, 1119], "profile_datetim": [365, 1012], "use_arm_scan_nam": [366, 1013], "scan_nam": [366, 1013], "cfradial2": [367, 1014], "use_file_field_attribut": [368, 1015], "csu": [368, 1015], "chill": [368, 1015], "chl": [368, 1015], "field_file_nam": [368, 1015], "long_nam": [368, 1015, 1344, 1352, 1360], "write_grid": [369, 1016], "zlib": [370, 371, 1017, 1018], "read_mdv": [370, 1017, 1310, 1319, 1330, 1334, 1335, 1336], "fulli": [370, 577, 1017, 1362], "interchang": [370, 1017], "vlevel": [370, 1017], "proj_polar_radar": [370, 1017], "proj_rhi_radar": [370, 1017], "13": [370, 446, 451, 466, 541, 1017, 1089, 1094, 1109, 1271, 1309, 1315, 1337, 1345, 1347, 1356, 1359, 1360, 1361], "vlevel_typ": [370, 1017], "vert_type_z": [370, 1017], "vert_type_elev": [370, 1017], "vert_type_az": [370, 1017], "17": [370, 1017, 1332, 1337, 1338, 1340, 1361], "vert_type_pressur": [370, 1017], "vert_type_theta": [370, 1017], "unknown": [370, 1017], "most": [370, 481, 1007, 1017, 1124, 1323, 1353, 1355, 1359, 1365], "station": [372, 373, 1019, 1020, 1315], "linear_interp": [372, 1019], "nexrad": [372, 373, 374, 375, 1019, 1020, 1021, 1022, 1312, 1313, 1316, 1322, 1326, 1340, 1344, 1349, 1360, 1361], "archiv": [372, 1019, 1327, 1349], "host": [372, 374, 1019, 1021], "noaa": [372, 374, 376, 1019, 1021, 1023, 1314, 1315, 1326, 1344], "nation": [372, 374, 1019, 1021, 1314, 1323], "climat": [372, 374, 1019, 1021, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "ucar": [372, 373, 1019, 1020], "thredd": [372, 373, 379, 1019, 1020, 1026], "server": [372, 373, 1019, 1020], "letter": [372, 373, 375, 1019, 1020, 1022], "icao": [372, 373, 1019, 1020], "older": [372, 373, 1019, 1020, 1307, 1312, 1313, 1316, 1349, 1361, 1363], "mix": [372, 478, 552, 1019, 1121, 1282, 1326, 1344], "nearest": [372, 442, 450, 451, 460, 473, 476, 496, 527, 533, 534, 569, 1019, 1063, 1066, 1085, 1093, 1094, 1103, 1116, 1119, 1139, 1257, 1263, 1264, 1299, 1355, 1358], "fsspec": [372, 374, 1019, 1021], "cut": [372, 373, 374, 503, 571, 572, 1019, 1020, 1021, 1146, 1301, 1302], "ncdc": [372, 374, 1019, 1021], "gov": [372, 374, 1019, 1021, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1332, 1334, 1335, 1336, 1337, 1339, 1342, 1343], "edu": [372, 373, 502, 1019, 1020, 1145, 1326, 1344], "catalog": [372, 373, 1019, 1020], "html": [372, 373, 502, 1019, 1020, 1145, 1349, 1357, 1362, 1363], "common": [373, 1020, 1349, 1362], "cdm": [373, 379, 1020, 1026], "url": [373, 1020], "java": [373, 379, 1020, 1026], "tool": [373, 379, 1020, 1026, 1349, 1362, 1363], "opendap": [373, 1020], "accept": [373, 437, 442, 450, 460, 473, 483, 508, 509, 1020, 1080, 1085, 1093, 1103, 1116, 1126, 1151, 1152, 1307, 1363], "compil": [373, 508, 1020, 1151, 1349, 1362], "unidata": [373, 1020, 1314], "htm": [373, 1020], "nw": [374, 1021], "wsr": [374, 511, 1021, 1154], "88d": [374, 511, 1021, 1154], "iii": [374, 1021], "distribut": [374, 479, 495, 515, 517, 518, 521, 522, 523, 524, 555, 556, 1021, 1122, 1138, 1158, 1160, 1162, 1241, 1251, 1252, 1253, 1254, 1285, 1286, 1344, 1349, 1363], "roc": [374, 1021], "wsr88d": [374, 375, 1021, 1022], "level_iii": [374, 1021], "level3info": [374, 1021], "asp": [374, 1021], "radar_format": [375, 1022], "callid": [375, 1022], "skip_range_check": [375, 1022], "rsl_radar": [375, 1022], "id": [375, 380, 1022, 1027], "verifi": [375, 557, 575, 1022, 1287, 1305], "ioerror": [375, 1022], "time_ord": [376, 1023], "full_xhdr": [376, 1023], "noaa_hh_hdr": [376, 1023], "ignore_xhdr": [376, 1023], "ignore_sweep_start_m": [376, 1023], "sigmet": [376, 1023, 1349], "iri": [376, 1023, 1349, 1362], "sequenti": [376, 1023, 1323], "re": [376, 478, 1023, 1121], "manner": [376, 1023], "determind": [376, 1023], "maintain": [376, 1023, 1062], "reverse_and_rol": [376, 1023], "strictli": [376, 1023], "increas": [376, 482, 497, 507, 510, 1023, 1066, 1125, 1140, 1150, 1153, 1323, 1355, 1363], "becom": [376, 1023, 1344, 1352, 1355, 1358], "thisopt": [376, 1023], "strict": [376, 520, 1023], "header": [376, 610, 611, 1023], "decod": [376, 520, 1023], "hurrican": [376, 1023, 1344], "hunter": [376, 1023], "millisecond": [376, 1023], "precis": [376, 478, 1023, 1121, 1307], "explic": [376, 1023], "read_rsl": [376, 1023, 1362], "error": [376, 380, 508, 509, 520, 531, 560, 561, 1023, 1027, 1151, 1152, 1261, 1290, 1291, 1307, 1358, 1362], "uf": [377, 382, 1024, 1029, 1349], "implement": [377, 383, 385, 387, 396, 406, 502, 513, 1024, 1031, 1044, 1065, 1145, 1156, 1309], "write_proj_coord_si": [379, 1026], "proj_coord_si": [379, 1026], "write_point_x_y_z": [379, 1026], "write_point_lon_lat_alt": [379, 1026], "projectioncoordinatesystem": [379, 1026], "toolsui": [379, 1026], "appropri": [379, 1026], "understood": [379, 1026], "rgb": [380, 1027], "viridi": [380, 1027, 1344], "color_level": [380, 1027], "warp": [380, 1027], "sld": [380, 1027], "use_doublequot": [380, 1027], "geotiff": [380, 1027, 1349], "sphere": [380, 544, 570, 1027, 1274, 1300], "latter": [380, 1027], "usabl": [380, 1027], "former": [380, 1027], "gi": [380, 1027], "while": [380, 1027, 1353, 1365], "show": [380, 1027, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1344, 1351, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1363], "lack": [380, 421, 1027, 1042, 1052], "gdal": [380, 1027, 1349], "via": [380, 1027, 1063, 1064], "conda": [380, 1027, 1349, 1362, 1363, 1365], "rbg": [380, 1027], "channel": [380, 439, 445, 459, 471, 472, 477, 757, 792, 1027, 1082, 1088, 1102, 1114, 1115, 1120], "tabl": [380, 558, 560, 561, 782, 783, 784, 1027, 1288, 1290, 1291, 1357], "column": [380, 545, 546, 1027, 1275, 1276, 1312, 1341, 1347, 1361], "categor": [380, 1027, 1345, 1359], "gdalwarp": [380, 1027], "command": [380, 1027, 1349, 1352, 1357, 1359, 1363, 1365], "descriptor": [380, 1027], "tiff": [380, 1027], "don": [380, 1027, 1318], "quot": [380, 1027], "help": [380, 1027, 1164, 1318, 1323, 1344, 1363, 1365], "translat": [380, 1027], "sr": [380, 1027], "mdv_field_nam": [381, 1028], "field_write_ord": [381, 382, 1028, 1029], "sentinel": [381, 382, 1028, 1029], "writabl": [381, 1028], "satisfi": [381, 1028], "xy": [381, 1028, 1066], "irregular": [381, 1028, 1307], "exce": [381, 1028, 1344], "122": [381, 1028, 1314, 1318, 1324, 1343], "uncompress": [381, 1028], "sai": [381, 1028, 1363], "uf_field_nam": [382, 1029], "radar_field_nam": [382, 1029], "volume_start": [382, 1029], "templates_extra": [382, 1029], "radar_beam_width_h": [382, 1029], "radar_beam_width_v": [382, 1029], "radar_receiver_bandwidth": [382, 1029], "prt": [382, 1029], "polarization_mod": [382, 1029], "round": [382, 1029, 1063, 1064, 1307], "_uf_scale_factor": [382, 1029], "charact": [382, 1029], "advanc": [382, 1029], "usag": [382, 1029], "templat": [382, 1029, 1363], "mandatory_head": [382, 1029], "optional_head": [382, 1029], "field_head": [382, 1029], "lazi": [383, 386, 392, 397, 399, 412, 419, 1030, 1031, 1033, 1040], "set_lazi": [383, 1031], "callabl": [383, 419, 1031, 1040], "cach": [383, 410, 1031], "tradit": [383, 386, 397, 399, 1031], "supplement": [383, 1031], "syntax": [383, 1031], "prevent": [383, 1031, 1066, 1363], "comparison": [383, 437, 513, 1031, 1080, 1156, 1318], "__cmp__": [383, 1031], "__ge__": [383, 1031], "__gt__": [383, 1031], "__le__": [383, 1031], "__lt__": [383, 1031], "__ne__": [383, 1031], "nor": [383, 1031], "viewitem": [383, 1031], "viewkei": [383, 1031], "viewvalu": [383, 1031], "fromkei": [383, 1031], "tradition": [383, 407, 1031], "referenc": [383, 1031], "lazyloaddictionari": [383, 1031], "henc": [383, 1031], "key1": [383, 1031], "value1": [383, 1031], "key2": [383, 1031], "value2": [383, 1031], "lazy_func": [383, 1031], "lambda": [383, 1031], "lazykey1": [383, 1031], "privat": [383, 784, 1363], "delattr": 385, "dir": [387, 1175], "format_spec": 389, "formatt": 389, "getattr": 391, "helper": [393, 403, 404, 1323], "pickl": [393, 403, 404], "subclass": 396, "noth": 396, "overridden": 396, "protocol": 404, "repr": [405, 520], "setattr": 406, "memori": [408, 513, 1066, 1156, 1357, 1358], "abstract": 410, "overrid": [410, 1335, 1359], "issubclass": 410, "invok": 410, "earli": 410, "abc": 410, "abcmeta": 410, "__subclasscheck__": 410, "notimpl": 410, "outcom": 410, "item": [411, 421, 1032, 1042, 1045, 1052], "els": [413, 414, 1034, 1035, 1046, 1358], "value_cal": [419, 1040], "mx": 423, "mn": 423, "relh_slop": [423, 437, 517, 1080, 1160], "005": 423, "destandard": 423, "h_iso0": [423, 437, 504, 1080, 1147], "slope": [423, 437, 497, 508, 517, 1080, 1140, 1151, 1160], "sigmoid": [423, 437, 517, 1080, 1160], "field_std": 423, "hlowerleft": 424, "hupperright": 424, "matrix": [424, 437, 508, 771, 780, 1080, 1151], "freq": [425, 453, 454, 475, 498, 499, 1068, 1096, 1097, 1118, 1141, 1142], "rng": [425, 501, 526, 527, 543, 1068, 1144, 1256, 1257, 1273], "wai": [425, 450, 454, 461, 481, 497, 498, 514, 773, 774, 775, 1068, 1093, 1097, 1104, 1124, 1140, 1141, 1157, 1318, 1351, 1358, 1363, 1365], "ga": [425, 454, 461, 498, 773, 774, 775, 1068, 1097, 1104, 1141], "empir": [425, 1068], "satur": [425, 1068], "latm": [425, 1068], "toa": [426, 510, 1065, 1066, 1069, 1153], "floor": [426, 1069], "nyq": [427, 1070, 1353], "check_nyq_uniform": [427, 1070], "deriv": [427, 507, 509, 1070, 1150, 1152, 1357], "try": [427, 507, 513, 1070, 1150, 1156, 1355, 1356, 1359], "vel_dict": [427, 429, 430, 1070, 1072, 1073], "entri": [427, 1070, 1360], "am": [428, 1071, 1349, 1363], "glossari": [428, 1071], "dry": [428, 1071, 1345, 1357], "world": [428, 1071, 1312, 1322], "aloft": [428, 1071, 1358, 1359], "oppos": [428, 1071, 1326], "nwp": [428, 1071, 1345, 1359], "why": [428, 1071, 1363], "easi": [428, 1055, 1071, 1349], "think": [428, 1071], "turn": [428, 1071, 1323, 1344, 1349], "spin": [428, 1071], "author": [428, 495, 1071, 1138, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346], "randi": [428, 1071], "chase": [428, 1071], "dopplerchas": [428, 1071], "american": [428, 1071], "meteorolog": [428, 519, 1071, 1163], "2022": [428, 552, 1071, 1282, 1314, 1326, 1344, 1349, 1363], "meteorologi": [428, 432, 446, 451, 466, 507, 519, 541, 1062, 1071, 1075, 1089, 1094, 1109, 1150, 1163, 1271], "ametsoc": [428, 1071], "org": [428, 479, 495, 502, 552, 1071, 1122, 1138, 1145, 1282, 1326, 1344, 1349, 1363], "wiki": [428, 502, 1071, 1145], "sdbz_field": [429, 431, 438, 440, 456, 1072, 1074, 1081, 1083, 1099], "spectral": [429, 431, 438, 440, 448, 456, 458, 464, 465, 466, 467, 468, 469, 470, 481, 541, 612, 1072, 1074, 1081, 1083, 1091, 1099, 1101, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1124, 1271, 1307], "signal_field": [430, 432, 445, 446, 457, 466, 467, 468, 469, 471, 472, 477, 1073, 1075, 1088, 1089, 1100, 1109, 1110, 1111, 1112, 1114, 1115, 1120], "negative_awai": [430, 449, 1073, 1092], "negative_toward": [430, 449, 1073, 1092], "width_dict": [431, 432, 1074, 1075], "subtract_nois": [432, 441, 448, 449, 457, 458, 459, 465, 468, 469, 470, 1075, 1084, 1091, 1092, 1100, 1101, 1102, 1108, 1111, 1112, 1113], "noise_field": [432, 447, 451, 452, 457, 462, 468, 469, 1075, 1090, 1094, 1095, 1100, 1105, 1111, 1112], "lag": [432, 441, 449, 459, 471, 472, 1075, 1084, 1092, 1102, 1114, 1115], "subtract": [432, 441, 448, 449, 457, 458, 459, 465, 468, 469, 470, 479, 495, 757, 1075, 1084, 1091, 1092, 1100, 1101, 1102, 1108, 1111, 1112, 1113, 1122, 1138], "denomin": [432, 1075], "varianc": [432, 541, 542, 547, 558, 559, 1075, 1271, 1272, 1277, 1288, 1289], "srivastava": [432, 1075], "jameson": [432, 1075], "hildebrand": [432, 446, 451, 466, 541, 773, 1075, 1089, 1094, 1109, 1271], "februari": [432, 1075], "1979": [432, 1075], "rhohv_snow": [433, 513, 1076, 1156], "rhohv_rain": [433, 513, 1076, 1156], "rhohv_ml": [433, 513, 1076, 1156], "93": [433, 453, 475, 497, 513, 1076, 1096, 1118, 1140, 1156], "zh_snow": [433, 513, 1076, 1156], "zh_rain": [433, 513, 1076, 1156], "zh_ml": [433, 513, 1076, 1156], "27": [433, 513, 1076, 1156, 1342], "zv_snow": [433, 513, 1076, 1156], "zv_rain": [433, 513, 1076, 1156], "zv_ml": [433, 513, 1076, 1156], "26": [433, 442, 513, 1076, 1085, 1156], "beam_factor": [433, 513, 1076, 1156], "npts_diagram": [433, 513, 1076, 1156], "81": [433, 513, 1076, 1156, 1360], "rng_bottom_max": [433, 513, 1076, 1156], "200000": [433, 513, 1076, 1156, 1331, 1344], "rhohv_field": [433, 436, 444, 482, 757, 767, 768, 769, 782, 783, 784, 1076, 1079, 1087, 1125], "theoretical_cross_correlation_ratio": [433, 1076], "snow": [433, 479, 485, 495, 552, 769, 1076, 1122, 1128, 1138, 1282, 1326, 1344, 1345, 1359], "diagram": [433, 1076], "could": [433, 532, 540, 760, 761, 1076, 1262, 1270, 1315, 1363], "rhohv_theo_dict": [433, 1076], "sigma_bird": [434, 1077], "vol_refl_field": [434, 475, 1077, 1118], "bird_density_field": [434, 1077], "densiti": [434, 517, 1077, 1160, 1345, 1359], "volumetr": [434, 475, 1077, 1118, 1350], "bird_density_dict": [434, 1077], "filt_field": [435, 1078], "unfilt_field": [435, 1078], "ccor_field": [435, 1078], "ccor": [435, 1078], "unfilt": [435, 1078, 1359], "ccor_dict": [435, 1078], "cdr_field": [436, 1079], "circular": [436, 555, 556, 1079, 1285, 1286, 1344], "depolar": [436, 1079], "cdr": [436, 1079], "features_matrix": [437, 1080], "weight": [437, 460, 504, 507, 513, 518, 760, 761, 782, 1063, 1064, 1065, 1066, 1080, 1103, 1147, 1150, 1156, 1162, 1355, 1358], "var_nam": [437, 483, 504, 517, 1080, 1126, 1147, 1160], "hydro_nam": [437, 483, 504, 517, 1080, 1126, 1147, 1160], "ag": [437, 504, 513, 1080, 1147, 1156, 1345, 1357, 1359], "lr": [437, 504, 1080, 1147, 1345, 1357, 1359], "rp": [437, 504, 1080, 1147, 1345, 1357, 1359], "rn": [437, 504, 1080, 1147, 1345, 1357, 1359], "mh": [437, 504, 1080, 1147, 1345, 1357, 1359], "ih": [437, 504, 1080, 1147, 1345, 1357, 1359], "hdg": [437, 504, 1080, 1147, 1345, 1357, 1359], "nsamples_it": [437, 1080], "20000": [437, 480, 482, 515, 1080, 1123, 1125, 1158, 1331, 1355], "external_iter": [437, 1080], "internal_iter": [437, 1080], "cv_approach": [437, 1080], "num_samples_arr": [437, 1080], "n_samples_syn": [437, 1080], "50": [437, 450, 474, 476, 504, 511, 525, 751, 753, 769, 1080, 1093, 1117, 1119, 1147, 1154, 1255, 1320, 1338, 1342, 1345, 1346, 1355, 1357, 1358, 1359, 1360], "nmedoids_min": [437, 483, 1080, 1126], "acceptance_threshold": [437, 483, 1080, 1126], "001": [437, 517, 549, 1080, 1160, 1279, 1334], "parallel": [437, 507, 508, 509, 1080, 1150, 1151, 1152], "sample_data": [437, 1080], "kmax_it": [437, 483, 1080, 1126], "nsamples_smal": [437, 1080], "40000": [437, 1080, 1320, 1324, 1331, 1355], "sampling_size_clara": [437, 1080], "niter_clara": [437, 1080], "keep_labeled_data": [437, 1080], "use_median": [437, 483, 1080, 1126], "allow_label_dupl": [437, 1080], "centroid": [437, 480, 504, 515, 1080, 1123, 1147, 1158, 1359], "nsampl": [437, 515, 517, 1080, 1158, 1160], "nvariabl": [437, 504, 1080, 1147], "extern": [437, 1080], "loop": [437, 1080, 1346], "medoid": [437, 483, 1080, 1126], "inter": [437, 483, 1080, 1126], "quantil": [437, 483, 767, 1080, 1126], "dispers": [437, 483, 1080, 1126], "cluster": [437, 504, 1080, 1147, 1359], "critic": [437, 1080], "approach": [437, 497, 504, 511, 513, 1080, 1140, 1147, 1154, 1156], "reject": [437, 1080], "intermedi": [437, 478, 483, 1080, 1121, 1126], "kmedoid": [437, 483, 1080, 1126], "clara": [437, 1080], "exceed": [437, 493, 1080, 1136], "kept": [437, 482, 1080, 1125], "labeled_data": [437, 1080], "medoids_dict": [437, 483, 1080, 1126], "final_medoids_dict": [437, 483, 1080, 1126], "sphidp_field": [438, 1081], "phase_offset": [439, 449, 1082, 1092], "signal_h_field": [439, 441, 448, 449, 458, 459, 464, 465, 470, 1082, 1084, 1091, 1092, 1101, 1102, 1107, 1108, 1113], "signal_v_field": [439, 441, 448, 449, 458, 459, 464, 465, 470, 1082, 1084, 1091, 1092, 1101, 1102, 1107, 1108, 1113], "sdbzv_field": [440, 1083], "zdr_dict": [440, 441, 1083, 1084], "noise_h_field": [441, 448, 449, 458, 459, 465, 470, 1084, 1091, 1092, 1101, 1102, 1108, 1113], "noise_v_field": [441, 448, 449, 458, 459, 465, 470, 1084, 1091, 1092, 1101, 1102, 1108, 1113], "ref_tim": [442, 450, 460, 473, 474, 476, 1085, 1093, 1103, 1116, 1117, 1119], "latlon_tol": [442, 473, 476, 526, 554, 1085, 1116, 1119, 1256, 1284], "0005": [442, 473, 476, 1085, 1116, 1119], "delta_rng": [442, 473, 543, 1085, 1116, 1273], "15000": [442, 473, 760, 761, 1085, 1116, 1351, 1355], "delta_azi": [442, 473, 528, 543, 1085, 1116, 1258, 1273], "hmax": [442, 450, 460, 473, 476, 554, 1085, 1093, 1103, 1116, 1119, 1284], "hre": [442, 450, 460, 473, 476, 511, 1085, 1093, 1103, 1116, 1119, 1154], "250": [442, 473, 482, 1065, 1066, 1085, 1116, 1125, 1357, 1360], "avg_typ": [442, 450, 460, 473, 528, 530, 1085, 1093, 1103, 1116, 1258, 1260], "nvalid_min": [442, 450, 460, 473, 513, 528, 530, 760, 761, 1085, 1093, 1103, 1116, 1156, 1258, 1260], "interp_kind": [442, 450, 460, 473, 476, 569, 1085, 1093, 1103, 1116, 1119, 1299], "qvp": [442, 450, 460, 473, 476, 514, 1085, 1093, 1103, 1116, 1119, 1157], "enhanc": [442, 1085, 1365], "interest": [442, 473, 476, 1085, 1116, 1119, 1318, 1344, 1359], "central": [442, 473, 543, 1085, 1116, 1273], "evp": [442, 473, 1085, 1116], "regardless": [442, 450, 460, 473, 476, 493, 1085, 1093, 1103, 1116, 1119, 1136], "elimin": [442, 450, 460, 473, 476, 1085, 1093, 1103, 1116, 1119, 1353, 1355], "kaltenboeck": [442, 1085], "ryzhkov": [442, 450, 484, 511, 514, 753, 1085, 1093, 1127, 1154, 1157], "2016": [442, 450, 482, 504, 1085, 1093, 1125, 1147, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1363], "storm": [442, 495, 516, 1085, 1138, 1159, 1241, 1242, 1244, 1326, 1344, 1355, 1358], "explor": [442, 513, 760, 761, 1085, 1156], "methodologi": [442, 519, 1085, 1163, 1353], "meteorologisch": [442, 1085], "zeitschrift": [442, 1085], "207": [442, 1085], "222": [442, 1085, 1310, 1327, 1358], "fields_in_list": [443, 463, 1086, 1106], "fields_out_list": [443, 463, 481, 1086, 1106, 1124], "fourier": [443, 463, 1086, 1106], "get_window": [443, 463, 1086, 1106], "ifft": [443, 1086], "l_field": [444, 1087], "logarithm": [444, 1087], "ll": [444, 1087], "log10": [444, 1087, 1318], "mph_dict": [445, 1088], "navg": [446, 466, 541, 1089, 1109, 1271], "nnoise_min": [446, 466, 541, 1089, 1109, 1271], "dbadu_to_dbm_hh": [446, 466, 468, 469, 1089, 1109, 1111, 1112], "dbadu_to_dbm_vv": [446, 466, 468, 469, 1089, 1109, 1111, 1112], "sehkon": [446, 466, 541, 1089, 1109, 1271], "1974": [446, 451, 466, 541, 1089, 1094, 1109, 1271], "noise_dict": [446, 451, 452, 466, 1089, 1094, 1095, 1109], "sekhon": [446, 451, 466, 541, 773, 1089, 1094, 1109, 1271], "808": [446, 451, 466, 541, 1089, 1094, 1109, 1271], "811": [446, 451, 466, 541, 1089, 1094, 1109, 1271], "noisedbz_v": [447, 1090], "ref_dist": [447, 1090], "noisedbz": [447, 1090], "fields_list": [448, 449, 1091, 1092], "use_pwr": [448, 1091], "smooth_window": [448, 465, 468, 469, 1091, 1108, 1111, 1112], "srhohv_field": [448, 458, 464, 1091, 1101, 1107], "pwr_h_field": [448, 458, 465, 1091, 1101, 1108], "pwr_v_field": [448, 458, 465, 1091, 1101, 1108], "gaussian": [448, 465, 468, 469, 515, 771, 780, 792, 1091, 1108, 1111, 1112, 1158, 1241, 1242, 1334], "quasi": [450, 460, 514, 1093, 1103, 1157], "zhang": [450, 473, 484, 514, 1093, 1116, 1127, 1157], "reev": [450, 514, 1093, 1157], "kumjian": [450, 460, 514, 1093, 1103, 1157], "tschallen": [450, 514, 1093, 1157], "tr\u00f6mel": [450, 1093], "simmer": [450, 484, 514, 1093, 1127, 1157], "jtech": [450, 473, 1093, 1116], "33": [450, 1093, 1360, 1361], "551": [450, 1093], "562": [450, 1093], "nbins_min": [451, 773, 774, 1094], "max_std_pwr": [451, 773, 1094], "pwr_field": [451, 452, 461, 469, 481, 1094, 1095, 1104, 1112, 1124], "get_noise_po": [451, 452, 542, 1094, 1095, 1272], "noisi": [451, 452, 1094, 1095], "noise_pos_dict": [451, 452, 1094, 1095], "reserv": [451, 526, 527, 554, 1094, 1256, 1257, 1284], "npulses_rai": [452, 774, 1095], "ngates_min": [452, 542, 1095, 1272], "800": [452, 542, 760, 761, 774, 1095, 1272], "ivic": [452, 542, 549, 558, 560, 561, 774, 1095, 1272, 1279, 1288, 1290, 1291], "et": [452, 478, 479, 495, 504, 507, 511, 512, 516, 751, 753, 757, 774, 1095, 1121, 1122, 1138, 1147, 1150, 1154, 1155, 1159, 1344, 1359], "al": [452, 478, 479, 495, 504, 507, 508, 511, 512, 516, 751, 753, 757, 774, 1095, 1121, 1122, 1138, 1147, 1150, 1151, 1154, 1155, 1159, 1344, 1359], "curti": [452, 542, 1095, 1272], "torr": [452, 542, 1095, 1272], "2737": [452, 542, 1095, 1272], "2753": [452, 542, 1095, 1272], "kw2": [453, 1096], "rcs_field": [453, 454, 1096, 1097], "water": [453, 475, 497, 1096, 1118, 1140], "rc": [453, 454, 497, 1096, 1097, 1140], "rcs_dict": [453, 454, 1096, 1097], "lmf": [454, 461, 1097, 1104], "attg": [454, 461, 498, 773, 774, 775, 1097, 1104, 1141], "radconst": [454, 461, 1097, 1104], "tx_pwr": [454, 1097], "lrx": [454, 461, 1097, 1104], "ltx": [454, 1097], "lradom": [454, 461, 1097, 1104], "neglect_gas_att": [454, 1097], "feed": [454, 461, 1097, 1104], "radom": [454, 461, 782, 783, 1097, 1104], "neglect": [454, 1097], "ort_refl_field": [455, 1098], "refl": [455, 752, 753, 1098, 1332], "ort_refl": [455, 1098], "dbz_dict": [456, 457, 1099, 1100], "use_rhohv": [458, 464, 1101, 1107], "srhohv": [458, 464, 1101, 1107], "srho_hv": [458, 1101], "rhohv_dict": [458, 459, 1101, 1102], "50000": [460, 773, 1103, 1320, 1324, 1344, 1355], "weight_pow": [460, 1103], "ab": [460, 1103], "grng": [460, 1103], "tobin": [460, 1103], "2017": [460, 473, 1103, 1116], "surfac": [460, 479, 495, 1103, 1122, 1138, 1344], "ic": [460, 473, 1103, 1116, 1334, 1345, 1359], "pellet": [460, 1103], "forecast": [460, 1103], "2065": [460, 1103], "2082": [460, 1103], "THE": [461, 1104], "s_pwr_dict": [461, 1104], "sphidp_dict": [464, 1107], "compute_pow": [465, 469, 1108, 1112], "szdr_dict": [465, 1108], "phase_dict": [467, 1110], "pwr_dict": [468, 1111], "sdbz_dict": [469, 1112], "srhohv_dict": [470, 1113], "statist": [471, 472, 504, 530, 1114, 1115, 1147, 1260], "fluctuat": [471, 472, 1114, 1115], "st1_dict": [471, 1114], "st1": [471, 1114, 1357], "st2_dict": [472, 1115], "st2": [472, 1115, 1357], "bukovc": [473, 1116], "winter": [473, 495, 1116, 1138, 1326, 1344], "liquid": [473, 1116, 1359], "reveal": [473, 1116, 1359], "2dvd": [473, 1116], "oklahoma": [473, 1116, 1237], "56": [473, 1116, 1346, 1358], "1345": [473, 1116], "1363": [473, 1116], "along_azi": [474, 1117], "fixed_rang": [474, 1117], "fixed_azimuth": [474, 1117], "fixed_elev": [474, 1117], "rng_tol": [474, 1117], "value_start": [474, 1117], "value_stop": [474, 1117], "acoord": [474, 1117], "along_el": [474, 1117], "along_rng": [474, 1117], "around": [474, 479, 482, 495, 525, 551, 782, 783, 1065, 1117, 1122, 1125, 1138, 1241, 1255, 1281, 1319, 1334, 1337, 1344, 1351, 1353, 1358, 1359], "stop": [474, 1117], "kw": [475, 1118], "vol_refl_dict": [475, 1118], "10log10": [475, 1118], "wide": [477, 478, 1120, 1121], "wbn_dict": [477, 1120], "cappi_level": [478, 1121], "zr_a": [478, 1121], "zr_b": [478, 1121], "core_wt_threshold": [478, 1121], "conv_wt_threshold": [478, 1121], "conv_scale_km": [478, 1121], "min_reflect": [478, 1121], "conv_min_refl": [478, 1121], "conv_core_threshold": [478, 1121], "42": [478, 479, 495, 516, 1121, 1122, 1138, 1159, 1342, 1344], "override_check": [478, 1121], "computation": [478, 1121], "classifi": [478, 479, 495, 504, 1006, 1121, 1122, 1138, 1147, 1344, 1345, 1359], "convect": [478, 479, 495, 516, 1006, 1121, 1122, 1138, 1159, 1312, 1341, 1347, 1361], "stratiform": [478, 479, 495, 516, 1006, 1121, 1122, 1138, 1159, 1312, 1341, 1347, 1358, 1361], "\u00e0": [478, 1121], "trou": [478, 1121], "wavelet": [478, 1121], "atwt": [478, 1121], "multiresolut": [478, 1121], "analysi": [478, 546, 782, 783, 1062, 1121, 1276], "focus": [478, 1121], "robust": [478, 1054, 1121, 1359], "raut": [478, 1121], "2020": [478, 1121, 1326, 1349, 1362, 1363], "relationship": [478, 1121], "sensit": [478, 482, 1121, 1125], "howev": [478, 507, 1121, 1150, 1353, 1357, 1358, 1359], "signific": [478, 1121, 1359], "approxim": [478, 1121], "break": [478, 1121], "season": [478, 1121], "2018": [478, 1121], "discuss": [478, 1121, 1349], "insensit": [478, 1121], "variat": [478, 507, 1121, 1150], "dyadic": [478, 1121], "natur": [478, 1066, 1121], "scale_break_us": [478, 1121], "greater": [478, 516, 1121, 1159, 1344], "bypass": [478, 1121], "saniti": [478, 1121], "fall": [478, 1121], "strong": [478, 495, 1121, 1138, 1358, 1359], "updraft": [478, 1121, 1358], "activ": [478, 1121, 1365], "collis": [478, 1121], "coalesc": [478, 1121], "remain": [478, 1121], "intens": [478, 516, 1121, 1159, 1241, 1359], "unclassifi": [478, 1121], "karekar": [478, 1121], "puranik": [478, 1121], "techniqu": [478, 493, 1062, 1121, 1136, 1358], "infrar": [478, 1121], "satellit": [478, 1121], "ieee": [478, 508, 1121, 1151], "geosci": [478, 508, 1121, 1151], "remot": [478, 508, 1121, 1151, 1314, 1363], "sen": [478, 508, 1121, 1151], "lett": [478, 1121], "328": [478, 1121, 1327, 1340, 1361], "330": [478, 1121, 1349, 1363], "seed": [478, 1121], "reeder": [478, 1121], "jakob": [478, 1121], "cascad": [478, 1121], "downscal": [478, 1121], "rainfal": [478, 484, 485, 486, 487, 488, 489, 490, 507, 509, 753, 1121, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1150, 1152, 1359], "geophi": [478, 1121], "123": [478, 1121], "2050": [478, 1121], "2067": [478, 1121], "louf": [478, 782, 783, 784, 1121], "gayatri": [478, 1121], "murugavel": [478, 1121], "konwar": [478, 1121], "prabhakaran": [478, 1121], "tran": [478, 1121], "58": [478, 751, 753, 1121, 1342], "5409": [478, 1121], "5415": [478, 1121], "dx": [479, 495, 497, 516, 1122, 1138, 1140, 1159, 1344], "dy": [479, 495, 516, 1122, 1138, 1159, 1344], "level_m": [479, 495, 1122, 1138], "always_core_thr": [479, 495, 1006, 1122, 1138, 1344], "bkg_rad_km": [479, 495, 1122, 1138, 1344], "use_cosin": [479, 495, 1006, 1122, 1138, 1344], "max_diff": [479, 495, 1006, 1122, 1138, 1344], "zero_diff_cos_v": [479, 495, 1006, 1122, 1138, 1344], "55": [479, 495, 1122, 1138, 1338, 1344, 1359], "scalar_diff": [479, 495, 1006, 1122, 1138, 1344], "use_addit": [479, 495, 1006, 1122, 1138, 1344], "calc_thr": [479, 495, 1122, 1138, 1344], "weak_echo_thr": [479, 495, 1122, 1138, 1344], "min_dbz_us": [479, 1122, 1344], "db_averag": [479, 495, 1122, 1138, 1344], "remove_small_object": [479, 495, 1122, 1138, 1344], "min_km2_siz": [479, 495, 1122, 1138, 1344], "val_for_max_conv_rad": [479, 1122, 1344], "max_conv_rad_km": [479, 1122, 1344], "cs_core": [479, 1122], "nosfcecho": [479, 495, 1122, 1138, 1344], "weakecho": [479, 495, 1122, 1138, 1344], "sf": [479, 1122, 1344], "conv": [479, 1122, 1344], "estimate_flag": [479, 495, 1122, 1138, 1344], "estimate_offset": [479, 495, 1122, 1138, 1344], "partit": [479, 495, 516, 1122, 1138, 1159, 1309, 1359], "yuter": [479, 495, 516, 552, 1006, 1122, 1138, 1159, 1282, 1326, 1344], "1997": [479, 495, 1006, 1122, 1138, 1344], "pars": [479, 495, 1122, 1138], "least": [479, 481, 495, 505, 506, 782, 1122, 1124, 1138, 1148, 1149, 1344], "cosin": [479, 495, 1006, 1122, 1138, 1344], "simpler": [479, 495, 1122, 1138, 1344], "scalar": [479, 495, 1006, 1122, 1138, 1344], "eqn": [479, 495, 1006, 1122, 1138], "b1": [479, 495, 1006, 1122, 1138], "percentag": [479, 495, 554, 1122, 1138, 1284], "weak": [479, 495, 1122, 1138, 1344], "underestim": [479, 495, 1122, 1138, 1344], "wih": [479, 495, 1122, 1138], "convsf_dict": [479, 1122, 1344], "raindrop": [479, 495, 1122, 1138, 1344], "pacif": [479, 495, 1122, 1138, 1344], "warm": [479, 495, 507, 1122, 1138, 1150, 1344, 1359], "pool": [479, 495, 1122, 1138, 1344], "implic": [479, 495, 1122, 1138, 1344], "appl": [479, 495, 509, 514, 516, 518, 1122, 1138, 1152, 1157, 1159, 1162, 1344, 1363], "meteor": [479, 495, 509, 514, 516, 518, 1122, 1138, 1152, 1157, 1159, 1162, 1344, 1363], "36": [479, 495, 1122, 1138, 1315, 1318, 1320, 1324, 1338, 1342, 1344, 1346, 1355], "847": [479, 495, 1122, 1138, 1344], "867": [479, 495, 1122, 1138, 1344], "doi": [479, 482, 495, 504, 508, 509, 511, 552, 1122, 1125, 1138, 1147, 1151, 1152, 1154, 1282, 1326, 1344, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "1175": [479, 495, 509, 511, 1122, 1138, 1152, 1154, 1344], "1520": [479, 495, 1122, 1138, 1344], "0450": [479, 495, 1122, 1138, 1344], "036": [479, 495, 1122, 1138, 1344], "3c0847": [479, 495, 1122, 1138, 1344], "morsdo": [479, 495, 1122, 1138, 1344], "3e2": [479, 495, 1122, 1138, 1344], "smith": [479, 495, 1122, 1138, 1344], "wilheit": [479, 495, 1122, 1138, 1344], "zipser": [479, 495, 1122, 1138, 1344], "character": [479, 482, 495, 516, 1122, 1125, 1138, 1159, 1344], "tropic": [479, 495, 1122, 1138, 1344], "kwajex": [479, 495, 1122, 1138, 1344], "385": [479, 495, 1122, 1138, 1344], "415": [479, 495, 1122, 1138, 1344], "jam2206": [479, 495, 1122, 1138, 1344], "lapse_r": [480, 500, 504, 1123, 1143, 1147], "nsamples_max": [480, 1123], "prepar": [480, 1123, 1351, 1352, 1353, 1355, 1356, 1357, 1360], "refl_std": [480, 1123], "zdr_std": [480, 1123], "kdp_std": [480, 1123], "rhohv_std": [480, 1123], "relh_std": [480, 1123], "negative_vel_prior": [481, 1124], "quit": [481, 1124, 1359], "simpl": [481, 775, 1055, 1124, 1352, 1353], "tail": [481, 1124], "prioriti": [481, 577, 1124, 1307, 1365], "chosen": [481, 1124], "twice": [481, 1124], "fill_valu": [482, 497, 507, 508, 509, 516, 553, 1125, 1140, 1150, 1151, 1152, 1159, 1283, 1351, 1352, 1360], "ml_field": [482, 511, 512, 513, 1125, 1154, 1155, 1156], "ml_pos_field": [482, 511, 512, 513, 1125, 1154, 1155, 1156], "max_rang": [482, 1125], "detect_threshold": [482, 1125], "02": [482, 1065, 1066, 1125, 1321, 1326, 1340, 1344, 1361], "interp_hol": [482, 1125], "max_length_hol": [482, 1125], "check_min_length": [482, 1125], "get_iso0": [482, 511, 512, 513, 1125, 1154, 1155, 1156], "ml": [482, 511, 1125, 1154, 1307], "plai": [482, 1125, 1362], "affect": [482, 501, 1066, 1125, 1144], "erron": [482, 1125, 1353], "hole": [482, 1125], "ml_obj": [482, 511, 512, 513, 1125, 1154, 1155, 1156], "ml_dict": [482, 511, 512, 513, 1125, 1154, 1155, 1156], "iso0_dict": [482, 511, 512, 513, 1125, 1154, 1155, 1156], "all_ml": [482, 1125], "wolfensberg": [482, 782, 783, 784, 1125, 1345, 1346], "scipion": [482, 1125], "bern": [482, 504, 508, 1125, 1147, 1151], "q": [482, 1125], "meteorol": [482, 514, 1125, 1157, 1344], "soc": [482, 1125], "142": [482, 1125], "108": [482, 1125], "124": [482, 1125, 1346, 1358], "1002": [482, 1125], "qj": [482, 1125], "2672": [482, 1125], "niter": [483, 1126], "nvar": [483, 496, 1126, 1139], "medoids_arr": [483, 1126], "beta": [484, 485, 486, 487, 488, 489, 751, 753, 771, 780, 1127, 1128, 1129, 1130, 1131, 1132], "a_field": [484, 485, 488, 1127, 1128, 1131, 1359], "rr_field": [484, 485, 486, 487, 488, 489, 490, 1127, 1128, 1129, 1130, 1131, 1132, 1133], "law": [484, 485, 486, 487, 488, 489, 753, 1127, 1128, 1129, 1130, 1131, 1132], "diederich": [484, 1127], "tromel": [484, 514, 1127, 1157], "wavelenght": [484, 1127], "partial": [484, 753, 1127], "blockag": [484, 753, 1127], "hydrometeorologi": [484, 1127], "487": [484, 1127], "502": [484, 1127], "2014": [484, 508, 514, 753, 1127, 1151, 1157], "potenti": [484, 511, 753, 773, 1127, 1154], "mitig": [484, 753, 1127], "599": [484, 753, 1127], "619": [484, 753, 1127], "alphazr": [485, 1128], "0376": [485, 487, 488, 489, 1128, 1130, 1131, 1132], "betazr": [485, 1128], "6112": [485, 487, 488, 489, 1128, 1130, 1131, 1132], "alphaz": [485, 488, 489, 1128, 1131, 1132], "betaz": [485, 488, 489, 1128, 1131, 1132], "alphaa": [485, 488, 1128, 1131], "betaa": [485, 488, 1128, 1131], "mp_factor": [485, 1128], "hydro_field": [485, 504, 512, 769, 782, 783, 784, 1128, 1147, 1155, 1359], "main_field": [485, 488, 489, 1128, 1131, 1132], "thresh_max": [485, 488, 489, 1128, 1131, 1132], "act": [485, 488, 489, 625, 1128, 1131, 1132, 1344, 1351], "master": [485, 488, 489, 1128, 1131, 1132, 1335, 1363], "slave": [485, 488, 489, 1128, 1131, 1132], "blend": [488, 489, 1131, 1132, 1334], "rain_mast": [488, 489, 1131, 1132], "alphakdp": [489, 1132], "betakdp": [489, 1132], "mm": [489, 1132, 1344, 1359], "polynomi": [490, 1133], "develop": [490, 495, 1133, 1138, 1349, 1357, 1362, 1363], "mcgill": [490, 1133, 1349], "az_tol": [491, 492, 533, 1134, 1135, 1263], "wind_field": [491, 492, 494, 1134, 1135, 1137], "windshear_field": [491, 492, 1134, 1135], "windshear": [491, 492, 1134, 1135, 1307], "npoints_min": [493, 1136], "azi_spacing_max": [493, 1136], "vel_diff_max": [493, 1136], "rad_vel_field": [493, 1136], "u_vel_field": [493, 1136], "v_vel_field": [493, 1136], "w_vel_field": [493, 1136], "vel_est_field": [493, 1136], "vel_std_field": [493, 1136], "vel_diff_field": [493, 1136], "vad": [493, 518, 519, 1136, 1162, 1163, 1307, 1312, 1341, 1347, 1361, 1363], "recomput": [493, 1136], "difer": [493, 1136], "vert_proj": [494, 1137], "neglig": [494, 1137], "v_r": [494, 1137], "v_el": [494, 1137], "v_az": [494, 1137], "perpendicular": [494, 1137], "v_h": [494, 1137], "know": [494, 1137, 1365], "hold": [494, 1137], "min_val_us": [495, 1138], "binary_clos": [495, 1138], "val_for_max_rad": [495, 1138], "max_rad_km": [495, 1138], "core_v": [495, 1138], "bkgd_val": [495, 1138], "feat_val": [495, 1138], "overest_field": [495, 1138], "underest_field": [495, 1138], "tomkin": [495, 552, 1138, 1282, 1326, 1344], "2023": [495, 1138], "steiner": [495, 516, 1138, 1159, 1344], "1995": [495, 516, 1138, 1159, 1344], "laura": [495, 1138, 1326, 1344], "lauratomkin": [495, 1138], "overestim": [495, 1138, 1344], "feature_dict": [495, 1138], "climatolog": [495, 516, 1138, 1159, 1344], "gaug": [495, 516, 1138, 1159, 1344], "1978": [495, 516, 1138, 1159, 1344, 1359], "2007": [495, 516, 1138, 1159, 1344], "miller": [495, 552, 1138, 1282, 1326], "2024": [495, 1138, 1306], "identif": [495, 552, 1138, 1282, 1326], "faint": [495, 1138], "prep": [495, 1138], "sonde_dset": [496, 1139], "time_kei": [496, 1139], "height_kei": [496, 1139], "vap": [496, 1139], "startard": [496, 1139], "ncvar": [496, 1139], "return_d": [496, 1139], "radar_spec": [497, 1140], "dem_grid": [497, 1140], "terrain_altitude_field": [497, 1140], "bent_terrain_altitude_field": [497, 1140], "terrain_slope_field": [497, 1140], "terrain_aspect_field": [497, 1140], "elevation_angle_field": [497, 1140], "visibility_field": [497, 1140], "min_vis_elevation_field": [497, 1140], "min_vis_altitude_field": [497, 1140], "incident_angle_field": [497, 1140], "effective_area_field": [497, 1140], "sigma_0_field": [497, 1140], "rcs_clutter_field": [497, 1140], "dbm_clutter_field": [497, 1140], "dbz_clutter_field": [497, 1140], "visibility_polar_field": [497, 1140], "az_conv": [497, 1140], "dr": [497, 507, 760, 761, 1140, 1150], "daz": [497, 1140], "012": [497, 1140], "3333333333333333": [497, 1140], "atm_att": [497, 1140], "mosotti_kw": [497, 1140], "9644": [497, 1140], "raster_oversampl": [497, 1140], "sigma0_method": [497, 1140], "gabella": [497, 504, 1140, 1147], "clip": [497, 1140], "return_pyart_object": [497, 1140], "frequenti": [497, 1140], "ghz": [497, 1140], "tau": [497, 1140], "total": [497, 507, 508, 509, 782, 1140, 1150, 1151, 1152, 1309, 1310, 1311, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1361], "terrain": [497, 1140, 1323], "backscatt": [497, 507, 514, 1140, 1150, 1157], "incid": [497, 1140], "topographi": [497, 1140], "rx": [497, 1140], "discret": [497, 1062, 1140], "slower": [497, 507, 1066, 1140, 1150], "equival": [497, 513, 632, 1055, 1140, 1156, 1314, 1325, 1333, 1339], "One": [497, 1140, 1351, 1360, 1363, 1365], "clausiu": [497, 1140], "mosotti": [497, 1140], "materi": [497, 1140, 1349], "sigma": [497, 515, 1140, 1158, 1241, 1242, 1334, 1335], "naught": [497, 1140], "undefin": [497, 1140], "oversampl": [497, 1140, 1307], "delrieu": [497, 1140], "lot": [497, 1140, 1358], "directli": [497, 1140, 1323, 1359], "bent_terrain_altitude_d": [497, 1140], "terrain_slope_d": [497, 1140], "terrain_aspect_d": [497, 1140], "elevation_d": [497, 1140], "min_vis_elevation_d": [497, 1140], "min_vis_altitude_d": [497, 1140], "visibility_d": [497, 1140], "incident_angle_d": [497, 1140], "effective_area_d": [497, 1140], "sigma_0_d": [497, 1140], "rcs_clutter_d": [497, 1140], "dbm_clutter_d": [497, 1140], "dbz_clutter_d": [497, 1140], "visibility_polar_d": [497, 1140], "perona": [497, 1140], "1998": [497, 1140], "orograph": [497, 1140], "influenc": [497, 1059, 1062, 1065, 1066, 1140, 1355], "geometr": [497, 1140], "15": [497, 507, 552, 751, 1140, 1150, 1282, 1309, 1310, 1315, 1323, 1326, 1332, 1333, 1334, 1335, 1338, 1339, 1342, 1346, 1353, 1358, 1360], "1485": [497, 1140], "1494": [497, 1140], "freq_band": [499, 1142], "temp_ref_field": [500, 1143], "heigh_over_iso0": [500, 1143], "iso0_ref": [500, 1143], "iso": [500, 513, 515, 760, 761, 1143, 1156, 1158], "insuffici": [500, 1143], "rng_left_km": [501, 1144], "rng_right_km": [501, 1144], "ang": [501, 1144, 1334, 1335], "ang_r": [501, 1144], "ml_bottom": [501, 1144], "masl": [501, 513, 760, 761, 1144, 1156], "msl": [501, 511, 554, 1144, 1154, 1284], "grid1": [502, 1145], "grid2": [502, 1145], "return_valu": [502, 1145], "displac": [502, 1145], "en": [502, 1145, 1349, 1357, 1362, 1363], "wikipedia": [502, 1145], "phase_correl": [502, 1145], "inspir": [502, 1145], "christoph": [502, 1145], "gohlk": [502, 1145], "lfd": [502, 1145], "uci": [502, 1145], "imreg": [502, 1145], "advect": [502, 503, 1145, 1146], "trim_edg": [503, 1146], "field_list": [503, 1057, 1146], "shifted_grid": [503, 1146], "subset": [503, 1146, 1312, 1341, 1342], "mass_cent": [504, 1147, 1359], "entropy_field": [504, 1147], "compute_entropi": [504, 1147], "output_dist": [504, 1147], "besic": [504, 512, 1147, 1155, 1359], "nclass": [504, 1147], "decai": [504, 1147], "celsiu": [504, 1147, 1307], "entropi": [504, 1147], "fields_dict": [504, 1147], "figuera": [504, 1147, 1349, 1363], "ventura": [504, 1147, 1349, 1363], "grazioli": [504, 508, 1147, 1151, 1349, 1363], "germann": [504, 1147, 1349, 1363], "semi": [504, 1147], "supervis": [504, 1147], "mea": [504, 552, 1147, 1282, 1326], "4425": [504, 1147], "4445": [504, 1147], "5194": [504, 552, 1147, 1282, 1326], "amt": [504, 552, 1147, 1282, 1326], "piecewis": [505, 506, 1148, 1149], "optim": [505, 506, 507, 1066, 1148, 1149, 1150], "lenght": [505, 506, 1148, 1149], "kdp_dict": [505, 506, 507, 508, 509, 1148, 1149, 1150, 1151, 1152], "cg": [507, 1150], "clpf": [507, 1150], "length_scal": [507, 1150], "first_guess": [507, 1150], "finite_ord": [507, 1150], "maesaka": [507, 1150, 1359], "2012": [507, 509, 1150, 1152, 1359], "monoton": [507, 510, 1150, 1153, 1323], "propag": [507, 508, 509, 1150, 1151, 1152], "notat": [507, 1150], "primari": [507, 1150], "proport": [507, 1150], "analys": [507, 508, 509, 1150, 1151, 1152], "nonlinear": [507, 1150], "conjug": [507, 1150], "gradient": [507, 1150, 1323], "broyden": [507, 1150], "fletcher": [507, 1150], "goldfarb": [507, 1150], "shanno": [507, 1150], "bfg": [507, 1150], "100k": [507, 1150], "parameter": [507, 1150], "attentu": [507, 1150], "constraint": [507, 1150], "bring": [507, 1150], "magnitud": [507, 756, 1150, 1346, 1360], "guess": [507, 1150], "root": [507, 1150, 1362, 1365], "signifi": [507, 516, 1150, 1159], "everywher": [507, 1150], "exactli": [507, 1150, 1318], "avoid": [507, 1150, 1307, 1358, 1365], "converg": [507, 1150], "closer": [507, 1150], "finit": [507, 1150], "accuraci": [507, 1150], "maxit": [507, 1150], "met": [507, 1150], "achiev": [507, 1150], "somewhat": [507, 1150], "thread": [507, 1150], "cpu": [507, 1150], "multiprocess": [507, 1150], "capabl": [507, 1150, 1353, 1360], "relev": [507, 1150], "phidpf_dict": [507, 1150], "phidpr_dict": [507, 508, 509, 1150, 1151, 1152], "forward": [507, 544, 545, 1150, 1274, 1275], "iwanami": [507, 1150], "maki": [507, 1150], "seventh": [507, 1150], "european": [507, 1150], "confer": [507, 1150, 1349], "hydrologi": [507, 1150], "rcov": [508, 1151], "pcov": [508, 1151], "prefilter_psidp": [508, 509, 1151, 1152], "filter_opt": [508, 509, 1151, 1152], "kalman": [508, 1151], "schneeb": [508, 1151], "psidp": [508, 509, 1151, 1152], "char": [508, 509, 1151, 1152], "capit": [508, 509, 1151, 1152], "intercept": [508, 1151], "3x3": [508, 1151], "covari": [508, 1151], "4x4": [508, 1151], "filter_psidp": [508, 509, 1151, 1152], "enabl": [508, 509, 1151, 1152], "kdp_std_dict": [508, 1151], "dev": [508, 1151, 1307, 1355, 1363], "ensembl": [508, 1151], "52": [508, 514, 1151, 1157, 1342, 1357, 1359], "5137": [508, 1151], "5149": [508, 1151], "1109": [508, 1151], "tgr": [508, 1151], "2287017": [508, 1151], "windsiz": [509, 1152], "n_iter": [509, 1152], "interp": [509, 1152], "vulpiani": [509, 1152], "pre": [509, 1152, 1358, 1359], "ex": [509, 1152, 1323, 1363], "advantag": [509, 1152], "eat": [509, 1152], "gianfranco": [509, 1152], "mario": [509, 1152], "montopoli": [509, 1152], "luca": [509, 1152], "delli": [509, 1152], "passeri": [509, 1152], "antonio": [509, 1152], "gioia": [509, 1152], "pietro": [509, 1152], "giordano": [509, 1152], "frank": [509, 1152], "marzano": [509, 1152], "On": [509, 1152], "dual": [509, 1152], "mountain": [509, 1152], "climatol": [509, 1152, 1344], "51": [509, 1152, 1342], "405": [509, 1152], "425": [509, 1152], "jamc": [509, 751, 753, 1152], "05024": [509, 1152], "profile_field": [510, 1153], "height_field": [510, 1153], "3re": [510, 1153], "whole": [510, 1153], "height_dict": [510, 1153], "profile_dict": [510, 1153], "nvol": [511, 1154], "maxh": [511, 1154], "rhomin": [511, 1154], "rhomax": [511, 1154], "94": [511, 1154, 1360], "zhmin": [511, 1154], "hwindow": [511, 1154], "mlzhmin": [511, 1154], "mlzhmax": [511, 1154], "mlzdrmin": [511, 1154], "mlzdrmax": [511, 1154], "htol": [511, 1154], "ml_bottom_diff_max": [511, 1154], "time_accu_max": [511, 1154], "1800": [511, 1154, 1351], "nml_points_min": [511, 1154], "wlength": [511, 1154], "percentile_bottom": [511, 1154], "percentile_top": [511, 1154], "time_nodata_allow": [511, 1154], "3600": [511, 1154, 1351], "ml_global": [511, 1154], "aggreg": [511, 513, 1154, 1156, 1345, 1359], "ml_bottom_dif_max": [511, 1154], "percentil": [511, 1154], "stack": [511, 1154, 1362, 1363], "Its": [511, 1154], "kraus": [511, 1154], "design": [511, 552, 1154, 1282, 1334, 1344, 1363], "prototyp": [511, 1154], "meteo": [511, 513, 757, 760, 761, 1154, 1156], "clim": [511, 514, 1154, 1157], "1354": [511, 1154], "1364": [511, 1154], "2007jamc1634": [511, 1154], "force_continu": [512, 1155], "dist_max": [512, 1155], "350": [512, 1155], "heightand": [512, 1155], "ml_thickness_min": [513, 760, 761, 1156], "ml_thickness_max": [513, 760, 761, 1156], "1400": [513, 1156], "ml_thickness_step": [513, 760, 761, 1156], "iso0_max": [513, 760, 761, 1156], "4500": [513, 1156, 1351], "ml_top_diff_max": [513, 760, 761, 1156], "700": [513, 767, 768, 782, 783, 784, 1156], "ml_top_step": [513, 760, 761, 1156], "ns_factor": [513, 1156], "rhohv_corr_min": [513, 1156], "rhohv_nash_min": [513, 1156], "ang_iso0": [513, 1156], "age_iso0": [513, 1156], "ml_thickness_iso0": [513, 1156], "ml_memori": [513, 1156], "rhohv_field_ob": [513, 1156], "rhohv_field_theo": [513, 1156], "franc": [513, 757, 760, 761, 1156], "decid": [513, 782, 783, 1156], "nse": [513, 1156], "hour": [513, 1156, 1314, 1315], "past": [513, 760, 761, 1156, 1363], "ml_found_obj": [513, 1156], "instantan": [513, 1156], "desired_angl": [514, 1157], "wanted_angl": [514, 1157], "dictonari": [514, 1157], "troemel": [514, 1157], "2529": [514, 1157], "2548": [514, 1157], "54": [514, 1157, 1315, 1358], "2344": [514, 1157], "2359": [514, 1157], "submit": [514, 1157, 1349], "technol": [514, 1157], "fm": [515, 1158], "rg": [515, 517, 1158, 1160], "nbin": [515, 1158], "110": [515, 1158], "pdf_zh_max": [515, 1158], "pdf_relh_max": [515, 1158], "sigma_zh": [515, 1158], "sigma_relh": [515, 1158], "random": [515, 517, 1158, 1160], "platykurtic_dbz": [515, 1158], "platykurtic_h_iso0": [515, 1158], "nfeatur": [515, 1158], "histogram": [515, 1158, 1318, 1353], "platykurtik": [515, 1158], "guassian": [515, 1158], "quantiz": [515, 1158], "platykurt": [515, 1158], "fm_sampl": [515, 1158], "work_level": [516, 1159], "peak_rel": [516, 1159], "area_rel": [516, 1159], "medium": [516, 1159], "bkg_rad": [516, 1159], "11000": [516, 1159, 1355], "use_intens": [516, 1159], "bright": [516, 1159], "sgp": [516, 1159, 1237], "peaked": [516, 1159], "eclass": [516, 1159], "par_var": [517, 1160], "probabl": [517, 547, 548, 549, 561, 1160, 1277, 1278, 1279, 1291, 1357], "membership": [517, 1160], "synthetic_ob": [517, 1160], "z_want": [518, 519, 1162, 1163, 1346, 1358, 1363], "valid_ray_min": [518, 1162, 1363], "brown": [518, 1162, 1307, 1363], "amount": [518, 1162, 1355, 1363], "_averag1d": [518, 1162, 1363], "idw": [518, 1162], "wexler": [518, 1162, 1363], "1968": [518, 1162, 1363], "kinemat": [518, 1162, 1363], "105": [518, 1162, 1346, 1358, 1363], "113": [518, 1162, 1342, 1363], "linespac": [519, 1163], "michelson": [519, 1163], "andersson": [519, 1163], "koistinen": [519, 1163], "collier": [519, 1163], "riedl": [519, 1163], "szturc": [519, 1163], "gjertsen": [519, 1163], "nielsen": [519, 1163], "overgaard": [519, 1163], "baltex": [519, 1163], "centr": [519, 1163], "smhi": [519, 1163], "climatologi": [519, 1062, 1163], "swedish": [519, 1163], "hydrolog": [519, 1163], "institut": [519, 1163, 1360], "norrkop": [519, 1163], "1970": 520, "01t00": 520, "00": [520, 1311, 1316, 1321, 1340, 1347, 1348, 1361], "00z": 520, "bytes_or_buff": 520, "expos": 520, "buffer": 520, "handler": 520, "__str__": 520, "sy": [520, 576], "getdefaultencod": 520, "radian": [521, 523, 565, 771, 1251, 1253, 1295], "std": [523, 524, 556, 568, 1253, 1254, 1286, 1298], "convolut": [525, 1255], "ndimag": [525, 1255, 1334, 1335], "generic_filt": [525, 1255], "pi": [525, 1255, 1353], "std_dev": [525, 1255], "radar1": [526, 527, 554, 562, 1256, 1257, 1284, 1292], "radar2": [526, 527, 554, 562, 1256, 1257, 1284, 1292], "h_tol": [526, 554, 1256, 1284], "coloc_gates_field": [526, 527, 1256, 1257], "coloc": [526, 527, 1256, 1257], "coloc_dict": [526, 527, 1256, 1257], "azi": [526, 527, 543, 1256, 1257, 1273], "coloc_rad1": [526, 527, 1256, 1257], "distance_upper_bound": [527, 1257], "neighbour": [527, 543, 1257, 1273], "ckdtree": [527, 1257], "bound": [527, 1257], "lin_tran": [528, 1258], "span": [528, 1258], "consdier": [528, 1258], "radar_rhi": [528, 533, 760, 761, 1258, 1263], "vec1": [529, 531, 1259, 1261], "vec2": [529, 531, 1259, 1261], "pearson": [529, 1259], "corr": [529, 531, 1259, 1261, 1358], "stat": [530, 1260], "nvalid": [530, 1260], "arr1": [531, 1261], "arr2": [531, 1261], "obs_data": [532, 1262], "mod_data": [532, 1262], "nash": [532, 1262], "sutcliff": [532, 1262], "nash_coeff": [532, 1262], "target_elev": [534, 550, 1264, 1280], "el_tol": [534, 550, 1264, 1280], "radar_ppi": [534, 1264], "epoch": [535, 536, 537, 538, 539, 1265, 1266, 1267, 1268, 1269], "max_offset": [540, 1270], "running_win_dt": [540, 1270], "deg_rng": [540, 1270], "consider_2pi_jump": [540, 1270], "is_ppi": [540, 1270], "wise": [540, 1270], "strategi": [540, 1270], "might": [540, 1270, 1351, 1365], "goe": [540, 1270, 1357], "shot": [540, 1270], "articl": [541, 1271], "var": [541, 542, 573, 574, 1271, 1272, 1303, 1304], "nnois": [541, 542, 1271, 1272], "pwr_w_rai": [542, 1272], "pct": [542, 548, 560, 1272, 1278, 1290], "270436": [542, 1272], "flat_reg_wlen": [542, 547, 558, 1272, 1277, 1288], "flat_reg_var_max": [542, 558, 559, 1272, 1288, 1289], "439551": [542, 1272], "snr_thr": [542, 549, 1272, 1279], "769572": [542, 1272], "ngates_final_min": [542, 1272], "ngates_median": [542, 1272], "83": [542, 1272, 1359], "local": [542, 547, 551, 1236, 1272, 1277, 1281, 1349, 1362, 1363], "decibel": [542, 1272], "flat": [542, 547, 558, 559, 1272, 1277, 1288, 1289, 1314, 1358], "inds_rai": [542, 1272], "inds_ray_aux": [543, 1273], "ind_rng_aux": [543, 1273], "target_latitud": [544, 570, 1274, 1300], "target_longitud": [544, 570, 1274, 1300], "bear": [544, 1274], "alongitudeg": [544, 1274], "great": [544, 570, 1274, 1300], "circl": [544, 570, 1274, 1300, 1344], "known": [544, 1274, 1360, 1363], "6371000": [544, 570, 1274, 1300], "calculatitude": [544, 1274], "degress": [544, 570, 1274, 1300], "further": [546, 782, 783, 1276], "sphere_dist": [546, 1276], "for_azimuth": [546, 1276], "get_column_rai": [546, 1276], "xarari": [546, 1276], "prob_thr": [547, 548, 1277, 1278], "var_thr": [547, 1277], "0001": [548, 1278], "pct_out": [548, 1278], "pfa_thr": [549, 1279], "alarm": [549, 561, 1279, 1291], "xwind": [551, 1281], "ywind": [551, 1281], "win_std": [551, 1281], "mute_field": [552, 1282, 1326], "mute_threshold": [552, 1282, 1326], "field_threshold": [552, 1282, 1326], "discern": [552, 1282], "mute": [552, 1282, 1312, 1322, 1340, 1344, 1361], "allen": [552, 1282, 1326], "heavi": [552, 751, 753, 1282, 1326, 1334], "5515": [552, 1282, 1326], "5525": [552, 1282, 1326], "kind": [553, 569, 1283, 1299, 1309, 1359], "radarspectra": [553, 567, 1240, 1283, 1297], "psr_interp": [553, 1283], "vol_d_tol": [554, 1284], "vismin": [554, 1284], "hmin": [554, 773, 1284], "azmin": [554, 1284], "azmax": [554, 1284], "visib_field": [554, 1284], "intersec_field": [554, 1284], "compli": [554, 768, 769, 1284], "regard": [554, 1284], "decim": [554, 1284], "diamet": [554, 1284], "intersec_rad1_dict": [554, 1284], "dist": [555, 556, 1065, 1066, 1285, 1286], "interval_min": [555, 556, 1285, 1286], "interval_max": [555, 556, 1285, 1286], "endpoint": [555, 556, 1285, 1286], "to_vpt": [557, 1287], "verticl": [557, 1287], "prescrib": [558, 1288], "ivic_flat_reg_wind_len": [558, 1288], "throw": [560, 561, 1290, 1291], "pfa": [560, 561, 1290, 1291], "1e": [560, 561, 1290, 1291, 1351, 1360], "matlab": [560, 1290], "get_ivic_pct": [560, 1290], "particularli": [560, 1290], "pct_tabl": [560, 1290], "snr_thr_out": [561, 1291], "coerce_angl": [562, 1292, 1307], "combin": [562, 563, 751, 752, 753, 1292, 1293, 1363], "slightli": [562, 1292, 1325, 1359], "slight": [562, 1292], "misposit": [562, 1292, 1307], "spectra1": [563, 1293], "spectra2": [563, 1293], "tup": [564, 1294], "guarante": [564, 1294], "broadcast": [564, 1294], "broadcasted_arrai": [564, 1294], "angles1": [565, 1295], "angles2": [565, 1295], "angle1": [566, 1296], "angle2": [566, 1296], "eg": [568, 1298], "ma": [568, 1298, 1318, 1319, 1344, 1352, 1356, 1363], "sim_vel_field": [569, 1299], "slinear": [569, 1299], "quadrat": [569, 1299], "cubic": [569, 1299], "interp1d": [569, 1299, 1363], "descript": [569, 577, 625, 627, 640, 722, 793, 794, 831, 1007, 1030, 1054, 1067, 1164, 1250, 1299, 1349, 1363], "sim_vel": [569, 1299, 1363], "coverag": [571, 572, 1301, 1302, 1358], "11pt": [573, 1303], "stdev": [573, 1303], "texarrai": [573, 1303], "pyradarobj": [573, 1303], "tex": [574, 1304], "single_scan": [575, 1305], "is_vpt": [575, 1305], "mislabel": [575, 1305], "properli": [575, 608, 609, 1305, 1315], "statu": [576, 1363], "dependeci": 576, "polish": 577, "risk": 577, "bug": [577, 1307, 1349, 1362, 1363], "momentpm": 580, "momentm": 580, "share": 580, "extra": [580, 591, 592, 608, 609], "momentspm": 580, "momentsm": 580, "metranet_lib": 580, "zh": [591, 592, 782, 783, 784, 1357, 1359], "keep_all_rai": 591, "physic_valu": [591, 592, 608, 609, 1357], "masked_arrai": [591, 592, 608, 609, 1351, 1360], "duplic": [591, 1307], "ret_data": [591, 592, 608, 609], "radardata": [591, 592, 608, 609], "reorder_angl": 592, "reorder": [592, 1307], "knmi_h5": [599, 1307], "file_path": 600, "cpi_head": 610, "3d": [612, 1358], "commun": [625, 1363, 1365], "interact": 640, "calculate_attenu": [722, 1309], "calculate_attenuation_zphi": [722, 1345, 1359], "calculate_attenuation_philinear": 722, "sun_retriev": 722, "get_sun_hit": 722, "get_sun_hits_psr": 722, "get_sun_hits_iv": 722, "correct_vpr": 722, "correct_vpr_spatialis": 722, "despeckle_field": 722, "correct_noise_rhohv": 722, "correct_bia": 722, "correct_vis": 722, "est_rhohv_rain": 722, "est_zdr_precip": 722, "est_zdr_snow": 722, "selfconsistency_bia": 722, "selfconsistency_bias2": 722, "selfconsistency_kdp_phidp": 722, "z_offset": 751, "rhv_min": 751, "ncp_min": 751, "a_coef": [751, 753], "06": [751, 1306, 1340, 1361], "spec_at_field": [751, 752, 753], "corr_refl_field": [751, 752, 753, 760, 761], "copol_coeff": [751, 1243, 1309, 1342, 1343, 1351], "norm_coherent_pow": [751, 1243, 1309, 1351], "proc_dp_phase_shift": [751, 1309, 1342, 1351], "spec_at": [751, 752, 753, 1309, 1345, 1359], "cor_z": [751, 752, 753, 1309, 1345, 1359], "gu": [751, 753], "2011": [751, 753, 1342], "39": [751, 753, 1342], "pia_coef": 752, "pida_coef": 752, "pia_field": [752, 753], "spec_diff_at_field": [752, 753], "pida_field": [752, 753], "corr_zdr_field": [752, 753], "dependec": 752, "pida_coeff": 752, "pia_dict": [752, 753], "spec_diff_at": [752, 753, 1345, 1359], "pida_dict": [752, 753], "cor_zdr": [752, 753, 1345, 1359], "smooth_window_len": 753, "jaot": [753, 757], "bia": [756, 761, 768, 769, 780, 782, 783, 792], "corrected_field": [756, 759], "urhohv_field": 757, "nh_field": 757, "nv_field": 757, "eq": [757, 1332], "2006": [757, 1315], "uncorrect": 757, "23": [757, 1346], "1340": 757, "1356": 757, "angle_min": [760, 761], "angle_max": [760, 761], "5000": [760, 761, 1346, 1355, 1358], "ml_peak_min": [760, 761], "ml_peak_max": [760, 761], "ml_peak_step": [760, 761], "dr_min": [760, 761], "dr_max": [760, 761], "dr_step": [760, 761], "dr_default": [760, 761], "dr_alt": [760, 761], "h_corr_max": [760, 761], "rmin_ob": [760, 761], "rmax_ob": [760, 761], "150000": [760, 761], "filter_param": 760, "weight_mem": [760, 761], "vpr_theo_dict_mem": [760, 761], "radar_mem_list": [760, 761], "lin_refl_field": [760, 761], "norm_refl_field": [760, 761], "corr_field": [760, 761], "proper": [760, 761, 1362], "abl": [760, 761, 768, 769, 1349, 1362], "refl_corr_dict": [760, 761], "corr_field_dict": [760, 761], "vpr_theo_dict_filt": [760, 761], "correct_iso0": 761, "spatialis": 761, "despeckl": 765, "speckl": [765, 1344], "find_object": 765, "perman": 765, "rhohv_rain_dict": 767, "rhohvmin": [768, 769], "phidpmax": [768, 769], "moder": 768, "zdr_prec_dict": 768, "snrmin": 769, "snrmax": 769, "kdpmax": 769, "tempmin": 769, "tempmax": 769, "differneti": 769, "zdr_snow_dict": 769, "az_data": 771, "az_ref": 771, "el_data": 771, "el_ref": 771, "sunhit": [771, 780], "npar": [771, 780], "do_elcorr": 771, "fit": [771, 780, 792], "hit": [771, 773, 774, 775, 780, 792, 1363], "par": [771, 780, 792], "delev_max": [773, 774, 775], "dazim_max": [773, 774, 775], "max_std_zdr": [773, 774], "sun_posit": [773, 774, 775], "pwrh_field": [773, 774, 775], "pwrv_field": [773, 774, 775], "sun_hit": [773, 774, 775, 792], "new_radar": [773, 774, 1352], "2003": [774, 1344], "noise_thr": 775, "val": [780, 792], "val_std": [780, 792], "az_bia": [780, 792], "el_bia": [780, 792], "az_width": [780, 792], "el_width": [780, 792], "zdr_kdpzh_dict": [782, 783, 784], "min_rhohv": [782, 783, 784], "filter_rain": [782, 783, 784], "max_phidp": [782, 783, 784], "smooth_wind_len": [782, 783, 784], "dphidp_min": 782, "dphidp_max": 782, "parametr": [782, 783, 784], "check_wet_radom": [782, 783], "wet_radome_refl": [782, 783], "wet_radome_len_min": [782, 783], "wet_radome_len_max": [782, 783], "wet_radome_ngates_min": [782, 783], "valid_gates_onli": 782, "keep_point": [782, 783], "kdp_wind_len": 782, "12": [782, 1064, 1309, 1314, 1315, 1320, 1321, 1325, 1331, 1332, 1340, 1342, 1352, 1356, 1358, 1360, 1361], "curv": [782, 783, 784, 1344], "gorgucci": [782, 783, 784], "vaccarono": [782, 783, 784], "kdpsim_field": [782, 783, 784], "phidpsim_field": [782, 783, 784], "wet": [782, 783, 1345, 1359], "mim": [782, 783], "disk": [782, 783], "That": 782, "refl_bias_dict": [782, 783], "selfconsistency_dict": [782, 783], "keep_poinst": [782, 783], "min_zdr": 783, "bias_per_g": 783, "kdp_data_dict": 783, "selfconsist": 784, "kdp_sim_dict": 784, "phidp_sim_dict": 784, "az_rad": 792, "az_sun": 792, "el_rad": 792, "el_sun": 792, "sun_hit_std": 792, "az_width_co": 792, "el_width_co": 792, "az_width_cross": 792, "el_width_cross": 792, "is_zdr": 792, "nhit": 792, "concret": 1044, "__getitem__": 1044, "__setitem__": 1044, "__delitem__": 1044, "__iter__": 1044, "__len__": 1044, "src_radar": 1055, "dest_radar": 1055, "distance_toler": [1055, 1318], "gatefilter_src": [1055, 1318], "time_toler": [1055, 1318], "kd": 1055, "tree": [1055, 1066], "src_radar_i": 1055, "src_radar_x": 1055, "destin": [1055, 1057, 1318], "src_radar_tim": 1055, "dest_radar_tim": 1055, "gate_mapp": 1055, "src": [1055, 1315, 1357, 1358, 1359], "dest": 1055, "dest_index": 1055, "radar_map": 1055, "mapped_radar": [1055, 1318], "adequ": [1055, 1318], "getter": [1056, 1058], "zg": [1059, 1060, 1061], "yg": [1059, 1060, 1061], "xg": [1059, 1060, 1061], "roi": [1059, 1060, 1061, 1063, 1064, 1066], "grow": [1060, 1061, 1065, 1066, 1363], "virtual": [1061, 1065, 1066], "grid_shap": [1062, 1063, 1064, 1065, 1066, 1237, 1319, 1320, 1324, 1344, 1355, 1358], "grid_limit": [1062, 1063, 1064, 1065, 1066, 1237, 1319, 1320, 1324, 1344, 1355, 1358], "gridding_algo": 1062, "map_gates_to_grid": 1062, "copy_field_dtyp": 1062, "map_to_grid": [1062, 1065], "significantli": [1062, 1066], "faster": [1062, 1066], "barn": [1062, 1066, 1355], "1964": 1062, "maxim": 1062, "numer": [1062, 1359], "396": 1062, "409": 1062, "cressman": [1062, 1066, 1355], "1959": 1062, "monthli": 1062, "review": 1062, "367": 1062, "374": 1062, "paulei": [1062, 1355], "1990": [1062, 1355], "respons": 1062, "118": 1062, "1145": 1062, "1164": 1062, "target_sweep": [1063, 1064], "grid_siz": [1063, 1064, 1065, 1066], "801": [1063, 1064, 1357], "auto": [1063, 1064, 1323, 1357, 1358], "max_z": [1063, 1064], "12000": [1063, 1064, 1351, 1355], "el_rounding_frac": 1063, "add_grid_altitud": 1063, "grid_from_radar": [1063, 1064, 1065, 1066, 1319, 1320, 1324, 1344, 1355, 1358], "h_factor": [1063, 1064, 1065, 1066], "dist_factor": [1063, 1064, 1065], "radar_d": [1063, 1064], "third": [1063, 1064, 1359, 1363], "az_rounding_frac": 1064, "grid_origin": [1065, 1066, 1320, 1324], "grid_origin_alt": [1065, 1066], "map_roi": [1065, 1066], "weighting_funct": [1065, 1066, 1355], "barnes2": [1065, 1066], "17000": [1065, 1066, 1355], "roi_func": [1065, 1066, 1355], "dist_beam": [1065, 1066, 1355], "constant_roi": [1065, 1066], "z_factor": [1065, 1066], "xy_factor": [1065, 1066], "min_radiu": [1065, 1066, 1355], "nb": [1065, 1066], "bsp": [1065, 1066], "linearli": 1065, "roifunct": 1065, "get_roi": 1065, "cython": [1065, 1307], "copy_field_data": 1066, "kd_tree": 1066, "leafsiz": 1066, "nearbi": [1066, 1320], "coodin": 1066, "azimut": 1066, "similarili": 1066, "example_roi_func_const": 1066, "example_roi_func_dist": 1066, "example_roi_func_dist_beam": 1066, "foreach": 1066, "metet": 1066, "sacr": 1066, "sapr": [1066, 1243], "dist_mean": 1066, "preserv": [1066, 1353], "leaf": 1066, "lookup": [1066, 1307], "suffix": 1175, "tmp": 1175, "temporari": 1175, "my_cwd": 1175, "getcwd": 1175, "tmpdir": 1175, "_": [1175, 1314, 1315, 1345, 1359], "txt": [1175, 1362], "wt": 1175, "assert": [1175, 1363], "isfil": 1175, "path_to_fil": 1236, "site": [1237, 1309, 1342, 1352, 1355, 1357, 1358, 1359, 1362], "min_valu": 1241, "max_valu": 1241, "grid_len": 1241, "mu": [1241, 1242], "masked_boundari": 1241, "dp_phase_shift": [1243, 1342, 1351], "diff_phas": [1243, 1351], "differential_reflect": [1243, 1314, 1327, 1334, 1356, 1357, 1360], "rectangular": [1244, 1245], "miscellan": 1250, "depreci": 1250, "caution": 1250, "releas": [1306, 1349, 1352, 1355, 1358, 1362, 1363], "nov": 1306, "guid": [1306, 1349], "broken": 1306, "sever": [1307, 1359], "wolfidan": 1307, "com": [1307, 1335, 1362, 1363, 1365], "pyart": [1307, 1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1365], "pull": [1307, 1315, 1349, 1363], "writer": [1307, 1349], "flip": [1307, 1358], "coerc": 1307, "dealias_spectra": 1307, "output_to_geotiff": 1307, "improvemnet": 1307, "lib": [1307, 1309, 1352, 1355, 1357, 1358, 1359, 1362], "download": [1307, 1309, 1310, 1312, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1363, 1365], "gh": 1307, "action": 1307, "cfg": 1307, "handl": 1307, "typo": 1307, "odim_h5_writ": 1307, "sw_version": 1307, "led": [1307, 1365], "timestep": [1307, 1358], "wrong": 1307, "deprec": [1307, 1352, 1355, 1357, 1358], "cumtrapz": 1307, "hydro": [1307, 1345, 1357, 1359], "gecsx": [1307, 1349], "commit": [1307, 1363], "57664ce7b27c27af03f631fcd0e92a2": 1307, "linalg": 1307, "lstsq": 1307, "config": [1307, 1351, 1358, 1359, 1365], "bias_and_nois": 1307, "extract_sweeps_skyecho": 1307, "aux_io": [1307, 1357], "knmi": 1307, "h5": 1307, "proprietari": 1307, "latlon": 1307, "cross_sect": 1307, "gridmapdisplai": [1307, 1312, 1322, 1324, 1340, 1344, 1355, 1358, 1361], "_rsl_interfac": 1307, "pyx": 1307, "read_product": [1307, 1357], "behaviour": 1307, "conv_strat_yut": [1307, 1344], "juhi24": 1307, "patch": [1307, 1334], "radar_util": 1307, "register_cmap": 1307, "join_radar": [1307, 1358], "colobar": [1307, 1325], "graph": [1307, 1309, 1310, 1314, 1315, 1318, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1351, 1352, 1353, 1355, 1356, 1358, 1359], "_label_axes_latlon": 1307, "minor": [1307, 1352, 1355, 1358], "rad4alp_gif_read": 1307, "imageio": 1307, "nrow": [1307, 1323], "ncol": 1307, "agre": 1307, "cpc": 1307, "plot_xsect": [1307, 1339, 1340, 1361], "radardisplai": [1307, 1309, 1310, 1323, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1343, 1345, 1358, 1359], "rainforest": 1307, "compute_refl_time_avg": 1307, "crash": [1307, 1357], "radar_": 1307, "care": 1307, "read_odim_h5": 1307, "guidelin": 1307, "prohibit": 1307, "write_odim_grid": 1307, "interfac": 1307, "setuptool": 1307, "interpol_field": 1307, "northernmost": 1307, "msrad": [1309, 1357, 1358, 1359], "anaconda3": [1309, 1349, 1352, 1355, 1357, 1358, 1359, 1362, 1365], "wolfensb": [1309, 1315, 1357, 1358, 1359], "env": [1309, 1349, 1352, 1355, 1357, 1358, 1359, 1365], "pyart_new": 1309, "python3": [1309, 1357, 1358, 1359], "packag": [1309, 1315, 1349, 1352, 1355, 1357, 1358, 1359, 1362, 1363, 1365], "_core": 1309, "fromnumer": [1309, 1359], "820": 1309, "userwarn": [1309, 1315, 1357, 1358, 1359], "maskedarrai": [1309, 1359], "kth": [1309, 1359], "__doc__": [1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1344], "jonathan": [1309, 1310, 1319, 1320, 1327, 1328, 1330, 1332, 1336, 1339, 1365], "helmu": [1309, 1310, 1319, 1320, 1327, 1328, 1330, 1332, 1336, 1339, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363, 1365], "jhelmu": [1309, 1310, 1319, 1320, 1327, 1328, 1330, 1332, 1336, 1339], "anl": [1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1332, 1334, 1335, 1336, 1337, 1339, 1342, 1343], "licens": [1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1363], "bsd": [1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1363], "claus": [1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1363], "pyplot": [1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359], "plt": [1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359], "get_test_data": [1309, 1310, 1318, 1319, 1320, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344], "sgpcsaprsurcmaci7": [1309, 1352], "c0": [1309, 1332, 1333, 1337, 1352], "20110520": [1309, 1352], "095101": [1309, 1352], "read_cfradi": [1309, 1318, 1320, 1324, 1332, 1333, 1337, 1345, 1346, 1358, 1359], "pop": 1309, "specific_attenu": [1309, 1342, 1345, 1351, 1356, 1359], "corrected_reflectivity_horizont": [1309, 1320, 1324, 1342, 1351], "add_field": [1309, 1310, 1344, 1345, 1352, 1353, 1358, 1359, 1363], "figsiz": [1309, 1310, 1314, 1315, 1318, 1323, 1324, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1343, 1344, 1345, 1352, 1353, 1355, 1356, 1358, 1359], "ax1": [1309, 1310, 1324, 1338, 1339, 1344], "add_subplot": [1309, 1310, 1319, 1320, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1339], "131": [1309, 1344], "raw": [1309, 1310, 1349, 1350, 1358], "ax2": [1309, 1310, 1318, 1324, 1338, 1339, 1343, 1344, 1353], "132": [1309, 1344], "ax3": [1309, 1310, 1338, 1344], "133": [1309, 1342, 1344], "suptitl": [1309, 1310, 1337, 1346, 1358], "fontsiz": [1309, 1310, 1323, 1325, 1334, 1335], "minut": [1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1358], "376": 1309, "jupyt": [1309, 1310, 1312, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1357, 1365], "notebook": [1309, 1310, 1312, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1352, 1355, 1356, 1363, 1365], "plot_attenu": [1309, 1311, 1361], "ipynb": [1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346], "zip": [1309, 1310, 1312, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349], "galleri": [1309, 1310, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1349, 1361], "sphinx": [1309, 1310, 1312, 1314, 1315, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346], "ial": 1310, "095636": [1310, 1353], "sonde_fil": 1310, "sgpinterpolatedsondec1": 1310, "c1": [1310, 1356], "20110510": 1310, "000000": 1310, "cdf": 1310, "read_arm_sonde_vap": 1310, "exclude_transit": [1310, 1319, 1320, 1324, 1343], "exclude_invalid": 1310, "exclude_outsid": 1310, "80": [1310, 1338, 1343], "dealias_data": 1310, "dealias_region_bas": [1310, 1353, 1358], "corrected_veloc": [1310, 1346, 1353, 1356, 1358], "sixth": 1310, "221": [1310, 1327, 1358], "223": [1310, 1327, 1358], "ax4": 1310, "224": [1310, 1327, 1358], "19": [1310, 1311, 1346, 1358, 1360, 1361], "145": [1310, 1311, 1342, 1361], "plot_dealia": [1310, 1311, 1361], "mem": [1311, 1316, 1321, 1340, 1347, 1348, 1361], "mb": [1311, 1316, 1321, 1340, 1347, 1348, 1361], "000": [1311, 1348, 1361], "varieti": [1312, 1313, 1363], "aw": [1312, 1313, 1315, 1316, 1361], "gatemapp": [1312, 1317, 1321, 1361], "panel": [1312, 1322, 1340, 1361], "examples_python": 1312, "examples_jupyt": 1312, "next": 1314, "quick": 1314, "grover": [1314, 1318, 1323, 1324, 1329, 1337, 1342, 1343], "mgrover": [1314, 1318, 1323, 1324, 1329, 1337, 1342, 1343], "ccr": [1314, 1315, 1318, 1324, 1325, 1331, 1338, 1342, 1344, 1352, 1353, 1356, 1358, 1359], "let": [1314, 1315, 1318, 1323, 1325, 1342, 1344, 1351, 1353, 1355, 1356, 1358, 1359, 1360, 1363, 1365], "administr": 1314, "our": [1314, 1315, 1318, 1323, 1324, 1342, 1344, 1359], "filepath": [1314, 1315], "level2": [1314, 1315, 1326, 1344], "bucket": 1314, "organ": 1314, "year": [1314, 1315, 1363], "month": [1314, 1315], "radarsit": [1314, 1315], "_v06": 1314, "houston": 1314, "texa": 1314, "khgx": 1314, "march": 1314, "1201": 1314, "utc": [1314, 1315, 1337], "aws_nexrad_level2_fil": [1314, 1315], "03": [1314, 1340, 1347, 1361], "khgx20220322_120125_v06": 1314, "read_nexrad_arch": [1314, 1315, 1326, 1327, 1328, 1344], "summari": 1314, "spectrum_width": [1314, 1356, 1357, 1360], "cross_correlation_ratio": [1314, 1326, 1327, 1344, 1356, 1360], "differential_phas": [1314, 1327, 1356, 1360], "radarmapdisplai": [1314, 1315, 1318, 1325, 1331, 1342, 1351, 1352, 1353, 1355, 1356, 1359], "subplot": [1314, 1318, 1323, 1324, 1325, 1337, 1342, 1343, 1344, 1345, 1346, 1353, 1358, 1359], "121": [1314, 1318, 1324, 1343], "plot_ppi_map": [1314, 1315, 1318, 1325, 1331, 1342, 1352, 1353, 1356, 1359], "relect": 1314, "z_": [1314, 1318, 1325], "v_": 1314, "70": [1314, 1318, 1324], "n0u": 1314, "noq": 1314, "level3": 1314, "aws_nexrad_level3_velocity_fil": 1314, "hgx_n0u_2022_03_22_12_01_25": 1314, "aws_nexrad_level3_reflectivity_fil": 1314, "hgx_n0q_2022_03_22_12_01_25": 1314, "read_nexrad_level3": 1314, "radar_level3_veloc": 1314, "radar_level3_reflect": 1314, "confirm": [1314, 1351], "setup": [1314, 1318, 1323, 1324, 1329, 1342, 1349, 1362], "reflectivity_displai": 1314, "velocity_displai": 1314, "440": [1314, 1316, 1361], "plot_nexrad_data_aw": [1314, 1316, 1361], "zachari": 1315, "sherman": 1315, "zsherman": [1315, 1365], "tendenc": 1315, "usual": [1315, 1363], "gz": 1315, "handford": 1315, "ca": 1315, "khnx": 1315, "juli": [1315, 1358], "0203": 1315, "v06": 1315, "khnx20060724_020338": 1315, "pyrad": [1315, 1349, 1357, 1358, 1359, 1363], "nexrad_arch": 1315, "231": 1315, "14": [1315, 1316, 1323, 1324, 1325, 1340, 1358, 1360, 1361], "ref": [1315, 1338], "now": [1315, 1318, 1323, 1325, 1342, 1344, 1351, 1353, 1358, 1359, 1362], "clearli": [1315, 1358, 1359], "lucki": 1315, "31417": 1315, "119": [1315, 1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "63111": 1315, "plote": [1315, 1331], "central_latitud": [1315, 1331, 1344, 1352], "central_longitud": [1315, 1331, 1344, 1352], "plot_older_nexrad_data_aw": [1315, 1316, 1361], "37": [1316, 1318, 1342, 1356, 1357, 1358], "439": 1316, "bobbi": 1318, "jackson": 1318, "rjackson": 1318, "filterwarn": 1318, "xsapr": [1318, 1320, 1324], "xsapr_sw_fil": [1318, 1320, 1324], "swx_20120520_0641": [1318, 1320, 1323, 1324, 1325, 1329, 1339, 1342, 1343, 1344], "xsapr_se_fil": [1318, 1320, 1324], "sex_20120520_0641": [1318, 1320, 1324], "radar_sw": [1318, 1320, 1324], "radar_s": [1318, 1320, 1324], "southwestern": 1318, "southeastern": 1318, "gmapper": 1318, "radar_sw_mapped_to_radar_s": 1318, "notic": [1318, 1325], "disp1": 1318, "98": [1318, 1342, 1346, 1356, 1358], "arang": [1318, 1331, 1334, 1335, 1342, 1345, 1346, 1357, 1358, 1359, 1363], "96": [1318, 1356], "disp2": 1318, "remap": [1318, 1357], "difficult": 1318, "eyebal": 1318, "fortun": 1318, "mind": [1318, 1363], "cours": [1318, 1363], "reflectivity_se_radar": 1318, "reflectivity_sw_radar": 1318, "reflectivity_differ": 1318, "add_field_lik": 1318, "reflectivity_bia": 1318, "111": [1318, 1319, 1320, 1325, 1328, 1329, 1330, 1334, 1335, 1336, 1342], "pyart_bal": [1318, 1337, 1353], "southwest": 1318, "xspar": 1318, "southeast": 1318, "neccessarili": 1318, "incl_gat": 1318, "argwher": 1318, "refl_s": 1318, "refl_sw": 1318, "values_without_mask": 1318, "logical_and": 1318, "flatten": 1318, "hist": [1318, 1353], "histogram2d": 1318, "masked_wher": [1318, 1356], "meshgrid": 1318, "pyart_homeyerrainbow": [1318, 1323, 1324, 1325, 1330, 1333, 1337, 1338, 1343], "log_": 1318, "xlabel": [1318, 1332, 1333, 1353], "ylabel": [1318, 1332, 1333, 1353], "090": [1318, 1321, 1361], "plot_compare_two_radars_gatemapp": [1318, 1321, 1361], "110635": [1319, 1330, 1355], "241": 1319, "123000": 1319, "796": [1319, 1321, 1361], "plot_map_one_radar_to_grid": [1319, 1321, 1361], "xsarp": [1320, 1332, 1333], "gatefilter_s": [1320, 1324], "exclude_abov": [1320, 1324, 1353], "gatefilter_sw": [1320, 1324], "201": [1320, 1344, 1355], "57861": [1320, 1324], "363611": [1320, 1324], "48": 1320, "729": [1320, 1321, 1361], "plot_map_two_radars_to_grid": [1320, 1321, 1361], "615": 1321, "visual": [1323, 1326, 1334, 1342, 1359], "linspac": [1323, 1326, 1344, 1351, 1363], "256": [1323, 1345, 1357, 1359], "vstack": 1323, "def": [1323, 1363], "plot_color_gradi": 1323, "cmap_categori": 1323, "cmap_list": 1323, "len": [1323, 1337, 1345, 1351, 1357, 1359], "figh": 1323, "subplots_adjust": [1323, 1332, 1333], "set_titl": [1323, 1344], "cmap_nam": 1323, "pyart_": 1323, "va": 1323, "transax": 1323, "spine": 1323, "set_axis_off": 1323, "colorblind": 1323, "friendli": 1323, "langrainbow12": 1323, "homeyerrainbow": 1323, "balanc": 1323, "chasespectr": 1323, "spectralextend": 1323, "perceptu": [1323, 1326], "light": [1323, 1345, 1359], "bu10": 1323, "bu7": 1323, "gray5": 1323, "gray9": 1323, "diverg": 1323, "meaning": 1323, "bluebrown11": 1323, "brbu10": 1323, "brbu12": 1323, "budor12": 1323, "budor18": 1323, "budrd12": 1323, "budrd18": 1323, "bugr14": 1323, "bugy8": 1323, "buor10": 1323, "buor12": 1323, "buor8": 1323, "buorr14": 1323, "grmg16": 1323, "rdylbu11b": 1323, "There": [1323, 1359, 1362, 1365], "bluebrown10": 1323, "nwsref": 1323, "carbone11": 1323, "carbone17": 1323, "carbone42": 1323, "cat12": 1323, "ewilson17": 1323, "nwsvel": 1323, "nws_spw": 1323, "pd17": 1323, "rrate11": 1323, "refdiff": 1323, "scook18": 1323, "stepseq25": 1323, "symgray12": 1323, "theodore16": 1323, "wild25": 1323, "spectral_r": 1323, "rememb": 1323, "front": [1323, 1358], "shown": 1323, "032": [1323, 1340, 1361], "plot_choose_a_colormap": [1323, 1340, 1361], "181": 1324, "plot_grid": [1324, 1338, 1344, 1355, 1358], "scatter": [1324, 1342], "tab": 1324, "blue": [1324, 1334, 1335, 1359], "black": [1324, 1342], "legend": 1324, "plot_cross_sect": [1324, 1340, 1361], "725": [1324, 1340, 1361], "joe": 1325, "brien": 1325, "obrienj": 1325, "perfect": 1325, "overlap": [1325, 1334], "coord": 1325, "gridlin": 1325, "gl": 1325, "draw_label": 1325, "grai": [1325, 1326, 1357, 1359], "gca": 1325, "set_major_loc": 1325, "nullloc": 1325, "top_label": 1325, "right_label": 1325, "xlabel_styl": 1325, "ylabel_styl": 1325, "delet": [1325, 1363], "del": 1325, "manipul": [1325, 1350], "axsb": 1325, "ppi_map": 1325, "cbar": 1325, "set_label": 1325, "set_tick": 1325, "446": [1325, 1340, 1361], "plot_modify_colorbar": [1325, 1340, 1361], "reduc": [1326, 1362], "promin": 1326, "deemphas": 1326, "depict": 1326, "ultim": [1326, 1359], "misinterpret": 1326, "lmtomkin": [1326, 1344], "ncsu": [1326, 1344], "citat": 1326, "mcolor": [1326, 1344], "nexrad_fil": [1326, 1344], "kbgm": 1326, "kbgm20200207_132642_v06": 1326, "image_mute_radar": [1326, 1344], "magma_cmap": 1326, "get_cmap": [1326, 1344], "magma_r": [1326, 1344], "grays_cmap": 1326, "gray_r": 1326, "nonmuted_cmap": 1326, "linearsegmentedcolormap": [1326, 1344], "from_list": [1326, 1344], "muted_cmap": 1326, "nonmuted_reflect": [1326, 1344], "muted_reflect": 1326, "300": [1326, 1327, 1351], "set_aspect": [1326, 1344, 1345, 1358, 1359], "226": [1326, 1340, 1361], "plot_nexrad_image_muted_reflect": [1326, 1340, 1361], "katx20130717_195021_v06": [1327, 1360], "plot_nexrad_multiple_mo": [1327, 1340, 1361], "level2_katx_20130717_1950": 1328, "ar2v": 1328, "super": [1328, 1352, 1355, 1358], "plot_range_r": [1328, 1329, 1331], "538": [1328, 1340, 1361], "plot_nexrad_reflect": [1328, 1340, 1361], "main": [1329, 1363], "plot_cross_hair": 1329, "984": [1329, 1340, 1361], "plot_ppi_cfradi": [1329, 1340, 1361], "150": [1330, 1338, 1340, 1353, 1361], "377": [1330, 1340, 1361], "plot_ppi_mdv": [1330, 1340, 1361], "jason": [1331, 1338], "hemeding": [1331, 1338], "nsaxsaprppic1": 1331, "a1": 1331, "20140201": 1331, "184802": 1331, "157": 1331, "156": 1331, "71": 1331, "158": 1331, "154": 1331, "69": [1331, 1358], "72": 1331, "40km": 1331, "plot_line_xi": 1331, "plot_point": 1331, "384": [1331, 1340, 1361], "plot_ppi_with_r": [1331, 1340, 1361], "sgpxsaprrhicmaci5": [1332, 1333, 1337], "20110524": [1332, 1333, 1337], "015604_nc4": [1332, 1333, 1337], "instrument_nam": [1332, 1333, 1360], "hspace": [1332, 1333], "agl": 1332, "fac": 1332, "nplot": [1332, 1333, 1337], "snum": 1332, "hsrhi": [1332, 1333], "3f": [1332, 1333], "time_start": 1332, "num2dat": 1332, "only_use_cftime_datetim": 1332, "only_use_python_datetim": 1332, "figure_titl": 1332, "isoformat": 1332, "506": [1332, 1340, 1361], "plot_rhi_cfradi": [1332, 1340, 1361], "166": [1333, 1340, 1361], "plot_rhi_cfradial_singlescan": [1333, 1340, 1361], "differnenti": 1334, "cori": [1334, 1335], "weber": [1334, 1335], "cweber": [1334, 1335], "220629": 1334, "white": 1334, "matplolib": 1334, "visabl": 1334, "border": [1334, 1359], "flow": [1334, 1357], "paramt": 1334, "compens": 1334, "nearli": 1334, "00015": 1334, "veri": [1334, 1344, 1358, 1359], "antialias": [1334, 1335], "moir": 1334, "get_start": [1334, 1335], "get_end": [1334, 1335], "blur": 1334, "nice": [1334, 1362], "arbirarli": 1334, "impact": 1334, "gaussian_filt": [1334, 1335], "levels_rain": 1334, "levels_ic": 1334, "contours_ic": 1334, "contours_rain": 1334, "red": [1334, 1335], "fmt": [1334, 1335], "0000": [1334, 1335], "clabel": [1334, 1335], "inlin": [1334, 1335, 1357], "plot_rhi_contours_differential_reflect": [1334, 1340, 1361], "spyi": 1335, "034142": 1335, "ramp": 1335, "blob": 1335, "pyart_budrd18": 1335, "comment": [1335, 1360], "coutour": 1335, "solid": 1335, "dot": 1335, "major": [1335, 1358], "axhlin": 1335, "dash": 1335, "axvlin": 1335, "00b4ff": 1335, "ff6800": 1335, "set_ylabel": [1335, 1346, 1358], "cp": 1335, "627": [1335, 1340, 1361], "plot_rhi_data_overlai": [1335, 1340, 1361], "110041": 1336, "299": [1336, 1340, 1361], "plot_rhi_mdv": [1336, 1340, 1361], "fields_to_plot": 1337, "plot_num": 1337, "grab": 1337, "u00b0": 1337, "205": [1337, 1340, 1361], "plot_rhi_two_panel": [1337, 1340, 1361], "20110520100000_nexrad_grid": 1338, "read_grid": 1338, "map_panel_ax": 1338, "x_cut_panel_ax": 1338, "y_cut_panel_ax": 1338, "add_ax": [1338, 1358], "plot_crosshair": 1338, "plot_longitude_slic": 1338, "set_ylim": [1338, 1345, 1358, 1359], "set_xlim": [1338, 1345, 1358, 1359], "plot_latitude_slic": [1338, 1355, 1358], "plot_three_panel_gridmapdisplai": [1338, 1340, 1361], "225": 1339, "270": [1339, 1358, 1363], "xsect": 1339, "cross_section_ppi": [1339, 1358], "211": 1339, "212": 1339, "tight_layout": 1339, "069": [1339, 1340, 1361], "263": 1340, "04": [1340, 1342, 1361], "maxwel": [1342, 1343], "site_lon": 1342, "73": 1342, "site_lat": 1342, "latitdu": 1342, "pathcollect": 1342, "0x2b624b4ec5f0": 1342, "columnsect": 1342, "get_field_loc": 1342, "2kb": 1342, "176b": 1342, "351": 1342, "818e": 1342, "88": 1342, "recalculated_diff_phas": [1342, 1351], "555": 1342, "2778": 1342, "unf_dp_phase_shift": [1342, 1351], "88b": 1342, "688": 1342, "144": 1342, "diff_reflect": [1342, 1351], "95": [1342, 1360], "datetime64": 1342, "8b": 1342, "20t06": 1342, "distance_from_radar": 1342, "233": 1342, "545": 1342, "latitude_of_loc": 1342, "longitude_of_loc": 1342, "line2d": 1342, "0x2b624b47f920": 1342, "215": [1342, 1347, 1361], "plot_column_subset": [1342, 1347, 1361], "compz": 1343, "composite_reflect": 1343, "composite_displai": 1343, "891": [1343, 1347, 1361], "plot_composite_reflect": [1343, 1347, 1361], "classifc": 1344, "summer": 1344, "ian": 1344, "footprint": 1344, "yield": 1344, "smoother": 1344, "rescal": 1344, "simpli": [1344, 1353, 1355, 1362, 1363, 1365], "plot_convstrat_schem": 1344, "pick": 1344, "radii": 1344, "dilat": 1344, "event": [1344, 1358, 1359], "extract_sweep": [1344, 1346], "convsf_mask": 1344, "masked_equ": 1344, "convsf": 1344, "magma_r_cmap": 1344, "ref_cmap": 1344, "albersequalarea": 1344, "convsf_und": 1344, "convsf_ov": 1344, "uncertainti": 1344, "underest": 1344, "overest": 1344, "09": 1344, "ktbw": 1344, "ktbw20220928_190142_v06": 1344, "rasumussen": 1344, "reflecit": 1344, "kokx": 1344, "kokx20210207_161413_v06": 1344, "nonmuted_ref": 1344, "masked_invalid": 1344, "nonmuted_ref_linear": 1344, "mm6": 1344, "m3": 1344, "snow_rat": 1344, "57": 1344, "67": 1344, "snow_rate_dict": 1344, "standard_nam": [1344, 1352, 1360], "hr": 1344, "40500": 1344, "purpos": 1344, "034": 1344, "ccotd": 1344, "rasmussen": 1344, "dixon": 1344, "vasiloff": 1344, "hage": 1344, "knight": 1344, "vivekanandan": 1344, "xu": 1344, "nowcast": 1344, "042": 1344, "3c0020": 1344, "snuart": 1344, "257": [1344, 1347, 1361], "plot_convective_stratiform": [1344, 1347, 1361], "daniel": [1345, 1346], "mpl": [1345, 1352, 1355, 1357, 1358, 1359], "open_radar_data": [1345, 1346], "fetch": [1345, 1346, 1363], "mll2217907250u": [1345, 1357], "003": [1345, 1359], "preinterpol": 1345, "20220628072500_savevol_cosmo_lookup_temp": 1345, "nwp_temp": 1345, "uncorrected_differential_phas": [1345, 1357, 1359], "pia": [1345, 1359], "pida": [1345, 1359], "corrected_reflect": [1345, 1356, 1359], "corrected_differential_reflect": [1345, 1356, 1359], "kdp_maesaka": [1345, 1359], "specific_differential_phas": [1345, 1356, 1359], "hydroclass_semisupervis": [1345, 1359], "uncorrected_cross_correlation_ratio": [1345, 1357, 1359], "radar_echo_classif": [1345, 1359], "boundarynorm": [1345, 1357, 1359], "crystal": [1345, 1359], "rime": [1345, 1359], "particl": [1345, 1359], "hail": [1345, 1359], "graupel": [1345, 1359], "841": [1345, 1347, 1361], "plot_hydrometeor": [1345, 1347, 1361], "2919": 1346, "4178130067885": 1346, "10761547461152": 1346, "5509": 1346, "768666450866": 1346, "7536260737106204": 1346, "8052": 1346, "019321078435": 1346, "342043600045145": 1346, "10640": 1346, "04439644888": 1346, "977913962677121": 1346, "14495": 1346, "494732164778": 1346, "906225782819092": 1346, "18768": 1346, "789393587038": 1346, "262494841590524": 1346, "23035": 1346, "24401461892": 1346, "614115744829178": 1346, "27293": 1346, "5715815695": 1346, "95976355858147": 1346, "31542": 1346, "48958020564": 1346, "298115176148713": 1346, "35780": 1346, "72036395222": 1346, "627849710173905": 1346, "40006": 1346, "99151830096": 1346, "94764890149236": 1346, "44220": 1346, "03622135054": 1346, "25619751494378": 1346, "50489": 1346, "064549734816": 1346, "67152879666537": 1346, "58843": 1346, "38833568245": 1346, "228615786880255": 1346, "71218": 1346, "4286093181": 1346, "68": 1346, "92037126235664": 1346, "87323": 1346, "4833560437": 1346, "46686871536076": 1346, "106930": 1346, "95716868155": 1346, "65646427776664": 1346, "125649": 1346, "4902487807": 1346, "97650004737079": 1346, "143446": 1346, "80052956566": 1346, "143": [1346, 1358], "38717443030328": 1346, "160134": 1346, "12803849299": 1346, "68632691167295": 1346, "mla2119412050u": 1346, "zlevel": [1346, 1358], "u_allsweep": 1346, "v_allsweep": 1346, "idx": 1346, "radar_1sweep": 1346, "vad_brown": [1346, 1358], "u_avg": 1346, "nanmean": [1346, 1358], "v_avg": 1346, "rad2deg": [1346, 1358], "sharei": [1346, 1358, 1359], "set_xlabel": [1346, 1358], "406": [1346, 1347, 1361], "plot_vad": [1346, 1347, 1361], "609": 1347, "08": [1347, 1361], "cookbook": [1349, 1364], "depth": [1349, 1360, 1363], "conceptu": 1349, "projectpythia": 1349, "understand": 1349, "search": [1349, 1362], "api": 1349, "demonstr": 1349, "toolkit": [1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360], "basi": 1349, "exploit": 1349, "prefer": [1349, 1362], "submodul": [1349, 1355], "superproject": 1349, "propos": 1349, "bleed": 1349, "among": 1349, "europ": 1349, "fmi": 1349, "windcub": 1349, "leospher": 1349, "research": [1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "facil": [1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "colli": [1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "languag": [1349, 1363], "e25": [1349, 1363], "5334": [1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "jor": [1349, 1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "lainer": [1349, 1363], "schauweck": [1349, 1363], "framework": [1349, 1363], "abil": [1349, 1365], "ii": [1349, 1360], "sophist": 1349, "tutori": 1349, "erad": 1349, "easiest": [1349, 1363], "latest": [1349, 1363], "januari": 1349, "1st": 1349, "anaconda": [1349, 1362, 1363], "miniconda": [1349, 1363], "environ": [1349, 1359, 1362, 1364], "yml": [1349, 1365], "Or": 1349, "basic": [1349, 1350, 1352], "pyart_env": [1349, 1352, 1355, 1365], "forg": [1349, 1362, 1363, 1365], "pyart_mch": [1349, 1362, 1363, 1365], "termin": [1349, 1363, 1365], "prompt": [1349, 1363], "wish": 1349, "unreleas": 1349, "clone": [1349, 1362], "git": [1349, 1362, 1363, 1365], "repositori": [1349, 1362, 1363, 1365], "Then": [1349, 1362, 1363], "scientif": [1349, 1363], "linux": [1349, 1363, 1365], "mac": 1349, "charg": 1349, "resourc": [1349, 1362], "lassen": 1349, "radtec": 1349, "rsl_path": [1349, 1362], "usr": 1349, "h5py": 1349, "solver": 1349, "fastest": 1349, "cbc": 1349, "glpk": 1349, "coincbc": [1349, 1362, 1365], "coin_install_dir": [1349, 1362, 1365], "wradlib": 1349, "pytest": [1349, 1362, 1363], "appreci": 1349, "sometim": 1351, "hypothet": 1351, "doesn": 1351, "partli": [1351, 1352, 1353, 1355, 1356, 1357, 1360], "depart": [1351, 1352, 1353, 1355, 1356, 1357, 1360], "energi": [1351, 1352, 1353, 1355, 1356, 1357, 1360], "radiat": [1351, 1352, 1353, 1355, 1356, 1357, 1360, 1363], "offic": [1351, 1352, 1353, 1355, 1356, 1357, 1360], "scienc": [1351, 1352, 1353, 1355, 1356, 1357, 1360], "cite": [1351, 1352, 1353, 1355, 1356, 1357, 1360], "jj": [1351, 1352, 1353, 1355, 1356, 1357, 1360], "sm": [1351, 1352, 1353, 1355, 1356, 1357, 1360], "test_radar": [1351, 1363], "idea": [1351, 1353, 1358, 1359], "dict_kei": [1351, 1356], "rain_rate_a": [1351, 1356], "time_coverage_start": [1351, 1360], "time_coverage_end": 1351, "volume_numb": 1351, "platform_typ": 1351, "instrument_typ": 1351, "primary_axi": 1351, "667": 1351, "make_empty_ppi_radar": 1351, "59416667": 1351, "As": [1351, 1353, 1355, 1356, 1363], "isn": 1351, "120": [1351, 1359], "240": 1351, "420": 1351, "480": 1351, "540": 1351, "660": 1351, "720": 1351, "780": 1351, "840": 1351, "900": 1351, "960": 1351, "1020": 1351, "1080": 1351, "1140": 1351, "1200": 1351, "1260": 1351, "1320": 1351, "1380": [1351, 1359], "1440": 1351, "1500": 1351, "1560": 1351, "1620": 1351, "1680": 1351, "1740": 1351, "1860": 1351, "1920": 1351, "1980": 1351, "2040": 1351, "2100": 1351, "2160": 1351, "2220": 1351, "2280": 1351, "2340": 1351, "2400": 1351, "2460": 1351, "2520": 1351, "2580": 1351, "2640": [1351, 1359], "2700": 1351, "2760": 1351, "2820": 1351, "2880": 1351, "2940": 1351, "3060": 1351, "3120": 1351, "3180": 1351, "3240": 1351, "3300": 1351, "3360": 1351, "3420": 1351, "3480": 1351, "3540": 1351, "3660": 1351, "3720": 1351, "3780": 1351, "3840": 1351, "3900": 1351, "3960": 1351, "4020": 1351, "4080": 1351, "4140": 1351, "4200": [1351, 1359], "4260": 1351, "4320": 1351, "4380": 1351, "4440": 1351, "4560": 1351, "4620": 1351, "4680": 1351, "4740": 1351, "4800": 1351, "4860": 1351, "4920": 1351, "4980": 1351, "5040": 1351, "5100": 1351, "5160": 1351, "5220": 1351, "5280": 1351, "5340": 1351, "5400": 1351, "5460": 1351, "5520": 1351, "5580": 1351, "5640": 1351, "5700": 1351, "5760": 1351, "5820": 1351, "5880": 1351, "5940": 1351, "6060": 1351, "6120": 1351, "6180": 1351, "6240": 1351, "6300": 1351, "6360": 1351, "6420": 1351, "6480": 1351, "6540": 1351, "6600": 1351, "6660": 1351, "6720": 1351, "6780": 1351, "6840": 1351, "6900": 1351, "6960": 1351, "7020": 1351, "7080": 1351, "7140": 1351, "7200": [1351, 1360], "7260": 1351, "7320": 1351, "7380": 1351, "7440": 1351, "7500": 1351, "7560": 1351, "7620": 1351, "7680": 1351, "7740": 1351, "7800": 1351, "7860": 1351, "7920": 1351, "7980": 1351, "8040": 1351, "8100": 1351, "8160": 1351, "8220": 1351, "8280": 1351, "8340": 1351, "8400": 1351, "8460": 1351, "8520": 1351, "8580": 1351, "8640": 1351, "8700": 1351, "8760": 1351, "8820": 1351, "8880": 1351, "8940": 1351, "9000": [1351, 1355], "9060": 1351, "9120": 1351, "9180": 1351, "9240": 1351, "9300": 1351, "9360": 1351, "9420": 1351, "9480": 1351, "9540": 1351, "9600": 1351, "9660": 1351, "9720": 1351, "9780": 1351, "9840": 1351, "9900": 1351, "9960": 1351, "10020": 1351, "10080": 1351, "10140": 1351, "10200": 1351, "10260": 1351, "10320": 1351, "10380": 1351, "10440": 1351, "10500": 1351, "10560": 1351, "10620": 1351, "10680": 1351, "10740": 1351, "10800": 1351, "10860": 1351, "10920": 1351, "10980": 1351, "11040": 1351, "11100": 1351, "11160": 1351, "11220": 1351, "11280": 1351, "11340": 1351, "11400": 1351, "11460": 1351, "11520": 1351, "11580": 1351, "11640": 1351, "11700": 1351, "11760": 1351, "11820": 1351, "11880": 1351, "11940": 1351, "12060": 1351, "12120": 1351, "12180": 1351, "12240": 1351, "12300": 1351, "12360": 1351, "12420": 1351, "12480": 1351, "12540": 1351, "12600": 1351, "12660": 1351, "12720": 1351, "12780": 1351, "12840": 1351, "12900": 1351, "12960": 1351, "13020": 1351, "13080": 1351, "13140": 1351, "13200": 1351, "13260": 1351, "13320": 1351, "13380": 1351, "13440": 1351, "13500": 1351, "13560": 1351, "13620": 1351, "13680": 1351, "13740": 1351, "13800": 1351, "13860": 1351, "13920": 1351, "13980": 1351, "14040": 1351, "14100": 1351, "14160": 1351, "14220": 1351, "14280": 1351, "14340": 1351, "14400": 1351, "14460": 1351, "14520": 1351, "14580": 1351, "14640": 1351, "14700": 1351, "14760": 1351, "14820": 1351, "14880": 1351, "14940": 1351, "15060": 1351, "15120": 1351, "15180": 1351, "15240": 1351, "15300": 1351, "15360": 1351, "15420": 1351, "15480": 1351, "15540": 1351, "15600": 1351, "15660": 1351, "15720": 1351, "15780": 1351, "15840": 1351, "15900": 1351, "15960": 1351, "16020": 1351, "16080": 1351, "16140": 1351, "16200": 1351, "16260": 1351, "16320": 1351, "16380": 1351, "16440": 1351, "16500": 1351, "16560": 1351, "16620": 1351, "16680": 1351, "16740": 1351, "16800": 1351, "16860": 1351, "16920": 1351, "16980": 1351, "17040": 1351, "17100": 1351, "17160": 1351, "17220": 1351, "17280": 1351, "17340": 1351, "17400": 1351, "17460": 1351, "17520": 1351, "17580": 1351, "17640": 1351, "17700": 1351, "17760": 1351, "17820": 1351, "17880": 1351, "17940": 1351, "18000": [1351, 1355], "18060": 1351, "18120": 1351, "18180": 1351, "18240": 1351, "18300": 1351, "18360": 1351, "18420": 1351, "18480": 1351, "18540": 1351, "18600": 1351, "18660": 1351, "18720": 1351, "18780": 1351, "18840": 1351, "18900": 1351, "18960": 1351, "19020": 1351, "19080": 1351, "19140": 1351, "19200": 1351, "19260": 1351, "19320": 1351, "19380": 1351, "19440": 1351, "19500": 1351, "19560": 1351, "19620": 1351, "19680": 1351, "19740": 1351, "19800": 1351, "19860": 1351, "19920": 1351, "19980": 1351, "20040": 1351, "20100": 1351, "20160": 1351, "20220": 1351, "20280": 1351, "20340": 1351, "20400": 1351, "20460": 1351, "20520": 1351, "20580": 1351, "20640": 1351, "20700": 1351, "20760": 1351, "20820": 1351, "20880": 1351, "20940": 1351, "21000": [1351, 1355], "21060": 1351, "21120": 1351, "21180": 1351, "21240": 1351, "21300": 1351, "21360": 1351, "21420": 1351, "21480": 1351, "21540": 1351, "21600": 1351, "21660": 1351, "21720": 1351, "21780": 1351, "21840": 1351, "21900": 1351, "21960": 1351, "22020": 1351, "22080": 1351, "22140": 1351, "22200": 1351, "22260": 1351, "22320": 1351, "22380": 1351, "22440": 1351, "22500": 1351, "22560": 1351, "22620": 1351, "22680": 1351, "22740": 1351, "22800": [1351, 1358], "22860": 1351, "22920": 1351, "22980": 1351, "23040": 1351, "23100": 1351, "23160": 1351, "23220": 1351, "23280": 1351, "23340": 1351, "23400": 1351, "23460": 1351, "23520": 1351, "23580": 1351, "23640": 1351, "23700": 1351, "23760": 1351, "23820": 1351, "23880": 1351, "23940": 1351, "24000": [1351, 1355], "24060": 1351, "24120": 1351, "24180": 1351, "24240": 1351, "24300": 1351, "24360": 1351, "24420": 1351, "24480": 1351, "24540": 1351, "24600": 1351, "24660": 1351, "24720": 1351, "24780": 1351, "24840": 1351, "24900": 1351, "24960": 1351, "25020": 1351, "25080": 1351, "25140": 1351, "25200": 1351, "25260": 1351, "25320": 1351, "25380": 1351, "25440": 1351, "25500": 1351, "25560": 1351, "25620": 1351, "25680": 1351, "25740": 1351, "25800": 1351, "25860": 1351, "25920": 1351, "25980": 1351, "26040": 1351, "26100": 1351, "26160": 1351, "26220": 1351, "26280": 1351, "26340": 1351, "26400": 1351, "26460": 1351, "26520": 1351, "26580": 1351, "26640": 1351, "26700": 1351, "26760": 1351, "26820": 1351, "26880": 1351, "26940": 1351, "27000": [1351, 1355], "27060": [1351, 1358], "27120": 1351, "27180": 1351, "27240": 1351, "27300": 1351, "27360": 1351, "27420": 1351, "27480": 1351, "27540": 1351, "27600": 1351, "27660": 1351, "27720": 1351, "27780": 1351, "27840": 1351, "27900": 1351, "27960": 1351, "28020": 1351, "28080": 1351, "28140": 1351, "28200": 1351, "28260": 1351, "28320": 1351, "28380": 1351, "28440": 1351, "28500": 1351, "28560": 1351, "28620": 1351, "28680": 1351, "28740": 1351, "28800": 1351, "28860": 1351, "28920": 1351, "28980": 1351, "29040": 1351, "29100": 1351, "29160": 1351, "29220": 1351, "29280": 1351, "29340": 1351, "29400": 1351, "29460": 1351, "29520": 1351, "29580": 1351, "29640": 1351, "29700": 1351, "29760": 1351, "29820": 1351, "29880": 1351, "29940": 1351, "30000": [1351, 1355], "30060": 1351, "30120": 1351, "30180": 1351, "30240": 1351, "30300": 1351, "30360": 1351, "30420": 1351, "30480": 1351, "30540": 1351, "30600": 1351, "30660": 1351, "30720": 1351, "30780": 1351, "30840": 1351, "30900": 1351, "30960": 1351, "31020": 1351, "31080": 1351, "31140": 1351, "31200": 1351, "31260": 1351, "31320": 1351, "31380": 1351, "31440": 1351, "31500": 1351, "31560": 1351, "31620": 1351, "31680": 1351, "31740": 1351, "31800": 1351, "31860": 1351, "31920": 1351, "31980": 1351, "32040": 1351, "32100": 1351, "32160": 1351, "32220": 1351, "32280": 1351, "32340": 1351, "32400": 1351, "32460": 1351, "32520": 1351, "32580": 1351, "32640": 1351, "32700": 1351, "32760": 1351, "32820": 1351, "32880": 1351, "32940": 1351, "33000": [1351, 1355], "33060": 1351, "33120": 1351, "33180": 1351, "33240": 1351, "33300": 1351, "33360": 1351, "33420": 1351, "33480": 1351, "33540": 1351, "33600": 1351, "33660": 1351, "33720": 1351, "33780": 1351, "33840": 1351, "33900": 1351, "33960": 1351, "34020": 1351, "34080": 1351, "34140": 1351, "34200": 1351, "34260": 1351, "34320": 1351, "34380": 1351, "34440": 1351, "34500": 1351, "34560": 1351, "34620": 1351, "34680": 1351, "34740": 1351, "34800": 1351, "34860": 1351, "34920": 1351, "34980": 1351, "35040": 1351, "35100": 1351, "35160": 1351, "35220": 1351, "35280": 1351, "35340": 1351, "35400": 1351, "35460": 1351, "35520": 1351, "35580": 1351, "35640": 1351, "35700": 1351, "35760": 1351, "35820": 1351, "35880": 1351, "35940": 1351, "36000": [1351, 1355], "36060": 1351, "36120": 1351, "36180": 1351, "36240": 1351, "36300": 1351, "36360": 1351, "36420": 1351, "36480": 1351, "36540": 1351, "36600": 1351, "36660": 1351, "36720": 1351, "36780": 1351, "36840": 1351, "36900": 1351, "36960": 1351, "37020": 1351, "37080": 1351, "37140": 1351, "37200": 1351, "37260": 1351, "37320": 1351, "37380": 1351, "37440": 1351, "37500": 1351, "37560": 1351, "37620": 1351, "37680": 1351, "37740": 1351, "37800": 1351, "37860": 1351, "37920": 1351, "37980": 1351, "38040": 1351, "38100": 1351, "38160": 1351, "38220": 1351, "38280": 1351, "38340": 1351, "38400": 1351, "38460": 1351, "38520": 1351, "38580": 1351, "38640": 1351, "38700": 1351, "38760": 1351, "38820": 1351, "38880": 1351, "38940": 1351, "39000": [1351, 1355], "39060": 1351, "39120": 1351, "39180": 1351, "39240": 1351, "39300": 1351, "39360": 1351, "39420": 1351, "39480": 1351, "39540": 1351, "39600": 1351, "39660": 1351, "39720": 1351, "39780": 1351, "39840": 1351, "39900": 1351, "39960": 1351, "squeez": 1351, "59416776": 1351, "59416886": 1351, "59489769": 1351, "59489879": 1351, "5948999": 1351, "59415662": 1351, "59414657": 1351, "5874659": 1351, "58745576": 1351, "58744563": 1351, "59414621": 1351, "59412575": 1351, "5805231": 1351, "58050246": 1351, "58048182": 1351, "59419881": 1351, "59423095": 1351, "61560159": 1351, "61563401": 1351, "61566644": 1351, "59418877": 1351, "59421087": 1351, "6089062": 1351, "6089285": 1351, "60895079": 1351, "59417836": 1351, "59419005": 1351, "60196382": 1351, "60197561": 1351, "60198741": 1351, "get_metadata": 1351, "ref_dict": 1351, "reflecitivity_horizont": 1351, "21875": 1351, "34375": 1351, "0078125": 1351, "2109375": 1351, "1171875": 1351, "59375": 1351, "421875": 1351, "5625": 1351, "7109375": 1351, "609375": 1351, "5078125": 1351, "3828125": 1351, "6875": 1351, "328125": 1351, "3203125": 1351, "859375": 1351, "6484375": 1351, "8515625": 1351, "9375": [1351, 1360], "0234375": 1351, "6328125": 1351, "2890625": 1351, "546875": 1351, "578125": 1351, "6796875": 1351, "ref_field": 1352, "ref_gt_0": 1352, "mask_dict": 1352, "reflectivity_mask": 1352, "coolwarm": 1352, "sherm": [1352, 1355], "782": [1352, 1355], "matplotlibdeprecationwarn": [1352, 1355, 1358], "set_xtick": [1352, 1355], "position": [1352, 1355], "later": [1352, 1355, 1358, 1359], "xtick": [1352, 1355], "829": [1352, 1355], "set_ytick": [1352, 1355], "ytick": [1352, 1355], "write_cfradi": 1352, "2pi": 1353, "wave": 1353, "3pi": 1353, "incorrect": 1353, "phenomena": [1353, 1360], "maximium": 1353, "unambi": 1353, "preprocess": 1353, "thankfulli": [1353, 1355], "calculate_velocity_textur": 1353, "surround": [1353, 1355, 1358, 1359], "presenc": [1353, 1358, 1359], "524973": 1353, "vel_textur": 1353, "velocity_textur": [1353, 1356], "vleociti": 1353, "At": [1353, 1358], "velocity_dealias": 1353, "much": [1353, 1355, 1356, 1358, 1359], "realist": 1353, "gates_to_grid": 1355, "deprecationwarn": [1355, 1357], "99000": 1355, "98000": 1355, "97000": 1355, "96000": 1355, "95000": 1355, "94000": 1355, "93000": 1355, "92000": 1355, "91000": 1355, "90000": 1355, "89000": 1355, "88000": 1355, "87000": 1355, "86000": 1355, "85000": 1355, "84000": 1355, "83000": 1355, "82000": 1355, "81000": 1355, "80000": 1355, "79000": 1355, "78000": 1355, "77000": 1355, "76000": 1355, "75000": 1355, "74000": 1355, "73000": 1355, "72000": 1355, "71000": 1355, "70000": 1355, "69000": 1355, "68000": 1355, "67000": 1355, "66000": 1355, "65000": 1355, "64000": 1355, "63000": 1355, "62000": 1355, "61000": 1355, "59000": 1355, "58000": 1355, "57000": 1355, "56000": 1355, "55000": 1355, "54000": 1355, "53000": 1355, "52000": 1355, "51000": 1355, "49000": 1355, "48000": 1355, "47000": 1355, "46000": 1355, "45000": 1355, "44000": 1355, "43000": 1355, "42000": 1355, "41000": 1355, "38000": 1355, "37000": 1355, "35000": 1355, "34000": 1355, "32000": 1355, "31000": 1355, "29000": 1355, "28000": 1355, "26000": 1355, "23000": 1355, "22000": 1355, "19000": 1355, "16000": 1355, "14000": 1355, "13000": 1355, "8000": [1355, 1358], "7000": 1355, "suit": [1355, 1359, 1363], "longitudn": 1355, "latitudn": 1355, "suffer": 1355, "artifici": 1355, "feather": 1355, "grid_bett": 1355, "1750": 1355, "sgpxsaprcmacsuri5": 1356, "20171004": 1356, "203018": 1356, "total_pow": 1356, "xsapr_clutt": 1356, "sounding_temperatur": 1356, "signal_to_noise_ratio": [1356, 1359], "gate_id": 1356, "simulated_veloc": 1356, "unfolded_differential_phas": 1356, "corrected_differential_phas": 1356, "filtered_corrected_differential_phas": 1356, "corrected_specific_diff_phas": 1356, "filtered_corrected_specific_diff_phas": 1356, "path_integrated_attenu": 1356, "specific_differential_attenu": 1356, "path_integrated_differential_attenu": 1356, "trip": 1356, "nonhydrometeor": 1356, "analyz": [1356, 1363], "exclude_equ": 1356, "cleaner": 1356, "tell": 1356, "refl_arrai": 1356, "reflectivity_w_mask": 1356, "iter_slic": [1356, 1360], "9344453454202706": 1356, "620691732853737": 1356, "3756584054113996": 1356, "597935968662154": 1356, "696735014111216": 1356, "061894569912447": 1356, "721673265240488": 1356, "086695918593689": 1356, "33930700509078": 1356, "599363169483158": 1356, "836875745223637": 1356, "051601529570966": 1356, "22435547210836": 1356, "378109469982695": 1356, "553820234067336": 1356, "648943841665002": 1356, "837593740986444": 1356, "049614721040282": 1356, "331202567459613": 1356, "585432697375357": 1356, "87002341270722": 1356, "993012637722325": 1356, "061966001642219": 1356, "122799449619672": 1356, "861035552720102": 1356, "74608994279257": 1356, "148801770281325": 1356, "70860719727862": 1356, "989513966551444": 1356, "188644935344827": 1356, "89301878240611": 1356, "172644371021923": 1356, "79879842243138": 1356, "912806090219976": 1356, "766281467013889": 1356, "920522471877334": 1356, "898600907318164": 1356, "971026055481874": 1356, "110503947133682": 1356, "094456418731509": 1356, "0822160050675675": 1356, "036430544969512": 1356, "259332430219459": 1356, "2438254054588604": 1356, "473482666015625": 1356, "574283685503023": 1356, "866719139946832": 1356, "771468742643597": 1356, "compani": 1357, "eld": 1357, "dn": 1357, "lema": [1357, 1359], "data_dir": 1357, "scratch": [1357, 1365], "pyrad_cours": 1357, "mch_jan_2024": 1357, "010": 1357, "read_metranet": 1357, "rainforest_test": [1357, 1358, 1359], "tqdm": 1357, "tqdmwarn": 1357, "iprogress": 1357, "ipywidget": 1357, "readthedoc": [1357, 1363], "stabl": 1357, "user_instal": 1357, "autonotebook": 1357, "notebook_tqdm": 1357, "fieldnam": 1357, "mch": 1357, "zv": 1357, "reflectivity_vv": 1357, "vel": 1357, "wid": 1357, "clt": 1357, "clutter_exit_cod": 1357, "stat_test_lag1": 1357, "stat_test_lag2": 1357, "wbn": 1357, "wide_band_nois": 1357, "mph": 1357, "mean_phas": 1357, "discrimin": 1357, "isnan": 1357, "read_file_c": 1357, "read_file_pi": 1357, "reli": [1357, 1359], "marco": 1357, "boscacci": 1357, "anywher": 1357, "prone": [1357, 1358], "zh_dn": 1357, "mha": 1357, "mhd": 1357, "mhl": 1357, "mhp": 1357, "mhw": 1357, "fashion": 1357, "file_hr": 1357, "mhl2217907250u": [1357, 1359], "ymx": 1357, "dvx": 1357, "yml2217907257l": 1357, "810": 1357, "dealv": 1357, "dvl2217907257l": 1357, "py_decod": 1357, "dbg": 1357, "verb": 1357, "verbl": 1357, "map_hydro": 1357, "io_aux": 1357, "hydro_remap": 1357, "pyart_langrainbow12": 1357, "set_yticklabel": 1357, "welcom": 1357, "pydda": 1357, "jax": 1357, "unabl": 1357, "engin": 1357, "tensorflow": 1357, "pyrad_proc": 1357, "flow_aux": 1357, "bokeh": 1357, "primit": 1357, "bool8": 1357, "bool_": 1357, "bokeh_bool_typ": 1357, "qpe": 1357, "rzc": 1357, "poh": 1357, "bzc": 1357, "mesh": 1357, "mzc": 1357, "read_cartesian_metranet": 1357, "rzc221790725vl": 1357, "63": [1357, 1360], "pyart_rrate11": 1357, "0x2b0d2db45660": 1357, "read_fil": 1357, "read_polar": 1357, "qpe_data_dn": 1357, "qpe_data": 1357, "summar": 1357, "ezc": 1357, "impli": 1357, "unrel": 1357, "unus": 1357, "exercic": [1358, 1359], "topic": [1358, 1359], "tackl": [1358, 1359], "pseudorhi": 1358, "glob": [1358, 1363], "load_config": [1358, 1359], "mch_config": [1358, 1359], "thu": 1358, "too": [1358, 1359], "inde": [1358, 1359], "especi": 1358, "simplest": 1358, "files_radar": 1358, "exercice2_swiss_doppl": 1358, "mll221790725": 1358, "enumer": 1358, "radar_merg": 1358, "sharex": [1358, 1359], "ravel": 1358, "discontinu": 1358, "difficulti": 1358, "isol": [1358, 1359], "seen": [1358, 1363], "ymin": 1358, "xmin": 1358, "ymax": 1358, "xmax": 1358, "cappi_res_h": 1358, "cappi_res_v": 1358, "cappi_zh": 1358, "throught": 1358, "thunderstorm": [1358, 1359], "1785": 1358, "shade": 1358, "quadrilater": 1358, "gouraud": 1358, "rcparam": 1358, "pcolor": 1358, "arg": 1358, "altitudin": 1358, "downdraft": 1358, "wider": 1358, "cold": 1358, "13th": 1358, "albi": 1358, "z\u00fcrich": 1358, "widespread": 1358, "unfortun": 1358, "question_pyart_meteoswiss": 1358, "mla211941205": 1358, "corrected_velocity_neg": 1358, "2682": 1358, "5272": 1358, "7815": 1358, "464": 1358, "runtimewarn": 1358, "mean_velocity_per_g": 1358, "reshap": 1358, "549": 1358, "y_new": 1358, "y_in_window": 1358, "10403": 1358, "14259": 1358, "18533": 1358, "31310": 1358, "35549": 1358, "39777": 1358, "43991": 1358, "50263": 1358, "58621": 1358, "71002": 1358, "87118": 1358, "106740": 1358, "125476": 1358, "143293": 1358, "160000": 1358, "radiosound": 1358, "payern": 1358, "130": 1358, "though": [1358, 1365], "discrep": 1358, "startup": 1359, "cosmo": 1359, "file_radar": 1359, "exercice1_swiss_thunderstorm": 1359, "20220628073500_savevol_cosmo_lookup_temp": 1359, "problemat": 1359, "gtfilter": 1359, "moment_and_texture_based_gate_filt": 1359, "clear": 1359, "mostli": 1359, "behind": 1359, "knowledg": 1359, "insight": 1359, "oblat": 1359, "drop": 1359, "784": 1359, "mont": 1359, "8231": 1359, "2514": 1359, "0644": 1359, "9861": 1359, "0239": 1359, "1971": 1359, "9661": 1359, "1464": 1359, "9447": 1359, "1142": 1359, "9787": 1359, "974": 1359, "2450": 1359, "5540": 1359, "1459": 1359, "9937": 1359, "945": 1359, "9432": 1359, "0110": 1359, "5141": 1359, "9928": 1359, "993": 1359, "5202": 1359, "3498": 1359, "9746": 1359, "843": 1359, "5287": 1359, "9751": 1359, "9804": 1359, "6547": 1359, "7054": 1359, "5101": 1359, "9765": 1359, "1114": 1359, "4998": 1359, "6431": 1359, "9845": 1359, "1010": 1359, "complic": 1359, "few": [1359, 1365], "dai": 1359, "refin": 1359, "est_rain_rate_hydro": 1359, "land": 1359, "lon_bnd": 1359, "lat_bnd": 1359, "states_provinc": 1359, "cultur": 1359, "admin_0_countri": 1359, "facecolor": 1359, "river": 1359, "add_featur": 1359, "287": 1359, "lambert": 1359, "feature_artist": 1359, "featureartist": 1359, "0x2b9150c92f80": 1359, "didn": 1359, "uncertain": 1359, "beam_azimuth_angl": 1360, "azimuth_angle_from_true_north": 1360, "radial_azimuth_coordin": 1360, "beam_elevation_angl": 1360, "elevation_angle_from_horizontal_plan": 1360, "radial_elevation_coordin": 1360, "1832": 1360, "log_differential_reflectivity_hv": 1360, "875": 1360, "9999": 1360, "differential_phase_hv": 1360, "equivalent_reflectivity_factor": 1360, "cross_correlation_ratio_hv": 1360, "correlation_ratio": 1360, "meters_per_second": 1360, "doppler_spectrum_width": 1360, "radial_velocity_of_scatterers_away_from_instru": 1360, "target_fixed_angl": 1360, "unambiguous_rang": 1360, "unambigu": 1360, "degrees_north": 1360, "degrees_east": 1360, "projection_range_coordin": 1360, "range_to_measurement_volum": 1360, "radial_range_coordin": 1360, "spacing_is_const": 1360, "meters_to_center_of_first_g": 1360, "2125": 1360, "meters_between_g": 1360, "int32": 1360, "s20": 1360, "unitless": 1360, "coplan": 1360, "vertical_point": 1360, "idl": 1360, "azimuth_surveil": 1360, "elevation_surveil": 1360, "sunscan": 1360, "manual_ppi": 1360, "manual_rhi": 1360, "17t19": 1360, "21z": 1360, "time_in_seconds_since_volume_start": 1360, "calendar": 1360, "gregorian": 1360, "histori": 1360, "katx": 1360, "original_contain": 1360, "vcp_pattern": 1360, "7470703": 1360, "7196045": 1360, "6893921": 1360, "511719": 1360, "get_slic": 1360, "sweep_1": 1360, "52734375": 1360, "itself": 1360, "indici": 1360, "slice_indic": 1360, "9066728410400056": 1360, "478547577741713": 1360, "587792083929423": 1360, "871031288639269": 1360, "971692217963673": 1360, "830616390843327": 1360, "108188248095756": 1360, "483419908190385": 1360, "88976917057903": 1360, "852766685681688": 1360, "410455582269897": 1360, "66444787446138": 1360, "997862391449566": 1360, "172098402018502": 1360, "489752513534416": 1360, "712565619531706": 1360, "commonli": 1360, "071": 1361, "29": 1361, "8x": 1362, "But": 1362, "bash": 1362, "export": [1362, 1365], "pythonpath": 1362, "pth": 1362, "build_ext": 1362, "pip": [1362, 1363, 1365], "segfault": 1362, "newer": 1362, "Theres": 1362, "reinstal": 1362, "remedi": 1362, "fno": 1362, "protector": 1362, "d_fortify_sourc": 1362, "cflag": 1362, "makefil": 1362, "troubl": 1362, "my": 1362, "bit": 1362, "define_macro": 1362, "macro": 1362, "extra_compile_arg": 1362, "m32": 1362, "extra_link_arg": 1362, "m64": 1362, "readm": 1362, "proj_lib": 1362, "xx": 1362, "usernam": 1362, "xxx": 1362, "mpl_toolkit": 1362, "offici": 1363, "mail": 1363, "openradar": 1363, "ev": 1363, "pyart_short_cours": 1363, "youtub": 1363, "watch": 1363, "diip": 1363, "q3bkzw": 1363, "auto_exampl": 1363, "scm": 1363, "book": 1363, "pep8": 1363, "popular": 1363, "pycodestyl": 1363, "pylint": 1363, "pep": 1363, "0008": 1363, "highli": 1363, "tast": 1363, "brief": 1363, "parti": 1363, "explain": 1363, "velocity_azimuth_displai": 1363, "_inverse_dist_squar": 1363, "_average1d": 1363, "explan": 1363, "mention": [1363, 1365], "statement": 1363, "__init__": 1363, "futur": 1363, "ran": 1363, "rerun": 1363, "test_vad": 1363, "make_target_radar": 1363, "ones_lik": 1363, "z_start": 1363, "z_end": 1363, "z_count": 1363, "vad_height": 1363, "vad_spe": 1363, "98665725": 1363, "94020686": 1363, "88107152": 1363, "81939374": 1363, "75851962": 1363, "vad_direct": 1363, "359": 1363, "84659496": 1363, "30240553": 1363, "358": 1363, "58658589": 1363, "357": 1363, "81073051": 1363, "01353486": 1363, "01335138": 1363, "06014712": 1363, "12039762": 1363, "18410404": 1363, "24791911": 1363, "98663937": 1363, "9398407": 1363, "87958641": 1363, "81587601": 1363, "75205693": 1363, "assert_almost_equ": 1363, "pyarg": 1363, "test_cfradi": 1363, "cd": 1363, "contribut": [1363, 1364], "branch": [1363, 1365], "fork": 1363, "cartopy_map": 1363, "push": 1363, "branch_nam": 1363, "checkout": 1363, "task": 1363, "untrack": 1363, "switch": 1363, "acronym": 1363, "maint": 1363, "finish": [1363, 1365], "quotat": 1363, "enter": 1363, "acronymn": 1363, "gitwash": 1363, "development_workflow": 1363, "editor": [1363, 1365], "sty": 1363, "whitespac": 1363, "vim": 1363, "thing": 1363, "ff": 1363, "checker": 1363, "appveyor": 1363, "travisci": 1363, "sit": 1363, "blog_post": 1363, "instruct": 1364, "contributor": 1364, "conflict": 1365, "panda": 1365, "ask": 1365, "exit": 1365, "recent": 1365, "manag": 1365, "deactiv": 1365, "enviro": 1365, "ipython": 1365, "spyder": 1365, "yourusernam": 1365, "youranacondadir": 1365, "machin": 1365, "jjhelmu": 1365, "py3": 1365, "gitter": 1365, "im": 1365}, "objects": {"pyart": [[576, 0, 1, "", "_debug_info"], [577, 1, 0, "-", "aux_io"], [625, 1, 0, "-", "bridge"], [627, 1, 0, "-", "config"], [640, 1, 0, "-", "core"], [722, 1, 0, "-", "correct"], [793, 1, 0, "-", "exceptions"], [794, 1, 0, "-", "filters"], [831, 1, 0, "-", "graph"], [1007, 1, 0, "-", "io"], [1030, 1, 0, "-", "lazydict"], [1054, 1, 0, "-", "map"], [1067, 1, 0, "-", "retrieve"], [1164, 1, 0, "-", "testing"], [1250, 1, 0, "-", "util"]], "pyart.aux_io": [[578, 0, 1, "", "convert_data"], [579, 0, 1, "", "extract_sweeps_skyecho"], [580, 0, 1, "", "get_library"], [581, 0, 1, "", "get_sweep_time_coverage"], [582, 0, 1, "", "read_bin"], [583, 0, 1, "", "read_bin_mf"], [584, 0, 1, "", "read_cartesian_metranet"], [585, 0, 1, "", "read_cf1"], [586, 0, 1, "", "read_cf1_cartesian"], [587, 0, 1, "", "read_cf1_cartesian_mf"], [588, 0, 1, "", "read_d3r_gcpex_nc"], [589, 0, 1, "", "read_dat_mf"], [590, 0, 1, "", "read_edge_netcdf"], [591, 0, 1, "", "read_file_c"], [592, 0, 1, "", "read_file_py"], [593, 0, 1, "", "read_gamic"], [594, 0, 1, "", "read_gif"], [595, 0, 1, "", "read_grib"], [596, 0, 1, "", "read_hpl"], [597, 0, 1, "", "read_iq"], [598, 0, 1, "", "read_kazr"], [599, 0, 1, "", "read_knmi_grid_h5"], [600, 0, 1, "", "read_mch_vad"], [601, 0, 1, "", "read_metranet"], [602, 0, 1, "", "read_noxp_iphex_nc"], [603, 0, 1, "", "read_odim_grid_h5"], [604, 0, 1, "", "read_odim_h5"], [605, 0, 1, "", "read_odim_vp_h5"], [606, 0, 1, "", "read_pattern"], [607, 0, 1, "", "read_png"], [608, 0, 1, "", "read_product_c"], [609, 0, 1, "", "read_product_py"], [610, 0, 1, "", "read_psr_cpi_header"], [611, 0, 1, "", "read_psr_header"], [612, 0, 1, "", "read_psr_spectra"], [613, 0, 1, "", "read_radx"], [614, 0, 1, "", "read_rainbow_psr"], [615, 0, 1, "", "read_rainbow_psr_spectra"], [616, 0, 1, "", "read_rainbow_wrl"], [617, 0, 1, "", "read_sinarame_h5"], [618, 0, 1, "", "read_skyecho"], [619, 0, 1, "", "read_spectra"], [620, 0, 1, "", "read_swissbirdradar_spectra"], [621, 0, 1, "", "write_odim_grid_h5"], [622, 0, 1, "", "write_odim_h5"], [623, 0, 1, "", "write_sinarame_cfradial"], [624, 0, 1, "", "write_spectra"]], "pyart.bridge": [[626, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[628, 2, 1, "", "FileMetadata"], [632, 0, 1, "", "get_KE"], [633, 0, 1, "", "get_field_colormap"], [634, 0, 1, "", "get_field_limits"], [635, 0, 1, "", "get_field_mapping"], [636, 0, 1, "", "get_field_name"], [637, 0, 1, "", "get_fillvalue"], [638, 0, 1, "", "get_metadata"], [639, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[629, 3, 1, "", "__call__"], [630, 3, 1, "", "get_field_name"], [631, 3, 1, "", "get_metadata"]], "pyart.core": [[641, 2, 1, "", "Grid"], [651, 2, 1, "", "HorizontalWindProfile"], [655, 2, 1, "", "Radar"], [684, 2, 1, "", "RadarSpectra"], [713, 0, 1, "", "antenna_to_cartesian"], [714, 0, 1, "", "antenna_vectors_to_cartesian"], [715, 0, 1, "", "cartesian_to_antenna"], [716, 0, 1, "", "cartesian_to_geographic"], [717, 0, 1, "", "cartesian_to_geographic_aeqd"], [718, 0, 1, "", "cartesian_vectors_to_geographic"], [719, 0, 1, "", "geographic_to_cartesian"], [720, 0, 1, "", "geographic_to_cartesian_aeqd"], [721, 0, 1, "", "wgs84_to_swissCH1903"]], "pyart.core.Grid": [[642, 3, 1, "", "add_field"], [643, 3, 1, "", "get_point_longitude_latitude"], [644, 3, 1, "", "get_projparams"], [645, 3, 1, "", "init_point_altitude"], [646, 3, 1, "", "init_point_longitude_latitude"], [647, 3, 1, "", "init_point_x_y_z"], [648, 4, 1, "", "projection_proj"], [649, 3, 1, "", "to_xarray"], [650, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[652, 3, 1, "", "from_u_and_v"], [653, 4, 1, "", "u_wind"], [654, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[656, 3, 1, "", "add_field"], [657, 3, 1, "", "add_field_like"], [658, 3, 1, "", "add_filter"], [659, 3, 1, "", "check_field_exists"], [660, 3, 1, "", "extract_sweeps"], [661, 3, 1, "", "get_azimuth"], [662, 3, 1, "", "get_elevation"], [663, 3, 1, "", "get_end"], [664, 3, 1, "", "get_field"], [665, 3, 1, "", "get_gate_area"], [666, 3, 1, "", "get_gate_lat_lon_alt"], [667, 3, 1, "", "get_gate_x_y_z"], [668, 3, 1, "", "get_nyquist_vel"], [669, 3, 1, "", "get_slice"], [670, 3, 1, "", "get_start"], [671, 3, 1, "", "get_start_end"], [672, 3, 1, "", "info"], [673, 3, 1, "", "init_gate_altitude"], [674, 3, 1, "", "init_gate_longitude_latitude"], [675, 3, 1, "", "init_gate_x_y_z"], [676, 3, 1, "", "init_rays_per_sweep"], [677, 3, 1, "", "iter_azimuth"], [678, 3, 1, "", "iter_elevation"], [679, 3, 1, "", "iter_end"], [680, 3, 1, "", "iter_field"], [681, 3, 1, "", "iter_slice"], [682, 3, 1, "", "iter_start"], [683, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[685, 3, 1, "", "add_field"], [686, 3, 1, "", "add_field_like"], [687, 3, 1, "", "add_filter"], [688, 3, 1, "", "check_field_exists"], [689, 3, 1, "", "extract_sweeps"], [690, 3, 1, "", "get_azimuth"], [691, 3, 1, "", "get_elevation"], [692, 3, 1, "", "get_end"], [693, 3, 1, "", "get_field"], [694, 3, 1, "", "get_gate_area"], [695, 3, 1, "", "get_gate_lat_lon_alt"], [696, 3, 1, "", "get_gate_x_y_z"], [697, 3, 1, "", "get_nyquist_vel"], [698, 3, 1, "", "get_slice"], [699, 3, 1, "", "get_start"], [700, 3, 1, "", "get_start_end"], [701, 3, 1, "", "info"], [702, 3, 1, "", "init_gate_altitude"], [703, 3, 1, "", "init_gate_longitude_latitude"], [704, 3, 1, "", "init_gate_x_y_z"], [705, 3, 1, "", "init_rays_per_sweep"], [706, 3, 1, "", "iter_azimuth"], [707, 3, 1, "", "iter_elevation"], [708, 3, 1, "", "iter_end"], [709, 3, 1, "", "iter_field"], [710, 3, 1, "", "iter_slice"], [711, 3, 1, "", "iter_start"], [712, 3, 1, "", "iter_start_end"]], "pyart.correct": [[723, 2, 1, "", "GateFilter"], [751, 0, 1, "", "calculate_attenuation"], [752, 0, 1, "", "calculate_attenuation_philinear"], [753, 0, 1, "", "calculate_attenuation_zphi"], [754, 0, 1, "", "compute_apparent_vpr"], [755, 0, 1, "", "compute_theoretical_vpr"], [756, 0, 1, "", "correct_bias"], [757, 0, 1, "", "correct_noise_rhohv"], [758, 0, 1, "", "correct_sys_phase"], [759, 0, 1, "", "correct_visibility"], [760, 0, 1, "", "correct_vpr"], [761, 0, 1, "", "correct_vpr_spatialised"], [762, 0, 1, "", "dealias_fourdd"], [763, 0, 1, "", "dealias_region_based"], [764, 0, 1, "", "dealias_unwrap_phase"], [765, 0, 1, "", "despeckle_field"], [766, 0, 1, "", "det_sys_phase_ray"], [767, 0, 1, "", "est_rhohv_rain"], [768, 0, 1, "", "est_zdr_precip"], [769, 0, 1, "", "est_zdr_snow"], [770, 0, 1, "", "find_objects"], [771, 0, 1, "", "gauss_fit"], [772, 0, 1, "", "get_mask_fzl"], [773, 0, 1, "", "get_sun_hits"], [774, 0, 1, "", "get_sun_hits_ivic"], [775, 0, 1, "", "get_sun_hits_psr"], [776, 0, 1, "", "moment_based_gate_filter"], [777, 0, 1, "", "phase_proc_lp"], [778, 0, 1, "", "phase_proc_lp_gf"], [779, 0, 1, "", "ptoa_to_sf"], [780, 0, 1, "", "retrieval_result"], [781, 0, 1, "", "scanning_losses"], [782, 0, 1, "", "selfconsistency_bias"], [783, 0, 1, "", "selfconsistency_bias2"], [784, 0, 1, "", "selfconsistency_kdp_phidp"], [785, 0, 1, "", "smooth_masked"], [786, 0, 1, "", "smooth_phidp_double_window"], [787, 0, 1, "", "smooth_phidp_single_window"], [788, 0, 1, "", "solar_flux_lookup"], [789, 0, 1, "", "sun_position_mfr"], [790, 0, 1, "", "sun_position_pysolar"], [791, 0, 1, "", "sun_power"], [792, 0, 1, "", "sun_retrieval"]], "pyart.correct.GateFilter": [[724, 3, 1, "", "copy"], [725, 3, 1, "", "exclude_above"], [726, 3, 1, "", "exclude_all"], [727, 3, 1, "", "exclude_below"], [728, 3, 1, "", "exclude_equal"], [729, 3, 1, "", "exclude_gates"], [730, 3, 1, "", "exclude_inside"], [731, 3, 1, "", "exclude_invalid"], [732, 3, 1, "", "exclude_masked"], [733, 3, 1, "", "exclude_none"], [734, 3, 1, "", "exclude_not_equal"], [735, 3, 1, "", "exclude_outside"], [736, 3, 1, "", "exclude_transition"], [737, 4, 1, "", "gate_excluded"], [738, 4, 1, "", "gate_included"], [739, 3, 1, "", "include_above"], [740, 3, 1, "", "include_all"], [741, 3, 1, "", "include_below"], [742, 3, 1, "", "include_equal"], [743, 3, 1, "", "include_gates"], [744, 3, 1, "", "include_inside"], [745, 3, 1, "", "include_none"], [746, 3, 1, "", "include_not_equal"], [747, 3, 1, "", "include_not_masked"], [748, 3, 1, "", "include_not_transition"], [749, 3, 1, "", "include_outside"], [750, 3, 1, "", "include_valid"]], "pyart.exceptions": [[147, 5, 1, "", "DeprecatedAttribute"], [148, 5, 1, "", "DeprecatedFunctionName"], [149, 5, 1, "", "MissingOptionalDependency"], [150, 0, 1, "", "_deprecated_alias"]], "pyart.filters": [[795, 2, 1, "", "GateFilter"], [823, 0, 1, "", "birds_gate_filter"], [824, 0, 1, "", "class_based_gate_filter"], [825, 0, 1, "", "iso0_based_gate_filter"], [826, 0, 1, "", "moment_and_texture_based_gate_filter"], [827, 0, 1, "", "moment_based_gate_filter"], [828, 0, 1, "", "snr_based_gate_filter"], [829, 0, 1, "", "temp_based_gate_filter"], [830, 0, 1, "", "visibility_based_gate_filter"]], "pyart.filters.GateFilter": [[796, 3, 1, "", "copy"], [797, 3, 1, "", "exclude_above"], [798, 3, 1, "", "exclude_all"], [799, 3, 1, "", "exclude_below"], [800, 3, 1, "", "exclude_equal"], [801, 3, 1, "", "exclude_gates"], [802, 3, 1, "", "exclude_inside"], [803, 3, 1, "", "exclude_invalid"], [804, 3, 1, "", "exclude_masked"], [805, 3, 1, "", "exclude_none"], [806, 3, 1, "", "exclude_not_equal"], [807, 3, 1, "", "exclude_outside"], [808, 3, 1, "", "exclude_transition"], [809, 4, 1, "", "gate_excluded"], [810, 4, 1, "", "gate_included"], [811, 3, 1, "", "include_above"], [812, 3, 1, "", "include_all"], [813, 3, 1, "", "include_below"], [814, 3, 1, "", "include_equal"], [815, 3, 1, "", "include_gates"], [816, 3, 1, "", "include_inside"], [817, 3, 1, "", "include_none"], [818, 3, 1, "", "include_not_equal"], [819, 3, 1, "", "include_not_masked"], [820, 3, 1, "", "include_not_transition"], [821, 3, 1, "", "include_outside"], [822, 3, 1, "", "include_valid"]], "pyart.graph": [[832, 2, 1, "", "AirborneRadarDisplay"], [866, 2, 1, "", "GridMapDisplay"], [885, 2, 1, "", "GridMapDisplayBasemap"], [899, 2, 1, "", "RadarDisplay"], [932, 2, 1, "", "RadarMapDisplay"], [969, 2, 1, "", "RadarMapDisplayBasemap"], [1006, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[833, 3, 1, "", "generate_az_rhi_title"], [834, 3, 1, "", "generate_filename"], [835, 3, 1, "", "generate_ray_title"], [836, 3, 1, "", "generate_title"], [837, 3, 1, "", "generate_vpt_title"], [838, 3, 1, "", "generate_xsection_title"], [839, 3, 1, "", "label_xaxis_r"], [840, 3, 1, "", "label_xaxis_rays"], [841, 3, 1, "", "label_xaxis_time"], [842, 3, 1, "", "label_xaxis_x"], [843, 3, 1, "", "label_xaxis_xsection"], [844, 3, 1, "", "label_yaxis_field"], [845, 3, 1, "", "label_yaxis_xsection"], [846, 3, 1, "", "label_yaxis_y"], [847, 3, 1, "", "label_yaxis_z"], [848, 3, 1, "", "plot"], [849, 3, 1, "", "plot_azimuth_to_rhi"], [850, 3, 1, "", "plot_colorbar"], [851, 3, 1, "", "plot_cr_raster"], [852, 3, 1, "", "plot_cross_hair"], [853, 3, 1, "", "plot_grid_lines"], [854, 3, 1, "", "plot_label"], [855, 3, 1, "", "plot_labels"], [856, 3, 1, "", "plot_ppi"], [857, 3, 1, "", "plot_range_ring"], [858, 3, 1, "", "plot_range_rings"], [859, 3, 1, "", "plot_ray"], [860, 3, 1, "", "plot_rhi"], [861, 3, 1, "", "plot_sweep_grid"], [862, 3, 1, "", "plot_vpt"], [863, 3, 1, "", "plot_xsection"], [864, 3, 1, "", "set_aspect_ratio"], [865, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[867, 3, 1, "", "cartopy_coastlines"], [868, 3, 1, "", "cartopy_political_boundaries"], [869, 3, 1, "", "cartopy_states"], [870, 3, 1, "", "generate_filename"], [871, 3, 1, "", "generate_grid_title"], [872, 3, 1, "", "generate_latitudinal_level_title"], [873, 3, 1, "", "generate_longitudinal_level_title"], [874, 3, 1, "", "plot_colorbar"], [875, 3, 1, "", "plot_cross_section"], [876, 3, 1, "", "plot_cross_section_level"], [877, 3, 1, "", "plot_crosshairs"], [878, 3, 1, "", "plot_grid"], [879, 3, 1, "", "plot_grid_contour"], [880, 3, 1, "", "plot_grid_raw"], [881, 3, 1, "", "plot_latitude_slice"], [882, 3, 1, "", "plot_latitudinal_level"], [883, 3, 1, "", "plot_longitude_slice"], [884, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[886, 3, 1, "", "generate_filename"], [887, 3, 1, "", "generate_grid_title"], [888, 3, 1, "", "generate_latitudinal_level_title"], [889, 3, 1, "", "generate_longitudinal_level_title"], [890, 3, 1, "", "get_basemap"], [891, 3, 1, "", "plot_basemap"], [892, 3, 1, "", "plot_colorbar"], [893, 3, 1, "", "plot_crosshairs"], [894, 3, 1, "", "plot_grid"], [895, 3, 1, "", "plot_latitude_slice"], [896, 3, 1, "", "plot_latitudinal_level"], [897, 3, 1, "", "plot_longitude_slice"], [898, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[900, 3, 1, "", "generate_az_rhi_title"], [901, 3, 1, "", "generate_filename"], [902, 3, 1, "", "generate_ray_title"], [903, 3, 1, "", "generate_title"], [904, 3, 1, "", "generate_vpt_title"], [905, 3, 1, "", "generate_xsection_title"], [906, 3, 1, "", "label_xaxis_r"], [907, 3, 1, "", "label_xaxis_rays"], [908, 3, 1, "", "label_xaxis_time"], [909, 3, 1, "", "label_xaxis_x"], [910, 3, 1, "", "label_xaxis_xsection"], [911, 3, 1, "", "label_yaxis_field"], [912, 3, 1, "", "label_yaxis_xsection"], [913, 3, 1, "", "label_yaxis_y"], [914, 3, 1, "", "label_yaxis_z"], [915, 3, 1, "", "plot"], [916, 3, 1, "", "plot_azimuth_to_rhi"], [917, 3, 1, "", "plot_colorbar"], [918, 3, 1, "", "plot_cr_raster"], [919, 3, 1, "", "plot_cross_hair"], [920, 3, 1, "", "plot_grid_lines"], [921, 3, 1, "", "plot_label"], [922, 3, 1, "", "plot_labels"], [923, 3, 1, "", "plot_ppi"], [924, 3, 1, "", "plot_range_ring"], [925, 3, 1, "", "plot_range_rings"], [926, 3, 1, "", "plot_ray"], [927, 3, 1, "", "plot_rhi"], [928, 3, 1, "", "plot_vpt"], [929, 3, 1, "", "plot_xsection"], [930, 3, 1, "", "set_aspect_ratio"], [931, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[933, 3, 1, "", "generate_az_rhi_title"], [934, 3, 1, "", "generate_filename"], [935, 3, 1, "", "generate_ray_title"], [936, 3, 1, "", "generate_title"], [937, 3, 1, "", "generate_vpt_title"], [938, 3, 1, "", "generate_xsection_title"], [939, 3, 1, "", "label_xaxis_r"], [940, 3, 1, "", "label_xaxis_rays"], [941, 3, 1, "", "label_xaxis_time"], [942, 3, 1, "", "label_xaxis_x"], [943, 3, 1, "", "label_xaxis_xsection"], [944, 3, 1, "", "label_yaxis_field"], [945, 3, 1, "", "label_yaxis_xsection"], [946, 3, 1, "", "label_yaxis_y"], [947, 3, 1, "", "label_yaxis_z"], [948, 3, 1, "", "plot"], [949, 3, 1, "", "plot_azimuth_to_rhi"], [950, 3, 1, "", "plot_colorbar"], [951, 3, 1, "", "plot_cr_raster"], [952, 3, 1, "", "plot_cross_hair"], [953, 3, 1, "", "plot_grid_lines"], [954, 3, 1, "", "plot_label"], [955, 3, 1, "", "plot_labels"], [956, 3, 1, "", "plot_line_geo"], [957, 3, 1, "", "plot_line_xy"], [958, 3, 1, "", "plot_point"], [959, 3, 1, "", "plot_ppi"], [960, 3, 1, "", "plot_ppi_map"], [961, 3, 1, "", "plot_range_ring"], [962, 3, 1, "", "plot_range_rings"], [963, 3, 1, "", "plot_ray"], [964, 3, 1, "", "plot_rhi"], [965, 3, 1, "", "plot_vpt"], [966, 3, 1, "", "plot_xsection"], [967, 3, 1, "", "set_aspect_ratio"], [968, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[970, 3, 1, "", "generate_az_rhi_title"], [971, 3, 1, "", "generate_filename"], [972, 3, 1, "", "generate_ray_title"], [973, 3, 1, "", "generate_title"], [974, 3, 1, "", "generate_vpt_title"], [975, 3, 1, "", "generate_xsection_title"], [976, 3, 1, "", "label_xaxis_r"], [977, 3, 1, "", "label_xaxis_rays"], [978, 3, 1, "", "label_xaxis_time"], [979, 3, 1, "", "label_xaxis_x"], [980, 3, 1, "", "label_xaxis_xsection"], [981, 3, 1, "", "label_yaxis_field"], [982, 3, 1, "", "label_yaxis_xsection"], [983, 3, 1, "", "label_yaxis_y"], [984, 3, 1, "", "label_yaxis_z"], [985, 3, 1, "", "plot"], [986, 3, 1, "", "plot_azimuth_to_rhi"], [987, 3, 1, "", "plot_colorbar"], [988, 3, 1, "", "plot_cr_raster"], [989, 3, 1, "", "plot_cross_hair"], [990, 3, 1, "", "plot_grid_lines"], [991, 3, 1, "", "plot_label"], [992, 3, 1, "", "plot_labels"], [993, 3, 1, "", "plot_line_geo"], [994, 3, 1, "", "plot_line_xy"], [995, 3, 1, "", "plot_point"], [996, 3, 1, "", "plot_ppi"], [997, 3, 1, "", "plot_ppi_map"], [998, 3, 1, "", "plot_range_ring"], [999, 3, 1, "", "plot_range_rings"], [1000, 3, 1, "", "plot_ray"], [1001, 3, 1, "", "plot_rhi"], [1002, 3, 1, "", "plot_vpt"], [1003, 3, 1, "", "plot_xsection"], [1004, 3, 1, "", "set_aspect_ratio"], [1005, 3, 1, "", "set_limits"]], "pyart.io": [[1008, 0, 1, "", "make_time_unit_str"], [1009, 0, 1, "", "prepare_for_read"], [1010, 0, 1, "", "read"], [1011, 0, 1, "", "read_arm_sonde"], [1012, 0, 1, "", "read_arm_sonde_vap"], [1013, 0, 1, "", "read_cfradial"], [1014, 0, 1, "", "read_cfradial2"], [1015, 0, 1, "", "read_chl"], [1016, 0, 1, "", "read_grid"], [1017, 0, 1, "", "read_grid_mdv"], [1018, 0, 1, "", "read_mdv"], [1019, 0, 1, "", "read_nexrad_archive"], [1020, 0, 1, "", "read_nexrad_cdm"], [1021, 0, 1, "", "read_nexrad_level3"], [1022, 0, 1, "", "read_rsl"], [1023, 0, 1, "", "read_sigmet"], [1024, 0, 1, "", "read_uf"], [1025, 0, 1, "", "write_cfradial"], [1026, 0, 1, "", "write_grid"], [1027, 0, 1, "", "write_grid_geotiff"], [1028, 0, 1, "", "write_grid_mdv"], [1029, 0, 1, "", "write_uf"]], "pyart.lazydict": [[1031, 2, 1, "", "LazyLoadDict"], [1044, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[384, 3, 1, "", "__contains__"], [385, 3, 1, "", "__delattr__"], [386, 3, 1, "", "__delitem__"], [387, 3, 1, "", "__dir__"], [388, 3, 1, "", "__eq__"], [389, 3, 1, "", "__format__"], [390, 3, 1, "", "__ge__"], [391, 3, 1, "", "__getattribute__"], [392, 3, 1, "", "__getitem__"], [393, 3, 1, "", "__getstate__"], [394, 3, 1, "", "__gt__"], [395, 3, 1, "", "__init__"], [396, 3, 1, "", "__init_subclass__"], [397, 3, 1, "", "__iter__"], [398, 3, 1, "", "__le__"], [399, 3, 1, "", "__len__"], [400, 3, 1, "", "__lt__"], [401, 3, 1, "", "__ne__"], [402, 3, 1, "", "__new__"], [403, 3, 1, "", "__reduce__"], [404, 3, 1, "", "__reduce_ex__"], [405, 3, 1, "", "__repr__"], [406, 3, 1, "", "__setattr__"], [407, 3, 1, "", "__setitem__"], [408, 3, 1, "", "__sizeof__"], [409, 3, 1, "", "__str__"], [410, 3, 1, "", "__subclasshook__"], [1032, 3, 1, "", "clear"], [1033, 3, 1, "", "copy"], [1034, 3, 1, "", "get"], [1035, 3, 1, "", "has_key"], [1036, 3, 1, "", "items"], [1037, 3, 1, "", "keys"], [1038, 3, 1, "", "pop"], [1039, 3, 1, "", "popitem"], [1040, 3, 1, "", "set_lazy"], [1041, 3, 1, "", "setdefault"], [1042, 3, 1, "", "update"], [1043, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[1045, 3, 1, "", "clear"], [1046, 3, 1, "", "get"], [1047, 3, 1, "", "items"], [1048, 3, 1, "", "keys"], [1049, 3, 1, "", "pop"], [1050, 3, 1, "", "popitem"], [1051, 3, 1, "", "setdefault"], [1052, 3, 1, "", "update"], [1053, 3, 1, "", "values"]], "pyart.map": [[1055, 2, 1, "", "GateMapper"], [1059, 0, 1, "", "example_roi_func_constant"], [1060, 0, 1, "", "example_roi_func_dist"], [1061, 0, 1, "", "example_roi_func_dist_beam"], [1062, 0, 1, "", "grid_from_radars"], [1063, 0, 1, "", "grid_ppi_sweeps"], [1064, 0, 1, "", "grid_rhi_sweeps"], [1065, 0, 1, "", "map_gates_to_grid"], [1066, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[1056, 4, 1, "", "distance_tolerance"], [1057, 3, 1, "", "mapped_radar"], [1058, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[423, 0, 1, "", "_destandardize"], [424, 0, 1, "", "_get_res_vol_sides"], [1068, 0, 1, "", "atmospheric_gas_att"], [1069, 0, 1, "", "calculate_snr_from_reflectivity"], [1070, 0, 1, "", "calculate_velocity_texture"], [1071, 0, 1, "", "composite_reflectivity"], [1072, 0, 1, "", "compute_Doppler_velocity"], [1073, 0, 1, "", "compute_Doppler_velocity_iq"], [1074, 0, 1, "", "compute_Doppler_width"], [1075, 0, 1, "", "compute_Doppler_width_iq"], [1076, 0, 1, "", "compute_apparent_profile"], [1077, 0, 1, "", "compute_bird_density"], [1078, 0, 1, "", "compute_ccor"], [1079, 0, 1, "", "compute_cdr"], [1080, 0, 1, "", "compute_centroids"], [1081, 0, 1, "", "compute_differential_phase"], [1082, 0, 1, "", "compute_differential_phase_iq"], [1083, 0, 1, "", "compute_differential_reflectivity"], [1084, 0, 1, "", "compute_differential_reflectivity_iq"], [1085, 0, 1, "", "compute_evp"], [1086, 0, 1, "", "compute_iq"], [1087, 0, 1, "", "compute_l"], [1088, 0, 1, "", "compute_mean_phase_iq"], [1089, 0, 1, "", "compute_noise_power"], [1090, 0, 1, "", "compute_noisedBZ"], [1091, 0, 1, "", "compute_pol_variables"], [1092, 0, 1, "", "compute_pol_variables_iq"], [1093, 0, 1, "", "compute_qvp"], [1094, 0, 1, "", "compute_radial_noise_hs"], [1095, 0, 1, "", "compute_radial_noise_ivic"], [1096, 0, 1, "", "compute_rcs"], [1097, 0, 1, "", "compute_rcs_from_pr"], [1098, 0, 1, "", "compute_refl_from_zdr"], [1099, 0, 1, "", "compute_reflectivity"], [1100, 0, 1, "", "compute_reflectivity_iq"], [1101, 0, 1, "", "compute_rhohv"], [1102, 0, 1, "", "compute_rhohv_iq"], [1103, 0, 1, "", "compute_rqvp"], [1104, 0, 1, "", "compute_signal_power"], [1105, 0, 1, "", "compute_snr"], [1106, 0, 1, "", "compute_spectra"], [1107, 0, 1, "", "compute_spectral_differential_phase"], [1108, 0, 1, "", "compute_spectral_differential_reflectivity"], [1109, 0, 1, "", "compute_spectral_noise"], [1110, 0, 1, "", "compute_spectral_phase"], [1111, 0, 1, "", "compute_spectral_power"], [1112, 0, 1, "", "compute_spectral_reflectivity"], [1113, 0, 1, "", "compute_spectral_rhohv"], [1114, 0, 1, "", "compute_st1_iq"], [1115, 0, 1, "", "compute_st2_iq"], [1116, 0, 1, "", "compute_svp"], [1117, 0, 1, "", "compute_ts_along_coord"], [1118, 0, 1, "", "compute_vol_refl"], [1119, 0, 1, "", "compute_vp"], [1120, 0, 1, "", "compute_wbn_iq"], [1121, 0, 1, "", "conv_strat_raut"], [1122, 0, 1, "", "conv_strat_yuter"], [1123, 0, 1, "", "data_for_centroids"], [1124, 0, 1, "", "dealias_spectra"], [1125, 0, 1, "", "detect_ml"], [1126, 0, 1, "", "determine_medoids"], [1127, 0, 1, "", "est_rain_rate_a"], [1128, 0, 1, "", "est_rain_rate_hydro"], [1129, 0, 1, "", "est_rain_rate_kdp"], [1130, 0, 1, "", "est_rain_rate_z"], [1131, 0, 1, "", "est_rain_rate_za"], [1132, 0, 1, "", "est_rain_rate_zkdp"], [1133, 0, 1, "", "est_rain_rate_zpoly"], [1134, 0, 1, "", "est_vertical_windshear"], [1135, 0, 1, "", "est_vertical_windshear_lidar"], [1136, 0, 1, "", "est_wind_profile"], [1137, 0, 1, "", "est_wind_vel"], [1138, 0, 1, "", "feature_detection"], [1139, 0, 1, "", "fetch_radar_time_profile"], [1140, 0, 1, "", "gecsx"], [1141, 0, 1, "", "get_coeff_attg"], [1142, 0, 1, "", "get_freq_band"], [1143, 0, 1, "", "get_iso0_val"], [1144, 0, 1, "", "get_ml_rng_limits"], [1145, 0, 1, "", "grid_displacement_pc"], [1146, 0, 1, "", "grid_shift"], [1147, 0, 1, "", "hydroclass_semisupervised"], [1148, 0, 1, "", "kdp_leastsquare_double_window"], [1149, 0, 1, "", "kdp_leastsquare_single_window"], [1150, 0, 1, "", "kdp_maesaka"], [1151, 0, 1, "", "kdp_schneebeli"], [1152, 0, 1, "", "kdp_vulpiani"], [1153, 0, 1, "", "map_profile_to_gates"], [1154, 0, 1, "", "melting_layer_giangrande"], [1155, 0, 1, "", "melting_layer_hydroclass"], [1156, 0, 1, "", "melting_layer_mf"], [1157, 0, 1, "", "quasi_vertical_profile"], [1158, 0, 1, "", "select_samples"], [1159, 0, 1, "", "steiner_conv_strat"], [1160, 0, 1, "", "synthetic_obs_distribution"], [1161, 0, 1, "", "texture_of_complex_phase"], [1162, 0, 1, "", "vad_browning"], [1163, 0, 1, "", "vad_michelson"]], "pyart.testing": [[1165, 2, 1, "", "Grid"], [1175, 2, 1, "", "InTemporaryDirectory"], [1177, 2, 1, "", "Radar"], [1206, 2, 1, "", "RadarSpectra"], [1235, 0, 1, "", "get_metadata"], [1236, 0, 1, "", "get_test_data"], [1237, 0, 1, "", "make_empty_grid"], [1238, 0, 1, "", "make_empty_ppi_radar"], [1239, 0, 1, "", "make_empty_rhi_radar"], [1240, 0, 1, "", "make_empty_spectra_radar"], [1241, 0, 1, "", "make_gaussian_storm_grid"], [1242, 0, 1, "", "make_normal_storm"], [1243, 0, 1, "", "make_single_ray_radar"], [1244, 0, 1, "", "make_storm_grid"], [1245, 0, 1, "", "make_target_grid"], [1246, 0, 1, "", "make_target_radar"], [1247, 0, 1, "", "make_target_spectra_radar"], [1248, 0, 1, "", "make_velocity_aliased_radar"], [1249, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[1166, 3, 1, "", "add_field"], [1167, 3, 1, "", "get_point_longitude_latitude"], [1168, 3, 1, "", "get_projparams"], [1169, 3, 1, "", "init_point_altitude"], [1170, 3, 1, "", "init_point_longitude_latitude"], [1171, 3, 1, "", "init_point_x_y_z"], [1172, 4, 1, "", "projection_proj"], [1173, 3, 1, "", "to_xarray"], [1174, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[1176, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[1178, 3, 1, "", "add_field"], [1179, 3, 1, "", "add_field_like"], [1180, 3, 1, "", "add_filter"], [1181, 3, 1, "", "check_field_exists"], [1182, 3, 1, "", "extract_sweeps"], [1183, 3, 1, "", "get_azimuth"], [1184, 3, 1, "", "get_elevation"], [1185, 3, 1, "", "get_end"], [1186, 3, 1, "", "get_field"], [1187, 3, 1, "", "get_gate_area"], [1188, 3, 1, "", "get_gate_lat_lon_alt"], [1189, 3, 1, "", "get_gate_x_y_z"], [1190, 3, 1, "", "get_nyquist_vel"], [1191, 3, 1, "", "get_slice"], [1192, 3, 1, "", "get_start"], [1193, 3, 1, "", "get_start_end"], [1194, 3, 1, "", "info"], [1195, 3, 1, "", "init_gate_altitude"], [1196, 3, 1, "", "init_gate_longitude_latitude"], [1197, 3, 1, "", "init_gate_x_y_z"], [1198, 3, 1, "", "init_rays_per_sweep"], [1199, 3, 1, "", "iter_azimuth"], [1200, 3, 1, "", "iter_elevation"], [1201, 3, 1, "", "iter_end"], [1202, 3, 1, "", "iter_field"], [1203, 3, 1, "", "iter_slice"], [1204, 3, 1, "", "iter_start"], [1205, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[1207, 3, 1, "", "add_field"], [1208, 3, 1, "", "add_field_like"], [1209, 3, 1, "", "add_filter"], [1210, 3, 1, "", "check_field_exists"], [1211, 3, 1, "", "extract_sweeps"], [1212, 3, 1, "", "get_azimuth"], [1213, 3, 1, "", "get_elevation"], [1214, 3, 1, "", "get_end"], [1215, 3, 1, "", "get_field"], [1216, 3, 1, "", "get_gate_area"], [1217, 3, 1, "", "get_gate_lat_lon_alt"], [1218, 3, 1, "", "get_gate_x_y_z"], [1219, 3, 1, "", "get_nyquist_vel"], [1220, 3, 1, "", "get_slice"], [1221, 3, 1, "", "get_start"], [1222, 3, 1, "", "get_start_end"], [1223, 3, 1, "", "info"], [1224, 3, 1, "", "init_gate_altitude"], [1225, 3, 1, "", "init_gate_longitude_latitude"], [1226, 3, 1, "", "init_gate_x_y_z"], [1227, 3, 1, "", "init_rays_per_sweep"], [1228, 3, 1, "", "iter_azimuth"], [1229, 3, 1, "", "iter_elevation"], [1230, 3, 1, "", "iter_end"], [1231, 3, 1, "", "iter_field"], [1232, 3, 1, "", "iter_slice"], [1233, 3, 1, "", "iter_start"], [1234, 3, 1, "", "iter_start_end"]], "pyart.util": [[520, 6, 1, "", "EPOCH_UNITS"], [1251, 0, 1, "", "angular_mean"], [1252, 0, 1, "", "angular_mean_deg"], [1253, 0, 1, "", "angular_std"], [1254, 0, 1, "", "angular_std_deg"], [1255, 0, 1, "", "angular_texture_2d"], [1256, 0, 1, "", "colocated_gates"], [1257, 0, 1, "", "colocated_gates2"], [1258, 0, 1, "", "compute_azimuthal_average"], [1259, 0, 1, "", "compute_corr"], [1260, 0, 1, "", "compute_directional_stats"], [1261, 0, 1, "", "compute_mse"], [1262, 0, 1, "", "compute_nse"], [1263, 0, 1, "", "cross_section_ppi"], [1264, 0, 1, "", "cross_section_rhi"], [1265, 0, 1, "", "datetime_from_dataset"], [1266, 0, 1, "", "datetime_from_grid"], [1267, 0, 1, "", "datetime_from_radar"], [1268, 0, 1, "", "datetimes_from_dataset"], [1269, 0, 1, "", "datetimes_from_radar"], [1270, 0, 1, "", "determine_sweeps"], [1271, 0, 1, "", "estimate_noise_hs74"], [1272, 0, 1, "", "estimate_noise_ivic13"], [1273, 0, 1, "", "find_neighbour_gates"], [1274, 0, 1, "", "for_azimuth"], [1275, 0, 1, "", "get_column_rays"], [1276, 0, 1, "", "get_field_location"], [1277, 0, 1, "", "get_ivic_flat_reg_var_max"], [1278, 0, 1, "", "get_ivic_pct"], [1279, 0, 1, "", "get_ivic_snr_thr"], [1280, 0, 1, "", "get_target_elevations"], [1281, 0, 1, "", "grid_texture_2d"], [1282, 0, 1, "", "image_mute_radar"], [1283, 0, 1, "", "interpol_spectra"], [1284, 0, 1, "", "intersection"], [1285, 0, 1, "", "interval_mean"], [1286, 0, 1, "", "interval_std"], [1287, 0, 1, "", "is_vpt"], [1288, 0, 1, "", "ivic_flat_reg_var_max_table"], [1289, 0, 1, "", "ivic_flat_reg_wind_len_table"], [1290, 0, 1, "", "ivic_pct_table"], [1291, 0, 1, "", "ivic_snr_thr_table"], [1292, 0, 1, "", "join_radar"], [1293, 0, 1, "", "join_spectra"], [1294, 0, 1, "", "ma_broadcast_to"], [1295, 0, 1, "", "mean_of_two_angles"], [1296, 0, 1, "", "mean_of_two_angles_deg"], [1297, 0, 1, "", "radar_from_spectra"], [1298, 0, 1, "", "rolling_window"], [1299, 0, 1, "", "simulated_vel_from_profile"], [1300, 0, 1, "", "sphere_distance"], [1301, 0, 1, "", "subset_radar"], [1302, 0, 1, "", "subset_radar_spectra"], [1303, 0, 1, "", "texture"], [1304, 0, 1, "", "texture_along_ray"], [1305, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:data"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305], "aux_io": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624], "extract_sweeps_skyecho": [0, 579], "get_sweep_time_coverag": [1, 581], "read_bin": [2, 582], "read_bin_mf": [3, 583], "read_cartesian_metranet": [4, 584], "read_cf1": [5, 585], "read_cf1_cartesian": [6, 586], "read_cf1_cartesian_mf": [7, 587], "read_d3r_gcpex_nc": [8, 588], "read_dat_mf": [9, 589], "read_gam": [10, 593], "read_gif": [11, 594], "read_grib": [12, 595], "read_hpl": [13, 596], "read_iq": [14, 597], "read_kazr": [15, 598], "read_metranet": [16, 601], "read_noxp_iphex_nc": [17, 602], "read_odim_grid_h5": [18, 603], "read_odim_h5": [19, 604], "read_odim_vp_h5": [20, 605], "read_pattern": [21, 606], "read_png": [22, 607], "read_radx": [23, 613], "read_rainbow_psr": [24, 614], "read_rainbow_psr_spectra": [25, 615], "read_rainbow_wrl": [26, 616], "read_skyecho": [27, 618], "read_spectra": [28, 619], "read_swissbirdradar_spectra": [29, 620], "write_odim_grid_h5": [30, 621], "write_odim_h5": [31, 622], "write_sinarame_cfradi": [32, 623], "write_spectra": [33, 624], "bridg": [34, 625, 626], "texture_of_complex_phas": [34, 626, 1161], "config": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "filemetadata": [35, 36, 37, 38, 628, 629, 630, 631], "__call__": [36, 629], "get_field_nam": [37, 42, 630, 636], "get_metadata": [38, 44, 631, 638, 1235], "get_field_colormap": [39, 633], "get_field_limit": [40, 634], "get_field_map": [41, 635], "get_fillvalu": [43, 637], "load_config": [45, 639], "core": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721], "grid": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 831, 1007, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1319, 1320, 1324, 1355], "add_field": [47, 61, 90, 642, 656, 685, 1166, 1178, 1207], "get_point_longitude_latitud": [48, 643, 1167], "get_projparam": [49, 644, 1168], "init_point_altitud": [50, 645, 1169], "init_point_longitude_latitud": [51, 646, 1170], "init_point_x_y_z": [52, 647, 1171], "projection_proj": [53, 648, 1172], "to_xarrai": [54, 649, 1173], "write": [55, 577, 650, 1007, 1174], "horizontalwindprofil": [56, 57, 58, 59, 651, 652, 653, 654], "from_u_and_v": [57, 652], "u_wind": [58, 653], "v_wind": [59, 654], "radar": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 577, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 722, 794, 831, 1007, 1067, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1250, 1318, 1319, 1320, 1342, 1352, 1360, 1363], "add_field_lik": [62, 91, 657, 686, 1179, 1208], "add_filt": [63, 92, 658, 687, 1180, 1209], "check_field_exist": [64, 93, 659, 688, 1181, 1210], "extract_sweep": [65, 94, 660, 689, 1182, 1211], "get_azimuth": [66, 95, 661, 690, 1183, 1212], "get_elev": [67, 96, 662, 691, 1184, 1213], "get_end": [68, 97, 663, 692, 1185, 1214], "get_field": [69, 98, 664, 693, 1186, 1215], "get_gate_area": [70, 99, 665, 694, 1187, 1216], "get_gate_lat_lon_alt": [71, 100, 666, 695, 1188, 1217], "get_gate_x_y_z": [72, 101, 667, 696, 1189, 1218], "get_nyquist_vel": [73, 102, 668, 697, 1190, 1219], "get_slic": [74, 103, 669, 698, 1191, 1220], "get_start": [75, 104, 670, 699, 1192, 1221], "get_start_end": [76, 105, 671, 700, 1193, 1222], "info": [77, 106, 672, 701, 1194, 1223], "init_gate_altitud": [78, 107, 673, 702, 1195, 1224], "init_gate_longitude_latitud": [79, 108, 674, 703, 1196, 1225], "init_gate_x_y_z": [80, 109, 675, 704, 1197, 1226], "init_rays_per_sweep": [81, 110, 676, 705, 1198, 1227], "iter_azimuth": [82, 111, 677, 706, 1199, 1228], "iter_elev": [83, 112, 678, 707, 1200, 1229], "iter_end": [84, 113, 679, 708, 1201, 1230], "iter_field": [85, 114, 680, 709, 1202, 1231], "iter_slic": [86, 115, 681, 710, 1203, 1232], "iter_start": [87, 116, 682, 711, 1204, 1233], "iter_start_end": [88, 117, 683, 712, 1205, 1234], "radarspectra": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234], "antenna_to_cartesian": [118, 713], "antenna_vectors_to_cartesian": [119, 714], "cartesian_to_antenna": [120, 715], "cartesian_to_geograph": [121, 716], "cartesian_to_geographic_aeqd": [122, 717], "cartesian_vectors_to_geograph": [123, 718], "geographic_to_cartesian": [124, 719], "geographic_to_cartesian_aeqd": [125, 720], "wgs84_to_swissch1903": [126, 721], "test": [126, 721, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1363], "exampl": [126, 721, 1308, 1312, 1313, 1317, 1322, 1341, 1344], "correct": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 1308, 1309, 1312, 1359], "compute_apparent_vpr": [127, 754], "compute_theoretical_vpr": [128, 755], "correct_sys_phas": [129, 758], "dealias_fourdd": [130, 762], "dealias_region_bas": [131, 763], "dealias_unwrap_phas": [132, 764], "det_sys_phase_rai": [133, 766], "find_object": [134, 770], "get_mask_fzl": [135, 772], "phase_proc_lp": [136, 777], "phase_proc_lp_gf": [137, 778], "ptoa_to_sf": [138, 779], "scanning_loss": [139, 781], "smooth_mask": [140, 785], "smooth_phidp_double_window": [141, 786], "smooth_phidp_single_window": [142, 787], "solar_flux_lookup": [143, 788], "sun_position_mfr": [144, 789], "sun_position_pysolar": [145, 790], "sun_pow": [146, 791], "except": [147, 148, 149, 150, 793], "deprecatedattribut": 147, "deprecatedfunctionnam": 148, "missingoptionaldepend": 149, "_deprecated_alia": 150, "filter": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 1359], "gatefilt": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 1356], "copi": [152, 412, 724, 796, 1033], "exclude_abov": [153, 725, 797], "exclude_al": [154, 726, 798], "exclude_below": [155, 727, 799], "exclude_equ": [156, 728, 800], "exclude_g": [157, 729, 801], "exclude_insid": [158, 730, 802], "exclude_invalid": [159, 731, 803], "exclude_mask": [160, 732, 804], "exclude_non": [161, 733, 805], "exclude_not_equ": [162, 734, 806], "exclude_outsid": [163, 735, 807], "exclude_transit": [164, 736, 808], "gate_exclud": [165, 737, 809], "gate_includ": [166, 738, 810], "include_abov": [167, 739, 811], "include_al": [168, 740, 812], "include_below": [169, 741, 813], "include_equ": [170, 742, 814], "include_g": [171, 743, 815], "include_insid": [172, 744, 816], "include_non": [173, 745, 817], "include_not_equ": [174, 746, 818], "include_not_mask": [175, 747, 819], "include_not_transit": [176, 748, 820], "include_outsid": [177, 749, 821], "include_valid": [178, 750, 822], "birds_gate_filt": [179, 823], "class_based_gate_filt": [180, 824], "iso0_based_gate_filt": [181, 825], "moment_and_texture_based_gate_filt": [182, 826], "moment_based_gate_filt": [183, 776, 827], "snr_based_gate_filt": [184, 828], "temp_based_gate_filt": [185, 829], "visibility_based_gate_filt": [186, 830], "graph": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006], "airborneradardisplai": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "generate_az_rhi_titl": [188, 255, 288, 325, 833, 900, 933, 970], "generate_filenam": [189, 225, 241, 256, 289, 326, 834, 870, 886, 901, 934, 971], "generate_ray_titl": [190, 257, 290, 327, 835, 902, 935, 972], "generate_titl": [191, 258, 291, 328, 836, 903, 936, 973], "generate_vpt_titl": [192, 259, 292, 329, 837, 904, 937, 974], "generate_xsection_titl": [193, 260, 293, 330, 838, 905, 938, 975], "label_xaxis_r": [194, 261, 294, 331, 839, 906, 939, 976], "label_xaxis_rai": [195, 262, 295, 332, 840, 907, 940, 977], "label_xaxis_tim": [196, 263, 296, 333, 841, 908, 941, 978], "label_xaxis_x": [197, 264, 297, 334, 842, 909, 942, 979], "label_xaxis_xsect": [198, 265, 298, 335, 843, 910, 943, 980], "label_yaxis_field": [199, 266, 299, 336, 844, 911, 944, 981], "label_yaxis_xsect": [200, 267, 300, 337, 845, 912, 945, 982], "label_yaxis_i": [201, 268, 301, 338, 846, 913, 946, 983], "label_yaxis_z": [202, 269, 302, 339, 847, 914, 947, 984], "plot": [203, 270, 303, 340, 831, 848, 915, 948, 985, 1312, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1343, 1345, 1346, 1358], "plot_azimuth_to_rhi": [204, 271, 304, 341, 849, 916, 949, 986], "plot_colorbar": [205, 229, 247, 272, 305, 342, 850, 874, 892, 917, 950, 987], "plot_cr_rast": [206, 273, 306, 343, 851, 918, 951, 988], "plot_cross_hair": [207, 274, 307, 344, 852, 919, 952, 989], "plot_grid_lin": [208, 275, 308, 345, 853, 920, 953, 990], "plot_label": [209, 210, 276, 277, 309, 310, 346, 347, 854, 855, 921, 922, 954, 955, 991, 992], "plot_ppi": [211, 278, 314, 351, 856, 923, 959, 996], "plot_range_r": [212, 213, 279, 280, 316, 317, 353, 354, 857, 858, 924, 925, 961, 962, 998, 999], "plot_rai": [214, 281, 318, 355, 859, 926, 963, 1000], "plot_rhi": [215, 282, 319, 356, 860, 927, 964, 1001], "plot_sweep_grid": [216, 861], "plot_vpt": [217, 283, 320, 357, 862, 928, 965, 1002], "plot_xsect": [218, 284, 321, 358, 863, 929, 966, 1003], "set_aspect_ratio": [219, 285, 322, 359, 864, 930, 967, 1004], "set_limit": [220, 286, 323, 360, 865, 931, 968, 1005], "gridmapdisplai": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 1338], "cartopy_coastlin": [222, 867], "cartopy_political_boundari": [223, 868], "cartopy_st": [224, 869], "generate_grid_titl": [226, 242, 871, 887], "generate_latitudinal_level_titl": [227, 243, 872, 888], "generate_longitudinal_level_titl": [228, 244, 873, 889], "plot_cross_sect": [230, 875], "plot_cross_section_level": [231, 876], "plot_crosshair": [232, 248, 877, 893], "plot_grid": [233, 249, 878, 894], "plot_grid_contour": [234, 879], "plot_grid_raw": [235, 880], "plot_latitude_slic": [236, 250, 881, 895], "plot_latitudinal_level": [237, 251, 882, 896], "plot_longitude_slic": [238, 252, 883, 897], "plot_longitudinal_level": [239, 253, 884, 898], "gridmapdisplaybasemap": [240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898], "get_basemap": [245, 890], "plot_basemap": [246, 891], "radardisplai": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931], "radarmapdisplai": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968], "plot_line_geo": [311, 348, 956, 993], "plot_line_xi": [312, 349, 957, 994], "plot_point": [313, 350, 958, 995], "plot_ppi_map": [315, 352, 960, 997], "radarmapdisplaybasemap": [324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005], "io": [361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029], "make_time_unit_str": [361, 1008], "prepare_for_read": [362, 1009], "read": [363, 577, 1007, 1010, 1314, 1315, 1357, 1358, 1359], "read_arm_sond": [364, 1011], "read_arm_sonde_vap": [365, 1012], "read_cfradi": [366, 1013], "read_cfradial2": [367, 1014], "read_chl": [368, 1015], "read_grid": [369, 1016], "read_grid_mdv": [370, 1017], "read_mdv": [371, 1018], "read_nexrad_arch": [372, 1019], "read_nexrad_cdm": [373, 1020], "read_nexrad_level3": [374, 1021], "read_rsl": [375, 1022], "read_sigmet": [376, 1023], "read_uf": [377, 1024], "write_cfradi": [378, 1025], "write_grid": [379, 1026], "write_grid_geotiff": [380, 1027], "write_grid_mdv": [381, 1028], "write_uf": [382, 1029], "lazydict": [383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053], "lazyloaddict": [383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043], "__contains__": 384, "__delattr__": 385, "__delitem__": 386, "__dir__": 387, "__eq__": 388, "__format__": 389, "__ge__": 390, "__getattribute__": 391, "__getitem__": 392, "__getstate__": 393, "__gt__": 394, "__init__": 395, "__init_subclass__": 396, "__iter__": 397, "__le__": 398, "__len__": 399, "__lt__": 400, "__ne__": 401, "__new__": 402, "__reduce__": 403, "__reduce_ex__": 404, "__repr__": 405, "__setattr__": 406, "__setitem__": 407, "__sizeof__": 408, "__str__": 409, "__subclasshook__": 410, "clear": [411, 1032, 1045], "get": [413, 1034, 1046, 1349], "has_kei": [414, 1035], "item": [415, 1036, 1047], "kei": [416, 1037, 1048], "pop": [417, 1038, 1049], "popitem": [418, 1039, 1050], "set_lazi": [419, 1040], "setdefault": [420, 1041, 1051], "updat": [421, 1042, 1052], "valu": [422, 1043, 1053], "retriev": [423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1312, 1341, 1359], "_destandard": 423, "_get_res_vol_sid": 424, "atmospheric_gas_att": [425, 1068], "calculate_snr_from_reflect": [426, 1069], "calculate_velocity_textur": [427, 1070], "composite_reflect": [428, 1071], "compute_doppler_veloc": [429, 1072], "compute_doppler_velocity_iq": [430, 1073], "compute_doppler_width": [431, 1074], "compute_doppler_width_iq": [432, 1075], "compute_apparent_profil": [433, 1076], "compute_bird_dens": [434, 1077], "compute_ccor": [435, 1078], "compute_cdr": [436, 1079], "compute_centroid": [437, 1080], "compute_differential_phas": [438, 1081], "compute_differential_phase_iq": [439, 1082], "compute_differential_reflect": [440, 1083], "compute_differential_reflectivity_iq": [441, 1084], "compute_evp": [442, 1085], "compute_iq": [443, 1086], "compute_l": [444, 1087], "compute_mean_phase_iq": [445, 1088], "compute_noise_pow": [446, 1089], "compute_noisedbz": [447, 1090], "compute_pol_vari": [448, 1091], "compute_pol_variables_iq": [449, 1092], "compute_qvp": [450, 1093], "compute_radial_noise_h": [451, 1094], "compute_radial_noise_iv": [452, 1095], "compute_rc": [453, 1096], "compute_rcs_from_pr": [454, 1097], "compute_refl_from_zdr": [455, 1098], "compute_reflect": [456, 1099], "compute_reflectivity_iq": [457, 1100], "compute_rhohv": [458, 1101], "compute_rhohv_iq": [459, 1102], "compute_rqvp": [460, 1103], "compute_signal_pow": [461, 1104], "compute_snr": [462, 1105], "compute_spectra": [463, 1106], "compute_spectral_differential_phas": [464, 1107], "compute_spectral_differential_reflect": [465, 1108], "compute_spectral_nois": [466, 1109], "compute_spectral_phas": [467, 1110], "compute_spectral_pow": [468, 1111], "compute_spectral_reflect": [469, 1112], "compute_spectral_rhohv": [470, 1113], "compute_st1_iq": [471, 1114], "compute_st2_iq": [472, 1115], "compute_svp": [473, 1116], "compute_ts_along_coord": [474, 1117], "compute_vol_refl": [475, 1118], "compute_vp": [476, 1119], "compute_wbn_iq": [477, 1120], "conv_strat_raut": [478, 1121], "conv_strat_yut": [479, 1122], "data_for_centroid": [480, 1123], "dealias_spectra": [481, 1124], "detect_ml": [482, 1125], "paremet": [482, 1125], "determine_medoid": [483, 1126], "est_rain_rate_a": [484, 1127], "est_rain_rate_hydro": [485, 1128], "est_rain_rate_kdp": [486, 1129], "est_rain_rate_z": [487, 1130], "est_rain_rate_za": [488, 1131], "est_rain_rate_zkdp": [489, 1132], "est_rain_rate_zpoli": [490, 1133], "est_vertical_windshear": [491, 1134], "est_vertical_windshear_lidar": [492, 1135], "est_wind_profil": [493, 1136], "est_wind_vel": [494, 1137], "feature_detect": [495, 1138], "fetch_radar_time_profil": [496, 1139], "gecsx": [497, 1140], "get_coeff_attg": [498, 1141], "get_freq_band": [499, 1142], "get_iso0_v": [500, 1143], "get_ml_rng_limit": [501, 1144], "grid_displacement_pc": [502, 1145], "grid_shift": [503, 1146], "hydroclass_semisupervis": [504, 1147], "kdp_leastsquare_double_window": [505, 1148], "kdp_leastsquare_single_window": [506, 1149], "kdp_maesaka": [507, 1150], "kdp_schneeb": [508, 1151], "kdp_vulpiani": [509, 1152], "map_profile_to_g": [510, 1153], "melting_layer_giangrand": [511, 1154], "melting_layer_hydroclass": [512, 1155], "melting_layer_mf": [513, 1156], "quasi_vertical_profil": [514, 1157], "select_sampl": [515, 1158], "steiner_conv_strat": [516, 1159], "synthetic_obs_distribut": [517, 1160], "vad_brown": [518, 1162], "vad_michelson": [519, 1163], "util": [520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305], "epoch_unit": 520, "angular_mean": [521, 1251], "angular_mean_deg": [522, 1252], "angular_std": [523, 1253], "angular_std_deg": [524, 1254], "angular_texture_2d": [525, 1255], "colocated_g": [526, 1256], "colocated_gates2": [527, 1257], "compute_azimuthal_averag": [528, 1258], "compute_corr": [529, 1259], "compute_directional_stat": [530, 1260], "compute_ms": [531, 1261], "compute_ns": [532, 1262], "cross_section_ppi": [533, 1263], "cross_section_rhi": [534, 1264], "datetime_from_dataset": [535, 1265], "datetime_from_grid": [536, 1266], "datetime_from_radar": [537, 1267], "datetimes_from_dataset": [538, 1268], "datetimes_from_radar": [539, 1269], "determine_sweep": [540, 1270], "estimate_noise_hs74": [541, 1271], "estimate_noise_ivic13": [542, 1272], "find_neighbour_g": [543, 1273], "for_azimuth": [544, 1274], "assumpt": [544, 570, 1274, 1300], "get_column_rai": [545, 1275], "get_field_loc": [546, 1276], "get_ivic_flat_reg_var_max": [547, 1277], "get_ivic_pct": [548, 1278], "get_ivic_snr_thr": [549, 1279], "get_target_elev": [550, 1280], "grid_texture_2d": [551, 1281], "image_mute_radar": [552, 1282], "interpol_spectra": [553, 1283], "intersect": [554, 1284], "interval_mean": [555, 1285], "interval_std": [556, 1286], "is_vpt": [557, 1287], "ivic_flat_reg_var_max_t": [558, 1288], "ivic_flat_reg_wind_len_t": [559, 1289], "ivic_pct_t": [560, 1290], "ivic_snr_thr_t": [561, 1291], "join_radar": [562, 1292], "join_spectra": [563, 1293], "ma_broadcast_to": [564, 1294], "mean_of_two_angl": [565, 1295], "mean_of_two_angles_deg": [566, 1296], "radar_from_spectra": [567, 1297], "rolling_window": [568, 1298], "simulated_vel_from_profil": [569, 1299], "sphere_dist": [570, 1300], "paramet": [570, 1300], "subset_radar": [571, 1301], "subset_radar_spectra": [572, 1302], "textur": [573, 1303], "texture_along_rai": [574, 1304], "to_vpt": [575, 1305], "_debug_info": 576, "auxiliari": 577, "input": [577, 1007, 1312, 1313], "output": [577, 1007, 1312, 1313], "data": [577, 794, 831, 1007, 1314, 1315, 1355, 1356, 1357, 1358, 1359], "special": [577, 1007], "us": [577, 1007, 1310, 1318, 1338], "convert_data": 578, "get_librari": 580, "read_edge_netcdf": 590, "read_file_c": 591, "read_file_pi": 592, "read_knmi_grid_h5": 599, "read_mch_vad": 600, "read_product_c": 608, "read_product_pi": 609, "read_psr_cpi_head": 610, "read_psr_head": 611, "read_psr_spectra": 612, "read_sinarame_h5": 617, "other": [625, 722, 1357], "toolkit": [625, 1363], "phase": [625, 722], "function": [625, 722], "get_k": 632, "class": 640, "coordin": 640, "transform": 640, "veloc": [722, 1067, 1250, 1310, 1353, 1358], "unfold": 722, "attenu": [722, 1309, 1359], "process": [722, 1067, 1358], "helper": 722, "calculate_attenu": 751, "calculate_attenuation_philinear": 752, "calculate_attenuation_zphi": 753, "correct_bia": 756, "correct_noise_rhohv": 757, "correct_vis": 759, "correct_vpr": 760, "correct_vpr_spatialis": 761, "despeckle_field": 765, "est_rhohv_rain": 767, "est_zdr_precip": 768, "est_zdr_snow": 769, "gauss_fit": 771, "get_sun_hit": 773, "get_sun_hits_iv": 774, "get_sun_hits_psr": 775, "retrieval_result": 780, "selfconsistency_bia": 782, "selfconsistency_bias2": 783, "selfconsistency_kdp_phidp": 784, "sun_retriev": 792, "plot_convstrat_schem": 1006, "sond": 1007, "mutablemap": [1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053], "map": [1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1312, 1317, 1319, 1320, 1331, 1355], "gatemapp": [1055, 1056, 1057, 1058, 1318], "distance_toler": 1056, "mapped_radar": 1057, "time_toler": 1058, "example_roi_func_const": 1059, "example_roi_func_dist": 1060, "example_roi_func_dist_beam": 1061, "grid_from_radar": 1062, "grid_ppi_sweep": 1063, "grid_rhi_sweep": 1064, "map_gates_to_grid": 1065, "map_to_grid": 1066, "composit": [1067, 1343], "reflect": [1067, 1309, 1326, 1328, 1334, 1335, 1343], "melt": 1067, "layer": 1067, "ml": 1067, "detect": 1067, "kdp": [1067, 1359], "echo": 1067, "classif": [1067, 1344, 1345, 1359], "gate": 1067, "id": 1067, "simpl": 1067, "moment": [1067, 1308, 1312, 1327], "calcul": [1067, 1343, 1345, 1346], "qpe": [1067, 1359], "quantit": 1067, "precipit": 1067, "estim": [1067, 1250, 1359], "advect": 1067, "wind": [1067, 1358], "vad": [1067, 1346, 1358], "azimuth": [1067, 1358], "displai": [1067, 1358], "qvp": 1067, "quasi": 1067, "vertic": 1067, "profil": [1067, 1346], "spectra": 1067, "iq": 1067, "visibl": 1067, "intemporarydirectori": [1175, 1176], "cleanup": 1176, "get_test_data": 1236, "make_empty_grid": 1237, "make_empty_ppi_radar": 1238, "make_empty_rhi_radar": 1239, "make_empty_spectra_radar": 1240, "make_gaussian_storm_grid": 1241, "make_normal_storm": 1242, "make_single_ray_radar": 1243, "make_storm_grid": 1244, "make_target_grid": 1245, "make_target_radar": 1246, "make_target_spectra_radar": 1247, "make_velocity_aliased_radar": 1248, "make_velocity_aliased_rhi_radar": 1249, "circular": 1250, "statist": 1250, "datetim": 1250, "column": [1250, 1342], "section": [1250, 1324, 1339], "cross": [1250, 1324, 1339], "nois": [1250, 1359], "simul": 1250, "signal": 1250, "mathemat": 1250, "api": 1306, "manual": 1306, "changelog": 1307, "v1": 1307, "9": 1307, "2": [1307, 1314, 1315], "0": 1307, "8": 1307, "7": 1307, "6": 1307, "5": 1307, "4": 1307, "3": [1307, 1314, 1338], "1": 1307, "new": 1307, "addit": 1307, "dealia": 1310, "doppler": [1310, 1358], "region": 1310, "base": 1310, "algorithm": [1310, 1344], "comput": [1311, 1316, 1321, 1340, 1347, 1348, 1361], "time": [1311, 1316, 1321, 1340, 1347, 1348, 1361], "galleri": [1312, 1350], "nexrad": [1314, 1315, 1327, 1328], "from": [1314, 1324, 1327, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1339, 1358, 1362], "aw": 1314, "cloud": 1314, "level": [1314, 1315], "older": 1315, "fix": 1315, "latitud": 1315, "longitud": 1315, "issu": 1315, "compar": 1318, "two": [1318, 1320, 1337], "singl": 1319, "cartesian": [1319, 1320, 1355, 1357], "choos": 1323, "colormap": 1323, "your": [1323, 1325], "modifi": 1325, "colorbar": 1325, "creat": [1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1351, 1365], "an": [1326, 1334, 1335, 1365], "imag": 1326, "mute": 1326, "multipl": [1327, 1332, 1333], "file": [1327, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1351, 1352, 1357, 1363], "ppi": [1329, 1330, 1331, 1339], "cfradial": 1329, "mdv": [1330, 1334, 1335, 1336], "cartopi": 1331, "panel": [1332, 1333, 1337, 1338], "rhi": [1332, 1333, 1334, 1335, 1336, 1337], "cf": [1332, 1333], "radial": [1332, 1333], "contour": [1334, 1335], "line": [1334, 1335], "volum": 1339, "extract": 1342, "abov": 1342, "point": 1342, "convect": 1344, "stratiform": 1344, "how": 1344, "work": 1344, "summari": 1344, "recommend": 1344, "best": 1344, "practic": 1344, "refer": 1344, "hydrometeor": [1345, 1359], "about": 1349, "meteoswiss": [1349, 1357], "fork": 1349, "py": [1349, 1356, 1357, 1360, 1363], "art": [1349, 1356, 1357, 1360, 1363], "cite": [1349, 1363], "what": 1349, "can": 1349, "do": 1349, "short": 1349, "cours": 1349, "instal": [1349, 1362, 1363], "depend": [1349, 1362, 1365], "option": [1349, 1362, 1365], "help": 1349, "contribut": 1349, "notebook": 1350, "basic": 1351, "ingest": 1351, "netcdf": 1351, "field": 1352, "manipul": 1352, "save": 1352, "object": [1352, 1360], "dealias": [1353, 1358], "mask": 1356, "With": 1356, "metranet": 1357, "polar": 1357, "low": 1357, "re": 1357, "mlx": 1357, "high": 1357, "mhx": 1357, "product": 1357, "swiss": [1358, 1359], "volumetr": 1358, "scan": 1358, "cappi": 1358, "raw": 1359, "c": 1359, "band": 1359, "ground": 1359, "clutter": 1359, "remov": 1359, "The": [1360, 1363], "index": 1360, "requir": 1362, "obtain": 1362, "latest": 1362, "sourc": 1362, "frequent": 1362, "ask": 1362, "question": 1362, "contributor": 1363, "": 1363, "guid": [1363, 1364], "python": 1363, "arm": 1363, "import": 1363, "link": 1363, "resourc": 1363, "code": 1363, "style": 1363, "setup": 1363, "github": 1363, "blog": 1363, "post": 1363, "user": 1364, "set": 1365, "up": 1365, "environ": 1365, "anaconda": 1365, "channel": 1365, "ad": 1365, "path": 1365, "more": 1365, "inform": 1365}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart.aux_io.extract_sweeps_skyecho": [[0, "pyart-aux-io-extract-sweeps-skyecho"], [579, "pyart-aux-io-extract-sweeps-skyecho"]], "pyart.aux_io.get_sweep_time_coverage": [[1, "pyart-aux-io-get-sweep-time-coverage"], [581, "pyart-aux-io-get-sweep-time-coverage"]], "pyart.aux_io.read_bin": [[2, "pyart-aux-io-read-bin"], [582, "pyart-aux-io-read-bin"]], "pyart.aux_io.read_bin_mf": [[3, "pyart-aux-io-read-bin-mf"], [583, "pyart-aux-io-read-bin-mf"]], "pyart.aux_io.read_cartesian_metranet": [[4, "pyart-aux-io-read-cartesian-metranet"], [584, "pyart-aux-io-read-cartesian-metranet"]], "pyart.aux_io.read_cf1": [[5, "pyart-aux-io-read-cf1"], [585, "pyart-aux-io-read-cf1"]], "pyart.aux_io.read_cf1_cartesian": [[6, "pyart-aux-io-read-cf1-cartesian"], [586, "pyart-aux-io-read-cf1-cartesian"]], "pyart.aux_io.read_cf1_cartesian_mf": [[7, "pyart-aux-io-read-cf1-cartesian-mf"], [587, "pyart-aux-io-read-cf1-cartesian-mf"]], "pyart.aux_io.read_d3r_gcpex_nc": [[8, "pyart-aux-io-read-d3r-gcpex-nc"], [588, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_dat_mf": [[9, "pyart-aux-io-read-dat-mf"], [589, "pyart-aux-io-read-dat-mf"]], "pyart.aux_io.read_gamic": [[10, "pyart-aux-io-read-gamic"], [593, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_gif": [[11, "pyart-aux-io-read-gif"], [594, "pyart-aux-io-read-gif"]], "pyart.aux_io.read_grib": [[12, "pyart-aux-io-read-grib"], [595, "pyart-aux-io-read-grib"]], "pyart.aux_io.read_hpl": [[13, "pyart-aux-io-read-hpl"], [596, "pyart-aux-io-read-hpl"]], "pyart.aux_io.read_iq": [[14, "pyart-aux-io-read-iq"], [597, "pyart-aux-io-read-iq"]], "pyart.aux_io.read_kazr": [[15, "pyart-aux-io-read-kazr"], [598, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_metranet": [[16, "pyart-aux-io-read-metranet"], [601, "pyart-aux-io-read-metranet"]], "pyart.aux_io.read_noxp_iphex_nc": [[17, "pyart-aux-io-read-noxp-iphex-nc"], [602, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_grid_h5": [[18, "pyart-aux-io-read-odim-grid-h5"], [603, "pyart-aux-io-read-odim-grid-h5"]], "pyart.aux_io.read_odim_h5": [[19, "pyart-aux-io-read-odim-h5"], [604, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_odim_vp_h5": [[20, "pyart-aux-io-read-odim-vp-h5"], [605, "pyart-aux-io-read-odim-vp-h5"]], "pyart.aux_io.read_pattern": [[21, "pyart-aux-io-read-pattern"], [606, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_png": [[22, "pyart-aux-io-read-png"], [607, "pyart-aux-io-read-png"]], "pyart.aux_io.read_radx": [[23, "pyart-aux-io-read-radx"], [613, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_rainbow_psr": [[24, "pyart-aux-io-read-rainbow-psr"], [614, "pyart-aux-io-read-rainbow-psr"]], "pyart.aux_io.read_rainbow_psr_spectra": [[25, "pyart-aux-io-read-rainbow-psr-spectra"], [615, "pyart-aux-io-read-rainbow-psr-spectra"]], "pyart.aux_io.read_rainbow_wrl": [[26, "pyart-aux-io-read-rainbow-wrl"], [616, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_skyecho": [[27, "pyart-aux-io-read-skyecho"], [618, "pyart-aux-io-read-skyecho"]], "pyart.aux_io.read_spectra": [[28, "pyart-aux-io-read-spectra"], [619, "pyart-aux-io-read-spectra"]], "pyart.aux_io.read_swissbirdradar_spectra": [[29, "pyart-aux-io-read-swissbirdradar-spectra"], [620, "pyart-aux-io-read-swissbirdradar-spectra"]], "pyart.aux_io.write_odim_grid_h5": [[30, "pyart-aux-io-write-odim-grid-h5"], [621, "pyart-aux-io-write-odim-grid-h5"]], "pyart.aux_io.write_odim_h5": [[31, "pyart-aux-io-write-odim-h5"], [622, "pyart-aux-io-write-odim-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[32, "pyart-aux-io-write-sinarame-cfradial"], [623, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.aux_io.write_spectra": [[33, "pyart-aux-io-write-spectra"], [624, "pyart-aux-io-write-spectra"]], "pyart.bridge.texture_of_complex_phase": [[34, "pyart-bridge-texture-of-complex-phase"], [626, "pyart-bridge-texture-of-complex-phase"]], "pyart.config.FileMetadata": [[35, "pyart-config-filemetadata"], [628, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[36, "pyart-config-filemetadata-call"], [629, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[37, "pyart-config-filemetadata-get-field-name"], [630, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[38, "pyart-config-filemetadata-get-metadata"], [631, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[39, "pyart-config-get-field-colormap"], [633, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[40, "pyart-config-get-field-limits"], [634, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[41, "pyart-config-get-field-mapping"], [635, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[42, "pyart-config-get-field-name"], [636, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[43, "pyart-config-get-fillvalue"], [637, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[44, "pyart-config-get-metadata"], [638, "pyart-config-get-metadata"]], "pyart.config.load_config": [[45, "pyart-config-load-config"], [639, "pyart-config-load-config"]], "pyart.core.Grid": [[46, "pyart-core-grid"], [641, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[47, "pyart-core-grid-add-field"], [642, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[48, "pyart-core-grid-get-point-longitude-latitude"], [643, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[49, "pyart-core-grid-get-projparams"], [644, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[50, "pyart-core-grid-init-point-altitude"], [645, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[51, "pyart-core-grid-init-point-longitude-latitude"], [646, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[52, "pyart-core-grid-init-point-x-y-z"], [647, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[53, "pyart-core-grid-projection-proj"], [648, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[54, "pyart-core-grid-to-xarray"], [649, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[55, "pyart-core-grid-write"], [650, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[56, "pyart-core-horizontalwindprofile"], [651, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[57, "pyart-core-horizontalwindprofile-from-u-and-v"], [652, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[58, "pyart-core-horizontalwindprofile-u-wind"], [653, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[59, "pyart-core-horizontalwindprofile-v-wind"], [654, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[60, "pyart-core-radar"], [655, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[61, "pyart-core-radar-add-field"], [656, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[62, "pyart-core-radar-add-field-like"], [657, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[63, "pyart-core-radar-add-filter"], [658, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[64, "pyart-core-radar-check-field-exists"], [659, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[65, "pyart-core-radar-extract-sweeps"], [660, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[66, "pyart-core-radar-get-azimuth"], [661, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[67, "pyart-core-radar-get-elevation"], [662, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[68, "pyart-core-radar-get-end"], [663, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[69, "pyart-core-radar-get-field"], [664, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[70, "pyart-core-radar-get-gate-area"], [665, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[71, "pyart-core-radar-get-gate-lat-lon-alt"], [666, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[72, "pyart-core-radar-get-gate-x-y-z"], [667, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[73, "pyart-core-radar-get-nyquist-vel"], [668, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[74, "pyart-core-radar-get-slice"], [669, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[75, "pyart-core-radar-get-start"], [670, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[76, "pyart-core-radar-get-start-end"], [671, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[77, "pyart-core-radar-info"], [672, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[78, "pyart-core-radar-init-gate-altitude"], [673, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[79, "pyart-core-radar-init-gate-longitude-latitude"], [674, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[80, "pyart-core-radar-init-gate-x-y-z"], [675, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[81, "pyart-core-radar-init-rays-per-sweep"], [676, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[82, "pyart-core-radar-iter-azimuth"], [677, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[83, "pyart-core-radar-iter-elevation"], [678, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[84, "pyart-core-radar-iter-end"], [679, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[85, "pyart-core-radar-iter-field"], [680, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[86, "pyart-core-radar-iter-slice"], [681, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[87, "pyart-core-radar-iter-start"], [682, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[88, "pyart-core-radar-iter-start-end"], [683, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[89, "pyart-core-radarspectra"], [684, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.add_field": [[90, "pyart-core-radarspectra-add-field"], [685, "pyart-core-radarspectra-add-field"]], "pyart.core.RadarSpectra.add_field_like": [[91, "pyart-core-radarspectra-add-field-like"], [686, "pyart-core-radarspectra-add-field-like"]], "pyart.core.RadarSpectra.add_filter": [[92, "pyart-core-radarspectra-add-filter"], [687, "pyart-core-radarspectra-add-filter"]], "pyart.core.RadarSpectra.check_field_exists": [[93, "pyart-core-radarspectra-check-field-exists"], [688, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.extract_sweeps": [[94, "pyart-core-radarspectra-extract-sweeps"], [689, "pyart-core-radarspectra-extract-sweeps"]], "pyart.core.RadarSpectra.get_azimuth": [[95, "pyart-core-radarspectra-get-azimuth"], [690, "pyart-core-radarspectra-get-azimuth"]], "pyart.core.RadarSpectra.get_elevation": [[96, "pyart-core-radarspectra-get-elevation"], [691, "pyart-core-radarspectra-get-elevation"]], "pyart.core.RadarSpectra.get_end": [[97, "pyart-core-radarspectra-get-end"], [692, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_field": [[98, "pyart-core-radarspectra-get-field"], [693, "pyart-core-radarspectra-get-field"]], "pyart.core.RadarSpectra.get_gate_area": [[99, "pyart-core-radarspectra-get-gate-area"], [694, "pyart-core-radarspectra-get-gate-area"]], "pyart.core.RadarSpectra.get_gate_lat_lon_alt": [[100, "pyart-core-radarspectra-get-gate-lat-lon-alt"], [695, "pyart-core-radarspectra-get-gate-lat-lon-alt"]], "pyart.core.RadarSpectra.get_gate_x_y_z": [[101, "pyart-core-radarspectra-get-gate-x-y-z"], [696, "pyart-core-radarspectra-get-gate-x-y-z"]], "pyart.core.RadarSpectra.get_nyquist_vel": [[102, "pyart-core-radarspectra-get-nyquist-vel"], [697, "pyart-core-radarspectra-get-nyquist-vel"]], "pyart.core.RadarSpectra.get_slice": [[103, "pyart-core-radarspectra-get-slice"], [698, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[104, "pyart-core-radarspectra-get-start"], [699, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[105, "pyart-core-radarspectra-get-start-end"], [700, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.info": [[106, "pyart-core-radarspectra-info"], [701, "pyart-core-radarspectra-info"]], "pyart.core.RadarSpectra.init_gate_altitude": [[107, "pyart-core-radarspectra-init-gate-altitude"], [702, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[108, "pyart-core-radarspectra-init-gate-longitude-latitude"], [703, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[109, "pyart-core-radarspectra-init-gate-x-y-z"], [704, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[110, "pyart-core-radarspectra-init-rays-per-sweep"], [705, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[111, "pyart-core-radarspectra-iter-azimuth"], [706, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[112, "pyart-core-radarspectra-iter-elevation"], [707, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[113, "pyart-core-radarspectra-iter-end"], [708, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[114, "pyart-core-radarspectra-iter-field"], [709, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[115, "pyart-core-radarspectra-iter-slice"], [710, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[116, "pyart-core-radarspectra-iter-start"], [711, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[117, "pyart-core-radarspectra-iter-start-end"], [712, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.antenna_to_cartesian": [[118, "pyart-core-antenna-to-cartesian"], [713, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[119, "pyart-core-antenna-vectors-to-cartesian"], [714, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[120, "pyart-core-cartesian-to-antenna"], [715, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"], [716, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"], [717, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"], [718, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"], [719, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"], [720, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.core.wgs84_to_swissCH1903": [[126, "pyart-core-wgs84-to-swissch1903"], [721, "pyart-core-wgs84-to-swissch1903"]], "Test example": [[126, "test-example"], [721, "test-example"]], "pyart.correct.compute_apparent_vpr": [[127, "pyart-correct-compute-apparent-vpr"], [754, "pyart-correct-compute-apparent-vpr"]], "pyart.correct.compute_theoretical_vpr": [[128, "pyart-correct-compute-theoretical-vpr"], [755, "pyart-correct-compute-theoretical-vpr"]], "pyart.correct.correct_sys_phase": [[129, "pyart-correct-correct-sys-phase"], [758, "pyart-correct-correct-sys-phase"]], "pyart.correct.dealias_fourdd": [[130, "pyart-correct-dealias-fourdd"], [762, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[131, "pyart-correct-dealias-region-based"], [763, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[132, "pyart-correct-dealias-unwrap-phase"], [764, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.det_sys_phase_ray": [[133, "pyart-correct-det-sys-phase-ray"], [766, "pyart-correct-det-sys-phase-ray"]], "pyart.correct.find_objects": [[134, "pyart-correct-find-objects"], [770, "pyart-correct-find-objects"]], "pyart.correct.get_mask_fzl": [[135, "pyart-correct-get-mask-fzl"], [772, "pyart-correct-get-mask-fzl"]], "pyart.correct.phase_proc_lp": [[136, "pyart-correct-phase-proc-lp"], [777, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[137, "pyart-correct-phase-proc-lp-gf"], [778, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.ptoa_to_sf": [[138, "pyart-correct-ptoa-to-sf"], [779, "pyart-correct-ptoa-to-sf"]], "pyart.correct.scanning_losses": [[139, "pyart-correct-scanning-losses"], [781, "pyart-correct-scanning-losses"]], "pyart.correct.smooth_masked": [[140, "pyart-correct-smooth-masked"], [785, "pyart-correct-smooth-masked"]], "pyart.correct.smooth_phidp_double_window": [[141, "pyart-correct-smooth-phidp-double-window"], [786, "pyart-correct-smooth-phidp-double-window"]], "pyart.correct.smooth_phidp_single_window": [[142, "pyart-correct-smooth-phidp-single-window"], [787, "pyart-correct-smooth-phidp-single-window"]], "pyart.correct.solar_flux_lookup": [[143, "pyart-correct-solar-flux-lookup"], [788, "pyart-correct-solar-flux-lookup"]], "pyart.correct.sun_position_mfr": [[144, "pyart-correct-sun-position-mfr"], [789, "pyart-correct-sun-position-mfr"]], "pyart.correct.sun_position_pysolar": [[145, "pyart-correct-sun-position-pysolar"], [790, "pyart-correct-sun-position-pysolar"]], "pyart.correct.sun_power": [[146, "pyart-correct-sun-power"], [791, "pyart-correct-sun-power"]], "pyart.exceptions.DeprecatedAttribute": [[147, "pyart-exceptions-deprecatedattribute"]], "pyart.exceptions.DeprecatedFunctionName": [[148, "pyart-exceptions-deprecatedfunctionname"]], "pyart.exceptions.MissingOptionalDependency": [[149, "pyart-exceptions-missingoptionaldependency"]], "pyart.exceptions._deprecated_alias": [[150, "pyart-exceptions-deprecated-alias"]], "pyart.filters.GateFilter": [[151, "pyart-filters-gatefilter"], [795, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[152, "pyart-filters-gatefilter-copy"], [796, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[153, "pyart-filters-gatefilter-exclude-above"], [797, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[154, "pyart-filters-gatefilter-exclude-all"], [798, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[155, "pyart-filters-gatefilter-exclude-below"], [799, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[156, "pyart-filters-gatefilter-exclude-equal"], [800, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[157, "pyart-filters-gatefilter-exclude-gates"], [801, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[158, "pyart-filters-gatefilter-exclude-inside"], [802, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[159, "pyart-filters-gatefilter-exclude-invalid"], [803, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[160, "pyart-filters-gatefilter-exclude-masked"], [804, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[161, "pyart-filters-gatefilter-exclude-none"], [805, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[162, "pyart-filters-gatefilter-exclude-not-equal"], [806, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[163, "pyart-filters-gatefilter-exclude-outside"], [807, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[164, "pyart-filters-gatefilter-exclude-transition"], [808, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[165, "pyart-filters-gatefilter-gate-excluded"], [809, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[166, "pyart-filters-gatefilter-gate-included"], [810, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[167, "pyart-filters-gatefilter-include-above"], [811, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[168, "pyart-filters-gatefilter-include-all"], [812, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[169, "pyart-filters-gatefilter-include-below"], [813, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[170, "pyart-filters-gatefilter-include-equal"], [814, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[171, "pyart-filters-gatefilter-include-gates"], [815, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[172, "pyart-filters-gatefilter-include-inside"], [816, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[173, "pyart-filters-gatefilter-include-none"], [817, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[174, "pyart-filters-gatefilter-include-not-equal"], [818, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[175, "pyart-filters-gatefilter-include-not-masked"], [819, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[176, "pyart-filters-gatefilter-include-not-transition"], [820, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[177, "pyart-filters-gatefilter-include-outside"], [821, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[178, "pyart-filters-gatefilter-include-valid"], [822, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.birds_gate_filter": [[179, "pyart-filters-birds-gate-filter"], [823, "pyart-filters-birds-gate-filter"]], "pyart.filters.class_based_gate_filter": [[180, "pyart-filters-class-based-gate-filter"], [824, "pyart-filters-class-based-gate-filter"]], "pyart.filters.iso0_based_gate_filter": [[181, "pyart-filters-iso0-based-gate-filter"], [825, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[182, "pyart-filters-moment-and-texture-based-gate-filter"], [826, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[183, "pyart-filters-moment-based-gate-filter"], [827, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.snr_based_gate_filter": [[184, "pyart-filters-snr-based-gate-filter"], [828, "pyart-filters-snr-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[185, "pyart-filters-temp-based-gate-filter"], [829, "pyart-filters-temp-based-gate-filter"]], "pyart.filters.visibility_based_gate_filter": [[186, "pyart-filters-visibility-based-gate-filter"], [830, "pyart-filters-visibility-based-gate-filter"]], "pyart.graph.AirborneRadarDisplay": [[187, "pyart-graph-airborneradardisplay"], [832, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[188, "pyart-graph-airborneradardisplay-generate-az-rhi-title"], [833, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[189, "pyart-graph-airborneradardisplay-generate-filename"], [834, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[190, "pyart-graph-airborneradardisplay-generate-ray-title"], [835, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[191, "pyart-graph-airborneradardisplay-generate-title"], [836, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[192, "pyart-graph-airborneradardisplay-generate-vpt-title"], [837, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.generate_xsection_title": [[193, "pyart-graph-airborneradardisplay-generate-xsection-title"], [838, "pyart-graph-airborneradardisplay-generate-xsection-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[194, "pyart-graph-airborneradardisplay-label-xaxis-r"], [839, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[195, "pyart-graph-airborneradardisplay-label-xaxis-rays"], [840, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[196, "pyart-graph-airborneradardisplay-label-xaxis-time"], [841, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[197, "pyart-graph-airborneradardisplay-label-xaxis-x"], [842, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection": [[198, "pyart-graph-airborneradardisplay-label-xaxis-xsection"], [843, "pyart-graph-airborneradardisplay-label-xaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[199, "pyart-graph-airborneradardisplay-label-yaxis-field"], [844, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection": [[200, "pyart-graph-airborneradardisplay-label-yaxis-xsection"], [845, "pyart-graph-airborneradardisplay-label-yaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[201, "pyart-graph-airborneradardisplay-label-yaxis-y"], [846, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[202, "pyart-graph-airborneradardisplay-label-yaxis-z"], [847, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[203, "pyart-graph-airborneradardisplay-plot"], [848, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[204, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"], [849, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[205, "pyart-graph-airborneradardisplay-plot-colorbar"], [850, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[206, "pyart-graph-airborneradardisplay-plot-cr-raster"], [851, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[207, "pyart-graph-airborneradardisplay-plot-cross-hair"], [852, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[208, "pyart-graph-airborneradardisplay-plot-grid-lines"], [853, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[209, "pyart-graph-airborneradardisplay-plot-label"], [854, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[210, "pyart-graph-airborneradardisplay-plot-labels"], [855, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[211, "pyart-graph-airborneradardisplay-plot-ppi"], [856, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[212, "pyart-graph-airborneradardisplay-plot-range-ring"], [857, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[213, "pyart-graph-airborneradardisplay-plot-range-rings"], [858, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[214, "pyart-graph-airborneradardisplay-plot-ray"], [859, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[215, "pyart-graph-airborneradardisplay-plot-rhi"], [860, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[216, "pyart-graph-airborneradardisplay-plot-sweep-grid"], [861, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[217, "pyart-graph-airborneradardisplay-plot-vpt"], [862, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.plot_xsection": [[218, "pyart-graph-airborneradardisplay-plot-xsection"], [863, "pyart-graph-airborneradardisplay-plot-xsection"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[219, "pyart-graph-airborneradardisplay-set-aspect-ratio"], [864, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[220, "pyart-graph-airborneradardisplay-set-limits"], [865, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[221, "pyart-graph-gridmapdisplay"], [866, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[222, "pyart-graph-gridmapdisplay-cartopy-coastlines"], [867, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[223, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"], [868, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[224, "pyart-graph-gridmapdisplay-cartopy-states"], [869, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[225, "pyart-graph-gridmapdisplay-generate-filename"], [870, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[226, "pyart-graph-gridmapdisplay-generate-grid-title"], [871, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[227, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"], [872, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[228, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"], [873, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[229, "pyart-graph-gridmapdisplay-plot-colorbar"], [874, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[230, "pyart-graph-gridmapdisplay-plot-cross-section"], [875, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_cross_section_level": [[231, "pyart-graph-gridmapdisplay-plot-cross-section-level"], [876, "pyart-graph-gridmapdisplay-plot-cross-section-level"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[232, "pyart-graph-gridmapdisplay-plot-crosshairs"], [877, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[233, "pyart-graph-gridmapdisplay-plot-grid"], [878, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_grid_contour": [[234, "pyart-graph-gridmapdisplay-plot-grid-contour"], [879, "pyart-graph-gridmapdisplay-plot-grid-contour"]], "pyart.graph.GridMapDisplay.plot_grid_raw": [[235, "pyart-graph-gridmapdisplay-plot-grid-raw"], [880, "pyart-graph-gridmapdisplay-plot-grid-raw"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[236, "pyart-graph-gridmapdisplay-plot-latitude-slice"], [881, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[237, "pyart-graph-gridmapdisplay-plot-latitudinal-level"], [882, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[238, "pyart-graph-gridmapdisplay-plot-longitude-slice"], [883, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[239, "pyart-graph-gridmapdisplay-plot-longitudinal-level"], [884, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[240, "pyart-graph-gridmapdisplaybasemap"], [885, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[241, "pyart-graph-gridmapdisplaybasemap-generate-filename"], [886, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[242, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"], [887, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[243, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"], [888, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[244, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"], [889, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[245, "pyart-graph-gridmapdisplaybasemap-get-basemap"], [890, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[246, "pyart-graph-gridmapdisplaybasemap-plot-basemap"], [891, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[247, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"], [892, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[248, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"], [893, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[249, "pyart-graph-gridmapdisplaybasemap-plot-grid"], [894, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[250, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"], [895, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[251, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"], [896, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[252, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"], [897, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[253, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"], [898, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[254, "pyart-graph-radardisplay"], [899, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[255, "pyart-graph-radardisplay-generate-az-rhi-title"], [900, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[256, "pyart-graph-radardisplay-generate-filename"], [901, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[257, "pyart-graph-radardisplay-generate-ray-title"], [902, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[258, "pyart-graph-radardisplay-generate-title"], [903, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[259, "pyart-graph-radardisplay-generate-vpt-title"], [904, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.generate_xsection_title": [[260, "pyart-graph-radardisplay-generate-xsection-title"], [905, "pyart-graph-radardisplay-generate-xsection-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[261, "pyart-graph-radardisplay-label-xaxis-r"], [906, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[262, "pyart-graph-radardisplay-label-xaxis-rays"], [907, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[263, "pyart-graph-radardisplay-label-xaxis-time"], [908, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[264, "pyart-graph-radardisplay-label-xaxis-x"], [909, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_xaxis_xsection": [[265, "pyart-graph-radardisplay-label-xaxis-xsection"], [910, "pyart-graph-radardisplay-label-xaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[266, "pyart-graph-radardisplay-label-yaxis-field"], [911, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_xsection": [[267, "pyart-graph-radardisplay-label-yaxis-xsection"], [912, "pyart-graph-radardisplay-label-yaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[268, "pyart-graph-radardisplay-label-yaxis-y"], [913, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[269, "pyart-graph-radardisplay-label-yaxis-z"], [914, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[270, "pyart-graph-radardisplay-plot"], [915, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[271, "pyart-graph-radardisplay-plot-azimuth-to-rhi"], [916, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[272, "pyart-graph-radardisplay-plot-colorbar"], [917, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[273, "pyart-graph-radardisplay-plot-cr-raster"], [918, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[274, "pyart-graph-radardisplay-plot-cross-hair"], [919, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[275, "pyart-graph-radardisplay-plot-grid-lines"], [920, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[276, "pyart-graph-radardisplay-plot-label"], [921, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[277, "pyart-graph-radardisplay-plot-labels"], [922, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[278, "pyart-graph-radardisplay-plot-ppi"], [923, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[279, "pyart-graph-radardisplay-plot-range-ring"], [924, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[280, "pyart-graph-radardisplay-plot-range-rings"], [925, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[281, "pyart-graph-radardisplay-plot-ray"], [926, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[282, "pyart-graph-radardisplay-plot-rhi"], [927, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[283, "pyart-graph-radardisplay-plot-vpt"], [928, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.plot_xsection": [[284, "pyart-graph-radardisplay-plot-xsection"], [929, "pyart-graph-radardisplay-plot-xsection"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[285, "pyart-graph-radardisplay-set-aspect-ratio"], [930, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[286, "pyart-graph-radardisplay-set-limits"], [931, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[287, "pyart-graph-radarmapdisplay"], [932, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[288, "pyart-graph-radarmapdisplay-generate-az-rhi-title"], [933, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[289, "pyart-graph-radarmapdisplay-generate-filename"], [934, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[290, "pyart-graph-radarmapdisplay-generate-ray-title"], [935, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[291, "pyart-graph-radarmapdisplay-generate-title"], [936, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[292, "pyart-graph-radarmapdisplay-generate-vpt-title"], [937, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.generate_xsection_title": [[293, "pyart-graph-radarmapdisplay-generate-xsection-title"], [938, "pyart-graph-radarmapdisplay-generate-xsection-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[294, "pyart-graph-radarmapdisplay-label-xaxis-r"], [939, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[295, "pyart-graph-radarmapdisplay-label-xaxis-rays"], [940, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[296, "pyart-graph-radarmapdisplay-label-xaxis-time"], [941, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[297, "pyart-graph-radarmapdisplay-label-xaxis-x"], [942, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_xaxis_xsection": [[298, "pyart-graph-radarmapdisplay-label-xaxis-xsection"], [943, "pyart-graph-radarmapdisplay-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[299, "pyart-graph-radarmapdisplay-label-yaxis-field"], [944, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_xsection": [[300, "pyart-graph-radarmapdisplay-label-yaxis-xsection"], [945, "pyart-graph-radarmapdisplay-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[301, "pyart-graph-radarmapdisplay-label-yaxis-y"], [946, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[302, "pyart-graph-radarmapdisplay-label-yaxis-z"], [947, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[303, "pyart-graph-radarmapdisplay-plot"], [948, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[304, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"], [949, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[305, "pyart-graph-radarmapdisplay-plot-colorbar"], [950, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[306, "pyart-graph-radarmapdisplay-plot-cr-raster"], [951, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[307, "pyart-graph-radarmapdisplay-plot-cross-hair"], [952, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[308, "pyart-graph-radarmapdisplay-plot-grid-lines"], [953, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[309, "pyart-graph-radarmapdisplay-plot-label"], [954, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[310, "pyart-graph-radarmapdisplay-plot-labels"], [955, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[311, "pyart-graph-radarmapdisplay-plot-line-geo"], [956, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[312, "pyart-graph-radarmapdisplay-plot-line-xy"], [957, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[313, "pyart-graph-radarmapdisplay-plot-point"], [958, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[314, "pyart-graph-radarmapdisplay-plot-ppi"], [959, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[315, "pyart-graph-radarmapdisplay-plot-ppi-map"], [960, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[316, "pyart-graph-radarmapdisplay-plot-range-ring"], [961, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[317, "pyart-graph-radarmapdisplay-plot-range-rings"], [962, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[318, "pyart-graph-radarmapdisplay-plot-ray"], [963, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[319, "pyart-graph-radarmapdisplay-plot-rhi"], [964, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[320, "pyart-graph-radarmapdisplay-plot-vpt"], [965, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.plot_xsection": [[321, "pyart-graph-radarmapdisplay-plot-xsection"], [966, "pyart-graph-radarmapdisplay-plot-xsection"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[322, "pyart-graph-radarmapdisplay-set-aspect-ratio"], [967, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[323, "pyart-graph-radarmapdisplay-set-limits"], [968, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[324, "pyart-graph-radarmapdisplaybasemap"], [969, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[325, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"], [970, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[326, "pyart-graph-radarmapdisplaybasemap-generate-filename"], [971, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[327, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"], [972, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[328, "pyart-graph-radarmapdisplaybasemap-generate-title"], [973, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[329, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"], [974, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title": [[330, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"], [975, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[331, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"], [976, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[332, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"], [977, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[333, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"], [978, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[334, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"], [979, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection": [[335, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"], [980, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[336, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"], [981, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection": [[337, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"], [982, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[338, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"], [983, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[339, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"], [984, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[340, "pyart-graph-radarmapdisplaybasemap-plot"], [985, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[341, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"], [986, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[342, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"], [987, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[343, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"], [988, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[344, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"], [989, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[345, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"], [990, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[346, "pyart-graph-radarmapdisplaybasemap-plot-label"], [991, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[347, "pyart-graph-radarmapdisplaybasemap-plot-labels"], [992, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[348, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"], [993, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[349, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"], [994, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[350, "pyart-graph-radarmapdisplaybasemap-plot-point"], [995, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[351, "pyart-graph-radarmapdisplaybasemap-plot-ppi"], [996, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[352, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"], [997, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[353, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"], [998, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[354, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"], [999, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[355, "pyart-graph-radarmapdisplaybasemap-plot-ray"], [1000, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[356, "pyart-graph-radarmapdisplaybasemap-plot-rhi"], [1001, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[357, "pyart-graph-radarmapdisplaybasemap-plot-vpt"], [1002, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.plot_xsection": [[358, "pyart-graph-radarmapdisplaybasemap-plot-xsection"], [1003, "pyart-graph-radarmapdisplaybasemap-plot-xsection"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[359, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"], [1004, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[360, "pyart-graph-radarmapdisplaybasemap-set-limits"], [1005, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.io.make_time_unit_str": [[361, "pyart-io-make-time-unit-str"], [1008, "pyart-io-make-time-unit-str"]], "pyart.io.prepare_for_read": [[362, "pyart-io-prepare-for-read"], [1009, "pyart-io-prepare-for-read"]], "pyart.io.read": [[363, "pyart-io-read"], [1010, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[364, "pyart-io-read-arm-sonde"], [1011, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[365, "pyart-io-read-arm-sonde-vap"], [1012, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[366, "pyart-io-read-cfradial"], [1013, "pyart-io-read-cfradial"]], "pyart.io.read_cfradial2": [[367, "pyart-io-read-cfradial2"], [1014, "pyart-io-read-cfradial2"]], "pyart.io.read_chl": [[368, "pyart-io-read-chl"], [1015, "pyart-io-read-chl"]], "pyart.io.read_grid": [[369, "pyart-io-read-grid"], [1016, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[370, "pyart-io-read-grid-mdv"], [1017, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[371, "pyart-io-read-mdv"], [1018, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[372, "pyart-io-read-nexrad-archive"], [1019, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[373, "pyart-io-read-nexrad-cdm"], [1020, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[374, "pyart-io-read-nexrad-level3"], [1021, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[375, "pyart-io-read-rsl"], [1022, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[376, "pyart-io-read-sigmet"], [1023, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[377, "pyart-io-read-uf"], [1024, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[378, "pyart-io-write-cfradial"], [1025, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[379, "pyart-io-write-grid"], [1026, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[380, "pyart-io-write-grid-geotiff"], [1027, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[381, "pyart-io-write-grid-mdv"], [1028, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[382, "pyart-io-write-uf"], [1029, "pyart-io-write-uf"]], "pyart.lazydict.LazyLoadDict": [[383, "pyart-lazydict-lazyloaddict"], [1031, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.__contains__": [[384, "pyart-lazydict-lazyloaddict-contains"]], "pyart.lazydict.LazyLoadDict.__delattr__": [[385, "pyart-lazydict-lazyloaddict-delattr"]], "pyart.lazydict.LazyLoadDict.__delitem__": [[386, "pyart-lazydict-lazyloaddict-delitem"]], "pyart.lazydict.LazyLoadDict.__dir__": [[387, "pyart-lazydict-lazyloaddict-dir"]], "pyart.lazydict.LazyLoadDict.__eq__": [[388, "pyart-lazydict-lazyloaddict-eq"]], "pyart.lazydict.LazyLoadDict.__format__": [[389, "pyart-lazydict-lazyloaddict-format"]], "pyart.lazydict.LazyLoadDict.__ge__": [[390, "pyart-lazydict-lazyloaddict-ge"]], "pyart.lazydict.LazyLoadDict.__getattribute__": [[391, "pyart-lazydict-lazyloaddict-getattribute"]], "pyart.lazydict.LazyLoadDict.__getitem__": [[392, "pyart-lazydict-lazyloaddict-getitem"]], "pyart.lazydict.LazyLoadDict.__getstate__": [[393, "pyart-lazydict-lazyloaddict-getstate"]], "pyart.lazydict.LazyLoadDict.__gt__": [[394, "pyart-lazydict-lazyloaddict-gt"]], "pyart.lazydict.LazyLoadDict.__init__": [[395, "pyart-lazydict-lazyloaddict-init"]], "pyart.lazydict.LazyLoadDict.__init_subclass__": [[396, "pyart-lazydict-lazyloaddict-init-subclass"]], "pyart.lazydict.LazyLoadDict.__iter__": [[397, "pyart-lazydict-lazyloaddict-iter"]], "pyart.lazydict.LazyLoadDict.__le__": [[398, "pyart-lazydict-lazyloaddict-le"]], "pyart.lazydict.LazyLoadDict.__len__": [[399, "pyart-lazydict-lazyloaddict-len"]], "pyart.lazydict.LazyLoadDict.__lt__": [[400, "pyart-lazydict-lazyloaddict-lt"]], "pyart.lazydict.LazyLoadDict.__ne__": [[401, "pyart-lazydict-lazyloaddict-ne"]], "pyart.lazydict.LazyLoadDict.__new__": [[402, "pyart-lazydict-lazyloaddict-new"]], "pyart.lazydict.LazyLoadDict.__reduce__": [[403, "pyart-lazydict-lazyloaddict-reduce"]], "pyart.lazydict.LazyLoadDict.__reduce_ex__": [[404, "pyart-lazydict-lazyloaddict-reduce-ex"]], "pyart.lazydict.LazyLoadDict.__repr__": [[405, "pyart-lazydict-lazyloaddict-repr"]], "pyart.lazydict.LazyLoadDict.__setattr__": [[406, "pyart-lazydict-lazyloaddict-setattr"]], "pyart.lazydict.LazyLoadDict.__setitem__": [[407, "pyart-lazydict-lazyloaddict-setitem"]], "pyart.lazydict.LazyLoadDict.__sizeof__": [[408, "pyart-lazydict-lazyloaddict-sizeof"]], "pyart.lazydict.LazyLoadDict.__str__": [[409, "pyart-lazydict-lazyloaddict-str"]], "pyart.lazydict.LazyLoadDict.__subclasshook__": [[410, "pyart-lazydict-lazyloaddict-subclasshook"]], "pyart.lazydict.LazyLoadDict.clear": [[411, "pyart-lazydict-lazyloaddict-clear"], [1032, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[412, "pyart-lazydict-lazyloaddict-copy"], [1033, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[413, "pyart-lazydict-lazyloaddict-get"], [1034, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[414, "pyart-lazydict-lazyloaddict-has-key"], [1035, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[415, "pyart-lazydict-lazyloaddict-items"], [1036, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[416, "pyart-lazydict-lazyloaddict-keys"], [1037, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[417, "pyart-lazydict-lazyloaddict-pop"], [1038, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[418, "pyart-lazydict-lazyloaddict-popitem"], [1039, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[419, "pyart-lazydict-lazyloaddict-set-lazy"], [1040, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[420, "pyart-lazydict-lazyloaddict-setdefault"], [1041, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[421, "pyart-lazydict-lazyloaddict-update"], [1042, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[422, "pyart-lazydict-lazyloaddict-values"], [1043, "pyart-lazydict-lazyloaddict-values"]], "pyart.retrieve._destandardize": [[423, "pyart-retrieve-destandardize"]], "pyart.retrieve._get_res_vol_sides": [[424, "pyart-retrieve-get-res-vol-sides"]], "pyart.retrieve.atmospheric_gas_att": [[425, "pyart-retrieve-atmospheric-gas-att"], [1068, "pyart-retrieve-atmospheric-gas-att"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[426, "pyart-retrieve-calculate-snr-from-reflectivity"], [1069, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[427, "pyart-retrieve-calculate-velocity-texture"], [1070, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[428, "pyart-retrieve-composite-reflectivity"], [1071, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_Doppler_velocity": [[429, "pyart-retrieve-compute-doppler-velocity"], [1072, "pyart-retrieve-compute-doppler-velocity"]], "pyart.retrieve.compute_Doppler_velocity_iq": [[430, "pyart-retrieve-compute-doppler-velocity-iq"], [1073, "pyart-retrieve-compute-doppler-velocity-iq"]], "pyart.retrieve.compute_Doppler_width": [[431, "pyart-retrieve-compute-doppler-width"], [1074, "pyart-retrieve-compute-doppler-width"]], "pyart.retrieve.compute_Doppler_width_iq": [[432, "pyart-retrieve-compute-doppler-width-iq"], [1075, "pyart-retrieve-compute-doppler-width-iq"]], "pyart.retrieve.compute_apparent_profile": [[433, "pyart-retrieve-compute-apparent-profile"], [1076, "pyart-retrieve-compute-apparent-profile"]], "pyart.retrieve.compute_bird_density": [[434, "pyart-retrieve-compute-bird-density"], [1077, "pyart-retrieve-compute-bird-density"]], "pyart.retrieve.compute_ccor": [[435, "pyart-retrieve-compute-ccor"], [1078, "pyart-retrieve-compute-ccor"]], "pyart.retrieve.compute_cdr": [[436, "pyart-retrieve-compute-cdr"], [1079, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_centroids": [[437, "pyart-retrieve-compute-centroids"], [1080, "pyart-retrieve-compute-centroids"]], "pyart.retrieve.compute_differential_phase": [[438, "pyart-retrieve-compute-differential-phase"], [1081, "pyart-retrieve-compute-differential-phase"]], "pyart.retrieve.compute_differential_phase_iq": [[439, "pyart-retrieve-compute-differential-phase-iq"], [1082, "pyart-retrieve-compute-differential-phase-iq"]], "pyart.retrieve.compute_differential_reflectivity": [[440, "pyart-retrieve-compute-differential-reflectivity"], [1083, "pyart-retrieve-compute-differential-reflectivity"]], "pyart.retrieve.compute_differential_reflectivity_iq": [[441, "pyart-retrieve-compute-differential-reflectivity-iq"], [1084, "pyart-retrieve-compute-differential-reflectivity-iq"]], "pyart.retrieve.compute_evp": [[442, "pyart-retrieve-compute-evp"], [1085, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_iq": [[443, "pyart-retrieve-compute-iq"], [1086, "pyart-retrieve-compute-iq"]], "pyart.retrieve.compute_l": [[444, "pyart-retrieve-compute-l"], [1087, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_mean_phase_iq": [[445, "pyart-retrieve-compute-mean-phase-iq"], [1088, "pyart-retrieve-compute-mean-phase-iq"]], "pyart.retrieve.compute_noise_power": [[446, "pyart-retrieve-compute-noise-power"], [1089, "pyart-retrieve-compute-noise-power"]], "pyart.retrieve.compute_noisedBZ": [[447, "pyart-retrieve-compute-noisedbz"], [1090, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_pol_variables": [[448, "pyart-retrieve-compute-pol-variables"], [1091, "pyart-retrieve-compute-pol-variables"]], "pyart.retrieve.compute_pol_variables_iq": [[449, "pyart-retrieve-compute-pol-variables-iq"], [1092, "pyart-retrieve-compute-pol-variables-iq"]], "pyart.retrieve.compute_qvp": [[450, "pyart-retrieve-compute-qvp"], [1093, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_radial_noise_hs": [[451, "pyart-retrieve-compute-radial-noise-hs"], [1094, "pyart-retrieve-compute-radial-noise-hs"]], "pyart.retrieve.compute_radial_noise_ivic": [[452, "pyart-retrieve-compute-radial-noise-ivic"], [1095, "pyart-retrieve-compute-radial-noise-ivic"]], "pyart.retrieve.compute_rcs": [[453, "pyart-retrieve-compute-rcs"], [1096, "pyart-retrieve-compute-rcs"]], "pyart.retrieve.compute_rcs_from_pr": [[454, "pyart-retrieve-compute-rcs-from-pr"], [1097, "pyart-retrieve-compute-rcs-from-pr"]], "pyart.retrieve.compute_refl_from_zdr": [[455, "pyart-retrieve-compute-refl-from-zdr"], [1098, "pyart-retrieve-compute-refl-from-zdr"]], "pyart.retrieve.compute_reflectivity": [[456, "pyart-retrieve-compute-reflectivity"], [1099, "pyart-retrieve-compute-reflectivity"]], "pyart.retrieve.compute_reflectivity_iq": [[457, "pyart-retrieve-compute-reflectivity-iq"], [1100, "pyart-retrieve-compute-reflectivity-iq"]], "pyart.retrieve.compute_rhohv": [[458, "pyart-retrieve-compute-rhohv"], [1101, "pyart-retrieve-compute-rhohv"]], "pyart.retrieve.compute_rhohv_iq": [[459, "pyart-retrieve-compute-rhohv-iq"], [1102, "pyart-retrieve-compute-rhohv-iq"]], "pyart.retrieve.compute_rqvp": [[460, "pyart-retrieve-compute-rqvp"], [1103, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_signal_power": [[461, "pyart-retrieve-compute-signal-power"], [1104, "pyart-retrieve-compute-signal-power"]], "pyart.retrieve.compute_snr": [[462, "pyart-retrieve-compute-snr"], [1105, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_spectra": [[463, "pyart-retrieve-compute-spectra"], [1106, "pyart-retrieve-compute-spectra"]], "pyart.retrieve.compute_spectral_differential_phase": [[464, "pyart-retrieve-compute-spectral-differential-phase"], [1107, "pyart-retrieve-compute-spectral-differential-phase"]], "pyart.retrieve.compute_spectral_differential_reflectivity": [[465, "pyart-retrieve-compute-spectral-differential-reflectivity"], [1108, "pyart-retrieve-compute-spectral-differential-reflectivity"]], "pyart.retrieve.compute_spectral_noise": [[466, "pyart-retrieve-compute-spectral-noise"], [1109, "pyart-retrieve-compute-spectral-noise"]], "pyart.retrieve.compute_spectral_phase": [[467, "pyart-retrieve-compute-spectral-phase"], [1110, "pyart-retrieve-compute-spectral-phase"]], "pyart.retrieve.compute_spectral_power": [[468, "pyart-retrieve-compute-spectral-power"], [1111, "pyart-retrieve-compute-spectral-power"]], "pyart.retrieve.compute_spectral_reflectivity": [[469, "pyart-retrieve-compute-spectral-reflectivity"], [1112, "pyart-retrieve-compute-spectral-reflectivity"]], "pyart.retrieve.compute_spectral_rhohv": [[470, "pyart-retrieve-compute-spectral-rhohv"], [1113, "pyart-retrieve-compute-spectral-rhohv"]], "pyart.retrieve.compute_st1_iq": [[471, "pyart-retrieve-compute-st1-iq"], [1114, "pyart-retrieve-compute-st1-iq"]], "pyart.retrieve.compute_st2_iq": [[472, "pyart-retrieve-compute-st2-iq"], [1115, "pyart-retrieve-compute-st2-iq"]], "pyart.retrieve.compute_svp": [[473, "pyart-retrieve-compute-svp"], [1116, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[474, "pyart-retrieve-compute-ts-along-coord"], [1117, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vol_refl": [[475, "pyart-retrieve-compute-vol-refl"], [1118, "pyart-retrieve-compute-vol-refl"]], "pyart.retrieve.compute_vp": [[476, "pyart-retrieve-compute-vp"], [1119, "pyart-retrieve-compute-vp"]], "pyart.retrieve.compute_wbn_iq": [[477, "pyart-retrieve-compute-wbn-iq"], [1120, "pyart-retrieve-compute-wbn-iq"]], "pyart.retrieve.conv_strat_raut": [[478, "pyart-retrieve-conv-strat-raut"], [1121, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[479, "pyart-retrieve-conv-strat-yuter"], [1122, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.data_for_centroids": [[480, "pyart-retrieve-data-for-centroids"], [1123, "pyart-retrieve-data-for-centroids"]], "pyart.retrieve.dealias_spectra": [[481, "pyart-retrieve-dealias-spectra"], [1124, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.detect_ml": [[482, "pyart-retrieve-detect-ml"], [1125, "pyart-retrieve-detect-ml"]], "Paremeters": [[482, "paremeters"], [1125, "paremeters"]], "pyart.retrieve.determine_medoids": [[483, "pyart-retrieve-determine-medoids"], [1126, "pyart-retrieve-determine-medoids"]], "pyart.retrieve.est_rain_rate_a": [[484, "pyart-retrieve-est-rain-rate-a"], [1127, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[485, "pyart-retrieve-est-rain-rate-hydro"], [1128, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[486, "pyart-retrieve-est-rain-rate-kdp"], [1129, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[487, "pyart-retrieve-est-rain-rate-z"], [1130, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[488, "pyart-retrieve-est-rain-rate-za"], [1131, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[489, "pyart-retrieve-est-rain-rate-zkdp"], [1132, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[490, "pyart-retrieve-est-rain-rate-zpoly"], [1133, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.est_vertical_windshear": [[491, "pyart-retrieve-est-vertical-windshear"], [1134, "pyart-retrieve-est-vertical-windshear"]], "pyart.retrieve.est_vertical_windshear_lidar": [[492, "pyart-retrieve-est-vertical-windshear-lidar"], [1135, "pyart-retrieve-est-vertical-windshear-lidar"]], "pyart.retrieve.est_wind_profile": [[493, "pyart-retrieve-est-wind-profile"], [1136, "pyart-retrieve-est-wind-profile"]], "pyart.retrieve.est_wind_vel": [[494, "pyart-retrieve-est-wind-vel"], [1137, "pyart-retrieve-est-wind-vel"]], "pyart.retrieve.feature_detection": [[495, "pyart-retrieve-feature-detection"], [1138, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[496, "pyart-retrieve-fetch-radar-time-profile"], [1139, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.gecsx": [[497, "pyart-retrieve-gecsx"], [1140, "pyart-retrieve-gecsx"]], "pyart.retrieve.get_coeff_attg": [[498, "pyart-retrieve-get-coeff-attg"], [1141, "pyart-retrieve-get-coeff-attg"]], "pyart.retrieve.get_freq_band": [[499, "pyart-retrieve-get-freq-band"], [1142, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.get_iso0_val": [[500, "pyart-retrieve-get-iso0-val"], [1143, "pyart-retrieve-get-iso0-val"]], "pyart.retrieve.get_ml_rng_limits": [[501, "pyart-retrieve-get-ml-rng-limits"], [1144, "pyart-retrieve-get-ml-rng-limits"]], "pyart.retrieve.grid_displacement_pc": [[502, "pyart-retrieve-grid-displacement-pc"], [1145, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[503, "pyart-retrieve-grid-shift"], [1146, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[504, "pyart-retrieve-hydroclass-semisupervised"], [1147, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_leastsquare_double_window": [[505, "pyart-retrieve-kdp-leastsquare-double-window"], [1148, "pyart-retrieve-kdp-leastsquare-double-window"]], "pyart.retrieve.kdp_leastsquare_single_window": [[506, "pyart-retrieve-kdp-leastsquare-single-window"], [1149, "pyart-retrieve-kdp-leastsquare-single-window"]], "pyart.retrieve.kdp_maesaka": [[507, "pyart-retrieve-kdp-maesaka"], [1150, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[508, "pyart-retrieve-kdp-schneebeli"], [1151, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[509, "pyart-retrieve-kdp-vulpiani"], [1152, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[510, "pyart-retrieve-map-profile-to-gates"], [1153, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.melting_layer_giangrande": [[511, "pyart-retrieve-melting-layer-giangrande"], [1154, "pyart-retrieve-melting-layer-giangrande"]], "pyart.retrieve.melting_layer_hydroclass": [[512, "pyart-retrieve-melting-layer-hydroclass"], [1155, "pyart-retrieve-melting-layer-hydroclass"]], "pyart.retrieve.melting_layer_mf": [[513, "pyart-retrieve-melting-layer-mf"], [1156, "pyart-retrieve-melting-layer-mf"]], "pyart.retrieve.quasi_vertical_profile": [[514, "pyart-retrieve-quasi-vertical-profile"], [1157, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.select_samples": [[515, "pyart-retrieve-select-samples"], [1158, "pyart-retrieve-select-samples"]], "pyart.retrieve.steiner_conv_strat": [[516, "pyart-retrieve-steiner-conv-strat"], [1159, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.synthetic_obs_distribution": [[517, "pyart-retrieve-synthetic-obs-distribution"], [1160, "pyart-retrieve-synthetic-obs-distribution"]], "pyart.retrieve.vad_browning": [[518, "pyart-retrieve-vad-browning"], [1162, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[519, "pyart-retrieve-vad-michelson"], [1163, "pyart-retrieve-vad-michelson"]], "pyart.util.EPOCH_UNITS": [[520, "pyart-util-epoch-units"]], "pyart.util.angular_mean": [[521, "pyart-util-angular-mean"], [1251, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[522, "pyart-util-angular-mean-deg"], [1252, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[523, "pyart-util-angular-std"], [1253, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[524, "pyart-util-angular-std-deg"], [1254, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[525, "pyart-util-angular-texture-2d"], [1255, "pyart-util-angular-texture-2d"]], "pyart.util.colocated_gates": [[526, "pyart-util-colocated-gates"], [1256, "pyart-util-colocated-gates"]], "pyart.util.colocated_gates2": [[527, "pyart-util-colocated-gates2"], [1257, "pyart-util-colocated-gates2"]], "pyart.util.compute_azimuthal_average": [[528, "pyart-util-compute-azimuthal-average"], [1258, "pyart-util-compute-azimuthal-average"]], "pyart.util.compute_corr": [[529, "pyart-util-compute-corr"], [1259, "pyart-util-compute-corr"]], "pyart.util.compute_directional_stats": [[530, "pyart-util-compute-directional-stats"], [1260, "pyart-util-compute-directional-stats"]], "pyart.util.compute_mse": [[531, "pyart-util-compute-mse"], [1261, "pyart-util-compute-mse"]], "pyart.util.compute_nse": [[532, "pyart-util-compute-nse"], [1262, "pyart-util-compute-nse"]], "pyart.util.cross_section_ppi": [[533, "pyart-util-cross-section-ppi"], [1263, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[534, "pyart-util-cross-section-rhi"], [1264, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[535, "pyart-util-datetime-from-dataset"], [1265, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[536, "pyart-util-datetime-from-grid"], [1266, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[537, "pyart-util-datetime-from-radar"], [1267, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[538, "pyart-util-datetimes-from-dataset"], [1268, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[539, "pyart-util-datetimes-from-radar"], [1269, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[540, "pyart-util-determine-sweeps"], [1270, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[541, "pyart-util-estimate-noise-hs74"], [1271, "pyart-util-estimate-noise-hs74"]], "pyart.util.estimate_noise_ivic13": [[542, "pyart-util-estimate-noise-ivic13"], [1272, "pyart-util-estimate-noise-ivic13"]], "pyart.util.find_neighbour_gates": [[543, "pyart-util-find-neighbour-gates"], [1273, "pyart-util-find-neighbour-gates"]], "pyart.util.for_azimuth": [[544, "pyart-util-for-azimuth"], [1274, "pyart-util-for-azimuth"]], "Assumptions": [[544, "assumptions"], [570, "assumptions"], [1274, "assumptions"], [1300, "assumptions"]], "pyart.util.get_column_rays": [[545, "pyart-util-get-column-rays"], [1275, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[546, "pyart-util-get-field-location"], [1276, "pyart-util-get-field-location"]], "pyart.util.get_ivic_flat_reg_var_max": [[547, "pyart-util-get-ivic-flat-reg-var-max"], [1277, "pyart-util-get-ivic-flat-reg-var-max"]], "pyart.util.get_ivic_pct": [[548, "pyart-util-get-ivic-pct"], [1278, "pyart-util-get-ivic-pct"]], "pyart.util.get_ivic_snr_thr": [[549, "pyart-util-get-ivic-snr-thr"], [1279, "pyart-util-get-ivic-snr-thr"]], "pyart.util.get_target_elevations": [[550, "pyart-util-get-target-elevations"], [1280, "pyart-util-get-target-elevations"]], "pyart.util.grid_texture_2d": [[551, "pyart-util-grid-texture-2d"], [1281, "pyart-util-grid-texture-2d"]], "pyart.util.image_mute_radar": [[552, "pyart-util-image-mute-radar"], [1282, "pyart-util-image-mute-radar"]], "pyart.util.interpol_spectra": [[553, "pyart-util-interpol-spectra"], [1283, "pyart-util-interpol-spectra"]], "pyart.util.intersection": [[554, "pyart-util-intersection"], [1284, "pyart-util-intersection"]], "pyart.util.interval_mean": [[555, "pyart-util-interval-mean"], [1285, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[556, "pyart-util-interval-std"], [1286, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[557, "pyart-util-is-vpt"], [1287, "pyart-util-is-vpt"]], "pyart.util.ivic_flat_reg_var_max_table": [[558, "pyart-util-ivic-flat-reg-var-max-table"], [1288, "pyart-util-ivic-flat-reg-var-max-table"]], "pyart.util.ivic_flat_reg_wind_len_table": [[559, "pyart-util-ivic-flat-reg-wind-len-table"], [1289, "pyart-util-ivic-flat-reg-wind-len-table"]], "pyart.util.ivic_pct_table": [[560, "pyart-util-ivic-pct-table"], [1290, "pyart-util-ivic-pct-table"]], "pyart.util.ivic_snr_thr_table": [[561, "pyart-util-ivic-snr-thr-table"], [1291, "pyart-util-ivic-snr-thr-table"]], "pyart.util.join_radar": [[562, "pyart-util-join-radar"], [1292, "pyart-util-join-radar"]], "pyart.util.join_spectra": [[563, "pyart-util-join-spectra"], [1293, "pyart-util-join-spectra"]], "pyart.util.ma_broadcast_to": [[564, "pyart-util-ma-broadcast-to"], [1294, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[565, "pyart-util-mean-of-two-angles"], [1295, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[566, "pyart-util-mean-of-two-angles-deg"], [1296, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.radar_from_spectra": [[567, "pyart-util-radar-from-spectra"], [1297, "pyart-util-radar-from-spectra"]], "pyart.util.rolling_window": [[568, "pyart-util-rolling-window"], [1298, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[569, "pyart-util-simulated-vel-from-profile"], [1299, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[570, "pyart-util-sphere-distance"], [1300, "pyart-util-sphere-distance"]], "Parameter": [[570, "parameter"], [1300, "parameter"]], "pyart.util.subset_radar": [[571, "pyart-util-subset-radar"], [1301, "pyart-util-subset-radar"]], "pyart.util.subset_radar_spectra": [[572, "pyart-util-subset-radar-spectra"], [1302, "pyart-util-subset-radar-spectra"]], "pyart.util.texture": [[573, "pyart-util-texture"], [1303, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[574, "pyart-util-texture-along-ray"], [1304, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[575, "pyart-util-to-vpt"], [1305, "pyart-util-to-vpt"]], "pyart._debug_info": [[576, "pyart-debug-info"]], "pyart.aux_io": [[577, "pyart-aux-io"]], "Auxiliary input and output (pyart.aux_io)": [[577, "auxiliary-input-and-output-pyart-aux-io"]], "Reading radar data": [[577, "reading-radar-data"], [1007, "reading-radar-data"]], "Writing radar data": [[577, "writing-radar-data"], [1007, "writing-radar-data"]], "Special use": [[577, "special-use"], [1007, "special-use"]], "pyart.aux_io.convert_data": [[578, "pyart-aux-io-convert-data"]], "pyart.aux_io.get_library": [[580, "pyart-aux-io-get-library"]], "pyart.aux_io.read_edge_netcdf": [[590, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_file_c": [[591, "pyart-aux-io-read-file-c"]], "pyart.aux_io.read_file_py": [[592, "pyart-aux-io-read-file-py"]], "pyart.aux_io.read_knmi_grid_h5": [[599, "pyart-aux-io-read-knmi-grid-h5"]], "pyart.aux_io.read_mch_vad": [[600, "pyart-aux-io-read-mch-vad"]], "pyart.aux_io.read_product_c": [[608, "pyart-aux-io-read-product-c"]], "pyart.aux_io.read_product_py": [[609, "pyart-aux-io-read-product-py"]], "pyart.aux_io.read_psr_cpi_header": [[610, "pyart-aux-io-read-psr-cpi-header"]], "pyart.aux_io.read_psr_header": [[611, "pyart-aux-io-read-psr-header"]], "pyart.aux_io.read_psr_spectra": [[612, "pyart-aux-io-read-psr-spectra"]], "pyart.aux_io.read_sinarame_h5": [[617, "pyart-aux-io-read-sinarame-h5"]], "pyart.bridge": [[625, "pyart-bridge"]], "Bridging to other toolkits (pyart.bridge)": [[625, "bridging-to-other-toolkits-pyart-bridge"]], "Phase functions": [[625, "phase-functions"]], "pyart.config": [[627, "pyart-config"], [627, "id1"]], "pyart.config.get_KE": [[632, "pyart-config-get-ke"]], "pyart.core": [[640, "pyart-core"]], "Core (pyart.core)": [[640, "core-pyart-core"]], "Core classes": [[640, "core-classes"]], "Coordinate transformations": [[640, "coordinate-transformations"]], "pyart.correct": [[722, "pyart-correct"]], "Radar Corrections (pyart.correct)": [[722, "radar-corrections-pyart-correct"]], "Velocity unfolding": [[722, "velocity-unfolding"]], "Attenuation": [[722, "attenuation"]], "Phase processing": [[722, "phase-processing"]], "Other corrections": [[722, "other-corrections"]], "Helper functions": [[722, "helper-functions"]], "pyart.correct.GateFilter": [[723, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[724, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[725, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[726, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[727, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[728, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[729, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[730, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[731, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[732, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[733, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[734, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[735, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[736, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[737, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[738, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[739, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[740, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[741, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[742, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[743, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[744, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[745, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[746, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[747, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[748, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[749, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[750, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[751, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[752, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[753, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[756, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[757, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.correct_visibility": [[759, "pyart-correct-correct-visibility"]], "pyart.correct.correct_vpr": [[760, "pyart-correct-correct-vpr"]], "pyart.correct.correct_vpr_spatialised": [[761, "pyart-correct-correct-vpr-spatialised"]], "pyart.correct.despeckle_field": [[765, "pyart-correct-despeckle-field"]], "pyart.correct.est_rhohv_rain": [[767, "pyart-correct-est-rhohv-rain"]], "pyart.correct.est_zdr_precip": [[768, "pyart-correct-est-zdr-precip"]], "pyart.correct.est_zdr_snow": [[769, "pyart-correct-est-zdr-snow"]], "pyart.correct.gauss_fit": [[771, "pyart-correct-gauss-fit"]], "pyart.correct.get_sun_hits": [[773, "pyart-correct-get-sun-hits"]], "pyart.correct.get_sun_hits_ivic": [[774, "pyart-correct-get-sun-hits-ivic"]], "pyart.correct.get_sun_hits_psr": [[775, "pyart-correct-get-sun-hits-psr"]], "pyart.correct.moment_based_gate_filter": [[776, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.retrieval_result": [[780, "pyart-correct-retrieval-result"]], "pyart.correct.selfconsistency_bias": [[782, "pyart-correct-selfconsistency-bias"]], "pyart.correct.selfconsistency_bias2": [[783, "pyart-correct-selfconsistency-bias2"]], "pyart.correct.selfconsistency_kdp_phidp": [[784, "pyart-correct-selfconsistency-kdp-phidp"]], "pyart.correct.sun_retrieval": [[792, "pyart-correct-sun-retrieval"]], "pyart.exceptions": [[793, "pyart-exceptions"], [793, "id1"]], "pyart.filters": [[794, "pyart-filters"]], "Filters (pyart.filters)": [[794, "filters-pyart-filters"]], "Filtering radar data": [[794, "filtering-radar-data"]], "pyart.graph": [[831, "pyart-graph"]], "Graphing (pyart.graph)": [[831, "graphing-pyart-graph"]], "Plotting radar data": [[831, "plotting-radar-data"]], "Plotting grid data": [[831, "plotting-grid-data"]], "pyart.graph.plot_convstrat_scheme": [[1006, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[1007, "pyart-io"]], "Input and output (pyart.io)": [[1007, "input-and-output-pyart-io"]], "Reading grid data": [[1007, "reading-grid-data"]], "Writing grid data": [[1007, "writing-grid-data"]], "Reading Sonde data": [[1007, "reading-sonde-data"]], "pyart.lazydict": [[1030, "pyart-lazydict"], [1030, "id1"]], "pyart.lazydict.MutableMapping": [[1044, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[1045, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[1046, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[1047, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[1048, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[1049, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[1050, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[1051, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[1052, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[1053, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[1054, "pyart-map"]], "pyart.map.GateMapper": [[1055, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[1056, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[1057, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[1058, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[1059, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[1060, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[1061, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[1062, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[1063, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[1064, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[1065, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[1066, "pyart-map-map-to-grid"]], "pyart.retrieve": [[1067, "pyart-retrieve"]], "Radar Retrievals (pyart.retrieve)": [[1067, "radar-retrievals-pyart-retrieve"]], "Composite Reflectivity": [[1067, "composite-reflectivity"]], "Melting Layer (ML) Detection": [[1067, "melting-layer-ml-detection"]], "KDP Processing": [[1067, "kdp-processing"]], "Echo Classification": [[1067, "echo-classification"]], "Gate ID": [[1067, "gate-id"]], "Simple Moment Calculations": [[1067, "simple-moment-calculations"]], "QPE (Quantitative Precipitation Estimation)": [[1067, "qpe-quantitative-precipitation-estimation"]], "Advection": [[1067, "advection"]], "Wind Estimation": [[1067, "wind-estimation"]], "VAD (Velocity Azimuth Display)": [[1067, "vad-velocity-azimuth-display"]], "QVP (Quasi Vertical Profile) Retrievals": [[1067, "qvp-quasi-vertical-profile-retrievals"]], "Spectra Processing": [[1067, "spectra-processing"]], "IQ Processing": [[1067, "iq-processing"]], "Visibility estimation": [[1067, "visibility-estimation"]], "pyart.retrieve.texture_of_complex_phase": [[1161, "pyart-retrieve-texture-of-complex-phase"]], "pyart.testing": [[1164, "pyart-testing"]], "pyart.testing.Grid": [[1165, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[1166, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[1167, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[1168, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[1169, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[1170, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[1171, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[1172, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[1173, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[1174, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[1175, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[1176, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[1177, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[1178, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[1179, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[1180, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[1181, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[1182, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[1183, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[1184, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[1185, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[1186, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[1187, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[1188, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[1189, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[1190, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[1191, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[1192, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[1193, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[1194, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[1195, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[1196, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[1197, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[1198, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[1199, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[1200, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[1201, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[1202, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[1203, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[1204, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[1205, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[1206, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.add_field": [[1207, "pyart-testing-radarspectra-add-field"]], "pyart.testing.RadarSpectra.add_field_like": [[1208, "pyart-testing-radarspectra-add-field-like"]], "pyart.testing.RadarSpectra.add_filter": [[1209, "pyart-testing-radarspectra-add-filter"]], "pyart.testing.RadarSpectra.check_field_exists": [[1210, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.extract_sweeps": [[1211, "pyart-testing-radarspectra-extract-sweeps"]], "pyart.testing.RadarSpectra.get_azimuth": [[1212, "pyart-testing-radarspectra-get-azimuth"]], "pyart.testing.RadarSpectra.get_elevation": [[1213, "pyart-testing-radarspectra-get-elevation"]], "pyart.testing.RadarSpectra.get_end": [[1214, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_field": [[1215, "pyart-testing-radarspectra-get-field"]], "pyart.testing.RadarSpectra.get_gate_area": [[1216, "pyart-testing-radarspectra-get-gate-area"]], "pyart.testing.RadarSpectra.get_gate_lat_lon_alt": [[1217, "pyart-testing-radarspectra-get-gate-lat-lon-alt"]], "pyart.testing.RadarSpectra.get_gate_x_y_z": [[1218, "pyart-testing-radarspectra-get-gate-x-y-z"]], "pyart.testing.RadarSpectra.get_nyquist_vel": [[1219, "pyart-testing-radarspectra-get-nyquist-vel"]], "pyart.testing.RadarSpectra.get_slice": [[1220, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[1221, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[1222, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.info": [[1223, "pyart-testing-radarspectra-info"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[1224, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[1225, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[1226, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[1227, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[1228, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[1229, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[1230, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[1231, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[1232, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[1233, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[1234, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.get_metadata": [[1235, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[1236, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[1237, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[1238, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[1239, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[1240, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[1241, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[1242, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[1243, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[1244, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[1245, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[1246, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[1247, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[1248, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[1249, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[1250, "pyart-util"]], "Circular Statistics": [[1250, "circular-statistics"]], "Datetime Utilities": [[1250, "datetime-utilities"]], "Column Section": [[1250, "column-section"]], "Cross Section": [[1250, "cross-section"]], "Noise estimation": [[1250, "noise-estimation"]], "Radar Utilities": [[1250, "radar-utilities"]], "Simulated Velocity": [[1250, "simulated-velocity"]], "Signal Mathematics": [[1250, "signal-mathematics"]], "API Manual": [[1306, "api-manual"]], "Changelog": [[1307, "changelog"]], "v1.9.2": [[1307, "v1-9-2"]], "v1.9.0": [[1307, "v1-9-0"]], "v1.8.9": [[1307, "v1-8-9"]], "v1.8.8": [[1307, "v1-8-8"]], "v1.8.7": [[1307, "v1-8-7"]], "v1.8.6": [[1307, "v1-8-6"]], "v1.8.5": [[1307, "v1-8-5"]], "v1.8.4": [[1307, "v1-8-4"]], "v1.8.3": [[1307, "v1-8-3"]], "v1.8.2": [[1307, "v1-8-2"]], "v1.8.1": [[1307, "v1-8-1"]], "v1.8": [[1307, "v1-8"]], "v1.7.1": [[1307, "v1-7-1"]], "v1.7": [[1307, "v1-7"]], "v1.6.4": [[1307, "v1-6-4"]], "New additions": [[1307, "new-additions"]], "v1.6.3": [[1307, "v1-6-3"]], "v1.6.2": [[1307, "v1-6-2"]], "v1.6.1": [[1307, "v1-6-1"]], "v1.6": [[1307, "v1-6"]], "Moment correction examples": [[1308, "moment-correction-examples"], [1312, "moment-correction-examples"]], "Correct reflectivity attenuation": [[1309, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[1310, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[1311, "computation-times"], [1316, "computation-times"], [1321, "computation-times"], [1340, "computation-times"], [1347, "computation-times"], [1348, "computation-times"], [1361, "computation-times"]], "Example Gallery": [[1312, "example-gallery"]], "Input/Output Examples": [[1312, "input-output-examples"], [1313, "input-output-examples"]], "Mapping examples": [[1312, "mapping-examples"], [1317, "mapping-examples"]], "Plotting examples": [[1312, "plotting-examples"], [1322, "plotting-examples"]], "Retrieval Examples": [[1312, "retrieval-examples"], [1341, "retrieval-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[1314, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[1314, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[1314, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[1315, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[1315, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[1318, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[1319, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[1320, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[1323, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[1324, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[1325, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[1326, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[1327, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[1328, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[1329, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[1330, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[1331, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[1332, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [1333, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[1334, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [1335, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[1336, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[1337, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[1338, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[1339, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[1342, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[1343, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[1344, "convective-stratiform-classification"]], "How the algorithm works": [[1344, "how-the-algorithm-works"]], "Examples": [[1344, "examples"]], "Summary of recommendations and best practices": [[1344, "summary-of-recommendations-and-best-practices"]], "References": [[1344, "references"]], "Calculate and Plot hydrometeor classification": [[1345, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[1346, "calculate-and-plot-vad-profile"]], "About the MeteoSwiss fork of Py-ART": [[1349, "about-the-meteoswiss-fork-of-py-art"]], "Citing Py-ART": [[1349, "citing-py-art"]], "What can Py-ART do?": [[1349, "what-can-py-art-do"]], "Short Courses": [[1349, "short-courses"]], "Install": [[1349, "install"], [1363, "install"]], "Dependencies": [[1349, "dependencies"]], "Optional Dependences": [[1349, "optional-dependences"]], "Getting help": [[1349, "getting-help"]], "Contributing": [[1349, "contributing"]], "Notebook Gallery": [[1350, "notebook-gallery"]], "Notebooks": [[1350, null]], "Creating a basic ingest of a NetCDF file": [[1351, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[1352, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[1353, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[1355, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[1356, "masking-data-with-py-art-gatefilters"]], "Reading MeteoSwiss Metranet data with Py-ART": [[1357, "reading-meteoswiss-metranet-data-with-py-art"]], "Reading Polar data": [[1357, "reading-polar-data"]], "Low-res data (MLx files)": [[1357, "low-res-data-mlx-files"]], "High-res data (MHx files)": [[1357, "high-res-data-mhx-files"]], "Reading other polar products": [[1357, "reading-other-polar-products"]], "Reading Cartesian products": [[1357, "reading-cartesian-products"]], "Processing of Doppler wind data from a Swiss volumetric scan": [[1358, "processing-of-doppler-wind-data-from-a-swiss-volumetric-scan"]], "Reading and dealiasing the data": [[1358, "reading-and-dealiasing-the-data"]], "CAPPI plots": [[1358, "cappi-plots"]], "Velocity azimuth display (VAD)": [[1358, "velocity-azimuth-display-vad"]], "Filtering and retrievals on raw Swiss C-band data": [[1359, "filtering-and-retrievals-on-raw-swiss-c-band-data"]], "Reading the data": [[1359, "reading-the-data"]], "Ground-clutter and noise removal": [[1359, "ground-clutter-and-noise-removal"]], "Attenuation correction": [[1359, "attenuation-correction"]], "KDP estimation": [[1359, "kdp-estimation"]], "Hydrometeor classification": [[1359, "hydrometeor-classification"]], "QPE": [[1359, "qpe"]], "The Py-ART Radar object and indexing": [[1360, "the-py-art-radar-object-and-indexing"]], "Installation": [[1362, "installation"]], "Required Dependencies": [[1362, "required-dependencies"]], "Optional Dependencies": [[1362, "optional-dependencies"]], "Obtaining the latest source": [[1362, "obtaining-the-latest-source"]], "Installing from Source": [[1362, "installing-from-source"]], "Frequently asked questions": [[1362, "frequently-asked-questions"]], "Contributor\u2019s Guide": [[1363, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[1363, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[1363, "important-links"]], "Citing": [[1363, "citing"]], "Resources": [[1363, "resources"]], "Code Style": [[1363, "code-style"]], "Python File Setup": [[1363, "python-file-setup"]], "Testing": [[1363, "testing"]], "GitHub": [[1363, "github"]], "Blog Posts": [[1363, "blog-posts"]], "User Guide": [[1364, "user-guide"]], "Setting up an Environment": [[1365, "setting-up-an-environment"]], "Anaconda": [[1365, "anaconda"]], "Setting a Channel": [[1365, "setting-a-channel"]], "Creating an Environment": [[1365, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[1365, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[1365, "more-information"]]}, "indexentries": {"extract_sweeps_skyecho() (in module pyart.aux_io)": [[0, "pyart.aux_io.extract_sweeps_skyecho"], [579, "pyart.aux_io.extract_sweeps_skyecho"]], "get_sweep_time_coverage() (in module pyart.aux_io)": [[1, "pyart.aux_io.get_sweep_time_coverage"], [581, "pyart.aux_io.get_sweep_time_coverage"]], "read_bin() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_bin"], [582, "pyart.aux_io.read_bin"]], "read_bin_mf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_bin_mf"], [583, "pyart.aux_io.read_bin_mf"]], "read_cartesian_metranet() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_cartesian_metranet"], [584, "pyart.aux_io.read_cartesian_metranet"]], "read_cf1() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_cf1"], [585, "pyart.aux_io.read_cf1"]], "read_cf1_cartesian() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_cf1_cartesian"], [586, "pyart.aux_io.read_cf1_cartesian"]], "read_cf1_cartesian_mf() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_cf1_cartesian_mf"], [587, "pyart.aux_io.read_cf1_cartesian_mf"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_d3r_gcpex_nc"], [588, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_dat_mf() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_dat_mf"], [589, "pyart.aux_io.read_dat_mf"]], "read_gamic() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_gamic"], [593, "pyart.aux_io.read_gamic"]], "read_gif() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_gif"], [594, "pyart.aux_io.read_gif"]], "read_grib() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_grib"], [595, "pyart.aux_io.read_grib"]], "read_hpl() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_hpl"], [596, "pyart.aux_io.read_hpl"]], "read_iq() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_iq"], [597, "pyart.aux_io.read_iq"]], "read_kazr() (in module pyart.aux_io)": [[15, "pyart.aux_io.read_kazr"], [598, "pyart.aux_io.read_kazr"]], "read_metranet() (in module pyart.aux_io)": [[16, "pyart.aux_io.read_metranet"], [601, "pyart.aux_io.read_metranet"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[17, "pyart.aux_io.read_noxp_iphex_nc"], [602, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_grid_h5() (in module pyart.aux_io)": [[18, "pyart.aux_io.read_odim_grid_h5"], [603, "pyart.aux_io.read_odim_grid_h5"]], "read_odim_h5() (in module pyart.aux_io)": [[19, "pyart.aux_io.read_odim_h5"], [604, "pyart.aux_io.read_odim_h5"]], "read_odim_vp_h5() (in module pyart.aux_io)": [[20, "pyart.aux_io.read_odim_vp_h5"], [605, "pyart.aux_io.read_odim_vp_h5"]], "read_pattern() (in module pyart.aux_io)": [[21, "pyart.aux_io.read_pattern"], [606, "pyart.aux_io.read_pattern"]], "read_png() (in module pyart.aux_io)": [[22, "pyart.aux_io.read_png"], [607, "pyart.aux_io.read_png"]], "read_radx() (in module pyart.aux_io)": [[23, "pyart.aux_io.read_radx"], [613, "pyart.aux_io.read_radx"]], "read_rainbow_psr() (in module pyart.aux_io)": [[24, "pyart.aux_io.read_rainbow_psr"], [614, "pyart.aux_io.read_rainbow_psr"]], "read_rainbow_psr_spectra() (in module pyart.aux_io)": [[25, "pyart.aux_io.read_rainbow_psr_spectra"], [615, "pyart.aux_io.read_rainbow_psr_spectra"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[26, "pyart.aux_io.read_rainbow_wrl"], [616, "pyart.aux_io.read_rainbow_wrl"]], "read_skyecho() (in module pyart.aux_io)": [[27, "pyart.aux_io.read_skyecho"], [618, "pyart.aux_io.read_skyecho"]], "read_spectra() (in module pyart.aux_io)": [[28, "pyart.aux_io.read_spectra"], [619, "pyart.aux_io.read_spectra"]], "read_swissbirdradar_spectra() (in module pyart.aux_io)": [[29, "pyart.aux_io.read_swissbirdradar_spectra"], [620, "pyart.aux_io.read_swissbirdradar_spectra"]], "write_odim_grid_h5() (in module pyart.aux_io)": [[30, "pyart.aux_io.write_odim_grid_h5"], [621, "pyart.aux_io.write_odim_grid_h5"]], "write_odim_h5() (in module pyart.aux_io)": [[31, "pyart.aux_io.write_odim_h5"], [622, "pyart.aux_io.write_odim_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[32, "pyart.aux_io.write_sinarame_cfradial"], [623, "pyart.aux_io.write_sinarame_cfradial"]], "write_spectra() (in module pyart.aux_io)": [[33, "pyart.aux_io.write_spectra"], [624, "pyart.aux_io.write_spectra"]], "texture_of_complex_phase() (in module pyart.bridge)": [[34, "pyart.bridge.texture_of_complex_phase"], [626, "pyart.bridge.texture_of_complex_phase"]], "filemetadata (class in pyart.config)": [[35, "pyart.config.FileMetadata"], [628, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[36, "pyart.config.FileMetadata.__call__"], [629, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[37, "pyart.config.FileMetadata.get_field_name"], [630, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[38, "pyart.config.FileMetadata.get_metadata"], [631, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[39, "pyart.config.get_field_colormap"], [633, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[40, "pyart.config.get_field_limits"], [634, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[41, "pyart.config.get_field_mapping"], [635, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[42, "pyart.config.get_field_name"], [636, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[43, "pyart.config.get_fillvalue"], [637, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[44, "pyart.config.get_metadata"], [638, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[45, "pyart.config.load_config"], [639, "pyart.config.load_config"]], "grid (class in pyart.core)": [[46, "pyart.core.Grid"], [641, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[47, "pyart.core.Grid.add_field"], [642, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[48, "pyart.core.Grid.get_point_longitude_latitude"], [643, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[49, "pyart.core.Grid.get_projparams"], [644, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[50, "pyart.core.Grid.init_point_altitude"], [645, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[51, "pyart.core.Grid.init_point_longitude_latitude"], [646, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[52, "pyart.core.Grid.init_point_x_y_z"], [647, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[53, "pyart.core.Grid.projection_proj"], [648, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[54, "pyart.core.Grid.to_xarray"], [649, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[55, "pyart.core.Grid.write"], [650, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[56, "pyart.core.HorizontalWindProfile"], [651, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[57, "pyart.core.HorizontalWindProfile.from_u_and_v"], [652, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[58, "pyart.core.HorizontalWindProfile.u_wind"], [653, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[59, "pyart.core.HorizontalWindProfile.v_wind"], [654, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[60, "pyart.core.Radar"], [655, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[61, "pyart.core.Radar.add_field"], [656, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[62, "pyart.core.Radar.add_field_like"], [657, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[63, "pyart.core.Radar.add_filter"], [658, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[64, "pyart.core.Radar.check_field_exists"], [659, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[65, "pyart.core.Radar.extract_sweeps"], [660, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[66, "pyart.core.Radar.get_azimuth"], [661, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[67, "pyart.core.Radar.get_elevation"], [662, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[68, "pyart.core.Radar.get_end"], [663, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[69, "pyart.core.Radar.get_field"], [664, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[70, "pyart.core.Radar.get_gate_area"], [665, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[71, "pyart.core.Radar.get_gate_lat_lon_alt"], [666, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[72, "pyart.core.Radar.get_gate_x_y_z"], [667, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[73, "pyart.core.Radar.get_nyquist_vel"], [668, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[74, "pyart.core.Radar.get_slice"], [669, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[75, "pyart.core.Radar.get_start"], [670, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[76, "pyart.core.Radar.get_start_end"], [671, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[77, "pyart.core.Radar.info"], [672, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[78, "pyart.core.Radar.init_gate_altitude"], [673, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[79, "pyart.core.Radar.init_gate_longitude_latitude"], [674, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[80, "pyart.core.Radar.init_gate_x_y_z"], [675, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[81, "pyart.core.Radar.init_rays_per_sweep"], [676, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[82, "pyart.core.Radar.iter_azimuth"], [677, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[83, "pyart.core.Radar.iter_elevation"], [678, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[84, "pyart.core.Radar.iter_end"], [679, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[85, "pyart.core.Radar.iter_field"], [680, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[86, "pyart.core.Radar.iter_slice"], [681, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[87, "pyart.core.Radar.iter_start"], [682, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[88, "pyart.core.Radar.iter_start_end"], [683, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[89, "pyart.core.RadarSpectra"], [684, "pyart.core.RadarSpectra"]], "add_field() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.add_field"], [685, "pyart.core.RadarSpectra.add_field"]], "add_field_like() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.add_field_like"], [686, "pyart.core.RadarSpectra.add_field_like"]], "add_filter() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.add_filter"], [687, "pyart.core.RadarSpectra.add_filter"]], "check_field_exists() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.check_field_exists"], [688, "pyart.core.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.extract_sweeps"], [689, "pyart.core.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.get_azimuth"], [690, "pyart.core.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.get_elevation"], [691, "pyart.core.RadarSpectra.get_elevation"]], "get_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.get_end"], [692, "pyart.core.RadarSpectra.get_end"]], "get_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.get_field"], [693, "pyart.core.RadarSpectra.get_field"]], "get_gate_area() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.get_gate_area"], [694, "pyart.core.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"], [695, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.get_gate_x_y_z"], [696, "pyart.core.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radarspectra method)": [[102, "pyart.core.RadarSpectra.get_nyquist_vel"], [697, "pyart.core.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.core.radarspectra method)": [[103, "pyart.core.RadarSpectra.get_slice"], [698, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[104, "pyart.core.RadarSpectra.get_start"], [699, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[105, "pyart.core.RadarSpectra.get_start_end"], [700, "pyart.core.RadarSpectra.get_start_end"]], "info() (pyart.core.radarspectra method)": [[106, "pyart.core.RadarSpectra.info"], [701, "pyart.core.RadarSpectra.info"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[107, "pyart.core.RadarSpectra.init_gate_altitude"], [702, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[108, "pyart.core.RadarSpectra.init_gate_longitude_latitude"], [703, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[109, "pyart.core.RadarSpectra.init_gate_x_y_z"], [704, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[110, "pyart.core.RadarSpectra.init_rays_per_sweep"], [705, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[111, "pyart.core.RadarSpectra.iter_azimuth"], [706, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[112, "pyart.core.RadarSpectra.iter_elevation"], [707, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[113, "pyart.core.RadarSpectra.iter_end"], [708, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[114, "pyart.core.RadarSpectra.iter_field"], [709, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[115, "pyart.core.RadarSpectra.iter_slice"], [710, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[116, "pyart.core.RadarSpectra.iter_start"], [711, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.iter_start_end"], [712, "pyart.core.RadarSpectra.iter_start_end"]], "antenna_to_cartesian() (in module pyart.core)": [[118, "pyart.core.antenna_to_cartesian"], [713, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_vectors_to_cartesian"], [714, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[120, "pyart.core.cartesian_to_antenna"], [715, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"], [716, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"], [717, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"], [718, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"], [719, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"], [720, "pyart.core.geographic_to_cartesian_aeqd"]], "wgs84_to_swissch1903() (in module pyart.core)": [[126, "pyart.core.wgs84_to_swissCH1903"], [721, "pyart.core.wgs84_to_swissCH1903"]], "compute_apparent_vpr() (in module pyart.correct)": [[127, "pyart.correct.compute_apparent_vpr"], [754, "pyart.correct.compute_apparent_vpr"]], "compute_theoretical_vpr() (in module pyart.correct)": [[128, "pyart.correct.compute_theoretical_vpr"], [755, "pyart.correct.compute_theoretical_vpr"]], "correct_sys_phase() (in module pyart.correct)": [[129, "pyart.correct.correct_sys_phase"], [758, "pyart.correct.correct_sys_phase"]], "dealias_fourdd() (in module pyart.correct)": [[130, "pyart.correct.dealias_fourdd"], [762, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[131, "pyart.correct.dealias_region_based"], [763, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[132, "pyart.correct.dealias_unwrap_phase"], [764, "pyart.correct.dealias_unwrap_phase"]], "det_sys_phase_ray() (in module pyart.correct)": [[133, "pyart.correct.det_sys_phase_ray"], [766, "pyart.correct.det_sys_phase_ray"]], "find_objects() (in module pyart.correct)": [[134, "pyart.correct.find_objects"], [770, "pyart.correct.find_objects"]], "get_mask_fzl() (in module pyart.correct)": [[135, "pyart.correct.get_mask_fzl"], [772, "pyart.correct.get_mask_fzl"]], "phase_proc_lp() (in module pyart.correct)": [[136, "pyart.correct.phase_proc_lp"], [777, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[137, "pyart.correct.phase_proc_lp_gf"], [778, "pyart.correct.phase_proc_lp_gf"]], "ptoa_to_sf() (in module pyart.correct)": [[138, "pyart.correct.ptoa_to_sf"], [779, "pyart.correct.ptoa_to_sf"]], "scanning_losses() (in module pyart.correct)": [[139, "pyart.correct.scanning_losses"], [781, "pyart.correct.scanning_losses"]], "smooth_masked() (in module pyart.correct)": [[140, "pyart.correct.smooth_masked"], [785, "pyart.correct.smooth_masked"]], "smooth_phidp_double_window() (in module pyart.correct)": [[141, "pyart.correct.smooth_phidp_double_window"], [786, "pyart.correct.smooth_phidp_double_window"]], "smooth_phidp_single_window() (in module pyart.correct)": [[142, "pyart.correct.smooth_phidp_single_window"], [787, "pyart.correct.smooth_phidp_single_window"]], "solar_flux_lookup() (in module pyart.correct)": [[143, "pyart.correct.solar_flux_lookup"], [788, "pyart.correct.solar_flux_lookup"]], "sun_position_mfr() (in module pyart.correct)": [[144, "pyart.correct.sun_position_mfr"], [789, "pyart.correct.sun_position_mfr"]], "sun_position_pysolar() (in module pyart.correct)": [[145, "pyart.correct.sun_position_pysolar"], [790, "pyart.correct.sun_position_pysolar"]], "sun_power() (in module pyart.correct)": [[146, "pyart.correct.sun_power"], [791, "pyart.correct.sun_power"]], "deprecatedattribute": [[147, "pyart.exceptions.DeprecatedAttribute"]], "deprecatedfunctionname": [[148, "pyart.exceptions.DeprecatedFunctionName"]], "missingoptionaldependency": [[149, "pyart.exceptions.MissingOptionalDependency"]], "_deprecated_alias() (in module pyart.exceptions)": [[150, "pyart.exceptions._deprecated_alias"]], "gatefilter (class in pyart.filters)": [[151, "pyart.filters.GateFilter"], [795, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[152, "pyart.filters.GateFilter.copy"], [796, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[153, "pyart.filters.GateFilter.exclude_above"], [797, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[154, "pyart.filters.GateFilter.exclude_all"], [798, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[155, "pyart.filters.GateFilter.exclude_below"], [799, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[156, "pyart.filters.GateFilter.exclude_equal"], [800, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[157, "pyart.filters.GateFilter.exclude_gates"], [801, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[158, "pyart.filters.GateFilter.exclude_inside"], [802, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[159, "pyart.filters.GateFilter.exclude_invalid"], [803, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[160, "pyart.filters.GateFilter.exclude_masked"], [804, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[161, "pyart.filters.GateFilter.exclude_none"], [805, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[162, "pyart.filters.GateFilter.exclude_not_equal"], [806, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[163, "pyart.filters.GateFilter.exclude_outside"], [807, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[164, "pyart.filters.GateFilter.exclude_transition"], [808, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[165, "pyart.filters.GateFilter.gate_excluded"], [809, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[166, "pyart.filters.GateFilter.gate_included"], [810, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[167, "pyart.filters.GateFilter.include_above"], [811, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[168, "pyart.filters.GateFilter.include_all"], [812, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[169, "pyart.filters.GateFilter.include_below"], [813, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[170, "pyart.filters.GateFilter.include_equal"], [814, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.include_gates"], [815, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.include_inside"], [816, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.include_none"], [817, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.include_not_equal"], [818, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.include_not_masked"], [819, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.include_not_transition"], [820, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.include_outside"], [821, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.include_valid"], [822, "pyart.filters.GateFilter.include_valid"]], "birds_gate_filter() (in module pyart.filters)": [[179, "pyart.filters.birds_gate_filter"], [823, "pyart.filters.birds_gate_filter"]], "class_based_gate_filter() (in module pyart.filters)": [[180, "pyart.filters.class_based_gate_filter"], [824, "pyart.filters.class_based_gate_filter"]], "iso0_based_gate_filter() (in module pyart.filters)": [[181, "pyart.filters.iso0_based_gate_filter"], [825, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[182, "pyart.filters.moment_and_texture_based_gate_filter"], [826, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[183, "pyart.filters.moment_based_gate_filter"], [827, "pyart.filters.moment_based_gate_filter"]], "snr_based_gate_filter() (in module pyart.filters)": [[184, "pyart.filters.snr_based_gate_filter"], [828, "pyart.filters.snr_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[185, "pyart.filters.temp_based_gate_filter"], [829, "pyart.filters.temp_based_gate_filter"]], "visibility_based_gate_filter() (in module pyart.filters)": [[186, "pyart.filters.visibility_based_gate_filter"], [830, "pyart.filters.visibility_based_gate_filter"]], "airborneradardisplay (class in pyart.graph)": [[187, "pyart.graph.AirborneRadarDisplay"], [832, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[188, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"], [833, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[189, "pyart.graph.AirborneRadarDisplay.generate_filename"], [834, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[190, "pyart.graph.AirborneRadarDisplay.generate_ray_title"], [835, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[191, "pyart.graph.AirborneRadarDisplay.generate_title"], [836, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[192, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"], [837, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.airborneradardisplay method)": [[193, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"], [838, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[194, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"], [839, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[195, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"], [840, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[196, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"], [841, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[197, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"], [842, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.airborneradardisplay method)": [[198, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"], [843, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[199, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"], [844, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.airborneradardisplay method)": [[200, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"], [845, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[201, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"], [846, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[202, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"], [847, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[203, "pyart.graph.AirborneRadarDisplay.plot"], [848, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[204, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"], [849, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[205, "pyart.graph.AirborneRadarDisplay.plot_colorbar"], [850, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"], [851, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[207, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"], [852, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[208, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"], [853, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.plot_label"], [854, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[210, "pyart.graph.AirborneRadarDisplay.plot_labels"], [855, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.plot_ppi"], [856, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[212, "pyart.graph.AirborneRadarDisplay.plot_range_ring"], [857, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.plot_range_rings"], [858, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.plot_ray"], [859, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.plot_rhi"], [860, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"], [861, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.plot_vpt"], [862, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot_xsection"], [863, "pyart.graph.AirborneRadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[219, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"], [864, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.set_limits"], [865, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[221, "pyart.graph.GridMapDisplay"], [866, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[222, "pyart.graph.GridMapDisplay.cartopy_coastlines"], [867, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[223, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"], [868, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[224, "pyart.graph.GridMapDisplay.cartopy_states"], [869, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[225, "pyart.graph.GridMapDisplay.generate_filename"], [870, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[226, "pyart.graph.GridMapDisplay.generate_grid_title"], [871, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[227, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"], [872, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[228, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"], [873, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[229, "pyart.graph.GridMapDisplay.plot_colorbar"], [874, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[230, "pyart.graph.GridMapDisplay.plot_cross_section"], [875, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_cross_section_level() (pyart.graph.gridmapdisplay method)": [[231, "pyart.graph.GridMapDisplay.plot_cross_section_level"], [876, "pyart.graph.GridMapDisplay.plot_cross_section_level"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[232, "pyart.graph.GridMapDisplay.plot_crosshairs"], [877, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[233, "pyart.graph.GridMapDisplay.plot_grid"], [878, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_grid_contour() (pyart.graph.gridmapdisplay method)": [[234, "pyart.graph.GridMapDisplay.plot_grid_contour"], [879, "pyart.graph.GridMapDisplay.plot_grid_contour"]], "plot_grid_raw() (pyart.graph.gridmapdisplay method)": [[235, "pyart.graph.GridMapDisplay.plot_grid_raw"], [880, "pyart.graph.GridMapDisplay.plot_grid_raw"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.plot_latitude_slice"], [881, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.plot_latitudinal_level"], [882, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.plot_longitude_slice"], [883, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.plot_longitudinal_level"], [884, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[240, "pyart.graph.GridMapDisplayBasemap"], [885, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[241, "pyart.graph.GridMapDisplayBasemap.generate_filename"], [886, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[242, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"], [887, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[243, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"], [888, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[244, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"], [889, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[245, "pyart.graph.GridMapDisplayBasemap.get_basemap"], [890, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[246, "pyart.graph.GridMapDisplayBasemap.plot_basemap"], [891, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[247, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"], [892, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[248, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"], [893, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[249, "pyart.graph.GridMapDisplayBasemap.plot_grid"], [894, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[250, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"], [895, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[251, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"], [896, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[252, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"], [897, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[253, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"], [898, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[254, "pyart.graph.RadarDisplay"], [899, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[255, "pyart.graph.RadarDisplay.generate_az_rhi_title"], [900, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[256, "pyart.graph.RadarDisplay.generate_filename"], [901, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[257, "pyart.graph.RadarDisplay.generate_ray_title"], [902, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[258, "pyart.graph.RadarDisplay.generate_title"], [903, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[259, "pyart.graph.RadarDisplay.generate_vpt_title"], [904, "pyart.graph.RadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radardisplay method)": [[260, "pyart.graph.RadarDisplay.generate_xsection_title"], [905, "pyart.graph.RadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[261, "pyart.graph.RadarDisplay.label_xaxis_r"], [906, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[262, "pyart.graph.RadarDisplay.label_xaxis_rays"], [907, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[263, "pyart.graph.RadarDisplay.label_xaxis_time"], [908, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[264, "pyart.graph.RadarDisplay.label_xaxis_x"], [909, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radardisplay method)": [[265, "pyart.graph.RadarDisplay.label_xaxis_xsection"], [910, "pyart.graph.RadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[266, "pyart.graph.RadarDisplay.label_yaxis_field"], [911, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radardisplay method)": [[267, "pyart.graph.RadarDisplay.label_yaxis_xsection"], [912, "pyart.graph.RadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[268, "pyart.graph.RadarDisplay.label_yaxis_y"], [913, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.label_yaxis_z"], [914, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[270, "pyart.graph.RadarDisplay.plot"], [915, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[271, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"], [916, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.plot_colorbar"], [917, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.plot_cr_raster"], [918, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[274, "pyart.graph.RadarDisplay.plot_cross_hair"], [919, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[275, "pyart.graph.RadarDisplay.plot_grid_lines"], [920, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.plot_label"], [921, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.plot_labels"], [922, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.plot_ppi"], [923, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[279, "pyart.graph.RadarDisplay.plot_range_ring"], [924, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.plot_range_rings"], [925, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[281, "pyart.graph.RadarDisplay.plot_ray"], [926, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.plot_rhi"], [927, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.plot_vpt"], [928, "pyart.graph.RadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot_xsection"], [929, "pyart.graph.RadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[285, "pyart.graph.RadarDisplay.set_aspect_ratio"], [930, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[286, "pyart.graph.RadarDisplay.set_limits"], [931, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[287, "pyart.graph.RadarMapDisplay"], [932, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[288, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"], [933, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[289, "pyart.graph.RadarMapDisplay.generate_filename"], [934, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[290, "pyart.graph.RadarMapDisplay.generate_ray_title"], [935, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[291, "pyart.graph.RadarMapDisplay.generate_title"], [936, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[292, "pyart.graph.RadarMapDisplay.generate_vpt_title"], [937, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplay method)": [[293, "pyart.graph.RadarMapDisplay.generate_xsection_title"], [938, "pyart.graph.RadarMapDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[294, "pyart.graph.RadarMapDisplay.label_xaxis_r"], [939, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[295, "pyart.graph.RadarMapDisplay.label_xaxis_rays"], [940, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[296, "pyart.graph.RadarMapDisplay.label_xaxis_time"], [941, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[297, "pyart.graph.RadarMapDisplay.label_xaxis_x"], [942, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"], [943, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[299, "pyart.graph.RadarMapDisplay.label_yaxis_field"], [944, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplay method)": [[300, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"], [945, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[301, "pyart.graph.RadarMapDisplay.label_yaxis_y"], [946, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.label_yaxis_z"], [947, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.plot"], [948, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"], [949, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.plot_colorbar"], [950, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.plot_cr_raster"], [951, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[307, "pyart.graph.RadarMapDisplay.plot_cross_hair"], [952, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[308, "pyart.graph.RadarMapDisplay.plot_grid_lines"], [953, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.plot_label"], [954, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.plot_labels"], [955, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.plot_line_geo"], [956, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.plot_line_xy"], [957, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.plot_point"], [958, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.plot_ppi"], [959, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_ppi_map"], [960, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_range_ring"], [961, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_range_rings"], [962, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_ray"], [963, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_rhi"], [964, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_vpt"], [965, "pyart.graph.RadarMapDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_xsection"], [966, "pyart.graph.RadarMapDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[322, "pyart.graph.RadarMapDisplay.set_aspect_ratio"], [967, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[323, "pyart.graph.RadarMapDisplay.set_limits"], [968, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[324, "pyart.graph.RadarMapDisplayBasemap"], [969, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[325, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"], [970, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[326, "pyart.graph.RadarMapDisplayBasemap.generate_filename"], [971, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[327, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"], [972, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[328, "pyart.graph.RadarMapDisplayBasemap.generate_title"], [973, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[329, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"], [974, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplaybasemap method)": [[330, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"], [975, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"], [976, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[332, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"], [977, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[333, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"], [978, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[334, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"], [979, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"], [980, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"], [981, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"], [982, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"], [983, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"], [984, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.plot"], [985, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"], [986, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[342, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"], [987, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"], [988, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"], [989, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"], [990, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_label"], [991, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_labels"], [992, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"], [993, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"], [994, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_point"], [995, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"], [996, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"], [997, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"], [998, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"], [999, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_ray"], [1000, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"], [1001, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"], [1002, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"], [1003, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[359, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"], [1004, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[360, "pyart.graph.RadarMapDisplayBasemap.set_limits"], [1005, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "make_time_unit_str() (in module pyart.io)": [[361, "pyart.io.make_time_unit_str"], [1008, "pyart.io.make_time_unit_str"]], "prepare_for_read() (in module pyart.io)": [[362, "pyart.io.prepare_for_read"], [1009, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[363, "pyart.io.read"], [1010, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[364, "pyart.io.read_arm_sonde"], [1011, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[365, "pyart.io.read_arm_sonde_vap"], [1012, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[366, "pyart.io.read_cfradial"], [1013, "pyart.io.read_cfradial"]], "read_cfradial2() (in module pyart.io)": [[367, "pyart.io.read_cfradial2"], [1014, "pyart.io.read_cfradial2"]], "read_chl() (in module pyart.io)": [[368, "pyart.io.read_chl"], [1015, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[369, "pyart.io.read_grid"], [1016, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[370, "pyart.io.read_grid_mdv"], [1017, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[371, "pyart.io.read_mdv"], [1018, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[372, "pyart.io.read_nexrad_archive"], [1019, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[373, "pyart.io.read_nexrad_cdm"], [1020, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[374, "pyart.io.read_nexrad_level3"], [1021, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[375, "pyart.io.read_rsl"], [1022, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[376, "pyart.io.read_sigmet"], [1023, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[377, "pyart.io.read_uf"], [1024, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[378, "pyart.io.write_cfradial"], [1025, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[379, "pyart.io.write_grid"], [1026, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[380, "pyart.io.write_grid_geotiff"], [1027, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[381, "pyart.io.write_grid_mdv"], [1028, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[382, "pyart.io.write_uf"], [1029, "pyart.io.write_uf"]], "lazyloaddict (class in pyart.lazydict)": [[383, "pyart.lazydict.LazyLoadDict"], [1031, "pyart.lazydict.LazyLoadDict"]], "__contains__() (pyart.lazydict.lazyloaddict method)": [[384, "pyart.lazydict.LazyLoadDict.__contains__"]], "__delattr__() (pyart.lazydict.lazyloaddict method)": [[385, "pyart.lazydict.LazyLoadDict.__delattr__"]], "__delitem__() (pyart.lazydict.lazyloaddict method)": [[386, "pyart.lazydict.LazyLoadDict.__delitem__"]], "__dir__() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.__dir__"]], "__eq__() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.__eq__"]], "__format__() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.__format__"]], "__ge__() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.__ge__"]], "__getattribute__() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.__getattribute__"]], "__getitem__() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.__getitem__"]], "__getstate__() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.__getstate__"]], "__gt__() (pyart.lazydict.lazyloaddict method)": [[394, "pyart.lazydict.LazyLoadDict.__gt__"]], "__init__() (pyart.lazydict.lazyloaddict method)": [[395, "pyart.lazydict.LazyLoadDict.__init__"]], "__init_subclass__() (pyart.lazydict.lazyloaddict method)": [[396, "pyart.lazydict.LazyLoadDict.__init_subclass__"]], "__iter__() (pyart.lazydict.lazyloaddict method)": [[397, "pyart.lazydict.LazyLoadDict.__iter__"]], "__le__() (pyart.lazydict.lazyloaddict method)": [[398, "pyart.lazydict.LazyLoadDict.__le__"]], "__len__() (pyart.lazydict.lazyloaddict method)": [[399, "pyart.lazydict.LazyLoadDict.__len__"]], "__lt__() (pyart.lazydict.lazyloaddict method)": [[400, "pyart.lazydict.LazyLoadDict.__lt__"]], "__ne__() (pyart.lazydict.lazyloaddict method)": [[401, "pyart.lazydict.LazyLoadDict.__ne__"]], "__new__() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.__new__"]], "__reduce__() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.__reduce__"]], "__reduce_ex__() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.__reduce_ex__"]], "__repr__() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.__repr__"]], "__setattr__() (pyart.lazydict.lazyloaddict method)": [[406, "pyart.lazydict.LazyLoadDict.__setattr__"]], "__setitem__() (pyart.lazydict.lazyloaddict method)": [[407, "pyart.lazydict.LazyLoadDict.__setitem__"]], "__sizeof__() (pyart.lazydict.lazyloaddict method)": [[408, "pyart.lazydict.LazyLoadDict.__sizeof__"]], "__str__() (pyart.lazydict.lazyloaddict method)": [[409, "pyart.lazydict.LazyLoadDict.__str__"]], "__subclasshook__() (pyart.lazydict.lazyloaddict class method)": [[410, "pyart.lazydict.LazyLoadDict.__subclasshook__"]], "clear() (pyart.lazydict.lazyloaddict method)": [[411, "pyart.lazydict.LazyLoadDict.clear"], [1032, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[412, "pyart.lazydict.LazyLoadDict.copy"], [1033, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[413, "pyart.lazydict.LazyLoadDict.get"], [1034, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[414, "pyart.lazydict.LazyLoadDict.has_key"], [1035, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[415, "pyart.lazydict.LazyLoadDict.items"], [1036, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[416, "pyart.lazydict.LazyLoadDict.keys"], [1037, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[417, "pyart.lazydict.LazyLoadDict.pop"], [1038, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[418, "pyart.lazydict.LazyLoadDict.popitem"], [1039, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[419, "pyart.lazydict.LazyLoadDict.set_lazy"], [1040, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[420, "pyart.lazydict.LazyLoadDict.setdefault"], [1041, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[421, "pyart.lazydict.LazyLoadDict.update"], [1042, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[422, "pyart.lazydict.LazyLoadDict.values"], [1043, "pyart.lazydict.LazyLoadDict.values"]], "_destandardize() (in module pyart.retrieve)": [[423, "pyart.retrieve._destandardize"]], "_get_res_vol_sides() (in module pyart.retrieve)": [[424, "pyart.retrieve._get_res_vol_sides"]], "atmospheric_gas_att() (in module pyart.retrieve)": [[425, "pyart.retrieve.atmospheric_gas_att"], [1068, "pyart.retrieve.atmospheric_gas_att"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[426, "pyart.retrieve.calculate_snr_from_reflectivity"], [1069, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[427, "pyart.retrieve.calculate_velocity_texture"], [1070, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[428, "pyart.retrieve.composite_reflectivity"], [1071, "pyart.retrieve.composite_reflectivity"]], "compute_doppler_velocity() (in module pyart.retrieve)": [[429, "pyart.retrieve.compute_Doppler_velocity"], [1072, "pyart.retrieve.compute_Doppler_velocity"]], "compute_doppler_velocity_iq() (in module pyart.retrieve)": [[430, "pyart.retrieve.compute_Doppler_velocity_iq"], [1073, "pyart.retrieve.compute_Doppler_velocity_iq"]], "compute_doppler_width() (in module pyart.retrieve)": [[431, "pyart.retrieve.compute_Doppler_width"], [1074, "pyart.retrieve.compute_Doppler_width"]], "compute_doppler_width_iq() (in module pyart.retrieve)": [[432, "pyart.retrieve.compute_Doppler_width_iq"], [1075, "pyart.retrieve.compute_Doppler_width_iq"]], "compute_apparent_profile() (in module pyart.retrieve)": [[433, "pyart.retrieve.compute_apparent_profile"], [1076, "pyart.retrieve.compute_apparent_profile"]], "compute_bird_density() (in module pyart.retrieve)": [[434, "pyart.retrieve.compute_bird_density"], [1077, "pyart.retrieve.compute_bird_density"]], "compute_ccor() (in module pyart.retrieve)": [[435, "pyart.retrieve.compute_ccor"], [1078, "pyart.retrieve.compute_ccor"]], "compute_cdr() (in module pyart.retrieve)": [[436, "pyart.retrieve.compute_cdr"], [1079, "pyart.retrieve.compute_cdr"]], "compute_centroids() (in module pyart.retrieve)": [[437, "pyart.retrieve.compute_centroids"], [1080, "pyart.retrieve.compute_centroids"]], "compute_differential_phase() (in module pyart.retrieve)": [[438, "pyart.retrieve.compute_differential_phase"], [1081, "pyart.retrieve.compute_differential_phase"]], "compute_differential_phase_iq() (in module pyart.retrieve)": [[439, "pyart.retrieve.compute_differential_phase_iq"], [1082, "pyart.retrieve.compute_differential_phase_iq"]], "compute_differential_reflectivity() (in module pyart.retrieve)": [[440, "pyart.retrieve.compute_differential_reflectivity"], [1083, "pyart.retrieve.compute_differential_reflectivity"]], "compute_differential_reflectivity_iq() (in module pyart.retrieve)": [[441, "pyart.retrieve.compute_differential_reflectivity_iq"], [1084, "pyart.retrieve.compute_differential_reflectivity_iq"]], "compute_evp() (in module pyart.retrieve)": [[442, "pyart.retrieve.compute_evp"], [1085, "pyart.retrieve.compute_evp"]], "compute_iq() (in module pyart.retrieve)": [[443, "pyart.retrieve.compute_iq"], [1086, "pyart.retrieve.compute_iq"]], "compute_l() (in module pyart.retrieve)": [[444, "pyart.retrieve.compute_l"], [1087, "pyart.retrieve.compute_l"]], "compute_mean_phase_iq() (in module pyart.retrieve)": [[445, "pyart.retrieve.compute_mean_phase_iq"], [1088, "pyart.retrieve.compute_mean_phase_iq"]], "compute_noise_power() (in module pyart.retrieve)": [[446, "pyart.retrieve.compute_noise_power"], [1089, "pyart.retrieve.compute_noise_power"]], "compute_noisedbz() (in module pyart.retrieve)": [[447, "pyart.retrieve.compute_noisedBZ"], [1090, "pyart.retrieve.compute_noisedBZ"]], "compute_pol_variables() (in module pyart.retrieve)": [[448, "pyart.retrieve.compute_pol_variables"], [1091, "pyart.retrieve.compute_pol_variables"]], "compute_pol_variables_iq() (in module pyart.retrieve)": [[449, "pyart.retrieve.compute_pol_variables_iq"], [1092, "pyart.retrieve.compute_pol_variables_iq"]], "compute_qvp() (in module pyart.retrieve)": [[450, "pyart.retrieve.compute_qvp"], [1093, "pyart.retrieve.compute_qvp"]], "compute_radial_noise_hs() (in module pyart.retrieve)": [[451, "pyart.retrieve.compute_radial_noise_hs"], [1094, "pyart.retrieve.compute_radial_noise_hs"]], "compute_radial_noise_ivic() (in module pyart.retrieve)": [[452, "pyart.retrieve.compute_radial_noise_ivic"], [1095, "pyart.retrieve.compute_radial_noise_ivic"]], "compute_rcs() (in module pyart.retrieve)": [[453, "pyart.retrieve.compute_rcs"], [1096, "pyart.retrieve.compute_rcs"]], "compute_rcs_from_pr() (in module pyart.retrieve)": [[454, "pyart.retrieve.compute_rcs_from_pr"], [1097, "pyart.retrieve.compute_rcs_from_pr"]], "compute_refl_from_zdr() (in module pyart.retrieve)": [[455, "pyart.retrieve.compute_refl_from_zdr"], [1098, "pyart.retrieve.compute_refl_from_zdr"]], "compute_reflectivity() (in module pyart.retrieve)": [[456, "pyart.retrieve.compute_reflectivity"], [1099, "pyart.retrieve.compute_reflectivity"]], "compute_reflectivity_iq() (in module pyart.retrieve)": [[457, "pyart.retrieve.compute_reflectivity_iq"], [1100, "pyart.retrieve.compute_reflectivity_iq"]], "compute_rhohv() (in module pyart.retrieve)": [[458, "pyart.retrieve.compute_rhohv"], [1101, "pyart.retrieve.compute_rhohv"]], "compute_rhohv_iq() (in module pyart.retrieve)": [[459, "pyart.retrieve.compute_rhohv_iq"], [1102, "pyart.retrieve.compute_rhohv_iq"]], "compute_rqvp() (in module pyart.retrieve)": [[460, "pyart.retrieve.compute_rqvp"], [1103, "pyart.retrieve.compute_rqvp"]], "compute_signal_power() (in module pyart.retrieve)": [[461, "pyart.retrieve.compute_signal_power"], [1104, "pyart.retrieve.compute_signal_power"]], "compute_snr() (in module pyart.retrieve)": [[462, "pyart.retrieve.compute_snr"], [1105, "pyart.retrieve.compute_snr"]], "compute_spectra() (in module pyart.retrieve)": [[463, "pyart.retrieve.compute_spectra"], [1106, "pyart.retrieve.compute_spectra"]], "compute_spectral_differential_phase() (in module pyart.retrieve)": [[464, "pyart.retrieve.compute_spectral_differential_phase"], [1107, "pyart.retrieve.compute_spectral_differential_phase"]], "compute_spectral_differential_reflectivity() (in module pyart.retrieve)": [[465, "pyart.retrieve.compute_spectral_differential_reflectivity"], [1108, "pyart.retrieve.compute_spectral_differential_reflectivity"]], "compute_spectral_noise() (in module pyart.retrieve)": [[466, "pyart.retrieve.compute_spectral_noise"], [1109, "pyart.retrieve.compute_spectral_noise"]], "compute_spectral_phase() (in module pyart.retrieve)": [[467, "pyart.retrieve.compute_spectral_phase"], [1110, "pyart.retrieve.compute_spectral_phase"]], "compute_spectral_power() (in module pyart.retrieve)": [[468, "pyart.retrieve.compute_spectral_power"], [1111, "pyart.retrieve.compute_spectral_power"]], "compute_spectral_reflectivity() (in module pyart.retrieve)": [[469, "pyart.retrieve.compute_spectral_reflectivity"], [1112, "pyart.retrieve.compute_spectral_reflectivity"]], "compute_spectral_rhohv() (in module pyart.retrieve)": [[470, "pyart.retrieve.compute_spectral_rhohv"], [1113, "pyart.retrieve.compute_spectral_rhohv"]], "compute_st1_iq() (in module pyart.retrieve)": [[471, "pyart.retrieve.compute_st1_iq"], [1114, "pyart.retrieve.compute_st1_iq"]], "compute_st2_iq() (in module pyart.retrieve)": [[472, "pyart.retrieve.compute_st2_iq"], [1115, "pyart.retrieve.compute_st2_iq"]], "compute_svp() (in module pyart.retrieve)": [[473, "pyart.retrieve.compute_svp"], [1116, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[474, "pyart.retrieve.compute_ts_along_coord"], [1117, "pyart.retrieve.compute_ts_along_coord"]], "compute_vol_refl() (in module pyart.retrieve)": [[475, "pyart.retrieve.compute_vol_refl"], [1118, "pyart.retrieve.compute_vol_refl"]], "compute_vp() (in module pyart.retrieve)": [[476, "pyart.retrieve.compute_vp"], [1119, "pyart.retrieve.compute_vp"]], "compute_wbn_iq() (in module pyart.retrieve)": [[477, "pyart.retrieve.compute_wbn_iq"], [1120, "pyart.retrieve.compute_wbn_iq"]], "conv_strat_raut() (in module pyart.retrieve)": [[478, "pyart.retrieve.conv_strat_raut"], [1121, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[479, "pyart.retrieve.conv_strat_yuter"], [1122, "pyart.retrieve.conv_strat_yuter"]], "data_for_centroids() (in module pyart.retrieve)": [[480, "pyart.retrieve.data_for_centroids"], [1123, "pyart.retrieve.data_for_centroids"]], "dealias_spectra() (in module pyart.retrieve)": [[481, "pyart.retrieve.dealias_spectra"], [1124, "pyart.retrieve.dealias_spectra"]], "detect_ml() (in module pyart.retrieve)": [[482, "pyart.retrieve.detect_ml"], [1125, "pyart.retrieve.detect_ml"]], "determine_medoids() (in module pyart.retrieve)": [[483, "pyart.retrieve.determine_medoids"], [1126, "pyart.retrieve.determine_medoids"]], "est_rain_rate_a() (in module pyart.retrieve)": [[484, "pyart.retrieve.est_rain_rate_a"], [1127, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[485, "pyart.retrieve.est_rain_rate_hydro"], [1128, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[486, "pyart.retrieve.est_rain_rate_kdp"], [1129, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[487, "pyart.retrieve.est_rain_rate_z"], [1130, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[488, "pyart.retrieve.est_rain_rate_za"], [1131, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[489, "pyart.retrieve.est_rain_rate_zkdp"], [1132, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[490, "pyart.retrieve.est_rain_rate_zpoly"], [1133, "pyart.retrieve.est_rain_rate_zpoly"]], "est_vertical_windshear() (in module pyart.retrieve)": [[491, "pyart.retrieve.est_vertical_windshear"], [1134, "pyart.retrieve.est_vertical_windshear"]], "est_vertical_windshear_lidar() (in module pyart.retrieve)": [[492, "pyart.retrieve.est_vertical_windshear_lidar"], [1135, "pyart.retrieve.est_vertical_windshear_lidar"]], "est_wind_profile() (in module pyart.retrieve)": [[493, "pyart.retrieve.est_wind_profile"], [1136, "pyart.retrieve.est_wind_profile"]], "est_wind_vel() (in module pyart.retrieve)": [[494, "pyart.retrieve.est_wind_vel"], [1137, "pyart.retrieve.est_wind_vel"]], "feature_detection() (in module pyart.retrieve)": [[495, "pyart.retrieve.feature_detection"], [1138, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[496, "pyart.retrieve.fetch_radar_time_profile"], [1139, "pyart.retrieve.fetch_radar_time_profile"]], "gecsx() (in module pyart.retrieve)": [[497, "pyart.retrieve.gecsx"], [1140, "pyart.retrieve.gecsx"]], "get_coeff_attg() (in module pyart.retrieve)": [[498, "pyart.retrieve.get_coeff_attg"], [1141, "pyart.retrieve.get_coeff_attg"]], "get_freq_band() (in module pyart.retrieve)": [[499, "pyart.retrieve.get_freq_band"], [1142, "pyart.retrieve.get_freq_band"]], "get_iso0_val() (in module pyart.retrieve)": [[500, "pyart.retrieve.get_iso0_val"], [1143, "pyart.retrieve.get_iso0_val"]], "get_ml_rng_limits() (in module pyart.retrieve)": [[501, "pyart.retrieve.get_ml_rng_limits"], [1144, "pyart.retrieve.get_ml_rng_limits"]], "grid_displacement_pc() (in module pyart.retrieve)": [[502, "pyart.retrieve.grid_displacement_pc"], [1145, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[503, "pyart.retrieve.grid_shift"], [1146, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[504, "pyart.retrieve.hydroclass_semisupervised"], [1147, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_leastsquare_double_window() (in module pyart.retrieve)": [[505, "pyart.retrieve.kdp_leastsquare_double_window"], [1148, "pyart.retrieve.kdp_leastsquare_double_window"]], "kdp_leastsquare_single_window() (in module pyart.retrieve)": [[506, "pyart.retrieve.kdp_leastsquare_single_window"], [1149, "pyart.retrieve.kdp_leastsquare_single_window"]], "kdp_maesaka() (in module pyart.retrieve)": [[507, "pyart.retrieve.kdp_maesaka"], [1150, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[508, "pyart.retrieve.kdp_schneebeli"], [1151, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[509, "pyart.retrieve.kdp_vulpiani"], [1152, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[510, "pyart.retrieve.map_profile_to_gates"], [1153, "pyart.retrieve.map_profile_to_gates"]], "melting_layer_giangrande() (in module pyart.retrieve)": [[511, "pyart.retrieve.melting_layer_giangrande"], [1154, "pyart.retrieve.melting_layer_giangrande"]], "melting_layer_hydroclass() (in module pyart.retrieve)": [[512, "pyart.retrieve.melting_layer_hydroclass"], [1155, "pyart.retrieve.melting_layer_hydroclass"]], "melting_layer_mf() (in module pyart.retrieve)": [[513, "pyart.retrieve.melting_layer_mf"], [1156, "pyart.retrieve.melting_layer_mf"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[514, "pyart.retrieve.quasi_vertical_profile"], [1157, "pyart.retrieve.quasi_vertical_profile"]], "select_samples() (in module pyart.retrieve)": [[515, "pyart.retrieve.select_samples"], [1158, "pyart.retrieve.select_samples"]], "steiner_conv_strat() (in module pyart.retrieve)": [[516, "pyart.retrieve.steiner_conv_strat"], [1159, "pyart.retrieve.steiner_conv_strat"]], "synthetic_obs_distribution() (in module pyart.retrieve)": [[517, "pyart.retrieve.synthetic_obs_distribution"], [1160, "pyart.retrieve.synthetic_obs_distribution"]], "vad_browning() (in module pyart.retrieve)": [[518, "pyart.retrieve.vad_browning"], [1162, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[519, "pyart.retrieve.vad_michelson"], [1163, "pyart.retrieve.vad_michelson"]], "epoch_units (in module pyart.util)": [[520, "pyart.util.EPOCH_UNITS"]], "angular_mean() (in module pyart.util)": [[521, "pyart.util.angular_mean"], [1251, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[522, "pyart.util.angular_mean_deg"], [1252, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[523, "pyart.util.angular_std"], [1253, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[524, "pyart.util.angular_std_deg"], [1254, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[525, "pyart.util.angular_texture_2d"], [1255, "pyart.util.angular_texture_2d"]], "colocated_gates() (in module pyart.util)": [[526, "pyart.util.colocated_gates"], [1256, "pyart.util.colocated_gates"]], "colocated_gates2() (in module pyart.util)": [[527, "pyart.util.colocated_gates2"], [1257, "pyart.util.colocated_gates2"]], "compute_azimuthal_average() (in module pyart.util)": [[528, "pyart.util.compute_azimuthal_average"], [1258, "pyart.util.compute_azimuthal_average"]], "compute_corr() (in module pyart.util)": [[529, "pyart.util.compute_corr"], [1259, "pyart.util.compute_corr"]], "compute_directional_stats() (in module pyart.util)": [[530, "pyart.util.compute_directional_stats"], [1260, "pyart.util.compute_directional_stats"]], "compute_mse() (in module pyart.util)": [[531, "pyart.util.compute_mse"], [1261, "pyart.util.compute_mse"]], "compute_nse() (in module pyart.util)": [[532, "pyart.util.compute_nse"], [1262, "pyart.util.compute_nse"]], "cross_section_ppi() (in module pyart.util)": [[533, "pyart.util.cross_section_ppi"], [1263, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[534, "pyart.util.cross_section_rhi"], [1264, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[535, "pyart.util.datetime_from_dataset"], [1265, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[536, "pyart.util.datetime_from_grid"], [1266, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[537, "pyart.util.datetime_from_radar"], [1267, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[538, "pyart.util.datetimes_from_dataset"], [1268, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[539, "pyart.util.datetimes_from_radar"], [1269, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[540, "pyart.util.determine_sweeps"], [1270, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[541, "pyart.util.estimate_noise_hs74"], [1271, "pyart.util.estimate_noise_hs74"]], "estimate_noise_ivic13() (in module pyart.util)": [[542, "pyart.util.estimate_noise_ivic13"], [1272, "pyart.util.estimate_noise_ivic13"]], "find_neighbour_gates() (in module pyart.util)": [[543, "pyart.util.find_neighbour_gates"], [1273, "pyart.util.find_neighbour_gates"]], "for_azimuth() (in module pyart.util)": [[544, "pyart.util.for_azimuth"], [1274, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[545, "pyart.util.get_column_rays"], [1275, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[546, "pyart.util.get_field_location"], [1276, "pyart.util.get_field_location"]], "get_ivic_flat_reg_var_max() (in module pyart.util)": [[547, "pyart.util.get_ivic_flat_reg_var_max"], [1277, "pyart.util.get_ivic_flat_reg_var_max"]], "get_ivic_pct() (in module pyart.util)": [[548, "pyart.util.get_ivic_pct"], [1278, "pyart.util.get_ivic_pct"]], "get_ivic_snr_thr() (in module pyart.util)": [[549, "pyart.util.get_ivic_snr_thr"], [1279, "pyart.util.get_ivic_snr_thr"]], "get_target_elevations() (in module pyart.util)": [[550, "pyart.util.get_target_elevations"], [1280, "pyart.util.get_target_elevations"]], "grid_texture_2d() (in module pyart.util)": [[551, "pyart.util.grid_texture_2d"], [1281, "pyart.util.grid_texture_2d"]], "image_mute_radar() (in module pyart.util)": [[552, "pyart.util.image_mute_radar"], [1282, "pyart.util.image_mute_radar"]], "interpol_spectra() (in module pyart.util)": [[553, "pyart.util.interpol_spectra"], [1283, "pyart.util.interpol_spectra"]], "intersection() (in module pyart.util)": [[554, "pyart.util.intersection"], [1284, "pyart.util.intersection"]], "interval_mean() (in module pyart.util)": [[555, "pyart.util.interval_mean"], [1285, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[556, "pyart.util.interval_std"], [1286, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[557, "pyart.util.is_vpt"], [1287, "pyart.util.is_vpt"]], "ivic_flat_reg_var_max_table() (in module pyart.util)": [[558, "pyart.util.ivic_flat_reg_var_max_table"], [1288, "pyart.util.ivic_flat_reg_var_max_table"]], "ivic_flat_reg_wind_len_table() (in module pyart.util)": [[559, "pyart.util.ivic_flat_reg_wind_len_table"], [1289, "pyart.util.ivic_flat_reg_wind_len_table"]], "ivic_pct_table() (in module pyart.util)": [[560, "pyart.util.ivic_pct_table"], [1290, "pyart.util.ivic_pct_table"]], "ivic_snr_thr_table() (in module pyart.util)": [[561, "pyart.util.ivic_snr_thr_table"], [1291, "pyart.util.ivic_snr_thr_table"]], "join_radar() (in module pyart.util)": [[562, "pyart.util.join_radar"], [1292, "pyart.util.join_radar"]], "join_spectra() (in module pyart.util)": [[563, "pyart.util.join_spectra"], [1293, "pyart.util.join_spectra"]], "ma_broadcast_to() (in module pyart.util)": [[564, "pyart.util.ma_broadcast_to"], [1294, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[565, "pyart.util.mean_of_two_angles"], [1295, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[566, "pyart.util.mean_of_two_angles_deg"], [1296, "pyart.util.mean_of_two_angles_deg"]], "radar_from_spectra() (in module pyart.util)": [[567, "pyart.util.radar_from_spectra"], [1297, "pyart.util.radar_from_spectra"]], "rolling_window() (in module pyart.util)": [[568, "pyart.util.rolling_window"], [1298, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[569, "pyart.util.simulated_vel_from_profile"], [1299, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[570, "pyart.util.sphere_distance"], [1300, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[571, "pyart.util.subset_radar"], [1301, "pyart.util.subset_radar"]], "subset_radar_spectra() (in module pyart.util)": [[572, "pyart.util.subset_radar_spectra"], [1302, "pyart.util.subset_radar_spectra"]], "texture() (in module pyart.util)": [[573, "pyart.util.texture"], [1303, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[574, "pyart.util.texture_along_ray"], [1304, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[575, "pyart.util.to_vpt"], [1305, "pyart.util.to_vpt"]], "_debug_info() (in module pyart)": [[576, "pyart._debug_info"]], "module": [[577, "module-pyart.aux_io"], [625, "module-pyart.bridge"], [627, "module-pyart.config"], [640, "module-pyart.core"], [722, "module-pyart.correct"], [793, "module-pyart.exceptions"], [794, "module-pyart.filters"], [831, "module-pyart.graph"], [1007, "module-pyart.io"], [1030, "module-pyart.lazydict"], [1054, "module-pyart.map"], [1067, "module-pyart.retrieve"], [1164, "module-pyart.testing"], [1250, "module-pyart.util"]], "pyart.aux_io": [[577, "module-pyart.aux_io"]], "convert_data() (in module pyart.aux_io)": [[578, "pyart.aux_io.convert_data"]], "get_library() (in module pyart.aux_io)": [[580, "pyart.aux_io.get_library"]], "read_edge_netcdf() (in module pyart.aux_io)": [[590, "pyart.aux_io.read_edge_netcdf"]], "read_file_c() (in module pyart.aux_io)": [[591, "pyart.aux_io.read_file_c"]], "read_file_py() (in module pyart.aux_io)": [[592, "pyart.aux_io.read_file_py"]], "read_knmi_grid_h5() (in module pyart.aux_io)": [[599, "pyart.aux_io.read_knmi_grid_h5"]], "read_mch_vad() (in module pyart.aux_io)": [[600, "pyart.aux_io.read_mch_vad"]], "read_product_c() (in module pyart.aux_io)": [[608, "pyart.aux_io.read_product_c"]], "read_product_py() (in module pyart.aux_io)": [[609, "pyart.aux_io.read_product_py"]], "read_psr_cpi_header() (in module pyart.aux_io)": [[610, "pyart.aux_io.read_psr_cpi_header"]], "read_psr_header() (in module pyart.aux_io)": [[611, "pyart.aux_io.read_psr_header"]], "read_psr_spectra() (in module pyart.aux_io)": [[612, "pyart.aux_io.read_psr_spectra"]], "read_sinarame_h5() (in module pyart.aux_io)": [[617, "pyart.aux_io.read_sinarame_h5"]], "pyart.bridge": [[625, "module-pyart.bridge"]], "pyart.config": [[627, "module-pyart.config"]], "get_ke() (in module pyart.config)": [[632, "pyart.config.get_KE"]], "pyart.core": [[640, "module-pyart.core"]], "pyart.correct": [[722, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[723, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[724, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[725, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[726, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[727, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[728, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[729, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[730, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[731, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[732, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[733, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[734, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[735, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[736, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[737, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[738, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[739, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[740, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[741, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[742, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[743, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[744, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[745, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[746, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[747, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[748, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[749, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[750, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[751, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[752, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[753, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[756, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[757, "pyart.correct.correct_noise_rhohv"]], "correct_visibility() (in module pyart.correct)": [[759, "pyart.correct.correct_visibility"]], "correct_vpr() (in module pyart.correct)": [[760, "pyart.correct.correct_vpr"]], "correct_vpr_spatialised() (in module pyart.correct)": [[761, "pyart.correct.correct_vpr_spatialised"]], "despeckle_field() (in module pyart.correct)": [[765, "pyart.correct.despeckle_field"]], "est_rhohv_rain() (in module pyart.correct)": [[767, "pyart.correct.est_rhohv_rain"]], "est_zdr_precip() (in module pyart.correct)": [[768, "pyart.correct.est_zdr_precip"]], "est_zdr_snow() (in module pyart.correct)": [[769, "pyart.correct.est_zdr_snow"]], "gauss_fit() (in module pyart.correct)": [[771, "pyart.correct.gauss_fit"]], "get_sun_hits() (in module pyart.correct)": [[773, "pyart.correct.get_sun_hits"]], "get_sun_hits_ivic() (in module pyart.correct)": [[774, "pyart.correct.get_sun_hits_ivic"]], "get_sun_hits_psr() (in module pyart.correct)": [[775, "pyart.correct.get_sun_hits_psr"]], "moment_based_gate_filter() (in module pyart.correct)": [[776, "pyart.correct.moment_based_gate_filter"]], "retrieval_result() (in module pyart.correct)": [[780, "pyart.correct.retrieval_result"]], "selfconsistency_bias() (in module pyart.correct)": [[782, "pyart.correct.selfconsistency_bias"]], "selfconsistency_bias2() (in module pyart.correct)": [[783, "pyart.correct.selfconsistency_bias2"]], "selfconsistency_kdp_phidp() (in module pyart.correct)": [[784, "pyart.correct.selfconsistency_kdp_phidp"]], "sun_retrieval() (in module pyart.correct)": [[792, "pyart.correct.sun_retrieval"]], "pyart.exceptions": [[793, "module-pyart.exceptions"]], "pyart.filters": [[794, "module-pyart.filters"]], "pyart.graph": [[831, "module-pyart.graph"]], "plot_convstrat_scheme() (in module pyart.graph)": [[1006, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[1007, "module-pyart.io"]], "pyart.lazydict": [[1030, "module-pyart.lazydict"]], "mutablemapping (class in pyart.lazydict)": [[1044, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[1045, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[1046, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[1047, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[1048, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[1049, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[1050, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[1051, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[1052, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[1053, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[1054, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[1055, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[1056, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[1057, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[1058, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[1059, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[1060, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[1061, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[1062, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[1063, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[1064, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[1065, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[1066, "pyart.map.map_to_grid"]], "pyart.retrieve": [[1067, "module-pyart.retrieve"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[1161, "pyart.retrieve.texture_of_complex_phase"]], "pyart.testing": [[1164, "module-pyart.testing"]], "grid (class in pyart.testing)": [[1165, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[1166, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[1167, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[1168, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[1169, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[1170, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[1171, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[1172, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[1173, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[1174, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[1175, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[1176, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[1177, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[1178, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[1179, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[1180, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[1181, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[1182, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[1183, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[1184, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[1185, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[1186, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[1187, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[1188, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[1189, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[1190, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[1191, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[1192, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[1193, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[1194, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[1195, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[1196, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[1197, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[1198, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[1199, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[1200, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[1201, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[1202, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[1203, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[1204, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[1205, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[1206, "pyart.testing.RadarSpectra"]], "add_field() (pyart.testing.radarspectra method)": [[1207, "pyart.testing.RadarSpectra.add_field"]], "add_field_like() (pyart.testing.radarspectra method)": [[1208, "pyart.testing.RadarSpectra.add_field_like"]], "add_filter() (pyart.testing.radarspectra method)": [[1209, "pyart.testing.RadarSpectra.add_filter"]], "check_field_exists() (pyart.testing.radarspectra method)": [[1210, "pyart.testing.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.testing.radarspectra method)": [[1211, "pyart.testing.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.testing.radarspectra method)": [[1212, "pyart.testing.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.testing.radarspectra method)": [[1213, "pyart.testing.RadarSpectra.get_elevation"]], "get_end() (pyart.testing.radarspectra method)": [[1214, "pyart.testing.RadarSpectra.get_end"]], "get_field() (pyart.testing.radarspectra method)": [[1215, "pyart.testing.RadarSpectra.get_field"]], "get_gate_area() (pyart.testing.radarspectra method)": [[1216, "pyart.testing.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radarspectra method)": [[1217, "pyart.testing.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radarspectra method)": [[1218, "pyart.testing.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radarspectra method)": [[1219, "pyart.testing.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.testing.radarspectra method)": [[1220, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[1221, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[1222, "pyart.testing.RadarSpectra.get_start_end"]], "info() (pyart.testing.radarspectra method)": [[1223, "pyart.testing.RadarSpectra.info"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[1224, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[1225, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[1226, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[1227, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[1228, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[1229, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[1230, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[1231, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[1232, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[1233, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[1234, "pyart.testing.RadarSpectra.iter_start_end"]], "get_metadata() (in module pyart.testing)": [[1235, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[1236, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[1237, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[1238, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[1239, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[1240, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[1241, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[1242, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[1243, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[1244, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[1245, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[1246, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[1247, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[1248, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[1249, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[1250, "module-pyart.util"]]}})