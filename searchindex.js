Search.setIndex({"docnames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/generated/pyart.aux_io.read_bin", "API/generated/generated/pyart.aux_io.read_bin_mf", "API/generated/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/generated/pyart.aux_io.read_cf1", "API/generated/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/generated/pyart.aux_io.read_dat_mf", "API/generated/generated/pyart.aux_io.read_gamic", "API/generated/generated/pyart.aux_io.read_gif", "API/generated/generated/pyart.aux_io.read_grib", "API/generated/generated/pyart.aux_io.read_hpl", "API/generated/generated/pyart.aux_io.read_iq", "API/generated/generated/pyart.aux_io.read_kazr", "API/generated/generated/pyart.aux_io.read_metranet", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/generated/pyart.aux_io.read_odim_h5", "API/generated/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/generated/pyart.aux_io.read_pattern", "API/generated/generated/pyart.aux_io.read_png", "API/generated/generated/pyart.aux_io.read_radx", "API/generated/generated/pyart.aux_io.read_rainbow_psr", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/generated/pyart.aux_io.read_skyecho", "API/generated/generated/pyart.aux_io.read_spectra", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/generated/pyart.aux_io.write_odim_h5", "API/generated/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/generated/pyart.aux_io.write_spectra", "API/generated/generated/pyart.bridge.texture_of_complex_phase", "API/generated/generated/pyart.config.FileMetadata", "API/generated/generated/pyart.config.FileMetadata.__call__", "API/generated/generated/pyart.config.FileMetadata.get_field_name", "API/generated/generated/pyart.config.FileMetadata.get_metadata", "API/generated/generated/pyart.config.get_field_colormap", "API/generated/generated/pyart.config.get_field_limits", "API/generated/generated/pyart.config.get_field_mapping", "API/generated/generated/pyart.config.get_field_name", "API/generated/generated/pyart.config.get_fillvalue", "API/generated/generated/pyart.config.get_metadata", "API/generated/generated/pyart.config.load_config", "API/generated/generated/pyart.core.Grid", "API/generated/generated/pyart.core.Grid.add_field", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.get_projparams", "API/generated/generated/pyart.core.Grid.init_point_altitude", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/generated/pyart.core.Grid.projection_proj", "API/generated/generated/pyart.core.Grid.to_xarray", "API/generated/generated/pyart.core.Grid.write", "API/generated/generated/pyart.core.HorizontalWindProfile", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/generated/pyart.core.Radar", "API/generated/generated/pyart.core.Radar.add_field", "API/generated/generated/pyart.core.Radar.add_field_like", "API/generated/generated/pyart.core.Radar.add_filter", "API/generated/generated/pyart.core.Radar.check_field_exists", "API/generated/generated/pyart.core.Radar.extract_sweeps", "API/generated/generated/pyart.core.Radar.get_azimuth", "API/generated/generated/pyart.core.Radar.get_elevation", "API/generated/generated/pyart.core.Radar.get_end", "API/generated/generated/pyart.core.Radar.get_field", "API/generated/generated/pyart.core.Radar.get_gate_area", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/generated/pyart.core.Radar.get_slice", "API/generated/generated/pyart.core.Radar.get_start", "API/generated/generated/pyart.core.Radar.get_start_end", "API/generated/generated/pyart.core.Radar.info", "API/generated/generated/pyart.core.Radar.init_gate_altitude", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/generated/pyart.core.Radar.iter_azimuth", "API/generated/generated/pyart.core.Radar.iter_elevation", "API/generated/generated/pyart.core.Radar.iter_end", "API/generated/generated/pyart.core.Radar.iter_field", "API/generated/generated/pyart.core.Radar.iter_slice", "API/generated/generated/pyart.core.Radar.iter_start", "API/generated/generated/pyart.core.Radar.iter_start_end", "API/generated/generated/pyart.core.RadarSpectra", "API/generated/generated/pyart.core.RadarSpectra.add_field", "API/generated/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/generated/pyart.core.RadarSpectra.add_filter", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/generated/pyart.core.RadarSpectra.get_end", "API/generated/generated/pyart.core.RadarSpectra.get_field", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/generated/pyart.core.RadarSpectra.get_slice", "API/generated/generated/pyart.core.RadarSpectra.get_start", "API/generated/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/generated/pyart.core.RadarSpectra.info", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/generated/pyart.core.RadarSpectra.iter_end", "API/generated/generated/pyart.core.RadarSpectra.iter_field", "API/generated/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/generated/pyart.core.RadarSpectra.iter_start", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/generated/pyart.core.antenna_to_cartesian", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/generated/pyart.core.cartesian_to_antenna", "API/generated/generated/pyart.core.cartesian_to_geographic", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/generated/pyart.core.geographic_to_cartesian", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/generated/pyart.correct.compute_apparent_vpr", "API/generated/generated/pyart.correct.compute_theoretical_vpr", "API/generated/generated/pyart.correct.correct_sys_phase", "API/generated/generated/pyart.correct.dealias_fourdd", "API/generated/generated/pyart.correct.dealias_region_based", "API/generated/generated/pyart.correct.dealias_unwrap_phase", "API/generated/generated/pyart.correct.det_sys_phase_ray", "API/generated/generated/pyart.correct.find_objects", "API/generated/generated/pyart.correct.get_mask_fzl", "API/generated/generated/pyart.correct.phase_proc_lp", "API/generated/generated/pyart.correct.phase_proc_lp_gf", "API/generated/generated/pyart.correct.ptoa_to_sf", "API/generated/generated/pyart.correct.scanning_losses", "API/generated/generated/pyart.correct.smooth_masked", "API/generated/generated/pyart.correct.smooth_phidp_double_window", "API/generated/generated/pyart.correct.smooth_phidp_single_window", "API/generated/generated/pyart.correct.solar_flux_lookup", "API/generated/generated/pyart.correct.sun_position_mfr", "API/generated/generated/pyart.correct.sun_position_pysolar", "API/generated/generated/pyart.correct.sun_power", "API/generated/generated/pyart.exceptions.DeprecatedAttribute", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName", "API/generated/generated/pyart.exceptions.MissingOptionalDependency", "API/generated/generated/pyart.exceptions._deprecated_alias", "API/generated/generated/pyart.filters.GateFilter", "API/generated/generated/pyart.filters.GateFilter.copy", "API/generated/generated/pyart.filters.GateFilter.exclude_above", "API/generated/generated/pyart.filters.GateFilter.exclude_all", "API/generated/generated/pyart.filters.GateFilter.exclude_below", "API/generated/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/generated/pyart.filters.GateFilter.exclude_none", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/generated/pyart.filters.GateFilter.gate_included", "API/generated/generated/pyart.filters.GateFilter.include_above", "API/generated/generated/pyart.filters.GateFilter.include_all", "API/generated/generated/pyart.filters.GateFilter.include_below", "API/generated/generated/pyart.filters.GateFilter.include_equal", "API/generated/generated/pyart.filters.GateFilter.include_gates", "API/generated/generated/pyart.filters.GateFilter.include_inside", "API/generated/generated/pyart.filters.GateFilter.include_none", "API/generated/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/generated/pyart.filters.GateFilter.include_outside", "API/generated/generated/pyart.filters.GateFilter.include_valid", "API/generated/generated/pyart.filters.birds_gate_filter", "API/generated/generated/pyart.filters.class_based_gate_filter", "API/generated/generated/pyart.filters.iso0_based_gate_filter", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/generated/pyart.filters.moment_based_gate_filter", "API/generated/generated/pyart.filters.snr_based_gate_filter", "API/generated/generated/pyart.filters.temp_based_gate_filter", "API/generated/generated/pyart.filters.visibility_based_gate_filter", "API/generated/generated/pyart.graph.AirborneRadarDisplay", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/generated/pyart.graph.GridMapDisplay", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/generated/pyart.graph.RadarDisplay", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarDisplay.plot", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplay", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/generated/pyart.io.make_time_unit_str", "API/generated/generated/pyart.io.prepare_for_read", "API/generated/generated/pyart.io.read", "API/generated/generated/pyart.io.read_arm_sonde", "API/generated/generated/pyart.io.read_arm_sonde_vap", "API/generated/generated/pyart.io.read_cfradial", "API/generated/generated/pyart.io.read_cfradial2", "API/generated/generated/pyart.io.read_chl", "API/generated/generated/pyart.io.read_grid", "API/generated/generated/pyart.io.read_grid_mdv", "API/generated/generated/pyart.io.read_mdv", "API/generated/generated/pyart.io.read_nexrad_archive", "API/generated/generated/pyart.io.read_nexrad_cdm", "API/generated/generated/pyart.io.read_nexrad_level3", "API/generated/generated/pyart.io.read_rsl", "API/generated/generated/pyart.io.read_sigmet", "API/generated/generated/pyart.io.read_uf", "API/generated/generated/pyart.io.write_cfradial", "API/generated/generated/pyart.io.write_grid", "API/generated/generated/pyart.io.write_grid_geotiff", "API/generated/generated/pyart.io.write_grid_mdv", "API/generated/generated/pyart.io.write_uf", "API/generated/generated/pyart.lazydict.LazyLoadDict", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/generated/pyart.retrieve._destandardize", "API/generated/generated/pyart.retrieve._get_res_vol_sides", "API/generated/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/generated/pyart.retrieve.composite_reflectivity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/generated/pyart.retrieve.compute_Doppler_width", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/generated/pyart.retrieve.compute_apparent_profile", "API/generated/generated/pyart.retrieve.compute_bird_density", "API/generated/generated/pyart.retrieve.compute_ccor", "API/generated/generated/pyart.retrieve.compute_cdr", "API/generated/generated/pyart.retrieve.compute_centroids", "API/generated/generated/pyart.retrieve.compute_differential_phase", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_evp", "API/generated/generated/pyart.retrieve.compute_iq", "API/generated/generated/pyart.retrieve.compute_l", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/generated/pyart.retrieve.compute_noise_power", "API/generated/generated/pyart.retrieve.compute_noisedBZ", "API/generated/generated/pyart.retrieve.compute_pol_variables", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/generated/pyart.retrieve.compute_qvp", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/generated/pyart.retrieve.compute_rcs", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/generated/pyart.retrieve.compute_refl_from_zdr", "API/generated/generated/pyart.retrieve.compute_reflectivity", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_rhohv", "API/generated/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/generated/pyart.retrieve.compute_rqvp", "API/generated/generated/pyart.retrieve.compute_signal_power", "API/generated/generated/pyart.retrieve.compute_snr", "API/generated/generated/pyart.retrieve.compute_spectra", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_noise", "API/generated/generated/pyart.retrieve.compute_spectral_phase", "API/generated/generated/pyart.retrieve.compute_spectral_power", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/generated/pyart.retrieve.compute_st1_iq", "API/generated/generated/pyart.retrieve.compute_st2_iq", "API/generated/generated/pyart.retrieve.compute_svp", "API/generated/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/generated/pyart.retrieve.compute_vol_refl", "API/generated/generated/pyart.retrieve.compute_vp", "API/generated/generated/pyart.retrieve.compute_wbn_iq", "API/generated/generated/pyart.retrieve.conv_strat_raut", "API/generated/generated/pyart.retrieve.conv_strat_yuter", "API/generated/generated/pyart.retrieve.data_for_centroids", "API/generated/generated/pyart.retrieve.dealias_spectra", "API/generated/generated/pyart.retrieve.detect_ml", "API/generated/generated/pyart.retrieve.determine_medoids", "API/generated/generated/pyart.retrieve.est_rain_rate_a", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/generated/pyart.retrieve.est_rain_rate_z", "API/generated/generated/pyart.retrieve.est_rain_rate_za", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/generated/pyart.retrieve.est_vertical_windshear", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/generated/pyart.retrieve.est_wind_profile", "API/generated/generated/pyart.retrieve.est_wind_vel", "API/generated/generated/pyart.retrieve.feature_detection", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/generated/pyart.retrieve.gecsx", "API/generated/generated/pyart.retrieve.get_coeff_attg", "API/generated/generated/pyart.retrieve.get_freq_band", "API/generated/generated/pyart.retrieve.get_iso0_val", "API/generated/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/generated/pyart.retrieve.grid_displacement_pc", "API/generated/generated/pyart.retrieve.grid_shift", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/generated/pyart.retrieve.kdp_maesaka", "API/generated/generated/pyart.retrieve.kdp_schneebeli", "API/generated/generated/pyart.retrieve.kdp_vulpiani", "API/generated/generated/pyart.retrieve.map_profile_to_gates", "API/generated/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/generated/pyart.retrieve.melting_layer_mf", "API/generated/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/generated/pyart.retrieve.select_samples", "API/generated/generated/pyart.retrieve.steiner_conv_strat", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/generated/pyart.retrieve.vad_browning", "API/generated/generated/pyart.retrieve.vad_michelson", "API/generated/generated/pyart.util.EPOCH_UNITS", "API/generated/generated/pyart.util.angular_mean", "API/generated/generated/pyart.util.angular_mean_deg", "API/generated/generated/pyart.util.angular_std", "API/generated/generated/pyart.util.angular_std_deg", "API/generated/generated/pyart.util.angular_texture_2d", "API/generated/generated/pyart.util.colocated_gates", "API/generated/generated/pyart.util.colocated_gates2", "API/generated/generated/pyart.util.compute_azimuthal_average", "API/generated/generated/pyart.util.compute_corr", "API/generated/generated/pyart.util.compute_directional_stats", "API/generated/generated/pyart.util.compute_mse", "API/generated/generated/pyart.util.compute_nse", "API/generated/generated/pyart.util.cross_section_ppi", "API/generated/generated/pyart.util.cross_section_rhi", "API/generated/generated/pyart.util.datetime_from_dataset", "API/generated/generated/pyart.util.datetime_from_grid", "API/generated/generated/pyart.util.datetime_from_radar", "API/generated/generated/pyart.util.datetimes_from_dataset", "API/generated/generated/pyart.util.datetimes_from_radar", "API/generated/generated/pyart.util.determine_sweeps", "API/generated/generated/pyart.util.estimate_noise_hs74", "API/generated/generated/pyart.util.estimate_noise_ivic13", "API/generated/generated/pyart.util.find_neighbour_gates", "API/generated/generated/pyart.util.for_azimuth", "API/generated/generated/pyart.util.get_column_rays", "API/generated/generated/pyart.util.get_field_location", "API/generated/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/generated/pyart.util.get_ivic_pct", "API/generated/generated/pyart.util.get_ivic_snr_thr", "API/generated/generated/pyart.util.get_statistic", "API/generated/generated/pyart.util.get_target_elevations", "API/generated/generated/pyart.util.grid_texture_2d", "API/generated/generated/pyart.util.image_mute_radar", "API/generated/generated/pyart.util.interpol_spectra", "API/generated/generated/pyart.util.intersection", "API/generated/generated/pyart.util.interval_mean", "API/generated/generated/pyart.util.interval_std", "API/generated/generated/pyart.util.is_vpt", "API/generated/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/generated/pyart.util.ivic_pct_table", "API/generated/generated/pyart.util.ivic_snr_thr_table", "API/generated/generated/pyart.util.join_radar", "API/generated/generated/pyart.util.join_spectra", "API/generated/generated/pyart.util.ma_broadcast_to", "API/generated/generated/pyart.util.mean_of_two_angles", "API/generated/generated/pyart.util.mean_of_two_angles_deg", "API/generated/generated/pyart.util.radar_from_spectra", "API/generated/generated/pyart.util.rolling_window", "API/generated/generated/pyart.util.simulated_vel_from_profile", "API/generated/generated/pyart.util.sphere_distance", "API/generated/generated/pyart.util.subset_radar", "API/generated/generated/pyart.util.subset_radar_spectra", "API/generated/generated/pyart.util.texture", "API/generated/generated/pyart.util.texture_along_ray", "API/generated/generated/pyart.util.to_vpt", "API/generated/generated/pyart.util.weighted_kurtosis", "API/generated/generated/pyart.util.weighted_mean", "API/generated/generated/pyart.util.weighted_skew", "API/generated/generated/pyart.util.weighted_variance", "API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.convert_data", "API/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/pyart.aux_io.get_library", "API/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/pyart.aux_io.read_bin", "API/generated/pyart.aux_io.read_bin_mf", "API/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/pyart.aux_io.read_cf1", "API/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_dat_mf", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_file_c", "API/generated/pyart.aux_io.read_file_py", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_gif", "API/generated/pyart.aux_io.read_grib", "API/generated/pyart.aux_io.read_hpl", "API/generated/pyart.aux_io.read_iq", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_knmi_grid_h5", "API/generated/pyart.aux_io.read_mch_vad", "API/generated/pyart.aux_io.read_metranet", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_png", "API/generated/pyart.aux_io.read_product_c", "API/generated/pyart.aux_io.read_product_py", "API/generated/pyart.aux_io.read_psr_cpi_header", "API/generated/pyart.aux_io.read_psr_header", "API/generated/pyart.aux_io.read_psr_spectra", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_rainbow_psr", "API/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.read_skyecho", "API/generated/pyart.aux_io.read_spectra", "API/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/pyart.aux_io.write_odim_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.aux_io.write_spectra", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_KE", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.add_field", "API/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/pyart.core.RadarSpectra.add_filter", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_field", "API/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.info", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.compute_apparent_vpr", "API/generated/pyart.correct.compute_theoretical_vpr", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.correct_sys_phase", "API/generated/pyart.correct.correct_visibility", "API/generated/pyart.correct.correct_vpr", "API/generated/pyart.correct.correct_vpr_spatialised", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.det_sys_phase_ray", "API/generated/pyart.correct.est_rhohv_rain", "API/generated/pyart.correct.est_zdr_precip", "API/generated/pyart.correct.est_zdr_snow", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.gauss_fit", "API/generated/pyart.correct.get_mask_fzl", "API/generated/pyart.correct.get_sun_hits", "API/generated/pyart.correct.get_sun_hits_ivic", "API/generated/pyart.correct.get_sun_hits_psr", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.ptoa_to_sf", "API/generated/pyart.correct.retrieval_result", "API/generated/pyart.correct.scanning_losses", "API/generated/pyart.correct.selfconsistency_bias", "API/generated/pyart.correct.selfconsistency_bias2", "API/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/pyart.correct.smooth_masked", "API/generated/pyart.correct.smooth_phidp_double_window", "API/generated/pyart.correct.smooth_phidp_single_window", "API/generated/pyart.correct.solar_flux_lookup", "API/generated/pyart.correct.sun_position_mfr", "API/generated/pyart.correct.sun_position_pysolar", "API/generated/pyart.correct.sun_power", "API/generated/pyart.correct.sun_retrieval", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.birds_gate_filter", "API/generated/pyart.filters.class_based_gate_filter", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.snr_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.filters.visibility_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.graph.plot_maxcappi", "API/generated/pyart.io", "API/generated/pyart.io.make_time_unit_str", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_cfradial2", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.gridstats_from_radar", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_gates_to_grid_to_list", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/pyart.retrieve.compute_Doppler_width", "API/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/pyart.retrieve.compute_apparent_profile", "API/generated/pyart.retrieve.compute_bird_density", "API/generated/pyart.retrieve.compute_ccor", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_centroids", "API/generated/pyart.retrieve.compute_differential_phase", "API/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_iq", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/pyart.retrieve.compute_noise_power", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_pol_variables", "API/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/pyart.retrieve.compute_rcs", "API/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/pyart.retrieve.compute_refl_from_zdr", "API/generated/pyart.retrieve.compute_reflectivity", "API/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/pyart.retrieve.compute_rhohv", "API/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_signal_power", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_spectra", "API/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/pyart.retrieve.compute_spectral_noise", "API/generated/pyart.retrieve.compute_spectral_phase", "API/generated/pyart.retrieve.compute_spectral_power", "API/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/pyart.retrieve.compute_st1_iq", "API/generated/pyart.retrieve.compute_st2_iq", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vol_refl", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.compute_wbn_iq", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.data_for_centroids", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.detect_ml", "API/generated/pyart.retrieve.determine_medoids", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.est_vertical_windshear", "API/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/pyart.retrieve.est_wind_profile", "API/generated/pyart.retrieve.est_wind_vel", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.gecsx", "API/generated/pyart.retrieve.get_coeff_attg", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.get_iso0_val", "API/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/pyart.retrieve.melting_layer_mf", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.select_samples", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.add_field", "API/generated/pyart.testing.RadarSpectra.add_field_like", "API/generated/pyart.testing.RadarSpectra.add_filter", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.extract_sweeps", "API/generated/pyart.testing.RadarSpectra.get_azimuth", "API/generated/pyart.testing.RadarSpectra.get_elevation", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_field", "API/generated/pyart.testing.RadarSpectra.get_gate_area", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.info", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.colocated_gates", "API/generated/pyart.util.colocated_gates2", "API/generated/pyart.util.compute_azimuthal_average", "API/generated/pyart.util.compute_corr", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.compute_mse", "API/generated/pyart.util.compute_nse", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.estimate_noise_ivic13", "API/generated/pyart.util.find_neighbour_gates", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/pyart.util.get_ivic_pct", "API/generated/pyart.util.get_ivic_snr_thr", "API/generated/pyart.util.get_statistic", "API/generated/pyart.util.get_target_elevations", "API/generated/pyart.util.grid_texture_2d", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interpol_spectra", "API/generated/pyart.util.intersection", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/pyart.util.ivic_pct_table", "API/generated/pyart.util.ivic_snr_thr_table", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.join_spectra", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.radar_from_spectra", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.subset_radar_spectra", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/generated/pyart.util.weighted_kurtosis", "API/generated/pyart.util.weighted_mean", "API/generated/pyart.util.weighted_skew", "API/generated/pyart.util.weighted_variance", "API/index", "changelog", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/read_mch_metranet_data", "notebooks/swiss_doppler", "notebooks/swiss_thunderstorm", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/generated/pyart.aux_io.read_bin.rst", "API/generated/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/generated/pyart.aux_io.read_cf1.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/generated/pyart.aux_io.read_gamic.rst", "API/generated/generated/pyart.aux_io.read_gif.rst", "API/generated/generated/pyart.aux_io.read_grib.rst", "API/generated/generated/pyart.aux_io.read_hpl.rst", "API/generated/generated/pyart.aux_io.read_iq.rst", "API/generated/generated/pyart.aux_io.read_kazr.rst", "API/generated/generated/pyart.aux_io.read_metranet.rst", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/generated/pyart.aux_io.read_pattern.rst", "API/generated/generated/pyart.aux_io.read_png.rst", "API/generated/generated/pyart.aux_io.read_radx.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/generated/pyart.aux_io.read_skyecho.rst", "API/generated/generated/pyart.aux_io.read_spectra.rst", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/generated/pyart.aux_io.write_spectra.rst", "API/generated/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/generated/pyart.config.FileMetadata.rst", "API/generated/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/generated/pyart.config.get_field_colormap.rst", "API/generated/generated/pyart.config.get_field_limits.rst", "API/generated/generated/pyart.config.get_field_mapping.rst", "API/generated/generated/pyart.config.get_field_name.rst", "API/generated/generated/pyart.config.get_fillvalue.rst", "API/generated/generated/pyart.config.get_metadata.rst", "API/generated/generated/pyart.config.load_config.rst", "API/generated/generated/pyart.core.Grid.rst", "API/generated/generated/pyart.core.Grid.add_field.rst", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.get_projparams.rst", "API/generated/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/generated/pyart.core.Grid.projection_proj.rst", "API/generated/generated/pyart.core.Grid.to_xarray.rst", "API/generated/generated/pyart.core.Grid.write.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/generated/pyart.core.Radar.rst", "API/generated/generated/pyart.core.Radar.add_field.rst", "API/generated/generated/pyart.core.Radar.add_field_like.rst", "API/generated/generated/pyart.core.Radar.add_filter.rst", "API/generated/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/generated/pyart.core.Radar.get_elevation.rst", "API/generated/generated/pyart.core.Radar.get_end.rst", "API/generated/generated/pyart.core.Radar.get_field.rst", "API/generated/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/generated/pyart.core.Radar.get_slice.rst", "API/generated/generated/pyart.core.Radar.get_start.rst", "API/generated/generated/pyart.core.Radar.get_start_end.rst", "API/generated/generated/pyart.core.Radar.info.rst", "API/generated/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/generated/pyart.core.Radar.iter_end.rst", "API/generated/generated/pyart.core.Radar.iter_field.rst", "API/generated/generated/pyart.core.Radar.iter_slice.rst", "API/generated/generated/pyart.core.Radar.iter_start.rst", "API/generated/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.info.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/generated/pyart.correct.correct_sys_phase.rst", "API/generated/generated/pyart.correct.dealias_fourdd.rst", "API/generated/generated/pyart.correct.dealias_region_based.rst", "API/generated/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/generated/pyart.correct.find_objects.rst", "API/generated/generated/pyart.correct.get_mask_fzl.rst", "API/generated/generated/pyart.correct.phase_proc_lp.rst", "API/generated/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/generated/pyart.correct.scanning_losses.rst", "API/generated/generated/pyart.correct.smooth_masked.rst", "API/generated/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/generated/pyart.correct.sun_position_mfr.rst", "API/generated/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/generated/pyart.correct.sun_power.rst", "API/generated/generated/pyart.exceptions.DeprecatedAttribute.rst", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName.rst", "API/generated/generated/pyart.exceptions.MissingOptionalDependency.rst", "API/generated/generated/pyart.exceptions._deprecated_alias.rst", "API/generated/generated/pyart.filters.GateFilter.rst", "API/generated/generated/pyart.filters.GateFilter.copy.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/generated/pyart.filters.birds_gate_filter.rst", "API/generated/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.GridMapDisplay.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.RadarDisplay.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/generated/pyart.io.make_time_unit_str.rst", "API/generated/generated/pyart.io.prepare_for_read.rst", "API/generated/generated/pyart.io.read.rst", "API/generated/generated/pyart.io.read_arm_sonde.rst", "API/generated/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/generated/pyart.io.read_cfradial.rst", "API/generated/generated/pyart.io.read_cfradial2.rst", "API/generated/generated/pyart.io.read_chl.rst", "API/generated/generated/pyart.io.read_grid.rst", "API/generated/generated/pyart.io.read_grid_mdv.rst", "API/generated/generated/pyart.io.read_mdv.rst", "API/generated/generated/pyart.io.read_nexrad_archive.rst", "API/generated/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/generated/pyart.io.read_nexrad_level3.rst", "API/generated/generated/pyart.io.read_rsl.rst", "API/generated/generated/pyart.io.read_sigmet.rst", "API/generated/generated/pyart.io.read_uf.rst", "API/generated/generated/pyart.io.write_cfradial.rst", "API/generated/generated/pyart.io.write_grid.rst", "API/generated/generated/pyart.io.write_grid_geotiff.rst", "API/generated/generated/pyart.io.write_grid_mdv.rst", "API/generated/generated/pyart.io.write_uf.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/generated/pyart.retrieve._destandardize.rst", "API/generated/generated/pyart.retrieve._get_res_vol_sides.rst", "API/generated/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/generated/pyart.retrieve.compute_ccor.rst", "API/generated/generated/pyart.retrieve.compute_cdr.rst", "API/generated/generated/pyart.retrieve.compute_centroids.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_evp.rst", "API/generated/generated/pyart.retrieve.compute_iq.rst", "API/generated/generated/pyart.retrieve.compute_l.rst", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/generated/pyart.retrieve.compute_qvp.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/generated/pyart.retrieve.compute_rcs.rst", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/generated/pyart.retrieve.compute_refl_from_zdr.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/generated/pyart.retrieve.compute_snr.rst", "API/generated/generated/pyart.retrieve.compute_spectra.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/generated/pyart.retrieve.compute_svp.rst", "API/generated/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/generated/pyart.retrieve.compute_vp.rst", "API/generated/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/generated/pyart.retrieve.detect_ml.rst", "API/generated/generated/pyart.retrieve.determine_medoids.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/generated/pyart.retrieve.feature_detection.rst", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/generated/pyart.retrieve.gecsx.rst", "API/generated/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/generated/pyart.retrieve.get_freq_band.rst", "API/generated/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/generated/pyart.retrieve.grid_shift.rst", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/generated/pyart.retrieve.select_samples.rst", "API/generated/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/generated/pyart.retrieve.vad_browning.rst", "API/generated/generated/pyart.retrieve.vad_michelson.rst", "API/generated/generated/pyart.util.EPOCH_UNITS.rst", "API/generated/generated/pyart.util.angular_mean.rst", "API/generated/generated/pyart.util.angular_mean_deg.rst", "API/generated/generated/pyart.util.angular_std.rst", "API/generated/generated/pyart.util.angular_std_deg.rst", "API/generated/generated/pyart.util.angular_texture_2d.rst", "API/generated/generated/pyart.util.colocated_gates.rst", "API/generated/generated/pyart.util.colocated_gates2.rst", "API/generated/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/generated/pyart.util.compute_corr.rst", "API/generated/generated/pyart.util.compute_directional_stats.rst", "API/generated/generated/pyart.util.compute_mse.rst", "API/generated/generated/pyart.util.compute_nse.rst", "API/generated/generated/pyart.util.cross_section_ppi.rst", "API/generated/generated/pyart.util.cross_section_rhi.rst", "API/generated/generated/pyart.util.datetime_from_dataset.rst", "API/generated/generated/pyart.util.datetime_from_grid.rst", "API/generated/generated/pyart.util.datetime_from_radar.rst", "API/generated/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/generated/pyart.util.datetimes_from_radar.rst", "API/generated/generated/pyart.util.determine_sweeps.rst", "API/generated/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/generated/pyart.util.find_neighbour_gates.rst", "API/generated/generated/pyart.util.for_azimuth.rst", "API/generated/generated/pyart.util.get_column_rays.rst", "API/generated/generated/pyart.util.get_field_location.rst", "API/generated/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/generated/pyart.util.get_ivic_pct.rst", "API/generated/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/generated/pyart.util.get_statistic.rst", "API/generated/generated/pyart.util.get_target_elevations.rst", "API/generated/generated/pyart.util.grid_texture_2d.rst", "API/generated/generated/pyart.util.image_mute_radar.rst", "API/generated/generated/pyart.util.interpol_spectra.rst", "API/generated/generated/pyart.util.intersection.rst", "API/generated/generated/pyart.util.interval_mean.rst", "API/generated/generated/pyart.util.interval_std.rst", "API/generated/generated/pyart.util.is_vpt.rst", "API/generated/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/generated/pyart.util.ivic_pct_table.rst", "API/generated/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/generated/pyart.util.join_radar.rst", "API/generated/generated/pyart.util.join_spectra.rst", "API/generated/generated/pyart.util.ma_broadcast_to.rst", "API/generated/generated/pyart.util.mean_of_two_angles.rst", "API/generated/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/generated/pyart.util.radar_from_spectra.rst", "API/generated/generated/pyart.util.rolling_window.rst", "API/generated/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/generated/pyart.util.sphere_distance.rst", "API/generated/generated/pyart.util.subset_radar.rst", "API/generated/generated/pyart.util.subset_radar_spectra.rst", "API/generated/generated/pyart.util.texture.rst", "API/generated/generated/pyart.util.texture_along_ray.rst", "API/generated/generated/pyart.util.to_vpt.rst", "API/generated/generated/pyart.util.weighted_kurtosis.rst", "API/generated/generated/pyart.util.weighted_mean.rst", "API/generated/generated/pyart.util.weighted_skew.rst", "API/generated/generated/pyart.util.weighted_variance.rst", "API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.convert_data.rst", "API/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/pyart.aux_io.get_library.rst", "API/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/pyart.aux_io.read_bin.rst", "API/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/pyart.aux_io.read_cf1.rst", "API/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_file_c.rst", "API/generated/pyart.aux_io.read_file_py.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_gif.rst", "API/generated/pyart.aux_io.read_grib.rst", "API/generated/pyart.aux_io.read_hpl.rst", "API/generated/pyart.aux_io.read_iq.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_knmi_grid_h5.rst", "API/generated/pyart.aux_io.read_mch_vad.rst", "API/generated/pyart.aux_io.read_metranet.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_png.rst", "API/generated/pyart.aux_io.read_product_c.rst", "API/generated/pyart.aux_io.read_product_py.rst", "API/generated/pyart.aux_io.read_psr_cpi_header.rst", "API/generated/pyart.aux_io.read_psr_header.rst", "API/generated/pyart.aux_io.read_psr_spectra.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.read_skyecho.rst", "API/generated/pyart.aux_io.read_spectra.rst", "API/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.aux_io.write_spectra.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_KE.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.info.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.correct_sys_phase.rst", "API/generated/pyart.correct.correct_visibility.rst", "API/generated/pyart.correct.correct_vpr.rst", "API/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/pyart.correct.est_zdr_precip.rst", "API/generated/pyart.correct.est_zdr_snow.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.gauss_fit.rst", "API/generated/pyart.correct.get_mask_fzl.rst", "API/generated/pyart.correct.get_sun_hits.rst", "API/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/pyart.correct.retrieval_result.rst", "API/generated/pyart.correct.scanning_losses.rst", "API/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/pyart.correct.smooth_masked.rst", "API/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/pyart.correct.sun_position_mfr.rst", "API/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/pyart.correct.sun_power.rst", "API/generated/pyart.correct.sun_retrieval.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.birds_gate_filter.rst", "API/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.graph.plot_maxcappi.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.make_time_unit_str.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_cfradial2.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.gridstats_from_radar.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_gates_to_grid_to_list.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/pyart.retrieve.compute_ccor.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_centroids.rst", "API/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_iq.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/pyart.retrieve.compute_rcs.rst", "API/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/pyart.retrieve.compute_refl_from_zdr.rst", "API/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_spectra.rst", "API/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.detect_ml.rst", "API/generated/pyart.retrieve.determine_medoids.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.gecsx.rst", "API/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.select_samples.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.add_field.rst", "API/generated/pyart.testing.RadarSpectra.add_field_like.rst", "API/generated/pyart.testing.RadarSpectra.add_filter.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.testing.RadarSpectra.get_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.get_elevation.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_field.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_area.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.info.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.colocated_gates.rst", "API/generated/pyart.util.colocated_gates2.rst", "API/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/pyart.util.compute_corr.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.compute_mse.rst", "API/generated/pyart.util.compute_nse.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/pyart.util.find_neighbour_gates.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/pyart.util.get_ivic_pct.rst", "API/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/pyart.util.get_statistic.rst", "API/generated/pyart.util.get_target_elevations.rst", "API/generated/pyart.util.grid_texture_2d.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interpol_spectra.rst", "API/generated/pyart.util.intersection.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/pyart.util.ivic_pct_table.rst", "API/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.join_spectra.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.radar_from_spectra.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.subset_radar_spectra.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/generated/pyart.util.weighted_kurtosis.rst", "API/generated/pyart.util.weighted_mean.rst", "API/generated/pyart.util.weighted_skew.rst", "API/generated/pyart.util.weighted_variance.rst", "API/index.rst", "changelog.md", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/read_mch_metranet_data.ipynb", "notebooks/swiss_doppler.ipynb", "notebooks/swiss_thunderstorm.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge.texture_of_complex_phase", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_sys_phase", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.det_sys_phase_ray", "pyart.correct.find_objects", "pyart.correct.get_mask_fzl", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.scanning_losses", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.exceptions.DeprecatedAttribute", "pyart.exceptions.DeprecatedFunctionName", "pyart.exceptions.MissingOptionalDependency", "pyart.exceptions._deprecated_alias", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.__contains__", "pyart.lazydict.LazyLoadDict.__delattr__", "pyart.lazydict.LazyLoadDict.__delitem__", "pyart.lazydict.LazyLoadDict.__dir__", "pyart.lazydict.LazyLoadDict.__eq__", "pyart.lazydict.LazyLoadDict.__format__", "pyart.lazydict.LazyLoadDict.__ge__", "pyart.lazydict.LazyLoadDict.__getattribute__", "pyart.lazydict.LazyLoadDict.__getitem__", "pyart.lazydict.LazyLoadDict.__getstate__", "pyart.lazydict.LazyLoadDict.__gt__", "pyart.lazydict.LazyLoadDict.__init__", "pyart.lazydict.LazyLoadDict.__init_subclass__", "pyart.lazydict.LazyLoadDict.__iter__", "pyart.lazydict.LazyLoadDict.__le__", "pyart.lazydict.LazyLoadDict.__len__", "pyart.lazydict.LazyLoadDict.__lt__", "pyart.lazydict.LazyLoadDict.__ne__", "pyart.lazydict.LazyLoadDict.__new__", "pyart.lazydict.LazyLoadDict.__reduce__", "pyart.lazydict.LazyLoadDict.__reduce_ex__", "pyart.lazydict.LazyLoadDict.__repr__", "pyart.lazydict.LazyLoadDict.__setattr__", "pyart.lazydict.LazyLoadDict.__setitem__", "pyart.lazydict.LazyLoadDict.__sizeof__", "pyart.lazydict.LazyLoadDict.__str__", "pyart.lazydict.LazyLoadDict.__subclasshook__", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.retrieve._destandardize", "pyart.retrieve._get_res_vol_sides", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_refl_from_zdr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.util.EPOCH_UNITS", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_statistic", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "pyart.util.weighted_kurtosis", "pyart.util.weighted_mean", "pyart.util.weighted_skew", "pyart.util.weighted_variance", "pyart._debug_info", "pyart.aux_io", "pyart.aux_io.convert_data", "pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_library", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_file_c", "pyart.aux_io.read_file_py", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_knmi_grid_h5", "pyart.aux_io.read_mch_vad", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_product_c", "pyart.aux_io.read_product_py", "pyart.aux_io.read_psr_cpi_header", "pyart.aux_io.read_psr_header", "pyart.aux_io.read_psr_spectra", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_KE", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.gauss_fit", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.retrieval_result", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.graph.plot_maxcappi", "pyart.io", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.gridstats_from_radar", "pyart.map.map_gates_to_grid", "pyart.map.map_gates_to_grid_to_list", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_refl_from_zdr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.add_field", "pyart.testing.RadarSpectra.add_field_like", "pyart.testing.RadarSpectra.add_filter", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.extract_sweeps", "pyart.testing.RadarSpectra.get_azimuth", "pyart.testing.RadarSpectra.get_elevation", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_field", "pyart.testing.RadarSpectra.get_gate_area", "pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "pyart.testing.RadarSpectra.get_gate_x_y_z", "pyart.testing.RadarSpectra.get_nyquist_vel", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.info", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_statistic", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "pyart.util.weighted_kurtosis", "pyart.util.weighted_mean", "pyart.util.weighted_skew", "pyart.util.weighted_variance", "API Manual", "Changelog", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "About the MeteoSwiss fork of Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "Reading MeteoSwiss Metranet data with Py-ART", "Processing of Doppler wind data from a Swiss volumetric scan", "Filtering and retrievals on raw Swiss C-band data", "The Py-ART Radar object and indexing", "Computation times", "Installation", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"filenam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 55, 189, 225, 241, 256, 289, 315, 326, 352, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 644, 655, 839, 875, 891, 906, 939, 965, 976, 1002, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1182, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1376], "basepath": [0, 584], "none": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 40, 45, 46, 56, 60, 63, 71, 72, 89, 92, 100, 101, 118, 119, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 411, 413, 421, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 526, 527, 528, 529, 531, 532, 533, 534, 543, 553, 555, 570, 572, 573, 581, 584, 587, 588, 589, 590, 591, 592, 593, 594, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 631, 633, 635, 639, 644, 646, 656, 660, 663, 671, 672, 689, 692, 700, 701, 718, 719, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 787, 788, 789, 791, 792, 797, 828, 829, 830, 831, 832, 833, 834, 835, 841, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 896, 897, 898, 899, 900, 901, 902, 903, 904, 908, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 941, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 963, 964, 965, 967, 968, 969, 970, 971, 972, 973, 974, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 995, 996, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1038, 1040, 1048, 1051, 1052, 1058, 1061, 1069, 1070, 1072, 1073, 1074, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1169, 1170, 1171, 1173, 1183, 1185, 1188, 1196, 1197, 1214, 1217, 1225, 1226, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1281, 1291, 1293, 1308, 1310, 1311, 1338, 1347, 1357, 1370, 1372, 1373, 1376], "sweep_dir": [0, 584], "dir_timeformat": [0, 584], "y": [0, 3, 9, 22, 46, 52, 54, 72, 80, 101, 109, 118, 119, 120, 121, 122, 123, 124, 125, 187, 189, 201, 204, 206, 209, 211, 214, 215, 216, 217, 218, 220, 231, 233, 237, 239, 249, 251, 253, 254, 256, 268, 271, 273, 276, 278, 281, 282, 283, 284, 286, 287, 289, 301, 304, 306, 309, 312, 314, 318, 319, 320, 321, 323, 324, 326, 338, 341, 343, 346, 349, 351, 355, 356, 357, 358, 360, 479, 495, 502, 503, 516, 552, 584, 588, 594, 612, 646, 652, 654, 672, 680, 701, 709, 718, 719, 720, 721, 722, 723, 724, 725, 837, 839, 851, 854, 856, 859, 861, 864, 865, 866, 867, 868, 870, 881, 883, 887, 889, 899, 901, 903, 904, 906, 918, 921, 923, 926, 928, 931, 932, 933, 934, 936, 937, 939, 951, 954, 956, 959, 962, 964, 968, 969, 970, 971, 973, 974, 976, 988, 991, 993, 996, 999, 1001, 1005, 1006, 1007, 1008, 1010, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1130, 1146, 1153, 1154, 1167, 1173, 1179, 1181, 1197, 1205, 1226, 1234, 1245, 1290, 1331, 1337, 1338, 1347, 1348, 1355, 1357, 1371], "m": [0, 3, 9, 14, 16, 22, 24, 25, 70, 73, 99, 102, 120, 126, 127, 128, 132, 135, 138, 143, 146, 179, 181, 185, 189, 256, 289, 326, 433, 442, 447, 450, 452, 460, 473, 474, 476, 478, 484, 495, 497, 501, 502, 504, 507, 508, 511, 513, 514, 516, 526, 527, 542, 543, 553, 555, 572, 573, 584, 585, 588, 594, 602, 606, 612, 619, 620, 670, 673, 699, 702, 720, 726, 759, 760, 765, 766, 769, 777, 778, 784, 787, 788, 789, 793, 796, 828, 830, 834, 839, 906, 939, 976, 1068, 1071, 1074, 1084, 1093, 1098, 1101, 1103, 1111, 1124, 1125, 1127, 1129, 1135, 1146, 1148, 1152, 1153, 1155, 1158, 1159, 1162, 1164, 1165, 1167, 1195, 1198, 1224, 1227, 1264, 1265, 1280, 1281, 1291, 1293, 1310, 1311, 1327, 1339, 1348, 1357, 1359, 1362, 1370, 1371, 1372, 1375, 1376], "d": [0, 3, 9, 22, 132, 189, 256, 289, 326, 383, 411, 413, 415, 416, 417, 418, 420, 421, 422, 460, 473, 478, 482, 509, 519, 584, 588, 594, 612, 758, 769, 839, 906, 939, 976, 1037, 1038, 1040, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1111, 1124, 1129, 1133, 1160, 1171, 1355, 1376], "file_prefix": [0, 584], "file_sufix": [0, 584], "file_timeformat": [0, 584], "dt": [0, 144, 145, 584, 794, 795, 1323], "h": [0, 9, 14, 132, 189, 246, 256, 289, 326, 352, 432, 439, 445, 446, 450, 451, 466, 471, 472, 477, 489, 514, 541, 584, 594, 602, 769, 778, 779, 780, 839, 896, 906, 939, 976, 1002, 1083, 1090, 1096, 1097, 1101, 1102, 1117, 1122, 1123, 1128, 1140, 1165, 1279, 1331, 1338, 1372], "": [0, 9, 45, 46, 60, 73, 77, 89, 102, 106, 118, 119, 122, 125, 131, 132, 136, 137, 138, 146, 189, 191, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 256, 258, 271, 278, 282, 283, 284, 289, 291, 304, 314, 319, 320, 321, 326, 328, 341, 351, 356, 357, 358, 415, 416, 422, 437, 446, 450, 451, 452, 453, 466, 479, 484, 485, 495, 499, 502, 507, 508, 509, 511, 514, 516, 517, 519, 541, 542, 553, 584, 594, 644, 646, 660, 673, 677, 689, 702, 706, 718, 719, 722, 725, 768, 769, 782, 783, 784, 796, 839, 841, 854, 861, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 906, 908, 921, 928, 932, 933, 934, 939, 941, 954, 964, 969, 970, 971, 976, 978, 991, 1001, 1006, 1007, 1008, 1012, 1042, 1043, 1049, 1053, 1054, 1059, 1061, 1063, 1068, 1071, 1088, 1097, 1101, 1102, 1103, 1104, 1117, 1130, 1135, 1136, 1146, 1150, 1153, 1158, 1159, 1160, 1162, 1165, 1167, 1168, 1171, 1173, 1185, 1198, 1202, 1214, 1227, 1231, 1279, 1280, 1291, 1327, 1328, 1331, 1336, 1338, 1339, 1348, 1355, 1357, 1359, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1377], "sweep_start_tim": [0, 584], "sweep_end_tim": [0, 27, 584, 623], "field_nam": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 35, 37, 47, 61, 62, 64, 69, 85, 90, 91, 93, 98, 114, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 423, 442, 450, 460, 473, 474, 476, 528, 572, 573, 584, 588, 590, 591, 592, 593, 594, 598, 600, 602, 603, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 623, 624, 625, 626, 627, 633, 635, 647, 661, 662, 664, 669, 685, 690, 691, 693, 698, 714, 761, 764, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1093, 1101, 1111, 1124, 1125, 1127, 1174, 1186, 1187, 1189, 1194, 1210, 1215, 1216, 1218, 1223, 1239, 1266, 1310, 1311, 1331, 1368], "additional_metadata": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 35, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 584, 587, 588, 589, 590, 593, 594, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 623, 624, 625, 633, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030], "file_field_nam": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 37, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 584, 590, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 633, 635, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1035], "fals": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 30, 31, 33, 35, 47, 48, 55, 61, 62, 63, 66, 67, 69, 71, 72, 73, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 126, 130, 131, 132, 136, 137, 151, 153, 155, 157, 163, 164, 167, 169, 171, 176, 177, 189, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 246, 249, 251, 253, 256, 271, 273, 278, 281, 282, 283, 284, 289, 304, 306, 314, 315, 318, 319, 320, 321, 326, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 410, 414, 427, 437, 441, 448, 449, 451, 452, 454, 457, 458, 459, 464, 465, 468, 469, 470, 478, 479, 482, 483, 485, 494, 495, 504, 505, 506, 507, 508, 509, 511, 512, 535, 536, 537, 538, 539, 540, 542, 547, 549, 558, 562, 576, 584, 585, 590, 591, 592, 593, 596, 597, 598, 602, 603, 604, 606, 607, 608, 609, 610, 613, 614, 619, 620, 621, 622, 623, 624, 626, 627, 629, 633, 647, 648, 655, 661, 662, 663, 666, 667, 669, 671, 672, 673, 690, 691, 692, 695, 696, 698, 700, 701, 702, 719, 723, 726, 728, 730, 732, 734, 740, 741, 744, 746, 748, 753, 754, 756, 765, 767, 768, 769, 782, 783, 787, 788, 797, 800, 802, 804, 806, 812, 813, 816, 818, 820, 825, 826, 839, 854, 856, 861, 864, 865, 866, 867, 868, 871, 881, 883, 884, 885, 887, 889, 890, 896, 899, 901, 903, 906, 921, 923, 928, 931, 932, 933, 934, 939, 954, 956, 964, 965, 968, 969, 970, 971, 976, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1011, 1012, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1041, 1072, 1073, 1074, 1078, 1088, 1092, 1099, 1100, 1102, 1103, 1105, 1108, 1109, 1110, 1115, 1116, 1119, 1120, 1121, 1129, 1130, 1133, 1134, 1136, 1145, 1146, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1174, 1175, 1182, 1183, 1186, 1187, 1188, 1191, 1192, 1194, 1196, 1197, 1198, 1215, 1216, 1217, 1220, 1221, 1223, 1225, 1226, 1227, 1256, 1257, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1285, 1287, 1296, 1300, 1314, 1338, 1345, 1347, 1348, 1350, 1357, 1364, 1365, 1369, 1370, 1373, 1376], "exclude_field": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 584, 590, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 633, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1035], "include_field": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 63, 92, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 584, 590, 593, 598, 602, 603, 604, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 633, 663, 692, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1188, 1217], "verbos": [0, 497, 507, 584, 585, 596, 597, 613, 614, 1148, 1158, 1376], "kwarg": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 130, 131, 132, 203, 204, 205, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 246, 249, 250, 251, 252, 253, 270, 271, 272, 278, 282, 283, 284, 303, 304, 305, 311, 312, 313, 314, 315, 316, 319, 320, 321, 340, 341, 342, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 402, 507, 535, 536, 537, 538, 539, 584, 587, 588, 589, 590, 591, 592, 593, 594, 595, 598, 599, 600, 602, 604, 606, 607, 608, 609, 610, 611, 612, 618, 619, 620, 621, 622, 623, 624, 767, 768, 769, 853, 854, 855, 861, 865, 866, 867, 868, 880, 881, 883, 884, 885, 886, 887, 888, 889, 896, 899, 900, 901, 902, 903, 920, 921, 922, 928, 932, 933, 934, 953, 954, 955, 961, 962, 963, 964, 965, 966, 969, 970, 971, 990, 991, 992, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1012, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1158, 1273, 1274, 1275, 1276, 1277, 1371], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 106, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 197, 201, 202, 203, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 311, 312, 313, 315, 316, 324, 348, 349, 350, 352, 353, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 392, 395, 397, 399, 407, 409, 412, 414, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 706, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 851, 852, 853, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 961, 962, 963, 965, 966, 974, 998, 999, 1000, 1002, 1003, 1011, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1041, 1046, 1050, 1051, 1055, 1056, 1057, 1058, 1061, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1219, 1231, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1322, 1323, 1325, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376, 1378], "read": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 37, 151, 204, 215, 271, 282, 304, 319, 341, 356, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 633, 635, 728, 800, 854, 865, 921, 932, 954, 969, 991, 1006, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1035, 1320, 1322, 1323, 1325, 1326, 1329, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1342, 1344, 1347, 1348, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1373, 1374], "skyecho": [0, 1, 27, 584, 586, 623, 1320], "netcdf": [0, 1, 5, 6, 7, 8, 13, 15, 17, 21, 27, 28, 33, 55, 364, 365, 366, 367, 369, 373, 378, 379, 496, 535, 538, 584, 586, 590, 591, 592, 593, 595, 601, 603, 607, 611, 623, 624, 629, 655, 1017, 1018, 1019, 1020, 1022, 1026, 1031, 1032, 1147, 1182, 1273, 1276, 1320, 1362, 1363], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 45, 55, 60, 77, 89, 106, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 426, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 479, 480, 481, 482, 495, 497, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 570, 581, 582, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 633, 635, 638, 639, 640, 641, 644, 655, 660, 677, 689, 706, 756, 757, 758, 763, 767, 768, 769, 771, 772, 773, 774, 777, 781, 782, 783, 787, 788, 789, 791, 792, 828, 829, 830, 831, 832, 833, 834, 835, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1077, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1096, 1097, 1099, 1100, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1130, 1131, 1132, 1133, 1146, 1148, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1172, 1182, 1185, 1202, 1214, 1231, 1244, 1308, 1320, 1322, 1324, 1325, 1327, 1328, 1329, 1332, 1334, 1335, 1336, 1339, 1341, 1344, 1350, 1351, 1352, 1353, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1369, 1371, 1372, 1373, 1374, 1375, 1378], "creat": [0, 30, 31, 33, 46, 57, 60, 62, 65, 89, 91, 94, 130, 131, 132, 150, 179, 180, 181, 182, 183, 184, 185, 186, 187, 203, 217, 221, 240, 254, 270, 283, 287, 303, 315, 320, 324, 340, 352, 357, 373, 378, 379, 380, 381, 382, 442, 450, 460, 473, 474, 476, 493, 514, 518, 519, 520, 569, 570, 584, 626, 627, 629, 646, 657, 660, 662, 665, 689, 691, 694, 767, 768, 769, 770, 781, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 853, 867, 871, 890, 904, 920, 933, 937, 953, 965, 970, 974, 990, 1002, 1007, 1012, 1026, 1031, 1032, 1033, 1034, 1035, 1072, 1073, 1074, 1093, 1101, 1111, 1124, 1125, 1127, 1144, 1165, 1170, 1171, 1173, 1183, 1185, 1187, 1190, 1214, 1216, 1219, 1307, 1308, 1322, 1323, 1325, 1328, 1331, 1332, 1333, 1335, 1336, 1338, 1352, 1353, 1357, 1362, 1363, 1365, 1368, 1371, 1372, 1374, 1376], "new": [0, 45, 62, 63, 65, 91, 92, 94, 155, 157, 164, 171, 176, 442, 450, 460, 473, 474, 476, 503, 514, 518, 520, 528, 553, 568, 572, 573, 584, 644, 662, 663, 665, 691, 692, 694, 732, 734, 741, 748, 753, 770, 804, 806, 813, 820, 825, 1093, 1101, 1111, 1124, 1125, 1127, 1154, 1165, 1170, 1187, 1188, 1190, 1216, 1217, 1219, 1266, 1291, 1306, 1310, 1311, 1331, 1355, 1358, 1362, 1365, 1366, 1376, 1378], "cf": [0, 5, 6, 7, 13, 23, 28, 33, 60, 89, 366, 367, 378, 379, 496, 584, 590, 591, 592, 601, 618, 624, 629, 660, 689, 1019, 1020, 1031, 1032, 1147, 1185, 1214, 1325, 1335, 1353, 1362, 1373, 1374], "radial": [0, 5, 6, 7, 13, 23, 28, 33, 60, 89, 130, 131, 366, 367, 378, 427, 451, 452, 493, 494, 507, 518, 519, 525, 542, 570, 584, 590, 591, 592, 601, 618, 624, 629, 660, 689, 767, 768, 1019, 1020, 1031, 1078, 1102, 1103, 1144, 1145, 1158, 1170, 1171, 1185, 1214, 1263, 1280, 1308, 1321, 1325, 1327, 1335, 1353, 1362, 1366, 1371, 1373, 1374], "singl": [0, 31, 45, 131, 132, 134, 209, 210, 212, 214, 276, 277, 279, 281, 309, 310, 316, 318, 346, 347, 353, 355, 380, 540, 576, 584, 627, 644, 768, 769, 770, 775, 787, 859, 860, 862, 864, 926, 927, 929, 931, 959, 960, 966, 968, 996, 997, 1003, 1005, 1033, 1074, 1251, 1278, 1314, 1325, 1327, 1330, 1331, 1334, 1355, 1370, 1371, 1374, 1376], "sweep": [0, 1, 27, 31, 40, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 130, 131, 132, 134, 164, 176, 179, 182, 183, 189, 191, 203, 204, 206, 211, 215, 216, 217, 218, 256, 258, 270, 271, 273, 278, 282, 283, 284, 289, 291, 303, 304, 306, 314, 315, 319, 320, 321, 326, 328, 340, 341, 343, 351, 352, 356, 357, 358, 372, 373, 374, 376, 427, 450, 473, 518, 533, 534, 540, 584, 586, 623, 627, 639, 660, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 682, 683, 684, 685, 686, 687, 688, 689, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 711, 712, 713, 714, 715, 716, 717, 741, 753, 767, 768, 769, 772, 775, 778, 779, 781, 813, 825, 828, 831, 832, 839, 841, 853, 854, 856, 861, 865, 866, 867, 868, 906, 908, 920, 921, 923, 928, 932, 933, 934, 939, 941, 953, 954, 956, 964, 965, 969, 970, 971, 976, 978, 990, 991, 993, 1001, 1002, 1006, 1007, 1008, 1025, 1026, 1027, 1029, 1061, 1069, 1070, 1078, 1101, 1124, 1170, 1185, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1246, 1247, 1271, 1272, 1278, 1320, 1323, 1327, 1331, 1347, 1348, 1350, 1355, 1357, 1359, 1366, 1369, 1370, 1371, 1372, 1373], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 77, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 106, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 572, 573, 575, 576, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 633, 634, 635, 636, 639, 640, 643, 644, 646, 647, 648, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 677, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 706, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 732, 734, 741, 748, 753, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 800, 804, 806, 813, 820, 825, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 974, 975, 976, 977, 978, 979, 980, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1061, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1182, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1202, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1231, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1310, 1311, 1313, 1314, 1351, 1357, 1365, 1366, 1368, 1373, 1375, 1376], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 45, 46, 47, 49, 55, 60, 61, 62, 64, 69, 89, 90, 91, 93, 98, 121, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 150, 155, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 389, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 520, 528, 530, 553, 570, 572, 573, 575, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 633, 635, 636, 639, 640, 644, 646, 647, 649, 655, 660, 661, 662, 664, 669, 689, 690, 691, 693, 698, 721, 723, 724, 732, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 787, 788, 789, 790, 791, 792, 804, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 920, 921, 922, 923, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 990, 991, 992, 993, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1012, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1063, 1071, 1072, 1073, 1074, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1150, 1151, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1173, 1174, 1176, 1182, 1185, 1186, 1187, 1189, 1194, 1214, 1215, 1216, 1218, 1223, 1244, 1266, 1268, 1291, 1308, 1310, 1311, 1313], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 37, 39, 40, 41, 42, 45, 46, 47, 60, 61, 62, 64, 69, 77, 89, 90, 91, 93, 98, 106, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 150, 155, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 385, 391, 406, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 526, 527, 528, 550, 553, 570, 575, 582, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 631, 633, 635, 638, 639, 640, 641, 644, 646, 647, 660, 661, 662, 664, 669, 677, 689, 690, 691, 693, 698, 706, 732, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 787, 788, 789, 791, 792, 804, 828, 829, 830, 831, 832, 833, 834, 835, 854, 856, 861, 864, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 965, 968, 969, 970, 971, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1150, 1151, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1173, 1174, 1185, 1186, 1187, 1189, 1194, 1202, 1214, 1215, 1216, 1218, 1223, 1231, 1244, 1258, 1264, 1265, 1266, 1288, 1291, 1308, 1313, 1320, 1327, 1365, 1370, 1372, 1373], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 46, 47, 60, 61, 62, 65, 66, 67, 69, 70, 71, 72, 73, 82, 83, 85, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 111, 112, 114, 130, 131, 132, 135, 140, 141, 142, 155, 164, 176, 179, 187, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 249, 251, 253, 254, 271, 273, 278, 281, 282, 283, 284, 287, 304, 306, 314, 315, 318, 319, 320, 321, 324, 341, 343, 351, 352, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 423, 428, 430, 432, 434, 437, 439, 441, 442, 443, 445, 446, 450, 457, 459, 460, 463, 466, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 492, 493, 495, 496, 497, 500, 505, 506, 507, 508, 509, 511, 514, 515, 516, 517, 518, 519, 520, 526, 527, 540, 553, 572, 573, 576, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 639, 645, 646, 647, 660, 661, 662, 665, 666, 667, 669, 670, 671, 672, 673, 682, 683, 685, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 702, 711, 712, 714, 732, 741, 753, 761, 762, 765, 766, 767, 768, 769, 773, 774, 776, 777, 778, 779, 780, 785, 787, 788, 789, 790, 791, 792, 797, 804, 813, 825, 828, 837, 854, 856, 861, 864, 865, 866, 867, 868, 871, 881, 883, 884, 885, 887, 889, 890, 899, 901, 903, 904, 921, 923, 928, 931, 932, 933, 934, 937, 954, 956, 964, 965, 968, 969, 970, 971, 974, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1012, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1060, 1061, 1068, 1069, 1070, 1071, 1074, 1079, 1081, 1083, 1085, 1088, 1090, 1092, 1093, 1094, 1096, 1097, 1101, 1108, 1110, 1111, 1114, 1117, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1143, 1144, 1146, 1147, 1148, 1151, 1156, 1157, 1158, 1159, 1160, 1162, 1165, 1166, 1167, 1168, 1170, 1171, 1173, 1174, 1185, 1186, 1187, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1207, 1208, 1210, 1214, 1215, 1216, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1236, 1237, 1239, 1244, 1249, 1251, 1264, 1265, 1278, 1291, 1310, 1311, 1314, 1320, 1322, 1323, 1325, 1326, 1329, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1354, 1355, 1357, 1359, 1362, 1363, 1364, 1365, 1366, 1373, 1374, 1376], "from": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 45, 46, 49, 54, 57, 60, 62, 65, 69, 70, 71, 72, 89, 91, 94, 98, 99, 100, 101, 118, 119, 120, 122, 125, 126, 130, 131, 132, 135, 136, 137, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 204, 205, 206, 211, 214, 215, 216, 217, 218, 221, 229, 231, 233, 234, 235, 237, 239, 240, 246, 247, 249, 251, 253, 254, 271, 272, 273, 278, 281, 282, 283, 284, 287, 304, 305, 306, 312, 314, 315, 318, 319, 320, 321, 324, 341, 342, 343, 349, 351, 352, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 411, 419, 421, 426, 427, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 488, 489, 490, 493, 495, 496, 497, 502, 503, 505, 506, 507, 509, 510, 511, 514, 516, 518, 519, 520, 525, 533, 534, 540, 541, 544, 545, 546, 552, 553, 555, 556, 557, 558, 559, 561, 562, 568, 570, 581, 582, 584, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 631, 638, 639, 640, 641, 644, 646, 649, 654, 657, 660, 662, 665, 669, 670, 671, 672, 689, 691, 694, 698, 699, 700, 701, 718, 719, 720, 722, 725, 726, 728, 732, 734, 741, 748, 753, 756, 757, 758, 762, 767, 768, 769, 772, 773, 777, 778, 779, 780, 781, 782, 783, 785, 787, 788, 789, 797, 799, 800, 804, 806, 813, 820, 825, 828, 829, 830, 831, 832, 833, 834, 835, 837, 854, 855, 856, 861, 864, 865, 866, 867, 868, 871, 879, 881, 883, 884, 885, 887, 889, 890, 896, 897, 899, 901, 903, 904, 921, 922, 923, 928, 931, 932, 933, 934, 937, 954, 955, 956, 962, 964, 965, 968, 969, 970, 971, 974, 991, 992, 993, 999, 1001, 1002, 1005, 1006, 1007, 1008, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1038, 1046, 1048, 1051, 1058, 1060, 1063, 1065, 1066, 1067, 1071, 1072, 1073, 1074, 1077, 1078, 1080, 1081, 1082, 1083, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1144, 1146, 1147, 1148, 1153, 1154, 1156, 1157, 1158, 1160, 1161, 1162, 1165, 1167, 1169, 1170, 1171, 1173, 1176, 1181, 1185, 1187, 1190, 1194, 1195, 1196, 1197, 1214, 1216, 1219, 1223, 1224, 1225, 1226, 1251, 1263, 1271, 1272, 1278, 1279, 1282, 1283, 1284, 1290, 1291, 1293, 1294, 1295, 1296, 1297, 1299, 1300, 1306, 1308, 1320, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1341, 1344, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1378], "base": [0, 60, 65, 66, 67, 69, 70, 71, 72, 73, 89, 94, 95, 96, 98, 99, 100, 101, 102, 131, 132, 151, 179, 180, 181, 182, 183, 184, 185, 186, 217, 283, 320, 357, 380, 432, 452, 460, 478, 479, 482, 495, 507, 542, 553, 584, 660, 665, 666, 667, 669, 670, 671, 672, 673, 689, 694, 695, 696, 698, 699, 700, 701, 702, 728, 768, 769, 781, 800, 828, 829, 830, 831, 832, 833, 834, 835, 867, 933, 970, 1007, 1012, 1033, 1067, 1072, 1073, 1074, 1083, 1103, 1111, 1129, 1130, 1133, 1146, 1158, 1185, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1214, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1280, 1291, 1321, 1324, 1325, 1327, 1362, 1366, 1369, 1372, 1373, 1374, 1376], "path": [0, 23, 32, 132, 584, 618, 628, 757, 758, 769, 1183, 1244, 1327, 1328, 1362, 1372, 1375, 1376], "where": [0, 5, 6, 7, 28, 32, 71, 72, 100, 101, 118, 122, 125, 129, 130, 131, 132, 133, 135, 137, 141, 142, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 182, 183, 204, 211, 214, 215, 216, 217, 218, 232, 248, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 366, 367, 428, 442, 450, 451, 460, 473, 474, 476, 479, 494, 495, 510, 511, 513, 519, 528, 533, 534, 543, 544, 553, 575, 584, 590, 591, 592, 624, 628, 671, 672, 700, 701, 718, 722, 725, 730, 732, 733, 734, 735, 736, 737, 739, 740, 741, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 757, 758, 763, 765, 766, 767, 768, 769, 771, 772, 773, 774, 777, 781, 783, 791, 792, 802, 804, 805, 806, 807, 808, 809, 811, 812, 813, 816, 818, 819, 820, 821, 823, 824, 825, 826, 827, 828, 831, 832, 854, 861, 864, 865, 866, 867, 868, 882, 898, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1011, 1012, 1019, 1020, 1079, 1093, 1101, 1102, 1111, 1124, 1125, 1127, 1130, 1145, 1146, 1161, 1162, 1164, 1171, 1196, 1197, 1225, 1226, 1266, 1271, 1272, 1281, 1282, 1291, 1313, 1327, 1328, 1331, 1336, 1339, 1355, 1357, 1362, 1365, 1369, 1378], "store": [0, 3, 9, 14, 16, 22, 26, 30, 31, 33, 46, 60, 89, 130, 131, 132, 383, 407, 428, 442, 450, 460, 473, 474, 476, 513, 584, 588, 594, 602, 606, 612, 621, 626, 627, 629, 646, 660, 689, 767, 768, 769, 787, 788, 1037, 1074, 1079, 1093, 1101, 1111, 1124, 1125, 1127, 1164, 1173, 1185, 1214, 1322, 1327, 1355, 1362, 1365, 1368, 1370, 1371, 1372, 1373, 1378], "extract": [0, 10, 204, 271, 304, 341, 376, 474, 478, 496, 533, 534, 546, 584, 598, 854, 921, 954, 991, 1012, 1029, 1125, 1129, 1147, 1271, 1272, 1284, 1325, 1331, 1352, 1354, 1357, 1360, 1362, 1374], "If": [0, 6, 7, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 29, 30, 31, 45, 46, 47, 60, 62, 63, 64, 71, 89, 91, 92, 93, 100, 121, 123, 124, 126, 127, 130, 134, 164, 176, 179, 182, 183, 189, 191, 204, 205, 210, 211, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 271, 272, 277, 278, 282, 283, 284, 289, 291, 304, 305, 310, 313, 314, 315, 319, 320, 321, 326, 328, 341, 342, 347, 350, 351, 352, 356, 357, 358, 363, 365, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 410, 417, 421, 425, 432, 437, 441, 442, 443, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 463, 464, 465, 468, 469, 470, 473, 474, 476, 478, 479, 482, 483, 484, 485, 486, 488, 489, 493, 494, 495, 496, 497, 504, 507, 508, 509, 510, 511, 512, 515, 516, 520, 528, 533, 534, 541, 542, 561, 562, 563, 572, 573, 584, 585, 591, 592, 593, 596, 597, 602, 604, 606, 607, 608, 609, 610, 613, 614, 619, 620, 621, 622, 623, 625, 626, 627, 644, 646, 647, 660, 662, 663, 664, 671, 689, 691, 692, 693, 700, 721, 723, 724, 726, 741, 753, 759, 761, 765, 766, 767, 770, 774, 775, 779, 781, 787, 788, 789, 813, 825, 828, 831, 832, 839, 841, 854, 855, 860, 861, 865, 866, 867, 868, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 896, 897, 898, 899, 900, 901, 902, 903, 906, 908, 921, 922, 927, 928, 932, 933, 934, 939, 941, 954, 955, 960, 963, 964, 965, 969, 970, 971, 976, 978, 991, 992, 997, 1000, 1001, 1002, 1006, 1007, 1008, 1011, 1012, 1016, 1018, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1044, 1048, 1055, 1058, 1074, 1076, 1083, 1088, 1092, 1093, 1094, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1119, 1120, 1121, 1124, 1125, 1127, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1144, 1145, 1146, 1147, 1148, 1155, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1173, 1174, 1185, 1187, 1188, 1189, 1196, 1214, 1216, 1217, 1218, 1225, 1266, 1271, 1272, 1279, 1280, 1299, 1300, 1301, 1310, 1311, 1357, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1375, 1376, 1378], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 45, 46, 47, 48, 60, 62, 63, 70, 71, 72, 73, 77, 89, 91, 92, 99, 100, 101, 102, 106, 118, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 149, 151, 153, 155, 156, 157, 158, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 176, 177, 179, 182, 183, 189, 191, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 271, 272, 273, 276, 277, 278, 281, 282, 283, 284, 287, 289, 291, 304, 305, 306, 309, 310, 314, 315, 318, 319, 320, 321, 324, 326, 328, 341, 342, 343, 346, 347, 351, 352, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 389, 396, 410, 417, 418, 421, 425, 427, 428, 433, 435, 437, 441, 442, 443, 446, 450, 451, 452, 457, 460, 464, 466, 473, 474, 476, 478, 479, 481, 483, 484, 485, 488, 489, 494, 495, 496, 497, 500, 504, 505, 507, 508, 509, 511, 512, 513, 515, 516, 518, 520, 525, 526, 527, 533, 534, 540, 541, 542, 544, 552, 553, 555, 558, 561, 562, 563, 565, 571, 572, 573, 575, 576, 584, 587, 588, 589, 590, 591, 592, 593, 594, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 639, 644, 646, 647, 648, 660, 662, 663, 670, 671, 672, 673, 677, 689, 691, 692, 699, 700, 701, 702, 706, 718, 721, 722, 723, 724, 725, 728, 730, 732, 733, 734, 735, 737, 739, 740, 741, 744, 746, 747, 748, 749, 751, 753, 754, 756, 757, 758, 759, 761, 765, 766, 767, 768, 769, 770, 771, 774, 775, 776, 777, 779, 781, 782, 783, 786, 787, 788, 789, 790, 791, 797, 800, 802, 804, 805, 806, 807, 809, 811, 812, 813, 816, 818, 819, 820, 821, 823, 825, 826, 828, 831, 832, 839, 841, 854, 855, 856, 859, 860, 861, 864, 865, 866, 867, 868, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 896, 897, 898, 899, 900, 901, 902, 903, 906, 908, 921, 922, 923, 926, 927, 928, 931, 932, 933, 934, 937, 939, 941, 954, 955, 956, 959, 960, 964, 965, 968, 969, 970, 971, 974, 976, 978, 991, 992, 993, 996, 997, 1001, 1002, 1005, 1006, 1007, 1008, 1011, 1012, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1044, 1045, 1048, 1050, 1055, 1056, 1058, 1061, 1068, 1069, 1070, 1072, 1073, 1074, 1076, 1078, 1079, 1084, 1086, 1088, 1092, 1093, 1094, 1097, 1101, 1102, 1103, 1108, 1111, 1115, 1117, 1124, 1125, 1127, 1129, 1130, 1132, 1134, 1135, 1136, 1139, 1140, 1145, 1146, 1147, 1148, 1151, 1155, 1156, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1167, 1170, 1173, 1174, 1175, 1185, 1187, 1188, 1195, 1196, 1197, 1198, 1202, 1214, 1216, 1217, 1224, 1225, 1226, 1227, 1231, 1251, 1263, 1264, 1265, 1271, 1272, 1278, 1279, 1280, 1282, 1290, 1291, 1293, 1296, 1299, 1300, 1301, 1303, 1309, 1310, 1311, 1313, 1314, 1319, 1322, 1327, 1328, 1331, 1336, 1337, 1338, 1339, 1342, 1347, 1348, 1355, 1357, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1378], "current": [0, 43, 48, 130, 155, 157, 164, 171, 176, 189, 191, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 229, 231, 232, 233, 234, 235, 237, 239, 246, 247, 248, 249, 251, 253, 256, 258, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 291, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 326, 328, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 371, 424, 442, 450, 460, 473, 474, 476, 497, 507, 540, 584, 637, 642, 648, 732, 734, 741, 748, 753, 765, 766, 767, 804, 806, 813, 820, 825, 839, 841, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 879, 881, 882, 883, 884, 885, 887, 889, 896, 897, 898, 899, 901, 903, 906, 908, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 939, 941, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 967, 968, 969, 970, 971, 973, 976, 978, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1010, 1024, 1062, 1064, 1093, 1101, 1111, 1124, 1125, 1127, 1148, 1158, 1175, 1278, 1320, 1376], "directori": [0, 45, 581, 584, 644, 1012, 1183, 1319, 1327, 1375, 1376], "time": [0, 1, 3, 9, 18, 22, 27, 30, 33, 46, 54, 55, 60, 89, 130, 144, 145, 189, 191, 204, 206, 211, 215, 216, 217, 218, 256, 258, 271, 273, 278, 282, 283, 284, 289, 291, 304, 306, 314, 315, 319, 320, 321, 326, 328, 341, 343, 351, 352, 356, 357, 358, 361, 364, 365, 376, 378, 379, 432, 441, 442, 449, 450, 459, 460, 473, 474, 476, 478, 496, 502, 511, 513, 535, 538, 584, 586, 588, 594, 604, 608, 612, 623, 626, 629, 646, 654, 655, 660, 689, 765, 766, 767, 794, 795, 839, 841, 854, 856, 861, 865, 866, 867, 868, 906, 908, 921, 923, 928, 932, 933, 934, 939, 941, 954, 956, 964, 965, 969, 970, 971, 976, 978, 991, 993, 1001, 1002, 1006, 1007, 1008, 1014, 1017, 1018, 1029, 1031, 1032, 1061, 1064, 1074, 1083, 1092, 1093, 1100, 1101, 1110, 1111, 1124, 1125, 1127, 1129, 1147, 1153, 1162, 1164, 1173, 1181, 1182, 1185, 1214, 1273, 1276, 1320, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1364, 1370, 1371, 1373, 1376, 1378], "format": [0, 3, 9, 22, 26, 33, 54, 55, 60, 89, 189, 191, 204, 206, 211, 214, 215, 216, 217, 218, 256, 258, 271, 273, 278, 281, 282, 283, 284, 289, 291, 304, 306, 314, 315, 318, 319, 320, 321, 326, 328, 341, 343, 351, 352, 355, 356, 357, 358, 363, 373, 375, 377, 378, 379, 381, 582, 583, 584, 588, 594, 612, 621, 629, 654, 655, 660, 689, 839, 841, 854, 856, 861, 864, 865, 866, 867, 868, 906, 908, 921, 923, 928, 931, 932, 933, 934, 939, 941, 954, 956, 964, 965, 968, 969, 970, 971, 976, 978, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1012, 1013, 1016, 1026, 1028, 1030, 1031, 1032, 1034, 1181, 1182, 1185, 1214, 1320, 1348, 1362, 1364, 1370], "prefix": [0, 63, 92, 584, 663, 692, 1183, 1188, 1217], "add": [0, 3, 9, 22, 47, 61, 62, 90, 91, 137, 204, 206, 211, 214, 215, 216, 217, 218, 231, 232, 233, 234, 235, 237, 239, 246, 248, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 439, 442, 450, 460, 473, 476, 584, 588, 594, 612, 647, 661, 662, 690, 691, 770, 783, 854, 856, 861, 864, 865, 866, 867, 868, 881, 882, 883, 884, 885, 887, 889, 896, 898, 899, 901, 903, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 965, 968, 969, 970, 971, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1012, 1090, 1093, 1101, 1111, 1124, 1127, 1174, 1186, 1187, 1215, 1216, 1320, 1331, 1336, 1337, 1338, 1347, 1348, 1350, 1355, 1357, 1358, 1366, 1372, 1375, 1376, 1378], "contain": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 34, 40, 45, 46, 47, 48, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 127, 130, 131, 132, 134, 135, 136, 137, 179, 180, 181, 182, 183, 184, 185, 186, 193, 204, 211, 214, 215, 216, 217, 218, 220, 230, 260, 271, 278, 281, 282, 283, 284, 286, 293, 304, 314, 315, 318, 319, 320, 321, 323, 330, 341, 351, 352, 355, 356, 357, 358, 360, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 456, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 504, 507, 508, 509, 510, 511, 512, 513, 514, 516, 519, 525, 526, 527, 533, 534, 540, 542, 546, 570, 572, 573, 576, 584, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 631, 639, 644, 646, 647, 648, 660, 661, 665, 666, 667, 669, 670, 671, 672, 673, 689, 690, 694, 695, 696, 698, 699, 700, 701, 702, 756, 757, 758, 759, 765, 766, 767, 768, 769, 775, 777, 778, 779, 780, 781, 782, 783, 787, 788, 789, 828, 829, 830, 831, 832, 833, 834, 835, 843, 854, 861, 864, 865, 866, 867, 868, 870, 880, 910, 921, 928, 931, 932, 933, 934, 936, 943, 954, 964, 965, 968, 969, 970, 971, 973, 980, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1010, 1012, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1037, 1050, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1107, 1108, 1109, 1110, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1155, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1169, 1171, 1173, 1174, 1175, 1185, 1186, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1214, 1215, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1263, 1264, 1265, 1271, 1272, 1278, 1280, 1284, 1308, 1310, 1311, 1314, 1328, 1340, 1341, 1362, 1364, 1365, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1378], "sufix": [0, 584], "datetim": [0, 1, 27, 144, 145, 189, 191, 211, 215, 217, 256, 258, 278, 282, 283, 289, 291, 314, 319, 320, 326, 328, 351, 356, 357, 361, 364, 365, 382, 442, 450, 460, 473, 474, 476, 535, 536, 537, 538, 539, 584, 586, 623, 794, 795, 839, 841, 861, 865, 867, 906, 908, 928, 932, 933, 939, 941, 964, 969, 970, 976, 978, 1001, 1006, 1007, 1014, 1017, 1018, 1035, 1093, 1101, 1111, 1124, 1125, 1127, 1273, 1274, 1275, 1276, 1277], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 46, 47, 54, 55, 61, 62, 63, 65, 66, 67, 69, 77, 86, 89, 90, 91, 92, 94, 95, 96, 98, 106, 115, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 144, 145, 151, 179, 180, 181, 182, 183, 184, 185, 186, 187, 205, 218, 221, 229, 233, 234, 240, 247, 254, 272, 284, 287, 305, 315, 321, 324, 342, 358, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 389, 408, 409, 415, 416, 419, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 511, 512, 513, 514, 518, 519, 520, 526, 527, 528, 540, 541, 543, 545, 546, 551, 553, 554, 555, 558, 563, 564, 568, 569, 572, 573, 575, 576, 581, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 631, 635, 646, 647, 654, 655, 661, 662, 663, 665, 666, 667, 669, 677, 686, 689, 690, 691, 692, 694, 695, 696, 698, 706, 715, 728, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 787, 788, 789, 791, 792, 794, 795, 800, 828, 829, 830, 831, 832, 833, 834, 835, 837, 855, 868, 871, 879, 883, 884, 890, 897, 904, 922, 934, 937, 955, 965, 971, 974, 992, 1008, 1012, 1014, 1015, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1042, 1043, 1046, 1049, 1053, 1054, 1059, 1061, 1068, 1071, 1072, 1073, 1074, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1162, 1163, 1164, 1165, 1169, 1170, 1171, 1172, 1173, 1174, 1181, 1182, 1186, 1187, 1188, 1190, 1191, 1192, 1194, 1202, 1211, 1214, 1215, 1216, 1217, 1219, 1220, 1221, 1223, 1231, 1240, 1245, 1246, 1247, 1248, 1251, 1264, 1265, 1266, 1278, 1279, 1281, 1283, 1284, 1289, 1291, 1292, 1293, 1296, 1301, 1302, 1306, 1307, 1310, 1311, 1313, 1314, 1327, 1331, 1338, 1339, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1355, 1357, 1358, 1362, 1363, 1364, 1368, 1369, 1370, 1371, 1372, 1376], "The": [0, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 45, 46, 60, 89, 118, 122, 125, 126, 129, 130, 131, 132, 133, 135, 139, 140, 141, 142, 150, 180, 181, 185, 209, 234, 276, 309, 346, 352, 362, 363, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 396, 423, 424, 427, 428, 430, 433, 437, 442, 443, 446, 447, 449, 450, 460, 462, 463, 466, 468, 473, 474, 476, 478, 479, 480, 481, 482, 494, 495, 497, 500, 502, 504, 505, 506, 507, 508, 509, 511, 512, 515, 516, 517, 518, 521, 522, 525, 528, 529, 530, 531, 532, 540, 541, 542, 543, 547, 548, 549, 552, 554, 556, 557, 559, 560, 561, 562, 565, 568, 570, 572, 573, 575, 583, 584, 588, 589, 593, 594, 601, 602, 604, 606, 607, 608, 609, 610, 612, 617, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 644, 646, 660, 689, 718, 722, 725, 726, 756, 757, 758, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 778, 779, 780, 786, 787, 788, 789, 790, 791, 792, 829, 830, 834, 859, 884, 926, 959, 996, 1002, 1012, 1015, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1037, 1061, 1062, 1063, 1064, 1068, 1071, 1072, 1073, 1074, 1078, 1079, 1081, 1084, 1088, 1093, 1094, 1097, 1098, 1100, 1101, 1111, 1113, 1114, 1117, 1119, 1124, 1125, 1127, 1129, 1130, 1131, 1132, 1133, 1145, 1146, 1148, 1151, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1166, 1167, 1168, 1170, 1173, 1185, 1214, 1244, 1258, 1259, 1260, 1263, 1266, 1267, 1268, 1269, 1270, 1278, 1279, 1280, 1281, 1285, 1286, 1287, 1290, 1292, 1294, 1295, 1297, 1298, 1299, 1300, 1303, 1306, 1308, 1310, 1311, 1313, 1325, 1328, 1339, 1350, 1357, 1362, 1363, 1366, 1369, 1370, 1371, 1372, 1375], "start": [0, 1, 18, 30, 46, 60, 75, 76, 87, 88, 89, 104, 105, 116, 117, 230, 376, 382, 451, 474, 496, 511, 536, 584, 586, 596, 604, 608, 626, 646, 660, 675, 676, 687, 688, 689, 704, 705, 716, 717, 880, 1029, 1035, 1102, 1125, 1147, 1162, 1173, 1185, 1200, 1201, 1212, 1213, 1214, 1229, 1230, 1241, 1242, 1274, 1327, 1336, 1337, 1347, 1348, 1362, 1364, 1370, 1372, 1376, 1377], "end": [0, 1, 18, 27, 30, 45, 68, 76, 84, 88, 97, 105, 113, 117, 131, 132, 135, 137, 230, 511, 584, 586, 604, 608, 623, 626, 644, 668, 676, 684, 688, 697, 705, 713, 717, 756, 757, 758, 768, 769, 772, 773, 777, 783, 787, 788, 789, 880, 1162, 1193, 1201, 1209, 1213, 1222, 1230, 1238, 1242, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1371], "period": [0, 134, 540, 584, 775, 1278, 1366], "we": [0, 494, 584, 778, 1145, 1320, 1327, 1328, 1331, 1336, 1355, 1357, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1377, 1378], "want": [0, 8, 584, 593, 1328, 1362, 1369, 1373, 1376, 1378], "dict": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 34, 35, 38, 41, 46, 47, 49, 54, 60, 61, 89, 90, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 141, 142, 187, 254, 287, 315, 324, 362, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 381, 382, 383, 423, 427, 433, 434, 436, 437, 444, 447, 451, 452, 453, 454, 455, 461, 462, 475, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 526, 527, 528, 555, 570, 584, 587, 588, 589, 590, 591, 592, 593, 594, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 615, 616, 619, 620, 621, 622, 623, 624, 625, 631, 633, 636, 640, 646, 647, 649, 654, 660, 661, 689, 690, 721, 723, 724, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 782, 783, 787, 788, 789, 791, 792, 837, 904, 937, 965, 974, 1012, 1015, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1034, 1035, 1037, 1072, 1073, 1074, 1078, 1084, 1085, 1087, 1088, 1095, 1098, 1102, 1103, 1104, 1105, 1106, 1112, 1113, 1126, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1173, 1174, 1176, 1181, 1185, 1186, 1214, 1215, 1264, 1265, 1266, 1293, 1308, 1364], "option": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 46, 47, 48, 55, 56, 60, 61, 62, 63, 66, 67, 69, 71, 72, 77, 89, 92, 95, 96, 98, 100, 101, 118, 119, 120, 122, 123, 125, 130, 131, 132, 134, 135, 136, 137, 149, 151, 155, 157, 164, 171, 176, 204, 211, 215, 216, 217, 218, 220, 231, 233, 235, 237, 239, 246, 249, 251, 253, 271, 278, 282, 283, 284, 286, 304, 312, 313, 314, 315, 319, 320, 321, 323, 341, 349, 350, 351, 352, 356, 357, 358, 360, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 423, 426, 427, 436, 444, 446, 447, 455, 462, 466, 467, 468, 469, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 493, 495, 496, 497, 502, 503, 504, 507, 508, 509, 510, 516, 518, 519, 533, 534, 541, 558, 570, 575, 576, 584, 587, 588, 589, 590, 593, 594, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 631, 639, 646, 647, 648, 655, 656, 660, 661, 662, 663, 666, 667, 669, 671, 672, 677, 689, 692, 695, 696, 698, 700, 701, 718, 719, 720, 722, 723, 725, 728, 732, 734, 741, 748, 753, 756, 757, 758, 761, 762, 767, 768, 769, 770, 775, 777, 782, 783, 800, 804, 806, 813, 820, 825, 854, 861, 865, 866, 867, 868, 870, 881, 883, 885, 887, 889, 896, 899, 901, 903, 921, 928, 932, 933, 934, 936, 954, 962, 963, 964, 965, 969, 970, 971, 973, 991, 999, 1000, 1001, 1002, 1006, 1007, 1008, 1010, 1011, 1012, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1074, 1077, 1078, 1087, 1095, 1097, 1098, 1106, 1113, 1117, 1118, 1119, 1120, 1129, 1130, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1144, 1146, 1147, 1148, 1153, 1154, 1155, 1158, 1159, 1160, 1161, 1167, 1169, 1170, 1171, 1173, 1174, 1175, 1182, 1185, 1186, 1187, 1188, 1191, 1192, 1194, 1196, 1197, 1202, 1214, 1217, 1220, 1221, 1223, 1225, 1226, 1271, 1272, 1279, 1296, 1308, 1313, 1314, 1320, 1357, 1373], "dictionari": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 37, 38, 41, 44, 46, 47, 60, 61, 62, 64, 89, 90, 91, 93, 121, 123, 124, 127, 128, 130, 131, 132, 134, 136, 137, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 386, 412, 414, 426, 427, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 445, 446, 451, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 504, 510, 511, 512, 513, 516, 517, 526, 527, 528, 570, 584, 587, 588, 589, 590, 591, 592, 593, 594, 598, 599, 600, 602, 603, 604, 606, 607, 608, 609, 610, 612, 615, 616, 619, 620, 621, 622, 623, 624, 625, 629, 631, 633, 635, 636, 640, 643, 646, 647, 660, 661, 662, 664, 689, 690, 691, 693, 721, 723, 724, 756, 757, 758, 759, 760, 765, 766, 767, 768, 769, 770, 775, 778, 779, 780, 782, 783, 787, 788, 789, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1039, 1041, 1068, 1071, 1072, 1073, 1074, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1096, 1097, 1102, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1155, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1173, 1174, 1185, 1186, 1187, 1189, 1214, 1215, 1216, 1218, 1243, 1264, 1265, 1266, 1308, 1328, 1365, 1373], "map": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 41, 46, 60, 89, 122, 125, 209, 233, 234, 235, 246, 276, 287, 309, 311, 312, 313, 315, 316, 324, 346, 348, 349, 350, 352, 353, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 421, 428, 510, 584, 590, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 633, 640, 646, 660, 689, 722, 725, 859, 883, 884, 885, 896, 926, 937, 959, 961, 962, 963, 965, 966, 974, 996, 998, 999, 1000, 1002, 1003, 1012, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1048, 1058, 1079, 1161, 1173, 1185, 1214, 1331, 1334, 1335, 1337, 1338, 1353, 1355, 1357, 1362, 1363, 1370, 1371, 1372, 1374, 1376], "field": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 46, 47, 54, 60, 61, 62, 63, 64, 69, 72, 85, 89, 90, 91, 92, 93, 98, 101, 114, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 167, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 203, 204, 205, 206, 211, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 270, 271, 272, 273, 278, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 299, 303, 304, 305, 306, 314, 315, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 336, 340, 341, 342, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 423, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 525, 526, 527, 528, 530, 546, 552, 553, 555, 570, 572, 573, 574, 575, 584, 588, 590, 591, 592, 593, 594, 598, 600, 602, 603, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 633, 635, 638, 639, 640, 641, 646, 647, 654, 660, 661, 662, 663, 664, 669, 672, 685, 689, 690, 691, 692, 693, 698, 701, 714, 727, 728, 730, 732, 733, 734, 735, 736, 737, 739, 740, 744, 746, 747, 748, 749, 751, 752, 754, 755, 756, 757, 758, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 781, 782, 783, 787, 788, 789, 791, 792, 800, 802, 804, 805, 806, 807, 808, 809, 811, 812, 816, 818, 819, 820, 821, 823, 824, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 849, 853, 854, 855, 856, 861, 864, 865, 866, 867, 868, 875, 876, 877, 878, 879, 880, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 916, 920, 921, 922, 923, 928, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 949, 953, 954, 955, 956, 964, 965, 968, 969, 970, 971, 974, 975, 976, 977, 978, 979, 980, 986, 990, 991, 992, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1012, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1063, 1068, 1069, 1071, 1072, 1073, 1074, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1169, 1170, 1171, 1173, 1174, 1181, 1185, 1186, 1187, 1188, 1189, 1194, 1197, 1210, 1214, 1215, 1216, 1217, 1218, 1223, 1226, 1239, 1245, 1246, 1247, 1248, 1249, 1251, 1254, 1255, 1256, 1257, 1263, 1264, 1265, 1266, 1268, 1284, 1290, 1291, 1293, 1308, 1310, 1311, 1312, 1313, 1320, 1322, 1325, 1327, 1331, 1332, 1333, 1336, 1337, 1339, 1350, 1354, 1355, 1356, 1357, 1358, 1362, 1363, 1364, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1376], "radar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 40, 46, 54, 89, 91, 92, 94, 95, 96, 98, 101, 106, 118, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 151, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 203, 204, 209, 211, 215, 216, 217, 218, 231, 235, 237, 239, 249, 251, 253, 254, 270, 271, 276, 278, 282, 283, 284, 287, 303, 304, 309, 312, 314, 315, 319, 320, 321, 324, 340, 341, 346, 349, 351, 352, 356, 357, 358, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 526, 527, 528, 530, 533, 534, 537, 539, 540, 542, 543, 544, 545, 546, 551, 553, 555, 558, 563, 568, 570, 571, 572, 573, 574, 575, 576, 584, 587, 588, 590, 591, 592, 593, 594, 595, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 631, 633, 635, 639, 645, 646, 654, 689, 691, 692, 694, 695, 696, 698, 701, 706, 718, 719, 720, 728, 741, 753, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 791, 792, 793, 796, 797, 800, 813, 825, 828, 829, 830, 831, 832, 833, 834, 835, 837, 853, 854, 859, 861, 865, 866, 867, 868, 881, 885, 887, 889, 899, 901, 903, 904, 920, 921, 926, 928, 932, 933, 934, 937, 953, 954, 959, 962, 964, 965, 969, 970, 971, 974, 990, 991, 996, 999, 1001, 1002, 1006, 1007, 1008, 1012, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1034, 1035, 1060, 1061, 1063, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1173, 1181, 1214, 1216, 1217, 1219, 1220, 1221, 1223, 1226, 1231, 1246, 1247, 1248, 1251, 1254, 1255, 1256, 1257, 1264, 1265, 1266, 1268, 1271, 1272, 1275, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1289, 1291, 1293, 1296, 1301, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1368, 1369, 1370, 1371, 1372, 1374, 1377], "unlik": [0, 5, 10, 15, 27, 28, 366, 367, 584, 590, 598, 603, 623, 624, 1019, 1020], "other": [0, 5, 10, 15, 26, 27, 28, 46, 54, 56, 60, 89, 130, 131, 132, 134, 179, 183, 204, 206, 211, 214, 215, 216, 217, 218, 233, 234, 235, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 369, 372, 374, 376, 380, 388, 479, 495, 497, 511, 513, 514, 518, 584, 590, 598, 603, 621, 623, 624, 646, 654, 656, 660, 689, 767, 768, 769, 770, 775, 781, 828, 832, 854, 856, 861, 864, 865, 866, 867, 868, 883, 884, 885, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 965, 968, 969, 970, 971, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1016, 1019, 1020, 1022, 1025, 1027, 1029, 1033, 1061, 1074, 1130, 1146, 1148, 1162, 1164, 1165, 1170, 1173, 1181, 1185, 1214, 1246, 1247, 1248, 1320, 1357, 1362, 1364, 1371, 1375, 1376, 1378], "function": [0, 5, 10, 13, 15, 27, 28, 32, 45, 71, 100, 134, 148, 150, 179, 180, 181, 182, 183, 184, 185, 186, 203, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 270, 271, 278, 282, 283, 284, 287, 303, 304, 314, 319, 320, 321, 324, 340, 341, 351, 356, 357, 358, 363, 366, 367, 370, 371, 377, 380, 423, 428, 437, 443, 460, 463, 478, 479, 495, 507, 509, 515, 517, 518, 546, 550, 553, 558, 559, 560, 569, 570, 576, 582, 584, 590, 598, 601, 603, 623, 624, 628, 632, 644, 645, 671, 700, 775, 778, 779, 780, 781, 799, 828, 829, 830, 831, 832, 833, 834, 835, 836, 853, 854, 861, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 920, 921, 928, 932, 933, 934, 937, 953, 954, 964, 969, 970, 971, 974, 990, 991, 1001, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1019, 1020, 1023, 1024, 1030, 1033, 1060, 1061, 1065, 1066, 1067, 1069, 1070, 1072, 1073, 1074, 1075, 1079, 1088, 1094, 1111, 1114, 1129, 1130, 1146, 1158, 1160, 1166, 1168, 1170, 1172, 1196, 1225, 1258, 1284, 1288, 1291, 1296, 1297, 1298, 1307, 1308, 1314, 1319, 1320, 1336, 1355, 1357, 1362, 1366, 1368, 1370, 1371, 1372, 1373, 1375, 1376], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 45, 46, 48, 60, 62, 63, 66, 67, 69, 71, 72, 73, 89, 91, 92, 95, 96, 98, 100, 101, 102, 121, 123, 124, 130, 131, 132, 134, 135, 136, 137, 151, 155, 164, 179, 180, 181, 182, 183, 184, 185, 186, 203, 235, 270, 287, 303, 315, 324, 340, 352, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 396, 410, 421, 425, 427, 428, 437, 442, 450, 452, 460, 473, 474, 476, 478, 479, 493, 494, 495, 496, 497, 507, 508, 509, 513, 516, 518, 519, 525, 540, 541, 552, 553, 558, 561, 562, 563, 576, 581, 584, 587, 588, 589, 590, 591, 592, 593, 594, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 639, 644, 646, 648, 660, 662, 663, 666, 667, 669, 671, 672, 673, 689, 691, 692, 695, 696, 698, 700, 701, 702, 721, 723, 724, 728, 732, 741, 756, 757, 758, 762, 767, 768, 769, 772, 773, 774, 775, 777, 779, 781, 782, 783, 787, 788, 789, 800, 804, 813, 828, 829, 830, 831, 832, 833, 834, 835, 853, 885, 920, 937, 953, 965, 974, 990, 1002, 1011, 1012, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1037, 1048, 1050, 1058, 1061, 1063, 1069, 1070, 1072, 1073, 1074, 1076, 1078, 1079, 1088, 1093, 1101, 1103, 1111, 1124, 1125, 1127, 1129, 1130, 1144, 1145, 1146, 1147, 1148, 1158, 1159, 1160, 1164, 1167, 1170, 1171, 1173, 1175, 1185, 1187, 1188, 1191, 1192, 1194, 1196, 1197, 1198, 1214, 1216, 1217, 1220, 1221, 1223, 1225, 1226, 1227, 1251, 1263, 1278, 1279, 1290, 1291, 1296, 1299, 1300, 1301, 1314, 1319, 1322, 1323, 1327, 1328, 1331, 1332, 1336, 1337, 1338, 1339, 1342, 1348, 1355, 1357, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1378], "have": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 48, 60, 63, 71, 89, 92, 100, 130, 136, 155, 157, 164, 171, 176, 204, 215, 240, 271, 282, 304, 315, 319, 341, 356, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 425, 433, 474, 479, 495, 497, 502, 511, 512, 528, 540, 542, 563, 584, 590, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 648, 660, 663, 671, 689, 692, 700, 732, 734, 741, 748, 753, 756, 757, 758, 767, 782, 804, 806, 813, 820, 825, 854, 865, 890, 921, 932, 954, 965, 969, 991, 1006, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1076, 1084, 1125, 1130, 1146, 1148, 1153, 1162, 1163, 1175, 1185, 1188, 1196, 1214, 1217, 1225, 1249, 1266, 1278, 1280, 1301, 1327, 1328, 1355, 1357, 1362, 1368, 1370, 1371, 1372, 1375, 1376, 1377, 1378], "valu": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 43, 45, 46, 60, 63, 89, 92, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 153, 155, 156, 157, 159, 162, 164, 167, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 271, 272, 273, 275, 278, 279, 280, 281, 282, 283, 284, 304, 305, 306, 308, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 341, 342, 343, 345, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 388, 390, 392, 394, 398, 400, 401, 406, 407, 417, 418, 423, 425, 427, 428, 433, 437, 442, 447, 450, 454, 460, 461, 473, 474, 476, 478, 479, 480, 481, 482, 485, 488, 489, 493, 495, 497, 502, 504, 505, 506, 507, 508, 509, 511, 512, 513, 516, 518, 519, 525, 530, 540, 541, 548, 553, 556, 557, 559, 561, 563, 583, 584, 587, 588, 589, 590, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 614, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 637, 639, 642, 644, 646, 660, 663, 689, 692, 721, 722, 723, 724, 725, 728, 730, 732, 733, 734, 736, 739, 741, 744, 746, 747, 748, 751, 753, 755, 756, 757, 758, 759, 760, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 781, 782, 783, 785, 787, 788, 789, 791, 792, 797, 800, 802, 804, 805, 806, 808, 811, 813, 816, 818, 819, 820, 823, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 854, 855, 856, 858, 861, 862, 863, 864, 865, 866, 867, 868, 879, 881, 883, 884, 885, 887, 889, 896, 897, 899, 901, 903, 921, 922, 923, 925, 928, 929, 930, 931, 932, 933, 934, 954, 955, 956, 958, 961, 962, 963, 964, 965, 967, 968, 969, 970, 971, 991, 992, 993, 995, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1044, 1045, 1050, 1055, 1056, 1072, 1073, 1074, 1076, 1078, 1079, 1084, 1088, 1093, 1098, 1101, 1105, 1111, 1112, 1124, 1125, 1127, 1129, 1130, 1131, 1132, 1133, 1136, 1139, 1140, 1144, 1146, 1148, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1167, 1170, 1171, 1173, 1185, 1188, 1214, 1217, 1246, 1247, 1248, 1249, 1263, 1268, 1278, 1279, 1286, 1291, 1294, 1295, 1297, 1299, 1301, 1320, 1328, 1331, 1336, 1339, 1355, 1356, 1357, 1365, 1366, 1369, 1370, 1371, 1376], "ar": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 45, 46, 60, 71, 73, 89, 100, 102, 122, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 164, 176, 179, 181, 182, 183, 184, 185, 186, 204, 210, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 271, 277, 278, 282, 283, 284, 304, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 412, 427, 428, 437, 443, 446, 451, 463, 464, 466, 468, 474, 478, 479, 484, 485, 486, 488, 489, 493, 495, 497, 504, 507, 509, 516, 518, 519, 533, 534, 541, 544, 556, 557, 559, 561, 562, 571, 576, 582, 584, 590, 593, 597, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 644, 646, 660, 671, 673, 689, 700, 702, 722, 725, 726, 741, 753, 756, 757, 758, 765, 766, 767, 768, 769, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 787, 788, 789, 799, 813, 825, 828, 830, 831, 832, 833, 834, 835, 854, 860, 861, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 896, 899, 901, 903, 921, 927, 928, 932, 933, 934, 954, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 991, 997, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1012, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1067, 1068, 1071, 1072, 1073, 1074, 1078, 1079, 1088, 1094, 1097, 1102, 1114, 1115, 1117, 1119, 1125, 1129, 1130, 1135, 1136, 1137, 1139, 1140, 1144, 1146, 1148, 1155, 1158, 1160, 1167, 1170, 1171, 1173, 1185, 1196, 1198, 1214, 1225, 1227, 1246, 1247, 1248, 1271, 1272, 1279, 1282, 1294, 1295, 1297, 1299, 1300, 1309, 1314, 1323, 1325, 1327, 1328, 1331, 1336, 1338, 1339, 1347, 1350, 1355, 1357, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1378], "still": [0, 5, 10, 15, 27, 28, 130, 287, 324, 366, 367, 382, 558, 584, 590, 598, 603, 623, 624, 767, 937, 974, 1019, 1020, 1035, 1074, 1296, 1327, 1376], "includ": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 33, 35, 37, 60, 65, 71, 72, 89, 94, 100, 101, 130, 131, 132, 134, 135, 151, 155, 157, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 503, 518, 528, 565, 584, 587, 588, 589, 590, 593, 594, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 623, 624, 625, 628, 629, 633, 635, 660, 665, 671, 672, 689, 694, 700, 701, 728, 732, 734, 738, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 767, 768, 769, 770, 772, 773, 775, 777, 781, 787, 788, 789, 799, 800, 804, 806, 810, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 854, 861, 865, 866, 867, 868, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1012, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1069, 1070, 1072, 1073, 1074, 1154, 1170, 1185, 1190, 1196, 1197, 1214, 1219, 1225, 1226, 1266, 1303, 1327, 1331, 1350, 1362, 1369, 1370, 1375, 1376], "exclud": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 63, 92, 136, 137, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 171, 173, 176, 179, 181, 182, 183, 184, 185, 186, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 478, 482, 507, 508, 509, 511, 514, 518, 519, 584, 590, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 633, 663, 692, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 748, 750, 753, 756, 757, 758, 781, 782, 783, 799, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 820, 822, 825, 828, 830, 831, 832, 833, 834, 835, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1034, 1035, 1129, 1133, 1158, 1159, 1160, 1162, 1165, 1170, 1171, 1188, 1217, 1323, 1332, 1369], "them": [0, 5, 10, 15, 18, 19, 20, 27, 28, 71, 100, 130, 131, 132, 221, 240, 315, 366, 367, 376, 482, 493, 512, 542, 582, 584, 590, 596, 598, 603, 608, 609, 610, 623, 624, 671, 700, 767, 768, 769, 770, 871, 890, 965, 1019, 1020, 1029, 1074, 1133, 1144, 1163, 1196, 1225, 1280, 1320, 1336, 1362, 1370, 1371, 1378], "us": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 40, 45, 46, 48, 60, 62, 69, 71, 72, 89, 91, 98, 100, 101, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 151, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 291, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 328, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 354, 355, 356, 357, 358, 360, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 410, 423, 426, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 495, 497, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 525, 527, 528, 530, 533, 534, 540, 541, 542, 558, 559, 563, 565, 570, 572, 573, 574, 575, 576, 581, 584, 587, 588, 589, 590, 593, 594, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 631, 633, 639, 644, 646, 648, 660, 662, 669, 671, 672, 689, 691, 698, 700, 701, 721, 722, 723, 724, 725, 728, 741, 753, 756, 757, 758, 759, 762, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 800, 813, 825, 828, 829, 830, 831, 832, 833, 834, 835, 837, 839, 841, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 908, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 939, 941, 953, 954, 955, 956, 957, 958, 959, 960, 963, 964, 965, 967, 968, 969, 970, 971, 973, 974, 976, 978, 990, 991, 992, 993, 994, 995, 996, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1061, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1079, 1080, 1081, 1082, 1083, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1144, 1146, 1148, 1151, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1175, 1185, 1187, 1194, 1196, 1197, 1214, 1216, 1223, 1225, 1226, 1251, 1258, 1263, 1265, 1266, 1268, 1271, 1272, 1278, 1279, 1280, 1296, 1297, 1301, 1303, 1308, 1310, 1311, 1312, 1313, 1314, 1320, 1321, 1322, 1324, 1325, 1326, 1327, 1328, 1330, 1334, 1335, 1336, 1337, 1339, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1353, 1355, 1357, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1378], "which": [0, 5, 10, 13, 15, 27, 28, 30, 31, 34, 46, 48, 56, 57, 60, 65, 69, 82, 83, 85, 86, 89, 94, 98, 111, 112, 114, 115, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 147, 148, 150, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 204, 205, 209, 210, 211, 214, 215, 216, 217, 218, 221, 229, 231, 233, 234, 237, 239, 240, 246, 247, 249, 251, 253, 271, 272, 276, 277, 278, 281, 282, 283, 284, 304, 305, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 362, 363, 365, 366, 367, 372, 373, 376, 377, 379, 380, 381, 382, 383, 407, 426, 427, 430, 432, 433, 437, 446, 448, 449, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 474, 480, 481, 483, 493, 494, 496, 497, 504, 505, 506, 507, 508, 509, 511, 513, 516, 518, 519, 525, 528, 529, 530, 531, 532, 533, 534, 541, 542, 545, 546, 552, 553, 556, 557, 570, 575, 584, 590, 598, 601, 603, 623, 624, 626, 627, 631, 646, 648, 656, 657, 660, 665, 669, 682, 683, 685, 686, 689, 694, 698, 711, 712, 714, 715, 728, 732, 734, 741, 748, 753, 759, 760, 763, 767, 768, 769, 770, 771, 772, 773, 774, 777, 778, 781, 782, 783, 787, 788, 789, 791, 792, 800, 804, 806, 813, 820, 825, 828, 829, 830, 831, 832, 833, 834, 835, 854, 855, 859, 860, 861, 864, 865, 866, 867, 868, 871, 879, 881, 883, 884, 887, 889, 890, 896, 897, 899, 901, 903, 921, 922, 926, 927, 928, 931, 932, 933, 934, 954, 955, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 991, 992, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1015, 1016, 1018, 1019, 1020, 1025, 1026, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1081, 1083, 1084, 1088, 1097, 1099, 1100, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1131, 1132, 1134, 1144, 1145, 1147, 1148, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1164, 1167, 1169, 1170, 1171, 1173, 1175, 1185, 1190, 1194, 1207, 1208, 1210, 1211, 1214, 1219, 1223, 1236, 1237, 1239, 1240, 1263, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1279, 1280, 1283, 1284, 1290, 1291, 1294, 1295, 1308, 1313, 1320, 1323, 1327, 1328, 1331, 1336, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1355, 1362, 1366, 1368, 1370, 1371, 1372, 1373, 1375, 1376], "renam": [0, 5, 10, 15, 27, 28, 45, 147, 148, 150, 366, 367, 377, 584, 590, 598, 603, 623, 624, 644, 1019, 1020, 1030], "kei": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 33, 46, 47, 60, 61, 62, 89, 90, 91, 121, 123, 124, 130, 131, 132, 315, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 386, 392, 397, 399, 407, 412, 414, 417, 418, 419, 421, 446, 466, 468, 469, 496, 497, 584, 590, 591, 592, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 629, 646, 647, 660, 661, 662, 689, 690, 691, 721, 723, 724, 767, 768, 769, 965, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1034, 1035, 1036, 1037, 1039, 1041, 1044, 1045, 1046, 1048, 1050, 1055, 1056, 1058, 1072, 1073, 1074, 1097, 1117, 1119, 1120, 1147, 1148, 1173, 1174, 1185, 1186, 1187, 1214, 1215, 1216, 1251, 1364, 1365, 1369], "uniform": [0, 5, 10, 13, 15, 27, 28, 73, 102, 131, 132, 366, 367, 375, 427, 478, 517, 554, 584, 590, 598, 601, 603, 623, 624, 673, 702, 768, 769, 1019, 1020, 1028, 1078, 1129, 1168, 1198, 1227, 1292, 1336, 1339, 1362, 1364], "bool": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 47, 48, 55, 61, 62, 63, 66, 67, 69, 71, 72, 73, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 126, 130, 131, 132, 136, 137, 151, 155, 157, 164, 171, 176, 189, 191, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 246, 249, 251, 253, 256, 258, 271, 273, 278, 281, 282, 283, 284, 289, 291, 304, 306, 314, 315, 318, 319, 320, 321, 326, 328, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 427, 432, 437, 441, 448, 449, 451, 452, 454, 457, 458, 459, 464, 465, 468, 469, 470, 478, 479, 482, 483, 485, 488, 489, 495, 497, 504, 505, 506, 507, 508, 509, 511, 512, 513, 515, 516, 540, 542, 558, 576, 584, 590, 591, 592, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 633, 647, 648, 655, 661, 662, 663, 666, 667, 669, 671, 672, 673, 690, 691, 692, 695, 696, 698, 700, 701, 702, 719, 723, 726, 728, 732, 734, 741, 748, 753, 756, 765, 766, 767, 768, 769, 782, 783, 787, 788, 789, 800, 804, 806, 813, 820, 825, 839, 841, 854, 856, 861, 864, 865, 866, 867, 868, 871, 881, 883, 884, 885, 887, 889, 890, 896, 899, 901, 903, 906, 908, 921, 923, 928, 931, 932, 933, 934, 939, 941, 954, 956, 964, 965, 968, 969, 970, 971, 976, 978, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1011, 1012, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1068, 1069, 1071, 1074, 1078, 1083, 1088, 1092, 1099, 1100, 1102, 1103, 1105, 1108, 1109, 1110, 1115, 1116, 1119, 1120, 1121, 1129, 1130, 1133, 1134, 1136, 1139, 1140, 1146, 1148, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1167, 1174, 1175, 1182, 1186, 1187, 1188, 1191, 1192, 1194, 1196, 1197, 1198, 1215, 1216, 1217, 1220, 1221, 1223, 1225, 1226, 1227, 1278, 1280, 1296, 1314, 1320], "true": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 46, 47, 48, 55, 60, 61, 62, 63, 66, 67, 69, 71, 72, 73, 89, 90, 91, 92, 95, 96, 98, 100, 101, 102, 119, 123, 130, 131, 132, 136, 137, 144, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 189, 191, 204, 206, 211, 214, 215, 216, 217, 218, 221, 231, 233, 234, 235, 237, 239, 240, 246, 249, 251, 253, 256, 258, 271, 273, 278, 281, 282, 283, 284, 289, 291, 304, 306, 314, 315, 318, 319, 320, 321, 326, 328, 341, 343, 351, 352, 355, 356, 357, 358, 362, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 410, 414, 427, 432, 437, 441, 448, 449, 451, 452, 457, 458, 459, 464, 465, 468, 469, 470, 478, 479, 482, 483, 485, 488, 489, 494, 495, 497, 504, 507, 508, 509, 511, 512, 513, 515, 516, 540, 542, 558, 576, 584, 585, 590, 591, 592, 593, 596, 597, 598, 602, 603, 604, 606, 607, 608, 609, 610, 613, 614, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 633, 646, 647, 648, 655, 660, 661, 662, 663, 666, 667, 669, 671, 672, 673, 689, 690, 691, 692, 695, 696, 698, 700, 701, 702, 719, 723, 728, 730, 732, 733, 734, 735, 736, 737, 739, 740, 741, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 765, 766, 767, 768, 769, 776, 782, 783, 787, 788, 789, 794, 800, 802, 804, 805, 806, 807, 808, 809, 811, 812, 813, 816, 818, 819, 820, 821, 823, 824, 825, 826, 827, 839, 841, 854, 856, 861, 864, 865, 866, 867, 868, 871, 881, 883, 884, 885, 887, 889, 890, 896, 899, 901, 903, 906, 908, 921, 923, 928, 931, 932, 933, 934, 939, 941, 954, 956, 964, 965, 968, 969, 970, 971, 976, 978, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1011, 1012, 1015, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1041, 1068, 1069, 1071, 1072, 1073, 1074, 1078, 1083, 1088, 1092, 1099, 1100, 1102, 1103, 1108, 1109, 1110, 1115, 1116, 1119, 1120, 1121, 1129, 1130, 1133, 1134, 1136, 1139, 1140, 1145, 1146, 1148, 1155, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1167, 1173, 1174, 1175, 1182, 1183, 1185, 1186, 1187, 1188, 1191, 1192, 1194, 1196, 1197, 1198, 1214, 1215, 1216, 1217, 1220, 1221, 1223, 1225, 1226, 1227, 1256, 1257, 1278, 1280, 1296, 1314, 1338, 1345, 1346, 1347, 1348, 1357, 1359, 1365, 1366, 1370, 1371, 1372, 1373, 1376], "forc": [0, 5, 10, 15, 18, 19, 20, 27, 28, 366, 367, 377, 427, 512, 563, 584, 590, 598, 603, 608, 609, 610, 623, 624, 1019, 1020, 1030, 1078, 1163, 1301], "case": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 40, 121, 123, 124, 130, 132, 164, 176, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 421, 497, 584, 590, 591, 592, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 626, 627, 639, 721, 723, 724, 741, 753, 767, 769, 813, 825, 1013, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1048, 1058, 1148, 1320, 1327, 1328, 1331, 1348, 1370, 1376], "ignor": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 130, 131, 132, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 427, 584, 590, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 767, 768, 769, 854, 856, 861, 864, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 965, 968, 969, 970, 971, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1069, 1070, 1078, 1322, 1331, 1372], "list": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 35, 63, 92, 180, 187, 206, 210, 213, 234, 240, 254, 273, 277, 280, 287, 306, 310, 317, 324, 343, 347, 354, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 437, 442, 443, 448, 449, 450, 460, 463, 473, 474, 476, 481, 496, 503, 528, 533, 534, 545, 584, 590, 591, 592, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 626, 627, 633, 663, 692, 765, 766, 774, 829, 837, 856, 860, 863, 884, 890, 904, 923, 927, 930, 937, 956, 960, 967, 974, 993, 997, 1004, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1063, 1069, 1070, 1074, 1088, 1093, 1094, 1099, 1100, 1101, 1111, 1114, 1124, 1125, 1127, 1132, 1147, 1154, 1188, 1217, 1266, 1271, 1272, 1283, 1327, 1376, 1377], "appli": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 60, 63, 89, 92, 131, 132, 134, 136, 137, 138, 146, 179, 182, 183, 204, 205, 211, 214, 215, 216, 217, 218, 229, 247, 271, 272, 278, 281, 282, 283, 284, 304, 305, 314, 315, 318, 319, 320, 321, 341, 342, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 428, 432, 446, 448, 451, 465, 466, 468, 469, 479, 485, 495, 511, 513, 541, 542, 584, 590, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 660, 663, 689, 692, 761, 764, 765, 766, 768, 769, 775, 781, 782, 783, 784, 796, 828, 831, 832, 854, 855, 861, 864, 865, 866, 867, 868, 879, 897, 921, 922, 928, 931, 932, 933, 934, 954, 955, 964, 965, 968, 969, 970, 971, 991, 992, 1001, 1002, 1005, 1006, 1007, 1008, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1034, 1061, 1068, 1071, 1074, 1079, 1083, 1097, 1099, 1102, 1116, 1117, 1119, 1120, 1130, 1136, 1146, 1162, 1164, 1185, 1188, 1214, 1217, 1279, 1280, 1327, 1336, 1347, 1357, 1366], "after": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 130, 131, 150, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 497, 507, 542, 584, 590, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 767, 768, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1037, 1148, 1158, 1280, 1328, 1357, 1371, 1372, 1375, 1376, 1378], "set": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 46, 60, 71, 72, 73, 89, 100, 101, 102, 121, 122, 123, 124, 125, 126, 130, 131, 132, 136, 137, 151, 155, 157, 164, 171, 176, 179, 181, 182, 183, 184, 185, 186, 204, 206, 211, 214, 215, 216, 217, 218, 219, 220, 233, 234, 235, 271, 273, 278, 281, 282, 283, 284, 285, 286, 304, 306, 314, 315, 318, 319, 320, 321, 322, 323, 341, 343, 351, 352, 355, 356, 357, 358, 359, 360, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 407, 415, 416, 419, 420, 451, 460, 478, 484, 485, 486, 488, 489, 497, 507, 508, 509, 525, 528, 540, 563, 566, 567, 584, 590, 593, 598, 602, 603, 604, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 644, 646, 660, 671, 672, 673, 689, 700, 701, 702, 721, 722, 723, 724, 725, 726, 728, 732, 734, 741, 748, 753, 756, 757, 758, 767, 768, 769, 781, 782, 783, 787, 788, 800, 804, 806, 813, 820, 825, 828, 830, 831, 832, 833, 834, 835, 854, 856, 861, 864, 865, 866, 867, 868, 869, 870, 883, 884, 885, 921, 923, 928, 931, 932, 933, 934, 935, 936, 954, 956, 964, 965, 968, 969, 970, 971, 972, 973, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1035, 1042, 1043, 1046, 1047, 1053, 1054, 1057, 1074, 1102, 1111, 1129, 1135, 1136, 1137, 1139, 1140, 1148, 1158, 1159, 1160, 1173, 1185, 1196, 1197, 1198, 1214, 1225, 1226, 1227, 1246, 1247, 1248, 1256, 1257, 1263, 1266, 1278, 1301, 1304, 1305, 1320, 1328, 1331, 1337, 1344, 1347, 1348, 1351, 1352, 1357, 1362, 1366, 1371, 1375, 1376, 1377], "all": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 46, 48, 60, 63, 71, 72, 89, 92, 100, 101, 119, 130, 131, 132, 134, 136, 137, 151, 154, 161, 164, 168, 173, 176, 179, 183, 204, 210, 211, 214, 215, 216, 217, 218, 233, 234, 271, 277, 278, 281, 282, 283, 284, 304, 310, 314, 315, 318, 319, 320, 321, 341, 347, 351, 352, 355, 356, 357, 358, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 397, 411, 427, 442, 450, 460, 473, 476, 478, 479, 481, 495, 496, 497, 503, 507, 509, 528, 541, 582, 584, 590, 591, 592, 593, 598, 602, 603, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 646, 648, 660, 663, 671, 672, 689, 692, 700, 701, 719, 728, 731, 738, 741, 745, 750, 753, 767, 768, 769, 773, 774, 775, 781, 782, 783, 787, 788, 789, 800, 803, 810, 813, 817, 822, 825, 828, 832, 854, 860, 861, 864, 865, 866, 867, 868, 883, 884, 921, 927, 928, 931, 932, 933, 934, 954, 960, 964, 965, 968, 969, 970, 971, 991, 997, 1001, 1002, 1005, 1006, 1007, 1008, 1011, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1038, 1050, 1051, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1078, 1093, 1101, 1111, 1124, 1127, 1129, 1130, 1132, 1146, 1147, 1148, 1154, 1158, 1160, 1173, 1175, 1185, 1188, 1196, 1197, 1214, 1217, 1225, 1226, 1266, 1279, 1319, 1325, 1336, 1355, 1356, 1357, 1359, 1362, 1370, 1371, 1372, 1373, 1374, 1376, 1378], "specifi": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 60, 63, 71, 72, 89, 92, 100, 101, 121, 123, 124, 130, 131, 132, 155, 157, 171, 204, 206, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 246, 249, 250, 251, 252, 253, 271, 273, 278, 282, 283, 284, 304, 306, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 343, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 417, 482, 507, 508, 509, 520, 528, 570, 575, 584, 587, 588, 589, 590, 593, 594, 598, 599, 600, 602, 603, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 646, 660, 663, 671, 672, 689, 692, 700, 701, 721, 723, 724, 732, 734, 748, 767, 768, 769, 799, 804, 806, 820, 854, 856, 861, 865, 866, 867, 868, 880, 881, 883, 884, 885, 886, 887, 888, 889, 896, 899, 900, 901, 902, 903, 921, 923, 928, 932, 933, 934, 954, 956, 961, 962, 963, 964, 965, 966, 969, 970, 971, 991, 993, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1012, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1044, 1055, 1061, 1072, 1073, 1074, 1133, 1158, 1159, 1160, 1173, 1185, 1188, 1196, 1197, 1214, 1217, 1225, 1226, 1266, 1308, 1313, 1320, 1323, 1327, 1368, 1369, 1371, 1375], "Be": [0, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 584, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008], "about": [0, 60, 89, 497, 584, 660, 689, 1148, 1185, 1214], "process": [0, 30, 31, 131, 136, 137, 234, 437, 497, 584, 626, 627, 768, 782, 783, 884, 1088, 1148, 1320, 1327, 1362, 1363, 1372, 1376], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 152, 165, 166, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 225, 226, 227, 228, 241, 242, 243, 244, 255, 256, 257, 258, 259, 260, 288, 289, 290, 291, 292, 293, 325, 326, 327, 328, 329, 330, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 388, 389, 390, 391, 394, 398, 399, 400, 401, 405, 409, 410, 412, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 568, 570, 571, 572, 573, 575, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 631, 635, 636, 637, 638, 639, 640, 641, 642, 643, 648, 649, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 682, 683, 684, 685, 686, 687, 688, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 729, 742, 743, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 801, 814, 815, 828, 829, 830, 831, 832, 833, 834, 835, 838, 839, 840, 841, 842, 843, 875, 876, 877, 878, 891, 892, 893, 894, 905, 906, 907, 908, 909, 910, 938, 939, 940, 941, 942, 943, 975, 976, 977, 978, 979, 980, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1039, 1044, 1045, 1055, 1056, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1175, 1176, 1183, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1313, 1355, 1357, 1365, 1368, 1373, 1376], "note": [0, 5, 13, 27, 28, 62, 91, 118, 130, 134, 155, 157, 164, 171, 176, 233, 234, 315, 366, 367, 370, 371, 381, 478, 502, 507, 518, 540, 584, 590, 601, 623, 624, 662, 691, 718, 732, 734, 741, 748, 753, 767, 775, 804, 806, 813, 820, 825, 883, 884, 965, 1012, 1019, 1020, 1023, 1024, 1034, 1069, 1070, 1074, 1129, 1153, 1158, 1170, 1187, 1216, 1278, 1327, 1328, 1338, 1357, 1371, 1372, 1375, 1376], "ha": [0, 5, 8, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 32, 60, 89, 130, 147, 148, 150, 189, 225, 240, 241, 256, 289, 324, 326, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 414, 421, 483, 485, 488, 489, 541, 554, 575, 584, 590, 593, 601, 602, 604, 606, 607, 608, 609, 610, 613, 614, 619, 620, 621, 622, 623, 624, 625, 628, 660, 689, 762, 767, 839, 875, 890, 891, 906, 939, 974, 976, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1034, 1041, 1048, 1058, 1060, 1134, 1136, 1139, 1140, 1185, 1214, 1251, 1279, 1292, 1313, 1320, 1327, 1336, 1357, 1362, 1368, 1370, 1371, 1373, 1375, 1376, 1378], "been": [0, 5, 13, 26, 27, 28, 130, 147, 148, 150, 155, 157, 164, 171, 176, 240, 324, 366, 367, 369, 372, 373, 374, 376, 483, 528, 541, 584, 590, 601, 613, 614, 621, 623, 624, 732, 734, 741, 748, 753, 762, 767, 804, 806, 813, 820, 825, 890, 974, 1019, 1020, 1022, 1025, 1026, 1027, 1029, 1134, 1266, 1279, 1327, 1357, 1362, 1368, 1372, 1375, 1376], "test": [0, 5, 13, 26, 27, 28, 130, 366, 367, 372, 374, 383, 437, 471, 472, 582, 584, 590, 601, 621, 623, 624, 767, 1019, 1020, 1025, 1027, 1037, 1088, 1122, 1123, 1320, 1322, 1323, 1331, 1332, 1333, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1362, 1364], "stream": [0, 5, 13, 27, 28, 77, 106, 366, 367, 581, 584, 590, 601, 623, 624, 677, 706, 1019, 1020, 1202, 1231], "cfradial": [0, 5, 13, 27, 28, 32, 366, 367, 584, 590, 601, 623, 624, 628, 1019, 1020, 1320, 1325, 1335, 1336, 1350, 1352, 1353, 1364, 1372, 1374], "get": [1, 25, 40, 138, 146, 222, 223, 224, 245, 366, 383, 392, 420, 498, 501, 511, 517, 547, 548, 549, 551, 559, 560, 561, 562, 586, 620, 639, 778, 779, 780, 784, 796, 872, 873, 874, 895, 1019, 1037, 1047, 1057, 1061, 1149, 1152, 1162, 1168, 1285, 1286, 1287, 1289, 1297, 1298, 1299, 1300, 1320, 1328, 1347, 1348, 1357, 1364, 1366, 1369, 1371, 1373, 1375, 1376, 1377, 1378], "each": [1, 2, 3, 9, 11, 22, 32, 46, 54, 56, 60, 70, 89, 99, 128, 131, 132, 133, 135, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 376, 380, 382, 437, 474, 480, 482, 483, 493, 500, 501, 504, 511, 512, 513, 515, 517, 518, 547, 548, 549, 552, 559, 560, 561, 562, 586, 587, 588, 594, 599, 612, 628, 646, 654, 656, 660, 670, 689, 699, 756, 757, 758, 760, 768, 769, 770, 771, 772, 773, 777, 787, 788, 789, 797, 854, 861, 865, 866, 867, 881, 887, 889, 899, 901, 903, 921, 928, 932, 933, 954, 964, 965, 969, 970, 991, 1001, 1002, 1006, 1007, 1029, 1033, 1035, 1061, 1068, 1071, 1072, 1073, 1074, 1088, 1125, 1131, 1133, 1134, 1144, 1151, 1152, 1155, 1162, 1163, 1164, 1166, 1168, 1170, 1173, 1181, 1185, 1195, 1214, 1224, 1246, 1247, 1248, 1285, 1286, 1287, 1290, 1297, 1298, 1299, 1300, 1327, 1332, 1347, 1350, 1357, 1369, 1373, 1376], "assum": [1, 3, 9, 60, 89, 118, 119, 130, 133, 453, 454, 481, 494, 497, 502, 507, 509, 510, 540, 586, 588, 594, 660, 689, 718, 719, 767, 770, 771, 772, 773, 787, 788, 789, 1104, 1105, 1132, 1145, 1148, 1153, 1158, 1160, 1161, 1185, 1214, 1278, 1372], "clockwis": [1, 60, 89, 586, 660, 689, 1185, 1214], "rotat": [1, 60, 89, 187, 586, 660, 689, 837, 1185, 1214], "north": [1, 56, 60, 89, 233, 234, 246, 315, 352, 546, 586, 656, 660, 689, 883, 884, 896, 965, 1002, 1185, 1214, 1284, 1340, 1372, 1373], "tstart": [1, 586], "tend": [1, 586, 1371], "arrai": [1, 8, 14, 16, 26, 46, 48, 54, 56, 57, 62, 66, 67, 69, 70, 71, 72, 73, 91, 95, 96, 98, 99, 100, 101, 102, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 134, 135, 140, 143, 146, 151, 155, 157, 164, 171, 176, 187, 193, 204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 254, 260, 271, 272, 273, 278, 282, 283, 284, 287, 293, 304, 305, 306, 311, 312, 314, 315, 319, 320, 321, 324, 330, 341, 342, 343, 348, 349, 351, 352, 356, 357, 358, 423, 424, 425, 437, 447, 479, 480, 483, 495, 501, 504, 508, 509, 510, 515, 517, 518, 519, 521, 522, 523, 524, 525, 529, 531, 532, 538, 539, 541, 542, 547, 548, 549, 551, 552, 556, 557, 559, 560, 561, 562, 565, 566, 567, 569, 583, 586, 593, 596, 597, 602, 606, 613, 614, 621, 646, 648, 654, 656, 657, 662, 666, 667, 669, 670, 671, 672, 673, 691, 695, 696, 698, 699, 700, 701, 702, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 732, 734, 741, 748, 753, 767, 768, 769, 775, 776, 777, 785, 790, 793, 796, 797, 800, 804, 806, 813, 820, 825, 837, 843, 854, 855, 856, 861, 865, 866, 867, 868, 879, 881, 883, 884, 885, 887, 889, 896, 897, 899, 901, 903, 904, 910, 921, 922, 923, 928, 932, 933, 934, 937, 943, 954, 955, 956, 961, 962, 964, 965, 969, 970, 971, 974, 980, 991, 992, 993, 998, 999, 1001, 1002, 1006, 1007, 1008, 1012, 1061, 1072, 1073, 1074, 1076, 1088, 1098, 1130, 1131, 1134, 1146, 1152, 1155, 1159, 1160, 1161, 1166, 1168, 1170, 1171, 1173, 1175, 1181, 1187, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1216, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1259, 1260, 1261, 1262, 1263, 1267, 1269, 1270, 1276, 1277, 1279, 1280, 1285, 1286, 1287, 1289, 1290, 1294, 1295, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1307, 1331, 1344, 1357, 1359, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1376], "sweep_start": [1, 586], "sweep_end": [1, 586], "indic": [1, 37, 46, 60, 84, 87, 88, 89, 113, 116, 117, 137, 151, 155, 164, 176, 231, 376, 482, 507, 508, 509, 514, 518, 519, 542, 543, 545, 586, 635, 646, 660, 684, 687, 688, 689, 713, 716, 717, 728, 732, 741, 753, 776, 783, 787, 788, 800, 804, 813, 825, 881, 1012, 1029, 1133, 1158, 1159, 1160, 1165, 1170, 1171, 1173, 1185, 1209, 1212, 1213, 1214, 1238, 1241, 1242, 1280, 1281, 1283, 1327, 1344, 1371, 1372], "chy0": [2, 4, 6, 7, 11, 587, 589, 591, 592, 599], "255": [2, 4, 6, 11, 380, 587, 589, 591, 599, 1033, 1370], "0": [2, 3, 4, 6, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 30, 31, 40, 48, 60, 65, 66, 67, 69, 70, 71, 72, 73, 89, 94, 95, 96, 98, 99, 100, 101, 102, 122, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 141, 142, 145, 151, 176, 179, 181, 182, 183, 184, 185, 186, 187, 203, 204, 211, 214, 215, 216, 217, 218, 219, 233, 234, 235, 249, 254, 270, 271, 278, 281, 282, 283, 284, 285, 287, 303, 304, 313, 314, 315, 318, 319, 320, 321, 322, 324, 340, 341, 350, 351, 352, 355, 356, 357, 358, 359, 376, 380, 423, 426, 428, 433, 437, 439, 441, 442, 446, 449, 450, 451, 453, 454, 459, 460, 461, 466, 473, 474, 475, 476, 478, 479, 482, 483, 485, 487, 488, 489, 491, 492, 493, 495, 497, 500, 503, 504, 505, 507, 508, 511, 512, 513, 514, 515, 516, 517, 519, 526, 527, 530, 540, 542, 547, 548, 549, 554, 555, 558, 563, 587, 588, 589, 591, 594, 599, 602, 606, 608, 609, 610, 612, 619, 620, 626, 627, 639, 648, 660, 665, 666, 667, 669, 670, 671, 672, 673, 689, 694, 695, 696, 698, 699, 700, 701, 702, 722, 725, 728, 753, 756, 757, 759, 760, 761, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 787, 788, 789, 791, 792, 795, 800, 825, 828, 830, 831, 832, 833, 834, 835, 837, 853, 854, 861, 864, 865, 866, 867, 868, 869, 883, 884, 885, 899, 904, 920, 921, 928, 931, 932, 933, 934, 935, 937, 953, 954, 963, 964, 965, 968, 969, 970, 971, 972, 974, 990, 991, 1000, 1001, 1002, 1005, 1006, 1007, 1008, 1009, 1029, 1033, 1061, 1069, 1070, 1072, 1073, 1074, 1077, 1079, 1084, 1088, 1090, 1092, 1093, 1097, 1100, 1101, 1102, 1104, 1105, 1110, 1111, 1112, 1117, 1124, 1125, 1126, 1127, 1129, 1130, 1133, 1134, 1136, 1138, 1139, 1140, 1142, 1143, 1144, 1146, 1148, 1151, 1154, 1155, 1156, 1158, 1159, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1171, 1175, 1185, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1214, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1249, 1264, 1265, 1268, 1278, 1280, 1285, 1286, 1287, 1292, 1293, 1296, 1301, 1319, 1322, 1323, 1324, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376], "chx0": [2, 4, 6, 7, 11, 587, 589, 591, 592, 599], "160": [2, 4, 6, 11, 587, 589, 591, 599, 1359, 1368, 1370, 1371], "xre": [2, 3, 9, 11, 22, 587, 588, 594, 599, 612], "1": [2, 3, 5, 6, 7, 9, 11, 14, 18, 19, 20, 22, 26, 30, 31, 46, 60, 70, 89, 99, 118, 122, 125, 127, 128, 130, 132, 136, 137, 138, 146, 164, 179, 218, 234, 254, 284, 321, 358, 366, 372, 373, 374, 379, 425, 432, 433, 437, 442, 444, 446, 450, 451, 454, 460, 461, 466, 473, 474, 478, 479, 481, 483, 485, 493, 495, 497, 498, 504, 507, 509, 511, 513, 515, 518, 519, 526, 527, 528, 530, 540, 541, 542, 548, 555, 561, 562, 569, 587, 588, 590, 591, 592, 594, 599, 602, 608, 609, 610, 612, 621, 626, 627, 646, 660, 670, 689, 699, 718, 722, 725, 741, 759, 760, 765, 766, 767, 769, 778, 779, 780, 782, 783, 784, 796, 813, 828, 868, 884, 904, 934, 971, 1008, 1019, 1025, 1026, 1027, 1032, 1072, 1073, 1074, 1076, 1083, 1084, 1088, 1093, 1095, 1097, 1101, 1102, 1105, 1111, 1112, 1117, 1124, 1125, 1129, 1130, 1132, 1134, 1136, 1144, 1146, 1148, 1149, 1155, 1158, 1160, 1162, 1164, 1166, 1170, 1171, 1173, 1185, 1195, 1214, 1224, 1249, 1264, 1265, 1266, 1268, 1278, 1279, 1280, 1286, 1293, 1299, 1300, 1307, 1322, 1323, 1327, 1331, 1332, 1333, 1336, 1337, 1338, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1355, 1357, 1358, 1359, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1376], "yre": [2, 3, 9, 11, 22, 587, 588, 594, 599, 612], "nx": [2, 3, 9, 11, 22, 46, 587, 588, 594, 599, 612, 646, 1173, 1371], "710": [2, 11, 587, 599], "ny": [2, 3, 9, 11, 22, 46, 587, 588, 594, 599, 612, 646, 1173, 1371], "640": [2, 11, 587, 599], "nz": [2, 3, 9, 11, 22, 46, 587, 588, 594, 599, 612, 646, 1173, 1371], "meteoswiss": [2, 11, 30, 31, 587, 599, 626, 627, 1320, 1358, 1359, 1363, 1371, 1372, 1375, 1376], "oper": [2, 3, 9, 11, 155, 157, 164, 171, 176, 376, 495, 509, 516, 587, 588, 594, 599, 732, 734, 741, 748, 753, 765, 766, 804, 806, 813, 820, 825, 1029, 1068, 1071, 1074, 1146, 1160, 1167, 1357, 1371, 1372, 1375], "binari": [2, 3, 9, 18, 19, 20, 30, 31, 33, 362, 495, 587, 588, 594, 608, 609, 610, 626, 627, 629, 1015, 1146, 1370], "retriev": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 36, 38, 46, 66, 67, 69, 70, 71, 72, 73, 95, 96, 98, 99, 100, 101, 102, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 526, 527, 542, 550, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 634, 636, 646, 666, 667, 669, 670, 671, 672, 673, 695, 696, 698, 699, 700, 701, 702, 765, 766, 779, 785, 797, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1173, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1264, 1265, 1280, 1288, 1320, 1356, 1357, 1358, 1359, 1360, 1363, 1366, 1371, 1374, 1376], "metadata": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 38, 44, 45, 46, 47, 60, 61, 62, 89, 90, 91, 130, 131, 132, 133, 136, 137, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 426, 428, 434, 453, 454, 461, 475, 478, 482, 497, 505, 506, 507, 508, 509, 510, 511, 512, 513, 570, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 626, 627, 629, 631, 633, 634, 636, 643, 644, 646, 647, 660, 661, 662, 689, 690, 691, 756, 757, 758, 767, 768, 769, 771, 772, 773, 774, 782, 783, 787, 788, 789, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1034, 1077, 1079, 1085, 1104, 1105, 1112, 1126, 1129, 1133, 1148, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1169, 1173, 1174, 1185, 1186, 1187, 1214, 1215, 1216, 1243, 1245, 1251, 1308, 1328, 1345, 1346, 1350, 1373], "dure": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 35, 130, 131, 132, 164, 176, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 479, 507, 516, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 633, 741, 753, 762, 767, 768, 769, 813, 825, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1130, 1158, 1167, 1371, 1372, 1375, 1378], "ani": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 33, 45, 61, 62, 90, 91, 130, 131, 132, 136, 137, 151, 155, 157, 164, 171, 176, 179, 182, 183, 287, 324, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 428, 480, 504, 511, 512, 576, 587, 588, 589, 590, 591, 592, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 624, 625, 626, 627, 629, 644, 661, 662, 690, 691, 728, 732, 734, 741, 748, 753, 756, 757, 758, 767, 768, 769, 770, 781, 782, 783, 800, 804, 806, 813, 820, 825, 828, 831, 832, 937, 974, 1012, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1035, 1069, 1070, 1074, 1079, 1131, 1155, 1162, 1163, 1186, 1187, 1215, 1216, 1245, 1314, 1364, 1370], "success": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030], "unless": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 73, 102, 121, 123, 124, 132, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 673, 702, 721, 723, 724, 769, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1034, 1198, 1227], "explicitli": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1069, 1070], "A": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 35, 46, 60, 62, 89, 91, 122, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 150, 151, 179, 180, 181, 182, 183, 184, 185, 186, 187, 221, 234, 240, 254, 287, 313, 324, 350, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 383, 427, 428, 432, 433, 442, 450, 478, 479, 480, 481, 482, 484, 493, 495, 497, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 516, 518, 519, 553, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 631, 633, 646, 660, 662, 689, 691, 722, 725, 728, 756, 757, 758, 759, 760, 763, 765, 766, 767, 768, 769, 771, 772, 773, 774, 777, 781, 782, 783, 787, 788, 789, 791, 792, 800, 828, 829, 830, 831, 832, 833, 834, 835, 837, 871, 884, 890, 904, 937, 963, 974, 1000, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1036, 1037, 1050, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1078, 1079, 1083, 1084, 1093, 1101, 1129, 1130, 1131, 1132, 1133, 1135, 1144, 1146, 1148, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1167, 1169, 1170, 1171, 1173, 1185, 1187, 1214, 1216, 1249, 1291, 1339, 1357, 1361, 1362, 1370, 1372, 1376], "default": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 34, 41, 45, 46, 60, 66, 67, 69, 71, 72, 77, 89, 95, 96, 98, 100, 101, 106, 121, 122, 123, 124, 125, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 151, 155, 157, 164, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 211, 214, 215, 216, 217, 218, 220, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 278, 281, 282, 283, 284, 286, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 314, 315, 318, 319, 320, 321, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 351, 352, 355, 356, 357, 358, 360, 363, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 387, 389, 396, 413, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 452, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 485, 488, 489, 495, 496, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 518, 520, 528, 530, 540, 541, 542, 570, 587, 588, 589, 593, 594, 598, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 626, 627, 629, 631, 640, 644, 646, 660, 666, 667, 669, 671, 672, 677, 689, 695, 696, 698, 700, 701, 706, 721, 722, 723, 724, 725, 728, 732, 734, 741, 748, 753, 756, 757, 758, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 779, 781, 782, 783, 787, 788, 789, 791, 792, 800, 804, 806, 813, 820, 825, 828, 829, 830, 831, 832, 833, 834, 835, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 861, 864, 865, 866, 867, 868, 870, 879, 881, 883, 884, 885, 887, 889, 896, 897, 899, 901, 903, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 928, 931, 932, 933, 934, 936, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 964, 965, 968, 969, 970, 971, 973, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1010, 1012, 1016, 1019, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1040, 1052, 1074, 1077, 1079, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1096, 1097, 1099, 1100, 1103, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1139, 1140, 1146, 1147, 1148, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1170, 1173, 1185, 1191, 1192, 1194, 1196, 1197, 1202, 1214, 1220, 1221, 1223, 1225, 1226, 1231, 1246, 1247, 1248, 1266, 1268, 1278, 1279, 1280, 1308, 1347, 1348, 1357, 1362, 1372, 1375, 1376, 1378], "introduct": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 622, 625, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1376], "addit": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 35, 130, 131, 132, 134, 203, 204, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 249, 250, 251, 252, 253, 270, 271, 278, 282, 283, 284, 303, 304, 311, 312, 313, 314, 315, 316, 319, 320, 321, 340, 341, 348, 349, 350, 351, 352, 353, 356, 357, 358, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 451, 452, 479, 495, 553, 582, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 633, 767, 768, 769, 775, 853, 854, 861, 865, 866, 867, 868, 880, 881, 883, 884, 885, 886, 887, 888, 889, 899, 900, 901, 902, 903, 920, 921, 928, 932, 933, 934, 953, 954, 961, 962, 963, 964, 965, 966, 969, 970, 971, 990, 991, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1011, 1012, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1061, 1068, 1069, 1070, 1071, 1074, 1102, 1103, 1130, 1146, 1291, 1325, 1327, 1354, 1357, 1362], "specif": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 137, 164, 176, 324, 352, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 480, 484, 485, 486, 488, 489, 496, 497, 504, 505, 506, 507, 508, 509, 553, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 741, 753, 756, 757, 758, 773, 774, 783, 787, 788, 789, 813, 825, 974, 1002, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1074, 1131, 1135, 1136, 1137, 1139, 1140, 1147, 1148, 1155, 1156, 1157, 1158, 1159, 1160, 1291, 1322, 1336, 1357, 1362, 1372, 1376, 1378], "py": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 34, 45, 46, 60, 89, 121, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 287, 304, 306, 314, 315, 319, 320, 321, 324, 341, 343, 351, 352, 356, 357, 358, 368, 369, 370, 371, 375, 377, 380, 426, 427, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 480, 481, 482, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 545, 546, 570, 581, 582, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 626, 627, 630, 631, 632, 644, 645, 646, 660, 689, 721, 723, 724, 728, 756, 757, 758, 763, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 781, 782, 783, 787, 788, 789, 791, 792, 798, 800, 828, 829, 830, 831, 832, 833, 834, 835, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 937, 954, 956, 964, 965, 969, 970, 971, 974, 991, 993, 1001, 1002, 1006, 1007, 1008, 1012, 1021, 1022, 1023, 1024, 1028, 1030, 1033, 1060, 1077, 1078, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1096, 1097, 1099, 1100, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1146, 1148, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1173, 1185, 1214, 1249, 1258, 1283, 1284, 1308, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1365, 1366, 1368, 1371, 1372, 1374, 1375, 1378], "art": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 34, 45, 46, 60, 89, 121, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 287, 304, 306, 314, 315, 319, 320, 321, 324, 341, 343, 351, 352, 356, 357, 358, 368, 369, 370, 371, 375, 377, 380, 426, 427, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 480, 481, 482, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 545, 546, 570, 582, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 626, 627, 630, 631, 632, 644, 645, 646, 660, 689, 721, 723, 724, 728, 756, 757, 758, 763, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 781, 782, 783, 787, 788, 789, 791, 792, 798, 800, 828, 829, 830, 831, 832, 833, 834, 835, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 937, 954, 956, 964, 965, 969, 970, 971, 974, 991, 993, 1001, 1002, 1006, 1007, 1008, 1012, 1021, 1022, 1023, 1024, 1028, 1030, 1033, 1060, 1077, 1078, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1096, 1097, 1099, 1100, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1146, 1148, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1173, 1185, 1214, 1249, 1258, 1283, 1284, 1308, 1319, 1320, 1322, 1323, 1325, 1326, 1327, 1328, 1335, 1336, 1338, 1355, 1363, 1364, 1365, 1366, 1368, 1371, 1372, 1375, 1378], "configur": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 39, 40, 42, 45, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 426, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 479, 480, 481, 482, 495, 497, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 570, 587, 588, 589, 593, 594, 599, 600, 602, 604, 606, 607, 608, 609, 610, 612, 619, 620, 621, 622, 625, 631, 632, 638, 639, 641, 644, 756, 757, 758, 763, 767, 768, 769, 771, 772, 773, 774, 777, 781, 782, 783, 787, 788, 789, 791, 792, 828, 829, 830, 831, 832, 833, 834, 835, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1077, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1096, 1097, 1099, 1100, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1130, 1131, 1132, 1133, 1146, 1148, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1308, 1327, 1331, 1356, 1372, 1376], "float": [2, 3, 4, 6, 7, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 40, 73, 102, 118, 119, 120, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 179, 181, 182, 183, 184, 185, 186, 187, 188, 204, 206, 207, 211, 212, 214, 215, 216, 217, 218, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 248, 249, 250, 251, 252, 253, 254, 255, 271, 273, 274, 278, 279, 281, 282, 283, 284, 287, 288, 304, 306, 307, 313, 314, 315, 316, 318, 319, 320, 321, 324, 325, 341, 343, 344, 350, 351, 352, 353, 355, 356, 357, 358, 380, 423, 425, 426, 427, 433, 434, 437, 439, 442, 447, 449, 450, 451, 453, 454, 460, 461, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 555, 556, 557, 558, 559, 563, 571, 572, 573, 583, 587, 588, 589, 591, 592, 594, 599, 602, 606, 608, 609, 610, 612, 619, 620, 621, 625, 626, 627, 639, 673, 702, 718, 719, 720, 722, 725, 732, 756, 757, 758, 759, 760, 761, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 804, 828, 830, 831, 832, 833, 834, 835, 837, 838, 854, 856, 857, 861, 862, 864, 865, 866, 867, 868, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 896, 898, 899, 900, 901, 902, 903, 904, 905, 921, 923, 924, 928, 929, 931, 932, 933, 934, 937, 938, 954, 956, 957, 963, 964, 965, 966, 968, 969, 970, 971, 974, 975, 991, 993, 994, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1011, 1012, 1033, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1074, 1076, 1077, 1078, 1084, 1085, 1088, 1090, 1093, 1098, 1100, 1101, 1102, 1104, 1105, 1111, 1112, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1143, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1198, 1227, 1245, 1249, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1297, 1301, 1309, 1310, 1311, 1320, 1371], "swiss": [2, 4, 6, 7, 11, 126, 587, 589, 591, 592, 599, 726, 1363], "coordin": [2, 3, 4, 6, 7, 9, 11, 22, 46, 48, 54, 60, 71, 89, 100, 118, 119, 120, 121, 122, 123, 124, 125, 126, 145, 193, 204, 211, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 260, 271, 278, 282, 283, 284, 293, 304, 314, 315, 319, 320, 321, 330, 341, 351, 352, 356, 357, 358, 379, 474, 482, 497, 525, 552, 587, 588, 589, 591, 592, 594, 599, 612, 646, 648, 654, 660, 671, 689, 700, 718, 719, 720, 721, 722, 723, 724, 725, 726, 795, 843, 854, 861, 865, 866, 867, 868, 881, 887, 889, 899, 901, 903, 910, 921, 928, 932, 933, 934, 943, 954, 964, 965, 969, 970, 971, 980, 991, 1001, 1002, 1006, 1007, 1008, 1012, 1032, 1060, 1061, 1063, 1068, 1071, 1074, 1125, 1133, 1148, 1173, 1175, 1181, 1185, 1196, 1214, 1225, 1245, 1263, 1290, 1320, 1321, 1325, 1328, 1330, 1331, 1332, 1333, 1355, 1362, 1368, 1373], "posit": [2, 4, 6, 7, 11, 25, 26, 60, 89, 122, 125, 130, 139, 144, 145, 428, 452, 454, 461, 481, 482, 493, 507, 511, 512, 513, 518, 519, 526, 527, 587, 589, 591, 592, 599, 620, 621, 660, 689, 722, 725, 757, 758, 767, 778, 779, 780, 785, 786, 794, 795, 797, 1012, 1079, 1103, 1105, 1112, 1132, 1133, 1144, 1158, 1162, 1163, 1164, 1170, 1171, 1185, 1214, 1264, 1265, 1331, 1336, 1338, 1371, 1372, 1373], "south": [2, 4, 6, 7, 11, 587, 589, 591, 592, 599, 1340, 1371], "western": [2, 4, 6, 7, 11, 587, 589, 591, 592, 599], "point": [2, 3, 4, 6, 7, 9, 11, 22, 45, 46, 48, 62, 91, 123, 135, 136, 137, 139, 140, 193, 207, 212, 218, 230, 231, 232, 248, 260, 274, 279, 284, 287, 293, 307, 312, 313, 316, 321, 330, 344, 349, 350, 353, 358, 370, 371, 374, 376, 380, 424, 433, 442, 450, 453, 454, 460, 461, 473, 476, 479, 493, 495, 511, 516, 528, 530, 541, 542, 546, 548, 558, 561, 576, 587, 588, 589, 591, 592, 594, 599, 612, 644, 646, 648, 662, 691, 723, 756, 757, 758, 772, 773, 777, 778, 779, 780, 782, 783, 786, 787, 788, 789, 790, 843, 857, 862, 868, 880, 881, 882, 898, 910, 924, 929, 934, 937, 943, 957, 962, 963, 966, 971, 980, 994, 999, 1000, 1003, 1008, 1023, 1024, 1027, 1029, 1033, 1068, 1071, 1072, 1073, 1074, 1084, 1093, 1101, 1104, 1105, 1111, 1112, 1124, 1127, 1130, 1144, 1146, 1162, 1167, 1173, 1175, 1187, 1216, 1245, 1266, 1268, 1279, 1280, 1284, 1286, 1296, 1299, 1314, 1320, 1325, 1337, 1344, 1354, 1357, 1360, 1362, 1366, 1368, 1371, 1372, 1373, 1374], "grid": [2, 3, 4, 6, 7, 9, 11, 12, 18, 22, 30, 40, 60, 89, 206, 208, 216, 218, 221, 225, 230, 232, 233, 234, 235, 236, 238, 240, 241, 246, 248, 249, 250, 252, 273, 275, 284, 306, 308, 315, 321, 343, 345, 358, 369, 370, 379, 380, 381, 442, 450, 460, 473, 476, 478, 479, 495, 497, 502, 503, 516, 536, 552, 554, 572, 573, 587, 588, 589, 591, 592, 594, 599, 600, 604, 608, 612, 626, 639, 660, 689, 856, 858, 866, 868, 871, 875, 880, 882, 883, 884, 885, 886, 888, 890, 891, 896, 898, 899, 900, 902, 923, 925, 934, 956, 958, 965, 971, 993, 995, 1008, 1012, 1022, 1023, 1032, 1033, 1034, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1093, 1101, 1111, 1124, 1127, 1129, 1130, 1146, 1148, 1153, 1154, 1167, 1185, 1214, 1245, 1249, 1250, 1252, 1253, 1274, 1290, 1292, 1310, 1311, 1320, 1325, 1330, 1334, 1335, 1338, 1348, 1351, 1353, 1357, 1362, 1363, 1370, 1371, 1372, 1374], "resolut": [2, 3, 9, 11, 22, 60, 89, 127, 128, 204, 206, 207, 211, 212, 215, 216, 217, 218, 234, 246, 271, 273, 274, 278, 279, 282, 283, 284, 304, 306, 307, 314, 315, 316, 319, 320, 321, 341, 343, 344, 351, 352, 353, 356, 357, 358, 372, 424, 433, 442, 450, 460, 473, 476, 478, 479, 495, 497, 501, 507, 513, 516, 542, 587, 588, 594, 599, 612, 660, 689, 759, 760, 765, 766, 854, 856, 857, 861, 862, 865, 866, 867, 868, 884, 896, 921, 923, 924, 928, 929, 932, 933, 934, 954, 956, 957, 964, 965, 966, 969, 970, 971, 991, 993, 994, 1001, 1002, 1003, 1006, 1007, 1008, 1025, 1074, 1084, 1093, 1101, 1111, 1124, 1127, 1129, 1130, 1146, 1148, 1152, 1158, 1164, 1167, 1185, 1214, 1249, 1280, 1328, 1341, 1344, 1366, 1368, 1369, 1370, 1371, 1372], "km": [2, 3, 9, 11, 22, 118, 122, 125, 187, 207, 212, 213, 220, 254, 274, 279, 280, 286, 287, 307, 316, 317, 323, 324, 344, 352, 353, 354, 360, 425, 434, 447, 475, 478, 479, 480, 495, 497, 500, 501, 504, 507, 542, 544, 571, 587, 588, 594, 599, 612, 718, 722, 725, 837, 857, 862, 863, 870, 904, 924, 929, 930, 936, 937, 957, 966, 967, 973, 974, 994, 1002, 1003, 1004, 1010, 1012, 1070, 1076, 1085, 1098, 1126, 1129, 1130, 1131, 1146, 1148, 1151, 1152, 1155, 1158, 1249, 1280, 1282, 1309, 1340, 1345, 1346, 1348, 1355, 1368, 1371, 1372], "int": [2, 3, 9, 11, 14, 16, 22, 26, 40, 46, 48, 60, 66, 67, 69, 70, 71, 72, 73, 89, 95, 96, 98, 99, 100, 101, 102, 129, 130, 131, 133, 134, 136, 137, 141, 142, 164, 176, 180, 182, 189, 190, 191, 203, 207, 211, 212, 214, 215, 216, 218, 225, 226, 227, 228, 233, 234, 235, 241, 242, 243, 244, 246, 249, 256, 257, 258, 270, 274, 278, 279, 281, 282, 284, 289, 290, 291, 303, 307, 314, 315, 316, 318, 319, 321, 326, 327, 328, 340, 344, 351, 352, 353, 355, 356, 358, 380, 427, 432, 433, 437, 441, 442, 446, 447, 448, 449, 450, 451, 452, 459, 460, 465, 466, 468, 469, 473, 479, 480, 483, 493, 495, 497, 505, 506, 507, 509, 511, 513, 515, 517, 518, 519, 525, 528, 530, 541, 542, 543, 545, 547, 552, 575, 583, 587, 588, 594, 599, 602, 606, 612, 621, 639, 646, 648, 660, 666, 667, 669, 670, 671, 672, 673, 689, 695, 696, 698, 699, 700, 701, 702, 741, 753, 758, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 778, 779, 782, 783, 785, 787, 788, 789, 791, 792, 797, 813, 825, 829, 831, 839, 840, 841, 853, 857, 861, 862, 864, 865, 866, 868, 875, 876, 877, 878, 883, 884, 885, 891, 892, 893, 894, 896, 899, 906, 907, 908, 920, 924, 928, 929, 931, 932, 934, 939, 940, 941, 953, 957, 964, 965, 966, 968, 969, 971, 976, 977, 978, 990, 994, 1001, 1002, 1003, 1005, 1006, 1008, 1012, 1033, 1069, 1070, 1074, 1078, 1083, 1084, 1088, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1110, 1111, 1116, 1117, 1119, 1120, 1124, 1130, 1131, 1134, 1144, 1146, 1148, 1156, 1157, 1158, 1160, 1162, 1164, 1166, 1168, 1170, 1171, 1173, 1175, 1185, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1214, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1246, 1247, 1248, 1249, 1263, 1266, 1268, 1279, 1280, 1281, 1283, 1285, 1290, 1313, 1320, 1371, 1376], "dimens": [2, 3, 9, 11, 22, 46, 89, 130, 370, 428, 479, 495, 496, 502, 507, 509, 516, 552, 572, 573, 587, 588, 594, 599, 612, 646, 689, 767, 1012, 1023, 1069, 1070, 1074, 1079, 1130, 1146, 1147, 1153, 1158, 1160, 1167, 1173, 1214, 1290, 1310, 1311, 1355, 1357, 1364, 1368, 1371, 1373], "1536": [3, 9, 588, 594], "dtype": [3, 8, 151, 588, 593, 728, 800, 1068, 1071, 1074, 1320, 1364, 1366, 1373], "float32": [3, 16, 26, 381, 588, 606, 621, 1034, 1320, 1355, 1364, 1366, 1373], "date_format": [3, 9, 22, 588, 594, 612], "added_tim": [3, 9, 22, 588, 594, 612], "86400": [3, 588], "x_offset": [3, 9, 22, 588, 594, 612], "619652": [3, 9, 588, 594], "074056": [3, 9, 588, 594], "y_offset": [3, 9, 22, 588, 594, 612], "3526818": [3, 9, 588, 594], "337932": [3, 9, 588, 594], "lat_0": [3, 9, 22, 46, 60, 89, 122, 125, 315, 352, 588, 594, 612, 646, 660, 689, 722, 725, 965, 1002, 1173, 1185, 1214, 1344, 1372], "90": [3, 9, 494, 558, 588, 594, 1145, 1296, 1376], "lon_0": [3, 9, 22, 46, 60, 89, 122, 125, 315, 352, 588, 594, 612, 646, 660, 689, 722, 725, 965, 1002, 1173, 1185, 1214, 1344, 1372], "proj": [3, 22, 46, 60, 89, 121, 123, 124, 246, 324, 588, 612, 646, 660, 689, 721, 723, 724, 896, 974, 1173, 1185, 1214], "gnom": [3, 588], "rainfall_accumul": [3, 588], "meteofr": [3, 9, 12, 22, 588, 594, 600, 612, 1362], "stereopolar": [3, 9, 588, 594], "project": [3, 9, 21, 22, 46, 49, 60, 89, 121, 122, 123, 124, 125, 209, 221, 233, 234, 235, 246, 276, 287, 309, 315, 346, 352, 370, 379, 380, 442, 450, 460, 473, 476, 494, 588, 594, 611, 612, 630, 646, 649, 660, 689, 721, 722, 723, 724, 725, 859, 871, 883, 884, 885, 896, 926, 937, 959, 965, 996, 1002, 1012, 1023, 1032, 1033, 1074, 1093, 1101, 1111, 1124, 1127, 1145, 1173, 1176, 1185, 1214, 1327, 1328, 1331, 1337, 1338, 1344, 1351, 1355, 1357, 1362, 1365, 1366, 1368, 1369, 1371, 1372, 1375], "type": [3, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 35, 41, 60, 89, 131, 132, 140, 187, 254, 287, 324, 363, 368, 370, 371, 372, 373, 375, 376, 377, 381, 382, 423, 437, 442, 450, 460, 473, 476, 478, 483, 485, 504, 507, 517, 528, 530, 540, 588, 593, 602, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 625, 626, 627, 633, 640, 660, 689, 768, 769, 787, 788, 789, 790, 837, 904, 937, 974, 1016, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1034, 1035, 1088, 1093, 1101, 1111, 1124, 1127, 1129, 1134, 1136, 1155, 1158, 1168, 1185, 1214, 1266, 1268, 1278, 1370, 1372, 1373, 1376], "date": [3, 9, 22, 364, 365, 588, 594, 612, 1017, 1018, 1319, 1327, 1328], "second": [3, 9, 22, 56, 57, 58, 59, 62, 73, 91, 102, 118, 130, 376, 383, 493, 509, 518, 520, 540, 566, 567, 588, 594, 612, 656, 657, 658, 659, 662, 673, 691, 702, 718, 767, 1029, 1037, 1061, 1144, 1160, 1170, 1187, 1198, 1216, 1227, 1278, 1304, 1305, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1369, 1370, 1373, 1376], "nomin": [3, 9, 14, 22, 24, 25, 588, 594, 602, 612, 619, 620], "24h": [3, 9, 588, 594], "accumul": [3, 9, 511, 588, 594, 1162, 1320, 1357], "mf": [3, 9, 588, 594, 778, 779, 780], "x": [3, 9, 21, 22, 46, 52, 54, 72, 80, 89, 101, 109, 118, 119, 120, 121, 122, 123, 124, 125, 187, 193, 197, 204, 206, 209, 211, 214, 215, 216, 217, 218, 220, 231, 233, 237, 239, 249, 251, 253, 254, 260, 264, 271, 273, 276, 278, 281, 282, 283, 284, 286, 287, 293, 297, 304, 306, 309, 312, 314, 318, 319, 320, 321, 323, 324, 330, 334, 341, 343, 346, 349, 351, 355, 356, 357, 358, 360, 437, 479, 484, 495, 499, 502, 503, 507, 508, 509, 516, 517, 552, 588, 594, 611, 612, 646, 652, 654, 672, 680, 689, 701, 709, 718, 719, 720, 721, 722, 723, 724, 725, 837, 843, 847, 854, 856, 859, 861, 864, 865, 866, 867, 868, 870, 881, 883, 887, 889, 899, 901, 903, 904, 910, 914, 921, 923, 926, 928, 931, 932, 933, 934, 936, 937, 943, 947, 954, 956, 959, 962, 964, 968, 969, 970, 971, 973, 974, 980, 984, 991, 993, 996, 999, 1001, 1005, 1006, 1007, 1008, 1010, 1061, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1088, 1130, 1135, 1146, 1150, 1153, 1154, 1158, 1159, 1160, 1167, 1168, 1173, 1179, 1181, 1197, 1205, 1214, 1226, 1234, 1245, 1249, 1290, 1331, 1337, 1338, 1347, 1348, 1357, 1368, 1369, 1371, 1372, 1373, 1375], "offset": [3, 9, 18, 19, 20, 22, 30, 31, 33, 129, 136, 137, 141, 142, 187, 254, 287, 313, 324, 350, 439, 449, 479, 495, 540, 558, 588, 594, 608, 609, 610, 612, 626, 627, 629, 756, 763, 782, 783, 791, 792, 837, 904, 937, 963, 974, 1000, 1090, 1100, 1130, 1146, 1278, 1296], "origin": [3, 9, 22, 46, 54, 130, 131, 132, 187, 254, 287, 324, 376, 378, 379, 383, 412, 495, 533, 534, 554, 588, 594, 612, 646, 654, 767, 768, 769, 837, 904, 937, 974, 1029, 1031, 1032, 1037, 1039, 1068, 1071, 1074, 1146, 1173, 1181, 1271, 1272, 1292, 1331, 1332, 1333, 1356, 1357, 1362, 1376], "stereo": [3, 9, 588, 594], "polar": [3, 9, 26, 138, 179, 370, 371, 455, 482, 497, 509, 588, 594, 613, 621, 772, 773, 774, 778, 779, 780, 784, 787, 788, 789, 828, 1023, 1024, 1071, 1074, 1106, 1133, 1148, 1160, 1320, 1372], "correspond": [3, 9, 13, 22, 122, 125, 151, 203, 233, 234, 235, 249, 270, 303, 340, 364, 417, 443, 463, 517, 541, 545, 547, 548, 549, 559, 560, 561, 562, 583, 588, 594, 601, 612, 722, 725, 728, 800, 853, 883, 884, 885, 899, 920, 953, 990, 1017, 1044, 1055, 1069, 1074, 1094, 1114, 1168, 1279, 1283, 1285, 1286, 1287, 1297, 1298, 1299, 1300, 1327, 1339, 1366, 1370, 1372, 1373, 1376], "northwest": [3, 9, 22, 588, 594, 612], "corner": [3, 9, 22, 206, 273, 306, 313, 343, 350, 588, 594, 612, 856, 923, 956, 963, 993, 1000, 1371], "metropolitan": [3, 9, 22, 588, 594, 612], "french": [3, 9, 22, 588, 594, 612], "composit": [3, 9, 22, 380, 428, 588, 594, 612, 1033, 1079, 1325, 1354, 1360, 1374], "9": [3, 9, 22, 30, 31, 127, 179, 218, 284, 321, 358, 370, 504, 511, 513, 541, 588, 594, 612, 626, 627, 759, 765, 766, 828, 868, 934, 971, 1008, 1023, 1155, 1162, 1164, 1279, 1328, 1339, 1348, 1355, 1356, 1357, 1364, 1369, 1370, 1372, 1373], "965": [3, 9, 22, 588, 594, 612], "53": [3, 9, 22, 136, 137, 588, 594, 612, 782, 783], "670": [3, 9, 22, 588, 594, 612], "deg": [3, 9, 14, 22, 24, 25, 126, 134, 139, 146, 179, 181, 185, 425, 442, 473, 474, 476, 480, 494, 497, 500, 504, 507, 526, 543, 555, 572, 573, 588, 594, 602, 612, 619, 620, 726, 770, 775, 786, 796, 828, 830, 834, 1076, 1093, 1124, 1125, 1127, 1131, 1145, 1148, 1151, 1155, 1158, 1264, 1281, 1293, 1310, 1311, 1359, 1371], "latitud": [3, 9, 22, 29, 46, 48, 51, 54, 56, 60, 71, 89, 100, 121, 122, 123, 125, 126, 144, 145, 187, 209, 210, 230, 232, 233, 234, 236, 237, 238, 246, 248, 250, 251, 252, 254, 276, 277, 287, 309, 310, 311, 313, 315, 324, 346, 347, 348, 350, 352, 442, 473, 476, 526, 544, 545, 546, 555, 571, 588, 594, 612, 625, 646, 648, 651, 654, 656, 660, 671, 689, 700, 721, 722, 723, 725, 726, 794, 795, 837, 859, 860, 880, 882, 883, 884, 886, 887, 888, 896, 898, 900, 901, 902, 904, 926, 927, 937, 959, 960, 961, 963, 965, 974, 996, 997, 998, 1000, 1002, 1012, 1074, 1093, 1124, 1127, 1173, 1175, 1178, 1181, 1185, 1196, 1214, 1225, 1264, 1282, 1283, 1284, 1293, 1309, 1320, 1325, 1326, 1329, 1337, 1344, 1351, 1355, 1357, 1364, 1365, 1371, 1372, 1373, 1374], "longitud": [3, 9, 22, 29, 46, 48, 51, 54, 56, 60, 71, 89, 100, 121, 122, 123, 125, 126, 144, 145, 187, 209, 210, 230, 232, 233, 234, 236, 238, 239, 246, 248, 250, 252, 253, 254, 276, 277, 287, 309, 310, 311, 313, 315, 324, 346, 347, 348, 350, 352, 442, 473, 476, 526, 544, 545, 546, 555, 571, 588, 594, 612, 625, 646, 648, 651, 654, 656, 660, 671, 689, 700, 721, 722, 723, 725, 726, 794, 795, 837, 859, 860, 880, 882, 883, 884, 886, 888, 889, 896, 898, 900, 902, 903, 904, 926, 927, 937, 959, 960, 961, 963, 965, 974, 996, 997, 998, 1000, 1002, 1012, 1074, 1093, 1124, 1127, 1173, 1175, 1178, 1181, 1185, 1196, 1214, 1225, 1264, 1282, 1283, 1284, 1293, 1309, 1325, 1326, 1329, 1337, 1344, 1351, 1355, 1357, 1364, 1365, 1371, 1372, 1373, 1374], "stereograph": [3, 9, 588, 594], "can": [3, 4, 13, 14, 16, 18, 22, 24, 25, 26, 30, 31, 33, 45, 60, 69, 72, 89, 98, 101, 121, 123, 124, 130, 135, 140, 151, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 203, 270, 303, 340, 362, 370, 371, 373, 376, 380, 381, 382, 410, 430, 433, 437, 442, 446, 449, 450, 460, 466, 468, 473, 474, 476, 480, 482, 495, 497, 500, 504, 507, 508, 509, 511, 513, 514, 517, 519, 528, 559, 565, 581, 588, 589, 601, 602, 604, 606, 608, 612, 619, 620, 621, 626, 627, 629, 630, 644, 660, 669, 672, 689, 698, 701, 721, 723, 724, 728, 741, 753, 757, 758, 765, 766, 767, 770, 772, 773, 777, 778, 779, 780, 781, 787, 788, 789, 790, 800, 813, 825, 828, 829, 830, 831, 832, 833, 834, 835, 853, 920, 953, 990, 1012, 1015, 1023, 1024, 1026, 1029, 1033, 1034, 1035, 1072, 1073, 1074, 1081, 1084, 1088, 1093, 1097, 1100, 1101, 1111, 1117, 1119, 1124, 1125, 1127, 1131, 1133, 1146, 1148, 1151, 1155, 1158, 1159, 1160, 1162, 1164, 1165, 1168, 1171, 1185, 1194, 1197, 1214, 1223, 1226, 1266, 1297, 1303, 1320, 1327, 1328, 1331, 1336, 1355, 1357, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1378], "webmerc": [3, 22, 588, 612], "stere": [3, 22, 352, 588, 612, 1002], "reader": [4, 14, 16, 589, 602, 606, 1320, 1328, 1362], "c": [4, 14, 16, 77, 106, 118, 122, 125, 130, 132, 246, 352, 410, 432, 437, 442, 450, 452, 478, 484, 499, 507, 508, 509, 514, 517, 519, 542, 585, 589, 602, 606, 677, 706, 718, 722, 725, 756, 758, 762, 767, 769, 896, 1002, 1083, 1088, 1093, 1101, 1103, 1129, 1135, 1150, 1158, 1159, 1160, 1165, 1168, 1171, 1202, 1231, 1251, 1280, 1320, 1331, 1362, 1363, 1365, 1368, 1370, 1371, 1375, 1376, 1378], "metranet": [4, 6, 7, 14, 16, 585, 589, 591, 592, 596, 597, 602, 606, 613, 614, 1320, 1363], "product": [4, 374, 376, 428, 497, 519, 589, 1027, 1029, 1079, 1148, 1171, 1320], "librari": [4, 14, 16, 145, 363, 373, 376, 379, 380, 585, 589, 602, 606, 795, 1016, 1026, 1029, 1032, 1033, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1375, 1376], "either": [4, 14, 16, 18, 30, 31, 130, 131, 132, 135, 204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 281, 282, 283, 284, 304, 305, 306, 314, 318, 319, 320, 321, 341, 342, 343, 351, 355, 356, 357, 358, 365, 421, 442, 450, 460, 473, 480, 481, 485, 488, 489, 497, 504, 589, 602, 604, 606, 608, 626, 627, 757, 758, 767, 768, 769, 772, 773, 777, 787, 788, 789, 797, 854, 855, 856, 861, 864, 865, 866, 867, 868, 879, 881, 883, 884, 885, 887, 889, 897, 899, 901, 903, 921, 922, 923, 928, 931, 932, 933, 934, 954, 955, 956, 964, 968, 969, 970, 971, 991, 992, 993, 1001, 1005, 1006, 1007, 1008, 1018, 1048, 1058, 1093, 1101, 1111, 1124, 1131, 1132, 1136, 1139, 1140, 1148, 1155, 1357, 1362, 1370, 1371, 1372, 1375, 1376], "python": [4, 14, 16, 45, 380, 581, 589, 602, 606, 644, 1033, 1320, 1322, 1323, 1325, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1375, 1378], "delay_field_load": [5, 6, 7, 28, 363, 366, 367, 370, 371, 372, 375, 377, 590, 591, 592, 624, 1016, 1019, 1020, 1023, 1024, 1025, 1028, 1030], "delai": [5, 6, 7, 28, 363, 366, 367, 370, 371, 372, 375, 542, 590, 591, 592, 624, 1016, 1019, 1020, 1023, 1024, 1025, 1028, 1280], "load": [5, 6, 7, 28, 45, 363, 366, 367, 370, 371, 372, 375, 383, 419, 585, 590, 591, 592, 624, 644, 1016, 1019, 1020, 1023, 1024, 1025, 1028, 1036, 1037, 1046, 1370, 1371, 1372, 1373], "until": [5, 6, 7, 28, 45, 131, 363, 366, 367, 370, 371, 372, 375, 590, 591, 592, 624, 644, 768, 1016, 1019, 1020, 1023, 1024, 1025, 1028, 1371], "particular": [5, 6, 7, 28, 363, 366, 367, 370, 371, 372, 375, 474, 498, 511, 590, 591, 592, 624, 1016, 1019, 1020, 1023, 1024, 1025, 1028, 1074, 1125, 1149, 1162, 1362], "access": [5, 6, 7, 28, 35, 46, 60, 71, 72, 89, 100, 101, 151, 363, 366, 367, 370, 371, 372, 375, 383, 590, 591, 592, 624, 633, 646, 660, 671, 672, 689, 700, 701, 728, 800, 1016, 1019, 1020, 1023, 1024, 1025, 1028, 1037, 1173, 1185, 1196, 1197, 1214, 1225, 1226, 1244, 1327, 1328, 1368, 1373], "In": [5, 6, 7, 28, 30, 31, 121, 123, 124, 132, 134, 363, 366, 367, 370, 371, 372, 374, 375, 421, 428, 474, 507, 519, 525, 590, 591, 592, 624, 626, 627, 721, 723, 724, 769, 775, 1013, 1016, 1019, 1020, 1023, 1024, 1025, 1027, 1028, 1048, 1058, 1061, 1079, 1125, 1158, 1171, 1263, 1322, 1323, 1328, 1357, 1362, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1375, 1376], "attribut": [5, 6, 7, 18, 19, 20, 28, 30, 31, 33, 46, 49, 50, 51, 52, 60, 71, 72, 78, 79, 80, 81, 89, 100, 101, 107, 108, 109, 110, 130, 147, 151, 164, 176, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 363, 366, 367, 368, 370, 371, 372, 375, 378, 379, 382, 454, 590, 591, 592, 604, 608, 609, 610, 624, 626, 627, 629, 646, 649, 650, 651, 652, 660, 671, 672, 678, 679, 680, 681, 689, 700, 701, 707, 708, 709, 710, 728, 741, 753, 767, 800, 813, 825, 854, 861, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1012, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1028, 1031, 1032, 1035, 1105, 1173, 1176, 1177, 1178, 1179, 1185, 1196, 1197, 1203, 1204, 1205, 1206, 1214, 1225, 1226, 1232, 1233, 1234, 1235, 1355, 1364, 1370, 1373], "lazyloaddict": [5, 6, 7, 28, 46, 60, 89, 363, 366, 367, 370, 371, 372, 375, 590, 591, 592, 624, 646, 660, 689, 1016, 1019, 1020, 1023, 1024, 1025, 1028, 1173, 1185, 1214], "provid": [5, 6, 7, 8, 13, 28, 60, 63, 89, 92, 130, 210, 234, 277, 310, 315, 347, 365, 366, 367, 368, 373, 376, 380, 381, 382, 383, 415, 416, 422, 497, 504, 553, 570, 590, 591, 592, 593, 601, 624, 660, 663, 689, 692, 767, 860, 884, 927, 960, 965, 997, 1012, 1018, 1019, 1020, 1021, 1026, 1029, 1033, 1034, 1035, 1037, 1042, 1043, 1049, 1050, 1053, 1054, 1059, 1061, 1148, 1155, 1185, 1188, 1214, 1217, 1291, 1308, 1319, 1328, 1355, 1357, 1362, 1369, 1370, 1372, 1375, 1376], "speedup": [5, 6, 7, 28, 233, 234, 315, 352, 366, 367, 590, 591, 592, 624, 883, 884, 965, 1002, 1019, 1020], "number": [5, 6, 7, 14, 16, 26, 28, 33, 45, 46, 60, 66, 67, 69, 70, 71, 72, 73, 89, 95, 96, 98, 99, 100, 101, 102, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 203, 207, 211, 212, 214, 215, 216, 217, 234, 270, 274, 278, 279, 281, 282, 283, 303, 307, 314, 315, 316, 318, 319, 320, 340, 344, 351, 352, 353, 355, 356, 357, 366, 367, 374, 380, 381, 399, 433, 437, 442, 446, 447, 450, 451, 452, 460, 466, 473, 480, 482, 483, 493, 503, 505, 506, 507, 509, 511, 513, 515, 517, 528, 530, 540, 541, 542, 547, 548, 549, 559, 560, 561, 562, 576, 582, 590, 591, 592, 602, 606, 621, 624, 629, 644, 646, 660, 666, 667, 669, 670, 671, 672, 673, 689, 695, 696, 698, 699, 700, 701, 702, 756, 757, 758, 763, 765, 766, 767, 768, 770, 771, 772, 773, 775, 776, 777, 778, 779, 782, 783, 785, 787, 788, 789, 790, 791, 792, 797, 853, 857, 861, 862, 864, 865, 866, 867, 884, 920, 924, 928, 929, 931, 932, 933, 953, 957, 964, 965, 966, 968, 969, 970, 990, 994, 1001, 1002, 1003, 1005, 1006, 1007, 1013, 1019, 1020, 1027, 1033, 1034, 1068, 1071, 1072, 1073, 1074, 1084, 1088, 1093, 1097, 1098, 1101, 1102, 1103, 1111, 1117, 1124, 1131, 1133, 1134, 1144, 1154, 1156, 1157, 1158, 1160, 1162, 1164, 1166, 1168, 1173, 1185, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1214, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1245, 1246, 1247, 1248, 1249, 1266, 1268, 1278, 1279, 1280, 1285, 1286, 1287, 1297, 1298, 1299, 1300, 1314, 1336, 1338, 1362, 1370, 1371, 1373, 1376], "gate": [5, 6, 7, 28, 60, 70, 71, 72, 89, 99, 100, 101, 118, 119, 120, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 254, 271, 278, 282, 283, 287, 304, 314, 315, 319, 320, 324, 341, 351, 352, 356, 357, 366, 367, 372, 373, 374, 375, 451, 452, 481, 482, 491, 492, 493, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 525, 526, 527, 542, 543, 545, 546, 552, 555, 590, 591, 592, 624, 660, 670, 671, 672, 689, 699, 700, 701, 718, 719, 720, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 763, 767, 768, 769, 770, 771, 772, 773, 775, 777, 779, 781, 782, 783, 787, 788, 789, 791, 792, 799, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 854, 861, 865, 866, 867, 881, 887, 889, 899, 901, 903, 904, 921, 928, 932, 933, 937, 954, 964, 965, 969, 970, 974, 991, 1001, 1002, 1006, 1007, 1019, 1020, 1025, 1026, 1027, 1028, 1061, 1068, 1071, 1072, 1073, 1074, 1102, 1103, 1132, 1133, 1142, 1143, 1144, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1170, 1171, 1185, 1195, 1196, 1197, 1214, 1224, 1225, 1226, 1246, 1247, 1248, 1263, 1264, 1265, 1280, 1281, 1283, 1284, 1290, 1293, 1323, 1328, 1331, 1332, 1333, 1337, 1364, 1366, 1368, 1369, 1370, 1372, 1373], "vari": [5, 6, 7, 28, 366, 367, 370, 478, 563, 590, 591, 592, 624, 1019, 1020, 1023, 1129, 1301, 1357, 1370], "between": [5, 6, 7, 14, 24, 25, 28, 30, 31, 48, 60, 71, 72, 89, 100, 101, 119, 122, 123, 130, 131, 134, 164, 176, 179, 182, 183, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 366, 367, 372, 375, 381, 382, 435, 437, 478, 479, 485, 493, 495, 497, 512, 513, 527, 529, 531, 532, 540, 561, 562, 571, 590, 591, 592, 602, 619, 620, 624, 626, 627, 648, 660, 671, 672, 689, 700, 701, 719, 722, 723, 741, 753, 765, 766, 767, 768, 770, 775, 778, 779, 780, 781, 789, 813, 825, 828, 831, 832, 854, 861, 865, 866, 867, 868, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1011, 1019, 1020, 1025, 1028, 1034, 1035, 1061, 1086, 1088, 1129, 1130, 1136, 1144, 1146, 1148, 1163, 1164, 1175, 1185, 1196, 1197, 1214, 1225, 1226, 1258, 1265, 1267, 1269, 1270, 1278, 1299, 1300, 1309, 1320, 1331, 1337, 1347, 1357, 1366, 1368, 1371, 1372, 1376, 1378], "rai": [5, 6, 7, 28, 31, 60, 68, 71, 72, 73, 74, 75, 76, 89, 97, 100, 101, 102, 103, 104, 105, 119, 130, 131, 132, 133, 134, 135, 137, 164, 176, 182, 188, 190, 193, 195, 196, 204, 211, 214, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 255, 257, 260, 262, 263, 271, 278, 281, 282, 283, 284, 288, 290, 293, 295, 296, 304, 314, 315, 318, 319, 320, 321, 325, 327, 330, 332, 333, 341, 351, 352, 355, 356, 357, 358, 365, 366, 367, 372, 375, 376, 424, 427, 447, 452, 482, 511, 512, 513, 518, 530, 537, 539, 542, 543, 545, 547, 548, 549, 559, 560, 561, 562, 575, 576, 590, 591, 592, 624, 627, 660, 668, 671, 672, 673, 674, 675, 676, 689, 697, 700, 701, 702, 703, 704, 705, 719, 741, 753, 756, 757, 758, 765, 766, 767, 768, 769, 771, 772, 773, 775, 777, 778, 779, 783, 787, 788, 789, 813, 825, 831, 838, 840, 843, 845, 846, 854, 861, 864, 865, 866, 867, 868, 881, 887, 889, 899, 901, 903, 905, 907, 910, 912, 913, 921, 928, 931, 932, 933, 934, 938, 940, 943, 945, 946, 954, 964, 965, 968, 969, 970, 971, 975, 977, 980, 982, 983, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1025, 1028, 1029, 1061, 1078, 1098, 1103, 1133, 1162, 1163, 1164, 1170, 1185, 1193, 1196, 1197, 1198, 1199, 1200, 1201, 1214, 1222, 1225, 1226, 1227, 1228, 1229, 1230, 1246, 1247, 1248, 1251, 1268, 1275, 1277, 1280, 1281, 1283, 1285, 1286, 1287, 1297, 1298, 1299, 1300, 1313, 1314, 1320, 1332, 1364, 1373, 1376], "ngates_vari": [5, 6, 7, 28, 366, 367, 590, 591, 592, 624, 1019, 1020], "recommend": [5, 6, 7, 28, 45, 60, 89, 130, 132, 352, 366, 367, 376, 478, 479, 495, 507, 525, 590, 591, 592, 624, 644, 660, 689, 767, 769, 1002, 1019, 1020, 1029, 1074, 1129, 1130, 1146, 1158, 1185, 1214, 1263, 1336, 1362, 1375, 1376, 1377, 1378], "read_altitude_from_nc": [8, 593], "d3r": [8, 593], "gcpex": [8, 593], "odim_h5": [8, 18, 19, 20, 30, 31, 593, 604, 608, 609, 610, 626, 627, 1320], "found": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 45, 133, 149, 363, 368, 370, 371, 372, 373, 375, 376, 377, 417, 428, 483, 496, 559, 593, 602, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 625, 644, 765, 766, 770, 771, 1016, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1044, 1055, 1068, 1071, 1072, 1073, 1074, 1079, 1134, 1147, 1297, 1328, 1362, 1370, 1375, 1376, 1378], "doe": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 64, 93, 121, 123, 124, 130, 131, 132, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 396, 421, 576, 593, 602, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 625, 664, 693, 721, 723, 724, 767, 768, 769, 854, 856, 861, 864, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 965, 968, 969, 970, 971, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1012, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1048, 1058, 1189, 1218, 1314, 1320, 1348, 1362, 1364, 1370, 1375, 1376, 1378], "appear": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 558, 593, 602, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 625, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1296], "place": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 135, 205, 209, 210, 229, 232, 247, 248, 272, 276, 277, 305, 309, 310, 342, 346, 347, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 433, 513, 576, 593, 602, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 625, 777, 855, 859, 860, 879, 882, 897, 898, 922, 926, 927, 955, 959, 960, 992, 996, 997, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1034, 1035, 1084, 1164, 1314, 1368, 1375], "defin": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 46, 60, 89, 121, 123, 124, 129, 130, 133, 135, 136, 137, 141, 142, 179, 180, 181, 182, 183, 184, 185, 186, 209, 210, 214, 276, 277, 281, 309, 310, 318, 346, 347, 355, 363, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 382, 427, 460, 474, 480, 497, 504, 505, 506, 507, 511, 512, 513, 516, 520, 525, 593, 602, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 625, 626, 627, 646, 660, 689, 721, 723, 724, 756, 757, 758, 763, 765, 766, 767, 770, 771, 772, 773, 774, 777, 781, 782, 783, 787, 788, 789, 791, 792, 828, 829, 830, 831, 832, 833, 834, 835, 859, 860, 864, 926, 927, 931, 959, 960, 968, 996, 997, 1005, 1016, 1019, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1035, 1072, 1073, 1074, 1078, 1111, 1125, 1131, 1148, 1155, 1156, 1157, 1158, 1162, 1163, 1164, 1167, 1173, 1185, 1214, 1263, 1337, 1338, 1355, 1357, 1372], "mdv": [8, 14, 16, 18, 19, 20, 24, 25, 26, 29, 370, 371, 381, 593, 602, 604, 606, 608, 609, 610, 619, 620, 621, 622, 625, 1023, 1024, 1034, 1323, 1325, 1332, 1335, 1353, 1362, 1366, 1368, 1374], "like": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 40, 56, 57, 77, 106, 121, 122, 124, 125, 126, 131, 132, 362, 363, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 415, 416, 428, 482, 511, 512, 513, 521, 522, 523, 524, 541, 542, 556, 581, 593, 602, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 625, 639, 656, 657, 677, 706, 721, 722, 724, 725, 726, 768, 769, 1012, 1015, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1042, 1043, 1053, 1054, 1079, 1133, 1162, 1163, 1164, 1202, 1231, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1279, 1280, 1294, 1327, 1328, 1331, 1362, 1364, 1366, 1368, 1372, 1376], "onli": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 32, 65, 71, 72, 94, 100, 101, 130, 132, 133, 135, 136, 137, 151, 204, 215, 233, 234, 271, 282, 304, 315, 319, 341, 352, 356, 363, 368, 370, 371, 372, 373, 374, 375, 376, 481, 482, 497, 507, 533, 534, 547, 558, 565, 572, 573, 593, 602, 604, 606, 607, 608, 609, 610, 619, 620, 621, 622, 625, 628, 665, 671, 672, 694, 700, 701, 728, 756, 757, 758, 762, 767, 769, 771, 777, 782, 783, 787, 788, 789, 800, 854, 865, 883, 884, 921, 932, 954, 965, 969, 991, 1002, 1006, 1016, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1069, 1070, 1074, 1132, 1133, 1148, 1158, 1190, 1196, 1197, 1219, 1225, 1226, 1271, 1272, 1285, 1296, 1303, 1310, 1311, 1320, 1331, 1338, 1348, 1357, 1365, 1366, 1368, 1370, 1371, 1372, 1376], "you": [8, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 482, 593, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1133, 1327, 1357, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1375, 1376, 1378], "altitud": [8, 29, 46, 60, 71, 89, 100, 126, 127, 128, 136, 137, 187, 218, 284, 321, 358, 428, 433, 497, 500, 501, 513, 516, 526, 544, 555, 571, 593, 625, 646, 660, 671, 689, 700, 726, 759, 760, 765, 766, 778, 782, 783, 837, 868, 934, 971, 1008, 1012, 1069, 1074, 1079, 1084, 1148, 1151, 1152, 1164, 1167, 1173, 1185, 1196, 1214, 1225, 1264, 1282, 1293, 1309, 1320, 1348, 1359, 1364, 1368, 1371, 1373], "np": [8, 14, 16, 26, 447, 519, 569, 593, 602, 606, 621, 1061, 1098, 1171, 1307, 1320, 1331, 1332, 1336, 1339, 1344, 1347, 1348, 1350, 1355, 1357, 1358, 1359, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1376], "295": [8, 593], "float64": [8, 593, 1072, 1073, 1074, 1355, 1373], "nd": [9, 594], "65535": [9, 594], "radar_estimated_rain_r": [9, 594, 1370, 1372], "integ": [9, 204, 271, 304, 341, 382, 502, 503, 594, 854, 921, 954, 991, 1035, 1153, 1154], "repres": [9, 60, 89, 129, 130, 133, 141, 142, 480, 493, 497, 504, 505, 506, 511, 513, 518, 519, 576, 594, 660, 689, 763, 767, 771, 772, 773, 774, 787, 788, 789, 791, 792, 1069, 1070, 1131, 1144, 1148, 1155, 1156, 1157, 1162, 1164, 1170, 1171, 1185, 1214, 1246, 1247, 1314], "No": [9, 71, 72, 100, 101, 132, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 380, 432, 497, 594, 671, 672, 700, 701, 769, 854, 861, 865, 866, 867, 868, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1033, 1074, 1083, 1148, 1196, 1197, 1225, 1226, 1370, 1372], "valid_range_from_fil": [10, 598], "units_from_fil": [10, 598], "pulse_width": [10, 138, 146, 382, 453, 598, 784, 796, 1035, 1104], "gamic": [10, 598], "hdf5": [10, 19, 30, 31, 598, 609, 626, 627, 1362], "valid": [10, 46, 60, 89, 130, 133, 135, 136, 140, 141, 142, 178, 205, 229, 247, 272, 305, 342, 372, 381, 382, 425, 437, 442, 446, 450, 451, 452, 460, 466, 473, 480, 482, 493, 505, 506, 511, 513, 528, 530, 533, 534, 541, 542, 598, 646, 660, 689, 755, 756, 765, 766, 767, 771, 777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 792, 827, 855, 879, 897, 922, 955, 992, 1025, 1034, 1035, 1069, 1070, 1074, 1076, 1088, 1093, 1097, 1101, 1102, 1103, 1111, 1117, 1124, 1131, 1133, 1144, 1156, 1157, 1162, 1164, 1173, 1185, 1214, 1266, 1268, 1271, 1272, 1279, 1280, 1376], "rang": [10, 14, 16, 24, 25, 26, 60, 70, 72, 89, 99, 101, 118, 119, 120, 129, 133, 141, 142, 179, 187, 204, 206, 211, 212, 213, 215, 216, 217, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 254, 271, 273, 278, 279, 280, 282, 283, 287, 304, 306, 314, 315, 316, 317, 319, 320, 324, 341, 343, 351, 352, 353, 354, 356, 357, 375, 424, 425, 433, 442, 446, 447, 460, 466, 473, 474, 478, 481, 482, 493, 497, 501, 507, 509, 511, 512, 513, 530, 540, 543, 555, 561, 562, 572, 573, 598, 602, 606, 619, 620, 621, 660, 670, 672, 689, 699, 701, 718, 719, 720, 758, 763, 765, 766, 771, 772, 773, 774, 778, 791, 792, 828, 837, 854, 856, 861, 862, 863, 865, 866, 867, 881, 883, 884, 885, 887, 889, 896, 899, 901, 903, 904, 921, 923, 928, 929, 930, 932, 933, 937, 954, 956, 964, 965, 966, 967, 969, 970, 974, 991, 993, 1001, 1002, 1003, 1004, 1006, 1007, 1012, 1028, 1069, 1070, 1074, 1076, 1084, 1093, 1097, 1098, 1111, 1117, 1124, 1125, 1129, 1132, 1133, 1144, 1148, 1152, 1158, 1160, 1162, 1163, 1164, 1185, 1195, 1197, 1214, 1224, 1226, 1268, 1278, 1281, 1293, 1299, 1300, 1310, 1311, 1320, 1336, 1341, 1344, 1350, 1359, 1364, 1371, 1373], "valid_min": [10, 130, 131, 132, 368, 598, 767, 768, 769, 1021, 1357, 1373], "valid_max": [10, 130, 131, 132, 368, 598, 767, 768, 769, 1021, 1357, 1373], "when": [10, 18, 19, 20, 33, 35, 46, 60, 61, 62, 66, 67, 69, 71, 72, 89, 90, 91, 95, 96, 98, 100, 101, 130, 131, 132, 136, 137, 144, 145, 149, 150, 151, 155, 157, 164, 171, 176, 204, 211, 215, 216, 217, 218, 233, 234, 240, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 324, 341, 351, 352, 356, 357, 358, 372, 373, 375, 376, 378, 382, 383, 396, 427, 437, 442, 450, 460, 473, 476, 481, 485, 488, 489, 493, 497, 500, 505, 507, 508, 509, 513, 518, 519, 541, 563, 598, 608, 609, 610, 629, 633, 646, 660, 661, 662, 666, 667, 669, 671, 672, 689, 690, 691, 695, 696, 698, 700, 701, 728, 732, 734, 741, 748, 753, 765, 766, 767, 768, 769, 782, 783, 787, 794, 795, 800, 804, 806, 813, 820, 825, 854, 861, 865, 866, 867, 868, 883, 884, 890, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 974, 991, 1001, 1002, 1006, 1007, 1008, 1025, 1026, 1028, 1029, 1031, 1035, 1037, 1061, 1074, 1078, 1088, 1093, 1101, 1111, 1124, 1127, 1132, 1136, 1139, 1140, 1144, 1148, 1151, 1156, 1158, 1159, 1160, 1164, 1170, 1171, 1172, 1173, 1185, 1186, 1187, 1191, 1192, 1194, 1196, 1197, 1214, 1215, 1216, 1220, 1221, 1223, 1225, 1226, 1279, 1301, 1320, 1336, 1357, 1362, 1365, 1366, 1369, 1371, 1375, 1376, 1378], "thei": [10, 73, 102, 130, 131, 132, 134, 155, 157, 164, 352, 368, 376, 382, 437, 474, 478, 507, 582, 596, 598, 673, 702, 732, 734, 741, 767, 768, 769, 775, 787, 788, 789, 804, 806, 813, 1002, 1021, 1029, 1035, 1088, 1125, 1129, 1158, 1198, 1227, 1357, 1370, 1376], "present": [10, 45, 46, 60, 89, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 381, 382, 421, 598, 644, 646, 660, 689, 854, 861, 865, 866, 867, 868, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1034, 1035, 1048, 1058, 1074, 1173, 1185, 1214, 1364, 1369], "unit": [10, 18, 19, 20, 70, 99, 121, 122, 123, 124, 125, 131, 132, 194, 197, 198, 199, 200, 201, 202, 209, 261, 264, 265, 266, 267, 268, 269, 276, 294, 297, 298, 299, 300, 301, 302, 309, 331, 334, 335, 336, 337, 338, 339, 346, 361, 368, 370, 446, 466, 468, 495, 502, 528, 541, 542, 598, 608, 609, 610, 670, 699, 721, 722, 723, 724, 725, 765, 766, 768, 769, 844, 847, 848, 849, 850, 851, 852, 859, 911, 914, 915, 916, 917, 918, 919, 926, 944, 947, 948, 949, 950, 951, 952, 959, 981, 984, 985, 986, 987, 988, 989, 996, 1014, 1021, 1023, 1097, 1117, 1119, 1146, 1153, 1172, 1195, 1224, 1251, 1266, 1279, 1280, 1320, 1345, 1350, 1357, 1362, 1365, 1370, 1373, 1376], "avail": [10, 18, 19, 20, 60, 71, 72, 73, 89, 100, 101, 102, 134, 135, 164, 176, 231, 233, 234, 235, 237, 239, 249, 251, 253, 370, 380, 497, 528, 565, 598, 608, 609, 610, 630, 660, 671, 672, 673, 689, 700, 701, 702, 741, 753, 756, 757, 758, 775, 777, 787, 788, 789, 813, 825, 881, 883, 884, 885, 887, 889, 899, 901, 903, 1023, 1033, 1148, 1185, 1196, 1197, 1198, 1214, 1225, 1226, 1227, 1266, 1303, 1325, 1327, 1336, 1362, 1370], "mandatori": [10, 598], "processor": [10, 598], "pulsewidth": [10, 497, 598, 1148], "enum": [10, 598], "should": [10, 26, 37, 46, 60, 62, 69, 89, 91, 98, 130, 131, 132, 135, 137, 151, 155, 187, 232, 248, 315, 352, 362, 376, 379, 381, 382, 410, 479, 482, 493, 495, 497, 505, 506, 507, 508, 509, 514, 516, 518, 519, 540, 541, 542, 550, 582, 598, 621, 635, 646, 660, 662, 669, 689, 691, 698, 728, 732, 762, 767, 768, 769, 777, 783, 800, 804, 837, 882, 898, 965, 1002, 1011, 1013, 1015, 1029, 1032, 1034, 1035, 1069, 1070, 1072, 1073, 1074, 1130, 1133, 1144, 1146, 1148, 1156, 1157, 1158, 1159, 1160, 1165, 1167, 1170, 1171, 1173, 1185, 1187, 1194, 1214, 1216, 1223, 1278, 1279, 1280, 1288, 1336, 1357, 1362, 1375, 1376, 1378], "u": [10, 56, 57, 58, 122, 125, 504, 518, 519, 598, 656, 657, 658, 722, 725, 1155, 1170, 1171, 1328, 1359, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1376], "gif": [11, 599, 1320], "precipitation_typ": [12, 22, 600, 612], "grib": [12, 600], "locat": [13, 46, 48, 60, 70, 71, 72, 89, 99, 100, 101, 187, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 246, 247, 249, 251, 253, 254, 271, 272, 273, 276, 277, 278, 279, 280, 282, 283, 284, 287, 304, 305, 306, 309, 310, 312, 314, 315, 316, 317, 319, 320, 321, 324, 341, 342, 343, 346, 347, 349, 351, 352, 353, 354, 356, 357, 358, 372, 373, 375, 381, 527, 544, 545, 546, 601, 646, 648, 660, 670, 671, 672, 689, 699, 700, 701, 837, 854, 855, 856, 859, 860, 861, 862, 863, 865, 866, 867, 868, 879, 881, 883, 884, 885, 887, 889, 896, 897, 899, 901, 903, 904, 921, 922, 923, 926, 927, 928, 929, 930, 932, 933, 934, 937, 954, 955, 956, 959, 960, 962, 964, 965, 966, 967, 969, 970, 971, 974, 991, 992, 993, 996, 997, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1025, 1026, 1028, 1034, 1061, 1068, 1071, 1072, 1073, 1074, 1173, 1175, 1185, 1195, 1196, 1197, 1214, 1224, 1225, 1226, 1245, 1258, 1265, 1282, 1283, 1284, 1342, 1344, 1355, 1362, 1368, 1371, 1375, 1376], "hpl": [13, 601], "ascii": [13, 601], "halo": [13, 601], "photono": [13, 601], "steamlin": [13, 601], "lidar": [13, 492, 601, 1143, 1320, 1362], "come": [13, 511, 601, 1162, 1357], "assign": [13, 130, 504, 601, 767, 787, 1155, 1357], "lat": [13, 55, 71, 100, 121, 122, 123, 124, 125, 126, 144, 145, 193, 218, 231, 232, 233, 234, 236, 237, 238, 239, 248, 250, 251, 252, 253, 260, 284, 293, 311, 313, 315, 321, 330, 348, 350, 358, 379, 380, 442, 473, 476, 601, 655, 671, 700, 721, 722, 723, 724, 725, 726, 794, 795, 843, 868, 881, 882, 883, 884, 886, 887, 888, 889, 898, 900, 901, 902, 903, 910, 934, 943, 961, 963, 965, 971, 980, 998, 1000, 1008, 1032, 1033, 1093, 1124, 1127, 1182, 1196, 1225, 1337, 1338, 1351, 1368, 1371], "lon": [13, 55, 71, 100, 121, 122, 123, 124, 125, 126, 144, 145, 193, 218, 231, 232, 233, 234, 236, 237, 238, 239, 248, 250, 251, 252, 253, 260, 284, 293, 311, 313, 315, 321, 330, 348, 350, 358, 379, 380, 442, 473, 476, 601, 655, 671, 700, 721, 722, 723, 724, 725, 726, 794, 795, 843, 868, 881, 882, 883, 884, 886, 887, 888, 889, 898, 900, 901, 902, 903, 910, 934, 943, 961, 963, 965, 971, 980, 998, 1000, 1008, 1032, 1033, 1093, 1124, 1127, 1182, 1196, 1225, 1338, 1351, 1371], "alt": [13, 55, 71, 100, 126, 379, 601, 655, 671, 700, 726, 1032, 1182, 1196, 1225, 1371], "ad": [13, 46, 60, 62, 89, 91, 134, 136, 137, 240, 313, 350, 478, 479, 495, 497, 601, 646, 660, 662, 689, 691, 775, 782, 783, 890, 963, 1000, 1069, 1072, 1073, 1129, 1130, 1146, 1148, 1173, 1185, 1187, 1214, 1216, 1249, 1320, 1347, 1348, 1364, 1365, 1375, 1376], "global": [13, 60, 89, 601, 660, 689, 1185, 1214, 1373, 1375], "variabl": [13, 33, 45, 46, 54, 55, 56, 60, 70, 89, 99, 151, 187, 221, 240, 254, 287, 324, 378, 379, 437, 448, 449, 483, 485, 496, 504, 507, 510, 514, 515, 517, 541, 601, 629, 644, 646, 654, 655, 656, 660, 670, 689, 699, 728, 800, 837, 871, 890, 904, 937, 974, 1031, 1032, 1061, 1069, 1088, 1099, 1100, 1134, 1136, 1147, 1155, 1158, 1161, 1165, 1166, 1168, 1173, 1181, 1182, 1185, 1195, 1214, 1224, 1279, 1320, 1327, 1331, 1355, 1357, 1362, 1364, 1365, 1370, 1372, 1373, 1375], "location_campaign": [13, 601], "script": [13, 45, 581, 601, 644, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359], "filenames_iq": [14, 602], "nbyte": [14, 16, 26, 602, 606, 621], "4": [14, 16, 26, 30, 31, 60, 89, 118, 119, 126, 366, 370, 427, 478, 510, 511, 561, 602, 606, 621, 626, 627, 660, 689, 718, 719, 726, 765, 766, 787, 788, 1012, 1019, 1023, 1068, 1071, 1078, 1129, 1161, 1162, 1185, 1214, 1299, 1327, 1328, 1336, 1338, 1345, 1346, 1347, 1348, 1350, 1351, 1355, 1357, 1359, 1362, 1369, 1370, 1371, 1372, 1376], "prf": [14, 602, 1371], "ang_tol": [14, 24, 25, 450, 473, 474, 602, 619, 620, 1101, 1124, 1125], "noise_h": [14, 602], "noise_v": [14, 602], "rconst_h": [14, 602], "rconst_v": [14, 602], "radconst_h": [14, 602], "radconst_v": [14, 602], "mfloss_h": [14, 602], "mfloss_v": [14, 602], "azi_min": [14, 24, 25, 572, 573, 602, 619, 620, 1310, 1311], "azi_max": [14, 24, 25, 572, 573, 602, 619, 620, 1310, 1311], "ele_min": [14, 24, 25, 572, 573, 602, 619, 620, 1310, 1311], "ele_max": [14, 24, 25, 572, 573, 602, 619, 620, 1310, 1311], "rng_min": [14, 24, 25, 501, 572, 573, 602, 619, 620, 1152, 1310, 1311], "rng_max": [14, 24, 25, 501, 572, 573, 602, 619, 620, 1152, 1310, 1311], "rad4alp": [14, 602, 1320], "iq": [14, 430, 432, 439, 441, 443, 445, 449, 457, 459, 463, 471, 472, 477, 602, 1081, 1083, 1090, 1092, 1094, 1096, 1100, 1108, 1110, 1114, 1122, 1123, 1128, 1362], "refer": [14, 18, 24, 25, 30, 34, 46, 60, 62, 89, 91, 118, 122, 125, 127, 128, 130, 131, 132, 135, 136, 137, 138, 139, 143, 146, 193, 218, 260, 284, 293, 321, 330, 358, 372, 373, 374, 428, 432, 433, 437, 442, 446, 447, 450, 451, 452, 454, 460, 461, 466, 473, 474, 476, 478, 479, 480, 482, 484, 495, 497, 500, 504, 507, 508, 509, 511, 513, 514, 516, 518, 519, 541, 542, 553, 568, 602, 604, 608, 619, 620, 626, 631, 646, 660, 662, 689, 691, 718, 722, 725, 756, 757, 758, 759, 760, 762, 765, 766, 767, 768, 769, 772, 773, 777, 782, 783, 784, 786, 787, 788, 789, 793, 796, 843, 868, 910, 934, 943, 971, 980, 1008, 1025, 1026, 1027, 1068, 1071, 1079, 1083, 1084, 1088, 1093, 1097, 1098, 1101, 1102, 1103, 1105, 1111, 1112, 1117, 1124, 1125, 1127, 1129, 1130, 1131, 1133, 1135, 1146, 1148, 1151, 1155, 1158, 1159, 1160, 1162, 1164, 1165, 1167, 1169, 1170, 1171, 1173, 1185, 1187, 1214, 1216, 1279, 1280, 1291, 1306, 1362, 1373, 1376], "rainbow": [14, 24, 25, 26, 602, 619, 620, 621], "byte": [14, 16, 26, 380, 408, 602, 606, 621, 1012, 1033, 1320, 1370], "numpi": [14, 16, 26, 62, 91, 157, 171, 565, 596, 597, 602, 606, 613, 614, 621, 662, 691, 734, 748, 806, 820, 1187, 1216, 1303, 1320, 1322, 1331, 1332, 1336, 1339, 1344, 1347, 1348, 1350, 1355, 1357, 1358, 1359, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1378], "e": [14, 16, 26, 31, 132, 134, 136, 137, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 364, 380, 421, 435, 474, 478, 479, 495, 507, 511, 513, 516, 526, 527, 553, 555, 602, 606, 621, 627, 769, 775, 782, 783, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1012, 1017, 1033, 1048, 1058, 1086, 1125, 1129, 1130, 1146, 1158, 1162, 1164, 1167, 1264, 1265, 1291, 1293, 1327, 1339, 1357, 1371, 1375, 1376], "g": [14, 16, 26, 31, 134, 380, 473, 495, 497, 507, 509, 519, 602, 606, 621, 627, 775, 1012, 1033, 1068, 1071, 1124, 1146, 1148, 1158, 1160, 1171], "go": [14, 16, 26, 135, 136, 437, 464, 484, 485, 486, 488, 489, 504, 513, 526, 527, 555, 572, 573, 602, 606, 621, 777, 782, 787, 788, 789, 1088, 1115, 1135, 1136, 1137, 1139, 1140, 1155, 1164, 1264, 1265, 1293, 1310, 1311, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1365], "float6432": [14, 602], "scan": [14, 18, 30, 31, 60, 89, 130, 131, 132, 139, 187, 203, 204, 206, 217, 254, 270, 271, 273, 283, 287, 303, 304, 306, 320, 324, 340, 341, 343, 357, 372, 428, 482, 511, 513, 540, 544, 558, 563, 570, 576, 602, 604, 608, 626, 627, 660, 689, 767, 768, 769, 770, 773, 786, 837, 853, 854, 856, 867, 904, 920, 921, 923, 933, 937, 953, 954, 956, 970, 974, 990, 991, 993, 1007, 1025, 1069, 1079, 1133, 1162, 1164, 1185, 1214, 1246, 1247, 1278, 1282, 1296, 1301, 1308, 1314, 1320, 1328, 1331, 1341, 1342, 1352, 1363, 1372], "toler": [14, 24, 25, 442, 450, 473, 474, 476, 491, 492, 526, 533, 534, 551, 555, 602, 619, 620, 1061, 1062, 1064, 1093, 1101, 1124, 1125, 1127, 1142, 1143, 1264, 1271, 1272, 1289, 1293], "angl": [14, 24, 25, 60, 66, 67, 89, 95, 96, 118, 119, 120, 138, 139, 143, 144, 145, 146, 187, 204, 216, 254, 271, 287, 304, 324, 341, 425, 450, 473, 474, 494, 497, 501, 509, 511, 513, 514, 521, 522, 523, 524, 528, 533, 534, 540, 544, 545, 551, 555, 563, 566, 567, 576, 597, 602, 619, 620, 660, 666, 667, 689, 695, 696, 718, 719, 720, 765, 766, 778, 779, 780, 784, 786, 793, 794, 795, 796, 837, 854, 866, 904, 921, 937, 954, 974, 991, 1076, 1101, 1124, 1125, 1145, 1148, 1152, 1160, 1162, 1164, 1165, 1185, 1191, 1192, 1214, 1220, 1221, 1259, 1260, 1261, 1262, 1266, 1271, 1272, 1278, 1282, 1283, 1289, 1293, 1301, 1304, 1305, 1314, 1320, 1350, 1352, 1359, 1364, 1373], "distanc": [14, 24, 25, 46, 54, 72, 101, 118, 119, 120, 204, 215, 271, 282, 304, 319, 341, 356, 442, 447, 473, 482, 502, 504, 509, 511, 512, 513, 527, 533, 534, 542, 544, 545, 546, 571, 602, 619, 620, 646, 654, 672, 701, 718, 719, 720, 854, 865, 921, 932, 954, 969, 991, 1006, 1061, 1062, 1065, 1066, 1067, 1069, 1070, 1072, 1073, 1074, 1093, 1098, 1124, 1133, 1153, 1155, 1160, 1162, 1163, 1164, 1173, 1181, 1197, 1226, 1265, 1271, 1272, 1280, 1282, 1283, 1284, 1309, 1331, 1340, 1345, 1346, 1347, 1371], "psr": [14, 24, 25, 554, 568, 602, 615, 616, 617, 619, 620, 780, 1292, 1306], "estim": [14, 133, 181, 185, 206, 273, 306, 343, 434, 446, 447, 449, 451, 452, 454, 466, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497, 507, 508, 509, 512, 514, 541, 542, 602, 758, 771, 772, 773, 774, 776, 778, 779, 787, 788, 789, 797, 830, 834, 856, 923, 956, 993, 1069, 1085, 1097, 1098, 1100, 1102, 1103, 1105, 1117, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1158, 1159, 1160, 1163, 1165, 1279, 1280, 1357, 1371], "v": [14, 26, 56, 57, 59, 417, 418, 421, 439, 445, 471, 472, 477, 478, 494, 511, 518, 519, 602, 621, 656, 657, 659, 778, 779, 780, 1044, 1045, 1048, 1055, 1056, 1058, 1090, 1096, 1122, 1123, 1128, 1129, 1145, 1162, 1170, 1171, 1347, 1348, 1359, 1376], "nois": [14, 24, 25, 184, 426, 432, 441, 446, 447, 448, 449, 451, 452, 457, 458, 459, 462, 465, 466, 468, 469, 470, 477, 481, 541, 542, 547, 559, 602, 619, 620, 762, 774, 778, 779, 780, 833, 1077, 1083, 1092, 1097, 1098, 1099, 1100, 1102, 1103, 1108, 1109, 1110, 1113, 1116, 1117, 1119, 1120, 1121, 1128, 1132, 1279, 1280, 1285, 1297, 1366], "power": [14, 24, 25, 136, 138, 146, 183, 441, 446, 448, 451, 452, 454, 457, 458, 460, 461, 465, 466, 468, 469, 481, 484, 485, 486, 487, 488, 489, 497, 542, 547, 602, 619, 620, 756, 758, 778, 779, 780, 781, 782, 784, 796, 797, 832, 1012, 1092, 1097, 1099, 1102, 1103, 1105, 1108, 1109, 1111, 1112, 1116, 1117, 1119, 1120, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1148, 1280, 1285], "adu": [14, 446, 448, 449, 464, 465, 466, 467, 468, 469, 470, 602, 1097, 1099, 1100, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "dynam": [14, 131, 602, 768], "factor": [14, 118, 119, 120, 127, 136, 137, 382, 428, 433, 475, 481, 484, 485, 486, 487, 488, 489, 497, 513, 515, 525, 602, 637, 718, 719, 720, 759, 782, 783, 1035, 1079, 1084, 1126, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1148, 1164, 1166, 1263, 1338, 1346, 1352, 1368], "convers": [14, 30, 31, 450, 473, 478, 525, 602, 626, 627, 1101, 1124, 1129, 1263, 1370], "dbadu": [14, 446, 466, 468, 602, 1097, 1117, 1119], "dbm": [14, 138, 146, 446, 451, 452, 454, 461, 466, 468, 602, 778, 779, 780, 784, 796, 797, 1097, 1102, 1103, 1105, 1112, 1117, 1119], "dbz": [14, 26, 136, 137, 423, 433, 437, 447, 462, 478, 479, 495, 504, 511, 516, 602, 621, 756, 762, 782, 783, 1084, 1088, 1098, 1113, 1129, 1130, 1146, 1155, 1162, 1167, 1327, 1331, 1338, 1345, 1346, 1352, 1357, 1370, 1372, 1373], "constant": [14, 372, 453, 454, 461, 475, 502, 507, 602, 766, 1012, 1025, 1065, 1072, 1073, 1074, 1104, 1105, 1112, 1126, 1153, 1158, 1328, 1371], "match": [14, 130, 134, 187, 254, 287, 324, 376, 454, 461, 493, 518, 519, 602, 767, 770, 775, 837, 904, 937, 974, 1029, 1061, 1105, 1112, 1144, 1170, 1171, 1320, 1331, 1338, 1371], "filter": [14, 63, 92, 130, 131, 132, 134, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 435, 454, 461, 505, 506, 507, 508, 509, 602, 663, 692, 728, 732, 734, 741, 748, 753, 765, 766, 767, 768, 769, 770, 773, 774, 775, 781, 787, 788, 789, 854, 861, 865, 866, 867, 868, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1061, 1072, 1073, 1074, 1086, 1105, 1112, 1156, 1157, 1158, 1159, 1160, 1188, 1217, 1323, 1331, 1332, 1333, 1337, 1356, 1363, 1366, 1369, 1370, 1371], "loss": [14, 139, 454, 461, 497, 602, 786, 1105, 1112, 1148], "receiv": [14, 138, 139, 143, 146, 454, 461, 602, 784, 786, 793, 796, 1069, 1070, 1105, 1112, 1366], "db": [14, 135, 138, 139, 146, 181, 185, 425, 426, 454, 461, 497, 511, 547, 602, 777, 778, 779, 784, 786, 796, 797, 830, 834, 1076, 1077, 1105, 1112, 1148, 1162, 1285, 1347, 1372, 1373], "minimum": [14, 24, 25, 129, 133, 135, 136, 137, 140, 141, 142, 179, 182, 183, 184, 185, 186, 204, 206, 211, 214, 215, 216, 217, 218, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 437, 442, 446, 450, 452, 460, 466, 473, 474, 478, 479, 483, 493, 495, 497, 501, 505, 506, 511, 513, 528, 530, 541, 542, 555, 602, 619, 620, 756, 763, 765, 766, 771, 772, 773, 774, 777, 778, 779, 780, 781, 782, 783, 787, 788, 789, 790, 791, 792, 828, 831, 832, 833, 834, 835, 854, 856, 861, 864, 865, 866, 867, 868, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 965, 968, 969, 970, 971, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1012, 1033, 1068, 1071, 1074, 1088, 1093, 1097, 1101, 1103, 1111, 1117, 1124, 1125, 1129, 1130, 1134, 1144, 1146, 1148, 1152, 1156, 1157, 1162, 1164, 1245, 1249, 1266, 1268, 1279, 1280, 1293, 1357, 1368], "maximum": [14, 16, 24, 25, 89, 127, 128, 129, 130, 131, 133, 135, 136, 137, 141, 142, 179, 181, 182, 183, 184, 204, 206, 211, 214, 215, 216, 217, 218, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 428, 433, 437, 442, 450, 460, 473, 474, 476, 479, 480, 482, 485, 488, 489, 493, 495, 501, 507, 511, 512, 513, 525, 540, 542, 547, 558, 559, 560, 602, 606, 619, 620, 689, 759, 760, 763, 765, 766, 767, 768, 771, 772, 773, 774, 777, 778, 779, 780, 781, 782, 783, 787, 788, 789, 791, 792, 828, 830, 831, 832, 833, 854, 856, 861, 864, 865, 866, 867, 868, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 965, 968, 969, 970, 971, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1011, 1012, 1033, 1068, 1069, 1070, 1071, 1074, 1079, 1084, 1088, 1093, 1101, 1111, 1124, 1125, 1127, 1130, 1131, 1133, 1136, 1139, 1140, 1144, 1146, 1152, 1158, 1162, 1163, 1164, 1214, 1245, 1249, 1263, 1278, 1280, 1285, 1296, 1297, 1298, 1356, 1357, 1373], "keep": [14, 24, 25, 35, 130, 180, 376, 480, 572, 573, 596, 602, 619, 620, 633, 767, 774, 829, 1029, 1131, 1310, 1311, 1331, 1357, 1376, 1378], "k": [15, 125, 208, 209, 210, 212, 213, 214, 234, 275, 276, 277, 279, 280, 281, 308, 309, 310, 316, 317, 318, 345, 346, 347, 353, 354, 355, 413, 417, 418, 420, 421, 437, 478, 497, 507, 518, 603, 725, 858, 859, 860, 862, 863, 864, 884, 925, 926, 927, 929, 930, 931, 958, 959, 960, 966, 967, 968, 995, 996, 997, 1003, 1004, 1005, 1040, 1044, 1045, 1047, 1048, 1052, 1055, 1056, 1057, 1058, 1088, 1129, 1148, 1158, 1170, 1337, 1344, 1347, 1348, 1376], "band": [15, 21, 380, 437, 442, 477, 484, 499, 507, 508, 509, 516, 517, 603, 611, 756, 758, 762, 1033, 1088, 1093, 1128, 1135, 1150, 1158, 1159, 1160, 1167, 1168, 1363, 1371], "arm": [15, 33, 55, 364, 365, 366, 378, 379, 496, 603, 629, 655, 1017, 1018, 1019, 1031, 1032, 1074, 1147, 1182, 1245, 1251, 1320, 1333, 1348, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1375, 1378], "zenith": [15, 603], "kazr": [15, 603], "ingest": [15, 603, 1362, 1363], "rmax": [16, 179, 460, 555, 606, 828, 1111, 1293], "noxp": [17, 607], "iphex": [17, 607], "gain": [18, 19, 20, 30, 31, 33, 138, 146, 454, 497, 608, 609, 610, 626, 627, 629, 784, 796, 1105, 1148], "nodata": [18, 19, 20, 30, 31, 608, 609, 610, 626, 627, 1320], "nan": [18, 19, 20, 130, 159, 178, 179, 183, 509, 596, 597, 608, 609, 610, 613, 614, 736, 755, 767, 781, 808, 827, 828, 832, 1160, 1355, 1370, 1371], "undetect": [18, 19, 20, 30, 31, 608, 609, 610, 626, 627, 1320], "use_file_convers": [18, 19, 20, 608, 609, 610], "time_ref": [18, 30, 604, 608, 626], "convert": [18, 19, 20, 23, 30, 31, 54, 126, 138, 479, 495, 558, 576, 583, 608, 609, 610, 618, 626, 627, 654, 726, 784, 1130, 1146, 1181, 1296, 1314, 1357, 1371], "what": [18, 19, 20, 30, 130, 604, 608, 609, 610, 626, 767, 799, 1074, 1327, 1336, 1364, 1366, 1369, 1376, 1378], "user": [18, 19, 20, 26, 45, 63, 92, 352, 380, 465, 469, 478, 575, 608, 609, 610, 621, 644, 663, 692, 757, 758, 770, 1002, 1033, 1116, 1120, 1129, 1188, 1217, 1313, 1328, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1378], "physic": [18, 19, 20, 30, 31, 33, 428, 479, 495, 596, 597, 608, 609, 610, 613, 614, 626, 627, 629, 785, 1061, 1079, 1130, 1146, 1357, 1370, 1372], "otherwis": [18, 19, 20, 130, 389, 410, 417, 437, 442, 448, 450, 458, 460, 464, 465, 469, 473, 474, 476, 483, 485, 488, 489, 494, 497, 502, 520, 532, 565, 596, 597, 608, 609, 610, 613, 614, 767, 787, 788, 1044, 1055, 1088, 1093, 1099, 1101, 1109, 1111, 1115, 1116, 1120, 1124, 1125, 1127, 1134, 1136, 1139, 1140, 1145, 1148, 1153, 1270, 1303], "pass": [18, 19, 20, 121, 123, 124, 130, 131, 132, 203, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 270, 271, 278, 282, 283, 284, 303, 304, 311, 312, 313, 314, 315, 316, 319, 320, 321, 340, 341, 348, 349, 350, 351, 352, 353, 356, 357, 358, 362, 363, 372, 374, 493, 507, 608, 609, 610, 721, 723, 724, 767, 768, 769, 853, 854, 861, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 896, 899, 901, 903, 920, 921, 928, 932, 933, 934, 953, 954, 961, 962, 963, 964, 965, 966, 969, 970, 971, 990, 991, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1012, 1015, 1016, 1025, 1027, 1068, 1071, 1074, 1144, 1158, 1327, 1328, 1365, 1368, 1371], "mid": [18, 30, 604, 608, 626], "expect": [18, 30, 218, 284, 321, 358, 509, 604, 608, 626, 868, 934, 971, 1008, 1160, 1372, 1376], "starttim": [18, 30, 604, 608, 626], "middl": [18, 25, 30, 604, 608, 620, 626], "endtim": [18, 30, 604, 608, 626], "include_dataset": [19, 609], "exclude_dataset": [19, 609], "dataset": [19, 30, 31, 235, 315, 352, 372, 374, 449, 496, 535, 538, 546, 609, 626, 627, 885, 965, 1002, 1012, 1025, 1027, 1069, 1070, 1100, 1147, 1273, 1276, 1284, 1320, 1327, 1355, 1358, 1359, 1362, 1364], "given": [19, 37, 40, 41, 42, 44, 46, 48, 60, 66, 67, 68, 69, 72, 73, 74, 75, 76, 89, 95, 96, 97, 98, 101, 102, 103, 104, 105, 130, 139, 143, 144, 146, 153, 155, 156, 157, 158, 160, 162, 163, 167, 169, 170, 171, 172, 174, 175, 177, 179, 182, 183, 204, 209, 210, 230, 231, 232, 236, 237, 238, 239, 248, 250, 251, 252, 253, 271, 276, 277, 304, 309, 310, 311, 312, 341, 346, 347, 348, 349, 417, 437, 455, 460, 465, 469, 494, 497, 504, 510, 520, 540, 545, 546, 550, 556, 557, 570, 609, 635, 639, 640, 641, 643, 646, 648, 660, 666, 667, 668, 669, 672, 673, 674, 675, 676, 689, 695, 696, 697, 698, 701, 702, 703, 704, 705, 730, 732, 733, 734, 735, 737, 739, 740, 744, 746, 747, 748, 749, 751, 752, 754, 765, 766, 767, 781, 786, 793, 794, 796, 802, 804, 805, 806, 807, 809, 811, 812, 816, 818, 819, 820, 821, 823, 824, 826, 828, 831, 832, 854, 859, 860, 880, 881, 882, 886, 887, 888, 889, 898, 900, 901, 902, 903, 921, 926, 927, 954, 959, 960, 961, 962, 991, 996, 997, 998, 999, 1044, 1055, 1061, 1069, 1070, 1071, 1072, 1073, 1074, 1088, 1106, 1111, 1116, 1120, 1145, 1148, 1155, 1161, 1173, 1175, 1185, 1191, 1192, 1193, 1194, 1197, 1198, 1199, 1200, 1201, 1214, 1220, 1221, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1243, 1278, 1283, 1284, 1288, 1294, 1295, 1308, 1355, 1357, 1362, 1371], "dataset1": [19, 609], "dataset2": [19, 609], "vertic": [20, 60, 89, 128, 130, 204, 205, 206, 211, 215, 216, 217, 218, 226, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 319, 320, 321, 341, 342, 343, 351, 356, 357, 358, 380, 433, 439, 440, 441, 442, 445, 450, 458, 459, 460, 471, 472, 473, 476, 477, 480, 491, 492, 493, 494, 500, 502, 504, 513, 514, 558, 576, 610, 660, 689, 760, 762, 767, 773, 854, 855, 856, 861, 865, 866, 867, 868, 876, 879, 881, 883, 885, 887, 889, 897, 899, 901, 903, 921, 922, 923, 928, 932, 933, 934, 954, 955, 956, 964, 969, 970, 971, 991, 992, 993, 1001, 1006, 1007, 1008, 1033, 1069, 1070, 1084, 1090, 1091, 1092, 1093, 1096, 1101, 1109, 1110, 1111, 1122, 1123, 1124, 1127, 1128, 1131, 1142, 1143, 1144, 1145, 1151, 1153, 1155, 1164, 1165, 1185, 1214, 1296, 1314, 1348, 1358, 1359, 1362, 1371, 1372], "profil": [20, 31, 56, 127, 128, 130, 364, 365, 433, 442, 450, 460, 473, 476, 493, 496, 508, 509, 510, 513, 514, 532, 570, 610, 627, 656, 759, 760, 765, 766, 767, 1017, 1018, 1084, 1093, 1101, 1111, 1124, 1127, 1144, 1147, 1159, 1160, 1161, 1164, 1165, 1270, 1308, 1323, 1325, 1354, 1360, 1362, 1370, 1371, 1374, 1376], "those": [20, 63, 70, 92, 99, 131, 132, 151, 376, 451, 561, 582, 610, 663, 670, 692, 699, 728, 768, 769, 800, 1029, 1072, 1073, 1074, 1102, 1188, 1195, 1217, 1224, 1299, 1319, 1378], "vol2bird": [20, 610], "pattern": [21, 513, 611, 765, 766, 1164, 1249, 1347], "25": [22, 478, 612, 787, 788, 1069, 1070, 1129, 1327, 1331, 1347, 1348, 1351, 1355, 1364, 1369, 1370, 1371, 1372], "889375": [22, 612], "418": [22, 612], "4794775": [22, 612], "243": [22, 612], "png": [22, 189, 225, 241, 256, 289, 326, 612, 839, 875, 891, 906, 939, 976, 1012], "web": [22, 362, 372, 380, 612, 1015, 1025, 1033, 1327, 1328], "mercat": [22, 246, 612, 896], "radx_dir": [23, 618], "first": [23, 27, 33, 60, 73, 89, 102, 130, 132, 133, 135, 137, 364, 365, 375, 378, 454, 479, 495, 507, 508, 509, 516, 535, 537, 540, 566, 567, 618, 623, 629, 660, 673, 689, 702, 767, 769, 771, 777, 783, 1017, 1018, 1028, 1031, 1061, 1074, 1105, 1130, 1146, 1158, 1159, 1160, 1167, 1185, 1198, 1214, 1227, 1273, 1275, 1278, 1304, 1305, 1320, 1323, 1327, 1328, 1341, 1350, 1355, 1357, 1366, 1368, 1369, 1370, 1371, 1373, 1376], "radxconvert": [23, 618], "radx": [23, 618], "instal": [23, 121, 123, 124, 134, 380, 582, 618, 721, 723, 724, 770, 775, 1033, 1370, 1377, 1378], "filenames_psr": [24, 25, 619, 620], "undo_txcorr": [24, 25, 619, 620], "cpi": [24, 25, 615, 619, 620], "mean": [24, 29, 118, 140, 430, 432, 442, 445, 449, 450, 460, 473, 481, 518, 521, 522, 528, 530, 531, 541, 542, 547, 556, 566, 567, 578, 619, 625, 718, 790, 1071, 1081, 1083, 1093, 1096, 1100, 1101, 1111, 1124, 1132, 1170, 1249, 1259, 1260, 1266, 1268, 1269, 1279, 1280, 1285, 1294, 1304, 1305, 1316, 1327, 1328, 1369, 1370, 1371, 1373, 1376], "5": [24, 25, 26, 46, 130, 134, 136, 183, 204, 211, 214, 215, 216, 217, 218, 234, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 379, 437, 478, 479, 480, 483, 485, 491, 492, 495, 500, 504, 511, 513, 515, 540, 558, 619, 620, 621, 646, 756, 758, 765, 766, 767, 770, 775, 778, 779, 780, 781, 782, 787, 788, 789, 797, 832, 854, 861, 864, 865, 866, 867, 868, 884, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1032, 1088, 1129, 1130, 1131, 1134, 1136, 1142, 1143, 1146, 1151, 1155, 1162, 1164, 1166, 1173, 1249, 1278, 1296, 1319, 1322, 1323, 1328, 1332, 1336, 1339, 1341, 1342, 1343, 1346, 1347, 1348, 1349, 1350, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1366, 1369, 1370, 1371, 1372, 1373, 1376], "correct": [24, 25, 69, 72, 98, 101, 151, 179, 180, 181, 182, 183, 184, 185, 186, 370, 435, 496, 497, 507, 550, 619, 620, 669, 672, 698, 701, 800, 828, 829, 830, 831, 832, 833, 834, 835, 1023, 1086, 1147, 1148, 1158, 1194, 1197, 1223, 1226, 1251, 1288, 1320, 1323, 1324, 1328, 1338, 1358, 1362, 1366, 1371, 1374, 1376], "transmit": [24, 25, 454, 619, 620, 1105, 1366], "remov": [24, 25, 46, 60, 71, 72, 89, 100, 101, 130, 135, 179, 180, 181, 182, 183, 184, 185, 186, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 386, 411, 417, 418, 449, 479, 493, 495, 542, 619, 620, 646, 660, 671, 672, 689, 700, 701, 756, 757, 758, 767, 772, 773, 777, 781, 787, 788, 789, 828, 829, 830, 831, 832, 833, 834, 835, 854, 861, 865, 866, 867, 868, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1038, 1044, 1045, 1051, 1055, 1056, 1100, 1130, 1144, 1146, 1173, 1185, 1196, 1197, 1214, 1225, 1226, 1280, 1322, 1332, 1338, 1347, 1357, 1366, 1369, 1376], "signal": [24, 25, 26, 183, 184, 426, 430, 432, 435, 441, 443, 446, 448, 449, 451, 452, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 481, 497, 541, 542, 547, 619, 620, 621, 762, 774, 778, 779, 780, 781, 797, 832, 833, 1077, 1081, 1083, 1086, 1092, 1094, 1097, 1099, 1100, 1102, 1103, 1108, 1109, 1110, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1132, 1148, 1279, 1280, 1285], "low_prf": [24, 25, 619, 620], "intermediate_prf": [24, 25, 619, 620], "high_prf": [24, 25, 619, 620], "within": [24, 45, 62, 63, 91, 92, 129, 130, 131, 132, 133, 137, 141, 142, 151, 179, 218, 284, 321, 358, 427, 442, 450, 460, 473, 476, 480, 504, 505, 506, 511, 533, 534, 543, 544, 546, 556, 557, 619, 644, 662, 663, 691, 692, 728, 763, 767, 768, 769, 770, 771, 772, 773, 774, 783, 787, 788, 789, 791, 792, 800, 828, 868, 934, 971, 1008, 1068, 1071, 1072, 1073, 1074, 1078, 1093, 1101, 1111, 1124, 1127, 1131, 1155, 1156, 1157, 1162, 1187, 1188, 1216, 1217, 1258, 1271, 1272, 1281, 1282, 1284, 1294, 1295, 1319, 1327, 1328, 1338, 1339, 1362, 1366, 1368, 1372, 1376, 1378], "step": [24, 218, 284, 321, 358, 380, 442, 450, 452, 460, 473, 474, 476, 511, 513, 542, 549, 562, 619, 765, 766, 779, 868, 934, 971, 1008, 1033, 1093, 1101, 1103, 1111, 1124, 1125, 1127, 1162, 1164, 1280, 1287, 1300, 1327, 1347, 1348, 1357, 1378], "taken": [24, 118, 126, 136, 137, 204, 271, 304, 341, 533, 534, 541, 556, 557, 619, 718, 726, 782, 783, 854, 921, 954, 991, 1251, 1271, 1272, 1279, 1294, 1295, 1340], "fold": [25, 130, 131, 481, 620, 767, 768, 1132, 1327, 1371], "positive_awai": [25, 620], "complex": [25, 34, 446, 448, 458, 464, 465, 466, 467, 468, 469, 470, 617, 620, 631, 1097, 1099, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1169], "spectra": [25, 28, 29, 33, 89, 429, 431, 432, 438, 440, 443, 446, 448, 451, 456, 458, 463, 464, 465, 466, 467, 468, 469, 470, 481, 541, 554, 564, 573, 617, 620, 624, 625, 629, 689, 1080, 1082, 1083, 1089, 1091, 1094, 1097, 1099, 1102, 1107, 1109, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1132, 1214, 1248, 1255, 1279, 1292, 1302, 1311], "so": [25, 131, 204, 215, 271, 282, 304, 319, 341, 356, 376, 425, 554, 620, 768, 776, 854, 865, 921, 932, 954, 969, 991, 1006, 1029, 1074, 1076, 1292, 1320, 1327, 1328, 1357, 1370, 1371, 1372, 1376, 1378], "doppler": [25, 89, 118, 130, 131, 132, 179, 429, 430, 431, 432, 435, 446, 449, 451, 466, 481, 493, 518, 541, 542, 620, 689, 718, 767, 768, 769, 828, 1080, 1081, 1082, 1083, 1086, 1097, 1100, 1102, 1117, 1132, 1144, 1170, 1214, 1279, 1280, 1320, 1321, 1324, 1325, 1340, 1350, 1362, 1363, 1373, 1374, 1376], "revers": [25, 204, 215, 271, 282, 304, 319, 341, 356, 376, 507, 620, 854, 865, 921, 932, 954, 969, 991, 1006, 1029, 1158], "veloc": [25, 26, 40, 73, 89, 102, 130, 131, 132, 179, 427, 429, 430, 481, 491, 492, 493, 494, 502, 518, 519, 525, 570, 620, 621, 639, 673, 689, 702, 767, 768, 769, 828, 1078, 1080, 1081, 1132, 1142, 1143, 1144, 1145, 1153, 1170, 1171, 1198, 1214, 1227, 1263, 1308, 1320, 1321, 1324, 1325, 1327, 1336, 1340, 1348, 1350, 1362, 1363, 1369, 1370, 1373, 1374, 1376], "awai": [25, 620, 1371], "routin": [26, 30, 31, 33, 378, 582, 621, 626, 627, 629, 799, 1031, 1072, 1073, 1320, 1362, 1370, 1372], "rainbow5": [26, 621], "version": [26, 46, 150, 504, 505, 506, 518, 581, 621, 646, 766, 1063, 1155, 1156, 1157, 1170, 1173, 1258, 1320, 1362, 1370, 1373, 1375, 1376, 1378], "22": [26, 138, 143, 146, 621, 773, 784, 793, 796, 1327, 1329, 1336, 1355, 1374], "3": [26, 60, 89, 118, 119, 127, 128, 130, 131, 135, 139, 146, 179, 181, 182, 185, 216, 370, 374, 380, 434, 475, 478, 479, 493, 495, 511, 513, 542, 549, 562, 621, 660, 689, 718, 719, 759, 760, 767, 768, 777, 786, 796, 828, 830, 831, 834, 866, 1023, 1027, 1033, 1068, 1069, 1070, 1071, 1074, 1085, 1126, 1129, 1130, 1144, 1146, 1162, 1164, 1185, 1214, 1245, 1249, 1280, 1287, 1300, 1322, 1323, 1325, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1378], "34": [26, 495, 516, 621, 1146, 1167, 1357, 1360, 1372, 1374], "16": [26, 141, 478, 484, 505, 518, 621, 787, 791, 1129, 1135, 1156, 1170, 1322, 1323, 1331, 1343, 1349, 1356, 1366, 1370, 1372, 1373, 1376], "35": [26, 132, 136, 137, 437, 621, 769, 782, 783, 1088, 1336, 1345, 1347, 1348, 1369], "sinc": [26, 428, 494, 507, 520, 621, 1079, 1145, 1158, 1357, 1365, 1368, 1371, 1372, 1373], "evolv": [26, 621], "constantli": [26, 621], "guaranti": [26, 621], "work": [26, 122, 125, 233, 234, 287, 315, 324, 352, 372, 374, 481, 516, 621, 722, 725, 883, 884, 937, 965, 974, 1002, 1025, 1027, 1132, 1167, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1378], "necessari": [26, 621], "adapt": [26, 118, 138, 139, 143, 146, 621, 718, 784, 786, 793, 796, 1320, 1378], "code": [26, 45, 130, 502, 518, 621, 644, 767, 1153, 1170, 1320, 1322, 1323, 1325, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1372, 1375, 1378], "accord": [26, 376, 425, 437, 444, 451, 452, 484, 485, 486, 488, 489, 549, 562, 621, 762, 764, 1029, 1074, 1076, 1088, 1095, 1102, 1103, 1135, 1136, 1137, 1139, 1140, 1287, 1300], "its": [26, 231, 507, 565, 621, 785, 797, 881, 1158, 1303, 1362, 1371, 1375, 1376, 1378], "own": [26, 582, 621, 1336, 1362, 1372, 1375], "rais": [26, 46, 47, 61, 62, 64, 73, 90, 91, 93, 102, 149, 363, 375, 389, 417, 418, 621, 646, 647, 661, 662, 664, 673, 690, 691, 693, 702, 1016, 1028, 1044, 1045, 1055, 1056, 1173, 1174, 1186, 1187, 1189, 1198, 1215, 1216, 1218, 1227], "an": [26, 30, 31, 40, 44, 45, 46, 54, 60, 62, 63, 66, 67, 73, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 96, 102, 111, 112, 113, 114, 115, 116, 117, 128, 130, 131, 132, 136, 137, 147, 150, 159, 179, 181, 182, 183, 184, 185, 186, 187, 209, 276, 309, 346, 352, 376, 379, 380, 422, 443, 450, 451, 452, 473, 483, 496, 525, 534, 538, 539, 556, 557, 561, 562, 574, 576, 583, 596, 597, 613, 614, 621, 626, 627, 639, 643, 644, 646, 654, 660, 662, 663, 666, 667, 673, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 695, 696, 702, 711, 712, 713, 714, 715, 716, 717, 736, 760, 767, 768, 769, 770, 781, 782, 783, 808, 828, 830, 831, 832, 833, 834, 835, 837, 859, 926, 959, 996, 1002, 1012, 1029, 1032, 1033, 1049, 1059, 1061, 1068, 1069, 1071, 1072, 1073, 1074, 1094, 1101, 1102, 1103, 1124, 1134, 1147, 1173, 1181, 1185, 1187, 1188, 1191, 1192, 1198, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1220, 1221, 1227, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1263, 1272, 1276, 1277, 1294, 1295, 1299, 1300, 1312, 1314, 1320, 1325, 1328, 1331, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1349, 1350, 1351, 1352, 1353, 1355, 1357, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377], "issu": [26, 45, 150, 287, 324, 376, 379, 621, 644, 937, 974, 1029, 1032, 1320, 1325, 1326, 1329, 1362, 1374, 1375, 1376, 1378], "upstream": [26, 621, 1376], "reflect": [26, 62, 91, 127, 128, 129, 133, 136, 137, 141, 142, 151, 179, 182, 183, 206, 273, 306, 343, 426, 428, 429, 431, 433, 434, 438, 440, 441, 447, 453, 454, 455, 456, 457, 458, 461, 462, 464, 465, 469, 475, 478, 479, 480, 482, 485, 487, 488, 489, 490, 495, 497, 504, 505, 507, 511, 513, 515, 516, 553, 621, 662, 691, 728, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 770, 771, 772, 773, 774, 778, 779, 781, 782, 783, 787, 788, 789, 791, 792, 800, 828, 831, 832, 856, 923, 956, 993, 1011, 1061, 1074, 1077, 1079, 1080, 1082, 1084, 1085, 1089, 1091, 1092, 1098, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1115, 1116, 1120, 1126, 1129, 1130, 1131, 1133, 1136, 1138, 1139, 1140, 1141, 1146, 1148, 1155, 1156, 1158, 1162, 1164, 1166, 1167, 1187, 1216, 1254, 1256, 1257, 1291, 1321, 1323, 1324, 1325, 1327, 1328, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1340, 1343, 1346, 1349, 1350, 1352, 1353, 1354, 1355, 1357, 1360, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374], "dbuz": [26, 621], "dbzv": [26, 621], "dbuzv": [26, 621], "vu": [26, 621], "vv": [26, 621], "vvu": [26, 621], "spectrum": [26, 29, 431, 432, 481, 541, 542, 621, 625, 1082, 1083, 1132, 1279, 1280, 1320, 1373], "width": [26, 127, 138, 139, 146, 232, 234, 248, 315, 352, 431, 432, 433, 453, 621, 759, 784, 785, 786, 796, 797, 882, 884, 898, 965, 1002, 1012, 1074, 1082, 1083, 1084, 1104, 1373], "w": [26, 77, 106, 132, 138, 143, 146, 437, 478, 482, 497, 504, 511, 513, 621, 677, 706, 769, 784, 793, 796, 1088, 1129, 1133, 1148, 1155, 1162, 1164, 1202, 1231, 1358, 1370, 1371, 1372], "wu": [26, 621, 1068, 1071, 1368], "wv": [26, 621], "wvu": [26, 621], "differenti": [26, 34, 129, 133, 136, 137, 141, 142, 179, 182, 438, 439, 440, 441, 445, 449, 464, 465, 480, 482, 486, 489, 504, 505, 506, 507, 508, 509, 511, 514, 621, 631, 756, 757, 758, 763, 771, 773, 774, 778, 779, 782, 783, 787, 788, 789, 791, 792, 828, 831, 1089, 1090, 1091, 1092, 1096, 1100, 1115, 1116, 1131, 1133, 1137, 1140, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1165, 1169, 1340, 1362, 1372], "zdr": [26, 182, 423, 436, 437, 455, 504, 621, 757, 758, 762, 773, 774, 778, 779, 787, 788, 789, 797, 831, 1087, 1088, 1106, 1155, 1370, 1372], "zdru": [26, 621], "co": [26, 118, 122, 125, 179, 479, 494, 495, 527, 621, 718, 722, 725, 772, 773, 774, 787, 788, 789, 828, 1130, 1145, 1146, 1265, 1357], "correl": [26, 179, 182, 183, 480, 482, 502, 504, 511, 513, 529, 531, 553, 621, 772, 773, 774, 781, 787, 788, 789, 828, 831, 832, 1131, 1133, 1153, 1155, 1162, 1164, 1267, 1269, 1291, 1339, 1340, 1356, 1357], "coeffici": [26, 136, 138, 146, 179, 437, 478, 480, 482, 483, 504, 511, 529, 531, 532, 553, 621, 756, 757, 758, 778, 779, 780, 782, 784, 796, 828, 1088, 1129, 1131, 1133, 1134, 1155, 1162, 1267, 1269, 1270, 1291, 1339, 1340, 1356], "rhohv": [26, 182, 183, 423, 433, 436, 437, 444, 448, 458, 459, 470, 504, 511, 513, 621, 762, 772, 773, 774, 781, 787, 788, 789, 831, 832, 1084, 1087, 1088, 1095, 1099, 1109, 1110, 1121, 1155, 1162, 1164, 1339, 1372, 1373], "rhohvu": [26, 621], "phase": [26, 34, 129, 132, 133, 136, 137, 141, 142, 182, 438, 439, 445, 449, 464, 467, 473, 480, 482, 486, 489, 502, 504, 505, 506, 507, 508, 509, 514, 621, 631, 756, 757, 758, 763, 769, 771, 773, 774, 782, 783, 787, 788, 789, 791, 792, 831, 1089, 1090, 1096, 1100, 1115, 1118, 1124, 1131, 1133, 1137, 1140, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1165, 1169, 1340, 1362, 1366, 1372], "phidp": [26, 129, 133, 136, 137, 141, 142, 182, 505, 506, 507, 621, 757, 758, 763, 771, 773, 774, 782, 783, 787, 788, 789, 791, 792, 831, 1156, 1157, 1158, 1362, 1372], "uphidp": [26, 621], "uphidpu": [26, 621], "kdp": [26, 136, 137, 423, 437, 486, 489, 504, 505, 506, 507, 508, 509, 621, 774, 782, 783, 787, 788, 789, 1088, 1137, 1140, 1155, 1156, 1157, 1158, 1159, 1160, 1358, 1362], "ukdp": [26, 621], "ukdpu": [26, 621], "qualiti": [26, 138, 139, 143, 146, 183, 508, 509, 621, 762, 781, 784, 786, 793, 796, 832, 1159, 1160, 1327], "sqi": [26, 621], "sqiu": [26, 621], "sqiv": [26, 621], "sqivu": [26, 621], "temperatur": [26, 135, 185, 480, 500, 504, 511, 513, 621, 757, 758, 765, 766, 772, 773, 774, 777, 787, 788, 789, 834, 1131, 1151, 1155, 1162, 1164, 1358, 1372], "temp": [26, 621, 1320, 1372], "bin": [26, 60, 89, 118, 119, 120, 133, 141, 142, 375, 442, 450, 460, 473, 476, 481, 501, 505, 506, 515, 540, 541, 547, 559, 621, 660, 689, 718, 719, 720, 758, 771, 772, 773, 774, 778, 791, 792, 1028, 1093, 1101, 1111, 1124, 1127, 1132, 1152, 1156, 1157, 1166, 1185, 1214, 1278, 1279, 1285, 1297, 1331, 1366, 1373], "respect": [26, 60, 89, 144, 145, 425, 479, 480, 482, 495, 504, 511, 512, 513, 515, 516, 621, 660, 689, 785, 794, 795, 797, 1076, 1130, 1131, 1133, 1146, 1155, 1162, 1163, 1164, 1166, 1167, 1185, 1214], "iso0": [26, 135, 181, 437, 480, 482, 500, 504, 511, 512, 513, 517, 621, 757, 765, 766, 772, 773, 777, 787, 788, 789, 830, 1088, 1131, 1133, 1151, 1155, 1162, 1163, 1164, 1168], "visibl": [26, 186, 497, 555, 621, 764, 835, 1148, 1293, 1362], "digit": [26, 218, 284, 321, 358, 497, 596, 597, 613, 614, 621, 868, 934, 971, 1008, 1148, 1320, 1370], "elev": [26, 31, 60, 67, 72, 83, 89, 96, 101, 112, 118, 119, 120, 138, 139, 143, 144, 145, 146, 179, 187, 204, 206, 211, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 254, 271, 273, 278, 282, 283, 284, 287, 304, 306, 314, 315, 319, 320, 321, 324, 341, 343, 351, 352, 356, 357, 358, 376, 425, 450, 473, 474, 494, 497, 501, 509, 511, 534, 540, 551, 555, 558, 563, 621, 627, 660, 667, 672, 683, 689, 696, 701, 712, 718, 719, 720, 765, 766, 773, 774, 776, 778, 779, 780, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 797, 828, 837, 854, 856, 861, 865, 866, 867, 868, 881, 887, 889, 899, 901, 903, 904, 921, 923, 928, 932, 933, 934, 937, 954, 956, 964, 965, 969, 970, 971, 974, 991, 993, 1001, 1002, 1006, 1007, 1008, 1029, 1069, 1076, 1101, 1124, 1125, 1145, 1148, 1152, 1160, 1162, 1185, 1192, 1197, 1208, 1214, 1221, 1226, 1237, 1272, 1278, 1289, 1293, 1296, 1301, 1320, 1331, 1356, 1364, 1370, 1371, 1372, 1373], "model": [26, 30, 31, 60, 89, 118, 119, 131, 218, 284, 321, 358, 373, 379, 478, 497, 511, 513, 532, 621, 626, 627, 660, 689, 718, 719, 765, 766, 768, 868, 934, 971, 1008, 1026, 1032, 1129, 1148, 1162, 1164, 1185, 1214, 1270, 1358, 1372], "dem": [26, 218, 284, 321, 358, 497, 621, 868, 934, 971, 1008, 1148, 1362], "vi": [26, 437, 504, 621, 1088, 1155, 1358, 1370, 1372], "introduc": [26, 377, 509, 511, 621, 1030, 1160, 1162], "swissbirdradar": [29, 625, 1320], "degre": [29, 48, 56, 70, 71, 99, 100, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136, 137, 144, 145, 185, 187, 204, 209, 210, 218, 230, 232, 236, 238, 246, 248, 250, 252, 254, 271, 276, 277, 284, 287, 304, 309, 310, 313, 315, 321, 324, 341, 346, 347, 350, 352, 358, 442, 453, 473, 511, 518, 522, 524, 533, 534, 544, 545, 546, 558, 567, 571, 625, 648, 656, 670, 671, 699, 700, 718, 719, 720, 721, 722, 723, 724, 725, 726, 776, 777, 782, 783, 794, 795, 834, 837, 854, 859, 860, 868, 880, 882, 886, 888, 896, 898, 900, 902, 904, 921, 926, 927, 934, 937, 954, 959, 960, 963, 965, 971, 974, 991, 996, 997, 1000, 1002, 1008, 1093, 1104, 1124, 1162, 1170, 1175, 1195, 1196, 1224, 1225, 1260, 1262, 1271, 1272, 1282, 1283, 1284, 1296, 1305, 1309, 1352, 1355, 1373, 1376], "abov": [29, 56, 57, 60, 62, 89, 91, 127, 128, 130, 134, 135, 136, 137, 141, 153, 167, 179, 181, 182, 183, 185, 209, 210, 276, 277, 309, 310, 346, 347, 425, 426, 437, 478, 479, 483, 495, 497, 505, 511, 513, 518, 540, 541, 542, 545, 546, 625, 656, 657, 660, 662, 689, 691, 730, 744, 756, 757, 758, 759, 760, 765, 766, 767, 770, 772, 773, 775, 777, 781, 782, 783, 787, 788, 789, 791, 802, 816, 828, 830, 831, 832, 834, 859, 860, 926, 927, 959, 960, 996, 997, 1011, 1074, 1076, 1077, 1088, 1129, 1130, 1134, 1146, 1148, 1156, 1162, 1164, 1170, 1185, 1187, 1214, 1216, 1278, 1279, 1280, 1283, 1284, 1325, 1331, 1346, 1348, 1354, 1359, 1360, 1362, 1364, 1366, 1371, 1374, 1376, 1378], "sea": [29, 56, 57, 60, 89, 518, 625, 656, 657, 660, 689, 1170, 1185, 1214, 1376], "level": [29, 30, 31, 48, 54, 56, 57, 60, 77, 89, 106, 225, 226, 227, 228, 233, 234, 235, 237, 239, 241, 242, 243, 244, 249, 251, 253, 372, 373, 374, 380, 381, 446, 451, 466, 482, 502, 511, 512, 513, 516, 518, 541, 542, 625, 626, 627, 648, 654, 656, 657, 660, 677, 689, 706, 757, 758, 875, 876, 877, 878, 883, 884, 885, 887, 889, 891, 892, 893, 894, 899, 901, 903, 1025, 1026, 1027, 1033, 1034, 1097, 1102, 1117, 1133, 1153, 1162, 1163, 1164, 1167, 1170, 1175, 1181, 1185, 1202, 1214, 1231, 1279, 1280, 1347, 1348, 1351, 1356, 1362, 1368, 1370, 1372, 1373, 1376], "meter": [29, 56, 57, 58, 59, 71, 72, 73, 100, 101, 102, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 187, 218, 254, 284, 287, 312, 315, 321, 324, 349, 352, 358, 426, 479, 495, 502, 507, 510, 516, 518, 544, 571, 625, 656, 657, 658, 659, 671, 672, 673, 700, 701, 702, 718, 719, 720, 721, 722, 723, 724, 725, 726, 777, 837, 868, 904, 934, 937, 962, 965, 971, 974, 999, 1002, 1008, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1074, 1077, 1130, 1146, 1153, 1158, 1161, 1167, 1170, 1196, 1197, 1198, 1225, 1226, 1227, 1245, 1282, 1309, 1331, 1359, 1368, 1371, 1373, 1376], "compress": [30, 31, 362, 370, 371, 626, 627, 1015, 1023, 1024], "gzip": [30, 31, 362, 370, 371, 626, 627, 1015, 1023, 1024], "compression_opt": [30, 31, 626, 627], "6": [30, 31, 140, 141, 142, 182, 478, 480, 485, 493, 497, 500, 504, 505, 506, 513, 542, 549, 562, 626, 627, 762, 765, 766, 790, 791, 792, 831, 1129, 1131, 1136, 1144, 1148, 1151, 1155, 1156, 1157, 1164, 1280, 1287, 1300, 1328, 1331, 1336, 1337, 1340, 1341, 1344, 1356, 1358, 1359, 1362, 1364, 1366, 1369, 1370, 1371, 1372, 1373, 1375, 1378], "undefined_valu": [30, 31, 626, 627], "odim_convent": [30, 31, 626, 627], "v2_2": [30, 31, 626, 627], "write": [30, 31, 32, 33, 378, 379, 380, 381, 382, 626, 627, 628, 629, 1031, 1032, 1033, 1034, 1035, 1172, 1183, 1320, 1325, 1326, 1365], "eumetnet": [30, 31, 626, 627], "opera": [30, 31, 626, 627, 1320, 1362], "compliant": [30, 31, 378, 626, 627, 1031], "produc": [30, 31, 33, 369, 378, 380, 383, 451, 452, 514, 519, 626, 627, 629, 770, 1022, 1031, 1033, 1037, 1102, 1103, 1165, 1171, 1362, 1376], "follow": [30, 31, 33, 132, 179, 182, 183, 378, 379, 381, 382, 421, 478, 481, 497, 504, 507, 511, 513, 626, 627, 629, 769, 781, 828, 831, 832, 1031, 1032, 1034, 1035, 1048, 1058, 1072, 1073, 1074, 1129, 1132, 1148, 1155, 1158, 1162, 1164, 1327, 1355, 1362, 1370, 1371, 1372, 1375, 1376], "inform": [30, 31, 40, 46, 60, 77, 89, 106, 130, 136, 137, 164, 176, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 366, 368, 376, 379, 507, 516, 581, 585, 596, 597, 613, 614, 626, 627, 639, 646, 660, 677, 689, 706, 741, 753, 756, 767, 778, 779, 780, 782, 783, 813, 825, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1019, 1021, 1029, 1032, 1158, 1167, 1173, 1185, 1202, 1214, 1231, 1328, 1348, 1362, 1376], "http": [30, 31, 126, 372, 373, 374, 428, 479, 495, 502, 553, 626, 627, 726, 1025, 1026, 1027, 1079, 1130, 1146, 1153, 1291, 1320, 1339, 1348, 1357, 1362, 1370, 1375, 1376, 1378], "www": [30, 31, 126, 372, 373, 374, 502, 626, 627, 726, 1025, 1026, 1027, 1153, 1376], "eu": [30, 31, 626, 627], "wp": [30, 31, 626, 627], "content": [30, 31, 626, 627, 1370], "upload": [30, 31, 626, 627], "2021": [30, 31, 626, 627, 1357, 1362, 1371], "07": [30, 31, 626, 627, 1328, 1339, 1353, 1357, 1373, 1374], "odim_h5_v2": [30, 31, 626, 627], "pdf": [30, 31, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 626, 627, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008], "save": [30, 31, 55, 189, 204, 206, 211, 215, 216, 217, 218, 225, 241, 256, 271, 273, 278, 282, 283, 284, 289, 304, 306, 314, 315, 319, 320, 321, 326, 341, 343, 351, 352, 356, 357, 358, 379, 381, 626, 627, 655, 839, 854, 856, 861, 865, 866, 867, 868, 875, 891, 906, 921, 923, 928, 932, 933, 934, 939, 954, 956, 964, 965, 969, 970, 971, 976, 991, 993, 1001, 1002, 1006, 1007, 1008, 1012, 1032, 1034, 1182, 1362, 1363], "equal": [30, 31, 63, 92, 121, 123, 124, 131, 156, 157, 162, 170, 171, 174, 352, 370, 381, 478, 516, 518, 540, 563, 626, 627, 663, 692, 721, 723, 724, 733, 734, 739, 747, 748, 751, 768, 805, 806, 811, 819, 820, 823, 1002, 1023, 1034, 1129, 1167, 1170, 1188, 1217, 1278, 1301, 1339, 1357, 1358, 1369, 1371, 1372], "_fillvalu": [30, 31, 33, 378, 379, 626, 627, 629, 1031, 1032, 1365, 1373], "fill": [30, 31, 43, 516, 626, 627, 642, 756, 757, 758, 1167, 1364, 1365], "linear": [30, 31, 136, 137, 372, 479, 495, 509, 528, 541, 542, 554, 570, 626, 627, 757, 765, 766, 782, 783, 1025, 1130, 1146, 1160, 1266, 1279, 1280, 1292, 1308, 1357, 1362], "keyword": [30, 31, 33, 203, 270, 303, 315, 340, 352, 372, 374, 449, 497, 626, 627, 629, 853, 920, 953, 965, 990, 1002, 1012, 1025, 1027, 1100, 1148, 1365, 1368], "scale_factor": [30, 31, 33, 381, 626, 627, 629, 1034], "add_offset": [30, 31, 33, 381, 626, 627, 629, 1034], "calcul": [30, 31, 33, 34, 46, 48, 60, 71, 72, 89, 100, 101, 118, 119, 123, 135, 136, 137, 144, 151, 179, 181, 182, 183, 184, 185, 186, 187, 218, 254, 284, 287, 321, 324, 358, 426, 427, 434, 453, 454, 461, 475, 478, 479, 495, 497, 502, 514, 518, 519, 525, 527, 540, 541, 544, 545, 546, 552, 571, 577, 578, 579, 580, 626, 627, 629, 631, 646, 648, 660, 671, 672, 689, 700, 701, 718, 719, 723, 728, 756, 757, 758, 772, 773, 777, 781, 782, 783, 787, 788, 789, 794, 800, 828, 830, 831, 832, 833, 834, 835, 837, 868, 904, 934, 937, 971, 974, 1008, 1012, 1072, 1073, 1074, 1077, 1078, 1085, 1104, 1105, 1112, 1126, 1129, 1130, 1146, 1148, 1153, 1165, 1169, 1170, 1171, 1173, 1175, 1185, 1196, 1197, 1214, 1225, 1226, 1263, 1265, 1278, 1279, 1282, 1283, 1284, 1290, 1309, 1315, 1316, 1317, 1318, 1322, 1325, 1331, 1347, 1348, 1354, 1357, 1360, 1362, 1366, 1369, 1374, 1376], "fly": [30, 31, 33, 626, 627, 629], "_write_as_dtyp": [30, 31, 33, 381, 626, 627, 629, 1034], "datatyp": [30, 31, 626, 627, 1320], "It": [30, 31, 135, 138, 396, 410, 494, 509, 511, 518, 525, 541, 626, 627, 777, 784, 1012, 1074, 1145, 1160, 1162, 1170, 1263, 1279, 1331, 1370, 1372, 1376, 1378], "uint8": [30, 31, 381, 626, 627, 1034], "uint16": [30, 31, 381, 626, 627, 1034], "typic": [30, 31, 122, 125, 131, 151, 155, 157, 164, 171, 176, 380, 626, 627, 722, 725, 728, 732, 734, 741, 748, 753, 768, 800, 804, 806, 813, 820, 825, 1033, 1068, 1072, 1073, 1378], "lzf": [30, 31, 626, 627], "recomend": [30, 31, 626, 627], "replac": [30, 31, 47, 61, 62, 63, 90, 91, 92, 131, 132, 155, 157, 164, 171, 176, 626, 627, 647, 661, 662, 663, 690, 691, 692, 732, 734, 741, 748, 753, 768, 769, 804, 806, 813, 820, 825, 1174, 1186, 1187, 1188, 1215, 1216, 1217, 1320], "exampl": [30, 31, 45, 62, 91, 151, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 383, 540, 626, 627, 644, 662, 691, 728, 800, 854, 861, 864, 865, 866, 867, 868, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1037, 1061, 1065, 1066, 1067, 1071, 1072, 1073, 1074, 1183, 1187, 1216, 1278, 1322, 1323, 1324, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1358, 1359, 1360, 1361, 1362, 1364, 1366, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1378], "NOT": [30, 31, 151, 626, 627, 728, 800], "written": [30, 31, 379, 381, 382, 626, 627, 1032, 1034, 1035, 1320, 1362], "odim": [30, 31, 626, 627, 1320], "convent": [30, 31, 60, 89, 130, 430, 449, 493, 518, 519, 626, 627, 660, 689, 767, 1081, 1100, 1144, 1170, 1171, 1185, 1214, 1320, 1327, 1362, 1371, 1373], "v2_3": [30, 31, 626, 627], "support": [31, 233, 234, 315, 352, 363, 371, 372, 373, 374, 375, 383, 507, 582, 627, 883, 884, 965, 1002, 1012, 1016, 1024, 1025, 1026, 1027, 1028, 1036, 1037, 1061, 1071, 1158, 1320, 1347, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1375], "featur": [31, 437, 495, 627, 1012, 1088, 1146, 1339, 1357, 1362, 1372], "ppi": [31, 60, 89, 131, 132, 134, 203, 207, 211, 270, 274, 278, 303, 307, 314, 315, 340, 344, 351, 352, 450, 473, 497, 509, 533, 534, 540, 627, 660, 689, 768, 769, 770, 775, 853, 857, 861, 920, 924, 928, 953, 957, 964, 965, 990, 994, 1001, 1002, 1069, 1070, 1101, 1124, 1148, 1160, 1185, 1214, 1246, 1247, 1251, 1254, 1256, 1271, 1272, 1278, 1325, 1335, 1338, 1339, 1351, 1353, 1362, 1371, 1372, 1373, 1374], "pvol": [31, 627], "differ": [31, 121, 123, 124, 130, 478, 479, 481, 485, 493, 495, 507, 513, 561, 563, 627, 721, 723, 724, 765, 766, 767, 776, 778, 779, 780, 787, 788, 789, 1011, 1061, 1069, 1070, 1129, 1130, 1132, 1136, 1144, 1146, 1158, 1164, 1299, 1301, 1320, 1327, 1331, 1357, 1368, 1370, 1371, 1372, 1375, 1376], "group": [31, 627, 1376], "sector": [31, 60, 89, 627, 660, 689, 1185, 1214, 1373], "azim": [31, 627], "rhi": [31, 60, 89, 203, 204, 215, 270, 271, 282, 303, 304, 319, 340, 341, 356, 450, 473, 482, 509, 511, 533, 534, 540, 551, 563, 627, 660, 689, 853, 854, 865, 920, 921, 932, 953, 954, 969, 990, 991, 1006, 1070, 1101, 1124, 1133, 1160, 1162, 1185, 1214, 1247, 1257, 1271, 1272, 1278, 1289, 1301, 1325, 1335, 1353, 1362, 1371, 1373, 1374], "Not": [31, 363, 371, 627, 1016, 1024], "yet": [31, 376, 627, 1029, 1327, 1362], "fix": [31, 474, 582, 627, 1125, 1320, 1325, 1326, 1329, 1350, 1364, 1372, 1374, 1375, 1376, 1378], "stare": [31, 627], "mode": [31, 60, 77, 89, 106, 362, 474, 511, 627, 660, 677, 689, 706, 1015, 1125, 1162, 1185, 1202, 1214, 1231, 1373, 1375, 1376], "take": [32, 62, 91, 131, 138, 215, 282, 319, 356, 426, 507, 628, 662, 691, 768, 784, 865, 932, 969, 1006, 1072, 1073, 1074, 1077, 1158, 1187, 1216, 1327, 1328, 1331, 1338, 1357, 1372, 1376], "sinarame_h5": [32, 622, 628], "everi": [32, 481, 508, 509, 518, 628, 1071, 1132, 1159, 1160, 1170, 1362, 1371], "one": [32, 33, 41, 46, 54, 55, 60, 62, 89, 91, 134, 142, 155, 157, 164, 171, 176, 179, 183, 378, 379, 381, 425, 428, 471, 481, 482, 491, 492, 507, 508, 509, 511, 512, 513, 530, 533, 534, 540, 553, 563, 564, 570, 628, 629, 640, 646, 654, 655, 660, 662, 689, 691, 732, 734, 741, 748, 753, 765, 766, 775, 781, 792, 804, 806, 813, 820, 825, 828, 832, 1031, 1032, 1034, 1061, 1068, 1071, 1072, 1073, 1074, 1076, 1079, 1122, 1132, 1133, 1142, 1143, 1158, 1159, 1160, 1162, 1163, 1164, 1173, 1181, 1182, 1185, 1187, 1214, 1216, 1268, 1271, 1272, 1278, 1291, 1301, 1302, 1308, 1320, 1325, 1330, 1331, 1336, 1362, 1365, 1370, 1371, 1372, 1373, 1376, 1378], "volum": [32, 60, 89, 130, 132, 315, 352, 372, 373, 374, 382, 424, 442, 450, 460, 473, 474, 476, 480, 482, 493, 496, 501, 511, 513, 518, 519, 533, 534, 536, 555, 572, 573, 576, 628, 660, 689, 767, 769, 770, 965, 1002, 1025, 1026, 1027, 1035, 1061, 1069, 1070, 1093, 1101, 1111, 1124, 1125, 1127, 1131, 1133, 1144, 1147, 1152, 1162, 1164, 1170, 1171, 1185, 1214, 1271, 1272, 1274, 1293, 1310, 1311, 1314, 1325, 1335, 1353, 1374], "folder": [32, 628, 1376], "netcdf4": [33, 55, 373, 378, 379, 629, 655, 1026, 1031, 1032, 1182, 1345, 1362, 1364, 1375, 1378], "time_refer": [33, 378, 629, 1031, 1364], "arm_time_vari": [33, 55, 378, 379, 629, 655, 1031, 1032, 1182], "standard": [33, 55, 60, 77, 89, 106, 118, 119, 130, 366, 378, 379, 380, 428, 451, 480, 493, 508, 523, 524, 552, 557, 582, 629, 655, 660, 677, 689, 706, 718, 719, 767, 778, 779, 785, 797, 1019, 1031, 1032, 1033, 1079, 1102, 1131, 1144, 1159, 1182, 1185, 1202, 1214, 1231, 1249, 1261, 1262, 1290, 1295, 1364, 1365, 1366, 1370, 1372, 1376], "attempt": [33, 131, 132, 378, 379, 629, 768, 769, 1031, 1032], "also": [33, 45, 60, 89, 155, 205, 229, 247, 272, 305, 315, 342, 373, 374, 378, 380, 382, 420, 479, 495, 629, 644, 660, 689, 732, 804, 855, 879, 897, 922, 955, 965, 992, 1026, 1027, 1031, 1033, 1035, 1047, 1057, 1061, 1069, 1130, 1146, 1185, 1214, 1327, 1331, 1357, 1362, 1364, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1378], "made": [33, 62, 91, 378, 427, 576, 629, 662, 691, 1031, 1078, 1187, 1216, 1314, 1376], "meet": [33, 155, 157, 164, 171, 176, 378, 629, 732, 734, 741, 748, 753, 804, 806, 813, 820, 825, 1031], "mani": [33, 378, 437, 629, 1031, 1088, 1362, 1368, 1371, 1376, 1378], "outlin": [33, 378, 507, 541, 542, 629, 1031, 1158, 1279, 1280, 1376], "To": [33, 46, 62, 91, 179, 181, 182, 183, 184, 185, 186, 378, 379, 381, 576, 629, 646, 662, 691, 781, 828, 830, 831, 832, 833, 834, 835, 1031, 1032, 1034, 1173, 1187, 1216, 1314, 1362, 1365, 1368, 1371, 1375, 1376, 1378], "control": [33, 45, 130, 138, 139, 143, 146, 376, 378, 379, 504, 507, 511, 629, 644, 767, 784, 786, 793, 796, 1029, 1031, 1032, 1074, 1155, 1158, 1162, 1368], "how": [33, 62, 91, 376, 378, 379, 437, 482, 629, 662, 691, 1029, 1031, 1032, 1088, 1133, 1187, 1216, 1327, 1328, 1336, 1337, 1338, 1362, 1365, 1368, 1369, 1370, 1378], "_zlib": [33, 378, 379, 629, 1031, 1032], "_deflatelevel": [33, 378, 379, 629, 1031, 1032], "_shuffl": [33, 378, 379, 629, 1031, 1032], "_fletcher32": [33, 378, 379, 629, 1031, 1032], "_contingu": [33, 378, 379, 629, 1031, 1032], "_chunksiz": [33, 378, 379, 629, 1031, 1032], "_endian": [33, 378, 379, 629, 1031, 1032], "_least_significant_digit": [33, 378, 379, 629, 1031, 1032], "see": [33, 62, 91, 119, 130, 151, 203, 217, 230, 234, 236, 238, 246, 250, 252, 270, 283, 303, 315, 320, 340, 352, 357, 370, 378, 379, 478, 479, 482, 495, 502, 516, 629, 662, 691, 719, 728, 767, 800, 853, 867, 880, 884, 886, 888, 896, 900, 902, 920, 933, 953, 965, 970, 990, 1002, 1007, 1023, 1031, 1032, 1074, 1129, 1130, 1133, 1146, 1153, 1167, 1187, 1216, 1327, 1328, 1336, 1357, 1364, 1366, 1368, 1369, 1370, 1371, 1376], "document": [33, 130, 230, 234, 236, 238, 246, 250, 252, 315, 352, 373, 378, 379, 570, 629, 767, 880, 884, 886, 888, 896, 900, 902, 965, 1002, 1026, 1031, 1032, 1308, 1319, 1362, 1368, 1376], "detail": [33, 119, 130, 151, 234, 246, 315, 352, 378, 379, 479, 495, 629, 719, 728, 767, 800, 884, 896, 965, 1002, 1031, 1032, 1068, 1071, 1074, 1130, 1146, 1357, 1362, 1373, 1376], "netcdf4_class": [33, 55, 378, 379, 629, 655, 1031, 1032, 1182], "netcdf3_class": [33, 55, 378, 379, 629, 655, 1031, 1032, 1182], "netcdf3_64bit": [33, 55, 378, 379, 629, 655, 1031, 1032, 1182], "non": [33, 121, 123, 124, 132, 376, 378, 478, 479, 495, 507, 509, 582, 629, 721, 723, 724, 769, 1029, 1031, 1129, 1130, 1146, 1158, 1160, 1357], "zero": [33, 378, 479, 495, 497, 503, 507, 563, 570, 596, 629, 1011, 1031, 1130, 1146, 1148, 1154, 1158, 1301, 1308, 1320, 1357, 1365, 1369], "base_tim": [33, 55, 378, 379, 629, 655, 1031, 1032, 1182, 1355], "time_offset": [33, 55, 378, 379, 629, 655, 1031, 1032, 1182, 1355], "phidp_field": [34, 129, 133, 136, 137, 141, 142, 505, 506, 507, 508, 509, 631, 756, 757, 758, 763, 771, 773, 774, 782, 783, 787, 788, 789, 791, 792, 1156, 1157, 1158, 1159, 1160, 1169, 1322, 1358, 1372], "phidp_texture_field": [34, 631, 1169], "textur": [34, 182, 427, 525, 552, 575, 631, 831, 1078, 1169, 1263, 1290, 1313, 1362, 1366, 1372], "real": [34, 130, 631, 767, 1169, 1325, 1335, 1357, 1362, 1376, 1378], "part": [34, 484, 540, 631, 1135, 1169, 1278, 1327, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373], "shift": [34, 129, 133, 136, 137, 141, 142, 187, 254, 287, 324, 481, 503, 505, 506, 508, 540, 631, 763, 771, 782, 783, 787, 791, 792, 837, 904, 937, 974, 1132, 1154, 1156, 1157, 1159, 1169, 1278, 1366, 1372], "texture_field": [34, 631, 1169], "gourlei": [34, 631, 762, 787, 788, 789, 1169], "j": [34, 122, 125, 132, 136, 137, 138, 139, 143, 146, 428, 478, 479, 482, 495, 504, 508, 509, 511, 514, 516, 518, 519, 631, 722, 725, 769, 782, 783, 784, 786, 793, 796, 1079, 1129, 1130, 1133, 1146, 1155, 1159, 1160, 1162, 1165, 1167, 1169, 1170, 1171, 1322, 1323, 1332, 1333, 1340, 1341, 1343, 1345, 1349, 1352, 1357, 1362, 1376], "p": [34, 36, 38, 44, 118, 122, 125, 138, 139, 143, 146, 432, 437, 446, 450, 451, 460, 466, 473, 478, 484, 514, 541, 631, 634, 636, 643, 718, 722, 725, 784, 786, 793, 796, 1068, 1071, 1083, 1088, 1097, 1101, 1102, 1111, 1117, 1124, 1129, 1135, 1165, 1169, 1243, 1279, 1362, 1376], "tabari": [34, 631, 1169], "parent": [34, 631, 1169], "du": [34, 631, 1169], "chatelet": [34, 631, 1169], "fuzzi": [34, 631, 1169], "logic": [34, 155, 157, 164, 171, 176, 631, 732, 734, 741, 748, 753, 804, 806, 813, 820, 825, 1169], "algorithm": [34, 130, 131, 132, 151, 410, 432, 437, 451, 452, 478, 479, 482, 483, 495, 507, 511, 516, 631, 728, 765, 766, 767, 768, 769, 779, 787, 788, 800, 1068, 1074, 1083, 1088, 1102, 1103, 1129, 1130, 1133, 1134, 1146, 1158, 1162, 1167, 1169, 1321, 1324, 1325, 1362, 1371, 1372, 1374, 1376], "separ": [34, 478, 497, 502, 516, 518, 541, 553, 631, 780, 1069, 1070, 1129, 1148, 1153, 1167, 1169, 1170, 1279, 1291, 1327, 1339, 1370, 1371, 1378], "precipit": [34, 129, 133, 141, 142, 460, 473, 478, 504, 553, 631, 763, 766, 771, 791, 792, 1074, 1111, 1124, 1129, 1155, 1169, 1291, 1331, 1339, 1357, 1371, 1372, 1376], "nonprecipit": [34, 631, 1169], "echo": [34, 478, 479, 495, 497, 504, 631, 1129, 1130, 1146, 1148, 1155, 1169, 1357, 1369, 1371], "polarimetr": [34, 136, 137, 442, 448, 449, 450, 460, 473, 482, 485, 504, 511, 514, 515, 631, 756, 757, 758, 762, 782, 783, 1093, 1099, 1100, 1101, 1111, 1124, 1133, 1136, 1155, 1162, 1165, 1166, 1169, 1322, 1372], "observ": [34, 118, 138, 139, 143, 146, 437, 460, 473, 479, 495, 507, 513, 532, 631, 718, 765, 766, 784, 786, 788, 793, 796, 1088, 1111, 1124, 1130, 1146, 1158, 1164, 1169, 1270, 1357, 1372], "journal": [34, 130, 132, 432, 446, 451, 452, 466, 484, 497, 541, 542, 631, 767, 769, 1068, 1071, 1083, 1097, 1102, 1103, 1117, 1135, 1148, 1169, 1279, 1280, 1362, 1376], "atmospher": [34, 60, 89, 118, 119, 130, 131, 138, 146, 425, 452, 484, 497, 510, 542, 631, 660, 689, 718, 719, 767, 768, 784, 796, 1074, 1076, 1103, 1135, 1148, 1161, 1169, 1185, 1214, 1280, 1327, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "ocean": [34, 130, 136, 137, 452, 479, 484, 495, 497, 514, 542, 631, 767, 782, 783, 1103, 1130, 1135, 1146, 1148, 1165, 1169, 1280, 1327, 1357], "technologi": [34, 130, 452, 484, 497, 542, 631, 767, 1103, 1135, 1148, 1169, 1280], "24": [34, 631, 1169, 1328, 1370, 1371], "8": [34, 77, 106, 126, 130, 136, 182, 231, 233, 234, 235, 237, 239, 249, 251, 253, 478, 520, 542, 631, 677, 706, 726, 756, 767, 782, 787, 788, 831, 881, 883, 884, 885, 887, 889, 899, 901, 903, 1129, 1169, 1202, 1231, 1280, 1328, 1331, 1337, 1347, 1351, 1355, 1359, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1376], "1439": [34, 631, 1169], "1451": [34, 631, 1169], "class": [35, 46, 56, 60, 89, 151, 180, 187, 221, 233, 234, 240, 254, 287, 315, 324, 383, 396, 410, 437, 482, 483, 497, 504, 582, 632, 633, 646, 656, 660, 689, 727, 728, 799, 800, 829, 836, 837, 871, 883, 884, 890, 904, 937, 965, 974, 1036, 1037, 1050, 1060, 1061, 1062, 1064, 1072, 1073, 1088, 1133, 1134, 1148, 1155, 1172, 1173, 1183, 1185, 1214, 1319, 1320, 1362, 1368, 1369, 1372, 1376], "filetyp": [35, 41, 633, 640], "need": [35, 60, 69, 71, 72, 89, 98, 100, 101, 149, 380, 392, 479, 495, 544, 571, 633, 660, 669, 671, 672, 689, 698, 700, 701, 765, 766, 1033, 1130, 1146, 1185, 1194, 1196, 1197, 1214, 1223, 1225, 1226, 1282, 1309, 1327, 1331, 1336, 1357, 1362, 1364, 1365, 1366, 1368, 1369, 1372, 1373, 1375, 1376, 1378], "being": [35, 37, 130, 179, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 428, 509, 556, 557, 633, 635, 767, 828, 854, 856, 861, 864, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 965, 968, 969, 970, 971, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1074, 1079, 1160, 1294, 1295, 1320, 1348, 1375], "string": [35, 46, 60, 89, 206, 209, 210, 214, 217, 232, 234, 248, 273, 276, 277, 281, 283, 306, 309, 310, 311, 312, 313, 316, 318, 320, 343, 346, 347, 348, 349, 350, 353, 355, 357, 361, 409, 443, 463, 496, 497, 502, 508, 509, 514, 518, 519, 520, 526, 527, 583, 633, 646, 660, 689, 856, 859, 860, 864, 867, 882, 884, 898, 923, 926, 927, 931, 933, 956, 959, 960, 961, 962, 963, 966, 968, 970, 993, 996, 997, 998, 999, 1000, 1003, 1005, 1007, 1012, 1014, 1072, 1073, 1074, 1094, 1114, 1147, 1148, 1153, 1159, 1160, 1165, 1170, 1171, 1173, 1185, 1214, 1264, 1265, 1336, 1376], "initi": [35, 50, 51, 52, 56, 78, 79, 80, 81, 107, 108, 109, 110, 130, 131, 151, 187, 254, 287, 324, 383, 515, 633, 650, 651, 652, 656, 678, 679, 680, 681, 707, 708, 709, 710, 728, 767, 768, 800, 837, 904, 937, 974, 1037, 1166, 1177, 1178, 1179, 1203, 1204, 1205, 1206, 1232, 1233, 1234, 1235, 1338], "dic": [38, 46, 60, 61, 89, 90, 383, 395, 636, 646, 660, 661, 689, 690, 1037, 1173, 1185, 1186, 1214, 1215], "colormap": [39, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 638, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1012, 1033, 1325, 1335, 1339, 1353, 1358, 1372, 1374], "select": [40, 65, 74, 94, 103, 132, 442, 450, 460, 473, 476, 491, 492, 511, 513, 515, 639, 665, 674, 694, 703, 769, 1093, 1101, 1111, 1124, 1127, 1142, 1143, 1162, 1164, 1166, 1190, 1199, 1219, 1228], "limit": [40, 130, 131, 136, 137, 179, 181, 182, 183, 184, 185, 186, 206, 220, 246, 273, 286, 306, 323, 343, 360, 370, 381, 423, 501, 507, 511, 572, 573, 639, 767, 768, 781, 782, 783, 828, 830, 831, 832, 833, 834, 835, 856, 870, 896, 923, 936, 956, 973, 993, 1010, 1012, 1023, 1034, 1069, 1070, 1152, 1158, 1162, 1310, 1311, 1332, 1333, 1337, 1362, 1368, 1372], "relat": [40, 381, 479, 485, 488, 489, 490, 495, 508, 516, 639, 758, 787, 788, 789, 1034, 1130, 1136, 1139, 1140, 1141, 1146, 1159, 1167, 1357, 1362, 1372, 1375, 1376], "instac": [40, 639], "nyquist": [40, 73, 102, 130, 131, 132, 427, 525, 639, 673, 702, 767, 768, 769, 1078, 1198, 1227, 1263, 1366, 1371, 1373], "consid": [40, 129, 133, 134, 141, 142, 446, 451, 452, 466, 478, 479, 491, 492, 495, 501, 505, 506, 511, 512, 513, 530, 533, 534, 540, 541, 542, 558, 639, 756, 763, 765, 766, 770, 771, 772, 773, 774, 775, 778, 779, 787, 788, 789, 791, 792, 1011, 1069, 1070, 1074, 1097, 1102, 1103, 1117, 1129, 1130, 1142, 1143, 1146, 1152, 1156, 1157, 1162, 1163, 1164, 1268, 1271, 1272, 1278, 1279, 1280, 1296, 1357], "vmin": [40, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 639, 854, 856, 861, 864, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 965, 968, 969, 970, 971, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1012, 1033, 1322, 1323, 1327, 1328, 1331, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1365, 1366, 1368, 1369, 1371, 1372], "vmax": [40, 204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 380, 639, 854, 856, 861, 864, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 965, 968, 969, 970, 971, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1012, 1033, 1322, 1323, 1327, 1328, 1331, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1365, 1366, 1368, 1369, 1371, 1372], "2": [40, 118, 122, 126, 132, 134, 136, 138, 146, 182, 193, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 231, 232, 233, 237, 239, 248, 249, 251, 253, 260, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 293, 304, 306, 309, 310, 314, 317, 318, 319, 320, 321, 323, 330, 341, 343, 346, 347, 351, 352, 354, 355, 356, 357, 358, 360, 372, 373, 374, 376, 418, 432, 433, 451, 460, 475, 478, 479, 481, 495, 497, 507, 513, 518, 526, 527, 542, 553, 555, 639, 718, 722, 726, 769, 770, 774, 775, 778, 779, 780, 782, 784, 787, 788, 796, 831, 843, 854, 856, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 881, 882, 883, 887, 889, 898, 899, 901, 903, 910, 921, 923, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 943, 954, 956, 959, 960, 964, 967, 968, 969, 970, 971, 973, 980, 991, 993, 996, 997, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1010, 1025, 1026, 1027, 1029, 1045, 1056, 1061, 1068, 1069, 1070, 1071, 1074, 1083, 1084, 1102, 1111, 1126, 1129, 1130, 1132, 1146, 1148, 1158, 1164, 1170, 1245, 1249, 1264, 1265, 1280, 1291, 1293, 1319, 1324, 1329, 1331, 1337, 1338, 1344, 1345, 1347, 1348, 1349, 1351, 1352, 1355, 1357, 1359, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1376], "tuplet": [40, 639], "minimun": [40, 639], "maximun": [40, 639], "teoric": [40, 639], "copi": [41, 45, 46, 62, 63, 65, 66, 67, 69, 91, 92, 94, 95, 96, 98, 165, 166, 383, 576, 640, 644, 646, 662, 663, 665, 666, 667, 669, 691, 692, 694, 695, 696, 698, 742, 743, 814, 815, 1037, 1074, 1173, 1187, 1188, 1190, 1191, 1192, 1194, 1216, 1217, 1219, 1220, 1221, 1223, 1314, 1365], "field_map": [41, 640], "anoth": [41, 442, 450, 460, 473, 476, 553, 640, 1061, 1093, 1101, 1111, 1124, 1127, 1291, 1331, 1364, 1369, 1372, 1375, 1378], "empti": [44, 389, 418, 508, 509, 643, 1045, 1056, 1159, 1160, 1243, 1245, 1248, 1320, 1364, 1371, 1372], "exist": [44, 47, 61, 62, 64, 90, 91, 93, 134, 155, 157, 164, 171, 176, 179, 182, 183, 376, 507, 576, 643, 647, 661, 662, 664, 690, 691, 693, 732, 734, 741, 748, 753, 775, 781, 804, 806, 813, 820, 825, 828, 831, 832, 1029, 1158, 1174, 1183, 1186, 1187, 1189, 1215, 1216, 1218, 1243, 1314, 1322, 1362, 1364], "self": [45, 136, 137, 385, 388, 389, 390, 391, 394, 398, 400, 401, 405, 406, 644, 782, 783, 787, 788, 789, 1365, 1368, 1376], "descrip": [45, 644], "default_config": [45, 644, 1320], "These": [45, 130, 151, 246, 380, 559, 582, 644, 728, 767, 800, 896, 1033, 1074, 1297, 1327, 1336, 1357, 1362, 1369, 1375, 1376], "modifi": [45, 60, 89, 644, 660, 689, 770, 1185, 1214, 1325, 1335, 1353, 1374, 1376], "environment": [45, 644, 1362, 1375], "pyart_config": [45, 644, 1372], "execut": [45, 644, 1324, 1329, 1334, 1353, 1360, 1361, 1374], "full": [45, 77, 106, 134, 376, 644, 677, 706, 770, 775, 1029, 1202, 1231, 1320, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362], "permiss": [45, 644], "mai": [45, 130, 131, 155, 157, 164, 171, 176, 287, 324, 372, 374, 380, 383, 396, 478, 509, 511, 582, 644, 732, 734, 741, 748, 753, 767, 768, 804, 806, 813, 820, 825, 937, 974, 1025, 1027, 1033, 1037, 1074, 1129, 1160, 1162, 1258, 1319, 1357, 1362], "secur": [45, 644], "do": [45, 60, 89, 126, 130, 179, 182, 183, 380, 381, 494, 644, 660, 689, 726, 767, 781, 828, 831, 832, 1033, 1034, 1145, 1185, 1214, 1328, 1357, 1364, 1365, 1366, 1368, 1369, 1371, 1375, 1376, 1378], "un": [45, 644], "trust": [45, 644], "method": [45, 46, 62, 69, 71, 72, 91, 98, 100, 101, 129, 133, 136, 137, 151, 155, 157, 164, 171, 176, 216, 381, 382, 383, 396, 421, 446, 466, 478, 481, 496, 497, 505, 506, 507, 508, 509, 518, 540, 541, 542, 644, 646, 662, 669, 671, 672, 691, 698, 700, 701, 728, 732, 734, 741, 748, 753, 756, 758, 763, 771, 782, 783, 787, 789, 800, 804, 806, 813, 820, 825, 866, 1034, 1035, 1037, 1048, 1050, 1058, 1069, 1070, 1072, 1073, 1097, 1117, 1129, 1132, 1147, 1148, 1156, 1157, 1158, 1159, 1160, 1170, 1173, 1187, 1194, 1196, 1197, 1216, 1223, 1225, 1226, 1278, 1279, 1280, 1319, 1322, 1342, 1362, 1369, 1371, 1372, 1376], "chang": [45, 46, 60, 62, 66, 67, 69, 71, 89, 91, 95, 96, 98, 100, 130, 150, 151, 375, 383, 644, 646, 660, 662, 666, 667, 669, 671, 689, 691, 695, 696, 698, 700, 728, 767, 800, 1028, 1037, 1173, 1183, 1185, 1187, 1191, 1192, 1194, 1196, 1214, 1216, 1220, 1221, 1223, 1225, 1258, 1320, 1357, 1365, 1368, 1373, 1375, 1376], "home": [45, 644, 1376, 1378], "make": [45, 46, 482, 515, 644, 646, 1133, 1166, 1173, 1245, 1249, 1250, 1252, 1253, 1320, 1331, 1338, 1347, 1357, 1364, 1365, 1371, 1375, 1376, 1378], "adjust": [45, 122, 220, 286, 323, 360, 478, 644, 722, 870, 936, 973, 1010, 1129, 1336, 1339, 1347], "login": [45, 644], "shell": [45, 644], "session": [45, 644], "modif": [45, 62, 91, 644, 662, 691, 1187, 1216, 1320], "last": [45, 60, 89, 130, 135, 204, 205, 211, 215, 216, 217, 229, 231, 237, 239, 240, 247, 249, 251, 253, 271, 272, 278, 282, 283, 304, 305, 314, 315, 319, 320, 324, 341, 342, 351, 352, 356, 357, 540, 542, 644, 660, 689, 767, 777, 854, 855, 861, 865, 866, 867, 879, 881, 887, 889, 890, 897, 899, 901, 903, 921, 922, 928, 932, 933, 954, 955, 964, 965, 969, 970, 974, 991, 992, 1001, 1002, 1006, 1007, 1185, 1214, 1278, 1280, 1332, 1373], "origin_latitud": [46, 646, 1173], "origin_longitud": [46, 646, 1173], "origin_altitud": [46, 646, 1173], "z": [46, 52, 54, 60, 72, 80, 89, 101, 109, 118, 119, 120, 136, 137, 202, 269, 302, 339, 370, 380, 381, 428, 478, 479, 485, 488, 489, 490, 495, 502, 548, 646, 652, 654, 660, 672, 680, 689, 701, 709, 718, 719, 720, 756, 758, 782, 783, 852, 919, 952, 989, 1012, 1023, 1033, 1034, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1079, 1129, 1130, 1136, 1139, 1140, 1141, 1146, 1153, 1173, 1179, 1181, 1185, 1197, 1205, 1214, 1226, 1234, 1245, 1286, 1322, 1345, 1347, 1348, 1357, 1362, 1365, 1372, 1376], "radar_latitud": [46, 544, 571, 646, 1173, 1282, 1309], "radar_longitud": [46, 544, 571, 646, 1173, 1282, 1309], "radar_altitud": [46, 501, 646, 1152, 1173], "radar_tim": [46, 646, 1173], "radar_nam": [46, 646, 1012, 1173], "rectilinear": [46, 646, 1173], "cartesian": [46, 48, 54, 60, 89, 118, 119, 120, 121, 122, 123, 124, 125, 370, 482, 497, 614, 646, 648, 654, 660, 689, 718, 719, 720, 721, 722, 723, 724, 725, 1023, 1060, 1061, 1068, 1071, 1072, 1073, 1074, 1133, 1148, 1173, 1175, 1181, 1185, 1214, 1320, 1325, 1330, 1334, 1337, 1362, 1363, 1371, 1374], "section": [46, 60, 62, 89, 91, 198, 200, 204, 218, 265, 267, 271, 284, 298, 300, 304, 321, 335, 337, 341, 358, 434, 453, 454, 497, 533, 534, 547, 646, 660, 662, 689, 691, 848, 850, 854, 868, 915, 917, 921, 934, 948, 950, 954, 971, 985, 987, 991, 1008, 1070, 1074, 1085, 1104, 1105, 1148, 1173, 1185, 1187, 1214, 1216, 1271, 1272, 1285, 1320, 1325, 1335, 1353, 1357, 1362, 1371, 1374], "legaci": [46, 428, 646, 1079, 1173], "befor": [46, 71, 100, 130, 134, 136, 137, 150, 437, 442, 450, 460, 473, 476, 479, 495, 511, 581, 646, 671, 700, 767, 775, 782, 783, 1061, 1088, 1093, 1101, 1111, 1124, 1127, 1130, 1146, 1162, 1173, 1196, 1225, 1331, 1357, 1362, 1366, 1372, 1373, 1376], "from_legacy_paramet": [46, 646, 1173], "ax": [46, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 229, 231, 232, 233, 234, 235, 237, 239, 246, 247, 248, 249, 251, 253, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 351, 352, 354, 355, 356, 357, 358, 359, 360, 479, 495, 503, 516, 646, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 879, 881, 882, 883, 884, 885, 887, 889, 896, 897, 898, 899, 901, 903, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 995, 996, 997, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1065, 1066, 1067, 1130, 1146, 1154, 1167, 1173, 1322, 1323, 1327, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1351, 1355, 1356, 1357, 1358, 1359, 1366, 1370, 1371, 1372], "moment": [46, 54, 60, 89, 130, 131, 132, 182, 183, 372, 373, 374, 541, 596, 597, 646, 654, 660, 689, 762, 767, 768, 769, 781, 831, 832, 1025, 1026, 1027, 1074, 1173, 1181, 1185, 1214, 1279, 1328, 1335, 1353, 1362, 1369, 1370, 1372, 1374], "describ": [46, 60, 89, 127, 179, 180, 181, 182, 183, 184, 185, 186, 232, 248, 446, 452, 466, 495, 646, 660, 689, 759, 781, 828, 829, 830, 831, 832, 833, 834, 835, 882, 898, 1097, 1103, 1117, 1146, 1173, 1185, 1214, 1357], "geograph": [46, 60, 71, 89, 100, 121, 122, 123, 124, 125, 126, 287, 315, 324, 352, 379, 646, 660, 671, 689, 700, 721, 722, 723, 724, 725, 726, 937, 965, 974, 1002, 1032, 1074, 1173, 1185, 1196, 1214, 1225, 1362], "axi": [46, 54, 60, 89, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 229, 231, 232, 233, 234, 235, 237, 239, 246, 247, 248, 249, 251, 253, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 304, 305, 306, 307, 308, 309, 310, 314, 315, 317, 318, 319, 320, 321, 323, 341, 342, 343, 344, 345, 346, 347, 351, 352, 354, 355, 356, 357, 358, 360, 370, 380, 530, 646, 654, 660, 689, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 879, 881, 882, 883, 884, 885, 887, 889, 896, 897, 898, 899, 901, 903, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 954, 955, 956, 957, 958, 959, 960, 964, 965, 967, 968, 969, 970, 971, 973, 991, 992, 993, 994, 995, 996, 997, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1010, 1023, 1033, 1173, 1181, 1185, 1214, 1268, 1322, 1337, 1348, 1357, 1359, 1371, 1372, 1373], "dimension": [46, 54, 130, 132, 495, 516, 646, 654, 767, 769, 1068, 1071, 1146, 1167, 1173, 1181, 1331, 1357], "space": [46, 60, 89, 123, 206, 273, 306, 343, 381, 478, 479, 493, 495, 502, 646, 660, 689, 723, 856, 923, 956, 993, 1034, 1074, 1129, 1130, 1144, 1146, 1153, 1173, 1185, 1214, 1328, 1357, 1364], "along": [46, 131, 134, 218, 230, 231, 236, 237, 238, 239, 250, 251, 252, 253, 284, 321, 358, 474, 530, 533, 534, 545, 546, 575, 646, 768, 775, 868, 880, 881, 886, 887, 888, 889, 900, 901, 902, 903, 934, 971, 1008, 1125, 1173, 1268, 1271, 1272, 1283, 1284, 1313, 1357, 1371], "three": [46, 132, 179, 183, 380, 495, 516, 646, 769, 781, 828, 832, 1033, 1146, 1167, 1173, 1357, 1372], "repeat": [46, 497, 646, 1148, 1173], "throughout": [46, 646, 1173], "transform": [46, 60, 89, 121, 122, 123, 124, 125, 126, 209, 216, 276, 287, 309, 324, 346, 352, 379, 423, 437, 443, 463, 478, 504, 517, 646, 660, 689, 721, 722, 723, 724, 725, 726, 859, 866, 926, 937, 959, 974, 996, 1002, 1032, 1074, 1088, 1094, 1114, 1129, 1155, 1168, 1173, 1185, 1214, 1336, 1357, 1370], "pyart_aeqd": [46, 60, 89, 121, 123, 124, 646, 660, 689, 721, 723, 724, 1173, 1185, 1214], "nativ": [46, 60, 89, 121, 123, 124, 363, 428, 646, 660, 689, 721, 723, 724, 1016, 1074, 1079, 1173, 1185, 1214], "azimuth": [46, 60, 66, 70, 72, 82, 89, 95, 99, 101, 111, 118, 119, 120, 121, 122, 123, 124, 125, 144, 145, 187, 188, 204, 206, 209, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 254, 255, 271, 273, 276, 278, 282, 283, 287, 288, 304, 306, 309, 314, 315, 319, 320, 324, 325, 341, 343, 346, 351, 352, 356, 357, 376, 380, 428, 442, 473, 474, 491, 492, 494, 497, 509, 511, 518, 519, 528, 533, 534, 540, 543, 544, 545, 551, 555, 563, 576, 596, 646, 660, 666, 670, 672, 682, 689, 695, 699, 701, 711, 718, 719, 720, 721, 722, 723, 724, 725, 765, 766, 776, 778, 779, 780, 785, 794, 795, 797, 837, 838, 854, 856, 859, 861, 865, 866, 867, 881, 887, 889, 899, 901, 903, 904, 905, 921, 923, 926, 928, 932, 933, 937, 938, 954, 956, 959, 964, 965, 969, 970, 974, 975, 991, 993, 996, 1001, 1002, 1006, 1007, 1029, 1033, 1070, 1079, 1093, 1124, 1125, 1142, 1143, 1145, 1148, 1160, 1162, 1170, 1171, 1173, 1185, 1191, 1195, 1197, 1207, 1214, 1220, 1224, 1226, 1236, 1266, 1271, 1272, 1278, 1281, 1282, 1283, 1289, 1293, 1301, 1314, 1320, 1350, 1352, 1355, 1364, 1373, 1376], "equidist": [46, 60, 89, 121, 122, 123, 124, 125, 209, 276, 309, 346, 352, 380, 646, 660, 689, 721, 722, 723, 724, 725, 859, 926, 959, 996, 1002, 1033, 1074, 1173, 1185, 1214], "pyproj": [46, 60, 89, 121, 123, 124, 646, 660, 689, 721, 723, 724, 1173, 1185, 1214, 1375], "projparam": [46, 49, 60, 89, 121, 123, 124, 646, 649, 660, 689, 721, 723, 724, 1173, 1176, 1185, 1214], "special": [46, 60, 89, 646, 660, 689, 1173, 1185, 1214, 1320, 1370], "_include_lon_0_lat_0": [46, 60, 89, 646, 660, 689, 1173, 1185, 1214], "interpret": [46, 60, 89, 131, 132, 379, 556, 557, 646, 660, 689, 768, 769, 1032, 1173, 1185, 1214, 1294, 1295], "requir": [46, 60, 89, 121, 123, 124, 130, 134, 376, 380, 429, 430, 431, 432, 438, 439, 440, 441, 445, 446, 448, 449, 456, 457, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 481, 518, 541, 582, 646, 660, 689, 721, 723, 724, 767, 770, 775, 1029, 1033, 1069, 1070, 1074, 1080, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1096, 1097, 1099, 1100, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1132, 1170, 1173, 1185, 1214, 1279, 1328, 1362, 1370, 1371, 1372, 1376, 1378], "get_projparam": [46, 646, 1173], "evalu": [46, 383, 392, 407, 412, 646, 1037, 1039, 1173], "up": [46, 60, 89, 155, 157, 164, 171, 176, 428, 460, 485, 488, 489, 510, 513, 525, 559, 561, 562, 646, 660, 689, 732, 734, 741, 748, 753, 757, 758, 765, 766, 787, 788, 789, 804, 806, 813, 820, 825, 1069, 1070, 1079, 1111, 1136, 1139, 1140, 1161, 1164, 1173, 1185, 1214, 1263, 1297, 1299, 1300, 1357, 1366, 1370, 1373, 1377], "collect": [46, 164, 176, 365, 372, 373, 374, 376, 646, 741, 753, 813, 825, 1018, 1025, 1026, 1027, 1029, 1060, 1072, 1073, 1074, 1173, 1327, 1341, 1355, 1376, 1377, 1378], "nradar": [46, 646, 1173], "whose": [46, 375, 646, 1028, 1067, 1074, 1173], "wa": [46, 71, 72, 100, 101, 131, 132, 150, 164, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 553, 646, 671, 672, 700, 701, 741, 768, 769, 813, 854, 861, 865, 866, 867, 868, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1173, 1196, 1197, 1225, 1226, 1291, 1320, 1362, 1372, 1376, 1378], "projection_proj": [46, 646, 1173], "instanc": [46, 57, 63, 92, 130, 131, 132, 204, 211, 214, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 381, 382, 428, 482, 553, 563, 564, 570, 646, 657, 663, 692, 767, 768, 769, 854, 861, 864, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1034, 1035, 1079, 1133, 1173, 1188, 1217, 1291, 1301, 1302, 1308], "valueerror": [46, 47, 61, 62, 90, 91, 646, 647, 661, 662, 690, 691, 1173, 1174, 1186, 1187, 1215, 1216], "point_z": [46, 379, 646, 1032, 1173], "point_x": [46, 379, 646, 1032, 1173], "point_i": [46, 379, 646, 1032, 1173], "func": [46, 150, 646, 1173], "init_point_x_y_z": [46, 646, 1173], "reset": [46, 51, 52, 60, 71, 79, 80, 81, 89, 100, 108, 109, 110, 646, 651, 652, 660, 671, 679, 680, 681, 689, 700, 708, 709, 710, 1173, 1178, 1179, 1185, 1196, 1204, 1205, 1206, 1214, 1225, 1233, 1234, 1235, 1369], "point_latitud": [46, 379, 646, 1032, 1173], "point_longitud": [46, 379, 646, 1032, 1173], "perform": [46, 60, 71, 72, 73, 89, 100, 101, 102, 130, 131, 132, 134, 155, 157, 164, 171, 176, 204, 209, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 276, 278, 281, 282, 283, 284, 304, 309, 314, 315, 318, 319, 320, 321, 324, 341, 346, 351, 352, 355, 356, 357, 358, 372, 375, 380, 437, 442, 450, 460, 473, 481, 495, 507, 576, 646, 660, 671, 672, 673, 689, 700, 701, 702, 732, 734, 741, 748, 753, 762, 767, 768, 769, 775, 804, 806, 813, 820, 825, 854, 859, 861, 864, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 926, 928, 931, 932, 933, 934, 954, 959, 964, 965, 968, 969, 970, 971, 974, 991, 996, 1001, 1002, 1005, 1006, 1007, 1008, 1025, 1028, 1033, 1069, 1070, 1088, 1093, 1101, 1111, 1124, 1132, 1146, 1158, 1173, 1185, 1196, 1197, 1198, 1214, 1225, 1226, 1227, 1314, 1321, 1322, 1323, 1325, 1332, 1333, 1337, 1362, 1371], "invers": [46, 60, 89, 138, 146, 443, 518, 646, 660, 689, 784, 796, 1094, 1170, 1173, 1185, 1214], "rel": [46, 60, 89, 135, 181, 216, 313, 350, 423, 437, 515, 517, 646, 660, 689, 757, 773, 777, 787, 788, 789, 830, 866, 963, 1000, 1074, 1088, 1166, 1168, 1173, 1185, 1214, 1373, 1376], "init_point_longitude_latitud": [46, 646, 1173], "point_altitud": [46, 50, 379, 646, 650, 1032, 1173, 1177], "init_point_altitud": [46, 646, 1173], "init": [46, 221, 240, 383, 395, 544, 646, 871, 890, 1037, 1173, 1282], "field_dict": [47, 647, 1174], "replace_exist": [47, 61, 62, 63, 90, 91, 92, 647, 661, 662, 663, 690, 691, 692, 1174, 1186, 1187, 1188, 1215, 1216, 1217, 1357, 1365, 1366, 1376], "overwrit": [47, 540, 647, 1174, 1278], "alreadi": [47, 61, 62, 90, 91, 138, 505, 506, 647, 661, 662, 690, 691, 784, 1156, 1157, 1174, 1186, 1187, 1215, 1216], "edg": [48, 72, 101, 119, 123, 130, 131, 132, 134, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 503, 509, 595, 648, 672, 701, 719, 723, 767, 768, 769, 770, 775, 854, 861, 865, 866, 867, 881, 887, 889, 899, 901, 903, 921, 928, 932, 933, 954, 964, 965, 969, 970, 991, 1001, 1002, 1006, 1007, 1154, 1160, 1175, 1197, 1226, 1249, 1347, 1348, 1357, 1362], "height": [48, 54, 56, 57, 135, 181, 233, 234, 235, 249, 315, 352, 423, 424, 426, 437, 442, 450, 460, 473, 476, 479, 480, 482, 495, 496, 497, 500, 504, 510, 511, 512, 513, 515, 516, 517, 518, 519, 570, 648, 654, 656, 657, 757, 758, 765, 766, 772, 773, 777, 787, 788, 789, 830, 883, 884, 885, 899, 965, 1002, 1069, 1070, 1074, 1077, 1088, 1093, 1101, 1111, 1124, 1127, 1130, 1131, 1133, 1146, 1147, 1148, 1151, 1155, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1170, 1171, 1175, 1181, 1308, 1336, 1345, 1355, 1359, 1369, 1371, 1372, 1376], "determin": [48, 60, 89, 129, 130, 131, 132, 133, 137, 141, 142, 231, 233, 234, 235, 237, 239, 246, 249, 251, 253, 315, 352, 363, 372, 373, 376, 381, 382, 427, 437, 446, 451, 466, 479, 481, 482, 484, 485, 486, 488, 489, 495, 515, 516, 518, 540, 541, 558, 570, 574, 648, 660, 689, 763, 767, 768, 769, 771, 783, 791, 792, 881, 883, 884, 885, 887, 889, 896, 899, 901, 903, 965, 1002, 1011, 1012, 1016, 1025, 1026, 1029, 1034, 1035, 1078, 1088, 1097, 1102, 1117, 1130, 1132, 1133, 1135, 1136, 1137, 1139, 1140, 1146, 1166, 1167, 1170, 1175, 1185, 1214, 1278, 1279, 1296, 1308, 1312, 1357, 1376], "same": [48, 60, 62, 70, 71, 72, 89, 91, 99, 100, 101, 122, 125, 130, 157, 171, 216, 315, 370, 376, 380, 381, 382, 425, 437, 479, 495, 502, 510, 540, 544, 555, 571, 576, 648, 660, 662, 670, 671, 672, 689, 691, 699, 700, 701, 722, 725, 734, 748, 767, 806, 820, 866, 965, 1023, 1029, 1033, 1034, 1035, 1074, 1076, 1088, 1130, 1146, 1153, 1161, 1175, 1185, 1187, 1195, 1196, 1197, 1214, 1216, 1224, 1225, 1226, 1249, 1278, 1282, 1293, 1309, 1314, 1327, 1347, 1348, 1357, 1364, 1369, 1370, 1371, 1376, 1378], "layout": [48, 369, 648, 1022, 1175], "interpol": [48, 72, 101, 119, 123, 204, 211, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 365, 372, 442, 450, 460, 473, 476, 482, 496, 509, 510, 511, 518, 554, 570, 648, 672, 701, 719, 723, 854, 861, 865, 866, 867, 868, 881, 887, 889, 899, 901, 903, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1018, 1025, 1072, 1073, 1074, 1093, 1101, 1111, 1124, 1127, 1133, 1147, 1160, 1161, 1162, 1170, 1175, 1197, 1226, 1292, 1308, 1320, 1328, 1357, 1368, 1371, 1372, 1376], "extrapol": [48, 119, 123, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 648, 719, 723, 854, 861, 865, 866, 867, 881, 887, 889, 899, 901, 903, 921, 928, 932, 933, 954, 964, 965, 969, 970, 991, 1001, 1002, 1006, 1007, 1175], "boundari": [48, 119, 123, 134, 223, 224, 246, 352, 509, 648, 719, 723, 775, 873, 874, 896, 1002, 1160, 1175, 1249, 1358, 1370, 1372], "center": [48, 60, 72, 89, 101, 118, 119, 120, 122, 123, 125, 131, 204, 209, 211, 215, 216, 217, 231, 232, 236, 237, 238, 239, 248, 249, 250, 251, 252, 253, 271, 276, 278, 282, 283, 287, 304, 309, 314, 315, 319, 320, 341, 346, 351, 352, 356, 357, 372, 374, 442, 450, 460, 473, 476, 501, 525, 528, 552, 648, 660, 672, 689, 701, 718, 719, 720, 722, 723, 725, 768, 854, 859, 861, 865, 866, 867, 881, 882, 886, 887, 888, 889, 898, 899, 900, 901, 902, 903, 921, 926, 928, 932, 933, 937, 954, 959, 964, 965, 969, 970, 991, 996, 1001, 1002, 1006, 1007, 1025, 1027, 1065, 1066, 1067, 1093, 1101, 1111, 1124, 1127, 1152, 1175, 1185, 1197, 1214, 1226, 1245, 1249, 1263, 1266, 1290, 1336, 1366, 1371, 1372, 1373], "2d": [48, 70, 71, 72, 99, 100, 101, 119, 135, 370, 380, 424, 437, 504, 509, 515, 525, 552, 648, 670, 671, 672, 699, 700, 701, 719, 776, 777, 785, 1023, 1033, 1088, 1155, 1160, 1166, 1175, 1195, 1196, 1197, 1224, 1225, 1226, 1263, 1290, 1331, 1373], "point_": [51, 52, 651, 652, 1178, 1179], "properti": [53, 58, 59, 165, 166, 518, 653, 658, 659, 742, 743, 814, 815, 1062, 1064, 1170, 1180, 1370, 1376], "xarrai": [54, 221, 233, 234, 235, 546, 654, 871, 883, 884, 885, 1012, 1069, 1070, 1181, 1284, 1351, 1355, 1362, 1375], "arm_alt_lat_lon_vari": [55, 379, 655, 1032, 1182], "speed": [56, 57, 234, 497, 518, 519, 525, 656, 657, 884, 1074, 1148, 1170, 1171, 1263, 1359, 1371, 1376], "direct": [56, 77, 106, 376, 430, 449, 481, 494, 497, 507, 518, 519, 656, 677, 706, 1029, 1081, 1100, 1132, 1145, 1148, 1158, 1170, 1171, 1202, 1231, 1359, 1371, 1376], "horizont": [56, 57, 58, 59, 60, 89, 130, 204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 319, 320, 321, 341, 342, 343, 351, 356, 357, 358, 364, 365, 433, 439, 440, 441, 445, 458, 459, 471, 472, 477, 491, 492, 494, 513, 518, 570, 656, 657, 658, 659, 660, 689, 756, 761, 762, 764, 767, 854, 855, 856, 861, 865, 866, 867, 868, 879, 881, 883, 885, 887, 889, 897, 899, 901, 903, 921, 922, 923, 928, 932, 933, 934, 954, 955, 956, 964, 969, 970, 971, 991, 992, 993, 1001, 1006, 1007, 1008, 1017, 1018, 1069, 1070, 1084, 1090, 1091, 1092, 1096, 1109, 1110, 1122, 1123, 1128, 1142, 1143, 1145, 1164, 1170, 1185, 1214, 1308, 1338, 1348, 1371, 1373, 1376], "wind": [56, 57, 58, 59, 130, 131, 364, 365, 491, 492, 493, 494, 518, 519, 570, 656, 657, 658, 659, 767, 768, 1017, 1018, 1142, 1143, 1144, 1145, 1170, 1171, 1308, 1320, 1359, 1363, 1376], "1d": [56, 57, 119, 123, 135, 437, 480, 483, 504, 517, 530, 542, 547, 548, 549, 551, 559, 560, 561, 562, 583, 656, 657, 719, 723, 776, 777, 785, 1088, 1131, 1134, 1155, 1168, 1268, 1280, 1285, 1286, 1287, 1289, 1297, 1298, 1299, 1300, 1373], "were": [56, 57, 155, 157, 164, 518, 561, 656, 657, 732, 734, 741, 804, 806, 813, 1170, 1299, 1320, 1372, 1376], "sampl": [56, 57, 437, 446, 466, 480, 515, 517, 518, 519, 541, 656, 657, 780, 1088, 1097, 1117, 1131, 1166, 1168, 1170, 1171, 1172, 1250, 1252, 1253, 1279, 1327, 1328, 1336, 1356, 1358, 1359, 1362, 1376], "per": [56, 57, 58, 59, 73, 89, 102, 130, 518, 656, 657, 658, 659, 673, 689, 702, 767, 788, 1012, 1074, 1170, 1198, 1214, 1227, 1246, 1247, 1248, 1376], "east": [56, 204, 215, 271, 282, 304, 319, 341, 356, 546, 656, 854, 865, 921, 932, 954, 969, 991, 1006, 1284, 1340, 1372], "u_wind": [56, 57, 518, 519, 656, 657, 1170, 1171, 1359, 1371, 1376], "compon": [56, 57, 58, 59, 478, 493, 494, 656, 657, 658, 659, 1129, 1144, 1145, 1376], "v_wind": [56, 57, 518, 519, 656, 657, 1170, 1171, 1359, 1371, 1376], "classmethod": [57, 410, 657], "_rang": [60, 89, 447, 660, 689, 1098, 1185, 1214], "scan_typ": [60, 89, 187, 203, 254, 270, 287, 303, 324, 340, 660, 689, 837, 853, 904, 920, 937, 953, 974, 990, 1185, 1214, 1373], "sweep_numb": [60, 89, 660, 689, 1185, 1214, 1345, 1364, 1373], "sweep_mod": [60, 89, 366, 660, 689, 1019, 1185, 1214, 1364, 1373], "fixed_angl": [60, 89, 187, 254, 287, 324, 563, 660, 689, 837, 904, 937, 974, 1185, 1214, 1301, 1345, 1346, 1350, 1364, 1373], "sweep_start_ray_index": [60, 89, 660, 689, 1185, 1214, 1364, 1373], "sweep_end_ray_index": [60, 89, 660, 689, 1185, 1214, 1364, 1373], "altitude_agl": [60, 89, 660, 689, 1185, 1214, 1373], "target_scan_r": [60, 89, 660, 689, 1185, 1214, 1373], "rays_are_index": [60, 89, 660, 689, 1185, 1214], "ray_angle_r": [60, 89, 660, 689, 1185, 1214], "scan_rat": [60, 89, 382, 660, 689, 1035, 1185, 1214, 1373], "antenna_transit": [60, 71, 72, 89, 100, 101, 164, 176, 204, 211, 215, 216, 217, 218, 254, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 660, 671, 672, 689, 700, 701, 741, 753, 813, 825, 854, 861, 865, 866, 867, 868, 904, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1185, 1196, 1197, 1214, 1225, 1226, 1373], "instrument_paramet": [60, 89, 130, 382, 452, 454, 660, 689, 767, 779, 1035, 1103, 1105, 1185, 1214, 1320, 1366, 1373], "radar_calibr": [60, 89, 446, 454, 466, 468, 469, 660, 689, 1097, 1105, 1117, 1119, 1120, 1185, 1214, 1373], "tilt": [60, 89, 187, 216, 315, 352, 514, 660, 689, 837, 866, 965, 1002, 1165, 1185, 1214, 1328, 1344, 1351], "roll": [60, 89, 140, 187, 376, 569, 575, 660, 689, 790, 837, 1029, 1185, 1214, 1307, 1313], "drift": [60, 89, 187, 660, 689, 837, 1185, 1214], "head": [60, 89, 187, 660, 689, 837, 1185, 1214], "pitch": [60, 89, 187, 660, 689, 837, 1185, 1214], "georefs_appli": [60, 89, 660, 689, 1185, 1214], "antenna": [60, 71, 72, 89, 100, 101, 118, 119, 120, 127, 135, 138, 139, 143, 145, 146, 164, 176, 181, 185, 204, 211, 215, 216, 217, 218, 254, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 428, 433, 454, 461, 474, 497, 513, 563, 660, 671, 672, 689, 700, 701, 718, 719, 720, 741, 753, 759, 765, 766, 777, 778, 779, 780, 784, 785, 786, 793, 795, 796, 797, 813, 825, 830, 834, 854, 861, 865, 866, 867, 868, 904, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1079, 1084, 1105, 1112, 1125, 1148, 1164, 1185, 1196, 1197, 1214, 1225, 1226, 1301, 1320, 1321, 1325, 1330, 1331, 1332, 1333, 1362, 1368, 1373], "structur": [60, 89, 382, 478, 495, 516, 660, 689, 1035, 1129, 1146, 1167, 1185, 1214, 1327, 1357, 1369], "under": [60, 89, 130, 131, 132, 660, 689, 767, 768, 769, 1074, 1185, 1214, 1357, 1362, 1375, 1376], "sub": [60, 89, 660, 689, 1185, 1214], "meta_group": [60, 89, 660, 689, 1185, 1214, 1373], "instrument": [60, 89, 164, 176, 179, 182, 183, 382, 660, 689, 741, 753, 781, 813, 825, 828, 831, 832, 1035, 1185, 1214, 1366, 1373], "multipl": [60, 89, 138, 146, 437, 478, 513, 515, 660, 689, 784, 796, 1088, 1129, 1164, 1166, 1185, 1214, 1320, 1325, 1330, 1335, 1347, 1353, 1369, 1374, 1378], "ground": [60, 89, 428, 460, 497, 660, 689, 1079, 1111, 1148, 1185, 1214, 1327, 1371], "target": [60, 89, 139, 380, 453, 454, 542, 544, 545, 546, 551, 571, 660, 689, 786, 1033, 1104, 1105, 1185, 1214, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1280, 1282, 1283, 1284, 1289, 1309, 1373], "thr": [60, 89, 660, 689, 1185, 1214], "index": [60, 75, 89, 104, 129, 133, 135, 141, 142, 183, 217, 233, 234, 235, 237, 239, 249, 251, 253, 283, 320, 357, 380, 428, 437, 451, 514, 660, 675, 689, 704, 763, 771, 772, 773, 774, 777, 781, 791, 792, 832, 867, 883, 884, 885, 887, 889, 899, 901, 903, 933, 970, 1007, 1033, 1061, 1079, 1088, 1102, 1165, 1185, 1200, 1214, 1229, 1363, 1376], "rays_per_sweep": [60, 81, 89, 110, 660, 681, 689, 710, 1185, 1206, 1214, 1235, 1246, 1247], "upon": [60, 89, 179, 180, 181, 182, 183, 184, 185, 186, 660, 689, 781, 828, 829, 830, 831, 832, 833, 834, 835, 1185, 1214], "prior": [60, 62, 89, 91, 134, 136, 137, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 376, 660, 662, 689, 691, 775, 782, 783, 854, 861, 864, 865, 866, 867, 868, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1029, 1185, 1187, 1214, 1216, 1328, 1362], "init_rays_per_sweep": [60, 89, 660, 689, 1185, 1214], "intend": [60, 89, 460, 660, 689, 1111, 1185, 1214], "rate": [60, 89, 478, 479, 484, 485, 486, 487, 488, 489, 490, 495, 504, 660, 689, 1129, 1130, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1146, 1155, 1185, 1214, 1357], "whether": [60, 89, 144, 155, 366, 454, 505, 506, 511, 513, 550, 660, 689, 732, 776, 787, 788, 794, 804, 1012, 1019, 1068, 1071, 1105, 1156, 1157, 1162, 1164, 1185, 1214, 1288, 1369], "regular": [60, 89, 381, 442, 450, 460, 473, 476, 596, 597, 613, 614, 660, 689, 1034, 1093, 1101, 1111, 1124, 1127, 1185, 1214, 1336, 1362], "angular": [60, 89, 525, 566, 567, 660, 689, 1185, 1214, 1263, 1304, 1305], "express": [60, 89, 660, 689, 1185, 1214], "360": [60, 89, 134, 316, 353, 540, 660, 689, 770, 775, 966, 1003, 1185, 1214, 1278, 1359, 1364, 1371, 1373], "represent": [60, 89, 409, 660, 689, 1185, 1214], "forbidden": [60, 89, 660, 689, 1185, 1214], "plane": [60, 89, 380, 494, 660, 689, 1033, 1069, 1070, 1145, 1185, 1214, 1373], "180": [60, 89, 120, 122, 513, 540, 660, 689, 720, 722, 787, 788, 1164, 1185, 1214, 1278, 1364, 1376], "gate_z": [60, 72, 89, 101, 660, 672, 689, 701, 1185, 1197, 1214, 1226], "gate_x": [60, 72, 89, 101, 660, 672, 689, 701, 1185, 1197, 1214, 1226], "gate_i": [60, 72, 89, 101, 660, 672, 689, 701, 1185, 1197, 1214, 1226], "system": [60, 89, 121, 122, 123, 129, 133, 136, 137, 141, 142, 362, 372, 380, 439, 449, 497, 660, 689, 721, 722, 723, 763, 771, 782, 783, 791, 792, 1015, 1025, 1033, 1063, 1068, 1071, 1090, 1100, 1148, 1185, 1214, 1370, 1375], "earth": [60, 89, 118, 119, 122, 125, 497, 544, 571, 637, 660, 689, 718, 719, 722, 725, 1148, 1185, 1214, 1282, 1309], "radiu": [60, 89, 118, 119, 120, 122, 125, 479, 495, 497, 516, 544, 571, 637, 660, 689, 718, 719, 720, 722, 725, 1065, 1066, 1067, 1068, 1072, 1073, 1074, 1130, 1146, 1148, 1167, 1185, 1214, 1282, 1309, 1357, 1368], "init_gate_x_y_z": [60, 89, 660, 689, 1185, 1214], "gate_latitud": [60, 71, 79, 89, 100, 108, 660, 671, 679, 689, 700, 708, 1185, 1196, 1204, 1214, 1225, 1233], "gate_longitud": [60, 71, 79, 89, 100, 108, 660, 671, 679, 689, 700, 708, 1185, 1196, 1204, 1214, 1225, 1233, 1364], "init_gate_longitude_latitud": [60, 89, 660, 689, 1185, 1214, 1364], "gate_altitud": [60, 71, 78, 89, 100, 107, 660, 671, 678, 689, 700, 707, 1185, 1196, 1203, 1214, 1225, 1232], "init_gate_altitud": [60, 89, 660, 689, 1185, 1214, 1364], "actual": [60, 89, 376, 380, 478, 660, 689, 778, 1029, 1033, 1068, 1071, 1129, 1185, 1214, 1370, 1378], "flag": [60, 89, 130, 254, 376, 482, 508, 509, 512, 516, 526, 527, 555, 558, 660, 689, 767, 904, 1029, 1133, 1159, 1160, 1163, 1167, 1185, 1214, 1264, 1265, 1293, 1296, 1378], "transit": [60, 71, 72, 89, 100, 101, 164, 176, 179, 182, 183, 204, 211, 215, 216, 217, 218, 254, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 460, 473, 508, 660, 671, 672, 689, 700, 701, 741, 753, 781, 813, 825, 828, 831, 832, 854, 861, 865, 866, 867, 868, 904, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1111, 1124, 1159, 1185, 1196, 1197, 1214, 1225, 1226], "ye": [60, 89, 130, 660, 689, 767, 1185, 1214], "aircraft": [60, 89, 216, 376, 660, 689, 866, 1029, 1185, 1214], "longitudin": [60, 89, 216, 228, 239, 243, 244, 253, 660, 689, 866, 878, 889, 893, 894, 903, 1185, 1214], "orthogon": [60, 89, 455, 494, 660, 689, 1106, 1145, 1185, 1214], "platform": [60, 89, 660, 689, 1185, 1214], "right": [60, 89, 315, 424, 481, 501, 660, 689, 965, 1132, 1152, 1185, 1214, 1336, 1337, 1372], "wing": [60, 89, 660, 689, 1185, 1214], "down": [60, 89, 660, 689, 1185, 1214, 1319], "track": [60, 89, 660, 689, 1185, 1214], "compass": [60, 89, 660, 689, 1185, 1214], "nose": [60, 89, 660, 689, 1185, 1214], "had": [60, 89, 381, 660, 689, 1034, 1185, 1214, 1327, 1378], "georefer": [60, 89, 660, 689, 1185, 1214], "lead": [60, 89, 660, 689, 1185, 1214, 1320, 1331], "centric": [60, 89, 660, 689, 1185, 1214], "avaiabl": [60, 89, 660, 689, 1185, 1214], "radar_paramet": [60, 89, 660, 689, 1185, 1214], "subconvent": [60, 89, 660, 689, 1185, 1214], "calibr": [60, 89, 138, 139, 143, 146, 484, 660, 689, 784, 786, 793, 796, 1135, 1185, 1214], "ngate": [60, 70, 89, 99, 660, 670, 689, 699, 1185, 1195, 1214, 1224, 1246, 1247, 1248, 1364, 1373], "nrai": [60, 70, 89, 99, 447, 545, 660, 670, 689, 699, 1098, 1185, 1195, 1214, 1224, 1248, 1283, 1320, 1364, 1373], "nsweep": [60, 89, 660, 689, 1185, 1214, 1246, 1247, 1345, 1346, 1359, 1373], "loos": [61, 62, 90, 91, 565, 661, 662, 690, 691, 1186, 1187, 1215, 1216, 1303], "existing_field_nam": [62, 91, 662, 691, 1187, 1216], "done": [62, 91, 130, 134, 497, 516, 662, 691, 765, 767, 775, 1148, 1167, 1187, 1216, 1364, 1375, 1376, 1378], "both": [62, 91, 130, 179, 183, 363, 502, 503, 662, 691, 767, 781, 828, 832, 1016, 1153, 1154, 1187, 1216, 1328, 1331, 1333, 1337, 1352, 1362, 1368, 1369, 1370, 1375, 1376], "reflectivity_copi": [62, 91, 662, 691, 1187, 1216], "gatefilt": [63, 92, 130, 131, 132, 134, 137, 179, 180, 181, 182, 183, 184, 185, 186, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 428, 482, 507, 508, 509, 514, 518, 519, 663, 692, 756, 757, 758, 767, 768, 769, 770, 775, 781, 783, 828, 829, 830, 831, 832, 833, 834, 835, 854, 861, 864, 865, 866, 867, 868, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1061, 1072, 1073, 1074, 1079, 1133, 1158, 1159, 1160, 1165, 1170, 1171, 1188, 1217, 1323, 1331, 1332, 1333, 1337, 1356, 1363, 1366, 1372, 1376], "updat": [63, 92, 481, 540, 663, 692, 1132, 1188, 1217, 1278, 1320, 1338, 1357, 1362, 1370, 1376], "mask": [63, 92, 130, 131, 132, 135, 140, 155, 157, 160, 164, 171, 175, 176, 179, 181, 182, 183, 184, 185, 186, 204, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 372, 373, 374, 428, 442, 450, 460, 473, 476, 510, 553, 565, 596, 597, 613, 614, 663, 692, 732, 734, 737, 741, 748, 752, 753, 767, 768, 769, 770, 777, 781, 790, 804, 806, 809, 813, 820, 824, 825, 828, 830, 831, 832, 833, 834, 835, 854, 861, 864, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1025, 1026, 1027, 1074, 1079, 1093, 1101, 1111, 1124, 1127, 1161, 1188, 1217, 1249, 1291, 1303, 1320, 1322, 1331, 1332, 1357, 1363, 1364, 1365, 1370, 1371, 1372, 1373], "condit": [63, 92, 130, 151, 155, 157, 164, 171, 176, 381, 663, 692, 728, 732, 734, 741, 748, 753, 767, 800, 804, 806, 813, 820, 825, 1034, 1188, 1217, 1323, 1365, 1369], "append": [63, 92, 663, 692, 1188, 1217, 1359], "filtered_": [63, 92, 663, 692, 1188, 1217], "check": [64, 73, 93, 102, 131, 132, 134, 375, 427, 478, 481, 510, 544, 555, 571, 576, 664, 673, 693, 702, 768, 769, 770, 775, 787, 788, 1028, 1078, 1129, 1132, 1161, 1189, 1198, 1218, 1227, 1282, 1293, 1309, 1314, 1362, 1375, 1376, 1377], "keyerror": [64, 93, 417, 418, 664, 693, 1044, 1045, 1055, 1056, 1189, 1218, 1375], "array_lik": [65, 94, 557, 665, 694, 1190, 1219, 1295], "view": [66, 67, 69, 95, 96, 98, 383, 415, 416, 422, 666, 667, 669, 695, 696, 698, 1037, 1042, 1043, 1049, 1053, 1054, 1059, 1191, 1192, 1194, 1220, 1221, 1223, 1337, 1366, 1368, 1373], "possibl": [66, 67, 69, 95, 96, 98, 376, 437, 511, 541, 548, 666, 667, 669, 695, 696, 698, 1029, 1088, 1162, 1191, 1192, 1194, 1220, 1221, 1223, 1279, 1286, 1320, 1336, 1357, 1366, 1368, 1370, 1371], "underli": [66, 67, 69, 95, 96, 98, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 363, 666, 667, 669, 695, 696, 698, 854, 861, 865, 866, 867, 868, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1016, 1191, 1192, 1194, 1220, 1221, 1223, 1362], "get_gate_x_y_z": [69, 98, 669, 698, 1194, 1223, 1347, 1348], "obtain": [69, 72, 98, 101, 127, 145, 433, 443, 453, 454, 463, 481, 511, 568, 669, 672, 698, 701, 759, 787, 795, 1084, 1094, 1104, 1105, 1114, 1132, 1162, 1194, 1197, 1223, 1226, 1306, 1359, 1364, 1371, 1372, 1376], "plot": [69, 72, 98, 101, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 442, 450, 460, 473, 476, 514, 519, 669, 672, 698, 701, 837, 838, 839, 840, 841, 842, 843, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 939, 940, 941, 942, 943, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 974, 975, 976, 977, 978, 979, 980, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1093, 1101, 1111, 1124, 1127, 1165, 1171, 1194, 1197, 1223, 1226, 1320, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1353, 1354, 1355, 1357, 1360, 1362, 1364, 1365, 1366, 1368, 1369, 1372, 1374], "spatial": [69, 72, 98, 101, 130, 669, 672, 698, 701, 767, 1194, 1197, 1223, 1226, 1320, 1368, 1372], "context": [69, 72, 98, 101, 669, 672, 698, 701, 1194, 1197, 1223, 1226, 1355, 1362, 1376], "request": [69, 98, 123, 372, 503, 669, 698, 723, 1025, 1072, 1073, 1074, 1154, 1194, 1223, 1320, 1362, 1376], "area": [70, 99, 204, 206, 211, 215, 216, 217, 218, 219, 271, 273, 278, 282, 283, 284, 285, 304, 306, 314, 315, 319, 320, 321, 322, 341, 343, 351, 352, 356, 357, 358, 359, 478, 497, 509, 516, 553, 670, 699, 766, 854, 856, 861, 865, 866, 867, 868, 869, 921, 923, 928, 932, 933, 934, 935, 954, 956, 964, 965, 969, 970, 971, 972, 991, 993, 1001, 1002, 1006, 1007, 1008, 1009, 1129, 1148, 1160, 1167, 1195, 1224, 1291], "squar": [70, 99, 427, 502, 505, 506, 507, 518, 531, 670, 699, 787, 1078, 1153, 1156, 1157, 1158, 1170, 1195, 1224, 1269], "assumpt": [70, 99, 494, 507, 670, 699, 1145, 1158, 1195, 1224], "size": [70, 99, 130, 131, 134, 182, 207, 274, 307, 344, 408, 425, 427, 437, 448, 465, 468, 469, 479, 482, 495, 507, 509, 511, 525, 542, 552, 560, 575, 670, 699, 758, 767, 768, 770, 775, 831, 857, 924, 957, 994, 1067, 1069, 1070, 1072, 1073, 1074, 1076, 1078, 1088, 1099, 1116, 1119, 1120, 1130, 1133, 1146, 1158, 1160, 1162, 1195, 1224, 1249, 1263, 1280, 1290, 1298, 1313, 1338, 1351, 1355, 1357], "reset_gate_coord": [71, 100, 671, 700, 1196, 1225], "filter_transit": [71, 72, 100, 101, 204, 211, 215, 216, 217, 218, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 671, 672, 700, 701, 854, 861, 865, 866, 867, 868, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1196, 1197, 1225, 1226], "With": [71, 72, 100, 101, 671, 672, 700, 701, 1196, 1197, 1225, 1226, 1362, 1363, 1364], "therefor": [71, 72, 100, 101, 507, 671, 672, 700, 701, 1158, 1196, 1197, 1225, 1226, 1366, 1372, 1373], "more": [71, 72, 77, 100, 101, 106, 131, 134, 234, 380, 428, 478, 479, 482, 495, 516, 533, 534, 671, 672, 677, 700, 701, 706, 768, 775, 787, 884, 1033, 1068, 1071, 1072, 1073, 1074, 1079, 1129, 1130, 1133, 1146, 1167, 1196, 1197, 1202, 1225, 1226, 1231, 1271, 1272, 1320, 1331, 1336, 1347, 1348, 1362, 1366, 1370, 1371, 1372, 1373, 1376], "effici": [71, 72, 100, 101, 478, 532, 671, 672, 700, 701, 1072, 1073, 1129, 1196, 1197, 1225, 1226, 1270, 1362, 1366], "than": [71, 72, 100, 101, 131, 137, 140, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 478, 479, 495, 497, 507, 540, 553, 563, 671, 672, 700, 701, 768, 778, 783, 790, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1129, 1130, 1146, 1148, 1158, 1196, 1197, 1225, 1226, 1278, 1291, 1301, 1320, 1357, 1370, 1371, 1372, 1378], "through": [71, 72, 100, 101, 218, 284, 321, 358, 443, 463, 504, 671, 672, 700, 701, 868, 934, 971, 1008, 1094, 1114, 1155, 1196, 1197, 1225, 1226, 1331, 1336, 1371, 1376], "pleas": [71, 100, 287, 324, 582, 671, 700, 937, 974, 1196, 1225, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "get_field": [72, 101, 672, 701, 1197, 1226, 1347, 1348, 1370], "check_uniform": [73, 102, 673, 702, 1198, 1227], "lookuperror": [73, 102, 673, 702, 1198, 1227], "except": [73, 102, 380, 673, 702, 1033, 1050, 1198, 1227, 1368], "skip": [73, 102, 131, 132, 375, 427, 673, 702, 768, 769, 1028, 1078, 1198, 1227, 1371, 1376], "nyquist_veloc": [73, 102, 131, 132, 382, 673, 702, 768, 769, 1035, 1198, 1227, 1366, 1373], "slice": [74, 86, 103, 115, 230, 231, 236, 237, 238, 239, 250, 251, 252, 253, 674, 686, 703, 715, 880, 881, 886, 887, 888, 889, 900, 901, 902, 903, 1199, 1211, 1228, 1240, 1351, 1368, 1371, 1373], "out": [77, 106, 137, 181, 185, 378, 379, 380, 381, 382, 428, 496, 505, 506, 581, 585, 596, 597, 613, 614, 677, 706, 770, 773, 774, 783, 787, 788, 789, 830, 834, 1031, 1032, 1033, 1034, 1035, 1079, 1147, 1156, 1157, 1202, 1231, 1332, 1333, 1337, 1348, 1356, 1358, 1362, 1368, 1372, 1375, 1376, 1377], "_io": [77, 106, 677, 706, 1202, 1231], "textiowrapp": [77, 106, 677, 706, 1202, 1231], "stdout": [77, 106, 581, 677, 706, 1202, 1231], "encod": [77, 106, 381, 520, 677, 706, 1034, 1202, 1231, 1320], "utf": [77, 106, 520, 677, 706, 1202, 1231], "print": [77, 106, 136, 137, 221, 240, 376, 507, 581, 585, 596, 597, 613, 614, 677, 706, 756, 782, 783, 871, 890, 1029, 1158, 1202, 1231, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1357, 1365, 1369, 1370, 1373], "compact": [77, 106, 677, 706, 1202, 1231], "f": [77, 106, 246, 352, 421, 677, 706, 896, 1002, 1048, 1058, 1202, 1231, 1336, 1345, 1346, 1350, 1357, 1362, 1371, 1378], "minim": [77, 106, 481, 507, 516, 677, 706, 1132, 1158, 1167, 1202, 1231], "everyth": [77, 106, 677, 706, 1202, 1231, 1328, 1376], "output": [77, 106, 380, 428, 443, 463, 478, 481, 482, 497, 504, 511, 513, 544, 677, 706, 762, 1033, 1069, 1079, 1094, 1114, 1129, 1132, 1133, 1148, 1155, 1162, 1164, 1202, 1231, 1282, 1320, 1362, 1370, 1372], "screen": [77, 106, 677, 706, 1202, 1231], "gate_": [80, 109, 680, 709, 1205, 1234], "iter": [82, 83, 84, 85, 86, 87, 88, 111, 112, 113, 114, 115, 116, 117, 397, 421, 437, 452, 483, 507, 509, 542, 682, 683, 684, 685, 686, 687, 688, 711, 712, 713, 714, 715, 716, 717, 779, 1048, 1058, 1088, 1103, 1134, 1158, 1160, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1280, 1373], "over": [84, 87, 88, 113, 116, 117, 130, 131, 135, 181, 204, 206, 211, 215, 216, 217, 218, 235, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 397, 478, 479, 495, 497, 500, 513, 515, 541, 552, 684, 687, 688, 713, 716, 717, 765, 766, 767, 768, 772, 777, 787, 788, 830, 854, 856, 861, 865, 866, 867, 868, 885, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1071, 1129, 1130, 1146, 1148, 1151, 1164, 1166, 1209, 1212, 1213, 1238, 1241, 1242, 1279, 1290, 1331, 1357, 1359, 1362, 1365, 1371, 1373], "npuls": [89, 542, 547, 548, 549, 559, 560, 561, 562, 689, 1214, 1280, 1285, 1286, 1287, 1297, 1298, 1299, 1300], "doppler_veloc": [89, 481, 689, 1132, 1214], "doppler_frequ": [89, 689, 1214], "puls": [89, 138, 146, 452, 453, 497, 542, 547, 548, 549, 555, 559, 560, 561, 562, 689, 779, 784, 796, 1103, 1104, 1148, 1214, 1248, 1280, 1285, 1286, 1287, 1293, 1297, 1298, 1299, 1300, 1366], "npulses_max": [89, 689, 1214, 1248], "frequenc": [89, 382, 425, 437, 453, 454, 475, 484, 485, 486, 488, 489, 497, 498, 499, 507, 508, 509, 517, 689, 757, 758, 1035, 1076, 1088, 1104, 1105, 1126, 1135, 1136, 1137, 1139, 1140, 1148, 1149, 1150, 1158, 1159, 1160, 1168, 1214, 1372], "ke": [118, 119, 120, 497, 637, 718, 719, 720, 1148, 1320], "kilomet": [118, 479, 495, 718, 1069, 1130, 1146], "effect": [118, 119, 120, 138, 146, 155, 157, 164, 171, 176, 216, 475, 497, 718, 719, 720, 732, 734, 741, 748, 753, 784, 796, 804, 806, 813, 820, 825, 866, 1072, 1073, 1074, 1126, 1148, 1347, 1371], "scale": [118, 119, 120, 204, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 381, 382, 444, 478, 507, 508, 718, 719, 720, 854, 861, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1012, 1034, 1035, 1072, 1073, 1074, 1095, 1129, 1158, 1159, 1339, 1372], "equat": [118, 507, 541, 718, 1158, 1279], "28": [118, 718, 1353, 1357, 1359, 1362, 1371, 1376], "b": [118, 478, 479, 495, 508, 519, 718, 1011, 1129, 1130, 1146, 1159, 1171, 1376], "doviak": [118, 425, 718, 1076], "zrnic": [118, 425, 473, 718, 1076, 1124], "sqrt": [118, 122, 497, 718, 722, 1148, 1347, 1348, 1359, 1371], "r": [118, 121, 122, 123, 124, 125, 130, 132, 136, 137, 194, 209, 210, 232, 248, 261, 276, 277, 294, 309, 310, 311, 312, 331, 346, 347, 348, 349, 432, 442, 446, 451, 452, 460, 466, 478, 479, 482, 485, 488, 489, 490, 495, 511, 513, 516, 518, 541, 542, 553, 718, 721, 722, 723, 724, 725, 767, 769, 782, 783, 844, 859, 860, 882, 898, 911, 926, 927, 944, 959, 960, 961, 962, 981, 996, 997, 998, 999, 1083, 1093, 1097, 1102, 1103, 1111, 1117, 1129, 1130, 1133, 1136, 1139, 1140, 1141, 1146, 1162, 1164, 1167, 1170, 1279, 1280, 1291, 1327, 1339, 1347, 1348, 1357, 1376], "sin": [118, 122, 125, 494, 718, 722, 725, 1145], "theta_": [118, 718], "arcsin": [118, 122, 718, 722], "frac": [118, 718], "theta_a": [118, 718], "arc": [118, 544, 718, 1282], "length": [118, 136, 137, 140, 141, 142, 482, 497, 507, 511, 547, 559, 560, 718, 782, 783, 787, 788, 789, 790, 791, 792, 1133, 1148, 1158, 1162, 1285, 1297, 1298], "6371": [118, 122, 125, 544, 571, 718, 722, 725, 1282, 1309], "weather": [118, 130, 138, 139, 143, 146, 442, 452, 460, 497, 507, 542, 645, 718, 767, 784, 786, 793, 796, 1068, 1071, 1093, 1103, 1111, 1148, 1158, 1280, 1327, 1336, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "edit": [118, 718, 1376], "1993": [118, 425, 718, 1076], "21": [118, 718, 1320, 1370], "vector": [119, 123, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 447, 502, 504, 505, 506, 529, 531, 532, 719, 723, 776, 785, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1098, 1153, 1155, 1156, 1157, 1267, 1269, 1270, 1371], "util": [119, 130, 131, 216, 484, 719, 758, 767, 768, 866, 1135, 1172, 1322, 1328, 1339, 1352, 1355, 1357, 1370, 1371, 1372, 1376], "antenna_to_cartesian": [119, 719], "cartograph": [121, 122, 123, 124, 125, 324, 721, 722, 723, 724, 725, 974], "build": [121, 123, 124, 151, 155, 157, 164, 171, 176, 382, 581, 721, 723, 724, 728, 732, 734, 741, 748, 753, 800, 804, 806, 813, 820, 825, 1035, 1362, 1375, 1376], "desir": [121, 123, 124, 155, 157, 164, 171, 176, 383, 460, 479, 495, 518, 548, 549, 562, 572, 573, 721, 723, 724, 732, 734, 741, 748, 753, 804, 806, 813, 820, 825, 1037, 1111, 1130, 1146, 1170, 1244, 1286, 1287, 1300, 1310, 1311, 1355, 1369], "6370997": [122, 125, 722, 725], "rho": [122, 722, 1370], "arctan2": [122, 722, 1359, 1371], "snyder": [122, 125, 722, 725], "manual": [122, 125, 722, 725, 1362], "geolog": [122, 125, 722, 725], "survei": [122, 125, 722, 725], "profession": [122, 125, 722, 725], "paper": [122, 125, 482, 722, 725, 1133, 1362, 1376], "1395": [122, 125, 722, 725], "1987": [122, 125, 722, 725], "pp": [122, 125, 425, 442, 450, 460, 473, 722, 725, 1076, 1093, 1101, 1111, 1124], "191": [122, 125, 722, 725], "202": [122, 125, 722, 725, 1347, 1353, 1374], "find": [123, 131, 134, 495, 496, 513, 543, 723, 768, 775, 787, 788, 1061, 1068, 1072, 1073, 1074, 1146, 1147, 1164, 1281, 1328, 1371, 1378], "arcco": [125, 725], "no_altitude_transform": [126, 726], "wgs84": [126, 218, 284, 321, 358, 380, 726, 868, 934, 971, 1008, 1033], "ch1903": [126, 726], "lv03": [126, 726], "formula": [126, 425, 726, 1076], "formeln": [126, 726], "und": [126, 726], "konstanten": [126, 726], "f\u00fcr": [126, 726], "die": [126, 726], "berechnung": [126, 726], "der": [126, 726], "schweizerischen": [126, 726], "schiefachsigen": [126, 726], "zylinderprojekt": [126, 726], "zwischen": [126, 726], "koordinatensystemen": [126, 726], "chapter": [126, 726], "n\u00e4herungsl\u00f6sungen": [126, 726], "bundesamt": [126, 726], "landestopografi": [126, 726], "swisstopo": [126, 726], "admin": [126, 726, 1376], "ch": [126, 726, 1358, 1359], "oktob": [126, 726], "2008": [126, 478, 511, 726, 1129, 1162, 1328], "input": [126, 136, 137, 380, 443, 451, 452, 463, 480, 481, 495, 497, 503, 504, 509, 511, 528, 540, 553, 726, 782, 783, 1033, 1069, 1070, 1094, 1102, 1103, 1114, 1131, 1132, 1146, 1148, 1154, 1155, 1160, 1162, 1266, 1278, 1291, 1357, 1369, 1372], "46": [126, 218, 284, 321, 358, 726, 868, 934, 971, 1008, 1355, 1372], "38": [126, 726, 1328], "87": [126, 726, 1068, 1071], "43": [126, 726, 1320], "49": [126, 726], "79": [126, 726], "650": [126, 726], "60": [126, 726, 1061, 1322, 1327, 1331, 1333, 1338, 1364, 1366, 1368, 1372], "result": [126, 130, 131, 132, 155, 157, 164, 171, 176, 204, 211, 214, 215, 216, 217, 218, 231, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 362, 379, 383, 428, 481, 505, 506, 511, 512, 514, 518, 519, 520, 530, 542, 569, 726, 732, 734, 741, 748, 753, 765, 766, 767, 768, 769, 785, 804, 806, 813, 820, 825, 854, 861, 864, 865, 866, 867, 868, 881, 887, 889, 899, 901, 903, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1015, 1032, 1037, 1069, 1070, 1074, 1079, 1132, 1156, 1157, 1162, 1163, 1165, 1170, 1171, 1268, 1280, 1307, 1328, 1358, 1362, 1368, 1371, 1376], "chy": [126, 726], "699": [126, 726], "999": [126, 130, 383, 726, 767, 1037, 1328, 1329, 1374], "76": [126, 726], "700000": [126, 726], "chx": [126, 726], "99": [126, 433, 513, 726, 1084, 1164, 1336], "97": [126, 726, 773, 774, 1331, 1333, 1337, 1339, 1351, 1355, 1357, 1364], "100000": [126, 726, 1368, 1371], "chh": [126, 726], "600": [126, 726, 1364], "05": [126, 130, 517, 726, 767, 1072, 1073, 1074, 1168, 1334, 1351, 1355, 1360, 1374], "ml_top": [127, 128, 433, 501, 759, 760, 1084, 1152], "3000": [127, 128, 433, 500, 516, 759, 760, 1084, 1151, 1167, 1364, 1368], "ml_thick": [127, 128, 433, 759, 760, 1084], "200": [127, 128, 425, 433, 478, 513, 542, 561, 562, 759, 760, 765, 766, 1076, 1084, 1129, 1164, 1280, 1299, 1300, 1370, 1376], "val_ml": [127, 128, 759, 760], "val_dr": [127, 128, 759, 760], "h_max": [127, 128, 433, 513, 759, 760, 765, 766, 1084, 1164], "6000": [127, 128, 433, 511, 513, 759, 760, 765, 766, 1084, 1162, 1164, 1364, 1368], "h_re": [127, 128, 433, 513, 759, 760, 765, 766, 1084, 1164], "max_weight": [127, 759, 765, 766], "vpr_theo_dict": [127, 759], "refl_field": [127, 129, 133, 136, 137, 141, 142, 179, 182, 183, 426, 453, 454, 455, 461, 462, 475, 478, 479, 480, 482, 485, 487, 488, 489, 490, 504, 505, 511, 516, 756, 757, 758, 759, 763, 765, 766, 771, 772, 773, 774, 781, 782, 783, 787, 788, 789, 791, 792, 828, 831, 832, 1074, 1077, 1104, 1105, 1106, 1112, 1113, 1126, 1129, 1130, 1131, 1133, 1136, 1138, 1139, 1140, 1141, 1155, 1156, 1162, 1167, 1322, 1357, 1358, 1372], "normalized_reflect": [127, 759], "comput": [127, 128, 139, 146, 182, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 495, 497, 500, 504, 505, 506, 507, 508, 509, 511, 513, 515, 518, 521, 522, 523, 524, 525, 528, 529, 530, 531, 532, 542, 552, 556, 557, 559, 561, 562, 566, 567, 575, 757, 758, 759, 760, 762, 765, 766, 778, 779, 780, 785, 786, 787, 788, 796, 831, 1071, 1076, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1146, 1148, 1151, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1164, 1166, 1170, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1268, 1269, 1270, 1280, 1290, 1294, 1295, 1297, 1299, 1300, 1304, 1305, 1313, 1358, 1359, 1362, 1371], "appar": [127, 433, 759, 1084], "vpr": [127, 759, 765, 766, 1320, 1362], "melt": [127, 128, 181, 185, 433, 482, 485, 501, 507, 511, 512, 513, 514, 553, 759, 760, 765, 766, 772, 773, 787, 788, 789, 830, 834, 1084, 1133, 1136, 1152, 1158, 1162, 1163, 1164, 1165, 1291, 1320, 1339, 1357, 1358, 1372], "layer": [127, 128, 135, 181, 185, 380, 433, 482, 485, 501, 507, 511, 512, 513, 514, 756, 757, 758, 759, 760, 765, 766, 772, 773, 777, 787, 788, 789, 830, 834, 1033, 1084, 1133, 1136, 1152, 1158, 1162, 1163, 1164, 1165, 1249, 1320, 1372], "top": [127, 128, 138, 146, 240, 315, 433, 482, 491, 492, 501, 510, 511, 512, 513, 759, 760, 765, 766, 784, 796, 890, 965, 1074, 1084, 1133, 1142, 1143, 1152, 1161, 1162, 1163, 1164, 1336, 1355, 1368, 1376], "asl": [127, 128, 433, 759, 760, 1084], "thick": [127, 128, 135, 181, 185, 433, 513, 759, 760, 765, 766, 772, 773, 777, 787, 788, 789, 830, 834, 1084, 1164], "peak": [127, 128, 433, 511, 513, 541, 759, 760, 765, 766, 1084, 1162, 1164, 1279, 1320, 1366], "decreas": [127, 128, 480, 500, 504, 759, 760, 765, 766, 1131, 1151, 1155], "ratio": [127, 128, 182, 183, 184, 219, 285, 322, 359, 426, 435, 436, 497, 759, 760, 765, 766, 774, 781, 831, 832, 833, 869, 935, 972, 1009, 1077, 1086, 1087, 1148, 1372, 1373], "theoret": [127, 146, 433, 517, 759, 765, 766, 796, 1068, 1071, 1084, 1168], "beam": [127, 139, 433, 484, 497, 758, 759, 786, 1067, 1072, 1073, 1074, 1084, 1135, 1148], "multipli": [127, 433, 443, 479, 495, 513, 759, 1011, 1084, 1094, 1130, 1146, 1164, 1357, 1364], "radar_out": [127, 433, 759, 1084], "normal": [127, 136, 183, 204, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 278, 282, 283, 284, 304, 314, 315, 319, 320, 321, 341, 351, 352, 356, 357, 358, 410, 504, 565, 756, 759, 765, 766, 781, 782, 832, 854, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 928, 932, 933, 934, 954, 964, 965, 969, 970, 971, 991, 1001, 1002, 1006, 1007, 1008, 1155, 1303, 1347], "conta": [127, 128, 433, 482, 511, 512, 513, 583, 759, 760, 1084, 1133, 1162, 1163, 1164], "ideal": [128, 760], "val_theo_dict": [128, 760], "bottom": [128, 313, 315, 350, 433, 482, 501, 511, 512, 513, 760, 963, 965, 1000, 1084, 1133, 1152, 1162, 1163, 1164, 1336, 1338], "ind_rmin": [129, 133, 141, 142, 451, 763, 771, 772, 773, 774, 791, 792, 1102], "10": [129, 133, 136, 137, 141, 142, 143, 146, 151, 184, 186, 218, 284, 321, 358, 425, 437, 442, 452, 473, 479, 482, 493, 495, 504, 508, 509, 511, 513, 542, 553, 728, 763, 770, 771, 772, 773, 774, 779, 782, 783, 791, 792, 793, 796, 800, 833, 835, 868, 934, 971, 1008, 1068, 1071, 1074, 1076, 1088, 1093, 1103, 1124, 1130, 1133, 1144, 1146, 1155, 1159, 1160, 1162, 1164, 1280, 1291, 1323, 1328, 1331, 1332, 1336, 1339, 1340, 1342, 1344, 1347, 1348, 1351, 1357, 1359, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1376], "ind_rmax": [129, 133, 141, 142, 763, 771, 772, 773, 774, 791, 792], "500": [129, 133, 141, 142, 511, 763, 771, 772, 773, 774, 791, 792, 1061, 1162, 1331, 1337, 1341, 1370, 1371], "min_rcon": [129, 133, 141, 142, 763, 771, 787, 788, 791, 792], "11": [129, 133, 140, 141, 142, 218, 284, 321, 358, 434, 479, 495, 505, 506, 569, 763, 771, 790, 791, 792, 868, 934, 971, 1008, 1085, 1130, 1146, 1156, 1157, 1307, 1328, 1355, 1369, 1373], "zmin": [129, 133, 141, 142, 763, 771, 772, 773, 774, 791, 792, 1371], "20": [129, 133, 141, 142, 179, 182, 183, 433, 511, 513, 514, 763, 765, 766, 771, 772, 773, 778, 781, 787, 788, 789, 791, 792, 828, 831, 832, 1084, 1162, 1164, 1165, 1319, 1327, 1328, 1331, 1337, 1338, 1339, 1342, 1344, 1345, 1346, 1347, 1348, 1350, 1356, 1357, 1364, 1368, 1371, 1373], "zmax": [129, 133, 141, 142, 763, 771, 772, 773, 774, 791, 792, 1371], "40": [129, 132, 133, 141, 142, 246, 437, 478, 505, 547, 763, 769, 771, 772, 791, 792, 896, 1088, 1129, 1156, 1285, 1323, 1333, 1338, 1342, 1344, 1347, 1357, 1370, 1371, 1372], "psidp_field": [129, 141, 142, 507, 508, 509, 763, 791, 792, 1158, 1159, 1160, 1358, 1372], "public": [129, 133, 763, 771, 1319, 1364, 1365, 1366, 1368, 1369, 1370, 1373], "min": [129, 133, 141, 142, 179, 206, 273, 306, 343, 451, 511, 555, 763, 765, 766, 771, 772, 773, 774, 778, 791, 792, 828, 856, 923, 956, 993, 1071, 1102, 1162, 1293, 1359, 1371], "max": [129, 133, 141, 142, 179, 206, 273, 306, 343, 380, 451, 482, 511, 555, 763, 765, 766, 771, 772, 773, 774, 787, 788, 791, 792, 828, 856, 923, 956, 993, 1012, 1033, 1071, 1102, 1133, 1162, 1293, 1327, 1331, 1336, 1337, 1342, 1350, 1359, 1371], "look": [129, 133, 141, 142, 144, 145, 428, 450, 451, 511, 514, 543, 559, 561, 562, 763, 771, 772, 773, 774, 778, 787, 788, 789, 791, 792, 794, 795, 1079, 1101, 1102, 1162, 1165, 1281, 1297, 1299, 1300, 1327, 1328, 1331, 1338, 1362, 1364, 1366, 1368, 1371, 1372, 1373], "continu": [129, 130, 132, 133, 136, 141, 142, 512, 763, 767, 769, 771, 782, 791, 792, 1163], "consecut": [129, 133, 141, 142, 511, 542, 763, 771, 787, 788, 791, 792, 1162, 1280], "rain": [129, 133, 141, 142, 433, 442, 460, 478, 484, 485, 486, 487, 490, 495, 516, 756, 758, 763, 771, 772, 773, 787, 788, 789, 791, 792, 1084, 1093, 1111, 1129, 1135, 1136, 1137, 1138, 1141, 1146, 1167, 1339, 1347, 1357, 1358, 1371, 1372], "cell": [129, 133, 141, 142, 763, 771, 791, 792, 1071, 1347], "phidp_dict": [129, 141, 142, 438, 439, 763, 791, 792, 1089, 1090], "last_radar": [130, 767], "sonde_profil": [130, 767], "filt": [130, 767], "rsl_badval": [130, 767], "131072": [130, 767], "keep_origin": [130, 131, 132, 767, 768, 769], "set_limit": [130, 131, 132, 767, 768, 769, 1339, 1340, 1341, 1343, 1345, 1346, 1347, 1348, 1350], "vel_field": [130, 131, 132, 179, 427, 494, 519, 767, 768, 769, 828, 1078, 1145, 1171, 1366], "corr_vel_field": [130, 131, 132, 767, 768, 769], "last_vel_field": [130, 767], "debug": [130, 136, 137, 221, 240, 376, 507, 581, 756, 767, 782, 783, 871, 890, 1029, 1158], "max_shear": [130, 767], "sign": [130, 493, 518, 519, 767, 1144, 1170, 1171, 1320, 1347, 1348, 1371], "dealia": [130, 131, 132, 481, 767, 768, 769, 1132, 1320, 1321, 1324, 1325, 1366, 1371, 1374], "4dd": [130, 767, 1320], "univers": [130, 377, 490, 767, 1030, 1141, 1362], "washington": [130, 767], "previou": [130, 315, 352, 481, 511, 765, 766, 767, 965, 1002, 1132, 1162], "sound": [130, 493, 518, 519, 767, 1144, 1170, 1171], "must": [130, 315, 365, 369, 370, 375, 381, 425, 478, 482, 497, 502, 507, 508, 509, 512, 520, 570, 756, 757, 758, 767, 965, 1018, 1022, 1023, 1028, 1034, 1076, 1129, 1133, 1148, 1153, 1158, 1159, 1160, 1163, 1308, 1357, 1362, 1370, 1375, 1376], "For": [130, 230, 236, 238, 250, 252, 370, 380, 505, 506, 507, 767, 880, 886, 888, 900, 902, 1023, 1033, 1072, 1073, 1156, 1157, 1158, 1327, 1331, 1358, 1369, 1373, 1376, 1378], "best": [130, 767], "argument": [130, 131, 132, 204, 211, 215, 216, 217, 218, 230, 231, 233, 234, 235, 236, 237, 238, 239, 249, 250, 251, 252, 253, 271, 278, 282, 283, 284, 304, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 348, 349, 350, 351, 352, 353, 356, 357, 358, 372, 374, 382, 383, 508, 509, 767, 768, 769, 854, 861, 865, 866, 867, 868, 880, 881, 883, 884, 885, 886, 887, 888, 889, 899, 900, 901, 902, 903, 921, 928, 932, 933, 934, 954, 961, 962, 963, 964, 965, 966, 969, 970, 971, 991, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1012, 1025, 1027, 1035, 1037, 1068, 1071, 1074, 1159, 1160, 1320, 1376], "_fourdd_interfac": [130, 767], "fourdd_dealia": [130, 767], "fine": [130, 767], "tune": [130, 767, 1357], "behavior": [130, 315, 370, 383, 767, 965, 1023, 1037], "fourdd": [130, 767], "dealias": [130, 131, 132, 481, 767, 768, 769, 1132, 1323, 1327, 1362, 1363, 1370, 1376], "reflectivity_horizont": [130, 756, 767, 1251, 1322, 1331, 1336, 1338, 1342, 1344, 1345, 1346, 1350, 1352, 1355, 1356, 1357, 1364, 1365], "mean_doppler_veloc": [130, 767, 1350, 1355, 1364], "successfulli": [130, 767], "greatli": [130, 767], "improv": [130, 508, 509, 553, 767, 1159, 1160, 1291, 1320, 1339], "final": [130, 437, 483, 508, 509, 767, 1088, 1134, 1159, 1160, 1357, 1371], "horizontalwindprofil": [130, 364, 365, 519, 570, 767, 1017, 1018, 1171, 1308, 1376], "sond": [130, 131, 364, 365, 496, 767, 768, 1017, 1018, 1147, 1323], "moment_based_gate_filt": [130, 131, 132, 767, 768, 769, 1074], "bergen": [130, 767], "alber": [130, 767], "bad": [130, 482, 507, 508, 509, 516, 767, 1133, 1158, 1159, 1160, 1167, 1371], "rsl": [130, 363, 375, 376, 767, 1016, 1028, 1029, 1320, 1362, 1375], "procedur": [130, 131, 132, 767, 768, 769], "fail": [130, 131, 132, 370, 380, 767, 768, 769, 1023, 1033, 1376], "element": [130, 131, 132, 134, 151, 382, 510, 556, 557, 566, 567, 728, 767, 768, 769, 770, 775, 800, 1035, 1069, 1070, 1072, 1073, 1074, 1161, 1294, 1295, 1304, 1305, 1371], "maxshear": [130, 767], "shear": [130, 491, 492, 767, 1142, 1143], "incorpor": [130, 495, 767, 1146, 1357], "toward": [130, 493, 518, 519, 767, 1144, 1170, 1171], "neg": [130, 204, 215, 271, 282, 304, 319, 341, 356, 481, 493, 507, 518, 519, 540, 767, 854, 865, 921, 932, 954, 969, 991, 1006, 1132, 1144, 1158, 1170, 1171, 1278, 1320, 1336, 1371], "compthresh": [130, 767], "fraction": [130, 767, 1069, 1070, 1357, 1373], "threshold": [130, 134, 179, 181, 182, 183, 184, 185, 186, 437, 478, 479, 482, 483, 485, 488, 489, 493, 495, 541, 542, 547, 548, 549, 553, 559, 560, 561, 562, 767, 770, 775, 780, 781, 828, 830, 831, 832, 833, 834, 835, 1011, 1088, 1129, 1130, 1133, 1134, 1136, 1139, 1140, 1144, 1146, 1279, 1280, 1285, 1286, 1287, 1291, 1297, 1298, 1299, 1300, 1357, 1366, 1369], "mark": [130, 151, 155, 164, 176, 728, 732, 741, 753, 767, 800, 804, 813, 825], "begin": [130, 131, 132, 136, 137, 151, 189, 191, 211, 215, 256, 258, 278, 282, 289, 291, 314, 319, 326, 328, 351, 356, 370, 371, 374, 376, 728, 767, 768, 769, 782, 783, 800, 839, 841, 861, 865, 906, 908, 928, 932, 939, 941, 964, 969, 976, 978, 1001, 1006, 1023, 1024, 1027, 1029], "unfold": [130, 131, 136, 137, 507, 767, 768, 782, 783, 1158, 1371], "compthresh2": [130, 767], "thresh": [130, 485, 488, 489, 767, 1136, 1139, 1140, 1372], "adjac": [130, 767], "count": [130, 767, 1331, 1366, 1373], "against": [130, 155, 732, 767, 804, 1347], "question": [130, 767, 1013, 1074], "ckval": [130, 767], "absolut": [130, 215, 282, 319, 356, 525, 563, 767, 865, 932, 969, 1006, 1263, 1301], "below": [130, 135, 136, 137, 155, 169, 179, 181, 182, 183, 184, 185, 186, 204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 478, 479, 485, 488, 489, 495, 507, 513, 540, 541, 732, 746, 767, 770, 777, 781, 782, 783, 804, 818, 828, 830, 831, 832, 833, 834, 835, 854, 861, 864, 865, 866, 867, 868, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1072, 1073, 1074, 1129, 1130, 1136, 1139, 1140, 1146, 1158, 1164, 1278, 1279, 1336, 1357, 1364, 1366, 1369, 1370, 1372, 1377], "stdthresh": [130, 767], "deviat": [130, 451, 493, 523, 524, 552, 557, 767, 778, 779, 785, 797, 1102, 1144, 1249, 1261, 1262, 1290, 1295, 1366], "window": [130, 136, 137, 140, 141, 142, 182, 427, 443, 448, 463, 465, 468, 469, 505, 506, 509, 511, 518, 525, 540, 547, 552, 559, 560, 569, 575, 758, 767, 782, 783, 787, 788, 789, 790, 791, 792, 831, 1078, 1094, 1099, 1114, 1116, 1119, 1120, 1156, 1157, 1160, 1162, 1170, 1263, 1278, 1285, 1290, 1297, 1298, 1307, 1313, 1362, 1376], "portion": [130, 767, 1368], "epsilon": [130, 767], "compar": [130, 155, 428, 437, 482, 513, 525, 542, 732, 765, 766, 767, 804, 1079, 1088, 1133, 1164, 1263, 1280, 1320, 1325, 1330, 1334, 1336, 1357, 1371, 1372, 1374, 1376], "miss": [130, 482, 507, 508, 509, 516, 767, 1133, 1158, 1159, 1160, 1167, 1320, 1328], "maxcount": [130, 767], "allow": [130, 134, 203, 270, 303, 340, 437, 478, 482, 493, 511, 540, 767, 770, 775, 853, 920, 953, 990, 1061, 1088, 1129, 1133, 1144, 1162, 1278, 1331, 1373, 1378], "pass2": [130, 767], "retain": [130, 131, 132, 179, 181, 182, 183, 184, 185, 186, 576, 767, 768, 769, 781, 828, 830, 831, 832, 833, 834, 835, 1314], "rm": [130, 767], "left": [130, 313, 315, 350, 424, 481, 501, 542, 767, 963, 965, 1000, 1132, 1152, 1280, 1336, 1338, 1372], "proxim": [130, 767], "side": [130, 767], "doubl": [130, 380, 767, 1033, 1357], "captur": [130, 478, 767, 1129], "suffici": [130, 482, 767, 1133], "good": [130, 131, 767, 768, 1372], "mingood": [130, 767], "ba_mincount": [130, 767], "neighbor": [130, 372, 767, 1025, 1074, 1368], "ba_edgecount": [130, 767], "usuccess": [130, 767], "radialvelvolum": [130, 767], "lastvelvolum": [130, 767], "unfoldedvolum": [130, 767], "sondvolum": [130, 767], "vr_corr": [130, 767], "due": [130, 139, 428, 454, 461, 478, 563, 767, 786, 1079, 1105, 1112, 1129, 1301, 1331, 1366, 1372, 1375, 1378], "call": [130, 150, 203, 204, 206, 211, 215, 216, 217, 218, 233, 234, 270, 271, 273, 278, 282, 283, 284, 303, 304, 306, 314, 315, 319, 320, 321, 340, 341, 343, 351, 352, 356, 357, 358, 375, 380, 383, 396, 546, 767, 770, 853, 854, 856, 861, 865, 866, 867, 868, 883, 884, 920, 921, 923, 928, 932, 933, 934, 953, 954, 956, 964, 965, 969, 970, 971, 990, 991, 993, 1001, 1002, 1006, 1007, 1008, 1028, 1033, 1037, 1074, 1284, 1366, 1370, 1373, 1376, 1378], "long": [130, 141, 482, 505, 767, 791, 1133, 1156, 1365, 1373], "n": [130, 140, 193, 218, 260, 284, 293, 321, 330, 358, 478, 497, 504, 525, 547, 767, 790, 843, 868, 910, 934, 943, 971, 980, 1008, 1129, 1148, 1155, 1263, 1285, 1327, 1331, 1339, 1350, 1352, 1355, 1357, 1361, 1362, 1376, 1378], "jame": [130, 767], "houz": [130, 479, 495, 516, 767, 1011, 1130, 1146, 1167, 1357], "jr": [130, 479, 495, 516, 767, 1130, 1146, 1167, 1357], "four": [130, 372, 373, 375, 767, 1025, 1026, 1028, 1371], "dealis": [130, 767], "scheme": [130, 479, 495, 507, 767, 1011, 1068, 1071, 1130, 1146, 1158, 1357], "2001": [130, 767], "18": [130, 432, 767, 1083, 1337, 1348, 1371], "1674": [130, 767], "ref_vel_field": [131, 768], "interval_split": [131, 768], "interval_limit": [131, 768], "skip_between_rai": [131, 768], "100": [131, 183, 207, 212, 218, 274, 279, 284, 307, 321, 344, 358, 382, 437, 483, 497, 513, 519, 768, 770, 781, 832, 857, 862, 868, 924, 929, 934, 957, 971, 994, 1008, 1012, 1035, 1074, 1088, 1134, 1148, 1164, 1171, 1333, 1337, 1347, 1348, 1359, 1370, 1371], "skip_along_rai": [131, 768], "nyquist_vel": [131, 132, 768, 769, 1366], "check_nyquist_uniform": [131, 132, 427, 768, 769, 1078], "rays_wrap_around": [131, 132, 768, 769], "region": [131, 137, 246, 315, 352, 428, 478, 542, 547, 553, 555, 559, 560, 768, 783, 896, 965, 1002, 1079, 1129, 1280, 1285, 1291, 1293, 1297, 1298, 1321, 1324, 1325, 1327, 1339, 1357, 1369, 1371, 1374, 1376], "similar": [131, 437, 768, 1088, 1331, 1368, 1371], "merg": [131, 155, 157, 164, 171, 176, 365, 540, 732, 734, 741, 748, 753, 768, 804, 806, 813, 820, 825, 1018, 1278, 1320, 1371, 1376], "pair": [131, 372, 383, 418, 768, 1025, 1037, 1045, 1050, 1056, 1364, 1371], "accomplish": [131, 376, 768, 1029], "problem": [131, 136, 137, 287, 324, 768, 782, 783, 937, 974, 1074, 1328], "network": [131, 374, 484, 758, 768, 1027, 1135, 1371], "reduct": [131, 768], "anchor": [131, 768], "onc": [131, 768, 1357, 1375, 1378], "complet": [131, 768], "simul": [131, 497, 570, 768, 1148, 1308, 1362], "simulated_vel_from_profil": [131, 768, 1376], "segment": [131, 136, 311, 312, 348, 349, 768, 782, 787, 788, 961, 962, 998, 999], "split": [131, 553, 768, 1291], "interv": [131, 158, 163, 172, 177, 179, 183, 525, 556, 557, 735, 740, 749, 754, 768, 781, 807, 812, 821, 826, 828, 832, 1012, 1263, 1294, 1295], "larger": [131, 497, 563, 768, 1148, 1301, 1357], "longer": [131, 540, 768, 787, 1278, 1362, 1375], "better": [131, 207, 212, 274, 279, 307, 316, 344, 353, 497, 768, 857, 862, 924, 929, 957, 966, 994, 1003, 1148, 1320, 1366, 1371], "seem": [131, 768], "compromis": [131, 768], "artifact": [131, 768, 1366, 1368], "free": [131, 768, 1362], "cover": [131, 768], "entir": [131, 132, 204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 572, 573, 768, 769, 854, 861, 865, 866, 867, 881, 887, 889, 899, 901, 903, 921, 928, 932, 933, 954, 964, 965, 969, 970, 991, 1001, 1002, 1006, 1007, 1074, 1310, 1311], "join": [131, 768, 1183], "gap": [131, 134, 768, 770, 775, 1368], "connect": [131, 132, 768, 769], "disabl": [131, 132, 179, 181, 182, 183, 184, 185, 186, 768, 769, 781, 828, 830, 831, 832, 833, 834, 835, 1370], "across": [131, 768, 1012, 1356], "averag": [131, 442, 446, 450, 460, 466, 473, 479, 495, 497, 513, 518, 528, 530, 541, 556, 765, 766, 768, 787, 788, 1011, 1093, 1097, 1101, 1111, 1117, 1124, 1130, 1146, 1148, 1164, 1170, 1266, 1268, 1279, 1294, 1320, 1357, 1359, 1371], "individu": [131, 132, 768, 769, 1074], "ident": [131, 132, 369, 768, 769, 1022, 1072, 1073], "de": [131, 132, 350, 768, 769, 1000, 1256, 1257], "alias": [131, 132, 481, 768, 769, 1132, 1256, 1257, 1366, 1371, 1373], "corr_vel": [131, 132, 768, 769, 1371], "unwrap_unit": [132, 769], "skip_check": [132, 769], "multi": [132, 518, 769, 1170, 1320], "unwrap": [132, 136, 137, 769, 782, 783], "independ": [132, 769], "often": [132, 428, 769, 1079], "give": [132, 380, 481, 542, 769, 787, 1033, 1132, 1280, 1320, 1362, 1366, 1369], "superior": [132, 769], "lower": [132, 231, 233, 234, 235, 237, 239, 249, 251, 253, 424, 478, 482, 769, 881, 883, 884, 885, 887, 889, 899, 901, 903, 1129, 1133, 1332, 1333, 1371], "contamin": [132, 511, 516, 547, 769, 1162, 1167, 1285], "clutter": [132, 435, 497, 505, 506, 542, 548, 561, 769, 1086, 1148, 1156, 1157, 1280, 1286, 1299, 1366, 1369, 1370], "poor": [132, 769], "verif": [132, 769], "appropi": [132, 203, 270, 303, 340, 541, 769, 853, 920, 953, 990, 1279], "offer": [132, 769], "extrem": [132, 230, 769, 880, 1372], "miguel": [132, 769], "arevallilo": [132, 769], "herraez": [132, 769], "david": [132, 769], "burton": [132, 769], "michael": [132, 769], "lalor": [132, 769], "munther": [132, 769], "gdeisat": [132, 769], "fast": [132, 769, 1372], "two": [132, 141, 230, 231, 382, 472, 474, 479, 495, 502, 503, 516, 529, 531, 563, 564, 566, 567, 769, 791, 880, 881, 1035, 1068, 1071, 1123, 1125, 1130, 1146, 1153, 1154, 1167, 1249, 1267, 1269, 1301, 1302, 1304, 1305, 1325, 1330, 1334, 1335, 1337, 1352, 1353, 1365, 1368, 1370, 1371, 1374, 1376], "sort": [132, 596, 769, 1371], "reliabl": [132, 769, 1371], "noncontinu": [132, 769], "optic": [132, 497, 769, 1148], "vol": [132, 432, 442, 450, 460, 473, 769, 1083, 1093, 1101, 1111, 1124, 1320], "41": [132, 769, 1355, 1359, 1368, 1371], "2002": [132, 769], "7437": [132, 769], "abdul": [132, 769], "rahman": [132, 769], "osten": [132, 769], "gorecki": [132, 769], "l": [132, 136, 137, 208, 212, 213, 246, 275, 279, 280, 308, 317, 345, 352, 354, 495, 553, 769, 782, 783, 858, 862, 863, 896, 925, 929, 930, 958, 967, 995, 1002, 1004, 1146, 1291, 1339], "novak": [132, 769], "ed": [132, 769], "metrologi": [132, 769], "2005": [132, 479, 495, 769, 1130, 1146, 1357], "32": [132, 460, 478, 542, 769, 1111, 1129, 1249, 1280, 1336, 1340, 1341, 1342, 1352, 1355, 1359, 1371, 1372, 1373], "intern": [132, 437, 482, 769, 1088, 1133], "societi": [132, 428, 769, 1079], "photon": [132, 769], "altern": [133, 428, 771, 1074, 1079, 1357, 1371], "suitabl": [133, 189, 225, 241, 256, 289, 326, 478, 513, 771, 772, 773, 774, 839, 875, 891, 906, 939, 976, 1129, 1164], "phidp0_dict": [133, 771], "first_gates_dict": [133, 771], "smooth": [134, 140, 141, 142, 448, 465, 468, 469, 505, 506, 507, 544, 571, 758, 775, 787, 788, 789, 790, 791, 792, 1099, 1116, 1119, 1120, 1156, 1157, 1158, 1282, 1309, 1347, 1348, 1368], "delta": [134, 508, 770, 775, 1159], "contigu": [134, 770, 775], "label": [134, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 278, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 309, 310, 313, 314, 315, 318, 319, 320, 321, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 350, 351, 352, 355, 356, 357, 358, 437, 576, 775, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 859, 860, 861, 864, 865, 866, 867, 868, 879, 881, 883, 884, 885, 887, 889, 897, 899, 901, 903, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 926, 927, 928, 931, 932, 933, 934, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 959, 960, 963, 964, 965, 968, 969, 970, 971, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 996, 997, 1000, 1001, 1002, 1005, 1006, 1007, 1008, 1088, 1314, 1320, 1331, 1337, 1338, 1347, 1348, 1352, 1358, 1370, 1372], "account": [134, 138, 775, 784, 1320], "scipi": [134, 443, 463, 507, 570, 770, 775, 1094, 1114, 1158, 1308, 1320, 1347, 1348, 1362, 1375, 1376, 1378], "core": [134, 380, 478, 479, 495, 508, 509, 546, 770, 775, 1011, 1012, 1033, 1061, 1074, 1129, 1130, 1146, 1159, 1160, 1284, 1357, 1370, 1372, 1376], "queri": [134, 770, 775, 1074], "investig": [134, 514, 770, 775, 1165, 1327], "tupl": [134, 204, 206, 209, 210, 211, 214, 215, 216, 217, 218, 220, 231, 233, 237, 239, 249, 251, 253, 271, 273, 276, 277, 278, 281, 282, 283, 284, 286, 304, 306, 309, 310, 314, 315, 318, 319, 320, 321, 323, 341, 343, 346, 347, 351, 352, 355, 356, 357, 358, 360, 418, 437, 502, 503, 565, 770, 775, 854, 856, 859, 860, 861, 864, 865, 866, 867, 868, 870, 881, 883, 887, 889, 899, 901, 903, 921, 923, 926, 927, 928, 931, 932, 933, 934, 936, 954, 956, 959, 960, 964, 965, 968, 969, 970, 971, 973, 991, 993, 996, 997, 1001, 1002, 1005, 1006, 1007, 1008, 1010, 1045, 1056, 1068, 1069, 1070, 1071, 1074, 1088, 1153, 1154, 1245, 1303], "identifi": [134, 479, 481, 495, 541, 542, 770, 775, 1011, 1130, 1132, 1146, 1279, 1280, 1339, 1357, 1369], "examin": [134, 362, 376, 379, 775, 1015, 1029, 1032, 1376], "box": [134, 380, 775, 1033, 1358, 1371, 1372], "alwai": [134, 363, 376, 478, 479, 495, 507, 511, 775, 1016, 1029, 1129, 1130, 1146, 1158, 1162, 1320, 1362, 1370], "occur": [134, 159, 178, 372, 373, 736, 755, 775, 808, 827, 1025, 1026, 1366, 1371, 1373], "small": [134, 478, 479, 481, 482, 494, 495, 516, 561, 770, 775, 1129, 1130, 1132, 1133, 1145, 1146, 1167, 1299, 1331, 1347], "label_dict": [134, 770, 775], "readi": [134, 775], "fzl": [135, 136, 137, 756, 757, 758, 772, 773, 777, 782, 783, 787, 788, 789, 1372], "doc": [135, 137, 756, 757, 758, 772, 773, 777, 783, 787, 788, 789, 1362, 1375, 1376, 1378], "min_temp": [135, 185, 777, 834], "max_h_iso0": [135, 181, 777, 830], "beamwidth": [135, 139, 146, 181, 185, 218, 284, 321, 358, 453, 497, 513, 777, 786, 796, 830, 834, 868, 934, 971, 1008, 1104, 1148, 1164], "temp_field": [135, 185, 480, 504, 511, 513, 757, 758, 765, 766, 772, 773, 774, 777, 787, 788, 789, 834, 1131, 1155, 1162, 1164, 1358, 1372], "iso0_field": [135, 181, 480, 482, 504, 511, 512, 513, 757, 758, 765, 766, 772, 773, 777, 787, 788, 789, 830, 1131, 1133, 1155, 1162, 1163, 1164], "temp_ref": [135, 480, 500, 504, 511, 513, 757, 758, 765, 766, 772, 773, 777, 787, 788, 789, 1131, 1151, 1155, 1162, 1164, 1358, 1372], "construct": [135, 164, 176, 513, 741, 753, 777, 813, 825, 1074, 1164], "beyond": [135, 179, 561, 562, 582, 777, 828, 1299, 1300, 1375], "freez": [135, 442, 460, 482, 511, 512, 513, 756, 757, 758, 772, 773, 777, 787, 788, 789, 1093, 1111, 1133, 1162, 1163, 1164, 1372], "extent": [135, 497, 777, 1148, 1333], "reach": [135, 777], "0c": [135, 757, 758, 777], "isotherm": [135, 757, 758, 777], "height_over_iso0": [135, 480, 504, 511, 513, 757, 758, 765, 766, 772, 773, 777, 787, 788, 789, 1131, 1155, 1162, 1164, 1369], "fixed_fzl": [135, 757, 758, 773, 777, 787, 788, 789], "mask_fzl": [135, 777], "end_gate_arr": [135, 777], "self_const": [136, 137, 782, 783], "60000": [136, 137, 782, 783, 1333, 1337, 1368], "low_z": [136, 137, 782, 783], "high_z": [136, 137, 782, 783], "min_phidp": [136, 137, 782, 783], "01": [136, 137, 313, 350, 437, 507, 520, 547, 563, 782, 783, 963, 1000, 1088, 1158, 1285, 1301, 1324, 1334, 1336, 1353, 1360, 1374], "min_ncp": [136, 183, 781, 782, 832], "min_rhv": [136, 182, 183, 781, 782, 831, 832], "4000": [136, 137, 756, 782, 783, 1368], "sys_phas": [136, 782], "ncpt": [136, 137, 782, 783], "overide_sys_phas": [136, 782], "nowrap": [136, 137, 782, 783], "really_verbos": [136, 137, 782, 783], "lp_solver": [136, 137, 782, 783], "cylp": [136, 137, 782, 783, 1362, 1375, 1378], "ncp_field": [136, 183, 756, 781, 782, 832, 1322], "rhv_field": [136, 179, 182, 183, 480, 504, 511, 756, 781, 782, 828, 831, 832, 1131, 1155, 1162, 1322, 1358, 1372], "kdp_field": [136, 137, 480, 485, 486, 488, 489, 504, 505, 506, 507, 508, 509, 774, 782, 783, 788, 1131, 1136, 1137, 1139, 1140, 1155, 1156, 1157, 1158, 1159, 1160, 1358, 1372], "unf_field": [136, 137, 782, 783], "window_len": [136, 137, 140, 782, 783, 790], "proc": [136, 137, 507, 782, 783, 1158], "coef": [136, 137, 782, 783], "914": [136, 137, 782, 783], "lp": [136, 137, 782, 783, 1362], "consist": [136, 137, 782, 783, 787, 788, 789, 1320, 1368], "low": [136, 137, 138, 139, 143, 146, 372, 507, 782, 783, 784, 786, 793, 796, 1025, 1158, 1339, 1371], "high": [136, 137, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 478, 507, 782, 783, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1129, 1158, 1358, 1372], "phi": [136, 756, 758, 782, 1322, 1370, 1372], "coher": [136, 183, 756, 781, 782, 832], "copolar": [136, 480, 482, 504, 511, 782, 1131, 1133, 1155, 1162, 1356], "automat": [136, 376, 381, 382, 427, 497, 511, 516, 782, 1012, 1029, 1034, 1035, 1074, 1078, 1148, 1162, 1167, 1342, 1362, 1376], "lpx": [136, 137, 782, 783], "messag": [136, 137, 221, 240, 372, 782, 783, 871, 890, 1025, 1328], "suppress": [136, 137, 507, 782, 783, 1158], "pyglpk": [136, 137, 782, 783, 1362, 1375], "cvxopt": [136, 137, 782, 783, 1362, 1375], "cylp_mp": [136, 137, 782, 783], "modul": [136, 137, 782, 783, 1251, 1319, 1327, 1328, 1362, 1365, 1366, 1368, 1369, 1370, 1373, 1375, 1376], "solv": [136, 137, 782, 783], "horizon": [136, 137, 480, 504, 511, 782, 783, 1131, 1155, 1162], "sobel": [136, 137, 782, 783], "worker": [136, 137, 782, 783], "expon": [136, 137, 484, 485, 486, 487, 488, 489, 758, 782, 783, 1135, 1136, 1137, 1138, 1139, 1140], "link": [136, 137, 585, 782, 783, 1372], "1z": [136, 137, 782, 783], "reproc_phas": [136, 137, 782, 783], "sob_kdp": [136, 137, 782, 783], "recalcul": [136, 137, 497, 782, 783, 1148, 1364], "giangrand": [136, 137, 511, 782, 783, 1162], "mcgraw": [136, 137, 782, 783], "lei": [136, 137, 782, 783], "applic": [136, 137, 204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 479, 495, 569, 782, 783, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1033, 1130, 1146, 1307, 1376], "program": [136, 137, 497, 782, 783, 1148, 1362, 1376], "atmo": [136, 137, 478, 504, 514, 553, 782, 783, 1129, 1155, 1165, 1291, 1339, 1376], "tech": [136, 137, 504, 553, 782, 783, 1155, 1291, 1339], "2013": [136, 137, 452, 508, 514, 542, 782, 783, 1103, 1159, 1165, 1280, 1373], "30": [136, 137, 437, 450, 452, 460, 478, 479, 495, 511, 542, 774, 779, 782, 783, 1088, 1101, 1103, 1111, 1129, 1130, 1146, 1162, 1280, 1331, 1338, 1342, 1344, 1357, 1366, 1371], "1716": [136, 137, 782, 783], "system_phas": [137, 783], "first_gate_sysp": [137, 783], "carri": [137, 783], "smaller": [137, 352, 497, 563, 783, 1002, 1074, 1148, 1301, 1357, 1376], "off": [137, 204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 503, 783, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1154, 1336, 1357], "ptoa": [138, 784], "wavelen": [138, 143, 146, 784, 793, 796], "antenna_gain": [138, 146, 454, 784, 796, 1105], "coeff_band": [138, 146, 784, 796], "sun": [138, 139, 143, 144, 145, 146, 776, 778, 779, 780, 784, 785, 786, 793, 794, 795, 796, 797], "solar": [138, 143, 146, 784, 793, 796], "flux": [138, 143, 146, 784, 793, 796], "amospher": [138, 784], "wavelength": [138, 143, 146, 497, 784, 793, 796, 1148], "bandwidth": [138, 146, 784, 796], "s0": [138, 143, 784, 793], "10e": [138, 143, 146, 784, 793, 796], "m2": [138, 143, 146, 784, 793, 796], "hz": [138, 143, 146, 425, 453, 454, 498, 499, 784, 793, 796, 1076, 1104, 1105, 1149, 1150, 1345], "altub": [138, 139, 143, 146, 784, 786, 793, 796], "bech": [138, 139, 143, 146, 784, 786, 793, 796], "o": [138, 139, 143, 146, 380, 784, 786, 793, 796, 1033, 1183, 1338, 1362, 1375, 1376], "argemi": [138, 139, 143, 146, 784, 786, 793, 796], "t": [138, 139, 143, 146, 380, 450, 478, 479, 482, 495, 507, 508, 511, 513, 514, 519, 784, 786, 793, 796, 1033, 1101, 1129, 1130, 1133, 1146, 1158, 1159, 1162, 1164, 1165, 1171, 1331, 1357, 1362, 1364, 1372], "rigo": [138, 139, 143, 146, 784, 786, 793, 796], "2015": [138, 139, 143, 146, 484, 514, 784, 786, 793, 796, 1135, 1165], "align": [138, 139, 143, 146, 784, 786, 793, 796], "midrang": [138, 139, 143, 146, 784, 786, 793, 796], "angle_step": [139, 146, 786, 796], "integr": [139, 146, 757, 758, 786, 796, 1372], "fact": [139, 507, 509, 786, 1158, 1160], "la": [139, 786], "raw_data": [140, 790], "wind_len": [140, 142, 506, 790, 792, 1157], "min_valid": [140, 142, 506, 790, 792, 1157], "wind_typ": [140, 790], "median": [140, 437, 442, 450, 460, 473, 483, 528, 530, 542, 790, 1088, 1093, 1101, 1111, 1124, 1134, 1266, 1268, 1280], "less": [140, 478, 479, 495, 509, 553, 790, 1074, 1129, 1130, 1146, 1160, 1291, 1357, 1371, 1372], "move": [140, 141, 142, 147, 148, 150, 182, 448, 465, 468, 469, 497, 505, 506, 541, 790, 791, 792, 831, 1099, 1116, 1119, 1120, 1148, 1156, 1157, 1279, 1331, 1371, 1376], "data_smooth": [140, 790], "swind_len": [141, 505, 791, 1156], "smin_valid": [141, 505, 791, 1156], "lwind_len": [141, 505, 791, 1156], "31": [141, 372, 484, 505, 758, 791, 1025, 1135, 1156, 1328, 1355, 1370], "lmin_valid": [141, 505, 791, 1156], "zthr": [141, 505, 791, 1156], "short": [141, 505, 791, 1156, 1376], "solar_flux": [143, 146, 793, 796], "7": [143, 146, 182, 370, 452, 518, 542, 552, 575, 779, 793, 796, 831, 1023, 1103, 1170, 1280, 1290, 1313, 1328, 1337, 1339, 1351, 1362, 1369, 1370, 1372, 1373, 1375, 1376], "cm": [143, 146, 475, 793, 796, 1126, 1348, 1370], "measur": [143, 146, 426, 479, 484, 493, 494, 495, 504, 507, 508, 509, 787, 788, 793, 796, 1077, 1130, 1135, 1144, 1145, 1146, 1155, 1158, 1159, 1160, 1357, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1376], "lat_deg": [144, 794], "lon_deg": [144, 794], "refract": [144, 497, 794, 1148], "boolean": [144, 151, 157, 171, 479, 494, 495, 585, 596, 597, 613, 614, 728, 734, 748, 776, 794, 797, 800, 806, 820, 1011, 1130, 1145, 1146, 1369], "elev_sun": [144, 794], "azim_sun": [144, 794], "sensor": [144, 145, 794, 795], "pysolar": [145, 778, 779, 780, 795], "el": [145, 494, 526, 527, 795, 1145, 1264, 1265, 1371], "az": [145, 380, 795, 1033, 1345, 1346], "detect": [146, 481, 482, 495, 511, 513, 547, 778, 779, 780, 796, 1132, 1133, 1146, 1162, 1164, 1285, 1342, 1357, 1366, 1370, 1372], "would": [146, 428, 542, 796, 1079, 1280, 1327, 1328, 1366, 1368, 1376], "without": [146, 215, 282, 319, 356, 435, 451, 565, 796, 865, 932, 969, 1006, 1074, 1086, 1102, 1245, 1258, 1303, 1375], "attenu": [146, 425, 454, 461, 484, 485, 488, 498, 756, 757, 758, 778, 779, 780, 796, 1076, 1105, 1112, 1135, 1136, 1139, 1149, 1320, 1321, 1324, 1325, 1358, 1362, 1374], "characterist": [146, 796, 1368], "pwr_det": [146, 796], "warn": [147, 148, 150, 376, 379, 561, 1029, 1032, 1299, 1320, 1322, 1328, 1331, 1368, 1370, 1371, 1372], "categori": [147, 148, 478, 1129, 1372], "depend": [149, 485, 497, 511, 559, 582, 757, 758, 1069, 1074, 1136, 1148, 1162, 1297, 1370, 1376], "old_nam": 150, "new_nam": 150, "alia": [150, 1256, 1257, 1370], "namespac": [150, 630], "wrapper": [150, 1362, 1370], "deprecatedfunctionnam": 150, "exclude_bas": [151, 728, 800], "variou": [151, 179, 180, 181, 182, 183, 184, 185, 186, 546, 728, 770, 781, 800, 828, 829, 830, 831, 832, 833, 834, 835, 1284, 1320, 1325, 1354, 1362], "exclude_below": [151, 728, 800, 1331, 1356, 1369, 1372], "suggest": [151, 728, 800], "gate_exclud": [151, 728, 800, 1369], "gate_includ": [151, 728, 800, 1369], "lost": [151, 509, 576, 728, 800, 1160, 1314, 1368], "again": [151, 728, 800, 1320, 1328, 1338, 1370, 1375], "import": [151, 514, 518, 519, 728, 800, 1165, 1170, 1171, 1183, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375], "io": [151, 582, 728, 800, 1068, 1071, 1322, 1323, 1327, 1328, 1329, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1378], "radar_fil": [151, 614, 728, 800, 1323, 1336, 1338], "nc": [151, 728, 800, 1322, 1331, 1333, 1336, 1337, 1338, 1342, 1344, 1345, 1346, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1364, 1365, 1369, 1370, 1372], "normalized_coherent_pow": [151, 728, 800, 1369], "75": [151, 219, 285, 322, 359, 380, 437, 479, 495, 504, 511, 515, 728, 765, 766, 800, 869, 935, 972, 1009, 1033, 1088, 1130, 1146, 1155, 1162, 1166, 1331, 1347, 1357, 1364, 1368, 1369, 1370], "exclude_mask": [153, 155, 156, 157, 158, 159, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 730, 732, 733, 734, 735, 736, 739, 740, 741, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 802, 804, 805, 806, 807, 808, 811, 812, 813, 816, 818, 819, 820, 821, 823, 824, 825, 826, 827, 1332], "op": [153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 730, 732, 733, 734, 735, 736, 737, 739, 740, 741, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 802, 804, 805, 806, 807, 808, 809, 811, 812, 813, 816, 818, 819, 820, 821, 823, 824, 825, 826, 827], "inclus": [153, 155, 158, 163, 167, 169, 172, 177, 730, 732, 735, 740, 744, 746, 749, 754, 802, 804, 807, 812, 816, 818, 821, 826, 1068, 1071, 1074, 1245, 1336], "exclus": [155, 732, 804], "AND": [155, 157, 164, 171, 176, 732, 734, 741, 748, 753, 804, 806, 813, 820, 825], "OR": [155, 157, 164, 171, 176, 732, 734, 741, 748, 753, 804, 806, 813, 820, 825], "gener": [155, 157, 164, 171, 176, 188, 189, 190, 191, 192, 193, 204, 206, 211, 214, 215, 216, 217, 218, 225, 226, 227, 228, 231, 233, 234, 235, 237, 239, 241, 242, 243, 244, 249, 251, 253, 255, 256, 257, 258, 259, 260, 271, 273, 278, 281, 282, 283, 284, 288, 289, 290, 291, 292, 293, 304, 306, 314, 315, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 341, 343, 351, 352, 355, 356, 357, 358, 379, 382, 496, 497, 507, 515, 517, 732, 734, 741, 748, 753, 804, 806, 813, 820, 825, 838, 839, 840, 841, 842, 843, 854, 856, 861, 864, 865, 866, 867, 868, 875, 876, 877, 878, 881, 883, 884, 885, 887, 889, 891, 892, 893, 894, 899, 901, 903, 905, 906, 907, 908, 909, 910, 921, 923, 928, 931, 932, 933, 934, 938, 939, 940, 941, 942, 943, 954, 956, 964, 965, 968, 969, 970, 971, 975, 976, 977, 978, 979, 980, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1012, 1032, 1035, 1050, 1061, 1072, 1073, 1074, 1147, 1148, 1158, 1166, 1168, 1322, 1323, 1325, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362], "here": [155, 157, 164, 171, 176, 246, 732, 734, 741, 748, 753, 804, 806, 813, 820, 825, 896, 1331, 1357, 1362, 1364, 1369, 1370, 1371, 1372, 1375, 1378], "previous": [155, 157, 164, 171, 176, 732, 734, 741, 748, 753, 804, 806, 813, 820, 825, 1327, 1357, 1372], "becaus": [155, 157, 164, 507, 732, 734, 741, 804, 806, 813, 1158, 1357, 1371, 1372, 1378], "invalid": [155, 157, 159, 164, 179, 181, 182, 183, 184, 185, 186, 732, 734, 736, 741, 776, 781, 804, 806, 808, 813, 828, 830, 831, 832, 833, 834, 835], "shape": [157, 171, 370, 510, 565, 734, 748, 765, 806, 820, 1023, 1161, 1303, 1357, 1364, 1368, 1369, 1373, 1376], "v1": [158, 163, 172, 177, 735, 740, 749, 754, 807, 812, 821, 826, 1375], "v2": [158, 163, 172, 177, 735, 740, 749, 754, 807, 812, 821, 826, 1376], "insid": [158, 172, 512, 735, 749, 807, 821, 1163, 1365], "inf": [159, 178, 179, 183, 736, 755, 781, 808, 827, 828, 832], "outsid": [163, 177, 179, 183, 211, 214, 216, 217, 231, 233, 234, 235, 237, 239, 249, 251, 253, 278, 281, 283, 314, 315, 318, 320, 351, 352, 355, 357, 460, 461, 478, 740, 754, 781, 812, 826, 828, 832, 861, 864, 866, 867, 881, 883, 884, 885, 887, 889, 899, 901, 903, 928, 931, 933, 964, 965, 968, 970, 1001, 1002, 1005, 1007, 1111, 1112, 1129, 1376], "trans_valu": [164, 176, 741, 753, 813, 825], "zdr_field": [179, 182, 436, 455, 480, 504, 511, 756, 757, 758, 762, 773, 774, 778, 779, 787, 788, 789, 828, 831, 1087, 1106, 1131, 1155, 1162, 1358, 1372], "max_zdr": [179, 828], "max_rhv": [179, 828], "min_refl": [179, 183, 781, 828, 832], "max_refl": [179, 183, 781, 828, 832], "vel_lim": [179, 828], "rmin": [179, 446, 466, 511, 555, 778, 828, 1097, 1117, 1162, 1293], "2000": [179, 519, 828, 1171, 1332, 1368], "25000": [179, 426, 828, 1077, 1368], "elmin": [179, 511, 555, 778, 779, 780, 828, 1162, 1293], "elmax": [179, 511, 555, 773, 774, 828, 1162, 1293], "85": [179, 182, 828, 831, 1359, 1371], "suspect": [179, 778, 779, 780, 828], "bird": [179, 434, 828, 1085], "criteria": [179, 180, 181, 182, 183, 184, 185, 186, 507, 516, 555, 781, 828, 829, 830, 831, 832, 833, 834, 835, 1074, 1158, 1167, 1293], "built": [179, 180, 181, 182, 183, 184, 185, 186, 781, 828, 829, 830, 831, 832, 833, 834, 835, 1072, 1073, 1074], "well": [179, 181, 182, 183, 184, 185, 186, 352, 372, 374, 481, 582, 770, 781, 828, 830, 831, 832, 833, 834, 835, 1002, 1025, 1027, 1074, 1132, 1328, 1337, 1362, 1368, 1369, 1370, 1371, 1372], "highest": [179, 182, 234, 828, 831, 884], "lowest": [179, 181, 182, 183, 184, 185, 186, 428, 510, 781, 828, 830, 831, 832, 833, 834, 835, 1079, 1161, 1327, 1331, 1355, 1357], "greatest": [179, 183, 781, 828, 832], "kept_valu": [180, 774, 829], "undesir": [180, 181, 182, 183, 184, 185, 186, 773, 774, 781, 829, 830, 831, 832, 833, 834, 835, 1074], "classif": [180, 478, 479, 480, 485, 495, 504, 512, 516, 774, 787, 788, 789, 829, 1011, 1129, 1130, 1131, 1136, 1146, 1155, 1163, 1167, 1325, 1354, 1360, 1370, 1374], "hydrometeor": [180, 380, 437, 480, 483, 485, 504, 512, 517, 774, 787, 788, 789, 829, 1033, 1088, 1131, 1134, 1136, 1155, 1163, 1168, 1325, 1354, 1360, 1366, 1370, 1374], "400": [181, 185, 830, 834, 1364], "primarili": [181, 185, 830, 834], "phi_field": [182, 831], "textzdr_field": [182, 831], "textrhv_field": [182, 831], "textphi_field": [182, 831], "textrefl_field": [182, 831], "wind_siz": [182, 427, 575, 831, 1078, 1313, 1366], "max_textphi": [182, 831], "max_textrhv": [182, 831], "max_textzdr": [182, 831], "max_textrefl": [182, 831], "cross": [182, 183, 198, 200, 204, 207, 218, 230, 231, 265, 267, 271, 274, 284, 298, 300, 304, 307, 321, 335, 337, 341, 344, 358, 434, 453, 454, 497, 533, 534, 781, 831, 832, 848, 850, 854, 857, 868, 880, 881, 915, 917, 921, 924, 934, 948, 950, 954, 957, 971, 985, 987, 991, 994, 1008, 1070, 1085, 1104, 1105, 1148, 1271, 1272, 1320, 1325, 1335, 1344, 1353, 1357, 1371, 1373, 1374], "min_rhi": [183, 781, 832], "snr_field": [184, 426, 462, 762, 774, 833, 1077, 1113], "min_snr": [184, 833], "max_snr": [184, 833], "snr": [184, 426, 462, 549, 562, 762, 774, 833, 1077, 1113, 1287, 1300, 1372], "vis_field": [186, 764, 835], "min_vi": [186, 835], "displai": [187, 204, 206, 211, 215, 216, 217, 218, 220, 254, 271, 273, 278, 282, 283, 284, 286, 287, 304, 306, 314, 315, 319, 320, 321, 323, 324, 341, 343, 351, 352, 356, 357, 358, 360, 380, 428, 497, 518, 519, 837, 854, 856, 861, 865, 866, 867, 868, 870, 904, 921, 923, 928, 932, 933, 934, 936, 937, 954, 956, 964, 965, 969, 970, 971, 973, 974, 991, 993, 1001, 1002, 1006, 1007, 1008, 1010, 1012, 1033, 1079, 1148, 1170, 1171, 1320, 1322, 1323, 1327, 1328, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1364, 1365, 1366, 1368, 1369, 1372, 1376], "airborn": [187, 837], "plot_var": [187, 254, 287, 324, 837, 904, 937, 974], "order": [187, 254, 287, 324, 376, 381, 382, 479, 495, 504, 507, 511, 513, 525, 837, 904, 937, 974, 1011, 1029, 1034, 1035, 1061, 1130, 1146, 1155, 1158, 1162, 1164, 1263, 1322, 1357, 1362, 1372, 1376], "cb": [187, 254, 287, 324, 837, 904, 937, 974, 1338], "colorbar": [187, 204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 240, 247, 249, 251, 253, 254, 271, 272, 273, 278, 281, 282, 283, 284, 287, 304, 305, 306, 314, 315, 318, 319, 320, 321, 324, 341, 342, 343, 351, 352, 355, 356, 357, 358, 837, 854, 855, 856, 861, 864, 865, 866, 867, 868, 879, 881, 883, 884, 885, 887, 889, 890, 897, 899, 901, 903, 904, 921, 922, 923, 928, 931, 932, 933, 934, 937, 954, 955, 956, 964, 965, 968, 969, 970, 971, 974, 991, 992, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1012, 1325, 1331, 1335, 1336, 1352, 1353, 1370, 1374], "loc": [187, 254, 287, 324, 837, 904, 937, 974, 1337], "titl": [188, 190, 191, 192, 193, 204, 206, 211, 214, 215, 216, 217, 218, 226, 227, 228, 231, 233, 234, 235, 237, 239, 242, 243, 244, 249, 251, 253, 255, 257, 258, 259, 260, 271, 273, 278, 281, 282, 283, 284, 288, 290, 291, 292, 293, 304, 306, 314, 315, 318, 319, 320, 321, 325, 327, 328, 329, 330, 341, 343, 351, 352, 355, 356, 357, 358, 838, 840, 841, 842, 843, 854, 856, 861, 864, 865, 866, 867, 868, 876, 877, 878, 881, 883, 884, 885, 887, 889, 892, 893, 894, 899, 901, 903, 905, 907, 908, 909, 910, 921, 923, 928, 931, 932, 933, 934, 938, 940, 941, 942, 943, 954, 956, 964, 965, 968, 969, 970, 971, 975, 977, 978, 979, 980, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1012, 1322, 1323, 1331, 1338, 1340, 1341, 1343, 1345, 1346, 1350, 1370, 1371, 1372, 1373], "ext": [189, 225, 241, 256, 289, 326, 839, 875, 891, 906, 939, 976], "datetime_format": [189, 191, 256, 258, 289, 291, 326, 328, 839, 841, 906, 908, 939, 941, 976, 978], "use_sweep_tim": [189, 191, 256, 258, 289, 291, 326, 328, 839, 841, 906, 908, 939, 941, 976, 978], "form": [189, 206, 225, 241, 256, 273, 289, 306, 326, 343, 839, 856, 875, 891, 906, 923, 939, 956, 976, 993], "radar_name_field_sweep_tim": [189, 256, 289, 326, 839, 906, 939, 976], "extens": [189, 225, 241, 256, 289, 326, 380, 839, 875, 891, 906, 939, 976, 1033, 1375], "strftime": [189, 191, 211, 215, 256, 258, 278, 282, 289, 291, 314, 319, 326, 328, 351, 356, 839, 841, 861, 865, 906, 908, 928, 932, 939, 941, 964, 969, 976, 978, 1001, 1006], "vpt": [192, 203, 217, 259, 270, 283, 292, 303, 320, 329, 340, 357, 558, 842, 853, 867, 909, 920, 933, 942, 953, 970, 979, 990, 1007, 1296], "ndarrai": [193, 218, 260, 284, 293, 321, 330, 358, 504, 530, 552, 617, 843, 868, 910, 934, 943, 971, 980, 1008, 1155, 1268, 1290, 1373], "xaxi": [194, 197, 198, 261, 264, 265, 294, 297, 298, 331, 334, 335, 844, 847, 848, 911, 914, 915, 944, 947, 948, 981, 984, 985, 1338], "static": [195, 196, 207, 208, 212, 219, 220, 262, 263, 274, 275, 279, 285, 286, 295, 296, 307, 308, 322, 323, 332, 333, 344, 345, 359, 360, 845, 846, 857, 858, 862, 869, 870, 912, 913, 924, 925, 929, 935, 936, 945, 946, 957, 958, 972, 973, 982, 983, 994, 995, 1009, 1010, 1362], "yaxi": [195, 196, 199, 200, 201, 202, 262, 263, 266, 267, 268, 269, 295, 296, 299, 300, 301, 302, 332, 333, 336, 337, 338, 339, 845, 846, 849, 850, 851, 852, 912, 913, 916, 917, 918, 919, 945, 946, 949, 950, 951, 952, 982, 983, 986, 987, 988, 989], "custom": [203, 204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 270, 271, 272, 273, 278, 282, 283, 284, 303, 304, 305, 306, 314, 315, 319, 320, 321, 340, 341, 342, 343, 351, 352, 356, 357, 358, 410, 478, 798, 853, 854, 855, 856, 861, 865, 866, 867, 868, 879, 881, 883, 885, 887, 889, 897, 899, 901, 903, 920, 921, 922, 923, 928, 932, 933, 934, 953, 954, 955, 956, 964, 965, 969, 970, 971, 990, 991, 992, 993, 1001, 1002, 1006, 1007, 1008, 1012, 1072, 1073, 1129, 1368], "plot_ppi": [203, 270, 303, 340, 853, 920, 953, 990, 1323, 1358, 1364, 1371, 1372], "plot_sweep_grid": [203, 853], "target_azimuth": [204, 271, 304, 341, 533, 854, 921, 954, 991, 1271], "mask_tupl": [204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 854, 861, 864, 865, 866, 867, 868, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008], "norm": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 507, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1158, 1338, 1358, 1370, 1372], "cmap": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1012, 1033, 1331, 1336, 1337, 1338, 1339, 1343, 1346, 1348, 1350, 1351, 1356, 1357, 1365, 1366, 1370], "mask_outsid": [204, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 854, 861, 864, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008, 1345, 1346, 1372], "title_flag": [204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 315, 318, 319, 320, 321, 341, 343, 351, 352, 355, 356, 357, 358, 854, 856, 861, 864, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 965, 968, 969, 970, 971, 991, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1350], "axislabel": [204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 318, 319, 320, 321, 341, 343, 351, 355, 356, 357, 358, 854, 856, 861, 864, 865, 866, 867, 868, 881, 883, 887, 889, 899, 901, 903, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 968, 969, 970, 971, 991, 993, 1001, 1005, 1006, 1007, 1008, 1340, 1345, 1346], "axislabels_flag": [204, 206, 211, 214, 215, 216, 217, 218, 231, 233, 237, 239, 249, 251, 253, 271, 273, 278, 281, 282, 283, 284, 304, 306, 314, 318, 319, 320, 321, 341, 343, 351, 355, 356, 357, 358, 854, 856, 861, 864, 865, 866, 867, 868, 881, 883, 887, 889, 899, 901, 903, 921, 923, 928, 931, 932, 933, 934, 954, 956, 964, 968, 969, 970, 971, 991, 993, 1001, 1005, 1006, 1007, 1008, 1357], "colorbar_flag": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008], "colorbar_label": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1322, 1323, 1327, 1340, 1341, 1345, 1346, 1347, 1348, 1352, 1371, 1372], "colorbar_ori": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 319, 320, 321, 341, 343, 351, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 969, 970, 971, 991, 993, 1001, 1006, 1007, 1008], "reverse_xaxi": [204, 215, 271, 282, 304, 319, 341, 356, 854, 865, 921, 932, 954, 969, 991, 1006], "fig": [204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 281, 282, 283, 284, 304, 305, 306, 314, 315, 318, 319, 320, 321, 341, 342, 343, 351, 352, 355, 356, 357, 358, 854, 855, 856, 861, 864, 865, 866, 867, 868, 879, 881, 883, 884, 885, 887, 889, 897, 899, 901, 903, 921, 922, 923, 928, 931, 932, 933, 934, 954, 955, 956, 964, 965, 968, 969, 970, 971, 991, 992, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1356, 1358, 1359, 1366, 1368, 1369, 1371, 1372], "tick": [204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 315, 319, 320, 321, 341, 342, 343, 351, 352, 356, 357, 358, 854, 855, 856, 861, 865, 866, 867, 868, 879, 881, 883, 885, 887, 889, 897, 899, 901, 903, 921, 922, 923, 928, 932, 933, 934, 954, 955, 956, 964, 965, 969, 970, 971, 991, 992, 993, 1001, 1002, 1006, 1007, 1008, 1336, 1338, 1357, 1358, 1370, 1372], "ticklab": [204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 315, 319, 320, 321, 341, 342, 343, 351, 352, 356, 357, 358, 854, 855, 856, 861, 865, 866, 867, 868, 879, 881, 883, 885, 887, 889, 897, 899, 901, 903, 921, 922, 923, 928, 932, 933, 934, 954, 955, 956, 964, 965, 969, 970, 971, 991, 992, 993, 1001, 1002, 1006, 1007, 1008, 1357, 1358, 1372], "raster": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 380, 497, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1033, 1148, 1320], "pseudo": [204, 271, 304, 341, 511, 854, 921, 954, 991, 1162, 1371], "associ": [204, 271, 304, 341, 478, 854, 921, 954, 991, 1050, 1129], "matplotlib": [204, 206, 209, 210, 211, 215, 216, 217, 218, 231, 232, 233, 235, 237, 239, 248, 249, 251, 253, 271, 273, 276, 277, 278, 282, 283, 284, 304, 306, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 380, 854, 856, 859, 860, 861, 865, 866, 867, 868, 881, 882, 883, 885, 887, 889, 898, 899, 901, 903, 921, 923, 926, 927, 928, 932, 933, 934, 954, 956, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 991, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1012, 1033, 1320, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1375, 1378], "pcolormesh": [204, 206, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1012, 1331, 1347, 1357, 1370, 1371], "ncp": [204, 211, 214, 215, 216, 217, 218, 271, 278, 281, 282, 283, 284, 304, 314, 315, 318, 319, 320, 321, 341, 351, 352, 355, 356, 357, 358, 854, 861, 864, 865, 866, 867, 868, 921, 928, 931, 932, 933, 934, 954, 964, 965, 968, 969, 970, 971, 991, 1001, 1002, 1005, 1006, 1007, 1008], "lumin": [204, 206, 211, 215, 216, 217, 218, 231, 233, 234, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 881, 883, 884, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008], "west": [204, 215, 271, 282, 304, 319, 341, 356, 854, 865, 921, 932, 954, 969, 991, 1006, 1340, 1371, 1372], "leav": [204, 206, 211, 215, 216, 217, 218, 231, 233, 235, 237, 239, 249, 251, 253, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 881, 883, 885, 887, 889, 899, 901, 903, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008], "orient": [204, 205, 206, 211, 215, 216, 217, 218, 229, 231, 233, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 282, 283, 284, 304, 305, 306, 314, 319, 320, 321, 341, 342, 343, 351, 356, 357, 358, 854, 855, 856, 861, 865, 866, 867, 868, 879, 881, 883, 885, 887, 889, 897, 899, 901, 903, 921, 922, 923, 928, 932, 933, 934, 954, 955, 956, 964, 969, 970, 971, 991, 992, 993, 1001, 1006, 1007, 1008, 1358, 1359, 1371, 1372], "treat": [204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 854, 861, 865, 866, 867, 881, 887, 889, 899, 901, 903, 921, 928, 932, 933, 954, 964, 965, 969, 970, 991, 1001, 1002, 1006, 1007], "themselv": [204, 211, 215, 216, 217, 231, 237, 239, 249, 251, 253, 271, 278, 282, 283, 304, 314, 315, 319, 320, 341, 351, 352, 356, 357, 854, 861, 865, 866, 867, 881, 887, 889, 899, 901, 903, 921, 928, 932, 933, 954, 964, 965, 969, 970, 991, 1001, 1002, 1006, 1007], "figur": [204, 205, 206, 211, 214, 215, 216, 217, 218, 229, 231, 233, 234, 235, 237, 239, 247, 249, 251, 253, 271, 272, 273, 278, 281, 282, 283, 284, 304, 305, 306, 314, 315, 318, 319, 320, 321, 341, 342, 343, 351, 352, 355, 356, 357, 358, 854, 855, 856, 861, 864, 865, 866, 867, 868, 879, 881, 883, 884, 885, 887, 889, 897, 899, 901, 903, 921, 922, 923, 928, 931, 932, 933, 934, 954, 955, 956, 964, 965, 968, 969, 970, 971, 991, 992, 993, 1001, 1002, 1005, 1006, 1007, 1008, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1357, 1365, 1366, 1368, 1369, 1370, 1371, 1372], "render": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008], "rather": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008], "larg": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 507, 516, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1158, 1167, 1372], "sure": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1331, 1338, 1357, 1375, 1376, 1378], "dpi": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1012], "your": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 582, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008, 1325, 1335, 1337, 1353, 1357, 1362, 1370, 1372, 1374, 1375, 1376, 1378], "ep": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008], "svg": [204, 206, 211, 215, 216, 217, 218, 271, 273, 278, 282, 283, 284, 304, 306, 314, 315, 319, 320, 321, 341, 343, 351, 352, 356, 357, 358, 854, 856, 861, 865, 866, 867, 868, 921, 923, 928, 932, 933, 934, 954, 956, 964, 965, 969, 970, 971, 991, 993, 1001, 1002, 1006, 1007, 1008], "mappabl": [205, 229, 240, 247, 272, 305, 342, 855, 879, 890, 897, 922, 955, 992], "cax": [205, 229, 247, 272, 305, 342, 855, 879, 897, 922, 955, 992, 1358, 1372], "imag": [205, 229, 234, 247, 272, 305, 342, 478, 503, 525, 553, 855, 879, 884, 897, 922, 955, 992, 1129, 1154, 1263, 1291, 1325, 1335, 1353, 1355, 1357, 1374], "contourset": [205, 229, 240, 247, 272, 305, 342, 855, 879, 890, 897, 922, 955, 992], "etc": [205, 229, 233, 234, 240, 247, 272, 305, 315, 342, 352, 379, 442, 450, 460, 473, 476, 495, 855, 879, 883, 884, 890, 897, 922, 955, 965, 992, 1002, 1032, 1093, 1101, 1111, 1124, 1127, 1146, 1370], "onto": [205, 229, 247, 249, 272, 305, 315, 342, 352, 510, 855, 879, 897, 899, 922, 955, 965, 992, 1002, 1061, 1068, 1071, 1074, 1161], "drawn": [205, 229, 247, 272, 305, 342, 855, 879, 897, 922, 955, 992], "target_rang": [206, 273, 306, 343, 856, 923, 956, 993], "delta_x": [206, 273, 306, 343, 856, 923, 956, 993], "delta_i": [206, 273, 306, 343, 856, 923, 956, 993], "az_limit": [206, 273, 306, 343, 856, 923, 956, 993], "el_limit": [206, 273, 306, 343, 856, 923, 956, 993], "reflector": [206, 273, 306, 343, 856, 923, 956, 993], "griddata": [206, 273, 306, 343, 856, 923, 956, 993], "npt": [207, 212, 274, 279, 307, 316, 344, 353, 857, 862, 924, 929, 957, 966, 994, 1003], "hair": [207, 274, 307, 344, 857, 924, 957, 994, 1344], "higher": [207, 212, 274, 279, 307, 316, 344, 353, 778, 857, 862, 924, 929, 957, 966, 994, 1003, 1074, 1366, 1368], "col": [208, 212, 213, 275, 279, 280, 308, 317, 345, 354, 858, 862, 863, 925, 929, 930, 958, 967, 995, 1004], "line": [208, 214, 232, 233, 234, 246, 248, 275, 281, 308, 311, 312, 315, 316, 318, 345, 348, 349, 352, 353, 355, 380, 507, 858, 864, 882, 883, 884, 896, 898, 925, 931, 958, 961, 962, 965, 966, 968, 995, 998, 999, 1002, 1003, 1005, 1012, 1033, 1158, 1325, 1335, 1337, 1353, 1355, 1374, 1375, 1376, 1378], "color": [208, 209, 210, 212, 213, 232, 234, 275, 276, 277, 279, 280, 308, 309, 310, 315, 317, 345, 346, 347, 354, 380, 858, 859, 860, 862, 863, 882, 884, 925, 926, 927, 929, 930, 958, 959, 960, 965, 967, 995, 996, 997, 1004, 1012, 1033, 1337, 1338, 1339, 1347, 1348, 1355, 1357, 1358, 1370, 1372], "linestyl": [208, 212, 213, 232, 275, 279, 280, 308, 317, 345, 354, 858, 862, 863, 882, 925, 929, 930, 958, 967, 995, 1004, 1337, 1338, 1348], "symbol": [209, 210, 276, 277, 309, 310, 313, 346, 347, 350, 859, 860, 926, 927, 959, 960, 963, 996, 997, 1000], "text_color": [209, 210, 276, 277, 309, 310, 346, 347, 859, 860, 926, 927, 959, 960, 996, 997], "text": [209, 210, 276, 277, 309, 310, 313, 346, 347, 350, 859, 860, 926, 927, 959, 960, 963, 996, 997, 1000, 1183, 1336, 1345, 1359, 1366, 1370, 1371], "just": [209, 210, 276, 277, 309, 310, 346, 347, 370, 540, 859, 860, 926, 927, 959, 960, 996, 997, 1023, 1278, 1336, 1339, 1364, 1373, 1376, 1378], "marker": [209, 210, 214, 232, 248, 276, 277, 281, 309, 310, 318, 346, 347, 355, 859, 860, 864, 882, 898, 926, 927, 931, 959, 960, 968, 996, 997, 1005], "title_datetime_format": [211, 215, 278, 282, 314, 319, 351, 356, 861, 865, 928, 932, 964, 969, 1001, 1006], "title_use_sweep_tim": [211, 215, 278, 282, 314, 319, 351, 356, 861, 865, 928, 932, 964, 969, 1001, 1006], "range_ring_location_km": [212, 279, 316, 353, 862, 929, 966, 1003], "lw": [212, 213, 279, 280, 317, 354, 862, 863, 929, 930, 967, 1004], "ring": [212, 213, 279, 280, 316, 317, 353, 354, 862, 863, 929, 930, 966, 967, 1003, 1004, 1012, 1332, 1344], "range_r": [213, 280, 317, 354, 863, 930, 967, 1004, 1012], "seri": [213, 280, 317, 354, 474, 863, 930, 967, 1004, 1125], "draw": [213, 233, 234, 246, 280, 315, 317, 352, 354, 863, 883, 884, 896, 930, 965, 967, 1002, 1004], "format_str": [214, 281, 318, 355, 864, 931, 968, 1005], "ray_min": [214, 281, 318, 355, 864, 931, 968, 1005], "ray_max": [214, 281, 318, 355, 864, 931, 968, 1005], "style": [214, 232, 248, 281, 311, 312, 316, 318, 348, 349, 353, 355, 380, 864, 882, 898, 931, 961, 962, 966, 968, 998, 999, 1003, 1005, 1033], "consider": [215, 282, 319, 356, 507, 865, 932, 969, 1006, 1158, 1357], "ignoretilt": [216, 866], "run": [216, 479, 495, 540, 581, 866, 1130, 1146, 1172, 1278, 1320, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1375, 1376, 1378], "antenna_to_cartesian_track_rel": [216, 866], "slant": [216, 473, 866, 1069, 1124], "ncar": [216, 866], "soloii": [216, 866], "softwar": [216, 373, 380, 630, 866, 1026, 1033, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1375, 1376], "time_axis_flag": [217, 283, 320, 357, 867, 933, 970, 1007], "date_time_form": [217, 283, 320, 357, 867, 933, 970, 1007], "tz": [217, 283, 320, 357, 867, 933, 970, 1007], "zone": [217, 283, 320, 357, 867, 933, 970, 1007], "info": [217, 283, 315, 320, 352, 357, 497, 867, 933, 965, 970, 1002, 1007, 1148, 1320, 1358, 1373], "ref_point": [218, 284, 321, 358, 868, 934, 971, 1008], "1000": [218, 284, 321, 358, 511, 527, 868, 934, 971, 1008, 1162, 1265, 1333, 1341, 1347, 1348, 1368, 1376], "vert_r": [218, 284, 321, 358, 868, 934, 971, 1008], "alt_max": [218, 284, 321, 358, 868, 934, 971, 1008], "10000": [218, 246, 284, 321, 352, 358, 437, 442, 450, 460, 473, 476, 515, 519, 778, 868, 896, 934, 971, 1002, 1008, 1088, 1093, 1101, 1111, 1124, 1127, 1166, 1171, 1337, 1357, 1368], "dem_field": [218, 284, 321, 358, 868, 934, 971, 1008], "terrain_altitud": [218, 284, 321, 358, 868, 934, 971, 1008], "arbitrari": [218, 284, 321, 358, 507, 868, 934, 971, 1008, 1158, 1320, 1371], "trajectori": [218, 284, 321, 358, 868, 934, 971, 1008], "45": [218, 284, 321, 358, 493, 868, 934, 971, 1008, 1144, 1249, 1339, 1348, 1357, 1372, 1376], "47": [218, 284, 321, 358, 511, 868, 934, 971, 1008, 1162, 1359, 1371], "3db": [218, 284, 321, 358, 497, 868, 934, 971, 1008, 1148], "ist": [218, 284, 321, 358, 868, 934, 971, 1008], "aspect_ratio": [219, 285, 322, 359, 869, 935, 972, 1009], "aspect": [219, 285, 322, 359, 497, 869, 935, 972, 1009, 1148, 1336], "xlim": [220, 286, 323, 360, 870, 936, 973, 1010, 1341, 1343, 1347, 1348, 1368], "ylim": [220, 286, 323, 360, 870, 936, 973, 1010, 1341, 1343, 1345, 1346, 1347, 1348, 1350, 1352], "cartopi": [221, 222, 223, 224, 233, 234, 235, 287, 315, 871, 872, 873, 874, 883, 884, 885, 937, 965, 1012, 1325, 1327, 1328, 1331, 1335, 1337, 1338, 1351, 1353, 1355, 1357, 1362, 1365, 1366, 1368, 1369, 1371, 1372, 1374, 1375, 1376, 1378], "supress": [221, 233, 234, 240, 315, 352, 756, 871, 883, 884, 890, 965, 1002], "coastlin": [222, 233, 234, 315, 352, 872, 883, 884, 965, 1002], "polit": [223, 873], "state": [224, 508, 874, 1159], "grid_name_field_level_tim": [225, 241, 875, 891], "latitudin": [227, 237, 251, 877, 887, 901], "plot_longitudinal_level": [230, 238, 252, 880, 888, 902], "tuppl": [230, 437, 443, 463, 880, 1088, 1094, 1114], "ind_1": [231, 881], "ind_2": [231, 881], "basemap": [231, 237, 239, 240, 245, 246, 249, 251, 253, 324, 348, 349, 350, 352, 353, 881, 887, 889, 890, 895, 896, 899, 901, 903, 974, 998, 999, 1000, 1002, 1003, 1362, 1375], "upper": [231, 233, 234, 235, 237, 239, 249, 251, 253, 424, 527, 881, 883, 884, 885, 887, 889, 899, 901, 903, 1265, 1337], "colormesh": [231, 233, 234, 235, 237, 239, 249, 251, 253, 881, 883, 884, 885, 887, 889, 899, 901, 903], "64": [231, 233, 234, 235, 237, 239, 249, 251, 253, 881, 883, 884, 885, 887, 889, 899, 901, 903, 1336, 1341, 1342, 1343, 1347, 1349, 1351, 1352, 1355, 1369, 1375], "linewidth": [232, 234, 248, 882, 884, 898, 1338, 1347, 1348], "crosshair": [232, 248, 882, 898], "lat_lin": [233, 234, 246, 315, 352, 883, 884, 896, 965, 1002, 1012, 1331, 1344, 1355, 1372], "lon_lin": [233, 234, 246, 315, 352, 883, 884, 896, 965, 1002, 1012, 1331, 1344, 1355, 1372], "embellish": [233, 234, 315, 883, 884, 965, 1338, 1372], "add_grid_lin": [233, 315, 883, 965], "imshow": [233, 883, 1332, 1333, 1336, 1370], "reason": [233, 246, 883, 896], "america": [233, 234, 246, 315, 352, 883, 884, 896, 965, 1002], "cr": [233, 234, 287, 315, 437, 504, 883, 884, 937, 965, 1012, 1088, 1155, 1327, 1328, 1331, 1337, 1338, 1344, 1351, 1355, 1357, 1358, 1365, 1366, 1369, 1370, 1371, 1372], "subsequ": [233, 234, 315, 883, 884, 965], "geoax": [233, 234, 315, 883, 884, 965, 1365, 1368, 1371], "platecarre": [233, 234, 315, 883, 884, 965, 1327, 1331, 1337, 1338, 1351, 1355, 1357, 1366, 1369, 1371], "drawinf": [233, 234, 883, 884], "shapefil": [233, 234, 315, 352, 883, 884, 965, 1002], "certain": [233, 234, 315, 503, 553, 883, 884, 965, 1013, 1154, 1291, 1357, 1369], "instead": [233, 380, 452, 779, 883, 1033, 1103, 1320, 1328, 1357, 1362, 1368, 1375, 1376, 1378], "contour_valu": [234, 884], "maps_list": [234, 884], "countri": [234, 884], "110m": [234, 315, 884, 965], "background_zoom": [234, 884], "contour": [234, 884, 1325, 1335, 1353, 1374], "reson": [234, 315, 352, 884, 965, 1002], "sequenc": [234, 884], "colour": [234, 884], "embelish": [234, 352, 884, 1002], "10m": [234, 315, 884, 965, 1328, 1344, 1372], "50m": [234, 315, 884, 965, 1366, 1369], "naturalearthfeatur": [234, 315, 884, 965, 1372], "zoom": [234, 884], "background": [234, 352, 479, 495, 516, 884, 1002, 1011, 1012, 1130, 1146, 1167, 1344, 1351, 1357], "cost": [234, 507, 884, 1158], "alpha": [235, 315, 352, 437, 484, 485, 486, 487, 488, 489, 776, 785, 885, 965, 1002, 1088, 1135, 1136, 1137, 1138, 1139, 1140, 1338, 1347, 1372], "transpar": [235, 362, 885, 1015, 1347], "overplot": [235, 315, 352, 885, 965, 1002], "plot_latitudinal_level": [236, 250, 886, 900], "y_index": [237, 251, 887, 901], "x_index": [239, 253, 889, 903], "veric": [242, 892], "area_thresh": [246, 352, 896, 1002], "auto_rang": [246, 896], "min_lon": [246, 315, 352, 896, 965, 1002, 1331, 1344, 1369, 1372], "92": [246, 787, 788, 789, 896, 1345, 1355], "max_lon": [246, 315, 352, 896, 965, 1002, 1331, 1344, 1369, 1372], "86": [246, 896], "min_lat": [246, 315, 352, 896, 965, 1002, 1331, 1344, 1369, 1372], "max_lat": [246, 315, 352, 896, 965, 1002, 1331, 1344, 1369, 1372], "44": [246, 425, 479, 495, 896, 1076, 1130, 1146, 1320, 1331, 1334, 1357, 1374, 1375], "databas": [246, 352, 896, 1002], "merc": [246, 352, 896, 1002], "line_styl": [248, 311, 312, 316, 348, 349, 353, 898, 961, 962, 966, 998, 999, 1003, 1344], "plot_rhi": [270, 303, 340, 920, 953, 990, 1371], "plot_vpt": [270, 303, 340, 920, 953, 990], "grid_project": [287, 937, 1072, 1073, 1074], "progress": [287, 324, 497, 937, 974, 1148], "some": [287, 324, 418, 509, 511, 937, 974, 1045, 1056, 1160, 1162, 1183, 1320, 1328, 1336, 1337, 1355, 1357, 1362, 1366, 1368, 1370, 1371, 1372, 1375], "correctli": [287, 324, 937, 974], "report": [287, 324, 375, 519, 581, 582, 937, 974, 1028, 1171, 1362, 1376], "github": [287, 324, 937, 974, 1320, 1348, 1362, 1375, 1378], "tracker": [287, 324, 937, 974, 1362, 1376], "azimuthalequidist": [287, 937], "line_lon": [311, 348, 961, 998], "line_lat": [311, 348, 961, 998], "compat": [311, 312, 313, 316, 348, 349, 350, 353, 377, 961, 962, 963, 966, 998, 999, 1000, 1003, 1030, 1378], "line_x": [312, 349, 962, 999], "line_i": [312, 349, 962, 999], "ro": [313, 350, 963, 1000], "label_text": [313, 350, 963, 1000], "label_offset": [313, 350, 963, 1000], "shapefile_kwarg": [315, 965], "single_grid_lines_label": [315, 965], "edgecolor": [315, 965, 1347, 1372], "face": [315, 965], "lambertconform": [315, 965, 1328, 1344, 1365], "domain": [315, 352, 432, 497, 965, 1002, 1083, 1148, 1331], "neither": [315, 352, 383, 965, 1002, 1037], "extend": [315, 352, 376, 396, 543, 965, 1002, 1029, 1281, 1372], "word": [315, 965], "ones": [315, 443, 463, 965, 1094, 1114, 1336], "tranpar": [315, 352, 965, 1002], "pixel": [315, 502, 503, 511, 965, 1153, 1154, 1162, 1249, 1370, 1371, 1372], "lcc": [352, 1002], "cylindr": [352, 1002], "mill": [352, 1002], "exhibit": [352, 1002], "distort": [352, 1002], "aea": [352, 1002], "laea": [352, 1002], "conform": [352, 1002, 1362, 1364, 1372], "tmerc": [352, 1002], "aeqd": [352, 1002], "cass": [352, 1002], "even": [352, 478, 509, 1002, 1129, 1160, 1347, 1362, 1368, 1372, 1378], "cyl": [352, 1002], "cannot": [352, 363, 1002, 1016, 1370], "lake": [352, 1002, 1372], "esri": [352, 1002], "untest": [352, 1002], "dtobj": [361, 1014], "storage_opt": [362, 372, 374, 1015, 1025, 1027], "anon": [362, 372, 374, 1015, 1025, 1027], "open": [362, 372, 374, 1015, 1025, 1027, 1183, 1341, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1376, 1378], "decompress": [362, 1015], "bzip2": [362, 1015], "close": [362, 494, 495, 507, 787, 788, 1015, 1145, 1146, 1158, 1372], "backend": [362, 372, 1015, 1025], "googl": [362, 372, 1015, 1025, 1376], "cloud": [362, 372, 478, 507, 1015, 1025, 1129, 1158, 1325, 1326, 1329, 1372, 1374, 1376, 1378], "storag": [362, 372, 1015, 1025, 1244], "amazon": [362, 372, 1015, 1025, 1327, 1328], "servic": [362, 372, 1015, 1025, 1327, 1328, 1336], "s3": [362, 372, 1015, 1025, 1327, 1328, 1339, 1357], "file_lik": [362, 1015], "use_rsl": [363, 1016], "read_": [363, 1016], "trmm": [363, 376, 1016, 1029, 1362, 1375], "choos": [363, 1016, 1325, 1335, 1353, 1357, 1374, 1378], "typeerror": [363, 389, 1016], "launch_datetim": [364, 1017], "radiosond": [364, 1017], "launch": [364, 1017], "record": [364, 1017, 1371, 1373], "target_datetim": [365, 1018], "closest": [365, 442, 450, 460, 473, 476, 787, 788, 1018, 1061, 1093, 1101, 1111, 1124, 1127], "profile_datetim": [365, 1018], "use_arm_scan_nam": [366, 1019], "scan_nam": [366, 1019], "cfradial2": [367, 1020], "use_file_field_attribut": [368, 1021], "csu": [368, 1021], "chill": [368, 1021], "chl": [368, 1021], "field_file_nam": [368, 1021], "long_nam": [368, 1021, 1357, 1365, 1373], "write_grid": [369, 1022], "zlib": [370, 371, 1023, 1024], "read_mdv": [370, 1023, 1323, 1332, 1343, 1347, 1348, 1349], "fulli": [370, 582, 1023, 1375], "interchang": [370, 1023], "vlevel": [370, 1023], "proj_polar_radar": [370, 1023], "proj_rhi_radar": [370, 1023], "13": [370, 446, 451, 466, 541, 1023, 1097, 1102, 1117, 1279, 1322, 1328, 1350, 1358, 1360, 1369, 1372, 1373, 1374], "vlevel_typ": [370, 1023], "vert_type_z": [370, 1023], "vert_type_elev": [370, 1023], "vert_type_az": [370, 1023], "17": [370, 1023, 1345, 1350, 1351, 1353, 1374], "vert_type_pressur": [370, 1023], "vert_type_theta": [370, 1023], "unknown": [370, 1023], "most": [370, 481, 1013, 1023, 1132, 1336, 1366, 1368, 1372, 1378], "station": [372, 373, 1025, 1026, 1328], "linear_interp": [372, 1025], "nexrad": [372, 373, 374, 375, 1025, 1026, 1027, 1028, 1325, 1326, 1329, 1335, 1339, 1353, 1357, 1362, 1373, 1374], "archiv": [372, 1025, 1340, 1362], "host": [372, 374, 1025, 1027], "noaa": [372, 374, 376, 1025, 1027, 1029, 1327, 1328, 1339, 1357], "nation": [372, 374, 1025, 1027, 1327, 1336], "climat": [372, 374, 1025, 1027, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "ucar": [372, 373, 1025, 1026], "thredd": [372, 373, 379, 1025, 1026, 1032], "server": [372, 373, 1025, 1026], "letter": [372, 373, 375, 1025, 1026, 1028], "icao": [372, 373, 1025, 1026], "older": [372, 373, 1025, 1026, 1320, 1325, 1326, 1329, 1362, 1374, 1376], "mix": [372, 478, 553, 1025, 1129, 1291, 1339, 1357], "nearest": [372, 442, 450, 451, 460, 473, 476, 496, 527, 533, 534, 570, 1025, 1069, 1074, 1093, 1101, 1102, 1111, 1124, 1127, 1147, 1265, 1271, 1272, 1308, 1368, 1371], "fsspec": [372, 374, 1025, 1027], "cut": [372, 373, 374, 503, 572, 573, 1025, 1026, 1027, 1154, 1310, 1311], "ncdc": [372, 374, 1025, 1027], "gov": [372, 374, 1025, 1027, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1352, 1355, 1356], "edu": [372, 373, 502, 1025, 1026, 1153, 1339, 1357], "catalog": [372, 373, 1025, 1026], "html": [372, 373, 502, 1025, 1026, 1153, 1362, 1370, 1375, 1376], "common": [373, 1026, 1362, 1375], "cdm": [373, 379, 1026, 1032], "url": [373, 1026], "java": [373, 379, 1026, 1032], "tool": [373, 379, 1026, 1032, 1362, 1375, 1376], "opendap": [373, 1026], "accept": [373, 437, 442, 450, 460, 473, 483, 508, 509, 1026, 1088, 1093, 1101, 1111, 1124, 1134, 1159, 1160, 1320, 1376], "compil": [373, 508, 1026, 1159, 1362, 1375], "unidata": [373, 1026, 1327], "htm": [373, 1026], "nw": [374, 1027], "wsr": [374, 511, 1027, 1162], "88d": [374, 511, 1027, 1162], "iii": [374, 1027], "distribut": [374, 479, 495, 515, 517, 518, 521, 522, 523, 524, 556, 557, 1027, 1130, 1146, 1166, 1168, 1170, 1249, 1259, 1260, 1261, 1262, 1294, 1295, 1357, 1362, 1376], "roc": [374, 1027], "wsr88d": [374, 375, 1027, 1028], "level_iii": [374, 1027], "level3info": [374, 1027], "asp": [374, 1027], "radar_format": [375, 1028], "callid": [375, 1028], "skip_range_check": [375, 1028], "rsl_radar": [375, 1028], "id": [375, 380, 1028, 1033], "verifi": [375, 558, 576, 1028, 1296, 1314], "ioerror": [375, 1028], "time_ord": [376, 1029], "full_xhdr": [376, 1029], "noaa_hh_hdr": [376, 1029], "ignore_xhdr": [376, 1029], "ignore_sweep_start_m": [376, 1029], "sigmet": [376, 1029, 1362], "iri": [376, 1029, 1362, 1375], "sequenti": [376, 1029, 1336], "re": [376, 478, 1029, 1129], "manner": [376, 1029], "determind": [376, 1029], "maintain": [376, 1029, 1068, 1071], "reverse_and_rol": [376, 1029], "strictli": [376, 1029], "increas": [376, 482, 497, 507, 510, 1029, 1074, 1133, 1148, 1158, 1161, 1336, 1368, 1376], "becom": [376, 1029, 1357, 1365, 1368, 1371], "thisopt": [376, 1029], "strict": [376, 520, 1029], "header": [376, 615, 616, 1029], "decod": [376, 520, 1012, 1029], "hurrican": [376, 1029, 1357], "hunter": [376, 1029], "millisecond": [376, 1029], "precis": [376, 478, 1029, 1129, 1320], "explic": [376, 1029], "read_rsl": [376, 1029, 1375], "error": [376, 380, 508, 509, 520, 531, 561, 562, 1029, 1033, 1159, 1160, 1269, 1299, 1300, 1320, 1371, 1375], "uf": [377, 382, 1030, 1035, 1362], "implement": [377, 383, 385, 387, 396, 406, 502, 513, 1030, 1037, 1050, 1072, 1073, 1153, 1164, 1322], "write_proj_coord_si": [379, 1032], "proj_coord_si": [379, 1032], "write_point_x_y_z": [379, 1032], "write_point_lon_lat_alt": [379, 1032], "projectioncoordinatesystem": [379, 1032], "toolsui": [379, 1032], "appropri": [379, 1032], "understood": [379, 1032], "rgb": [380, 1033], "viridi": [380, 1033, 1357], "color_level": [380, 1033], "warp": [380, 1033], "sld": [380, 1033], "use_doublequot": [380, 1033], "geotiff": [380, 1033, 1362], "sphere": [380, 544, 571, 1033, 1282, 1309], "latter": [380, 1033], "usabl": [380, 1033], "former": [380, 1033], "gi": [380, 1033], "while": [380, 1033, 1071, 1366, 1378], "show": [380, 1033, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1357, 1364, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1376], "lack": [380, 421, 1033, 1048, 1058], "gdal": [380, 1033, 1362], "via": [380, 1033, 1069, 1070], "conda": [380, 1033, 1362, 1375, 1376, 1378], "rbg": [380, 1033], "channel": [380, 439, 445, 459, 471, 472, 477, 762, 797, 1033, 1090, 1096, 1110, 1122, 1123, 1128], "tabl": [380, 559, 561, 562, 787, 788, 789, 1033, 1297, 1299, 1300, 1370], "column": [380, 545, 546, 1033, 1283, 1284, 1325, 1354, 1360, 1374], "categor": [380, 1033, 1358, 1372], "gdalwarp": [380, 1033], "command": [380, 1033, 1362, 1365, 1370, 1372, 1376, 1378], "descriptor": [380, 1033], "tiff": [380, 1033], "don": [380, 1033, 1331], "quot": [380, 1033], "help": [380, 1033, 1172, 1331, 1336, 1357, 1376, 1378], "translat": [380, 1033], "sr": [380, 1033], "mdv_field_nam": [381, 1034], "field_write_ord": [381, 382, 1034, 1035], "sentinel": [381, 382, 1034, 1035], "writabl": [381, 1034], "satisfi": [381, 1034], "xy": [381, 1034, 1074], "irregular": [381, 1034, 1320], "exce": [381, 1034, 1357], "122": [381, 1034, 1327, 1331, 1337, 1356], "uncompress": [381, 1034], "sai": [381, 1034, 1376], "uf_field_nam": [382, 1035], "radar_field_nam": [382, 1035], "volume_start": [382, 1035], "templates_extra": [382, 1035], "radar_beam_width_h": [382, 1035], "radar_beam_width_v": [382, 1035], "radar_receiver_bandwidth": [382, 1035], "prt": [382, 1035], "polarization_mod": [382, 1035], "round": [382, 1035, 1069, 1070, 1320], "_uf_scale_factor": [382, 1035], "charact": [382, 1012, 1035], "advanc": [382, 1035], "usag": [382, 1035], "templat": [382, 1035, 1376], "mandatory_head": [382, 1035], "optional_head": [382, 1035], "field_head": [382, 1035], "lazi": [383, 386, 392, 397, 399, 412, 419, 1036, 1037, 1039, 1046], "set_lazi": [383, 1037], "callabl": [383, 419, 1037, 1046], "cach": [383, 410, 1037], "tradit": [383, 386, 397, 399, 1037], "supplement": [383, 1037], "syntax": [383, 1037], "prevent": [383, 1037, 1074, 1376], "comparison": [383, 437, 513, 1037, 1088, 1164, 1331], "__cmp__": [383, 1037], "__ge__": [383, 1037], "__gt__": [383, 1037], "__le__": [383, 1037], "__lt__": [383, 1037], "__ne__": [383, 1037], "nor": [383, 1037], "viewitem": [383, 1037], "viewkei": [383, 1037], "viewvalu": [383, 1037], "fromkei": [383, 1037], "tradition": [383, 407, 1037], "referenc": [383, 1037], "lazyloaddictionari": [383, 1037], "henc": [383, 1037], "key1": [383, 1037], "value1": [383, 1037], "key2": [383, 1037], "value2": [383, 1037], "lazy_func": [383, 1037], "lambda": [383, 1037], "lazykey1": [383, 1037], "privat": [383, 789, 1376], "delattr": 385, "dir": [387, 1183], "format_spec": 389, "formatt": 389, "getattr": 391, "helper": [393, 403, 404, 1336], "pickl": [393, 403, 404], "subclass": 396, "noth": 396, "overridden": 396, "protocol": 404, "repr": [405, 520], "setattr": 406, "memori": [408, 513, 1074, 1164, 1370, 1371], "abstract": 410, "overrid": [410, 1348, 1372], "issubclass": 410, "invok": 410, "earli": 410, "abc": 410, "abcmeta": 410, "__subclasscheck__": 410, "notimpl": 410, "outcom": 410, "item": [411, 421, 1038, 1048, 1051, 1058], "els": [413, 414, 1040, 1041, 1052, 1371], "value_cal": [419, 1046], "mx": 423, "mn": 423, "relh_slop": [423, 437, 517, 1088, 1168], "005": 423, "destandard": 423, "h_iso0": [423, 437, 504, 1088, 1155], "slope": [423, 437, 497, 508, 517, 1088, 1148, 1159, 1168], "sigmoid": [423, 437, 517, 1088, 1168], "field_std": 423, "hlowerleft": 424, "hupperright": 424, "matrix": [424, 437, 508, 776, 785, 1088, 1159], "freq": [425, 453, 454, 475, 498, 499, 1076, 1104, 1105, 1126, 1149, 1150], "rng": [425, 501, 526, 527, 543, 1076, 1152, 1264, 1265, 1281], "wai": [425, 450, 454, 461, 481, 497, 498, 514, 778, 779, 780, 1076, 1101, 1105, 1112, 1132, 1148, 1149, 1165, 1331, 1364, 1371, 1376, 1378], "ga": [425, 454, 461, 498, 778, 779, 780, 1076, 1105, 1112, 1149], "empir": [425, 1076], "satur": [425, 1076], "latm": [425, 1076], "toa": [426, 510, 1072, 1073, 1074, 1077, 1161], "floor": [426, 1077], "nyq": [427, 1078, 1366], "check_nyq_uniform": [427, 1078], "deriv": [427, 507, 509, 1078, 1158, 1160, 1370], "try": [427, 507, 513, 1078, 1158, 1164, 1368, 1369, 1372], "vel_dict": [427, 429, 430, 1078, 1080, 1081], "entri": [427, 1078, 1373], "am": [428, 1079, 1362, 1376], "glossari": [428, 1079], "dry": [428, 1079, 1358, 1370], "world": [428, 1079, 1325, 1335], "aloft": [428, 1079, 1371, 1372], "oppos": [428, 1079, 1339], "nwp": [428, 1079, 1358, 1372], "why": [428, 1079, 1376], "easi": [428, 1061, 1079, 1362], "think": [428, 1079], "turn": [428, 1079, 1336, 1357, 1362], "spin": [428, 1079], "author": [428, 495, 1012, 1079, 1146, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359], "randi": [428, 1079], "chase": [428, 1079], "dopplerchas": [428, 1079], "american": [428, 1079], "meteorolog": [428, 519, 1079, 1171], "2022": [428, 553, 1079, 1291, 1327, 1339, 1357, 1362, 1376], "meteorologi": [428, 432, 446, 451, 466, 507, 519, 541, 1068, 1071, 1079, 1083, 1097, 1102, 1117, 1158, 1171, 1279], "ametsoc": [428, 1079], "org": [428, 479, 495, 502, 553, 1079, 1130, 1146, 1153, 1291, 1339, 1357, 1362, 1376], "wiki": [428, 502, 1079, 1153], "sdbz_field": [429, 431, 438, 440, 456, 1080, 1082, 1089, 1091, 1107], "spectral": [429, 431, 438, 440, 448, 456, 458, 464, 465, 466, 467, 468, 469, 470, 481, 541, 617, 1080, 1082, 1089, 1091, 1099, 1107, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1132, 1279, 1320], "signal_field": [430, 432, 445, 446, 457, 466, 467, 468, 469, 471, 472, 477, 1081, 1083, 1096, 1097, 1108, 1117, 1118, 1119, 1120, 1122, 1123, 1128], "negative_awai": [430, 449, 1081, 1100], "negative_toward": [430, 449, 1081, 1100], "width_dict": [431, 432, 1082, 1083], "subtract_nois": [432, 441, 448, 449, 457, 458, 459, 465, 468, 469, 470, 1083, 1092, 1099, 1100, 1108, 1109, 1110, 1116, 1119, 1120, 1121], "noise_field": [432, 447, 451, 452, 457, 462, 468, 469, 1083, 1098, 1102, 1103, 1108, 1113, 1119, 1120], "lag": [432, 441, 449, 459, 471, 472, 1083, 1092, 1100, 1110, 1122, 1123], "subtract": [432, 441, 448, 449, 457, 458, 459, 465, 468, 469, 470, 479, 495, 762, 1083, 1092, 1099, 1100, 1108, 1109, 1110, 1116, 1119, 1120, 1121, 1130, 1146], "denomin": [432, 1083], "varianc": [432, 541, 542, 547, 559, 560, 580, 1083, 1279, 1280, 1285, 1297, 1298, 1318], "srivastava": [432, 1083], "jameson": [432, 1083], "hildebrand": [432, 446, 451, 466, 541, 778, 1083, 1097, 1102, 1117, 1279], "februari": [432, 1083], "1979": [432, 1083], "rhohv_snow": [433, 513, 1084, 1164], "rhohv_rain": [433, 513, 1084, 1164], "rhohv_ml": [433, 513, 1084, 1164], "93": [433, 453, 475, 497, 513, 1084, 1104, 1126, 1148, 1164], "zh_snow": [433, 513, 1084, 1164], "zh_rain": [433, 513, 1084, 1164], "zh_ml": [433, 513, 1084, 1164], "27": [433, 513, 1084, 1164, 1355], "zv_snow": [433, 513, 1084, 1164], "zv_rain": [433, 513, 1084, 1164], "zv_ml": [433, 513, 1084, 1164], "26": [433, 442, 513, 1084, 1093, 1164], "beam_factor": [433, 513, 1084, 1164], "npts_diagram": [433, 513, 1084, 1164], "81": [433, 513, 1084, 1164, 1373], "rng_bottom_max": [433, 513, 1084, 1164], "200000": [433, 513, 1084, 1164, 1344, 1357], "rhohv_field": [433, 436, 444, 482, 762, 772, 773, 774, 787, 788, 789, 1084, 1087, 1095, 1133], "theoretical_cross_correlation_ratio": [433, 1084], "snow": [433, 479, 485, 495, 553, 774, 1084, 1130, 1136, 1146, 1291, 1339, 1357, 1358, 1372], "diagram": [433, 1084], "could": [433, 532, 540, 765, 766, 1084, 1270, 1278, 1328, 1376], "rhohv_theo_dict": [433, 1084], "sigma_bird": [434, 1085], "vol_refl_field": [434, 475, 1085, 1126], "bird_density_field": [434, 1085], "densiti": [434, 517, 1085, 1168, 1358, 1372], "volumetr": [434, 475, 1085, 1126, 1363], "bird_density_dict": [434, 1085], "filt_field": [435, 1086], "unfilt_field": [435, 1086], "ccor_field": [435, 1086], "ccor": [435, 1086], "unfilt": [435, 1086, 1372], "ccor_dict": [435, 1086], "cdr_field": [436, 1087], "circular": [436, 556, 557, 1087, 1294, 1295, 1357], "depolar": [436, 1087], "cdr": [436, 1087], "features_matrix": [437, 1088], "weight": [437, 460, 504, 507, 513, 518, 550, 577, 578, 579, 580, 765, 766, 787, 1069, 1070, 1071, 1072, 1073, 1074, 1088, 1111, 1155, 1158, 1164, 1170, 1288, 1315, 1316, 1317, 1318, 1368, 1371], "var_nam": [437, 483, 504, 517, 1088, 1134, 1155, 1168], "hydro_nam": [437, 483, 504, 517, 1088, 1134, 1155, 1168], "ag": [437, 504, 513, 1088, 1155, 1164, 1358, 1370, 1372], "lr": [437, 504, 1088, 1155, 1358, 1370, 1372], "rp": [437, 504, 1088, 1155, 1358, 1370, 1372], "rn": [437, 504, 1088, 1155, 1358, 1370, 1372], "mh": [437, 504, 1088, 1155, 1358, 1370, 1372], "ih": [437, 504, 1088, 1155, 1358, 1370, 1372], "hdg": [437, 504, 1088, 1155, 1358, 1370, 1372], "nsamples_it": [437, 1088], "20000": [437, 480, 482, 515, 1088, 1131, 1133, 1166, 1344, 1368], "external_iter": [437, 1088], "internal_iter": [437, 1088], "cv_approach": [437, 1088], "num_samples_arr": [437, 1088], "n_samples_syn": [437, 1088], "50": [437, 450, 474, 476, 504, 511, 525, 756, 758, 774, 1012, 1088, 1101, 1125, 1127, 1155, 1162, 1263, 1333, 1351, 1355, 1358, 1359, 1368, 1370, 1371, 1372, 1373], "nmedoids_min": [437, 483, 1088, 1134], "acceptance_threshold": [437, 483, 1088, 1134], "001": [437, 517, 549, 1088, 1168, 1287, 1347], "parallel": [437, 507, 508, 509, 1088, 1158, 1159, 1160], "sample_data": [437, 1088], "kmax_it": [437, 483, 1088, 1134], "nsamples_smal": [437, 1088], "40000": [437, 1088, 1333, 1337, 1344, 1368], "sampling_size_clara": [437, 1088], "niter_clara": [437, 1088], "keep_labeled_data": [437, 1088], "use_median": [437, 483, 1088, 1134], "allow_label_dupl": [437, 1088], "centroid": [437, 480, 504, 515, 1074, 1088, 1131, 1155, 1166, 1372], "nsampl": [437, 515, 517, 1088, 1166, 1168], "nvariabl": [437, 504, 1088, 1155], "extern": [437, 1088], "loop": [437, 1088, 1359], "medoid": [437, 483, 1088, 1134], "inter": [437, 483, 1088, 1134], "quantil": [437, 483, 772, 1071, 1088, 1134], "dispers": [437, 483, 1088, 1134], "cluster": [437, 504, 1088, 1155, 1372], "critic": [437, 1088], "approach": [437, 497, 504, 511, 513, 1088, 1148, 1155, 1162, 1164], "reject": [437, 1088], "intermedi": [437, 478, 483, 1088, 1129, 1134], "kmedoid": [437, 483, 1088, 1134], "clara": [437, 1088], "exceed": [437, 493, 1088, 1144], "kept": [437, 482, 1088, 1133], "labeled_data": [437, 1088], "medoids_dict": [437, 483, 1088, 1134], "final_medoids_dict": [437, 483, 1088, 1134], "sphidp_field": [438, 1089], "phase_offset": [439, 449, 1090, 1100], "signal_h_field": [439, 441, 448, 449, 458, 459, 464, 465, 470, 1090, 1092, 1099, 1100, 1109, 1110, 1115, 1116, 1121], "signal_v_field": [439, 441, 448, 449, 458, 459, 464, 465, 470, 1090, 1092, 1099, 1100, 1109, 1110, 1115, 1116, 1121], "sdbzv_field": [440, 1091], "zdr_dict": [440, 441, 1091, 1092], "noise_h_field": [441, 448, 449, 458, 459, 465, 470, 1092, 1099, 1100, 1109, 1110, 1116, 1121], "noise_v_field": [441, 448, 449, 458, 459, 465, 470, 1092, 1099, 1100, 1109, 1110, 1116, 1121], "ref_tim": [442, 450, 460, 473, 474, 476, 1093, 1101, 1111, 1124, 1125, 1127], "latlon_tol": [442, 473, 476, 526, 555, 1093, 1124, 1127, 1264, 1293], "0005": [442, 473, 476, 1093, 1124, 1127], "delta_rng": [442, 473, 543, 1093, 1124, 1281], "15000": [442, 473, 765, 766, 1093, 1124, 1364, 1368], "delta_azi": [442, 473, 528, 543, 1093, 1124, 1266, 1281], "hmax": [442, 450, 460, 473, 476, 555, 1093, 1101, 1111, 1124, 1127, 1293], "hre": [442, 450, 460, 473, 476, 511, 1093, 1101, 1111, 1124, 1127, 1162], "250": [442, 473, 482, 1072, 1073, 1074, 1093, 1124, 1133, 1370, 1373], "avg_typ": [442, 450, 460, 473, 528, 530, 1093, 1101, 1111, 1124, 1266, 1268], "nvalid_min": [442, 450, 460, 473, 513, 528, 530, 765, 766, 1093, 1101, 1111, 1124, 1164, 1266, 1268], "interp_kind": [442, 450, 460, 473, 476, 570, 1093, 1101, 1111, 1124, 1127, 1308], "qvp": [442, 450, 460, 473, 476, 514, 1093, 1101, 1111, 1124, 1127, 1165], "enhanc": [442, 1093, 1378], "interest": [442, 473, 476, 1093, 1124, 1127, 1331, 1357, 1372], "central": [442, 473, 543, 1093, 1124, 1281], "evp": [442, 473, 1093, 1124], "regardless": [442, 450, 460, 473, 476, 493, 1093, 1101, 1111, 1124, 1127, 1144], "elimin": [442, 450, 460, 473, 476, 1093, 1101, 1111, 1124, 1127, 1366, 1368], "kaltenboeck": [442, 1093], "ryzhkov": [442, 450, 484, 511, 514, 758, 1093, 1101, 1135, 1162, 1165], "2016": [442, 450, 482, 504, 1093, 1101, 1133, 1155, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1376], "storm": [442, 495, 516, 1093, 1146, 1167, 1249, 1250, 1252, 1339, 1357, 1368, 1371], "explor": [442, 513, 765, 766, 1093, 1164], "methodologi": [442, 519, 1093, 1171, 1366], "meteorologisch": [442, 1093], "zeitschrift": [442, 1093], "207": [442, 1093], "222": [442, 1093, 1323, 1340, 1371], "fields_in_list": [443, 463, 1094, 1114], "fields_out_list": [443, 463, 481, 1094, 1114, 1132], "fourier": [443, 463, 1094, 1114], "get_window": [443, 463, 1094, 1114], "ifft": [443, 1094], "l_field": [444, 1095], "logarithm": [444, 1095], "ll": [444, 1095], "log10": [444, 1095, 1331], "mph_dict": [445, 1096], "navg": [446, 466, 541, 1097, 1117, 1279], "nnoise_min": [446, 466, 541, 1097, 1117, 1279], "dbadu_to_dbm_hh": [446, 466, 468, 469, 1097, 1117, 1119, 1120], "dbadu_to_dbm_vv": [446, 466, 468, 469, 1097, 1117, 1119, 1120], "sehkon": [446, 466, 541, 1097, 1117, 1279], "1974": [446, 451, 466, 541, 1097, 1102, 1117, 1279], "noise_dict": [446, 451, 452, 466, 1097, 1102, 1103, 1117], "sekhon": [446, 451, 466, 541, 778, 1097, 1102, 1117, 1279], "808": [446, 451, 466, 541, 1097, 1102, 1117, 1279], "811": [446, 451, 466, 541, 1097, 1102, 1117, 1279], "noisedbz_v": [447, 1098], "ref_dist": [447, 1098], "noisedbz": [447, 1098], "fields_list": [448, 449, 1099, 1100], "use_pwr": [448, 1099], "smooth_window": [448, 465, 468, 469, 1099, 1116, 1119, 1120], "srhohv_field": [448, 458, 464, 1099, 1109, 1115], "pwr_h_field": [448, 458, 465, 1099, 1109, 1116], "pwr_v_field": [448, 458, 465, 1099, 1109, 1116], "gaussian": [448, 465, 468, 469, 515, 776, 785, 797, 1099, 1116, 1119, 1120, 1166, 1249, 1250, 1347], "quasi": [450, 460, 514, 1101, 1111, 1165], "zhang": [450, 473, 484, 514, 1101, 1124, 1135, 1165], "reev": [450, 514, 1101, 1165], "kumjian": [450, 460, 514, 1101, 1111, 1165], "tschallen": [450, 514, 1101, 1165], "tr\u00f6mel": [450, 1101], "simmer": [450, 484, 514, 1101, 1135, 1165], "jtech": [450, 473, 1101, 1124], "33": [450, 1101, 1373, 1374], "551": [450, 1101], "562": [450, 1101], "nbins_min": [451, 778, 779, 1102], "max_std_pwr": [451, 778, 1102], "pwr_field": [451, 452, 461, 469, 481, 1102, 1103, 1112, 1120, 1132], "get_noise_po": [451, 452, 542, 1102, 1103, 1280], "noisi": [451, 452, 1102, 1103], "noise_pos_dict": [451, 452, 1102, 1103], "reserv": [451, 526, 527, 555, 1102, 1264, 1265, 1293], "npulses_rai": [452, 779, 1103], "ngates_min": [452, 542, 1103, 1280], "800": [452, 542, 765, 766, 779, 1103, 1280], "ivic": [452, 542, 549, 559, 561, 562, 779, 1103, 1280, 1287, 1297, 1299, 1300], "et": [452, 478, 479, 495, 504, 507, 511, 512, 516, 756, 758, 762, 779, 1103, 1129, 1130, 1146, 1155, 1158, 1162, 1163, 1167, 1357, 1372], "al": [452, 478, 479, 495, 504, 507, 508, 511, 512, 516, 756, 758, 762, 779, 1103, 1129, 1130, 1146, 1155, 1158, 1159, 1162, 1163, 1167, 1357, 1372], "curti": [452, 542, 1103, 1280], "torr": [452, 542, 1103, 1280], "2737": [452, 542, 1103, 1280], "2753": [452, 542, 1103, 1280], "kw2": [453, 1104], "rcs_field": [453, 454, 1104, 1105], "water": [453, 475, 497, 1104, 1126, 1148], "rc": [453, 454, 497, 1104, 1105, 1148], "rcs_dict": [453, 454, 1104, 1105], "lmf": [454, 461, 1105, 1112], "attg": [454, 461, 498, 778, 779, 780, 1105, 1112, 1149], "radconst": [454, 461, 1105, 1112], "tx_pwr": [454, 1105], "lrx": [454, 461, 1105, 1112], "ltx": [454, 1105], "lradom": [454, 461, 1105, 1112], "neglect_gas_att": [454, 1105], "feed": [454, 461, 1105, 1112], "radom": [454, 461, 787, 788, 1105, 1112], "neglect": [454, 1105], "ort_refl_field": [455, 1106], "refl": [455, 757, 758, 1106, 1345], "ort_refl": [455, 1106], "dbz_dict": [456, 457, 1107, 1108], "use_rhohv": [458, 464, 1109, 1115], "srhohv": [458, 464, 1109, 1115], "srho_hv": [458, 1109], "rhohv_dict": [458, 459, 1109, 1110], "50000": [460, 778, 1111, 1333, 1337, 1357, 1368], "weight_pow": [460, 1111], "ab": [460, 1111], "grng": [460, 1111], "tobin": [460, 1111], "2017": [460, 473, 1111, 1124], "surfac": [460, 479, 495, 1111, 1130, 1146, 1357], "ic": [460, 473, 1111, 1124, 1347, 1358, 1372], "pellet": [460, 1111], "forecast": [460, 1111], "2065": [460, 1111], "2082": [460, 1111], "THE": [461, 1112], "s_pwr_dict": [461, 1112], "sphidp_dict": [464, 1115], "compute_pow": [465, 469, 1116, 1120], "szdr_dict": [465, 1116], "phase_dict": [467, 1118], "pwr_dict": [468, 1119], "sdbz_dict": [469, 1120], "srhohv_dict": [470, 1121], "statist": [471, 472, 504, 530, 1071, 1122, 1123, 1155, 1268], "fluctuat": [471, 472, 1122, 1123], "st1_dict": [471, 1122], "st1": [471, 1122, 1370], "st2_dict": [472, 1123], "st2": [472, 1123, 1370], "bukovc": [473, 1124], "winter": [473, 495, 1124, 1146, 1339, 1357], "liquid": [473, 1124, 1372], "reveal": [473, 1124, 1372], "2dvd": [473, 1124], "oklahoma": [473, 1124, 1245], "56": [473, 1124, 1359, 1371], "1345": [473, 1124], "1363": [473, 1124], "along_azi": [474, 1125], "fixed_rang": [474, 1125], "fixed_azimuth": [474, 1125], "fixed_elev": [474, 1125], "rng_tol": [474, 1125], "value_start": [474, 1125], "value_stop": [474, 1125], "acoord": [474, 1125], "along_el": [474, 1125], "along_rng": [474, 1125], "around": [474, 479, 482, 495, 525, 552, 787, 788, 1072, 1073, 1125, 1130, 1133, 1146, 1249, 1263, 1290, 1332, 1347, 1350, 1357, 1364, 1366, 1371, 1372], "stop": [474, 1125], "kw": [475, 1126], "vol_refl_dict": [475, 1126], "10log10": [475, 1126], "wide": [477, 478, 1128, 1129], "wbn_dict": [477, 1128], "cappi_level": [478, 1129], "zr_a": [478, 1129], "zr_b": [478, 1129], "core_wt_threshold": [478, 1129], "conv_wt_threshold": [478, 1129], "conv_scale_km": [478, 1129], "min_reflect": [478, 1129], "conv_min_refl": [478, 1129], "conv_core_threshold": [478, 1129], "42": [478, 479, 495, 516, 1129, 1130, 1146, 1167, 1355, 1357], "override_check": [478, 1129], "computation": [478, 1129], "classifi": [478, 479, 495, 504, 1011, 1129, 1130, 1146, 1155, 1357, 1358, 1372], "convect": [478, 479, 495, 516, 1011, 1129, 1130, 1146, 1167, 1325, 1354, 1360, 1374], "stratiform": [478, 479, 495, 516, 1011, 1129, 1130, 1146, 1167, 1325, 1354, 1360, 1371, 1374], "\u00e0": [478, 1129], "trou": [478, 1129], "wavelet": [478, 1129], "atwt": [478, 1129], "multiresolut": [478, 1129], "analysi": [478, 546, 787, 788, 1068, 1071, 1129, 1284], "focus": [478, 1129], "robust": [478, 1060, 1129, 1372], "raut": [478, 1129], "2020": [478, 1129, 1339, 1362, 1375, 1376], "relationship": [478, 1129], "sensit": [478, 482, 1129, 1133], "howev": [478, 507, 1129, 1158, 1366, 1370, 1371, 1372], "signific": [478, 1129, 1372], "approxim": [478, 1129], "break": [478, 1129], "season": [478, 1129], "2018": [478, 1129], "discuss": [478, 1129, 1362], "insensit": [478, 1129], "variat": [478, 507, 1129, 1158], "dyadic": [478, 1129], "natur": [478, 1074, 1129], "scale_break_us": [478, 1129], "greater": [478, 516, 1129, 1167, 1357], "bypass": [478, 1129], "saniti": [478, 1129], "fall": [478, 1071, 1074, 1129], "strong": [478, 495, 1129, 1146, 1371, 1372], "updraft": [478, 1129, 1371], "activ": [478, 1129, 1378], "collis": [478, 1129], "coalesc": [478, 1129], "remain": [478, 1129], "intens": [478, 516, 1129, 1167, 1249, 1372], "unclassifi": [478, 1129], "karekar": [478, 1129], "puranik": [478, 1129], "techniqu": [478, 493, 1068, 1071, 1129, 1144, 1371], "infrar": [478, 1129], "satellit": [478, 1129], "ieee": [478, 508, 1129, 1159], "geosci": [478, 508, 1129, 1159], "remot": [478, 508, 1129, 1159, 1327, 1376], "sen": [478, 508, 1129, 1159], "lett": [478, 1129], "328": [478, 1129, 1340, 1353, 1374], "330": [478, 1129, 1362, 1376], "seed": [478, 1129], "reeder": [478, 1129], "jakob": [478, 1129], "cascad": [478, 1129], "downscal": [478, 1129], "rainfal": [478, 484, 485, 486, 487, 488, 489, 490, 507, 509, 758, 1129, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1158, 1160, 1372], "geophi": [478, 1129], "123": [478, 1129], "2050": [478, 1129], "2067": [478, 1129], "louf": [478, 787, 788, 789, 1129], "gayatri": [478, 1129], "murugavel": [478, 1129], "konwar": [478, 1129], "prabhakaran": [478, 1129], "tran": [478, 1129], "58": [478, 756, 758, 1129, 1355], "5409": [478, 1129], "5415": [478, 1129], "dx": [479, 495, 497, 516, 1130, 1146, 1148, 1167, 1357], "dy": [479, 495, 516, 1130, 1146, 1167, 1357], "level_m": [479, 495, 1130, 1146], "always_core_thr": [479, 495, 1011, 1130, 1146, 1357], "bkg_rad_km": [479, 495, 1130, 1146, 1357], "use_cosin": [479, 495, 1011, 1130, 1146, 1357], "max_diff": [479, 495, 1011, 1130, 1146, 1357], "zero_diff_cos_v": [479, 495, 1011, 1130, 1146, 1357], "55": [479, 495, 1130, 1146, 1351, 1357, 1372], "scalar_diff": [479, 495, 1011, 1130, 1146, 1357], "use_addit": [479, 495, 1011, 1130, 1146, 1357], "calc_thr": [479, 495, 1130, 1146, 1357], "weak_echo_thr": [479, 495, 1130, 1146, 1357], "min_dbz_us": [479, 1130, 1357], "db_averag": [479, 495, 1130, 1146, 1357], "remove_small_object": [479, 495, 1130, 1146, 1357], "min_km2_siz": [479, 495, 1130, 1146, 1357], "val_for_max_conv_rad": [479, 1130, 1357], "max_conv_rad_km": [479, 1130, 1357], "cs_core": [479, 1130], "nosfcecho": [479, 495, 1130, 1146, 1357], "weakecho": [479, 495, 1130, 1146, 1357], "sf": [479, 1130, 1357], "conv": [479, 1130, 1357], "estimate_flag": [479, 495, 1130, 1146, 1357], "estimate_offset": [479, 495, 1130, 1146, 1357], "partit": [479, 495, 516, 1130, 1146, 1167, 1322, 1372], "yuter": [479, 495, 516, 553, 1011, 1130, 1146, 1167, 1291, 1339, 1357], "1997": [479, 495, 1011, 1130, 1146, 1357], "pars": [479, 495, 1130, 1146], "least": [479, 481, 495, 505, 506, 787, 1130, 1132, 1146, 1156, 1157, 1357], "cosin": [479, 495, 1011, 1130, 1146, 1357], "simpler": [479, 495, 1130, 1146, 1357], "scalar": [479, 495, 1011, 1130, 1146, 1357], "eqn": [479, 495, 1011, 1130, 1146], "b1": [479, 495, 1011, 1130, 1146], "percentag": [479, 495, 555, 1130, 1146, 1293], "weak": [479, 495, 1130, 1146, 1357], "underestim": [479, 495, 1130, 1146, 1357], "wih": [479, 495, 1130, 1146], "convsf_dict": [479, 1130, 1357], "raindrop": [479, 495, 1130, 1146, 1357], "pacif": [479, 495, 1130, 1146, 1357], "warm": [479, 495, 507, 1130, 1146, 1158, 1357, 1372], "pool": [479, 495, 1130, 1146, 1357], "implic": [479, 495, 1130, 1146, 1357], "appl": [479, 495, 509, 514, 516, 518, 1130, 1146, 1160, 1165, 1167, 1170, 1357, 1376], "meteor": [479, 495, 509, 514, 516, 518, 1130, 1146, 1160, 1165, 1167, 1170, 1357, 1376], "36": [479, 495, 1130, 1146, 1328, 1331, 1333, 1337, 1351, 1355, 1357, 1359, 1368], "847": [479, 495, 1130, 1146, 1357], "867": [479, 495, 1130, 1146, 1357], "doi": [479, 482, 495, 504, 508, 509, 511, 553, 1130, 1133, 1146, 1155, 1159, 1160, 1162, 1291, 1339, 1357, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "1175": [479, 495, 509, 511, 1130, 1146, 1160, 1162, 1357], "1520": [479, 495, 1130, 1146, 1357], "0450": [479, 495, 1130, 1146, 1357], "036": [479, 495, 1130, 1146, 1357], "3c0847": [479, 495, 1130, 1146, 1357], "morsdo": [479, 495, 1130, 1146, 1357], "3e2": [479, 495, 1130, 1146, 1357], "smith": [479, 495, 1130, 1146, 1357], "wilheit": [479, 495, 1130, 1146, 1357], "zipser": [479, 495, 1130, 1146, 1357], "character": [479, 482, 495, 516, 1130, 1133, 1146, 1167, 1357], "tropic": [479, 495, 1130, 1146, 1357], "kwajex": [479, 495, 1130, 1146, 1357], "385": [479, 495, 1130, 1146, 1357], "415": [479, 495, 1130, 1146, 1357], "jam2206": [479, 495, 1130, 1146, 1357], "lapse_r": [480, 500, 504, 1131, 1151, 1155], "nsamples_max": [480, 1131], "prepar": [480, 1131, 1364, 1365, 1366, 1368, 1369, 1370, 1373], "refl_std": [480, 1131], "zdr_std": [480, 1131], "kdp_std": [480, 1131], "rhohv_std": [480, 1131], "relh_std": [480, 1131], "negative_vel_prior": [481, 1132], "quit": [481, 1132, 1372], "simpl": [481, 780, 1061, 1132, 1365, 1366], "tail": [481, 1132], "prioriti": [481, 582, 1132, 1320, 1378], "chosen": [481, 1132], "twice": [481, 1132], "fill_valu": [482, 497, 507, 508, 509, 516, 554, 1133, 1148, 1158, 1159, 1160, 1167, 1292, 1364, 1365, 1373], "ml_field": [482, 511, 512, 513, 1133, 1162, 1163, 1164], "ml_pos_field": [482, 511, 512, 513, 1133, 1162, 1163, 1164], "max_rang": [482, 1133], "detect_threshold": [482, 1133], "02": [482, 1072, 1073, 1074, 1133, 1334, 1339, 1353, 1357, 1374], "interp_hol": [482, 1133], "max_length_hol": [482, 1133], "check_min_length": [482, 1133], "get_iso0": [482, 511, 512, 513, 1133, 1162, 1163, 1164], "ml": [482, 511, 1133, 1162, 1320], "plai": [482, 1133, 1375], "affect": [482, 501, 1074, 1133, 1152], "erron": [482, 1133, 1366], "hole": [482, 1133], "ml_obj": [482, 511, 512, 513, 1133, 1162, 1163, 1164], "ml_dict": [482, 511, 512, 513, 1133, 1162, 1163, 1164], "iso0_dict": [482, 511, 512, 513, 1133, 1162, 1163, 1164], "all_ml": [482, 1133], "wolfensberg": [482, 787, 788, 789, 1133, 1358, 1359], "scipion": [482, 1133], "bern": [482, 504, 508, 1133, 1155, 1159], "q": [482, 1133], "meteorol": [482, 514, 1133, 1165, 1357], "soc": [482, 1133], "142": [482, 1133], "108": [482, 1133], "124": [482, 1133, 1359, 1371], "1002": [482, 1133], "qj": [482, 1133], "2672": [482, 1133], "niter": [483, 1134], "nvar": [483, 496, 1134, 1147], "medoids_arr": [483, 1134], "beta": [484, 485, 486, 487, 488, 489, 756, 758, 776, 785, 1135, 1136, 1137, 1138, 1139, 1140], "a_field": [484, 485, 488, 1135, 1136, 1139, 1372], "rr_field": [484, 485, 486, 487, 488, 489, 490, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "law": [484, 485, 486, 487, 488, 489, 758, 1135, 1136, 1137, 1138, 1139, 1140], "diederich": [484, 1135], "tromel": [484, 514, 1135, 1165], "wavelenght": [484, 1135], "partial": [484, 758, 1135], "blockag": [484, 758, 1135], "hydrometeorologi": [484, 1135], "487": [484, 1135], "502": [484, 1135], "2014": [484, 508, 514, 758, 1135, 1159, 1165], "potenti": [484, 511, 758, 778, 1135, 1162], "mitig": [484, 758, 1135], "599": [484, 758, 1135], "619": [484, 758, 1135], "alphazr": [485, 1136], "0376": [485, 487, 488, 489, 1136, 1138, 1139, 1140], "betazr": [485, 1136], "6112": [485, 487, 488, 489, 1136, 1138, 1139, 1140], "alphaz": [485, 488, 489, 1136, 1139, 1140], "betaz": [485, 488, 489, 1136, 1139, 1140], "alphaa": [485, 488, 1136, 1139], "betaa": [485, 488, 1136, 1139], "mp_factor": [485, 1136], "hydro_field": [485, 504, 512, 774, 787, 788, 789, 1136, 1155, 1163, 1372], "main_field": [485, 488, 489, 1136, 1139, 1140], "thresh_max": [485, 488, 489, 1136, 1139, 1140], "act": [485, 488, 489, 630, 1136, 1139, 1140, 1357, 1364], "master": [485, 488, 489, 1136, 1139, 1140, 1348, 1376], "slave": [485, 488, 489, 1136, 1139, 1140], "blend": [488, 489, 1139, 1140, 1347], "rain_mast": [488, 489, 1139, 1140], "alphakdp": [489, 1140], "betakdp": [489, 1140], "mm": [489, 1140, 1357, 1372], "polynomi": [490, 1141], "develop": [490, 495, 1141, 1146, 1362, 1370, 1375, 1376], "mcgill": [490, 1141, 1362], "az_tol": [491, 492, 533, 1142, 1143, 1271], "wind_field": [491, 492, 494, 1142, 1143, 1145], "windshear_field": [491, 492, 1142, 1143], "windshear": [491, 492, 1142, 1143, 1320], "npoints_min": [493, 1144], "azi_spacing_max": [493, 1144], "vel_diff_max": [493, 1144], "rad_vel_field": [493, 1144], "u_vel_field": [493, 1144], "v_vel_field": [493, 1144], "w_vel_field": [493, 1144], "vel_est_field": [493, 1144], "vel_std_field": [493, 1144], "vel_diff_field": [493, 1144], "vad": [493, 518, 519, 1144, 1170, 1171, 1320, 1325, 1354, 1360, 1374, 1376], "recomput": [493, 1144], "difer": [493, 1144], "vert_proj": [494, 1145], "neglig": [494, 1145], "v_r": [494, 1145], "v_el": [494, 1145], "v_az": [494, 1145], "perpendicular": [494, 1145], "v_h": [494, 1145], "know": [494, 1145, 1378], "hold": [494, 1145], "min_val_us": [495, 1146], "binary_clos": [495, 1146], "val_for_max_rad": [495, 1146], "max_rad_km": [495, 1146], "core_v": [495, 1146], "bkgd_val": [495, 1146], "feat_val": [495, 1146], "overest_field": [495, 1146], "underest_field": [495, 1146], "tomkin": [495, 553, 1146, 1291, 1339, 1357], "2023": [495, 1146], "steiner": [495, 516, 1146, 1167, 1357], "1995": [495, 516, 1146, 1167, 1357], "laura": [495, 1146, 1339, 1357], "lauratomkin": [495, 1146], "overestim": [495, 1146, 1357], "feature_dict": [495, 1146], "climatolog": [495, 516, 1146, 1167, 1357], "gaug": [495, 516, 1146, 1167, 1357], "1978": [495, 516, 1146, 1167, 1357, 1372], "2007": [495, 516, 1146, 1167, 1357], "miller": [495, 553, 1146, 1291, 1339], "2024": [495, 1146], "identif": [495, 553, 1146, 1291, 1339], "faint": [495, 1146], "prep": [495, 1146], "sonde_dset": [496, 1147], "time_kei": [496, 1147], "height_kei": [496, 1147], "vap": [496, 1147], "startard": [496, 1147], "ncvar": [496, 1147], "return_d": [496, 1147], "radar_spec": [497, 1148], "dem_grid": [497, 1148], "terrain_altitude_field": [497, 1148], "bent_terrain_altitude_field": [497, 1148], "terrain_slope_field": [497, 1148], "terrain_aspect_field": [497, 1148], "elevation_angle_field": [497, 1148], "visibility_field": [497, 1148], "min_vis_elevation_field": [497, 1148], "min_vis_altitude_field": [497, 1148], "min_vis_height_above_ground_field": [497, 1148], "min_rad_vis_height_above_ground_field": [497, 1148], "incident_angle_field": [497, 1148], "effective_area_field": [497, 1148], "sigma_0_field": [497, 1148], "rcs_clutter_field": [497, 1148], "dbm_clutter_field": [497, 1148], "dbz_clutter_field": [497, 1148], "visibility_polar_field": [497, 1148], "az_conv": [497, 1148], "dr": [497, 507, 765, 766, 1148, 1158], "daz": [497, 1148], "012": [497, 1148], "3333333333333333": [497, 1148], "atm_att": [497, 1148], "mosotti_kw": [497, 1148], "9644": [497, 1148], "raster_oversampl": [497, 1148], "sigma0_method": [497, 1148], "gabella": [497, 504, 1148, 1155], "clip": [497, 1148], "return_pyart_object": [497, 1148], "frequenti": [497, 1148], "ghz": [497, 1148], "tau": [497, 1148], "total": [497, 507, 508, 509, 787, 1148, 1158, 1159, 1160, 1322, 1323, 1324, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1374], "terrain": [497, 1148, 1336], "seen": [497, 1148, 1371, 1376], "backscatt": [497, 507, 514, 1148, 1158, 1165], "incid": [497, 1148], "topographi": [497, 1148], "rx": [497, 1148], "discret": [497, 1068, 1071, 1148], "slower": [497, 507, 1074, 1148, 1158], "equival": [497, 513, 637, 1061, 1148, 1164, 1327, 1338, 1346, 1352], "One": [497, 1148, 1364, 1373, 1376, 1378], "clausiu": [497, 1148], "mosotti": [497, 1148], "materi": [497, 1148, 1362], "sigma": [497, 515, 1148, 1166, 1249, 1250, 1347, 1348], "naught": [497, 1148], "undefin": [497, 1148], "oversampl": [497, 1148, 1320], "delrieu": [497, 1148], "lot": [497, 1148, 1371], "directli": [497, 1148, 1336, 1372], "bent_terrain_altitude_d": [497, 1148], "terrain_slope_d": [497, 1148], "terrain_aspect_d": [497, 1148], "elevation_d": [497, 1148], "min_vis_elevation_d": [497, 1148], "min_vis_altitude_d": [497, 1148], "min_vis_height_above_ground_d": [497, 1148], "min_rad_vis_height_above_ground_d": [497, 1148], "visibility_d": [497, 1148], "incident_angle_d": [497, 1148], "effective_area_d": [497, 1148], "sigma_0_d": [497, 1148], "rcs_clutter_d": [497, 1148], "dbm_clutter_d": [497, 1148], "dbz_clutter_d": [497, 1148], "visibility_polar_d": [497, 1148], "perona": [497, 1148], "1998": [497, 1148], "orograph": [497, 1148], "influenc": [497, 1065, 1068, 1072, 1073, 1074, 1148, 1368], "geometr": [497, 1148], "15": [497, 507, 553, 756, 1148, 1158, 1291, 1322, 1323, 1328, 1336, 1339, 1345, 1346, 1347, 1348, 1351, 1352, 1355, 1359, 1366, 1371, 1373], "1485": [497, 1148], "1494": [497, 1148], "freq_band": [499, 1150], "temp_ref_field": [500, 1151], "heigh_over_iso0": [500, 1151], "iso0_ref": [500, 1151], "iso": [500, 513, 515, 765, 766, 1151, 1164, 1166], "insuffici": [500, 1151], "rng_left_km": [501, 1152], "rng_right_km": [501, 1152], "ang": [501, 1152, 1347, 1348], "ang_r": [501, 1152], "ml_bottom": [501, 1152], "masl": [501, 513, 765, 766, 1152, 1164], "msl": [501, 511, 555, 1152, 1162, 1293], "grid1": [502, 1153], "grid2": [502, 1153], "return_valu": [502, 1153], "displac": [502, 1153], "en": [502, 1153, 1362, 1370, 1375, 1376], "wikipedia": [502, 1153], "phase_correl": [502, 1153], "inspir": [502, 1153], "christoph": [502, 1153], "gohlk": [502, 1153], "lfd": [502, 1153], "uci": [502, 1153], "imreg": [502, 1153], "advect": [502, 503, 1153, 1154], "trim_edg": [503, 1154], "field_list": [503, 1063, 1154], "shifted_grid": [503, 1154], "subset": [503, 1154, 1325, 1354, 1355], "mass_cent": [504, 1155, 1372], "entropy_field": [504, 1155], "compute_entropi": [504, 1155], "output_dist": [504, 1155], "besic": [504, 512, 1155, 1163, 1372], "nclass": [504, 1155], "decai": [504, 1155], "celsiu": [504, 1155, 1320], "entropi": [504, 1155], "fields_dict": [504, 1155], "figuera": [504, 1155, 1362, 1376], "ventura": [504, 1155, 1362, 1376], "grazioli": [504, 508, 1155, 1159, 1362, 1376], "germann": [504, 1155, 1362, 1376], "semi": [504, 1155], "supervis": [504, 1155], "mea": [504, 553, 1155, 1291, 1339], "4425": [504, 1155], "4445": [504, 1155], "5194": [504, 553, 1155, 1291, 1339], "amt": [504, 553, 1155, 1291, 1339], "piecewis": [505, 506, 1156, 1157], "optim": [505, 506, 507, 1074, 1156, 1157, 1158], "lenght": [505, 506, 1156, 1157], "kdp_dict": [505, 506, 507, 508, 509, 1156, 1157, 1158, 1159, 1160], "cg": [507, 1158], "clpf": [507, 1158], "length_scal": [507, 1158], "first_guess": [507, 1158], "finite_ord": [507, 1158], "maesaka": [507, 1158, 1372], "2012": [507, 509, 1158, 1160, 1372], "monoton": [507, 510, 1158, 1161, 1336], "propag": [507, 508, 509, 1158, 1159, 1160], "notat": [507, 1158], "primari": [507, 1158], "proport": [507, 1158], "analys": [507, 508, 509, 1158, 1159, 1160], "nonlinear": [507, 1158], "conjug": [507, 1158], "gradient": [507, 1158, 1336], "broyden": [507, 1158], "fletcher": [507, 1158], "goldfarb": [507, 1158], "shanno": [507, 1158], "bfg": [507, 1158], "100k": [507, 1158], "parameter": [507, 1158], "attentu": [507, 1158], "constraint": [507, 1158], "bring": [507, 1158], "magnitud": [507, 761, 1158, 1359, 1373], "guess": [507, 1158], "root": [507, 1158, 1375, 1378], "signifi": [507, 516, 1158, 1167], "everywher": [507, 1158], "exactli": [507, 1158, 1331], "avoid": [507, 1158, 1320, 1371, 1378], "converg": [507, 1158], "closer": [507, 1158], "finit": [507, 1158], "accuraci": [507, 1158], "maxit": [507, 1158], "met": [507, 1158], "achiev": [507, 1158], "somewhat": [507, 1158], "thread": [507, 1158], "cpu": [507, 1158], "multiprocess": [507, 1158], "capabl": [507, 1158, 1366, 1373], "relev": [507, 1158], "phidpf_dict": [507, 1158], "phidpr_dict": [507, 508, 509, 1158, 1159, 1160], "forward": [507, 544, 545, 1158, 1282, 1283], "iwanami": [507, 1158], "maki": [507, 1158], "seventh": [507, 1158], "european": [507, 1158], "confer": [507, 1158, 1362], "hydrologi": [507, 1158], "rcov": [508, 1159], "pcov": [508, 1159], "prefilter_psidp": [508, 509, 1159, 1160], "filter_opt": [508, 509, 1159, 1160], "kalman": [508, 1159], "schneeb": [508, 1159], "psidp": [508, 509, 1159, 1160], "char": [508, 509, 1159, 1160], "capit": [508, 509, 1159, 1160], "intercept": [508, 1159], "3x3": [508, 1159], "covari": [508, 1159], "4x4": [508, 1159], "filter_psidp": [508, 509, 1159, 1160], "enabl": [508, 509, 1159, 1160], "kdp_std_dict": [508, 1159], "dev": [508, 1159, 1320, 1368, 1376], "ensembl": [508, 1159], "52": [508, 514, 1159, 1165, 1355, 1370, 1372], "5137": [508, 1159], "5149": [508, 1159], "1109": [508, 1159], "tgr": [508, 1159], "2287017": [508, 1159], "windsiz": [509, 1160], "n_iter": [509, 1160], "interp": [509, 1160], "vulpiani": [509, 1160], "pre": [509, 1160, 1371, 1372], "ex": [509, 1160, 1336, 1376], "advantag": [509, 1160], "eat": [509, 1160], "gianfranco": [509, 1160], "mario": [509, 1160], "montopoli": [509, 1160], "luca": [509, 1160], "delli": [509, 1160], "passeri": [509, 1160], "antonio": [509, 1160], "gioia": [509, 1160], "pietro": [509, 1160], "giordano": [509, 1160], "frank": [509, 1160], "marzano": [509, 1160], "On": [509, 1160], "dual": [509, 1160], "mountain": [509, 1160], "climatol": [509, 1160, 1357], "51": [509, 1160, 1355], "405": [509, 1160], "425": [509, 1160], "jamc": [509, 756, 758, 1160], "05024": [509, 1160], "profile_field": [510, 1161], "height_field": [510, 1161], "3re": [510, 1161], "whole": [510, 1161], "height_dict": [510, 1161], "profile_dict": [510, 1161], "nvol": [511, 1162], "maxh": [511, 1162], "rhomin": [511, 1162], "rhomax": [511, 1162], "94": [511, 1162, 1373], "zhmin": [511, 1162], "hwindow": [511, 1162], "mlzhmin": [511, 1162], "mlzhmax": [511, 1162], "mlzdrmin": [511, 1162], "mlzdrmax": [511, 1162], "htol": [511, 1162], "ml_bottom_diff_max": [511, 1162], "time_accu_max": [511, 1162], "1800": [511, 1162, 1364], "nml_points_min": [511, 1162], "wlength": [511, 1162], "percentile_bottom": [511, 1162], "percentile_top": [511, 1162], "time_nodata_allow": [511, 1162], "3600": [511, 1162, 1364], "ml_global": [511, 1162], "aggreg": [511, 513, 1162, 1164, 1358, 1372], "ml_bottom_dif_max": [511, 1162], "percentil": [511, 1162], "stack": [511, 1162, 1375, 1376], "Its": [511, 1162], "kraus": [511, 1162], "design": [511, 553, 1162, 1291, 1347, 1357, 1376], "prototyp": [511, 1162], "meteo": [511, 513, 762, 765, 766, 1162, 1164], "clim": [511, 514, 1162, 1165], "1354": [511, 1162], "1364": [511, 1162], "2007jamc1634": [511, 1162], "force_continu": [512, 1163], "dist_max": [512, 1163], "350": [512, 1163], "heightand": [512, 1163], "ml_thickness_min": [513, 765, 766, 1164], "ml_thickness_max": [513, 765, 766, 1164], "1400": [513, 1164], "ml_thickness_step": [513, 765, 766, 1164], "iso0_max": [513, 765, 766, 1164], "4500": [513, 1164, 1364], "ml_top_diff_max": [513, 765, 766, 1164], "700": [513, 772, 773, 787, 788, 789, 1164], "ml_top_step": [513, 765, 766, 1164], "ns_factor": [513, 1164], "rhohv_corr_min": [513, 1164], "rhohv_nash_min": [513, 1164], "ang_iso0": [513, 1164], "age_iso0": [513, 1164], "ml_thickness_iso0": [513, 1164], "ml_memori": [513, 1164], "rhohv_field_ob": [513, 1164], "rhohv_field_theo": [513, 1164], "franc": [513, 762, 765, 766, 1164], "decid": [513, 787, 788, 1164], "nse": [513, 1164], "hour": [513, 1164, 1327, 1328], "past": [513, 765, 766, 1164, 1376], "ml_found_obj": [513, 1164], "instantan": [513, 1164], "desired_angl": [514, 1165], "wanted_angl": [514, 1165], "dictonari": [514, 1165], "troemel": [514, 1165], "2529": [514, 1165], "2548": [514, 1165], "54": [514, 1165, 1328, 1371], "2344": [514, 1165], "2359": [514, 1165], "submit": [514, 1165, 1362], "technol": [514, 1165], "fm": [515, 1166], "rg": [515, 517, 1166, 1168], "nbin": [515, 1166], "110": [515, 1166], "pdf_zh_max": [515, 1166], "pdf_relh_max": [515, 1166], "sigma_zh": [515, 1166], "sigma_relh": [515, 1166], "random": [515, 517, 1166, 1168], "platykurtic_dbz": [515, 1166], "platykurtic_h_iso0": [515, 1166], "nfeatur": [515, 1166], "histogram": [515, 1166, 1331, 1366], "platykurtik": [515, 1166], "guassian": [515, 1166], "quantiz": [515, 1166], "platykurt": [515, 1166], "fm_sampl": [515, 1166], "work_level": [516, 1167], "peak_rel": [516, 1167], "area_rel": [516, 1167], "medium": [516, 1167], "bkg_rad": [516, 1167], "11000": [516, 1167, 1368], "use_intens": [516, 1167], "bright": [516, 1167], "sgp": [516, 1167, 1245], "peaked": [516, 1167], "eclass": [516, 1167], "par_var": [517, 1168], "probabl": [517, 547, 548, 549, 562, 1168, 1285, 1286, 1287, 1300, 1370], "membership": [517, 1168], "synthetic_ob": [517, 1168], "z_want": [518, 519, 1170, 1171, 1359, 1371, 1376], "valid_ray_min": [518, 1170, 1376], "brown": [518, 1170, 1320, 1376], "amount": [518, 1170, 1368, 1376], "_averag1d": [518, 1170, 1376], "idw": [518, 1170], "wexler": [518, 1170, 1376], "1968": [518, 1170, 1376], "kinemat": [518, 1170, 1376], "105": [518, 1170, 1359, 1371, 1376], "113": [518, 1170, 1355, 1376], "linespac": [519, 1171], "michelson": [519, 1171], "andersson": [519, 1171], "koistinen": [519, 1171], "collier": [519, 1171], "riedl": [519, 1171], "szturc": [519, 1171], "gjertsen": [519, 1171], "nielsen": [519, 1171], "overgaard": [519, 1171], "baltex": [519, 1171], "centr": [519, 1171], "smhi": [519, 1171], "climatologi": [519, 1068, 1071, 1171], "swedish": [519, 1171], "hydrolog": [519, 1171], "institut": [519, 1171, 1373], "norrkop": [519, 1171], "1970": 520, "01t00": 520, "00": [520, 1324, 1329, 1334, 1353, 1360, 1361, 1374], "00z": 520, "bytes_or_buff": 520, "expos": 520, "buffer": 520, "handler": 520, "__str__": 520, "radian": [521, 523, 566, 776, 1259, 1261, 1304], "std": [523, 524, 557, 569, 1071, 1261, 1262, 1295, 1307], "convolut": [525, 1263], "ndimag": [525, 1263, 1347, 1348], "generic_filt": [525, 1263], "pi": [525, 1263, 1366], "std_dev": [525, 1263], "radar1": [526, 527, 555, 563, 1264, 1265, 1293, 1301], "radar2": [526, 527, 555, 563, 1264, 1265, 1293, 1301], "h_tol": [526, 555, 1264, 1293], "coloc_gates_field": [526, 527, 1264, 1265], "coloc": [526, 527, 1264, 1265], "coloc_dict": [526, 527, 1264, 1265], "azi": [526, 527, 543, 1264, 1265, 1281], "coloc_rad1": [526, 527, 1264, 1265], "distance_upper_bound": [527, 1265], "neighbour": [527, 543, 1265, 1281], "ckdtree": [527, 1265], "bound": [527, 1265], "lin_tran": [528, 1266], "span": [528, 1266], "consdier": [528, 1266], "radar_rhi": [528, 533, 765, 766, 1266, 1271], "vec1": [529, 531, 1267, 1269], "vec2": [529, 531, 1267, 1269], "pearson": [529, 1267], "corr": [529, 531, 1267, 1269, 1371], "stat": [530, 550, 1268, 1288], "nvalid": [530, 1268], "arr1": [531, 1269], "arr2": [531, 1269], "obs_data": [532, 1270], "mod_data": [532, 1270], "nash": [532, 1270], "sutcliff": [532, 1270], "nash_coeff": [532, 1270], "target_elev": [534, 551, 1272, 1289], "el_tol": [534, 551, 1272, 1289], "radar_ppi": [534, 1272], "epoch": [535, 536, 537, 538, 539, 1273, 1274, 1275, 1276, 1277], "max_offset": [540, 1278], "running_win_dt": [540, 1278], "deg_rng": [540, 1278], "consider_2pi_jump": [540, 1278], "is_ppi": [540, 1278], "wise": [540, 1278], "strategi": [540, 1278], "might": [540, 1278, 1364, 1378], "goe": [540, 1278, 1370], "shot": [540, 1278], "articl": [541, 1279], "var": [541, 542, 574, 575, 577, 578, 579, 580, 1279, 1280, 1312, 1313, 1315, 1316, 1317, 1318], "nnois": [541, 542, 1279, 1280], "pwr_w_rai": [542, 1280], "pct": [542, 548, 561, 1280, 1286, 1299], "270436": [542, 1280], "flat_reg_wlen": [542, 547, 559, 1280, 1285, 1297], "flat_reg_var_max": [542, 559, 560, 1280, 1297, 1298], "439551": [542, 1280], "snr_thr": [542, 549, 1280, 1287], "769572": [542, 1280], "ngates_final_min": [542, 1280], "ngates_median": [542, 1280], "83": [542, 1280, 1372], "local": [542, 547, 552, 1244, 1280, 1285, 1290, 1362, 1375, 1376], "decibel": [542, 1280], "flat": [542, 547, 559, 560, 1280, 1285, 1297, 1298, 1327, 1371], "inds_rai": [542, 1280], "inds_ray_aux": [543, 1281], "ind_rng_aux": [543, 1281], "target_latitud": [544, 571, 1282, 1309], "target_longitud": [544, 571, 1282, 1309], "bear": [544, 1282], "alongitudeg": [544, 1282], "great": [544, 571, 1282, 1309], "circl": [544, 571, 1282, 1309, 1357], "known": [544, 1282, 1373, 1376], "6371000": [544, 571, 1282, 1309], "calculatitude": [544, 1282], "degress": [544, 571, 1282, 1309], "further": [546, 787, 788, 1284], "sphere_dist": [546, 1284], "for_azimuth": [546, 1284], "get_column_rai": [546, 1284], "xarari": [546, 1284], "prob_thr": [547, 548, 1285, 1286], "var_thr": [547, 1285], "0001": [548, 1286], "pct_out": [548, 1286], "pfa_thr": [549, 1287], "alarm": [549, 562, 1287, 1300], "weigt": [550, 1288], "xwind": [552, 1290], "ywind": [552, 1290], "win_std": [552, 1290], "mute_field": [553, 1291, 1339], "mute_threshold": [553, 1291, 1339], "field_threshold": [553, 1291, 1339], "discern": [553, 1291], "mute": [553, 1291, 1325, 1335, 1353, 1357, 1374], "allen": [553, 1291, 1339], "heavi": [553, 756, 758, 1291, 1339, 1347], "5515": [553, 1291, 1339], "5525": [553, 1291, 1339], "kind": [554, 570, 1292, 1308, 1322, 1372], "radarspectra": [554, 568, 1248, 1292, 1306], "psr_interp": [554, 1292], "vol_d_tol": [555, 1293], "vismin": [555, 1293], "hmin": [555, 778, 1293], "azmin": [555, 1293], "azmax": [555, 1293], "visib_field": [555, 1293], "intersec_field": [555, 1293], "compli": [555, 773, 774, 1293], "regard": [555, 1293], "decim": [555, 1293], "diamet": [555, 1293], "intersec_rad1_dict": [555, 1293], "dist": [556, 557, 1072, 1073, 1074, 1294, 1295], "interval_min": [556, 557, 1294, 1295], "interval_max": [556, 557, 1294, 1295], "endpoint": [556, 557, 1294, 1295], "to_vpt": [558, 1296], "verticl": [558, 1296], "prescrib": [559, 1297], "ivic_flat_reg_wind_len": [559, 1297], "throw": [561, 562, 1299, 1300], "pfa": [561, 562, 1299, 1300], "1e": [561, 562, 1299, 1300, 1364, 1373], "matlab": [561, 1299], "get_ivic_pct": [561, 1299], "particularli": [561, 1299], "pct_tabl": [561, 1299], "snr_thr_out": [562, 1300], "coerce_angl": [563, 1301, 1320], "combin": [563, 564, 756, 757, 758, 1301, 1302, 1376], "slightli": [563, 1301, 1338, 1372], "slight": [563, 1301], "misposit": [563, 1301, 1320], "spectra1": [564, 1302], "spectra2": [564, 1302], "tup": [565, 1303], "guarante": [565, 1303], "broadcast": [565, 1303], "broadcasted_arrai": [565, 1303], "angles1": [566, 1304], "angles2": [566, 1304], "angle1": [567, 1305], "angle2": [567, 1305], "eg": [569, 1307], "ma": [569, 1307, 1331, 1332, 1357, 1365, 1369, 1376], "sim_vel_field": [570, 1308], "slinear": [570, 1308], "quadrat": [570, 1308], "cubic": [570, 1308], "interp1d": [570, 1308, 1376], "descript": [570, 582, 630, 632, 645, 727, 798, 799, 836, 1013, 1036, 1060, 1075, 1172, 1258, 1308, 1362, 1376], "sim_vel": [570, 1308, 1376], "coverag": [572, 573, 1310, 1311, 1371], "11pt": [574, 1312], "stdev": [574, 1312], "texarrai": [574, 1312], "pyradarobj": [574, 1312], "tex": [575, 1313], "single_scan": [576, 1314], "is_vpt": [576, 1314], "mislabel": [576, 1314], "properli": [576, 613, 614, 1314, 1328], "wt": [577, 578, 579, 580, 1183, 1315, 1316, 1317, 1318], "skew": [577, 579, 1071, 1315, 1317], "statu": [581, 1376], "dependeci": 581, "sy": [581, 1012], "polish": 582, "risk": 582, "bug": [582, 1320, 1362, 1375, 1376], "momentpm": 585, "momentm": 585, "share": 585, "extra": [585, 596, 597, 613, 614], "momentspm": 585, "momentsm": 585, "metranet_lib": 585, "zh": [596, 597, 787, 788, 789, 1370, 1372], "keep_all_rai": 596, "physic_valu": [596, 597, 613, 614, 1370], "masked_arrai": [596, 597, 613, 614, 1364, 1373], "duplic": [596, 1320], "ret_data": [596, 597, 613, 614], "radardata": [596, 597, 613, 614], "reorder_angl": 597, "reorder": [597, 1320], "knmi_h5": [604, 1320], "file_path": 605, "cpi_head": 615, "3d": [617, 1371], "commun": [630, 1376, 1378], "interact": 645, "calculate_attenu": [727, 1322], "calculate_attenuation_zphi": [727, 1358, 1372], "calculate_attenuation_philinear": 727, "sun_retriev": 727, "get_sun_hit": 727, "get_sun_hits_psr": 727, "get_sun_hits_iv": 727, "correct_vpr": 727, "correct_vpr_spatialis": 727, "despeckle_field": 727, "correct_noise_rhohv": 727, "correct_bia": 727, "correct_vis": 727, "est_rhohv_rain": 727, "est_zdr_precip": 727, "est_zdr_snow": 727, "selfconsistency_bia": 727, "selfconsistency_bias2": 727, "selfconsistency_kdp_phidp": 727, "z_offset": 756, "rhv_min": 756, "ncp_min": 756, "a_coef": [756, 758], "06": [756, 1353, 1374], "spec_at_field": [756, 757, 758], "corr_refl_field": [756, 757, 758, 765, 766], "copol_coeff": [756, 1251, 1322, 1355, 1356, 1364], "norm_coherent_pow": [756, 1251, 1322, 1364], "proc_dp_phase_shift": [756, 1322, 1355, 1364], "spec_at": [756, 757, 758, 1322, 1358, 1372], "cor_z": [756, 757, 758, 1322, 1358, 1372], "gu": [756, 758], "2011": [756, 758, 1355], "39": [756, 758, 1355], "pia_coef": 757, "pida_coef": 757, "pia_field": [757, 758], "spec_diff_at_field": [757, 758], "pida_field": [757, 758], "corr_zdr_field": [757, 758], "dependec": 757, "pida_coeff": 757, "pia_dict": [757, 758], "spec_diff_at": [757, 758, 1358, 1372], "pida_dict": [757, 758], "cor_zdr": [757, 758, 1358, 1372], "smooth_window_len": 758, "jaot": [758, 762], "bia": [761, 766, 773, 774, 785, 787, 788, 797], "corrected_field": [761, 764], "urhohv_field": 762, "nh_field": 762, "nv_field": 762, "eq": [762, 1345], "2006": [762, 1328], "uncorrect": 762, "23": [762, 1359], "1340": 762, "1356": 762, "angle_min": [765, 766], "angle_max": [765, 766], "5000": [765, 766, 1359, 1368, 1371], "ml_peak_min": [765, 766], "ml_peak_max": [765, 766], "ml_peak_step": [765, 766], "dr_min": [765, 766], "dr_max": [765, 766], "dr_step": [765, 766], "dr_default": [765, 766], "dr_alt": [765, 766], "h_corr_max": [765, 766], "rmin_ob": [765, 766], "rmax_ob": [765, 766], "150000": [765, 766], "filter_param": 765, "weight_mem": [765, 766], "vpr_theo_dict_mem": [765, 766], "radar_mem_list": [765, 766], "lin_refl_field": [765, 766], "norm_refl_field": [765, 766], "corr_field": [765, 766], "proper": [765, 766, 1375], "abl": [765, 766, 773, 774, 1362, 1375], "refl_corr_dict": [765, 766], "corr_field_dict": [765, 766], "vpr_theo_dict_filt": [765, 766], "correct_iso0": 766, "spatialis": 766, "despeckl": 770, "speckl": [770, 1357], "find_object": 770, "perman": 770, "rhohv_rain_dict": 772, "rhohvmin": [773, 774], "phidpmax": [773, 774], "moder": 773, "zdr_prec_dict": 773, "snrmin": 774, "snrmax": 774, "kdpmax": 774, "tempmin": 774, "tempmax": 774, "differneti": 774, "zdr_snow_dict": 774, "az_data": 776, "az_ref": 776, "el_data": 776, "el_ref": 776, "sunhit": [776, 785], "npar": [776, 785], "do_elcorr": 776, "fit": [776, 785, 797], "hit": [776, 778, 779, 780, 785, 797, 1376], "par": [776, 785, 797], "delev_max": [778, 779, 780], "dazim_max": [778, 779, 780], "max_std_zdr": [778, 779], "sun_posit": [778, 779, 780], "pwrh_field": [778, 779, 780], "pwrv_field": [778, 779, 780], "sun_hit": [778, 779, 780, 797], "new_radar": [778, 779, 1365], "2003": [779, 1357], "noise_thr": 780, "val": [785, 797], "val_std": [785, 797], "az_bia": [785, 797], "el_bia": [785, 797], "az_width": [785, 797], "el_width": [785, 797], "zdr_kdpzh_dict": [787, 788, 789], "min_rhohv": [787, 788, 789], "filter_rain": [787, 788, 789], "max_phidp": [787, 788, 789], "smooth_wind_len": [787, 788, 789], "dphidp_min": 787, "dphidp_max": 787, "parametr": [787, 788, 789], "check_wet_radom": [787, 788], "wet_radome_refl": [787, 788], "wet_radome_len_min": [787, 788], "wet_radome_len_max": [787, 788], "wet_radome_ngates_min": [787, 788], "valid_gates_onli": 787, "keep_point": [787, 788], "kdp_wind_len": 787, "12": [787, 1070, 1322, 1327, 1328, 1333, 1334, 1338, 1344, 1345, 1353, 1355, 1365, 1369, 1371, 1373, 1374], "curv": [787, 788, 789, 1357], "gorgucci": [787, 788, 789], "vaccarono": [787, 788, 789], "kdpsim_field": [787, 788, 789], "phidpsim_field": [787, 788, 789], "wet": [787, 788, 1358, 1372], "mim": [787, 788], "disk": [787, 788], "That": 787, "refl_bias_dict": [787, 788], "selfconsistency_dict": [787, 788], "keep_poinst": [787, 788], "min_zdr": 788, "bias_per_g": 788, "kdp_data_dict": 788, "selfconsist": 789, "kdp_sim_dict": 789, "phidp_sim_dict": 789, "az_rad": 797, "az_sun": 797, "el_rad": 797, "el_sun": 797, "sun_hit_std": 797, "az_width_co": 797, "el_width_co": 797, "az_width_cross": 797, "el_width_cross": 797, "is_zdr": 797, "nhit": 797, "add_map": 1012, "savedir": 1012, "show_figur": 1012, "add_slogan": 1012, "plan": 1012, "cappi": 1012, "ref": [1012, 1328, 1351], "vel": [1012, 1370], "homeyerrainbow": [1012, 1336], "dot": [1012, 1348], "inch": 1012, "slogan": 1012, "hamid": 1012, "ali": 1012, "syedhamidali": 1012, "concret": 1050, "__getitem__": 1050, "__setitem__": 1050, "__delitem__": 1050, "__iter__": 1050, "__len__": 1050, "src_radar": 1061, "dest_radar": 1061, "distance_toler": [1061, 1331], "gatefilter_src": [1061, 1331], "time_toler": [1061, 1331], "kd": 1061, "tree": [1061, 1074], "src_radar_i": 1061, "src_radar_x": 1061, "destin": [1061, 1063, 1331], "src_radar_tim": 1061, "dest_radar_tim": 1061, "gate_mapp": 1061, "src": [1061, 1328, 1370, 1371, 1372], "dest": 1061, "dest_index": 1061, "radar_map": 1061, "mapped_radar": [1061, 1331], "adequ": [1061, 1331], "getter": [1062, 1064], "zg": [1065, 1066, 1067], "yg": [1065, 1066, 1067], "xg": [1065, 1066, 1067], "roi": [1065, 1066, 1067, 1069, 1070, 1071, 1074], "grow": [1066, 1067, 1072, 1073, 1074, 1376], "virtual": [1067, 1072, 1073, 1074], "grid_shap": [1068, 1069, 1070, 1071, 1072, 1073, 1074, 1245, 1332, 1333, 1337, 1357, 1368, 1371], "grid_limit": [1068, 1069, 1070, 1071, 1072, 1073, 1074, 1245, 1332, 1333, 1337, 1357, 1368, 1371], "gridding_algo": 1068, "map_gates_to_grid": [1068, 1071], "copy_field_dtyp": [1068, 1071], "map_to_grid": [1068, 1071, 1072, 1073], "significantli": [1068, 1074], "faster": [1068, 1074], "barn": [1068, 1071, 1074, 1368], "1964": [1068, 1071], "maxim": [1068, 1071], "numer": [1068, 1071, 1372], "396": [1068, 1071], "409": [1068, 1071], "cressman": [1068, 1071, 1074, 1368], "1959": [1068, 1071], "monthli": [1068, 1071], "review": [1068, 1071], "367": [1068, 1071], "374": [1068, 1071], "paulei": [1068, 1071, 1368], "1990": [1068, 1071, 1368], "respons": [1068, 1071], "118": [1068, 1071], "1145": [1068, 1071], "1164": [1068, 1071], "target_sweep": [1069, 1070], "grid_siz": [1069, 1070, 1072, 1073, 1074], "801": [1069, 1070, 1370], "auto": [1069, 1070, 1336, 1370, 1371], "max_z": [1069, 1070], "12000": [1069, 1070, 1364, 1368], "el_rounding_frac": 1069, "add_grid_altitud": 1069, "grid_from_radar": [1069, 1070, 1072, 1073, 1074, 1332, 1333, 1337, 1357, 1368, 1371], "h_factor": [1069, 1070, 1072, 1073, 1074], "dist_factor": [1069, 1070, 1072, 1073], "radar_d": [1069, 1070], "third": [1069, 1070, 1372, 1376], "az_rounding_frac": 1070, "possibli": 1071, "qxx": 1071, "xx": [1071, 1375], "q25": 1071, "q50": 1071, "q99": 1071, "kurtosi": 1071, "grid_origin": [1072, 1073, 1074, 1333, 1337], "grid_origin_alt": [1072, 1073, 1074], "map_roi": [1072, 1073, 1074], "weighting_funct": [1072, 1073, 1074, 1368], "barnes2": [1072, 1073, 1074], "17000": [1072, 1073, 1074, 1368], "roi_func": [1072, 1073, 1074, 1368], "dist_beam": [1072, 1073, 1074, 1368], "constant_roi": [1072, 1073, 1074], "z_factor": [1072, 1073, 1074], "xy_factor": [1072, 1073, 1074], "min_radiu": [1072, 1073, 1074, 1368], "nb": [1072, 1073, 1074], "bsp": [1072, 1073, 1074], "linearli": [1072, 1073], "roifunct": [1072, 1073], "get_roi": [1072, 1073], "cython": [1072, 1073, 1320], "copy_field_data": 1074, "kd_tree": 1074, "leafsiz": 1074, "nearbi": [1074, 1333], "coodin": 1074, "azimut": 1074, "similarili": 1074, "example_roi_func_const": 1074, "example_roi_func_dist": 1074, "example_roi_func_dist_beam": 1074, "voxel": 1074, "foreach": 1074, "metet": 1074, "sacr": 1074, "sapr": [1074, 1251], "dist_mean": 1074, "preserv": [1074, 1366], "leaf": 1074, "lookup": [1074, 1320], "suffix": 1183, "tmp": 1183, "temporari": 1183, "my_cwd": 1183, "getcwd": 1183, "tmpdir": 1183, "_": [1183, 1327, 1328, 1358, 1372], "txt": [1183, 1375], "assert": [1183, 1376], "isfil": 1183, "path_to_fil": 1244, "site": [1245, 1322, 1355, 1365, 1368, 1370, 1371, 1372, 1375], "min_valu": 1249, "max_valu": 1249, "grid_len": 1249, "mu": [1249, 1250], "masked_boundari": 1249, "dp_phase_shift": [1251, 1355, 1364], "diff_phas": [1251, 1364], "differential_reflect": [1251, 1327, 1340, 1347, 1369, 1370, 1373], "rectangular": [1252, 1253], "miscellan": 1258, "depreci": 1258, "caution": 1258, "releas": [1319, 1362, 1365, 1368, 1371, 1375, 1376], "2025": 1319, "guid": [1319, 1362], "broken": 1319, "sever": [1320, 1372], "wolfidan": 1320, "com": [1320, 1348, 1375, 1376, 1378], "pyart": [1320, 1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1378], "pull": [1320, 1328, 1362, 1376], "writer": [1320, 1362], "flip": [1320, 1371], "coerc": 1320, "dealias_spectra": 1320, "output_to_geotiff": 1320, "improvemnet": 1320, "lib": [1320, 1322, 1365, 1368, 1370, 1371, 1372, 1375], "download": [1320, 1322, 1323, 1325, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1376, 1378], "gh": 1320, "action": 1320, "cfg": 1320, "handl": 1320, "typo": 1320, "odim_h5_writ": 1320, "sw_version": 1320, "led": [1320, 1378], "timestep": [1320, 1371], "wrong": 1320, "deprec": [1320, 1365, 1368, 1370, 1371], "cumtrapz": 1320, "hydro": [1320, 1358, 1370, 1372], "gecsx": [1320, 1362], "commit": [1320, 1376], "57664ce7b27c27af03f631fcd0e92a2": 1320, "linalg": 1320, "lstsq": 1320, "config": [1320, 1364, 1371, 1372, 1378], "bias_and_nois": 1320, "extract_sweeps_skyecho": 1320, "aux_io": [1320, 1370], "knmi": 1320, "h5": 1320, "proprietari": 1320, "latlon": 1320, "cross_sect": 1320, "gridmapdisplai": [1320, 1325, 1335, 1337, 1353, 1357, 1368, 1371, 1374], "_rsl_interfac": 1320, "pyx": 1320, "read_product": [1320, 1370], "behaviour": 1320, "conv_strat_yut": [1320, 1357], "juhi24": 1320, "patch": [1320, 1347], "radar_util": 1320, "register_cmap": 1320, "join_radar": [1320, 1371], "colobar": [1320, 1338], "graph": [1320, 1322, 1323, 1327, 1328, 1331, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1364, 1365, 1366, 1368, 1369, 1371, 1372], "_label_axes_latlon": 1320, "minor": [1320, 1365, 1368, 1371], "rad4alp_gif_read": 1320, "imageio": 1320, "nrow": [1320, 1336], "ncol": 1320, "agre": 1320, "cpc": 1320, "plot_xsect": [1320, 1352, 1353, 1374], "radardisplai": [1320, 1322, 1323, 1336, 1339, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1356, 1358, 1371, 1372], "rainforest": 1320, "compute_refl_time_avg": 1320, "crash": [1320, 1370], "radar_": 1320, "care": 1320, "read_odim_h5": 1320, "guidelin": 1320, "prohibit": 1320, "write_odim_grid": 1320, "interfac": 1320, "setuptool": 1320, "interpol_field": 1320, "northernmost": 1320, "msrad": [1322, 1370, 1371, 1372], "anaconda3": [1322, 1362, 1365, 1368, 1370, 1371, 1372, 1375, 1378], "wolfensb": [1322, 1328, 1370, 1371, 1372], "env": [1322, 1362, 1365, 1368, 1370, 1371, 1372, 1378], "pyart_new": 1322, "python3": [1322, 1370, 1371, 1372], "packag": [1322, 1328, 1362, 1365, 1368, 1370, 1371, 1372, 1375, 1376, 1378], "_core": 1322, "fromnumer": [1322, 1372], "820": 1322, "userwarn": [1322, 1328, 1370, 1371, 1372], "maskedarrai": [1322, 1372], "kth": [1322, 1372], "__doc__": [1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1357], "jonathan": [1322, 1323, 1332, 1333, 1340, 1341, 1343, 1345, 1349, 1352, 1378], "helmu": [1322, 1323, 1332, 1333, 1340, 1341, 1343, 1345, 1349, 1352, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376, 1378], "jhelmu": [1322, 1323, 1332, 1333, 1340, 1341, 1343, 1345, 1349, 1352], "anl": [1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1352, 1355, 1356], "licens": [1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1376], "bsd": [1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1376], "claus": [1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1376], "pyplot": [1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372], "plt": [1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372], "get_test_data": [1322, 1323, 1331, 1332, 1333, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357], "sgpcsaprsurcmaci7": [1322, 1365], "c0": [1322, 1345, 1346, 1350, 1365], "20110520": [1322, 1365], "095101": [1322, 1365], "read_cfradi": [1322, 1331, 1333, 1337, 1345, 1346, 1350, 1358, 1359, 1371, 1372], "pop": 1322, "specific_attenu": [1322, 1355, 1358, 1364, 1369, 1372], "corrected_reflectivity_horizont": [1322, 1333, 1337, 1355, 1364], "add_field": [1322, 1323, 1357, 1358, 1365, 1366, 1371, 1372, 1376], "figsiz": [1322, 1323, 1327, 1328, 1331, 1336, 1337, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1356, 1357, 1358, 1365, 1366, 1368, 1369, 1371, 1372], "ax1": [1322, 1323, 1337, 1351, 1352, 1357], "add_subplot": [1322, 1323, 1332, 1333, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1352], "131": [1322, 1357], "raw": [1322, 1323, 1362, 1363, 1371], "ax2": [1322, 1323, 1331, 1337, 1351, 1352, 1356, 1357, 1366], "132": [1322, 1357], "ax3": [1322, 1323, 1351, 1357], "133": [1322, 1355, 1357], "suptitl": [1322, 1323, 1350, 1359, 1371], "fontsiz": [1322, 1323, 1336, 1338, 1347, 1348], "minut": [1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1371], "376": 1322, "jupyt": [1322, 1323, 1325, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1370, 1378], "notebook": [1322, 1323, 1325, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1365, 1368, 1369, 1376, 1378], "plot_attenu": [1322, 1324, 1374], "ipynb": [1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359], "zip": [1322, 1323, 1325, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362], "galleri": [1322, 1323, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1374], "sphinx": [1322, 1323, 1325, 1327, 1328, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359], "ial": 1323, "095636": [1323, 1366], "sonde_fil": 1323, "sgpinterpolatedsondec1": 1323, "c1": [1323, 1369], "20110510": 1323, "000000": 1323, "cdf": 1323, "read_arm_sonde_vap": 1323, "exclude_transit": [1323, 1332, 1333, 1337, 1356], "exclude_invalid": 1323, "exclude_outsid": 1323, "80": [1323, 1351, 1356], "dealias_data": 1323, "dealias_region_bas": [1323, 1366, 1371], "corrected_veloc": [1323, 1359, 1366, 1369, 1371], "sixth": 1323, "221": [1323, 1340, 1371], "223": [1323, 1340, 1371], "ax4": 1323, "224": [1323, 1340, 1371], "19": [1323, 1324, 1359, 1371, 1373, 1374], "145": [1323, 1324, 1355, 1374], "plot_dealia": [1323, 1324, 1374], "mem": [1324, 1329, 1334, 1353, 1360, 1361, 1374], "mb": [1324, 1329, 1334, 1353, 1360, 1361, 1374], "000": [1324, 1361, 1374], "varieti": [1325, 1326, 1376], "aw": [1325, 1326, 1328, 1329, 1374], "gatemapp": [1325, 1330, 1334, 1374], "panel": [1325, 1335, 1353, 1374], "examples_python": 1325, "examples_jupyt": 1325, "next": 1327, "quick": 1327, "grover": [1327, 1331, 1336, 1337, 1342, 1350, 1355, 1356], "mgrover": [1327, 1331, 1336, 1337, 1342, 1350, 1355, 1356], "ccr": [1327, 1328, 1331, 1337, 1338, 1344, 1351, 1355, 1357, 1365, 1366, 1369, 1371, 1372], "let": [1327, 1328, 1331, 1336, 1338, 1355, 1357, 1364, 1366, 1368, 1369, 1371, 1372, 1373, 1376, 1378], "administr": 1327, "our": [1327, 1328, 1331, 1336, 1337, 1355, 1357, 1372], "filepath": [1327, 1328], "level2": [1327, 1328, 1339, 1357], "bucket": 1327, "organ": 1327, "year": [1327, 1328, 1376], "month": [1327, 1328], "radarsit": [1327, 1328], "_v06": 1327, "houston": 1327, "texa": 1327, "khgx": 1327, "march": 1327, "1201": 1327, "utc": [1327, 1328, 1350], "aws_nexrad_level2_fil": [1327, 1328], "03": [1327, 1353, 1360, 1374], "khgx20220322_120125_v06": 1327, "read_nexrad_arch": [1327, 1328, 1339, 1340, 1341, 1357], "summari": 1327, "spectrum_width": [1327, 1369, 1370, 1373], "cross_correlation_ratio": [1327, 1339, 1340, 1357, 1369, 1373], "differential_phas": [1327, 1340, 1369, 1373], "radarmapdisplai": [1327, 1328, 1331, 1338, 1344, 1355, 1364, 1365, 1366, 1368, 1369, 1372], "subplot": [1327, 1331, 1336, 1337, 1338, 1350, 1355, 1356, 1357, 1358, 1359, 1366, 1371, 1372], "121": [1327, 1331, 1337, 1356], "plot_ppi_map": [1327, 1328, 1331, 1338, 1344, 1355, 1365, 1366, 1369, 1372], "relect": 1327, "z_": [1327, 1331, 1338], "v_": 1327, "70": [1327, 1331, 1337], "n0u": 1327, "noq": 1327, "level3": 1327, "aws_nexrad_level3_velocity_fil": 1327, "hgx_n0u_2022_03_22_12_01_25": 1327, "aws_nexrad_level3_reflectivity_fil": 1327, "hgx_n0q_2022_03_22_12_01_25": 1327, "read_nexrad_level3": 1327, "radar_level3_veloc": 1327, "radar_level3_reflect": 1327, "confirm": [1327, 1364], "setup": [1327, 1331, 1336, 1337, 1342, 1355, 1362, 1375], "reflectivity_displai": 1327, "velocity_displai": 1327, "440": [1327, 1329, 1374], "plot_nexrad_data_aw": [1327, 1329, 1374], "zachari": 1328, "sherman": 1328, "zsherman": [1328, 1378], "tendenc": 1328, "usual": [1328, 1376], "gz": 1328, "handford": 1328, "ca": 1328, "khnx": 1328, "juli": [1328, 1371], "0203": 1328, "v06": 1328, "khnx20060724_020338": 1328, "pyrad": [1328, 1362, 1370, 1371, 1372, 1376], "nexrad_arch": 1328, "231": 1328, "14": [1328, 1329, 1336, 1337, 1338, 1353, 1371, 1373, 1374], "now": [1328, 1331, 1336, 1338, 1355, 1357, 1364, 1366, 1371, 1372, 1375], "clearli": [1328, 1371, 1372], "lucki": 1328, "31417": 1328, "119": [1328, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "63111": 1328, "plote": [1328, 1344], "central_latitud": [1328, 1344, 1357, 1365], "central_longitud": [1328, 1344, 1357, 1365], "plot_older_nexrad_data_aw": [1328, 1329, 1374], "37": [1329, 1331, 1355, 1369, 1370, 1371], "439": 1329, "bobbi": 1331, "jackson": 1331, "rjackson": 1331, "filterwarn": 1331, "xsapr": [1331, 1333, 1337], "xsapr_sw_fil": [1331, 1333, 1337], "swx_20120520_0641": [1331, 1333, 1336, 1337, 1338, 1342, 1352, 1355, 1356, 1357], "xsapr_se_fil": [1331, 1333, 1337], "sex_20120520_0641": [1331, 1333, 1337], "radar_sw": [1331, 1333, 1337], "radar_s": [1331, 1333, 1337], "southwestern": 1331, "southeastern": 1331, "gmapper": 1331, "radar_sw_mapped_to_radar_s": 1331, "notic": [1331, 1338], "disp1": 1331, "98": [1331, 1355, 1359, 1369, 1371], "arang": [1331, 1344, 1347, 1348, 1355, 1358, 1359, 1370, 1371, 1372, 1376], "96": [1331, 1369], "disp2": 1331, "remap": [1331, 1370], "difficult": 1331, "eyebal": 1331, "fortun": 1331, "mind": [1331, 1376], "cours": [1331, 1376], "reflectivity_se_radar": 1331, "reflectivity_sw_radar": 1331, "reflectivity_differ": 1331, "add_field_lik": 1331, "reflectivity_bia": 1331, "111": [1331, 1332, 1333, 1338, 1341, 1342, 1343, 1347, 1348, 1349, 1355], "pyart_bal": [1331, 1350, 1366], "southwest": 1331, "xspar": 1331, "southeast": 1331, "neccessarili": 1331, "incl_gat": 1331, "argwher": 1331, "refl_s": 1331, "refl_sw": 1331, "values_without_mask": 1331, "logical_and": 1331, "flatten": 1331, "hist": [1331, 1366], "histogram2d": 1331, "masked_wher": [1331, 1369], "meshgrid": 1331, "pyart_homeyerrainbow": [1331, 1336, 1337, 1338, 1343, 1346, 1350, 1351, 1356], "log_": 1331, "xlabel": [1331, 1345, 1346, 1366], "ylabel": [1331, 1345, 1346, 1366], "090": [1331, 1334, 1374], "plot_compare_two_radars_gatemapp": [1331, 1334, 1374], "110635": [1332, 1343, 1368], "241": 1332, "123000": 1332, "796": [1332, 1334, 1374], "plot_map_one_radar_to_grid": [1332, 1334, 1374], "xsarp": [1333, 1345, 1346], "gatefilter_s": [1333, 1337], "exclude_abov": [1333, 1337, 1366], "gatefilter_sw": [1333, 1337], "201": [1333, 1357, 1368], "57861": [1333, 1337], "363611": [1333, 1337], "48": 1333, "729": [1333, 1334, 1374], "plot_map_two_radars_to_grid": [1333, 1334, 1374], "615": 1334, "visual": [1336, 1339, 1347, 1355, 1372], "linspac": [1336, 1339, 1357, 1364, 1376], "256": [1336, 1358, 1370, 1372], "vstack": 1336, "def": [1336, 1376], "plot_color_gradi": 1336, "cmap_categori": 1336, "cmap_list": 1336, "len": [1336, 1350, 1358, 1364, 1370, 1372], "figh": 1336, "subplots_adjust": [1336, 1345, 1346], "set_titl": [1336, 1357], "cmap_nam": 1336, "pyart_": 1336, "va": 1336, "transax": 1336, "spine": 1336, "set_axis_off": 1336, "colorblind": 1336, "friendli": 1336, "langrainbow12": 1336, "balanc": 1336, "chasespectr": 1336, "spectralextend": 1336, "perceptu": [1336, 1339], "light": [1336, 1358, 1372], "bu10": 1336, "bu7": 1336, "gray5": 1336, "gray9": 1336, "diverg": 1336, "meaning": 1336, "bluebrown11": 1336, "brbu10": 1336, "brbu12": 1336, "budor12": 1336, "budor18": 1336, "budrd12": 1336, "budrd18": 1336, "bugr14": 1336, "bugy8": 1336, "buor10": 1336, "buor12": 1336, "buor8": 1336, "buorr14": 1336, "grmg16": 1336, "rdylbu11b": 1336, "There": [1336, 1372, 1375, 1378], "bluebrown10": 1336, "nwsref": 1336, "carbone11": 1336, "carbone17": 1336, "carbone42": 1336, "cat12": 1336, "ewilson17": 1336, "nwsvel": 1336, "nws_spw": 1336, "pd17": 1336, "rrate11": 1336, "refdiff": 1336, "scook18": 1336, "stepseq25": 1336, "symgray12": 1336, "theodore16": 1336, "wild25": 1336, "spectral_r": 1336, "rememb": 1336, "front": [1336, 1371], "shown": 1336, "032": [1336, 1353, 1374], "plot_choose_a_colormap": [1336, 1353, 1374], "181": 1337, "plot_grid": [1337, 1351, 1357, 1368, 1371], "scatter": [1337, 1355], "tab": 1337, "blue": [1337, 1347, 1348, 1372], "black": [1337, 1355], "legend": 1337, "plot_cross_sect": [1337, 1353, 1374], "725": [1337, 1353, 1374], "joe": 1338, "brien": 1338, "obrienj": 1338, "perfect": 1338, "overlap": [1338, 1347], "coord": 1338, "gridlin": 1338, "gl": 1338, "draw_label": 1338, "grai": [1338, 1339, 1370, 1372], "gca": 1338, "set_major_loc": 1338, "nullloc": 1338, "top_label": 1338, "right_label": 1338, "xlabel_styl": 1338, "ylabel_styl": 1338, "delet": [1338, 1376], "del": 1338, "manipul": [1338, 1363], "axsb": 1338, "ppi_map": 1338, "cbar": 1338, "set_label": 1338, "set_tick": 1338, "446": [1338, 1353, 1374], "plot_modify_colorbar": [1338, 1353, 1374], "reduc": [1339, 1375], "promin": 1339, "deemphas": 1339, "depict": 1339, "ultim": [1339, 1372], "misinterpret": 1339, "lmtomkin": [1339, 1357], "ncsu": [1339, 1357], "citat": 1339, "mcolor": [1339, 1357], "nexrad_fil": [1339, 1357], "kbgm": 1339, "kbgm20200207_132642_v06": 1339, "image_mute_radar": [1339, 1357], "magma_cmap": 1339, "get_cmap": [1339, 1357], "magma_r": [1339, 1357], "grays_cmap": 1339, "gray_r": 1339, "nonmuted_cmap": 1339, "linearsegmentedcolormap": [1339, 1357], "from_list": [1339, 1357], "muted_cmap": 1339, "nonmuted_reflect": [1339, 1357], "muted_reflect": 1339, "300": [1339, 1340, 1364], "set_aspect": [1339, 1357, 1358, 1371, 1372], "226": [1339, 1353, 1374], "plot_nexrad_image_muted_reflect": [1339, 1353, 1374], "katx20130717_195021_v06": [1340, 1373], "plot_nexrad_multiple_mo": [1340, 1353, 1374], "level2_katx_20130717_1950": 1341, "ar2v": 1341, "super": [1341, 1365, 1368, 1371], "plot_range_r": [1341, 1342, 1344], "538": [1341, 1353, 1374], "plot_nexrad_reflect": [1341, 1353, 1374], "main": [1342, 1376], "plot_cross_hair": 1342, "984": [1342, 1353, 1374], "plot_ppi_cfradi": [1342, 1353, 1374], "150": [1343, 1351, 1353, 1366, 1374], "377": [1343, 1353, 1374], "plot_ppi_mdv": [1343, 1353, 1374], "jason": [1344, 1351], "hemeding": [1344, 1351], "nsaxsaprppic1": 1344, "a1": 1344, "20140201": 1344, "184802": 1344, "157": 1344, "156": 1344, "71": 1344, "158": 1344, "154": 1344, "69": [1344, 1371], "72": 1344, "40km": 1344, "plot_line_xi": 1344, "plot_point": 1344, "384": [1344, 1353, 1374], "plot_ppi_with_r": [1344, 1353, 1374], "sgpxsaprrhicmaci5": [1345, 1346, 1350], "20110524": [1345, 1346, 1350], "015604_nc4": [1345, 1346, 1350], "instrument_nam": [1345, 1346, 1373], "hspace": [1345, 1346], "agl": 1345, "fac": 1345, "nplot": [1345, 1346, 1350], "snum": 1345, "hsrhi": [1345, 1346], "3f": [1345, 1346], "time_start": 1345, "num2dat": 1345, "only_use_cftime_datetim": 1345, "only_use_python_datetim": 1345, "figure_titl": 1345, "isoformat": 1345, "506": [1345, 1353, 1374], "plot_rhi_cfradi": [1345, 1353, 1374], "166": [1346, 1353, 1374], "plot_rhi_cfradial_singlescan": [1346, 1353, 1374], "differnenti": 1347, "cori": [1347, 1348], "weber": [1347, 1348], "cweber": [1347, 1348], "220629": 1347, "white": 1347, "matplolib": 1347, "visabl": 1347, "border": [1347, 1372], "flow": [1347, 1370], "paramt": 1347, "compens": 1347, "nearli": 1347, "00015": 1347, "veri": [1347, 1357, 1371, 1372], "antialias": [1347, 1348], "moir": 1347, "get_start": [1347, 1348], "get_end": [1347, 1348], "blur": 1347, "nice": [1347, 1375], "arbirarli": 1347, "impact": 1347, "gaussian_filt": [1347, 1348], "levels_rain": 1347, "levels_ic": 1347, "contours_ic": 1347, "contours_rain": 1347, "red": [1347, 1348], "fmt": [1347, 1348], "0000": [1347, 1348], "clabel": [1347, 1348], "inlin": [1347, 1348, 1370], "plot_rhi_contours_differential_reflect": [1347, 1353, 1374], "spyi": 1348, "034142": 1348, "ramp": 1348, "blob": 1348, "pyart_budrd18": 1348, "comment": [1348, 1373], "coutour": 1348, "solid": 1348, "major": [1348, 1371], "axhlin": 1348, "dash": 1348, "axvlin": 1348, "00b4ff": 1348, "ff6800": 1348, "set_ylabel": [1348, 1359, 1371], "cp": 1348, "627": [1348, 1353, 1374], "plot_rhi_data_overlai": [1348, 1353, 1374], "110041": 1349, "299": [1349, 1353, 1374], "plot_rhi_mdv": [1349, 1353, 1374], "fields_to_plot": 1350, "plot_num": 1350, "grab": 1350, "u00b0": 1350, "205": [1350, 1353, 1374], "plot_rhi_two_panel": [1350, 1353, 1374], "20110520100000_nexrad_grid": 1351, "read_grid": 1351, "map_panel_ax": 1351, "x_cut_panel_ax": 1351, "y_cut_panel_ax": 1351, "add_ax": [1351, 1371], "plot_crosshair": 1351, "plot_longitude_slic": 1351, "set_ylim": [1351, 1358, 1371, 1372], "set_xlim": [1351, 1358, 1371, 1372], "plot_latitude_slic": [1351, 1368, 1371], "plot_three_panel_gridmapdisplai": [1351, 1353, 1374], "225": 1352, "270": [1352, 1371, 1376], "xsect": 1352, "cross_section_ppi": [1352, 1371], "211": 1352, "212": 1352, "tight_layout": 1352, "069": [1352, 1353, 1374], "263": 1353, "04": [1353, 1355, 1374], "maxwel": [1355, 1356], "site_lon": 1355, "73": 1355, "site_lat": 1355, "latitdu": 1355, "pathcollect": 1355, "0x2b624b4ec5f0": 1355, "columnsect": 1355, "get_field_loc": 1355, "2kb": 1355, "176b": 1355, "351": 1355, "818e": 1355, "88": 1355, "recalculated_diff_phas": [1355, 1364], "555": 1355, "2778": 1355, "unf_dp_phase_shift": [1355, 1364], "88b": 1355, "688": 1355, "144": 1355, "diff_reflect": [1355, 1364], "95": [1355, 1373], "datetime64": 1355, "8b": 1355, "20t06": 1355, "distance_from_radar": 1355, "233": 1355, "545": 1355, "latitude_of_loc": 1355, "longitude_of_loc": 1355, "line2d": 1355, "0x2b624b47f920": 1355, "215": [1355, 1360, 1374], "plot_column_subset": [1355, 1360, 1374], "compz": 1356, "composite_reflect": 1356, "composite_displai": 1356, "891": [1356, 1360, 1374], "plot_composite_reflect": [1356, 1360, 1374], "classifc": 1357, "summer": 1357, "ian": 1357, "footprint": 1357, "yield": 1357, "smoother": 1357, "rescal": 1357, "simpli": [1357, 1366, 1368, 1375, 1376, 1378], "plot_convstrat_schem": 1357, "pick": 1357, "radii": 1357, "dilat": 1357, "event": [1357, 1371, 1372], "extract_sweep": [1357, 1359], "convsf_mask": 1357, "masked_equ": 1357, "convsf": 1357, "magma_r_cmap": 1357, "ref_cmap": 1357, "albersequalarea": 1357, "convsf_und": 1357, "convsf_ov": 1357, "uncertainti": 1357, "underest": 1357, "overest": 1357, "09": 1357, "ktbw": 1357, "ktbw20220928_190142_v06": 1357, "rasumussen": 1357, "reflecit": 1357, "kokx": 1357, "kokx20210207_161413_v06": 1357, "nonmuted_ref": 1357, "masked_invalid": 1357, "nonmuted_ref_linear": 1357, "mm6": 1357, "m3": 1357, "snow_rat": 1357, "57": 1357, "67": 1357, "snow_rate_dict": 1357, "standard_nam": [1357, 1365, 1373], "hr": 1357, "40500": 1357, "purpos": 1357, "034": 1357, "ccotd": 1357, "rasmussen": 1357, "dixon": 1357, "vasiloff": 1357, "hage": 1357, "knight": 1357, "vivekanandan": 1357, "xu": 1357, "nowcast": 1357, "042": 1357, "3c0020": 1357, "snuart": 1357, "257": [1357, 1360, 1374], "plot_convective_stratiform": [1357, 1360, 1374], "daniel": [1358, 1359], "mpl": [1358, 1365, 1368, 1370, 1371, 1372], "open_radar_data": [1358, 1359], "fetch": [1358, 1359, 1376], "mll2217907250u": [1358, 1370], "003": [1358, 1372], "preinterpol": 1358, "20220628072500_savevol_cosmo_lookup_temp": 1358, "nwp_temp": 1358, "uncorrected_differential_phas": [1358, 1370, 1372], "pia": [1358, 1372], "pida": [1358, 1372], "corrected_reflect": [1358, 1369, 1372], "corrected_differential_reflect": [1358, 1369, 1372], "kdp_maesaka": [1358, 1372], "specific_differential_phas": [1358, 1369, 1372], "hydroclass_semisupervis": [1358, 1372], "uncorrected_cross_correlation_ratio": [1358, 1370, 1372], "radar_echo_classif": [1358, 1372], "boundarynorm": [1358, 1370, 1372], "crystal": [1358, 1372], "rime": [1358, 1372], "particl": [1358, 1372], "hail": [1358, 1372], "graupel": [1358, 1372], "841": [1358, 1360, 1374], "plot_hydrometeor": [1358, 1360, 1374], "2919": 1359, "4178130067885": 1359, "10761547461152": 1359, "5509": 1359, "768666450866": 1359, "7536260737106204": 1359, "8052": 1359, "019321078435": 1359, "342043600045145": 1359, "10640": 1359, "04439644888": 1359, "977913962677121": 1359, "14495": 1359, "494732164778": 1359, "906225782819092": 1359, "18768": 1359, "789393587038": 1359, "262494841590524": 1359, "23035": 1359, "24401461892": 1359, "614115744829178": 1359, "27293": 1359, "5715815695": 1359, "95976355858147": 1359, "31542": 1359, "48958020564": 1359, "298115176148713": 1359, "35780": 1359, "72036395222": 1359, "627849710173905": 1359, "40006": 1359, "99151830096": 1359, "94764890149236": 1359, "44220": 1359, "03622135054": 1359, "25619751494378": 1359, "50489": 1359, "064549734816": 1359, "67152879666537": 1359, "58843": 1359, "38833568245": 1359, "228615786880255": 1359, "71218": 1359, "4286093181": 1359, "68": 1359, "92037126235664": 1359, "87323": 1359, "4833560437": 1359, "46686871536076": 1359, "106930": 1359, "95716868155": 1359, "65646427776664": 1359, "125649": 1359, "4902487807": 1359, "97650004737079": 1359, "143446": 1359, "80052956566": 1359, "143": [1359, 1371], "38717443030328": 1359, "160134": 1359, "12803849299": 1359, "68632691167295": 1359, "mla2119412050u": 1359, "zlevel": [1359, 1371], "u_allsweep": 1359, "v_allsweep": 1359, "idx": 1359, "radar_1sweep": 1359, "vad_brown": [1359, 1371], "u_avg": 1359, "nanmean": [1359, 1371], "v_avg": 1359, "rad2deg": [1359, 1371], "sharei": [1359, 1371, 1372], "set_xlabel": [1359, 1371], "406": [1359, 1360, 1374], "plot_vad": [1359, 1360, 1374], "609": 1360, "08": [1360, 1374], "cookbook": [1362, 1377], "depth": [1362, 1373, 1376], "conceptu": 1362, "projectpythia": 1362, "understand": 1362, "search": [1362, 1375], "api": 1362, "demonstr": 1362, "toolkit": [1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373], "basi": 1362, "exploit": 1362, "prefer": [1362, 1375], "submodul": [1362, 1368], "superproject": 1362, "propos": 1362, "bleed": 1362, "among": 1362, "europ": 1362, "fmi": 1362, "windcub": 1362, "leospher": 1362, "research": [1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "facil": [1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "colli": [1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "languag": [1362, 1376], "e25": [1362, 1376], "5334": [1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "jor": [1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "lainer": [1362, 1376], "schauweck": [1362, 1376], "framework": [1362, 1376], "abil": [1362, 1378], "ii": [1362, 1373], "sophist": 1362, "tutori": 1362, "erad": 1362, "easiest": [1362, 1376], "latest": [1362, 1376], "januari": 1362, "1st": 1362, "anaconda": [1362, 1375, 1376], "miniconda": [1362, 1376], "environ": [1362, 1372, 1375, 1377], "yml": [1362, 1378], "Or": 1362, "basic": [1362, 1363, 1365], "pyart_env": [1362, 1365, 1368, 1378], "forg": [1362, 1375, 1376, 1378], "pyart_mch": [1362, 1375, 1376, 1378], "termin": [1362, 1376, 1378], "prompt": [1362, 1376], "wish": 1362, "unreleas": 1362, "clone": [1362, 1375], "git": [1362, 1375, 1376, 1378], "repositori": [1362, 1375, 1376, 1378], "Then": [1362, 1375, 1376], "scientif": [1362, 1376], "linux": [1362, 1376, 1378], "mac": 1362, "charg": 1362, "resourc": [1362, 1375], "lassen": 1362, "radtec": 1362, "rsl_path": [1362, 1375], "usr": 1362, "h5py": 1362, "solver": 1362, "fastest": 1362, "cbc": 1362, "glpk": 1362, "coincbc": [1362, 1375, 1378], "coin_install_dir": [1362, 1375, 1378], "wradlib": 1362, "pytest": [1362, 1375, 1376], "appreci": 1362, "sometim": 1364, "hypothet": 1364, "doesn": 1364, "partli": [1364, 1365, 1366, 1368, 1369, 1370, 1373], "depart": [1364, 1365, 1366, 1368, 1369, 1370, 1373], "energi": [1364, 1365, 1366, 1368, 1369, 1370, 1373], "radiat": [1364, 1365, 1366, 1368, 1369, 1370, 1373, 1376], "offic": [1364, 1365, 1366, 1368, 1369, 1370, 1373], "scienc": [1364, 1365, 1366, 1368, 1369, 1370, 1373], "cite": [1364, 1365, 1366, 1368, 1369, 1370, 1373], "jj": [1364, 1365, 1366, 1368, 1369, 1370, 1373], "sm": [1364, 1365, 1366, 1368, 1369, 1370, 1373], "test_radar": [1364, 1376], "idea": [1364, 1366, 1371, 1372], "dict_kei": [1364, 1369], "rain_rate_a": [1364, 1369], "time_coverage_start": [1364, 1373], "time_coverage_end": 1364, "volume_numb": 1364, "platform_typ": 1364, "instrument_typ": 1364, "primary_axi": 1364, "667": 1364, "make_empty_ppi_radar": 1364, "59416667": 1364, "As": [1364, 1366, 1368, 1369, 1376], "isn": 1364, "120": [1364, 1372], "240": 1364, "420": 1364, "480": 1364, "540": 1364, "660": 1364, "720": 1364, "780": 1364, "840": 1364, "900": 1364, "960": 1364, "1020": 1364, "1080": 1364, "1140": 1364, "1200": 1364, "1260": 1364, "1320": 1364, "1380": [1364, 1372], "1440": 1364, "1500": 1364, "1560": 1364, "1620": 1364, "1680": 1364, "1740": 1364, "1860": 1364, "1920": 1364, "1980": 1364, "2040": 1364, "2100": 1364, "2160": 1364, "2220": 1364, "2280": 1364, "2340": 1364, "2400": 1364, "2460": 1364, "2520": 1364, "2580": 1364, "2640": [1364, 1372], "2700": 1364, "2760": 1364, "2820": 1364, "2880": 1364, "2940": 1364, "3060": 1364, "3120": 1364, "3180": 1364, "3240": 1364, "3300": 1364, "3360": 1364, "3420": 1364, "3480": 1364, "3540": 1364, "3660": 1364, "3720": 1364, "3780": 1364, "3840": 1364, "3900": 1364, "3960": 1364, "4020": 1364, "4080": 1364, "4140": 1364, "4200": [1364, 1372], "4260": 1364, "4320": 1364, "4380": 1364, "4440": 1364, "4560": 1364, "4620": 1364, "4680": 1364, "4740": 1364, "4800": 1364, "4860": 1364, "4920": 1364, "4980": 1364, "5040": 1364, "5100": 1364, "5160": 1364, "5220": 1364, "5280": 1364, "5340": 1364, "5400": 1364, "5460": 1364, "5520": 1364, "5580": 1364, "5640": 1364, "5700": 1364, "5760": 1364, "5820": 1364, "5880": 1364, "5940": 1364, "6060": 1364, "6120": 1364, "6180": 1364, "6240": 1364, "6300": 1364, "6360": 1364, "6420": 1364, "6480": 1364, "6540": 1364, "6600": 1364, "6660": 1364, "6720": 1364, "6780": 1364, "6840": 1364, "6900": 1364, "6960": 1364, "7020": 1364, "7080": 1364, "7140": 1364, "7200": [1364, 1373], "7260": 1364, "7320": 1364, "7380": 1364, "7440": 1364, "7500": 1364, "7560": 1364, "7620": 1364, "7680": 1364, "7740": 1364, "7800": 1364, "7860": 1364, "7920": 1364, "7980": 1364, "8040": 1364, "8100": 1364, "8160": 1364, "8220": 1364, "8280": 1364, "8340": 1364, "8400": 1364, "8460": 1364, "8520": 1364, "8580": 1364, "8640": 1364, "8700": 1364, "8760": 1364, "8820": 1364, "8880": 1364, "8940": 1364, "9000": [1364, 1368], "9060": 1364, "9120": 1364, "9180": 1364, "9240": 1364, "9300": 1364, "9360": 1364, "9420": 1364, "9480": 1364, "9540": 1364, "9600": 1364, "9660": 1364, "9720": 1364, "9780": 1364, "9840": 1364, "9900": 1364, "9960": 1364, "10020": 1364, "10080": 1364, "10140": 1364, "10200": 1364, "10260": 1364, "10320": 1364, "10380": 1364, "10440": 1364, "10500": 1364, "10560": 1364, "10620": 1364, "10680": 1364, "10740": 1364, "10800": 1364, "10860": 1364, "10920": 1364, "10980": 1364, "11040": 1364, "11100": 1364, "11160": 1364, "11220": 1364, "11280": 1364, "11340": 1364, "11400": 1364, "11460": 1364, "11520": 1364, "11580": 1364, "11640": 1364, "11700": 1364, "11760": 1364, "11820": 1364, "11880": 1364, "11940": 1364, "12060": 1364, "12120": 1364, "12180": 1364, "12240": 1364, "12300": 1364, "12360": 1364, "12420": 1364, "12480": 1364, "12540": 1364, "12600": 1364, "12660": 1364, "12720": 1364, "12780": 1364, "12840": 1364, "12900": 1364, "12960": 1364, "13020": 1364, "13080": 1364, "13140": 1364, "13200": 1364, "13260": 1364, "13320": 1364, "13380": 1364, "13440": 1364, "13500": 1364, "13560": 1364, "13620": 1364, "13680": 1364, "13740": 1364, "13800": 1364, "13860": 1364, "13920": 1364, "13980": 1364, "14040": 1364, "14100": 1364, "14160": 1364, "14220": 1364, "14280": 1364, "14340": 1364, "14400": 1364, "14460": 1364, "14520": 1364, "14580": 1364, "14640": 1364, "14700": 1364, "14760": 1364, "14820": 1364, "14880": 1364, "14940": 1364, "15060": 1364, "15120": 1364, "15180": 1364, "15240": 1364, "15300": 1364, "15360": 1364, "15420": 1364, "15480": 1364, "15540": 1364, "15600": 1364, "15660": 1364, "15720": 1364, "15780": 1364, "15840": 1364, "15900": 1364, "15960": 1364, "16020": 1364, "16080": 1364, "16140": 1364, "16200": 1364, "16260": 1364, "16320": 1364, "16380": 1364, "16440": 1364, "16500": 1364, "16560": 1364, "16620": 1364, "16680": 1364, "16740": 1364, "16800": 1364, "16860": 1364, "16920": 1364, "16980": 1364, "17040": 1364, "17100": 1364, "17160": 1364, "17220": 1364, "17280": 1364, "17340": 1364, "17400": 1364, "17460": 1364, "17520": 1364, "17580": 1364, "17640": 1364, "17700": 1364, "17760": 1364, "17820": 1364, "17880": 1364, "17940": 1364, "18000": [1364, 1368], "18060": 1364, "18120": 1364, "18180": 1364, "18240": 1364, "18300": 1364, "18360": 1364, "18420": 1364, "18480": 1364, "18540": 1364, "18600": 1364, "18660": 1364, "18720": 1364, "18780": 1364, "18840": 1364, "18900": 1364, "18960": 1364, "19020": 1364, "19080": 1364, "19140": 1364, "19200": 1364, "19260": 1364, "19320": 1364, "19380": 1364, "19440": 1364, "19500": 1364, "19560": 1364, "19620": 1364, "19680": 1364, "19740": 1364, "19800": 1364, "19860": 1364, "19920": 1364, "19980": 1364, "20040": 1364, "20100": 1364, "20160": 1364, "20220": 1364, "20280": 1364, "20340": 1364, "20400": 1364, "20460": 1364, "20520": 1364, "20580": 1364, "20640": 1364, "20700": 1364, "20760": 1364, "20820": 1364, "20880": 1364, "20940": 1364, "21000": [1364, 1368], "21060": 1364, "21120": 1364, "21180": 1364, "21240": 1364, "21300": 1364, "21360": 1364, "21420": 1364, "21480": 1364, "21540": 1364, "21600": 1364, "21660": 1364, "21720": 1364, "21780": 1364, "21840": 1364, "21900": 1364, "21960": 1364, "22020": 1364, "22080": 1364, "22140": 1364, "22200": 1364, "22260": 1364, "22320": 1364, "22380": 1364, "22440": 1364, "22500": 1364, "22560": 1364, "22620": 1364, "22680": 1364, "22740": 1364, "22800": [1364, 1371], "22860": 1364, "22920": 1364, "22980": 1364, "23040": 1364, "23100": 1364, "23160": 1364, "23220": 1364, "23280": 1364, "23340": 1364, "23400": 1364, "23460": 1364, "23520": 1364, "23580": 1364, "23640": 1364, "23700": 1364, "23760": 1364, "23820": 1364, "23880": 1364, "23940": 1364, "24000": [1364, 1368], "24060": 1364, "24120": 1364, "24180": 1364, "24240": 1364, "24300": 1364, "24360": 1364, "24420": 1364, "24480": 1364, "24540": 1364, "24600": 1364, "24660": 1364, "24720": 1364, "24780": 1364, "24840": 1364, "24900": 1364, "24960": 1364, "25020": 1364, "25080": 1364, "25140": 1364, "25200": 1364, "25260": 1364, "25320": 1364, "25380": 1364, "25440": 1364, "25500": 1364, "25560": 1364, "25620": 1364, "25680": 1364, "25740": 1364, "25800": 1364, "25860": 1364, "25920": 1364, "25980": 1364, "26040": 1364, "26100": 1364, "26160": 1364, "26220": 1364, "26280": 1364, "26340": 1364, "26400": 1364, "26460": 1364, "26520": 1364, "26580": 1364, "26640": 1364, "26700": 1364, "26760": 1364, "26820": 1364, "26880": 1364, "26940": 1364, "27000": [1364, 1368], "27060": [1364, 1371], "27120": 1364, "27180": 1364, "27240": 1364, "27300": 1364, "27360": 1364, "27420": 1364, "27480": 1364, "27540": 1364, "27600": 1364, "27660": 1364, "27720": 1364, "27780": 1364, "27840": 1364, "27900": 1364, "27960": 1364, "28020": 1364, "28080": 1364, "28140": 1364, "28200": 1364, "28260": 1364, "28320": 1364, "28380": 1364, "28440": 1364, "28500": 1364, "28560": 1364, "28620": 1364, "28680": 1364, "28740": 1364, "28800": 1364, "28860": 1364, "28920": 1364, "28980": 1364, "29040": 1364, "29100": 1364, "29160": 1364, "29220": 1364, "29280": 1364, "29340": 1364, "29400": 1364, "29460": 1364, "29520": 1364, "29580": 1364, "29640": 1364, "29700": 1364, "29760": 1364, "29820": 1364, "29880": 1364, "29940": 1364, "30000": [1364, 1368], "30060": 1364, "30120": 1364, "30180": 1364, "30240": 1364, "30300": 1364, "30360": 1364, "30420": 1364, "30480": 1364, "30540": 1364, "30600": 1364, "30660": 1364, "30720": 1364, "30780": 1364, "30840": 1364, "30900": 1364, "30960": 1364, "31020": 1364, "31080": 1364, "31140": 1364, "31200": 1364, "31260": 1364, "31320": 1364, "31380": 1364, "31440": 1364, "31500": 1364, "31560": 1364, "31620": 1364, "31680": 1364, "31740": 1364, "31800": 1364, "31860": 1364, "31920": 1364, "31980": 1364, "32040": 1364, "32100": 1364, "32160": 1364, "32220": 1364, "32280": 1364, "32340": 1364, "32400": 1364, "32460": 1364, "32520": 1364, "32580": 1364, "32640": 1364, "32700": 1364, "32760": 1364, "32820": 1364, "32880": 1364, "32940": 1364, "33000": [1364, 1368], "33060": 1364, "33120": 1364, "33180": 1364, "33240": 1364, "33300": 1364, "33360": 1364, "33420": 1364, "33480": 1364, "33540": 1364, "33600": 1364, "33660": 1364, "33720": 1364, "33780": 1364, "33840": 1364, "33900": 1364, "33960": 1364, "34020": 1364, "34080": 1364, "34140": 1364, "34200": 1364, "34260": 1364, "34320": 1364, "34380": 1364, "34440": 1364, "34500": 1364, "34560": 1364, "34620": 1364, "34680": 1364, "34740": 1364, "34800": 1364, "34860": 1364, "34920": 1364, "34980": 1364, "35040": 1364, "35100": 1364, "35160": 1364, "35220": 1364, "35280": 1364, "35340": 1364, "35400": 1364, "35460": 1364, "35520": 1364, "35580": 1364, "35640": 1364, "35700": 1364, "35760": 1364, "35820": 1364, "35880": 1364, "35940": 1364, "36000": [1364, 1368], "36060": 1364, "36120": 1364, "36180": 1364, "36240": 1364, "36300": 1364, "36360": 1364, "36420": 1364, "36480": 1364, "36540": 1364, "36600": 1364, "36660": 1364, "36720": 1364, "36780": 1364, "36840": 1364, "36900": 1364, "36960": 1364, "37020": 1364, "37080": 1364, "37140": 1364, "37200": 1364, "37260": 1364, "37320": 1364, "37380": 1364, "37440": 1364, "37500": 1364, "37560": 1364, "37620": 1364, "37680": 1364, "37740": 1364, "37800": 1364, "37860": 1364, "37920": 1364, "37980": 1364, "38040": 1364, "38100": 1364, "38160": 1364, "38220": 1364, "38280": 1364, "38340": 1364, "38400": 1364, "38460": 1364, "38520": 1364, "38580": 1364, "38640": 1364, "38700": 1364, "38760": 1364, "38820": 1364, "38880": 1364, "38940": 1364, "39000": [1364, 1368], "39060": 1364, "39120": 1364, "39180": 1364, "39240": 1364, "39300": 1364, "39360": 1364, "39420": 1364, "39480": 1364, "39540": 1364, "39600": 1364, "39660": 1364, "39720": 1364, "39780": 1364, "39840": 1364, "39900": 1364, "39960": 1364, "squeez": 1364, "59416776": 1364, "59416886": 1364, "59489769": 1364, "59489879": 1364, "5948999": 1364, "59415662": 1364, "59414657": 1364, "5874659": 1364, "58745576": 1364, "58744563": 1364, "59414621": 1364, "59412575": 1364, "5805231": 1364, "58050246": 1364, "58048182": 1364, "59419881": 1364, "59423095": 1364, "61560159": 1364, "61563401": 1364, "61566644": 1364, "59418877": 1364, "59421087": 1364, "6089062": 1364, "6089285": 1364, "60895079": 1364, "59417836": 1364, "59419005": 1364, "60196382": 1364, "60197561": 1364, "60198741": 1364, "get_metadata": 1364, "ref_dict": 1364, "reflecitivity_horizont": 1364, "21875": 1364, "34375": 1364, "0078125": 1364, "2109375": 1364, "1171875": 1364, "59375": 1364, "421875": 1364, "5625": 1364, "7109375": 1364, "609375": 1364, "5078125": 1364, "3828125": 1364, "6875": 1364, "328125": 1364, "3203125": 1364, "859375": 1364, "6484375": 1364, "8515625": 1364, "9375": [1364, 1373], "0234375": 1364, "6328125": 1364, "2890625": 1364, "546875": 1364, "578125": 1364, "6796875": 1364, "ref_field": 1365, "ref_gt_0": 1365, "mask_dict": 1365, "reflectivity_mask": 1365, "coolwarm": 1365, "sherm": [1365, 1368], "782": [1365, 1368], "matplotlibdeprecationwarn": [1365, 1368, 1371], "set_xtick": [1365, 1368], "position": [1365, 1368], "later": [1365, 1368, 1371, 1372], "xtick": [1365, 1368], "829": [1365, 1368], "set_ytick": [1365, 1368], "ytick": [1365, 1368], "write_cfradi": 1365, "2pi": 1366, "wave": 1366, "3pi": 1366, "incorrect": 1366, "phenomena": [1366, 1373], "maximium": 1366, "unambi": 1366, "preprocess": 1366, "thankfulli": [1366, 1368], "calculate_velocity_textur": 1366, "surround": [1366, 1368, 1371, 1372], "presenc": [1366, 1371, 1372], "524973": 1366, "vel_textur": 1366, "velocity_textur": [1366, 1369], "vleociti": 1366, "At": [1366, 1371], "velocity_dealias": 1366, "much": [1366, 1368, 1369, 1371, 1372], "realist": 1366, "gates_to_grid": 1368, "deprecationwarn": [1368, 1370], "99000": 1368, "98000": 1368, "97000": 1368, "96000": 1368, "95000": 1368, "94000": 1368, "93000": 1368, "92000": 1368, "91000": 1368, "90000": 1368, "89000": 1368, "88000": 1368, "87000": 1368, "86000": 1368, "85000": 1368, "84000": 1368, "83000": 1368, "82000": 1368, "81000": 1368, "80000": 1368, "79000": 1368, "78000": 1368, "77000": 1368, "76000": 1368, "75000": 1368, "74000": 1368, "73000": 1368, "72000": 1368, "71000": 1368, "70000": 1368, "69000": 1368, "68000": 1368, "67000": 1368, "66000": 1368, "65000": 1368, "64000": 1368, "63000": 1368, "62000": 1368, "61000": 1368, "59000": 1368, "58000": 1368, "57000": 1368, "56000": 1368, "55000": 1368, "54000": 1368, "53000": 1368, "52000": 1368, "51000": 1368, "49000": 1368, "48000": 1368, "47000": 1368, "46000": 1368, "45000": 1368, "44000": 1368, "43000": 1368, "42000": 1368, "41000": 1368, "38000": 1368, "37000": 1368, "35000": 1368, "34000": 1368, "32000": 1368, "31000": 1368, "29000": 1368, "28000": 1368, "26000": 1368, "23000": 1368, "22000": 1368, "19000": 1368, "16000": 1368, "14000": 1368, "13000": 1368, "8000": [1368, 1371], "7000": 1368, "suit": [1368, 1372, 1376], "longitudn": 1368, "latitudn": 1368, "suffer": 1368, "artifici": 1368, "feather": 1368, "grid_bett": 1368, "1750": 1368, "sgpxsaprcmacsuri5": 1369, "20171004": 1369, "203018": 1369, "total_pow": 1369, "xsapr_clutt": 1369, "sounding_temperatur": 1369, "signal_to_noise_ratio": [1369, 1372], "gate_id": 1369, "simulated_veloc": 1369, "unfolded_differential_phas": 1369, "corrected_differential_phas": 1369, "filtered_corrected_differential_phas": 1369, "corrected_specific_diff_phas": 1369, "filtered_corrected_specific_diff_phas": 1369, "path_integrated_attenu": 1369, "specific_differential_attenu": 1369, "path_integrated_differential_attenu": 1369, "trip": 1369, "nonhydrometeor": 1369, "analyz": [1369, 1376], "exclude_equ": 1369, "cleaner": 1369, "tell": 1369, "refl_arrai": 1369, "reflectivity_w_mask": 1369, "iter_slic": [1369, 1373], "9344453454202706": 1369, "620691732853737": 1369, "3756584054113996": 1369, "597935968662154": 1369, "696735014111216": 1369, "061894569912447": 1369, "721673265240488": 1369, "086695918593689": 1369, "33930700509078": 1369, "599363169483158": 1369, "836875745223637": 1369, "051601529570966": 1369, "22435547210836": 1369, "378109469982695": 1369, "553820234067336": 1369, "648943841665002": 1369, "837593740986444": 1369, "049614721040282": 1369, "331202567459613": 1369, "585432697375357": 1369, "87002341270722": 1369, "993012637722325": 1369, "061966001642219": 1369, "122799449619672": 1369, "861035552720102": 1369, "74608994279257": 1369, "148801770281325": 1369, "70860719727862": 1369, "989513966551444": 1369, "188644935344827": 1369, "89301878240611": 1369, "172644371021923": 1369, "79879842243138": 1369, "912806090219976": 1369, "766281467013889": 1369, "920522471877334": 1369, "898600907318164": 1369, "971026055481874": 1369, "110503947133682": 1369, "094456418731509": 1369, "0822160050675675": 1369, "036430544969512": 1369, "259332430219459": 1369, "2438254054588604": 1369, "473482666015625": 1369, "574283685503023": 1369, "866719139946832": 1369, "771468742643597": 1369, "compani": 1370, "eld": 1370, "dn": 1370, "lema": [1370, 1372], "data_dir": 1370, "scratch": [1370, 1378], "pyrad_cours": 1370, "mch_jan_2024": 1370, "010": 1370, "read_metranet": 1370, "rainforest_test": [1370, 1371, 1372], "tqdm": 1370, "tqdmwarn": 1370, "iprogress": 1370, "ipywidget": 1370, "readthedoc": [1370, 1376], "stabl": 1370, "user_instal": 1370, "autonotebook": 1370, "notebook_tqdm": 1370, "fieldnam": 1370, "mch": 1370, "zv": 1370, "reflectivity_vv": 1370, "wid": 1370, "clt": 1370, "clutter_exit_cod": 1370, "stat_test_lag1": 1370, "stat_test_lag2": 1370, "wbn": 1370, "wide_band_nois": 1370, "mph": 1370, "mean_phas": 1370, "discrimin": 1370, "isnan": 1370, "read_file_c": 1370, "read_file_pi": 1370, "reli": [1370, 1372], "marco": 1370, "boscacci": 1370, "anywher": 1370, "prone": [1370, 1371], "zh_dn": 1370, "mha": 1370, "mhd": 1370, "mhl": 1370, "mhp": 1370, "mhw": 1370, "fashion": 1370, "file_hr": 1370, "mhl2217907250u": [1370, 1372], "ymx": 1370, "dvx": 1370, "yml2217907257l": 1370, "810": 1370, "dealv": 1370, "dvl2217907257l": 1370, "py_decod": 1370, "dbg": 1370, "verb": 1370, "verbl": 1370, "map_hydro": 1370, "io_aux": 1370, "hydro_remap": 1370, "pyart_langrainbow12": 1370, "set_yticklabel": 1370, "welcom": 1370, "pydda": 1370, "jax": 1370, "unabl": 1370, "engin": 1370, "tensorflow": 1370, "pyrad_proc": 1370, "flow_aux": 1370, "bokeh": 1370, "primit": 1370, "bool8": 1370, "bool_": 1370, "bokeh_bool_typ": 1370, "qpe": 1370, "rzc": 1370, "poh": 1370, "bzc": 1370, "mesh": 1370, "mzc": 1370, "read_cartesian_metranet": 1370, "rzc221790725vl": 1370, "63": [1370, 1373], "pyart_rrate11": 1370, "0x2b0d2db45660": 1370, "read_fil": 1370, "read_polar": 1370, "qpe_data_dn": 1370, "qpe_data": 1370, "summar": 1370, "ezc": 1370, "impli": 1370, "unrel": 1370, "unus": 1370, "exercic": [1371, 1372], "topic": [1371, 1372], "tackl": [1371, 1372], "pseudorhi": 1371, "glob": [1371, 1376], "load_config": [1371, 1372], "mch_config": [1371, 1372], "thu": 1371, "too": [1371, 1372], "inde": [1371, 1372], "especi": 1371, "simplest": 1371, "files_radar": 1371, "exercice2_swiss_doppl": 1371, "mll221790725": 1371, "enumer": 1371, "radar_merg": 1371, "sharex": [1371, 1372], "ravel": 1371, "discontinu": 1371, "difficulti": 1371, "isol": [1371, 1372], "ymin": 1371, "xmin": 1371, "ymax": 1371, "xmax": 1371, "cappi_res_h": 1371, "cappi_res_v": 1371, "cappi_zh": 1371, "throught": 1371, "thunderstorm": [1371, 1372], "1785": 1371, "shade": 1371, "quadrilater": 1371, "gouraud": 1371, "rcparam": 1371, "pcolor": 1371, "arg": 1371, "altitudin": 1371, "downdraft": 1371, "wider": 1371, "cold": 1371, "13th": 1371, "albi": 1371, "z\u00fcrich": 1371, "widespread": 1371, "unfortun": 1371, "question_pyart_meteoswiss": 1371, "mla211941205": 1371, "corrected_velocity_neg": 1371, "2682": 1371, "5272": 1371, "7815": 1371, "464": 1371, "runtimewarn": 1371, "mean_velocity_per_g": 1371, "reshap": 1371, "549": 1371, "y_new": 1371, "y_in_window": 1371, "10403": 1371, "14259": 1371, "18533": 1371, "31310": 1371, "35549": 1371, "39777": 1371, "43991": 1371, "50263": 1371, "58621": 1371, "71002": 1371, "87118": 1371, "106740": 1371, "125476": 1371, "143293": 1371, "160000": 1371, "radiosound": 1371, "payern": 1371, "130": 1371, "though": [1371, 1378], "discrep": 1371, "startup": 1372, "cosmo": 1372, "file_radar": 1372, "exercice1_swiss_thunderstorm": 1372, "20220628073500_savevol_cosmo_lookup_temp": 1372, "problemat": 1372, "gtfilter": 1372, "moment_and_texture_based_gate_filt": 1372, "clear": 1372, "mostli": 1372, "behind": 1372, "knowledg": 1372, "insight": 1372, "oblat": 1372, "drop": 1372, "784": 1372, "mont": 1372, "8231": 1372, "2514": 1372, "0644": 1372, "9861": 1372, "0239": 1372, "1971": 1372, "9661": 1372, "1464": 1372, "9447": 1372, "1142": 1372, "9787": 1372, "974": 1372, "2450": 1372, "5540": 1372, "1459": 1372, "9937": 1372, "945": 1372, "9432": 1372, "0110": 1372, "5141": 1372, "9928": 1372, "993": 1372, "5202": 1372, "3498": 1372, "9746": 1372, "843": 1372, "5287": 1372, "9751": 1372, "9804": 1372, "6547": 1372, "7054": 1372, "5101": 1372, "9765": 1372, "1114": 1372, "4998": 1372, "6431": 1372, "9845": 1372, "1010": 1372, "complic": 1372, "few": [1372, 1378], "dai": 1372, "refin": 1372, "est_rain_rate_hydro": 1372, "land": 1372, "lon_bnd": 1372, "lat_bnd": 1372, "states_provinc": 1372, "cultur": 1372, "admin_0_countri": 1372, "facecolor": 1372, "river": 1372, "add_featur": 1372, "287": 1372, "lambert": 1372, "feature_artist": 1372, "featureartist": 1372, "0x2b9150c92f80": 1372, "didn": 1372, "uncertain": 1372, "beam_azimuth_angl": 1373, "azimuth_angle_from_true_north": 1373, "radial_azimuth_coordin": 1373, "beam_elevation_angl": 1373, "elevation_angle_from_horizontal_plan": 1373, "radial_elevation_coordin": 1373, "1832": 1373, "log_differential_reflectivity_hv": 1373, "875": 1373, "9999": 1373, "differential_phase_hv": 1373, "equivalent_reflectivity_factor": 1373, "cross_correlation_ratio_hv": 1373, "correlation_ratio": 1373, "meters_per_second": 1373, "doppler_spectrum_width": 1373, "radial_velocity_of_scatterers_away_from_instru": 1373, "target_fixed_angl": 1373, "unambiguous_rang": 1373, "unambigu": 1373, "degrees_north": 1373, "degrees_east": 1373, "projection_range_coordin": 1373, "range_to_measurement_volum": 1373, "radial_range_coordin": 1373, "spacing_is_const": 1373, "meters_to_center_of_first_g": 1373, "2125": 1373, "meters_between_g": 1373, "int32": 1373, "s20": 1373, "unitless": 1373, "coplan": 1373, "vertical_point": 1373, "idl": 1373, "azimuth_surveil": 1373, "elevation_surveil": 1373, "sunscan": 1373, "manual_ppi": 1373, "manual_rhi": 1373, "17t19": 1373, "21z": 1373, "time_in_seconds_since_volume_start": 1373, "calendar": 1373, "gregorian": 1373, "histori": 1373, "katx": 1373, "original_contain": 1373, "vcp_pattern": 1373, "7470703": 1373, "7196045": 1373, "6893921": 1373, "511719": 1373, "get_slic": 1373, "sweep_1": 1373, "52734375": 1373, "itself": 1373, "indici": 1373, "slice_indic": 1373, "9066728410400056": 1373, "478547577741713": 1373, "587792083929423": 1373, "871031288639269": 1373, "971692217963673": 1373, "830616390843327": 1373, "108188248095756": 1373, "483419908190385": 1373, "88976917057903": 1373, "852766685681688": 1373, "410455582269897": 1373, "66444787446138": 1373, "997862391449566": 1373, "172098402018502": 1373, "489752513534416": 1373, "712565619531706": 1373, "commonli": 1373, "071": 1374, "29": 1374, "8x": 1375, "But": 1375, "bash": 1375, "export": [1375, 1378], "pythonpath": 1375, "pth": 1375, "build_ext": 1375, "pip": [1375, 1376, 1378], "segfault": 1375, "newer": 1375, "Theres": 1375, "reinstal": 1375, "remedi": 1375, "fno": 1375, "protector": 1375, "d_fortify_sourc": 1375, "cflag": 1375, "makefil": 1375, "troubl": 1375, "my": 1375, "bit": 1375, "define_macro": 1375, "macro": 1375, "extra_compile_arg": 1375, "m32": 1375, "extra_link_arg": 1375, "m64": 1375, "readm": 1375, "proj_lib": 1375, "usernam": 1375, "xxx": 1375, "mpl_toolkit": 1375, "offici": 1376, "mail": 1376, "openradar": 1376, "ev": 1376, "pyart_short_cours": 1376, "youtub": 1376, "watch": 1376, "diip": 1376, "q3bkzw": 1376, "auto_exampl": 1376, "scm": 1376, "book": 1376, "pep8": 1376, "popular": 1376, "pycodestyl": 1376, "pylint": 1376, "pep": 1376, "0008": 1376, "highli": 1376, "tast": 1376, "brief": 1376, "parti": 1376, "explain": 1376, "velocity_azimuth_displai": 1376, "_inverse_dist_squar": 1376, "_average1d": 1376, "explan": 1376, "mention": [1376, 1378], "statement": 1376, "__init__": 1376, "futur": 1376, "ran": 1376, "rerun": 1376, "test_vad": 1376, "make_target_radar": 1376, "ones_lik": 1376, "z_start": 1376, "z_end": 1376, "z_count": 1376, "vad_height": 1376, "vad_spe": 1376, "98665725": 1376, "94020686": 1376, "88107152": 1376, "81939374": 1376, "75851962": 1376, "vad_direct": 1376, "359": 1376, "84659496": 1376, "30240553": 1376, "358": 1376, "58658589": 1376, "357": 1376, "81073051": 1376, "01353486": 1376, "01335138": 1376, "06014712": 1376, "12039762": 1376, "18410404": 1376, "24791911": 1376, "98663937": 1376, "9398407": 1376, "87958641": 1376, "81587601": 1376, "75205693": 1376, "assert_almost_equ": 1376, "pyarg": 1376, "test_cfradi": 1376, "cd": 1376, "contribut": [1376, 1377], "branch": [1376, 1378], "fork": 1376, "cartopy_map": 1376, "push": 1376, "branch_nam": 1376, "checkout": 1376, "task": 1376, "untrack": 1376, "switch": 1376, "acronym": 1376, "maint": 1376, "finish": [1376, 1378], "quotat": 1376, "enter": 1376, "acronymn": 1376, "gitwash": 1376, "development_workflow": 1376, "editor": [1376, 1378], "sty": 1376, "whitespac": 1376, "vim": 1376, "thing": 1376, "ff": 1376, "checker": 1376, "appveyor": 1376, "travisci": 1376, "sit": 1376, "blog_post": 1376, "instruct": 1377, "contributor": 1377, "conflict": 1378, "panda": 1378, "ask": 1378, "exit": 1378, "recent": 1378, "manag": 1378, "deactiv": 1378, "enviro": 1378, "ipython": 1378, "spyder": 1378, "yourusernam": 1378, "youranacondadir": 1378, "machin": 1378, "jjhelmu": 1378, "py3": 1378, "gitter": 1378, "im": 1378}, "objects": {"pyart": [[581, 0, 1, "", "_debug_info"], [582, 1, 0, "-", "aux_io"], [630, 1, 0, "-", "bridge"], [632, 1, 0, "-", "config"], [645, 1, 0, "-", "core"], [727, 1, 0, "-", "correct"], [798, 1, 0, "-", "exceptions"], [799, 1, 0, "-", "filters"], [836, 1, 0, "-", "graph"], [1013, 1, 0, "-", "io"], [1036, 1, 0, "-", "lazydict"], [1060, 1, 0, "-", "map"], [1075, 1, 0, "-", "retrieve"], [1172, 1, 0, "-", "testing"], [1258, 1, 0, "-", "util"]], "pyart.aux_io": [[583, 0, 1, "", "convert_data"], [584, 0, 1, "", "extract_sweeps_skyecho"], [585, 0, 1, "", "get_library"], [586, 0, 1, "", "get_sweep_time_coverage"], [587, 0, 1, "", "read_bin"], [588, 0, 1, "", "read_bin_mf"], [589, 0, 1, "", "read_cartesian_metranet"], [590, 0, 1, "", "read_cf1"], [591, 0, 1, "", "read_cf1_cartesian"], [592, 0, 1, "", "read_cf1_cartesian_mf"], [593, 0, 1, "", "read_d3r_gcpex_nc"], [594, 0, 1, "", "read_dat_mf"], [595, 0, 1, "", "read_edge_netcdf"], [596, 0, 1, "", "read_file_c"], [597, 0, 1, "", "read_file_py"], [598, 0, 1, "", "read_gamic"], [599, 0, 1, "", "read_gif"], [600, 0, 1, "", "read_grib"], [601, 0, 1, "", "read_hpl"], [602, 0, 1, "", "read_iq"], [603, 0, 1, "", "read_kazr"], [604, 0, 1, "", "read_knmi_grid_h5"], [605, 0, 1, "", "read_mch_vad"], [606, 0, 1, "", "read_metranet"], [607, 0, 1, "", "read_noxp_iphex_nc"], [608, 0, 1, "", "read_odim_grid_h5"], [609, 0, 1, "", "read_odim_h5"], [610, 0, 1, "", "read_odim_vp_h5"], [611, 0, 1, "", "read_pattern"], [612, 0, 1, "", "read_png"], [613, 0, 1, "", "read_product_c"], [614, 0, 1, "", "read_product_py"], [615, 0, 1, "", "read_psr_cpi_header"], [616, 0, 1, "", "read_psr_header"], [617, 0, 1, "", "read_psr_spectra"], [618, 0, 1, "", "read_radx"], [619, 0, 1, "", "read_rainbow_psr"], [620, 0, 1, "", "read_rainbow_psr_spectra"], [621, 0, 1, "", "read_rainbow_wrl"], [622, 0, 1, "", "read_sinarame_h5"], [623, 0, 1, "", "read_skyecho"], [624, 0, 1, "", "read_spectra"], [625, 0, 1, "", "read_swissbirdradar_spectra"], [626, 0, 1, "", "write_odim_grid_h5"], [627, 0, 1, "", "write_odim_h5"], [628, 0, 1, "", "write_sinarame_cfradial"], [629, 0, 1, "", "write_spectra"]], "pyart.bridge": [[631, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[633, 2, 1, "", "FileMetadata"], [637, 0, 1, "", "get_KE"], [638, 0, 1, "", "get_field_colormap"], [639, 0, 1, "", "get_field_limits"], [640, 0, 1, "", "get_field_mapping"], [641, 0, 1, "", "get_field_name"], [642, 0, 1, "", "get_fillvalue"], [643, 0, 1, "", "get_metadata"], [644, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[634, 3, 1, "", "__call__"], [635, 3, 1, "", "get_field_name"], [636, 3, 1, "", "get_metadata"]], "pyart.core": [[646, 2, 1, "", "Grid"], [656, 2, 1, "", "HorizontalWindProfile"], [660, 2, 1, "", "Radar"], [689, 2, 1, "", "RadarSpectra"], [718, 0, 1, "", "antenna_to_cartesian"], [719, 0, 1, "", "antenna_vectors_to_cartesian"], [720, 0, 1, "", "cartesian_to_antenna"], [721, 0, 1, "", "cartesian_to_geographic"], [722, 0, 1, "", "cartesian_to_geographic_aeqd"], [723, 0, 1, "", "cartesian_vectors_to_geographic"], [724, 0, 1, "", "geographic_to_cartesian"], [725, 0, 1, "", "geographic_to_cartesian_aeqd"], [726, 0, 1, "", "wgs84_to_swissCH1903"]], "pyart.core.Grid": [[647, 3, 1, "", "add_field"], [648, 3, 1, "", "get_point_longitude_latitude"], [649, 3, 1, "", "get_projparams"], [650, 3, 1, "", "init_point_altitude"], [651, 3, 1, "", "init_point_longitude_latitude"], [652, 3, 1, "", "init_point_x_y_z"], [653, 4, 1, "", "projection_proj"], [654, 3, 1, "", "to_xarray"], [655, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[657, 3, 1, "", "from_u_and_v"], [658, 4, 1, "", "u_wind"], [659, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[661, 3, 1, "", "add_field"], [662, 3, 1, "", "add_field_like"], [663, 3, 1, "", "add_filter"], [664, 3, 1, "", "check_field_exists"], [665, 3, 1, "", "extract_sweeps"], [666, 3, 1, "", "get_azimuth"], [667, 3, 1, "", "get_elevation"], [668, 3, 1, "", "get_end"], [669, 3, 1, "", "get_field"], [670, 3, 1, "", "get_gate_area"], [671, 3, 1, "", "get_gate_lat_lon_alt"], [672, 3, 1, "", "get_gate_x_y_z"], [673, 3, 1, "", "get_nyquist_vel"], [674, 3, 1, "", "get_slice"], [675, 3, 1, "", "get_start"], [676, 3, 1, "", "get_start_end"], [677, 3, 1, "", "info"], [678, 3, 1, "", "init_gate_altitude"], [679, 3, 1, "", "init_gate_longitude_latitude"], [680, 3, 1, "", "init_gate_x_y_z"], [681, 3, 1, "", "init_rays_per_sweep"], [682, 3, 1, "", "iter_azimuth"], [683, 3, 1, "", "iter_elevation"], [684, 3, 1, "", "iter_end"], [685, 3, 1, "", "iter_field"], [686, 3, 1, "", "iter_slice"], [687, 3, 1, "", "iter_start"], [688, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[690, 3, 1, "", "add_field"], [691, 3, 1, "", "add_field_like"], [692, 3, 1, "", "add_filter"], [693, 3, 1, "", "check_field_exists"], [694, 3, 1, "", "extract_sweeps"], [695, 3, 1, "", "get_azimuth"], [696, 3, 1, "", "get_elevation"], [697, 3, 1, "", "get_end"], [698, 3, 1, "", "get_field"], [699, 3, 1, "", "get_gate_area"], [700, 3, 1, "", "get_gate_lat_lon_alt"], [701, 3, 1, "", "get_gate_x_y_z"], [702, 3, 1, "", "get_nyquist_vel"], [703, 3, 1, "", "get_slice"], [704, 3, 1, "", "get_start"], [705, 3, 1, "", "get_start_end"], [706, 3, 1, "", "info"], [707, 3, 1, "", "init_gate_altitude"], [708, 3, 1, "", "init_gate_longitude_latitude"], [709, 3, 1, "", "init_gate_x_y_z"], [710, 3, 1, "", "init_rays_per_sweep"], [711, 3, 1, "", "iter_azimuth"], [712, 3, 1, "", "iter_elevation"], [713, 3, 1, "", "iter_end"], [714, 3, 1, "", "iter_field"], [715, 3, 1, "", "iter_slice"], [716, 3, 1, "", "iter_start"], [717, 3, 1, "", "iter_start_end"]], "pyart.correct": [[728, 2, 1, "", "GateFilter"], [756, 0, 1, "", "calculate_attenuation"], [757, 0, 1, "", "calculate_attenuation_philinear"], [758, 0, 1, "", "calculate_attenuation_zphi"], [759, 0, 1, "", "compute_apparent_vpr"], [760, 0, 1, "", "compute_theoretical_vpr"], [761, 0, 1, "", "correct_bias"], [762, 0, 1, "", "correct_noise_rhohv"], [763, 0, 1, "", "correct_sys_phase"], [764, 0, 1, "", "correct_visibility"], [765, 0, 1, "", "correct_vpr"], [766, 0, 1, "", "correct_vpr_spatialised"], [767, 0, 1, "", "dealias_fourdd"], [768, 0, 1, "", "dealias_region_based"], [769, 0, 1, "", "dealias_unwrap_phase"], [770, 0, 1, "", "despeckle_field"], [771, 0, 1, "", "det_sys_phase_ray"], [772, 0, 1, "", "est_rhohv_rain"], [773, 0, 1, "", "est_zdr_precip"], [774, 0, 1, "", "est_zdr_snow"], [775, 0, 1, "", "find_objects"], [776, 0, 1, "", "gauss_fit"], [777, 0, 1, "", "get_mask_fzl"], [778, 0, 1, "", "get_sun_hits"], [779, 0, 1, "", "get_sun_hits_ivic"], [780, 0, 1, "", "get_sun_hits_psr"], [781, 0, 1, "", "moment_based_gate_filter"], [782, 0, 1, "", "phase_proc_lp"], [783, 0, 1, "", "phase_proc_lp_gf"], [784, 0, 1, "", "ptoa_to_sf"], [785, 0, 1, "", "retrieval_result"], [786, 0, 1, "", "scanning_losses"], [787, 0, 1, "", "selfconsistency_bias"], [788, 0, 1, "", "selfconsistency_bias2"], [789, 0, 1, "", "selfconsistency_kdp_phidp"], [790, 0, 1, "", "smooth_masked"], [791, 0, 1, "", "smooth_phidp_double_window"], [792, 0, 1, "", "smooth_phidp_single_window"], [793, 0, 1, "", "solar_flux_lookup"], [794, 0, 1, "", "sun_position_mfr"], [795, 0, 1, "", "sun_position_pysolar"], [796, 0, 1, "", "sun_power"], [797, 0, 1, "", "sun_retrieval"]], "pyart.correct.GateFilter": [[729, 3, 1, "", "copy"], [730, 3, 1, "", "exclude_above"], [731, 3, 1, "", "exclude_all"], [732, 3, 1, "", "exclude_below"], [733, 3, 1, "", "exclude_equal"], [734, 3, 1, "", "exclude_gates"], [735, 3, 1, "", "exclude_inside"], [736, 3, 1, "", "exclude_invalid"], [737, 3, 1, "", "exclude_masked"], [738, 3, 1, "", "exclude_none"], [739, 3, 1, "", "exclude_not_equal"], [740, 3, 1, "", "exclude_outside"], [741, 3, 1, "", "exclude_transition"], [742, 4, 1, "", "gate_excluded"], [743, 4, 1, "", "gate_included"], [744, 3, 1, "", "include_above"], [745, 3, 1, "", "include_all"], [746, 3, 1, "", "include_below"], [747, 3, 1, "", "include_equal"], [748, 3, 1, "", "include_gates"], [749, 3, 1, "", "include_inside"], [750, 3, 1, "", "include_none"], [751, 3, 1, "", "include_not_equal"], [752, 3, 1, "", "include_not_masked"], [753, 3, 1, "", "include_not_transition"], [754, 3, 1, "", "include_outside"], [755, 3, 1, "", "include_valid"]], "pyart.exceptions": [[147, 5, 1, "", "DeprecatedAttribute"], [148, 5, 1, "", "DeprecatedFunctionName"], [149, 5, 1, "", "MissingOptionalDependency"], [150, 0, 1, "", "_deprecated_alias"]], "pyart.filters": [[800, 2, 1, "", "GateFilter"], [828, 0, 1, "", "birds_gate_filter"], [829, 0, 1, "", "class_based_gate_filter"], [830, 0, 1, "", "iso0_based_gate_filter"], [831, 0, 1, "", "moment_and_texture_based_gate_filter"], [832, 0, 1, "", "moment_based_gate_filter"], [833, 0, 1, "", "snr_based_gate_filter"], [834, 0, 1, "", "temp_based_gate_filter"], [835, 0, 1, "", "visibility_based_gate_filter"]], "pyart.filters.GateFilter": [[801, 3, 1, "", "copy"], [802, 3, 1, "", "exclude_above"], [803, 3, 1, "", "exclude_all"], [804, 3, 1, "", "exclude_below"], [805, 3, 1, "", "exclude_equal"], [806, 3, 1, "", "exclude_gates"], [807, 3, 1, "", "exclude_inside"], [808, 3, 1, "", "exclude_invalid"], [809, 3, 1, "", "exclude_masked"], [810, 3, 1, "", "exclude_none"], [811, 3, 1, "", "exclude_not_equal"], [812, 3, 1, "", "exclude_outside"], [813, 3, 1, "", "exclude_transition"], [814, 4, 1, "", "gate_excluded"], [815, 4, 1, "", "gate_included"], [816, 3, 1, "", "include_above"], [817, 3, 1, "", "include_all"], [818, 3, 1, "", "include_below"], [819, 3, 1, "", "include_equal"], [820, 3, 1, "", "include_gates"], [821, 3, 1, "", "include_inside"], [822, 3, 1, "", "include_none"], [823, 3, 1, "", "include_not_equal"], [824, 3, 1, "", "include_not_masked"], [825, 3, 1, "", "include_not_transition"], [826, 3, 1, "", "include_outside"], [827, 3, 1, "", "include_valid"]], "pyart.graph": [[837, 2, 1, "", "AirborneRadarDisplay"], [871, 2, 1, "", "GridMapDisplay"], [890, 2, 1, "", "GridMapDisplayBasemap"], [904, 2, 1, "", "RadarDisplay"], [937, 2, 1, "", "RadarMapDisplay"], [974, 2, 1, "", "RadarMapDisplayBasemap"], [1011, 0, 1, "", "plot_convstrat_scheme"], [1012, 0, 1, "", "plot_maxcappi"]], "pyart.graph.AirborneRadarDisplay": [[838, 3, 1, "", "generate_az_rhi_title"], [839, 3, 1, "", "generate_filename"], [840, 3, 1, "", "generate_ray_title"], [841, 3, 1, "", "generate_title"], [842, 3, 1, "", "generate_vpt_title"], [843, 3, 1, "", "generate_xsection_title"], [844, 3, 1, "", "label_xaxis_r"], [845, 3, 1, "", "label_xaxis_rays"], [846, 3, 1, "", "label_xaxis_time"], [847, 3, 1, "", "label_xaxis_x"], [848, 3, 1, "", "label_xaxis_xsection"], [849, 3, 1, "", "label_yaxis_field"], [850, 3, 1, "", "label_yaxis_xsection"], [851, 3, 1, "", "label_yaxis_y"], [852, 3, 1, "", "label_yaxis_z"], [853, 3, 1, "", "plot"], [854, 3, 1, "", "plot_azimuth_to_rhi"], [855, 3, 1, "", "plot_colorbar"], [856, 3, 1, "", "plot_cr_raster"], [857, 3, 1, "", "plot_cross_hair"], [858, 3, 1, "", "plot_grid_lines"], [859, 3, 1, "", "plot_label"], [860, 3, 1, "", "plot_labels"], [861, 3, 1, "", "plot_ppi"], [862, 3, 1, "", "plot_range_ring"], [863, 3, 1, "", "plot_range_rings"], [864, 3, 1, "", "plot_ray"], [865, 3, 1, "", "plot_rhi"], [866, 3, 1, "", "plot_sweep_grid"], [867, 3, 1, "", "plot_vpt"], [868, 3, 1, "", "plot_xsection"], [869, 3, 1, "", "set_aspect_ratio"], [870, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[872, 3, 1, "", "cartopy_coastlines"], [873, 3, 1, "", "cartopy_political_boundaries"], [874, 3, 1, "", "cartopy_states"], [875, 3, 1, "", "generate_filename"], [876, 3, 1, "", "generate_grid_title"], [877, 3, 1, "", "generate_latitudinal_level_title"], [878, 3, 1, "", "generate_longitudinal_level_title"], [879, 3, 1, "", "plot_colorbar"], [880, 3, 1, "", "plot_cross_section"], [881, 3, 1, "", "plot_cross_section_level"], [882, 3, 1, "", "plot_crosshairs"], [883, 3, 1, "", "plot_grid"], [884, 3, 1, "", "plot_grid_contour"], [885, 3, 1, "", "plot_grid_raw"], [886, 3, 1, "", "plot_latitude_slice"], [887, 3, 1, "", "plot_latitudinal_level"], [888, 3, 1, "", "plot_longitude_slice"], [889, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[891, 3, 1, "", "generate_filename"], [892, 3, 1, "", "generate_grid_title"], [893, 3, 1, "", "generate_latitudinal_level_title"], [894, 3, 1, "", "generate_longitudinal_level_title"], [895, 3, 1, "", "get_basemap"], [896, 3, 1, "", "plot_basemap"], [897, 3, 1, "", "plot_colorbar"], [898, 3, 1, "", "plot_crosshairs"], [899, 3, 1, "", "plot_grid"], [900, 3, 1, "", "plot_latitude_slice"], [901, 3, 1, "", "plot_latitudinal_level"], [902, 3, 1, "", "plot_longitude_slice"], [903, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[905, 3, 1, "", "generate_az_rhi_title"], [906, 3, 1, "", "generate_filename"], [907, 3, 1, "", "generate_ray_title"], [908, 3, 1, "", "generate_title"], [909, 3, 1, "", "generate_vpt_title"], [910, 3, 1, "", "generate_xsection_title"], [911, 3, 1, "", "label_xaxis_r"], [912, 3, 1, "", "label_xaxis_rays"], [913, 3, 1, "", "label_xaxis_time"], [914, 3, 1, "", "label_xaxis_x"], [915, 3, 1, "", "label_xaxis_xsection"], [916, 3, 1, "", "label_yaxis_field"], [917, 3, 1, "", "label_yaxis_xsection"], [918, 3, 1, "", "label_yaxis_y"], [919, 3, 1, "", "label_yaxis_z"], [920, 3, 1, "", "plot"], [921, 3, 1, "", "plot_azimuth_to_rhi"], [922, 3, 1, "", "plot_colorbar"], [923, 3, 1, "", "plot_cr_raster"], [924, 3, 1, "", "plot_cross_hair"], [925, 3, 1, "", "plot_grid_lines"], [926, 3, 1, "", "plot_label"], [927, 3, 1, "", "plot_labels"], [928, 3, 1, "", "plot_ppi"], [929, 3, 1, "", "plot_range_ring"], [930, 3, 1, "", "plot_range_rings"], [931, 3, 1, "", "plot_ray"], [932, 3, 1, "", "plot_rhi"], [933, 3, 1, "", "plot_vpt"], [934, 3, 1, "", "plot_xsection"], [935, 3, 1, "", "set_aspect_ratio"], [936, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[938, 3, 1, "", "generate_az_rhi_title"], [939, 3, 1, "", "generate_filename"], [940, 3, 1, "", "generate_ray_title"], [941, 3, 1, "", "generate_title"], [942, 3, 1, "", "generate_vpt_title"], [943, 3, 1, "", "generate_xsection_title"], [944, 3, 1, "", "label_xaxis_r"], [945, 3, 1, "", "label_xaxis_rays"], [946, 3, 1, "", "label_xaxis_time"], [947, 3, 1, "", "label_xaxis_x"], [948, 3, 1, "", "label_xaxis_xsection"], [949, 3, 1, "", "label_yaxis_field"], [950, 3, 1, "", "label_yaxis_xsection"], [951, 3, 1, "", "label_yaxis_y"], [952, 3, 1, "", "label_yaxis_z"], [953, 3, 1, "", "plot"], [954, 3, 1, "", "plot_azimuth_to_rhi"], [955, 3, 1, "", "plot_colorbar"], [956, 3, 1, "", "plot_cr_raster"], [957, 3, 1, "", "plot_cross_hair"], [958, 3, 1, "", "plot_grid_lines"], [959, 3, 1, "", "plot_label"], [960, 3, 1, "", "plot_labels"], [961, 3, 1, "", "plot_line_geo"], [962, 3, 1, "", "plot_line_xy"], [963, 3, 1, "", "plot_point"], [964, 3, 1, "", "plot_ppi"], [965, 3, 1, "", "plot_ppi_map"], [966, 3, 1, "", "plot_range_ring"], [967, 3, 1, "", "plot_range_rings"], [968, 3, 1, "", "plot_ray"], [969, 3, 1, "", "plot_rhi"], [970, 3, 1, "", "plot_vpt"], [971, 3, 1, "", "plot_xsection"], [972, 3, 1, "", "set_aspect_ratio"], [973, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[975, 3, 1, "", "generate_az_rhi_title"], [976, 3, 1, "", "generate_filename"], [977, 3, 1, "", "generate_ray_title"], [978, 3, 1, "", "generate_title"], [979, 3, 1, "", "generate_vpt_title"], [980, 3, 1, "", "generate_xsection_title"], [981, 3, 1, "", "label_xaxis_r"], [982, 3, 1, "", "label_xaxis_rays"], [983, 3, 1, "", "label_xaxis_time"], [984, 3, 1, "", "label_xaxis_x"], [985, 3, 1, "", "label_xaxis_xsection"], [986, 3, 1, "", "label_yaxis_field"], [987, 3, 1, "", "label_yaxis_xsection"], [988, 3, 1, "", "label_yaxis_y"], [989, 3, 1, "", "label_yaxis_z"], [990, 3, 1, "", "plot"], [991, 3, 1, "", "plot_azimuth_to_rhi"], [992, 3, 1, "", "plot_colorbar"], [993, 3, 1, "", "plot_cr_raster"], [994, 3, 1, "", "plot_cross_hair"], [995, 3, 1, "", "plot_grid_lines"], [996, 3, 1, "", "plot_label"], [997, 3, 1, "", "plot_labels"], [998, 3, 1, "", "plot_line_geo"], [999, 3, 1, "", "plot_line_xy"], [1000, 3, 1, "", "plot_point"], [1001, 3, 1, "", "plot_ppi"], [1002, 3, 1, "", "plot_ppi_map"], [1003, 3, 1, "", "plot_range_ring"], [1004, 3, 1, "", "plot_range_rings"], [1005, 3, 1, "", "plot_ray"], [1006, 3, 1, "", "plot_rhi"], [1007, 3, 1, "", "plot_vpt"], [1008, 3, 1, "", "plot_xsection"], [1009, 3, 1, "", "set_aspect_ratio"], [1010, 3, 1, "", "set_limits"]], "pyart.io": [[1014, 0, 1, "", "make_time_unit_str"], [1015, 0, 1, "", "prepare_for_read"], [1016, 0, 1, "", "read"], [1017, 0, 1, "", "read_arm_sonde"], [1018, 0, 1, "", "read_arm_sonde_vap"], [1019, 0, 1, "", "read_cfradial"], [1020, 0, 1, "", "read_cfradial2"], [1021, 0, 1, "", "read_chl"], [1022, 0, 1, "", "read_grid"], [1023, 0, 1, "", "read_grid_mdv"], [1024, 0, 1, "", "read_mdv"], [1025, 0, 1, "", "read_nexrad_archive"], [1026, 0, 1, "", "read_nexrad_cdm"], [1027, 0, 1, "", "read_nexrad_level3"], [1028, 0, 1, "", "read_rsl"], [1029, 0, 1, "", "read_sigmet"], [1030, 0, 1, "", "read_uf"], [1031, 0, 1, "", "write_cfradial"], [1032, 0, 1, "", "write_grid"], [1033, 0, 1, "", "write_grid_geotiff"], [1034, 0, 1, "", "write_grid_mdv"], [1035, 0, 1, "", "write_uf"]], "pyart.lazydict": [[1037, 2, 1, "", "LazyLoadDict"], [1050, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[384, 3, 1, "", "__contains__"], [385, 3, 1, "", "__delattr__"], [386, 3, 1, "", "__delitem__"], [387, 3, 1, "", "__dir__"], [388, 3, 1, "", "__eq__"], [389, 3, 1, "", "__format__"], [390, 3, 1, "", "__ge__"], [391, 3, 1, "", "__getattribute__"], [392, 3, 1, "", "__getitem__"], [393, 3, 1, "", "__getstate__"], [394, 3, 1, "", "__gt__"], [395, 3, 1, "", "__init__"], [396, 3, 1, "", "__init_subclass__"], [397, 3, 1, "", "__iter__"], [398, 3, 1, "", "__le__"], [399, 3, 1, "", "__len__"], [400, 3, 1, "", "__lt__"], [401, 3, 1, "", "__ne__"], [402, 3, 1, "", "__new__"], [403, 3, 1, "", "__reduce__"], [404, 3, 1, "", "__reduce_ex__"], [405, 3, 1, "", "__repr__"], [406, 3, 1, "", "__setattr__"], [407, 3, 1, "", "__setitem__"], [408, 3, 1, "", "__sizeof__"], [409, 3, 1, "", "__str__"], [410, 3, 1, "", "__subclasshook__"], [1038, 3, 1, "", "clear"], [1039, 3, 1, "", "copy"], [1040, 3, 1, "", "get"], [1041, 3, 1, "", "has_key"], [1042, 3, 1, "", "items"], [1043, 3, 1, "", "keys"], [1044, 3, 1, "", "pop"], [1045, 3, 1, "", "popitem"], [1046, 3, 1, "", "set_lazy"], [1047, 3, 1, "", "setdefault"], [1048, 3, 1, "", "update"], [1049, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[1051, 3, 1, "", "clear"], [1052, 3, 1, "", "get"], [1053, 3, 1, "", "items"], [1054, 3, 1, "", "keys"], [1055, 3, 1, "", "pop"], [1056, 3, 1, "", "popitem"], [1057, 3, 1, "", "setdefault"], [1058, 3, 1, "", "update"], [1059, 3, 1, "", "values"]], "pyart.map": [[1061, 2, 1, "", "GateMapper"], [1065, 0, 1, "", "example_roi_func_constant"], [1066, 0, 1, "", "example_roi_func_dist"], [1067, 0, 1, "", "example_roi_func_dist_beam"], [1068, 0, 1, "", "grid_from_radars"], [1069, 0, 1, "", "grid_ppi_sweeps"], [1070, 0, 1, "", "grid_rhi_sweeps"], [1071, 0, 1, "", "gridstats_from_radar"], [1072, 0, 1, "", "map_gates_to_grid"], [1073, 0, 1, "", "map_gates_to_grid_to_list"], [1074, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[1062, 4, 1, "", "distance_tolerance"], [1063, 3, 1, "", "mapped_radar"], [1064, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[423, 0, 1, "", "_destandardize"], [424, 0, 1, "", "_get_res_vol_sides"], [1076, 0, 1, "", "atmospheric_gas_att"], [1077, 0, 1, "", "calculate_snr_from_reflectivity"], [1078, 0, 1, "", "calculate_velocity_texture"], [1079, 0, 1, "", "composite_reflectivity"], [1080, 0, 1, "", "compute_Doppler_velocity"], [1081, 0, 1, "", "compute_Doppler_velocity_iq"], [1082, 0, 1, "", "compute_Doppler_width"], [1083, 0, 1, "", "compute_Doppler_width_iq"], [1084, 0, 1, "", "compute_apparent_profile"], [1085, 0, 1, "", "compute_bird_density"], [1086, 0, 1, "", "compute_ccor"], [1087, 0, 1, "", "compute_cdr"], [1088, 0, 1, "", "compute_centroids"], [1089, 0, 1, "", "compute_differential_phase"], [1090, 0, 1, "", "compute_differential_phase_iq"], [1091, 0, 1, "", "compute_differential_reflectivity"], [1092, 0, 1, "", "compute_differential_reflectivity_iq"], [1093, 0, 1, "", "compute_evp"], [1094, 0, 1, "", "compute_iq"], [1095, 0, 1, "", "compute_l"], [1096, 0, 1, "", "compute_mean_phase_iq"], [1097, 0, 1, "", "compute_noise_power"], [1098, 0, 1, "", "compute_noisedBZ"], [1099, 0, 1, "", "compute_pol_variables"], [1100, 0, 1, "", "compute_pol_variables_iq"], [1101, 0, 1, "", "compute_qvp"], [1102, 0, 1, "", "compute_radial_noise_hs"], [1103, 0, 1, "", "compute_radial_noise_ivic"], [1104, 0, 1, "", "compute_rcs"], [1105, 0, 1, "", "compute_rcs_from_pr"], [1106, 0, 1, "", "compute_refl_from_zdr"], [1107, 0, 1, "", "compute_reflectivity"], [1108, 0, 1, "", "compute_reflectivity_iq"], [1109, 0, 1, "", "compute_rhohv"], [1110, 0, 1, "", "compute_rhohv_iq"], [1111, 0, 1, "", "compute_rqvp"], [1112, 0, 1, "", "compute_signal_power"], [1113, 0, 1, "", "compute_snr"], [1114, 0, 1, "", "compute_spectra"], [1115, 0, 1, "", "compute_spectral_differential_phase"], [1116, 0, 1, "", "compute_spectral_differential_reflectivity"], [1117, 0, 1, "", "compute_spectral_noise"], [1118, 0, 1, "", "compute_spectral_phase"], [1119, 0, 1, "", "compute_spectral_power"], [1120, 0, 1, "", "compute_spectral_reflectivity"], [1121, 0, 1, "", "compute_spectral_rhohv"], [1122, 0, 1, "", "compute_st1_iq"], [1123, 0, 1, "", "compute_st2_iq"], [1124, 0, 1, "", "compute_svp"], [1125, 0, 1, "", "compute_ts_along_coord"], [1126, 0, 1, "", "compute_vol_refl"], [1127, 0, 1, "", "compute_vp"], [1128, 0, 1, "", "compute_wbn_iq"], [1129, 0, 1, "", "conv_strat_raut"], [1130, 0, 1, "", "conv_strat_yuter"], [1131, 0, 1, "", "data_for_centroids"], [1132, 0, 1, "", "dealias_spectra"], [1133, 0, 1, "", "detect_ml"], [1134, 0, 1, "", "determine_medoids"], [1135, 0, 1, "", "est_rain_rate_a"], [1136, 0, 1, "", "est_rain_rate_hydro"], [1137, 0, 1, "", "est_rain_rate_kdp"], [1138, 0, 1, "", "est_rain_rate_z"], [1139, 0, 1, "", "est_rain_rate_za"], [1140, 0, 1, "", "est_rain_rate_zkdp"], [1141, 0, 1, "", "est_rain_rate_zpoly"], [1142, 0, 1, "", "est_vertical_windshear"], [1143, 0, 1, "", "est_vertical_windshear_lidar"], [1144, 0, 1, "", "est_wind_profile"], [1145, 0, 1, "", "est_wind_vel"], [1146, 0, 1, "", "feature_detection"], [1147, 0, 1, "", "fetch_radar_time_profile"], [1148, 0, 1, "", "gecsx"], [1149, 0, 1, "", "get_coeff_attg"], [1150, 0, 1, "", "get_freq_band"], [1151, 0, 1, "", "get_iso0_val"], [1152, 0, 1, "", "get_ml_rng_limits"], [1153, 0, 1, "", "grid_displacement_pc"], [1154, 0, 1, "", "grid_shift"], [1155, 0, 1, "", "hydroclass_semisupervised"], [1156, 0, 1, "", "kdp_leastsquare_double_window"], [1157, 0, 1, "", "kdp_leastsquare_single_window"], [1158, 0, 1, "", "kdp_maesaka"], [1159, 0, 1, "", "kdp_schneebeli"], [1160, 0, 1, "", "kdp_vulpiani"], [1161, 0, 1, "", "map_profile_to_gates"], [1162, 0, 1, "", "melting_layer_giangrande"], [1163, 0, 1, "", "melting_layer_hydroclass"], [1164, 0, 1, "", "melting_layer_mf"], [1165, 0, 1, "", "quasi_vertical_profile"], [1166, 0, 1, "", "select_samples"], [1167, 0, 1, "", "steiner_conv_strat"], [1168, 0, 1, "", "synthetic_obs_distribution"], [1169, 0, 1, "", "texture_of_complex_phase"], [1170, 0, 1, "", "vad_browning"], [1171, 0, 1, "", "vad_michelson"]], "pyart.testing": [[1173, 2, 1, "", "Grid"], [1183, 2, 1, "", "InTemporaryDirectory"], [1185, 2, 1, "", "Radar"], [1214, 2, 1, "", "RadarSpectra"], [1243, 0, 1, "", "get_metadata"], [1244, 0, 1, "", "get_test_data"], [1245, 0, 1, "", "make_empty_grid"], [1246, 0, 1, "", "make_empty_ppi_radar"], [1247, 0, 1, "", "make_empty_rhi_radar"], [1248, 0, 1, "", "make_empty_spectra_radar"], [1249, 0, 1, "", "make_gaussian_storm_grid"], [1250, 0, 1, "", "make_normal_storm"], [1251, 0, 1, "", "make_single_ray_radar"], [1252, 0, 1, "", "make_storm_grid"], [1253, 0, 1, "", "make_target_grid"], [1254, 0, 1, "", "make_target_radar"], [1255, 0, 1, "", "make_target_spectra_radar"], [1256, 0, 1, "", "make_velocity_aliased_radar"], [1257, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[1174, 3, 1, "", "add_field"], [1175, 3, 1, "", "get_point_longitude_latitude"], [1176, 3, 1, "", "get_projparams"], [1177, 3, 1, "", "init_point_altitude"], [1178, 3, 1, "", "init_point_longitude_latitude"], [1179, 3, 1, "", "init_point_x_y_z"], [1180, 4, 1, "", "projection_proj"], [1181, 3, 1, "", "to_xarray"], [1182, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[1184, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[1186, 3, 1, "", "add_field"], [1187, 3, 1, "", "add_field_like"], [1188, 3, 1, "", "add_filter"], [1189, 3, 1, "", "check_field_exists"], [1190, 3, 1, "", "extract_sweeps"], [1191, 3, 1, "", "get_azimuth"], [1192, 3, 1, "", "get_elevation"], [1193, 3, 1, "", "get_end"], [1194, 3, 1, "", "get_field"], [1195, 3, 1, "", "get_gate_area"], [1196, 3, 1, "", "get_gate_lat_lon_alt"], [1197, 3, 1, "", "get_gate_x_y_z"], [1198, 3, 1, "", "get_nyquist_vel"], [1199, 3, 1, "", "get_slice"], [1200, 3, 1, "", "get_start"], [1201, 3, 1, "", "get_start_end"], [1202, 3, 1, "", "info"], [1203, 3, 1, "", "init_gate_altitude"], [1204, 3, 1, "", "init_gate_longitude_latitude"], [1205, 3, 1, "", "init_gate_x_y_z"], [1206, 3, 1, "", "init_rays_per_sweep"], [1207, 3, 1, "", "iter_azimuth"], [1208, 3, 1, "", "iter_elevation"], [1209, 3, 1, "", "iter_end"], [1210, 3, 1, "", "iter_field"], [1211, 3, 1, "", "iter_slice"], [1212, 3, 1, "", "iter_start"], [1213, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[1215, 3, 1, "", "add_field"], [1216, 3, 1, "", "add_field_like"], [1217, 3, 1, "", "add_filter"], [1218, 3, 1, "", "check_field_exists"], [1219, 3, 1, "", "extract_sweeps"], [1220, 3, 1, "", "get_azimuth"], [1221, 3, 1, "", "get_elevation"], [1222, 3, 1, "", "get_end"], [1223, 3, 1, "", "get_field"], [1224, 3, 1, "", "get_gate_area"], [1225, 3, 1, "", "get_gate_lat_lon_alt"], [1226, 3, 1, "", "get_gate_x_y_z"], [1227, 3, 1, "", "get_nyquist_vel"], [1228, 3, 1, "", "get_slice"], [1229, 3, 1, "", "get_start"], [1230, 3, 1, "", "get_start_end"], [1231, 3, 1, "", "info"], [1232, 3, 1, "", "init_gate_altitude"], [1233, 3, 1, "", "init_gate_longitude_latitude"], [1234, 3, 1, "", "init_gate_x_y_z"], [1235, 3, 1, "", "init_rays_per_sweep"], [1236, 3, 1, "", "iter_azimuth"], [1237, 3, 1, "", "iter_elevation"], [1238, 3, 1, "", "iter_end"], [1239, 3, 1, "", "iter_field"], [1240, 3, 1, "", "iter_slice"], [1241, 3, 1, "", "iter_start"], [1242, 3, 1, "", "iter_start_end"]], "pyart.util": [[520, 6, 1, "", "EPOCH_UNITS"], [1259, 0, 1, "", "angular_mean"], [1260, 0, 1, "", "angular_mean_deg"], [1261, 0, 1, "", "angular_std"], [1262, 0, 1, "", "angular_std_deg"], [1263, 0, 1, "", "angular_texture_2d"], [1264, 0, 1, "", "colocated_gates"], [1265, 0, 1, "", "colocated_gates2"], [1266, 0, 1, "", "compute_azimuthal_average"], [1267, 0, 1, "", "compute_corr"], [1268, 0, 1, "", "compute_directional_stats"], [1269, 0, 1, "", "compute_mse"], [1270, 0, 1, "", "compute_nse"], [1271, 0, 1, "", "cross_section_ppi"], [1272, 0, 1, "", "cross_section_rhi"], [1273, 0, 1, "", "datetime_from_dataset"], [1274, 0, 1, "", "datetime_from_grid"], [1275, 0, 1, "", "datetime_from_radar"], [1276, 0, 1, "", "datetimes_from_dataset"], [1277, 0, 1, "", "datetimes_from_radar"], [1278, 0, 1, "", "determine_sweeps"], [1279, 0, 1, "", "estimate_noise_hs74"], [1280, 0, 1, "", "estimate_noise_ivic13"], [1281, 0, 1, "", "find_neighbour_gates"], [1282, 0, 1, "", "for_azimuth"], [1283, 0, 1, "", "get_column_rays"], [1284, 0, 1, "", "get_field_location"], [1285, 0, 1, "", "get_ivic_flat_reg_var_max"], [1286, 0, 1, "", "get_ivic_pct"], [1287, 0, 1, "", "get_ivic_snr_thr"], [1288, 0, 1, "", "get_statistic"], [1289, 0, 1, "", "get_target_elevations"], [1290, 0, 1, "", "grid_texture_2d"], [1291, 0, 1, "", "image_mute_radar"], [1292, 0, 1, "", "interpol_spectra"], [1293, 0, 1, "", "intersection"], [1294, 0, 1, "", "interval_mean"], [1295, 0, 1, "", "interval_std"], [1296, 0, 1, "", "is_vpt"], [1297, 0, 1, "", "ivic_flat_reg_var_max_table"], [1298, 0, 1, "", "ivic_flat_reg_wind_len_table"], [1299, 0, 1, "", "ivic_pct_table"], [1300, 0, 1, "", "ivic_snr_thr_table"], [1301, 0, 1, "", "join_radar"], [1302, 0, 1, "", "join_spectra"], [1303, 0, 1, "", "ma_broadcast_to"], [1304, 0, 1, "", "mean_of_two_angles"], [1305, 0, 1, "", "mean_of_two_angles_deg"], [1306, 0, 1, "", "radar_from_spectra"], [1307, 0, 1, "", "rolling_window"], [1308, 0, 1, "", "simulated_vel_from_profile"], [1309, 0, 1, "", "sphere_distance"], [1310, 0, 1, "", "subset_radar"], [1311, 0, 1, "", "subset_radar_spectra"], [1312, 0, 1, "", "texture"], [1313, 0, 1, "", "texture_along_ray"], [1314, 0, 1, "", "to_vpt"], [1315, 0, 1, "", "weighted_kurtosis"], [1316, 0, 1, "", "weighted_mean"], [1317, 0, 1, "", "weighted_skew"], [1318, 0, 1, "", "weighted_variance"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:data"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318], "aux_io": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629], "extract_sweeps_skyecho": [0, 584], "get_sweep_time_coverag": [1, 586], "read_bin": [2, 587], "read_bin_mf": [3, 588], "read_cartesian_metranet": [4, 589], "read_cf1": [5, 590], "read_cf1_cartesian": [6, 591], "read_cf1_cartesian_mf": [7, 592], "read_d3r_gcpex_nc": [8, 593], "read_dat_mf": [9, 594], "read_gam": [10, 598], "read_gif": [11, 599], "read_grib": [12, 600], "read_hpl": [13, 601], "read_iq": [14, 602], "read_kazr": [15, 603], "read_metranet": [16, 606], "read_noxp_iphex_nc": [17, 607], "read_odim_grid_h5": [18, 608], "read_odim_h5": [19, 609], "read_odim_vp_h5": [20, 610], "read_pattern": [21, 611], "read_png": [22, 612], "read_radx": [23, 618], "read_rainbow_psr": [24, 619], "read_rainbow_psr_spectra": [25, 620], "read_rainbow_wrl": [26, 621], "read_skyecho": [27, 623], "read_spectra": [28, 624], "read_swissbirdradar_spectra": [29, 625], "write_odim_grid_h5": [30, 626], "write_odim_h5": [31, 627], "write_sinarame_cfradi": [32, 628], "write_spectra": [33, 629], "bridg": [34, 630, 631], "texture_of_complex_phas": [34, 631, 1169], "config": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644], "filemetadata": [35, 36, 37, 38, 633, 634, 635, 636], "__call__": [36, 634], "get_field_nam": [37, 42, 635, 641], "get_metadata": [38, 44, 636, 643, 1243], "get_field_colormap": [39, 638], "get_field_limit": [40, 639], "get_field_map": [41, 640], "get_fillvalu": [43, 642], "load_config": [45, 644], "core": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726], "grid": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 836, 1013, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1332, 1333, 1337, 1368], "add_field": [47, 61, 90, 647, 661, 690, 1174, 1186, 1215], "get_point_longitude_latitud": [48, 648, 1175], "get_projparam": [49, 649, 1176], "init_point_altitud": [50, 650, 1177], "init_point_longitude_latitud": [51, 651, 1178], "init_point_x_y_z": [52, 652, 1179], "projection_proj": [53, 653, 1180], "to_xarrai": [54, 654, 1181], "write": [55, 582, 655, 1013, 1182], "horizontalwindprofil": [56, 57, 58, 59, 656, 657, 658, 659], "from_u_and_v": [57, 657], "u_wind": [58, 658], "v_wind": [59, 659], "radar": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 582, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 727, 799, 836, 1013, 1075, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1258, 1331, 1332, 1333, 1355, 1365, 1373, 1376], "add_field_lik": [62, 91, 662, 691, 1187, 1216], "add_filt": [63, 92, 663, 692, 1188, 1217], "check_field_exist": [64, 93, 664, 693, 1189, 1218], "extract_sweep": [65, 94, 665, 694, 1190, 1219], "get_azimuth": [66, 95, 666, 695, 1191, 1220], "get_elev": [67, 96, 667, 696, 1192, 1221], "get_end": [68, 97, 668, 697, 1193, 1222], "get_field": [69, 98, 669, 698, 1194, 1223], "get_gate_area": [70, 99, 670, 699, 1195, 1224], "get_gate_lat_lon_alt": [71, 100, 671, 700, 1196, 1225], "get_gate_x_y_z": [72, 101, 672, 701, 1197, 1226], "get_nyquist_vel": [73, 102, 673, 702, 1198, 1227], "get_slic": [74, 103, 674, 703, 1199, 1228], "get_start": [75, 104, 675, 704, 1200, 1229], "get_start_end": [76, 105, 676, 705, 1201, 1230], "info": [77, 106, 677, 706, 1202, 1231], "init_gate_altitud": [78, 107, 678, 707, 1203, 1232], "init_gate_longitude_latitud": [79, 108, 679, 708, 1204, 1233], "init_gate_x_y_z": [80, 109, 680, 709, 1205, 1234], "init_rays_per_sweep": [81, 110, 681, 710, 1206, 1235], "iter_azimuth": [82, 111, 682, 711, 1207, 1236], "iter_elev": [83, 112, 683, 712, 1208, 1237], "iter_end": [84, 113, 684, 713, 1209, 1238], "iter_field": [85, 114, 685, 714, 1210, 1239], "iter_slic": [86, 115, 686, 715, 1211, 1240], "iter_start": [87, 116, 687, 716, 1212, 1241], "iter_start_end": [88, 117, 688, 717, 1213, 1242], "radarspectra": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242], "antenna_to_cartesian": [118, 718], "antenna_vectors_to_cartesian": [119, 719], "cartesian_to_antenna": [120, 720], "cartesian_to_geograph": [121, 721], "cartesian_to_geographic_aeqd": [122, 722], "cartesian_vectors_to_geograph": [123, 723], "geographic_to_cartesian": [124, 724], "geographic_to_cartesian_aeqd": [125, 725], "wgs84_to_swissch1903": [126, 726], "test": [126, 726, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1376], "exampl": [126, 726, 1321, 1325, 1326, 1330, 1335, 1354, 1357], "correct": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 1321, 1322, 1325, 1372], "compute_apparent_vpr": [127, 759], "compute_theoretical_vpr": [128, 760], "correct_sys_phas": [129, 763], "dealias_fourdd": [130, 767], "dealias_region_bas": [131, 768], "dealias_unwrap_phas": [132, 769], "det_sys_phase_rai": [133, 771], "find_object": [134, 775], "get_mask_fzl": [135, 777], "phase_proc_lp": [136, 782], "phase_proc_lp_gf": [137, 783], "ptoa_to_sf": [138, 784], "scanning_loss": [139, 786], "smooth_mask": [140, 790], "smooth_phidp_double_window": [141, 791], "smooth_phidp_single_window": [142, 792], "solar_flux_lookup": [143, 793], "sun_position_mfr": [144, 794], "sun_position_pysolar": [145, 795], "sun_pow": [146, 796], "except": [147, 148, 149, 150, 798], "deprecatedattribut": 147, "deprecatedfunctionnam": 148, "missingoptionaldepend": 149, "_deprecated_alia": 150, "filter": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 1372], "gatefilt": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 1369], "copi": [152, 412, 729, 801, 1039], "exclude_abov": [153, 730, 802], "exclude_al": [154, 731, 803], "exclude_below": [155, 732, 804], "exclude_equ": [156, 733, 805], "exclude_g": [157, 734, 806], "exclude_insid": [158, 735, 807], "exclude_invalid": [159, 736, 808], "exclude_mask": [160, 737, 809], "exclude_non": [161, 738, 810], "exclude_not_equ": [162, 739, 811], "exclude_outsid": [163, 740, 812], "exclude_transit": [164, 741, 813], "gate_exclud": [165, 742, 814], "gate_includ": [166, 743, 815], "include_abov": [167, 744, 816], "include_al": [168, 745, 817], "include_below": [169, 746, 818], "include_equ": [170, 747, 819], "include_g": [171, 748, 820], "include_insid": [172, 749, 821], "include_non": [173, 750, 822], "include_not_equ": [174, 751, 823], "include_not_mask": [175, 752, 824], "include_not_transit": [176, 753, 825], "include_outsid": [177, 754, 826], "include_valid": [178, 755, 827], "birds_gate_filt": [179, 828], "class_based_gate_filt": [180, 829], "iso0_based_gate_filt": [181, 830], "moment_and_texture_based_gate_filt": [182, 831], "moment_based_gate_filt": [183, 781, 832], "snr_based_gate_filt": [184, 833], "temp_based_gate_filt": [185, 834], "visibility_based_gate_filt": [186, 835], "graph": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012], "airborneradardisplai": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870], "generate_az_rhi_titl": [188, 255, 288, 325, 838, 905, 938, 975], "generate_filenam": [189, 225, 241, 256, 289, 326, 839, 875, 891, 906, 939, 976], "generate_ray_titl": [190, 257, 290, 327, 840, 907, 940, 977], "generate_titl": [191, 258, 291, 328, 841, 908, 941, 978], "generate_vpt_titl": [192, 259, 292, 329, 842, 909, 942, 979], "generate_xsection_titl": [193, 260, 293, 330, 843, 910, 943, 980], "label_xaxis_r": [194, 261, 294, 331, 844, 911, 944, 981], "label_xaxis_rai": [195, 262, 295, 332, 845, 912, 945, 982], "label_xaxis_tim": [196, 263, 296, 333, 846, 913, 946, 983], "label_xaxis_x": [197, 264, 297, 334, 847, 914, 947, 984], "label_xaxis_xsect": [198, 265, 298, 335, 848, 915, 948, 985], "label_yaxis_field": [199, 266, 299, 336, 849, 916, 949, 986], "label_yaxis_xsect": [200, 267, 300, 337, 850, 917, 950, 987], "label_yaxis_i": [201, 268, 301, 338, 851, 918, 951, 988], "label_yaxis_z": [202, 269, 302, 339, 852, 919, 952, 989], "plot": [203, 270, 303, 340, 836, 853, 920, 953, 990, 1325, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1358, 1359, 1371], "plot_azimuth_to_rhi": [204, 271, 304, 341, 854, 921, 954, 991], "plot_colorbar": [205, 229, 247, 272, 305, 342, 855, 879, 897, 922, 955, 992], "plot_cr_rast": [206, 273, 306, 343, 856, 923, 956, 993], "plot_cross_hair": [207, 274, 307, 344, 857, 924, 957, 994], "plot_grid_lin": [208, 275, 308, 345, 858, 925, 958, 995], "plot_label": [209, 210, 276, 277, 309, 310, 346, 347, 859, 860, 926, 927, 959, 960, 996, 997], "plot_ppi": [211, 278, 314, 351, 861, 928, 964, 1001], "plot_range_r": [212, 213, 279, 280, 316, 317, 353, 354, 862, 863, 929, 930, 966, 967, 1003, 1004], "plot_rai": [214, 281, 318, 355, 864, 931, 968, 1005], "plot_rhi": [215, 282, 319, 356, 865, 932, 969, 1006], "plot_sweep_grid": [216, 866], "plot_vpt": [217, 283, 320, 357, 867, 933, 970, 1007], "plot_xsect": [218, 284, 321, 358, 868, 934, 971, 1008], "set_aspect_ratio": [219, 285, 322, 359, 869, 935, 972, 1009], "set_limit": [220, 286, 323, 360, 870, 936, 973, 1010], "gridmapdisplai": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 1351], "cartopy_coastlin": [222, 872], "cartopy_political_boundari": [223, 873], "cartopy_st": [224, 874], "generate_grid_titl": [226, 242, 876, 892], "generate_latitudinal_level_titl": [227, 243, 877, 893], "generate_longitudinal_level_titl": [228, 244, 878, 894], "plot_cross_sect": [230, 880], "plot_cross_section_level": [231, 881], "plot_crosshair": [232, 248, 882, 898], "plot_grid": [233, 249, 883, 899], "plot_grid_contour": [234, 884], "plot_grid_raw": [235, 885], "plot_latitude_slic": [236, 250, 886, 900], "plot_latitudinal_level": [237, 251, 887, 901], "plot_longitude_slic": [238, 252, 888, 902], "plot_longitudinal_level": [239, 253, 889, 903], "gridmapdisplaybasemap": [240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903], "get_basemap": [245, 895], "plot_basemap": [246, 896], "radardisplai": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936], "radarmapdisplai": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973], "plot_line_geo": [311, 348, 961, 998], "plot_line_xi": [312, 349, 962, 999], "plot_point": [313, 350, 963, 1000], "plot_ppi_map": [315, 352, 965, 1002], "radarmapdisplaybasemap": [324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "io": [361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035], "make_time_unit_str": [361, 1014], "prepare_for_read": [362, 1015], "read": [363, 582, 1013, 1016, 1327, 1328, 1370, 1371, 1372], "read_arm_sond": [364, 1017], "read_arm_sonde_vap": [365, 1018], "read_cfradi": [366, 1019], "read_cfradial2": [367, 1020], "read_chl": [368, 1021], "read_grid": [369, 1022], "read_grid_mdv": [370, 1023], "read_mdv": [371, 1024], "read_nexrad_arch": [372, 1025], "read_nexrad_cdm": [373, 1026], "read_nexrad_level3": [374, 1027], "read_rsl": [375, 1028], "read_sigmet": [376, 1029], "read_uf": [377, 1030], "write_cfradi": [378, 1031], "write_grid": [379, 1032], "write_grid_geotiff": [380, 1033], "write_grid_mdv": [381, 1034], "write_uf": [382, 1035], "lazydict": [383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059], "lazyloaddict": [383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049], "__contains__": 384, "__delattr__": 385, "__delitem__": 386, "__dir__": 387, "__eq__": 388, "__format__": 389, "__ge__": 390, "__getattribute__": 391, "__getitem__": 392, "__getstate__": 393, "__gt__": 394, "__init__": 395, "__init_subclass__": 396, "__iter__": 397, "__le__": 398, "__len__": 399, "__lt__": 400, "__ne__": 401, "__new__": 402, "__reduce__": 403, "__reduce_ex__": 404, "__repr__": 405, "__setattr__": 406, "__setitem__": 407, "__sizeof__": 408, "__str__": 409, "__subclasshook__": 410, "clear": [411, 1038, 1051], "get": [413, 1040, 1052, 1362], "has_kei": [414, 1041], "item": [415, 1042, 1053], "kei": [416, 1043, 1054], "pop": [417, 1044, 1055], "popitem": [418, 1045, 1056], "set_lazi": [419, 1046], "setdefault": [420, 1047, 1057], "updat": [421, 1048, 1058], "valu": [422, 1049, 1059], "retriev": [423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1325, 1354, 1372], "_destandard": 423, "_get_res_vol_sid": 424, "atmospheric_gas_att": [425, 1076], "calculate_snr_from_reflect": [426, 1077], "calculate_velocity_textur": [427, 1078], "composite_reflect": [428, 1079], "compute_doppler_veloc": [429, 1080], "compute_doppler_velocity_iq": [430, 1081], "compute_doppler_width": [431, 1082], "compute_doppler_width_iq": [432, 1083], "compute_apparent_profil": [433, 1084], "compute_bird_dens": [434, 1085], "compute_ccor": [435, 1086], "compute_cdr": [436, 1087], "compute_centroid": [437, 1088], "compute_differential_phas": [438, 1089], "compute_differential_phase_iq": [439, 1090], "compute_differential_reflect": [440, 1091], "compute_differential_reflectivity_iq": [441, 1092], "compute_evp": [442, 1093], "compute_iq": [443, 1094], "compute_l": [444, 1095], "compute_mean_phase_iq": [445, 1096], "compute_noise_pow": [446, 1097], "compute_noisedbz": [447, 1098], "compute_pol_vari": [448, 1099], "compute_pol_variables_iq": [449, 1100], "compute_qvp": [450, 1101], "compute_radial_noise_h": [451, 1102], "compute_radial_noise_iv": [452, 1103], "compute_rc": [453, 1104], "compute_rcs_from_pr": [454, 1105], "compute_refl_from_zdr": [455, 1106], "compute_reflect": [456, 1107], "compute_reflectivity_iq": [457, 1108], "compute_rhohv": [458, 1109], "compute_rhohv_iq": [459, 1110], "compute_rqvp": [460, 1111], "compute_signal_pow": [461, 1112], "compute_snr": [462, 1113], "compute_spectra": [463, 1114], "compute_spectral_differential_phas": [464, 1115], "compute_spectral_differential_reflect": [465, 1116], "compute_spectral_nois": [466, 1117], "compute_spectral_phas": [467, 1118], "compute_spectral_pow": [468, 1119], "compute_spectral_reflect": [469, 1120], "compute_spectral_rhohv": [470, 1121], "compute_st1_iq": [471, 1122], "compute_st2_iq": [472, 1123], "compute_svp": [473, 1124], "compute_ts_along_coord": [474, 1125], "compute_vol_refl": [475, 1126], "compute_vp": [476, 1127], "compute_wbn_iq": [477, 1128], "conv_strat_raut": [478, 1129], "conv_strat_yut": [479, 1130], "data_for_centroid": [480, 1131], "dealias_spectra": [481, 1132], "detect_ml": [482, 1133], "paremet": [482, 1133], "determine_medoid": [483, 1134], "est_rain_rate_a": [484, 1135], "est_rain_rate_hydro": [485, 1136], "est_rain_rate_kdp": [486, 1137], "est_rain_rate_z": [487, 1138], "est_rain_rate_za": [488, 1139], "est_rain_rate_zkdp": [489, 1140], "est_rain_rate_zpoli": [490, 1141], "est_vertical_windshear": [491, 1142], "est_vertical_windshear_lidar": [492, 1143], "est_wind_profil": [493, 1144], "est_wind_vel": [494, 1145], "feature_detect": [495, 1146], "fetch_radar_time_profil": [496, 1147], "gecsx": [497, 1148], "get_coeff_attg": [498, 1149], "get_freq_band": [499, 1150], "get_iso0_v": [500, 1151], "get_ml_rng_limit": [501, 1152], "grid_displacement_pc": [502, 1153], "grid_shift": [503, 1154], "hydroclass_semisupervis": [504, 1155], "kdp_leastsquare_double_window": [505, 1156], "kdp_leastsquare_single_window": [506, 1157], "kdp_maesaka": [507, 1158], "kdp_schneeb": [508, 1159], "kdp_vulpiani": [509, 1160], "map_profile_to_g": [510, 1161], "melting_layer_giangrand": [511, 1162], "melting_layer_hydroclass": [512, 1163], "melting_layer_mf": [513, 1164], "quasi_vertical_profil": [514, 1165], "select_sampl": [515, 1166], "steiner_conv_strat": [516, 1167], "synthetic_obs_distribut": [517, 1168], "vad_brown": [518, 1170], "vad_michelson": [519, 1171], "util": [520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318], "epoch_unit": 520, "angular_mean": [521, 1259], "angular_mean_deg": [522, 1260], "angular_std": [523, 1261], "angular_std_deg": [524, 1262], "angular_texture_2d": [525, 1263], "colocated_g": [526, 1264], "colocated_gates2": [527, 1265], "compute_azimuthal_averag": [528, 1266], "compute_corr": [529, 1267], "compute_directional_stat": [530, 1268], "compute_ms": [531, 1269], "compute_ns": [532, 1270], "cross_section_ppi": [533, 1271], "cross_section_rhi": [534, 1272], "datetime_from_dataset": [535, 1273], "datetime_from_grid": [536, 1274], "datetime_from_radar": [537, 1275], "datetimes_from_dataset": [538, 1276], "datetimes_from_radar": [539, 1277], "determine_sweep": [540, 1278], "estimate_noise_hs74": [541, 1279], "estimate_noise_ivic13": [542, 1280], "find_neighbour_g": [543, 1281], "for_azimuth": [544, 1282], "assumpt": [544, 571, 1282, 1309], "get_column_rai": [545, 1283], "get_field_loc": [546, 1284], "get_ivic_flat_reg_var_max": [547, 1285], "get_ivic_pct": [548, 1286], "get_ivic_snr_thr": [549, 1287], "get_statist": [550, 1288], "get_target_elev": [551, 1289], "grid_texture_2d": [552, 1290], "image_mute_radar": [553, 1291], "interpol_spectra": [554, 1292], "intersect": [555, 1293], "interval_mean": [556, 1294], "interval_std": [557, 1295], "is_vpt": [558, 1296], "ivic_flat_reg_var_max_t": [559, 1297], "ivic_flat_reg_wind_len_t": [560, 1298], "ivic_pct_t": [561, 1299], "ivic_snr_thr_t": [562, 1300], "join_radar": [563, 1301], "join_spectra": [564, 1302], "ma_broadcast_to": [565, 1303], "mean_of_two_angl": [566, 1304], "mean_of_two_angles_deg": [567, 1305], "radar_from_spectra": [568, 1306], "rolling_window": [569, 1307], "simulated_vel_from_profil": [570, 1308], "sphere_dist": [571, 1309], "paramet": [571, 1309], "subset_radar": [572, 1310], "subset_radar_spectra": [573, 1311], "textur": [574, 1312], "texture_along_rai": [575, 1313], "to_vpt": [576, 1314], "weighted_kurtosi": [577, 1315], "weighted_mean": [578, 1316], "weighted_skew": [579, 1317], "weighted_vari": [580, 1318], "_debug_info": 581, "auxiliari": 582, "input": [582, 1013, 1325, 1326], "output": [582, 1013, 1325, 1326], "data": [582, 799, 836, 1013, 1327, 1328, 1368, 1369, 1370, 1371, 1372], "special": [582, 1013], "us": [582, 1013, 1323, 1331, 1351], "convert_data": 583, "get_librari": 585, "read_edge_netcdf": 595, "read_file_c": 596, "read_file_pi": 597, "read_knmi_grid_h5": 604, "read_mch_vad": 605, "read_product_c": 613, "read_product_pi": 614, "read_psr_cpi_head": 615, "read_psr_head": 616, "read_psr_spectra": 617, "read_sinarame_h5": 622, "other": [630, 727, 1370], "toolkit": [630, 1376], "phase": [630, 727], "function": [630, 727], "get_k": 637, "class": 645, "coordin": 645, "transform": 645, "veloc": [727, 1075, 1258, 1323, 1366, 1371], "unfold": 727, "attenu": [727, 1322, 1372], "process": [727, 1075, 1371], "helper": 727, "calculate_attenu": 756, "calculate_attenuation_philinear": 757, "calculate_attenuation_zphi": 758, "correct_bia": 761, "correct_noise_rhohv": 762, "correct_vis": 764, "correct_vpr": 765, "correct_vpr_spatialis": 766, "despeckle_field": 770, "est_rhohv_rain": 772, "est_zdr_precip": 773, "est_zdr_snow": 774, "gauss_fit": 776, "get_sun_hit": 778, "get_sun_hits_iv": 779, "get_sun_hits_psr": 780, "retrieval_result": 785, "selfconsistency_bia": 787, "selfconsistency_bias2": 788, "selfconsistency_kdp_phidp": 789, "sun_retriev": 797, "plot_convstrat_schem": 1011, "plot_maxcappi": 1012, "sond": 1013, "mutablemap": [1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059], "map": [1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1325, 1330, 1332, 1333, 1344, 1368], "gatemapp": [1061, 1062, 1063, 1064, 1331], "distance_toler": 1062, "mapped_radar": 1063, "time_toler": 1064, "example_roi_func_const": 1065, "example_roi_func_dist": 1066, "example_roi_func_dist_beam": 1067, "grid_from_radar": 1068, "grid_ppi_sweep": 1069, "grid_rhi_sweep": 1070, "gridstats_from_radar": 1071, "map_gates_to_grid": 1072, "map_gates_to_grid_to_list": 1073, "map_to_grid": 1074, "composit": [1075, 1356], "reflect": [1075, 1322, 1339, 1341, 1347, 1348, 1356], "melt": 1075, "layer": 1075, "ml": 1075, "detect": 1075, "kdp": [1075, 1372], "echo": 1075, "classif": [1075, 1357, 1358, 1372], "gate": 1075, "id": 1075, "simpl": 1075, "moment": [1075, 1321, 1325, 1340], "calcul": [1075, 1356, 1358, 1359], "qpe": [1075, 1372], "quantit": 1075, "precipit": 1075, "estim": [1075, 1258, 1372], "advect": 1075, "wind": [1075, 1371], "vad": [1075, 1359, 1371], "azimuth": [1075, 1371], "displai": [1075, 1371], "qvp": 1075, "quasi": 1075, "vertic": 1075, "profil": [1075, 1359], "spectra": 1075, "iq": 1075, "visibl": 1075, "intemporarydirectori": [1183, 1184], "cleanup": 1184, "get_test_data": 1244, "make_empty_grid": 1245, "make_empty_ppi_radar": 1246, "make_empty_rhi_radar": 1247, "make_empty_spectra_radar": 1248, "make_gaussian_storm_grid": 1249, "make_normal_storm": 1250, "make_single_ray_radar": 1251, "make_storm_grid": 1252, "make_target_grid": 1253, "make_target_radar": 1254, "make_target_spectra_radar": 1255, "make_velocity_aliased_radar": 1256, "make_velocity_aliased_rhi_radar": 1257, "circular": 1258, "statist": 1258, "datetim": 1258, "column": [1258, 1355], "section": [1258, 1337, 1352], "cross": [1258, 1337, 1352], "nois": [1258, 1372], "simul": 1258, "signal": 1258, "mathemat": 1258, "weight": 1258, "api": 1319, "manual": 1319, "changelog": 1320, "v1": 1320, "9": 1320, "2": [1320, 1327, 1328], "0": 1320, "8": 1320, "7": 1320, "6": 1320, "5": 1320, "4": 1320, "3": [1320, 1327, 1351], "1": 1320, "new": 1320, "addit": 1320, "dealia": 1323, "doppler": [1323, 1371], "region": 1323, "base": 1323, "algorithm": [1323, 1357], "comput": [1324, 1329, 1334, 1353, 1360, 1361, 1374], "time": [1324, 1329, 1334, 1353, 1360, 1361, 1374], "galleri": [1325, 1363], "nexrad": [1327, 1328, 1340, 1341], "from": [1327, 1337, 1340, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1352, 1371, 1375], "aw": 1327, "cloud": 1327, "level": [1327, 1328], "older": 1328, "fix": 1328, "latitud": 1328, "longitud": 1328, "issu": 1328, "compar": 1331, "two": [1331, 1333, 1350], "singl": 1332, "cartesian": [1332, 1333, 1368, 1370], "choos": 1336, "colormap": 1336, "your": [1336, 1338], "modifi": 1338, "colorbar": 1338, "creat": [1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1364, 1378], "an": [1339, 1347, 1348, 1378], "imag": 1339, "mute": 1339, "multipl": [1340, 1345, 1346], "file": [1340, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1364, 1365, 1370, 1376], "ppi": [1342, 1343, 1344, 1352], "cfradial": 1342, "mdv": [1343, 1347, 1348, 1349], "cartopi": 1344, "panel": [1345, 1346, 1350, 1351], "rhi": [1345, 1346, 1347, 1348, 1349, 1350], "cf": [1345, 1346], "radial": [1345, 1346], "contour": [1347, 1348], "line": [1347, 1348], "volum": 1352, "extract": 1355, "abov": 1355, "point": 1355, "convect": 1357, "stratiform": 1357, "how": 1357, "work": 1357, "summari": 1357, "recommend": 1357, "best": 1357, "practic": 1357, "refer": 1357, "hydrometeor": [1358, 1372], "about": 1362, "meteoswiss": [1362, 1370], "fork": 1362, "py": [1362, 1369, 1370, 1373, 1376], "art": [1362, 1369, 1370, 1373, 1376], "cite": [1362, 1376], "what": 1362, "can": 1362, "do": 1362, "short": 1362, "cours": 1362, "instal": [1362, 1375, 1376], "depend": [1362, 1375, 1378], "option": [1362, 1375, 1378], "help": 1362, "contribut": 1362, "notebook": 1363, "basic": 1364, "ingest": 1364, "netcdf": 1364, "field": 1365, "manipul": 1365, "save": 1365, "object": [1365, 1373], "dealias": [1366, 1371], "mask": 1369, "With": 1369, "metranet": 1370, "polar": 1370, "low": 1370, "re": 1370, "mlx": 1370, "high": 1370, "mhx": 1370, "product": 1370, "swiss": [1371, 1372], "volumetr": 1371, "scan": 1371, "cappi": 1371, "raw": 1372, "c": 1372, "band": 1372, "ground": 1372, "clutter": 1372, "remov": 1372, "The": [1373, 1376], "index": 1373, "requir": 1375, "obtain": 1375, "latest": 1375, "sourc": 1375, "frequent": 1375, "ask": 1375, "question": 1375, "contributor": 1376, "": 1376, "guid": [1376, 1377], "python": 1376, "arm": 1376, "import": 1376, "link": 1376, "resourc": 1376, "code": 1376, "style": 1376, "setup": 1376, "github": 1376, "blog": 1376, "post": 1376, "user": 1377, "set": 1378, "up": 1378, "environ": 1378, "anaconda": 1378, "channel": 1378, "ad": 1378, "path": 1378, "more": 1378, "inform": 1378}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart.aux_io.extract_sweeps_skyecho": [[0, "pyart-aux-io-extract-sweeps-skyecho"], [584, "pyart-aux-io-extract-sweeps-skyecho"]], "pyart.aux_io.get_sweep_time_coverage": [[1, "pyart-aux-io-get-sweep-time-coverage"], [586, "pyart-aux-io-get-sweep-time-coverage"]], "pyart.aux_io.read_bin": [[2, "pyart-aux-io-read-bin"], [587, "pyart-aux-io-read-bin"]], "pyart.aux_io.read_bin_mf": [[3, "pyart-aux-io-read-bin-mf"], [588, "pyart-aux-io-read-bin-mf"]], "pyart.aux_io.read_cartesian_metranet": [[4, "pyart-aux-io-read-cartesian-metranet"], [589, "pyart-aux-io-read-cartesian-metranet"]], "pyart.aux_io.read_cf1": [[5, "pyart-aux-io-read-cf1"], [590, "pyart-aux-io-read-cf1"]], "pyart.aux_io.read_cf1_cartesian": [[6, "pyart-aux-io-read-cf1-cartesian"], [591, "pyart-aux-io-read-cf1-cartesian"]], "pyart.aux_io.read_cf1_cartesian_mf": [[7, "pyart-aux-io-read-cf1-cartesian-mf"], [592, "pyart-aux-io-read-cf1-cartesian-mf"]], "pyart.aux_io.read_d3r_gcpex_nc": [[8, "pyart-aux-io-read-d3r-gcpex-nc"], [593, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_dat_mf": [[9, "pyart-aux-io-read-dat-mf"], [594, "pyart-aux-io-read-dat-mf"]], "pyart.aux_io.read_gamic": [[10, "pyart-aux-io-read-gamic"], [598, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_gif": [[11, "pyart-aux-io-read-gif"], [599, "pyart-aux-io-read-gif"]], "pyart.aux_io.read_grib": [[12, "pyart-aux-io-read-grib"], [600, "pyart-aux-io-read-grib"]], "pyart.aux_io.read_hpl": [[13, "pyart-aux-io-read-hpl"], [601, "pyart-aux-io-read-hpl"]], "pyart.aux_io.read_iq": [[14, "pyart-aux-io-read-iq"], [602, "pyart-aux-io-read-iq"]], "pyart.aux_io.read_kazr": [[15, "pyart-aux-io-read-kazr"], [603, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_metranet": [[16, "pyart-aux-io-read-metranet"], [606, "pyart-aux-io-read-metranet"]], "pyart.aux_io.read_noxp_iphex_nc": [[17, "pyart-aux-io-read-noxp-iphex-nc"], [607, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_grid_h5": [[18, "pyart-aux-io-read-odim-grid-h5"], [608, "pyart-aux-io-read-odim-grid-h5"]], "pyart.aux_io.read_odim_h5": [[19, "pyart-aux-io-read-odim-h5"], [609, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_odim_vp_h5": [[20, "pyart-aux-io-read-odim-vp-h5"], [610, "pyart-aux-io-read-odim-vp-h5"]], "pyart.aux_io.read_pattern": [[21, "pyart-aux-io-read-pattern"], [611, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_png": [[22, "pyart-aux-io-read-png"], [612, "pyart-aux-io-read-png"]], "pyart.aux_io.read_radx": [[23, "pyart-aux-io-read-radx"], [618, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_rainbow_psr": [[24, "pyart-aux-io-read-rainbow-psr"], [619, "pyart-aux-io-read-rainbow-psr"]], "pyart.aux_io.read_rainbow_psr_spectra": [[25, "pyart-aux-io-read-rainbow-psr-spectra"], [620, "pyart-aux-io-read-rainbow-psr-spectra"]], "pyart.aux_io.read_rainbow_wrl": [[26, "pyart-aux-io-read-rainbow-wrl"], [621, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_skyecho": [[27, "pyart-aux-io-read-skyecho"], [623, "pyart-aux-io-read-skyecho"]], "pyart.aux_io.read_spectra": [[28, "pyart-aux-io-read-spectra"], [624, "pyart-aux-io-read-spectra"]], "pyart.aux_io.read_swissbirdradar_spectra": [[29, "pyart-aux-io-read-swissbirdradar-spectra"], [625, "pyart-aux-io-read-swissbirdradar-spectra"]], "pyart.aux_io.write_odim_grid_h5": [[30, "pyart-aux-io-write-odim-grid-h5"], [626, "pyart-aux-io-write-odim-grid-h5"]], "pyart.aux_io.write_odim_h5": [[31, "pyart-aux-io-write-odim-h5"], [627, "pyart-aux-io-write-odim-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[32, "pyart-aux-io-write-sinarame-cfradial"], [628, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.aux_io.write_spectra": [[33, "pyart-aux-io-write-spectra"], [629, "pyart-aux-io-write-spectra"]], "pyart.bridge.texture_of_complex_phase": [[34, "pyart-bridge-texture-of-complex-phase"], [631, "pyart-bridge-texture-of-complex-phase"]], "pyart.config.FileMetadata": [[35, "pyart-config-filemetadata"], [633, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[36, "pyart-config-filemetadata-call"], [634, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[37, "pyart-config-filemetadata-get-field-name"], [635, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[38, "pyart-config-filemetadata-get-metadata"], [636, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[39, "pyart-config-get-field-colormap"], [638, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[40, "pyart-config-get-field-limits"], [639, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[41, "pyart-config-get-field-mapping"], [640, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[42, "pyart-config-get-field-name"], [641, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[43, "pyart-config-get-fillvalue"], [642, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[44, "pyart-config-get-metadata"], [643, "pyart-config-get-metadata"]], "pyart.config.load_config": [[45, "pyart-config-load-config"], [644, "pyart-config-load-config"]], "pyart.core.Grid": [[46, "pyart-core-grid"], [646, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[47, "pyart-core-grid-add-field"], [647, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[48, "pyart-core-grid-get-point-longitude-latitude"], [648, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[49, "pyart-core-grid-get-projparams"], [649, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[50, "pyart-core-grid-init-point-altitude"], [650, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[51, "pyart-core-grid-init-point-longitude-latitude"], [651, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[52, "pyart-core-grid-init-point-x-y-z"], [652, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[53, "pyart-core-grid-projection-proj"], [653, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[54, "pyart-core-grid-to-xarray"], [654, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[55, "pyart-core-grid-write"], [655, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[56, "pyart-core-horizontalwindprofile"], [656, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[57, "pyart-core-horizontalwindprofile-from-u-and-v"], [657, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[58, "pyart-core-horizontalwindprofile-u-wind"], [658, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[59, "pyart-core-horizontalwindprofile-v-wind"], [659, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[60, "pyart-core-radar"], [660, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[61, "pyart-core-radar-add-field"], [661, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[62, "pyart-core-radar-add-field-like"], [662, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[63, "pyart-core-radar-add-filter"], [663, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[64, "pyart-core-radar-check-field-exists"], [664, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[65, "pyart-core-radar-extract-sweeps"], [665, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[66, "pyart-core-radar-get-azimuth"], [666, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[67, "pyart-core-radar-get-elevation"], [667, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[68, "pyart-core-radar-get-end"], [668, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[69, "pyart-core-radar-get-field"], [669, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[70, "pyart-core-radar-get-gate-area"], [670, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[71, "pyart-core-radar-get-gate-lat-lon-alt"], [671, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[72, "pyart-core-radar-get-gate-x-y-z"], [672, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[73, "pyart-core-radar-get-nyquist-vel"], [673, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[74, "pyart-core-radar-get-slice"], [674, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[75, "pyart-core-radar-get-start"], [675, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[76, "pyart-core-radar-get-start-end"], [676, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[77, "pyart-core-radar-info"], [677, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[78, "pyart-core-radar-init-gate-altitude"], [678, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[79, "pyart-core-radar-init-gate-longitude-latitude"], [679, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[80, "pyart-core-radar-init-gate-x-y-z"], [680, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[81, "pyart-core-radar-init-rays-per-sweep"], [681, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[82, "pyart-core-radar-iter-azimuth"], [682, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[83, "pyart-core-radar-iter-elevation"], [683, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[84, "pyart-core-radar-iter-end"], [684, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[85, "pyart-core-radar-iter-field"], [685, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[86, "pyart-core-radar-iter-slice"], [686, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[87, "pyart-core-radar-iter-start"], [687, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[88, "pyart-core-radar-iter-start-end"], [688, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[89, "pyart-core-radarspectra"], [689, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.add_field": [[90, "pyart-core-radarspectra-add-field"], [690, "pyart-core-radarspectra-add-field"]], "pyart.core.RadarSpectra.add_field_like": [[91, "pyart-core-radarspectra-add-field-like"], [691, "pyart-core-radarspectra-add-field-like"]], "pyart.core.RadarSpectra.add_filter": [[92, "pyart-core-radarspectra-add-filter"], [692, "pyart-core-radarspectra-add-filter"]], "pyart.core.RadarSpectra.check_field_exists": [[93, "pyart-core-radarspectra-check-field-exists"], [693, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.extract_sweeps": [[94, "pyart-core-radarspectra-extract-sweeps"], [694, "pyart-core-radarspectra-extract-sweeps"]], "pyart.core.RadarSpectra.get_azimuth": [[95, "pyart-core-radarspectra-get-azimuth"], [695, "pyart-core-radarspectra-get-azimuth"]], "pyart.core.RadarSpectra.get_elevation": [[96, "pyart-core-radarspectra-get-elevation"], [696, "pyart-core-radarspectra-get-elevation"]], "pyart.core.RadarSpectra.get_end": [[97, "pyart-core-radarspectra-get-end"], [697, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_field": [[98, "pyart-core-radarspectra-get-field"], [698, "pyart-core-radarspectra-get-field"]], "pyart.core.RadarSpectra.get_gate_area": [[99, "pyart-core-radarspectra-get-gate-area"], [699, "pyart-core-radarspectra-get-gate-area"]], "pyart.core.RadarSpectra.get_gate_lat_lon_alt": [[100, "pyart-core-radarspectra-get-gate-lat-lon-alt"], [700, "pyart-core-radarspectra-get-gate-lat-lon-alt"]], "pyart.core.RadarSpectra.get_gate_x_y_z": [[101, "pyart-core-radarspectra-get-gate-x-y-z"], [701, "pyart-core-radarspectra-get-gate-x-y-z"]], "pyart.core.RadarSpectra.get_nyquist_vel": [[102, "pyart-core-radarspectra-get-nyquist-vel"], [702, "pyart-core-radarspectra-get-nyquist-vel"]], "pyart.core.RadarSpectra.get_slice": [[103, "pyart-core-radarspectra-get-slice"], [703, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[104, "pyart-core-radarspectra-get-start"], [704, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[105, "pyart-core-radarspectra-get-start-end"], [705, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.info": [[106, "pyart-core-radarspectra-info"], [706, "pyart-core-radarspectra-info"]], "pyart.core.RadarSpectra.init_gate_altitude": [[107, "pyart-core-radarspectra-init-gate-altitude"], [707, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[108, "pyart-core-radarspectra-init-gate-longitude-latitude"], [708, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[109, "pyart-core-radarspectra-init-gate-x-y-z"], [709, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[110, "pyart-core-radarspectra-init-rays-per-sweep"], [710, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[111, "pyart-core-radarspectra-iter-azimuth"], [711, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[112, "pyart-core-radarspectra-iter-elevation"], [712, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[113, "pyart-core-radarspectra-iter-end"], [713, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[114, "pyart-core-radarspectra-iter-field"], [714, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[115, "pyart-core-radarspectra-iter-slice"], [715, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[116, "pyart-core-radarspectra-iter-start"], [716, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[117, "pyart-core-radarspectra-iter-start-end"], [717, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.antenna_to_cartesian": [[118, "pyart-core-antenna-to-cartesian"], [718, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[119, "pyart-core-antenna-vectors-to-cartesian"], [719, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[120, "pyart-core-cartesian-to-antenna"], [720, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"], [721, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"], [722, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"], [723, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"], [724, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"], [725, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.core.wgs84_to_swissCH1903": [[126, "pyart-core-wgs84-to-swissch1903"], [726, "pyart-core-wgs84-to-swissch1903"]], "Test example": [[126, "test-example"], [726, "test-example"]], "pyart.correct.compute_apparent_vpr": [[127, "pyart-correct-compute-apparent-vpr"], [759, "pyart-correct-compute-apparent-vpr"]], "pyart.correct.compute_theoretical_vpr": [[128, "pyart-correct-compute-theoretical-vpr"], [760, "pyart-correct-compute-theoretical-vpr"]], "pyart.correct.correct_sys_phase": [[129, "pyart-correct-correct-sys-phase"], [763, "pyart-correct-correct-sys-phase"]], "pyart.correct.dealias_fourdd": [[130, "pyart-correct-dealias-fourdd"], [767, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[131, "pyart-correct-dealias-region-based"], [768, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[132, "pyart-correct-dealias-unwrap-phase"], [769, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.det_sys_phase_ray": [[133, "pyart-correct-det-sys-phase-ray"], [771, "pyart-correct-det-sys-phase-ray"]], "pyart.correct.find_objects": [[134, "pyart-correct-find-objects"], [775, "pyart-correct-find-objects"]], "pyart.correct.get_mask_fzl": [[135, "pyart-correct-get-mask-fzl"], [777, "pyart-correct-get-mask-fzl"]], "pyart.correct.phase_proc_lp": [[136, "pyart-correct-phase-proc-lp"], [782, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[137, "pyart-correct-phase-proc-lp-gf"], [783, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.ptoa_to_sf": [[138, "pyart-correct-ptoa-to-sf"], [784, "pyart-correct-ptoa-to-sf"]], "pyart.correct.scanning_losses": [[139, "pyart-correct-scanning-losses"], [786, "pyart-correct-scanning-losses"]], "pyart.correct.smooth_masked": [[140, "pyart-correct-smooth-masked"], [790, "pyart-correct-smooth-masked"]], "pyart.correct.smooth_phidp_double_window": [[141, "pyart-correct-smooth-phidp-double-window"], [791, "pyart-correct-smooth-phidp-double-window"]], "pyart.correct.smooth_phidp_single_window": [[142, "pyart-correct-smooth-phidp-single-window"], [792, "pyart-correct-smooth-phidp-single-window"]], "pyart.correct.solar_flux_lookup": [[143, "pyart-correct-solar-flux-lookup"], [793, "pyart-correct-solar-flux-lookup"]], "pyart.correct.sun_position_mfr": [[144, "pyart-correct-sun-position-mfr"], [794, "pyart-correct-sun-position-mfr"]], "pyart.correct.sun_position_pysolar": [[145, "pyart-correct-sun-position-pysolar"], [795, "pyart-correct-sun-position-pysolar"]], "pyart.correct.sun_power": [[146, "pyart-correct-sun-power"], [796, "pyart-correct-sun-power"]], "pyart.exceptions.DeprecatedAttribute": [[147, "pyart-exceptions-deprecatedattribute"]], "pyart.exceptions.DeprecatedFunctionName": [[148, "pyart-exceptions-deprecatedfunctionname"]], "pyart.exceptions.MissingOptionalDependency": [[149, "pyart-exceptions-missingoptionaldependency"]], "pyart.exceptions._deprecated_alias": [[150, "pyart-exceptions-deprecated-alias"]], "pyart.filters.GateFilter": [[151, "pyart-filters-gatefilter"], [800, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[152, "pyart-filters-gatefilter-copy"], [801, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[153, "pyart-filters-gatefilter-exclude-above"], [802, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[154, "pyart-filters-gatefilter-exclude-all"], [803, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[155, "pyart-filters-gatefilter-exclude-below"], [804, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[156, "pyart-filters-gatefilter-exclude-equal"], [805, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[157, "pyart-filters-gatefilter-exclude-gates"], [806, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[158, "pyart-filters-gatefilter-exclude-inside"], [807, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[159, "pyart-filters-gatefilter-exclude-invalid"], [808, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[160, "pyart-filters-gatefilter-exclude-masked"], [809, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[161, "pyart-filters-gatefilter-exclude-none"], [810, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[162, "pyart-filters-gatefilter-exclude-not-equal"], [811, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[163, "pyart-filters-gatefilter-exclude-outside"], [812, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[164, "pyart-filters-gatefilter-exclude-transition"], [813, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[165, "pyart-filters-gatefilter-gate-excluded"], [814, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[166, "pyart-filters-gatefilter-gate-included"], [815, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[167, "pyart-filters-gatefilter-include-above"], [816, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[168, "pyart-filters-gatefilter-include-all"], [817, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[169, "pyart-filters-gatefilter-include-below"], [818, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[170, "pyart-filters-gatefilter-include-equal"], [819, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[171, "pyart-filters-gatefilter-include-gates"], [820, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[172, "pyart-filters-gatefilter-include-inside"], [821, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[173, "pyart-filters-gatefilter-include-none"], [822, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[174, "pyart-filters-gatefilter-include-not-equal"], [823, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[175, "pyart-filters-gatefilter-include-not-masked"], [824, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[176, "pyart-filters-gatefilter-include-not-transition"], [825, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[177, "pyart-filters-gatefilter-include-outside"], [826, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[178, "pyart-filters-gatefilter-include-valid"], [827, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.birds_gate_filter": [[179, "pyart-filters-birds-gate-filter"], [828, "pyart-filters-birds-gate-filter"]], "pyart.filters.class_based_gate_filter": [[180, "pyart-filters-class-based-gate-filter"], [829, "pyart-filters-class-based-gate-filter"]], "pyart.filters.iso0_based_gate_filter": [[181, "pyart-filters-iso0-based-gate-filter"], [830, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[182, "pyart-filters-moment-and-texture-based-gate-filter"], [831, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[183, "pyart-filters-moment-based-gate-filter"], [832, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.snr_based_gate_filter": [[184, "pyart-filters-snr-based-gate-filter"], [833, "pyart-filters-snr-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[185, "pyart-filters-temp-based-gate-filter"], [834, "pyart-filters-temp-based-gate-filter"]], "pyart.filters.visibility_based_gate_filter": [[186, "pyart-filters-visibility-based-gate-filter"], [835, "pyart-filters-visibility-based-gate-filter"]], "pyart.graph.AirborneRadarDisplay": [[187, "pyart-graph-airborneradardisplay"], [837, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[188, "pyart-graph-airborneradardisplay-generate-az-rhi-title"], [838, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[189, "pyart-graph-airborneradardisplay-generate-filename"], [839, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[190, "pyart-graph-airborneradardisplay-generate-ray-title"], [840, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[191, "pyart-graph-airborneradardisplay-generate-title"], [841, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[192, "pyart-graph-airborneradardisplay-generate-vpt-title"], [842, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.generate_xsection_title": [[193, "pyart-graph-airborneradardisplay-generate-xsection-title"], [843, "pyart-graph-airborneradardisplay-generate-xsection-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[194, "pyart-graph-airborneradardisplay-label-xaxis-r"], [844, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[195, "pyart-graph-airborneradardisplay-label-xaxis-rays"], [845, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[196, "pyart-graph-airborneradardisplay-label-xaxis-time"], [846, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[197, "pyart-graph-airborneradardisplay-label-xaxis-x"], [847, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection": [[198, "pyart-graph-airborneradardisplay-label-xaxis-xsection"], [848, "pyart-graph-airborneradardisplay-label-xaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[199, "pyart-graph-airborneradardisplay-label-yaxis-field"], [849, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection": [[200, "pyart-graph-airborneradardisplay-label-yaxis-xsection"], [850, "pyart-graph-airborneradardisplay-label-yaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[201, "pyart-graph-airborneradardisplay-label-yaxis-y"], [851, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[202, "pyart-graph-airborneradardisplay-label-yaxis-z"], [852, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[203, "pyart-graph-airborneradardisplay-plot"], [853, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[204, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"], [854, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[205, "pyart-graph-airborneradardisplay-plot-colorbar"], [855, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[206, "pyart-graph-airborneradardisplay-plot-cr-raster"], [856, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[207, "pyart-graph-airborneradardisplay-plot-cross-hair"], [857, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[208, "pyart-graph-airborneradardisplay-plot-grid-lines"], [858, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[209, "pyart-graph-airborneradardisplay-plot-label"], [859, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[210, "pyart-graph-airborneradardisplay-plot-labels"], [860, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[211, "pyart-graph-airborneradardisplay-plot-ppi"], [861, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[212, "pyart-graph-airborneradardisplay-plot-range-ring"], [862, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[213, "pyart-graph-airborneradardisplay-plot-range-rings"], [863, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[214, "pyart-graph-airborneradardisplay-plot-ray"], [864, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[215, "pyart-graph-airborneradardisplay-plot-rhi"], [865, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[216, "pyart-graph-airborneradardisplay-plot-sweep-grid"], [866, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[217, "pyart-graph-airborneradardisplay-plot-vpt"], [867, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.plot_xsection": [[218, "pyart-graph-airborneradardisplay-plot-xsection"], [868, "pyart-graph-airborneradardisplay-plot-xsection"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[219, "pyart-graph-airborneradardisplay-set-aspect-ratio"], [869, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[220, "pyart-graph-airborneradardisplay-set-limits"], [870, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[221, "pyart-graph-gridmapdisplay"], [871, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[222, "pyart-graph-gridmapdisplay-cartopy-coastlines"], [872, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[223, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"], [873, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[224, "pyart-graph-gridmapdisplay-cartopy-states"], [874, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[225, "pyart-graph-gridmapdisplay-generate-filename"], [875, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[226, "pyart-graph-gridmapdisplay-generate-grid-title"], [876, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[227, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"], [877, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[228, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"], [878, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[229, "pyart-graph-gridmapdisplay-plot-colorbar"], [879, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[230, "pyart-graph-gridmapdisplay-plot-cross-section"], [880, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_cross_section_level": [[231, "pyart-graph-gridmapdisplay-plot-cross-section-level"], [881, "pyart-graph-gridmapdisplay-plot-cross-section-level"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[232, "pyart-graph-gridmapdisplay-plot-crosshairs"], [882, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[233, "pyart-graph-gridmapdisplay-plot-grid"], [883, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_grid_contour": [[234, "pyart-graph-gridmapdisplay-plot-grid-contour"], [884, "pyart-graph-gridmapdisplay-plot-grid-contour"]], "pyart.graph.GridMapDisplay.plot_grid_raw": [[235, "pyart-graph-gridmapdisplay-plot-grid-raw"], [885, "pyart-graph-gridmapdisplay-plot-grid-raw"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[236, "pyart-graph-gridmapdisplay-plot-latitude-slice"], [886, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[237, "pyart-graph-gridmapdisplay-plot-latitudinal-level"], [887, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[238, "pyart-graph-gridmapdisplay-plot-longitude-slice"], [888, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[239, "pyart-graph-gridmapdisplay-plot-longitudinal-level"], [889, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[240, "pyart-graph-gridmapdisplaybasemap"], [890, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[241, "pyart-graph-gridmapdisplaybasemap-generate-filename"], [891, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[242, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"], [892, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[243, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"], [893, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[244, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"], [894, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[245, "pyart-graph-gridmapdisplaybasemap-get-basemap"], [895, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[246, "pyart-graph-gridmapdisplaybasemap-plot-basemap"], [896, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[247, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"], [897, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[248, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"], [898, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[249, "pyart-graph-gridmapdisplaybasemap-plot-grid"], [899, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[250, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"], [900, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[251, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"], [901, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[252, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"], [902, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[253, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"], [903, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[254, "pyart-graph-radardisplay"], [904, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[255, "pyart-graph-radardisplay-generate-az-rhi-title"], [905, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[256, "pyart-graph-radardisplay-generate-filename"], [906, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[257, "pyart-graph-radardisplay-generate-ray-title"], [907, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[258, "pyart-graph-radardisplay-generate-title"], [908, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[259, "pyart-graph-radardisplay-generate-vpt-title"], [909, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.generate_xsection_title": [[260, "pyart-graph-radardisplay-generate-xsection-title"], [910, "pyart-graph-radardisplay-generate-xsection-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[261, "pyart-graph-radardisplay-label-xaxis-r"], [911, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[262, "pyart-graph-radardisplay-label-xaxis-rays"], [912, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[263, "pyart-graph-radardisplay-label-xaxis-time"], [913, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[264, "pyart-graph-radardisplay-label-xaxis-x"], [914, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_xaxis_xsection": [[265, "pyart-graph-radardisplay-label-xaxis-xsection"], [915, "pyart-graph-radardisplay-label-xaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[266, "pyart-graph-radardisplay-label-yaxis-field"], [916, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_xsection": [[267, "pyart-graph-radardisplay-label-yaxis-xsection"], [917, "pyart-graph-radardisplay-label-yaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[268, "pyart-graph-radardisplay-label-yaxis-y"], [918, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[269, "pyart-graph-radardisplay-label-yaxis-z"], [919, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[270, "pyart-graph-radardisplay-plot"], [920, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[271, "pyart-graph-radardisplay-plot-azimuth-to-rhi"], [921, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[272, "pyart-graph-radardisplay-plot-colorbar"], [922, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[273, "pyart-graph-radardisplay-plot-cr-raster"], [923, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[274, "pyart-graph-radardisplay-plot-cross-hair"], [924, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[275, "pyart-graph-radardisplay-plot-grid-lines"], [925, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[276, "pyart-graph-radardisplay-plot-label"], [926, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[277, "pyart-graph-radardisplay-plot-labels"], [927, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[278, "pyart-graph-radardisplay-plot-ppi"], [928, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[279, "pyart-graph-radardisplay-plot-range-ring"], [929, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[280, "pyart-graph-radardisplay-plot-range-rings"], [930, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[281, "pyart-graph-radardisplay-plot-ray"], [931, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[282, "pyart-graph-radardisplay-plot-rhi"], [932, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[283, "pyart-graph-radardisplay-plot-vpt"], [933, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.plot_xsection": [[284, "pyart-graph-radardisplay-plot-xsection"], [934, "pyart-graph-radardisplay-plot-xsection"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[285, "pyart-graph-radardisplay-set-aspect-ratio"], [935, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[286, "pyart-graph-radardisplay-set-limits"], [936, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[287, "pyart-graph-radarmapdisplay"], [937, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[288, "pyart-graph-radarmapdisplay-generate-az-rhi-title"], [938, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[289, "pyart-graph-radarmapdisplay-generate-filename"], [939, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[290, "pyart-graph-radarmapdisplay-generate-ray-title"], [940, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[291, "pyart-graph-radarmapdisplay-generate-title"], [941, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[292, "pyart-graph-radarmapdisplay-generate-vpt-title"], [942, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.generate_xsection_title": [[293, "pyart-graph-radarmapdisplay-generate-xsection-title"], [943, "pyart-graph-radarmapdisplay-generate-xsection-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[294, "pyart-graph-radarmapdisplay-label-xaxis-r"], [944, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[295, "pyart-graph-radarmapdisplay-label-xaxis-rays"], [945, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[296, "pyart-graph-radarmapdisplay-label-xaxis-time"], [946, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[297, "pyart-graph-radarmapdisplay-label-xaxis-x"], [947, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_xaxis_xsection": [[298, "pyart-graph-radarmapdisplay-label-xaxis-xsection"], [948, "pyart-graph-radarmapdisplay-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[299, "pyart-graph-radarmapdisplay-label-yaxis-field"], [949, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_xsection": [[300, "pyart-graph-radarmapdisplay-label-yaxis-xsection"], [950, "pyart-graph-radarmapdisplay-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[301, "pyart-graph-radarmapdisplay-label-yaxis-y"], [951, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[302, "pyart-graph-radarmapdisplay-label-yaxis-z"], [952, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[303, "pyart-graph-radarmapdisplay-plot"], [953, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[304, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"], [954, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[305, "pyart-graph-radarmapdisplay-plot-colorbar"], [955, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[306, "pyart-graph-radarmapdisplay-plot-cr-raster"], [956, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[307, "pyart-graph-radarmapdisplay-plot-cross-hair"], [957, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[308, "pyart-graph-radarmapdisplay-plot-grid-lines"], [958, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[309, "pyart-graph-radarmapdisplay-plot-label"], [959, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[310, "pyart-graph-radarmapdisplay-plot-labels"], [960, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[311, "pyart-graph-radarmapdisplay-plot-line-geo"], [961, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[312, "pyart-graph-radarmapdisplay-plot-line-xy"], [962, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[313, "pyart-graph-radarmapdisplay-plot-point"], [963, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[314, "pyart-graph-radarmapdisplay-plot-ppi"], [964, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[315, "pyart-graph-radarmapdisplay-plot-ppi-map"], [965, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[316, "pyart-graph-radarmapdisplay-plot-range-ring"], [966, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[317, "pyart-graph-radarmapdisplay-plot-range-rings"], [967, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[318, "pyart-graph-radarmapdisplay-plot-ray"], [968, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[319, "pyart-graph-radarmapdisplay-plot-rhi"], [969, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[320, "pyart-graph-radarmapdisplay-plot-vpt"], [970, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.plot_xsection": [[321, "pyart-graph-radarmapdisplay-plot-xsection"], [971, "pyart-graph-radarmapdisplay-plot-xsection"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[322, "pyart-graph-radarmapdisplay-set-aspect-ratio"], [972, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[323, "pyart-graph-radarmapdisplay-set-limits"], [973, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[324, "pyart-graph-radarmapdisplaybasemap"], [974, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[325, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"], [975, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[326, "pyart-graph-radarmapdisplaybasemap-generate-filename"], [976, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[327, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"], [977, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[328, "pyart-graph-radarmapdisplaybasemap-generate-title"], [978, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[329, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"], [979, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title": [[330, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"], [980, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[331, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"], [981, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[332, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"], [982, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[333, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"], [983, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[334, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"], [984, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection": [[335, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"], [985, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[336, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"], [986, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection": [[337, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"], [987, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[338, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"], [988, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[339, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"], [989, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[340, "pyart-graph-radarmapdisplaybasemap-plot"], [990, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[341, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"], [991, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[342, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"], [992, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[343, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"], [993, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[344, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"], [994, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[345, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"], [995, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[346, "pyart-graph-radarmapdisplaybasemap-plot-label"], [996, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[347, "pyart-graph-radarmapdisplaybasemap-plot-labels"], [997, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[348, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"], [998, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[349, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"], [999, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[350, "pyart-graph-radarmapdisplaybasemap-plot-point"], [1000, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[351, "pyart-graph-radarmapdisplaybasemap-plot-ppi"], [1001, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[352, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"], [1002, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[353, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"], [1003, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[354, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"], [1004, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[355, "pyart-graph-radarmapdisplaybasemap-plot-ray"], [1005, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[356, "pyart-graph-radarmapdisplaybasemap-plot-rhi"], [1006, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[357, "pyart-graph-radarmapdisplaybasemap-plot-vpt"], [1007, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.plot_xsection": [[358, "pyart-graph-radarmapdisplaybasemap-plot-xsection"], [1008, "pyart-graph-radarmapdisplaybasemap-plot-xsection"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[359, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"], [1009, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[360, "pyart-graph-radarmapdisplaybasemap-set-limits"], [1010, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.io.make_time_unit_str": [[361, "pyart-io-make-time-unit-str"], [1014, "pyart-io-make-time-unit-str"]], "pyart.io.prepare_for_read": [[362, "pyart-io-prepare-for-read"], [1015, "pyart-io-prepare-for-read"]], "pyart.io.read": [[363, "pyart-io-read"], [1016, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[364, "pyart-io-read-arm-sonde"], [1017, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[365, "pyart-io-read-arm-sonde-vap"], [1018, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[366, "pyart-io-read-cfradial"], [1019, "pyart-io-read-cfradial"]], "pyart.io.read_cfradial2": [[367, "pyart-io-read-cfradial2"], [1020, "pyart-io-read-cfradial2"]], "pyart.io.read_chl": [[368, "pyart-io-read-chl"], [1021, "pyart-io-read-chl"]], "pyart.io.read_grid": [[369, "pyart-io-read-grid"], [1022, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[370, "pyart-io-read-grid-mdv"], [1023, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[371, "pyart-io-read-mdv"], [1024, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[372, "pyart-io-read-nexrad-archive"], [1025, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[373, "pyart-io-read-nexrad-cdm"], [1026, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[374, "pyart-io-read-nexrad-level3"], [1027, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[375, "pyart-io-read-rsl"], [1028, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[376, "pyart-io-read-sigmet"], [1029, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[377, "pyart-io-read-uf"], [1030, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[378, "pyart-io-write-cfradial"], [1031, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[379, "pyart-io-write-grid"], [1032, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[380, "pyart-io-write-grid-geotiff"], [1033, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[381, "pyart-io-write-grid-mdv"], [1034, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[382, "pyart-io-write-uf"], [1035, "pyart-io-write-uf"]], "pyart.lazydict.LazyLoadDict": [[383, "pyart-lazydict-lazyloaddict"], [1037, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.__contains__": [[384, "pyart-lazydict-lazyloaddict-contains"]], "pyart.lazydict.LazyLoadDict.__delattr__": [[385, "pyart-lazydict-lazyloaddict-delattr"]], "pyart.lazydict.LazyLoadDict.__delitem__": [[386, "pyart-lazydict-lazyloaddict-delitem"]], "pyart.lazydict.LazyLoadDict.__dir__": [[387, "pyart-lazydict-lazyloaddict-dir"]], "pyart.lazydict.LazyLoadDict.__eq__": [[388, "pyart-lazydict-lazyloaddict-eq"]], "pyart.lazydict.LazyLoadDict.__format__": [[389, "pyart-lazydict-lazyloaddict-format"]], "pyart.lazydict.LazyLoadDict.__ge__": [[390, "pyart-lazydict-lazyloaddict-ge"]], "pyart.lazydict.LazyLoadDict.__getattribute__": [[391, "pyart-lazydict-lazyloaddict-getattribute"]], "pyart.lazydict.LazyLoadDict.__getitem__": [[392, "pyart-lazydict-lazyloaddict-getitem"]], "pyart.lazydict.LazyLoadDict.__getstate__": [[393, "pyart-lazydict-lazyloaddict-getstate"]], "pyart.lazydict.LazyLoadDict.__gt__": [[394, "pyart-lazydict-lazyloaddict-gt"]], "pyart.lazydict.LazyLoadDict.__init__": [[395, "pyart-lazydict-lazyloaddict-init"]], "pyart.lazydict.LazyLoadDict.__init_subclass__": [[396, "pyart-lazydict-lazyloaddict-init-subclass"]], "pyart.lazydict.LazyLoadDict.__iter__": [[397, "pyart-lazydict-lazyloaddict-iter"]], "pyart.lazydict.LazyLoadDict.__le__": [[398, "pyart-lazydict-lazyloaddict-le"]], "pyart.lazydict.LazyLoadDict.__len__": [[399, "pyart-lazydict-lazyloaddict-len"]], "pyart.lazydict.LazyLoadDict.__lt__": [[400, "pyart-lazydict-lazyloaddict-lt"]], "pyart.lazydict.LazyLoadDict.__ne__": [[401, "pyart-lazydict-lazyloaddict-ne"]], "pyart.lazydict.LazyLoadDict.__new__": [[402, "pyart-lazydict-lazyloaddict-new"]], "pyart.lazydict.LazyLoadDict.__reduce__": [[403, "pyart-lazydict-lazyloaddict-reduce"]], "pyart.lazydict.LazyLoadDict.__reduce_ex__": [[404, "pyart-lazydict-lazyloaddict-reduce-ex"]], "pyart.lazydict.LazyLoadDict.__repr__": [[405, "pyart-lazydict-lazyloaddict-repr"]], "pyart.lazydict.LazyLoadDict.__setattr__": [[406, "pyart-lazydict-lazyloaddict-setattr"]], "pyart.lazydict.LazyLoadDict.__setitem__": [[407, "pyart-lazydict-lazyloaddict-setitem"]], "pyart.lazydict.LazyLoadDict.__sizeof__": [[408, "pyart-lazydict-lazyloaddict-sizeof"]], "pyart.lazydict.LazyLoadDict.__str__": [[409, "pyart-lazydict-lazyloaddict-str"]], "pyart.lazydict.LazyLoadDict.__subclasshook__": [[410, "pyart-lazydict-lazyloaddict-subclasshook"]], "pyart.lazydict.LazyLoadDict.clear": [[411, "pyart-lazydict-lazyloaddict-clear"], [1038, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[412, "pyart-lazydict-lazyloaddict-copy"], [1039, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[413, "pyart-lazydict-lazyloaddict-get"], [1040, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[414, "pyart-lazydict-lazyloaddict-has-key"], [1041, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[415, "pyart-lazydict-lazyloaddict-items"], [1042, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[416, "pyart-lazydict-lazyloaddict-keys"], [1043, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[417, "pyart-lazydict-lazyloaddict-pop"], [1044, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[418, "pyart-lazydict-lazyloaddict-popitem"], [1045, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[419, "pyart-lazydict-lazyloaddict-set-lazy"], [1046, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[420, "pyart-lazydict-lazyloaddict-setdefault"], [1047, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[421, "pyart-lazydict-lazyloaddict-update"], [1048, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[422, "pyart-lazydict-lazyloaddict-values"], [1049, "pyart-lazydict-lazyloaddict-values"]], "pyart.retrieve._destandardize": [[423, "pyart-retrieve-destandardize"]], "pyart.retrieve._get_res_vol_sides": [[424, "pyart-retrieve-get-res-vol-sides"]], "pyart.retrieve.atmospheric_gas_att": [[425, "pyart-retrieve-atmospheric-gas-att"], [1076, "pyart-retrieve-atmospheric-gas-att"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[426, "pyart-retrieve-calculate-snr-from-reflectivity"], [1077, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[427, "pyart-retrieve-calculate-velocity-texture"], [1078, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[428, "pyart-retrieve-composite-reflectivity"], [1079, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_Doppler_velocity": [[429, "pyart-retrieve-compute-doppler-velocity"], [1080, "pyart-retrieve-compute-doppler-velocity"]], "pyart.retrieve.compute_Doppler_velocity_iq": [[430, "pyart-retrieve-compute-doppler-velocity-iq"], [1081, "pyart-retrieve-compute-doppler-velocity-iq"]], "pyart.retrieve.compute_Doppler_width": [[431, "pyart-retrieve-compute-doppler-width"], [1082, "pyart-retrieve-compute-doppler-width"]], "pyart.retrieve.compute_Doppler_width_iq": [[432, "pyart-retrieve-compute-doppler-width-iq"], [1083, "pyart-retrieve-compute-doppler-width-iq"]], "pyart.retrieve.compute_apparent_profile": [[433, "pyart-retrieve-compute-apparent-profile"], [1084, "pyart-retrieve-compute-apparent-profile"]], "pyart.retrieve.compute_bird_density": [[434, "pyart-retrieve-compute-bird-density"], [1085, "pyart-retrieve-compute-bird-density"]], "pyart.retrieve.compute_ccor": [[435, "pyart-retrieve-compute-ccor"], [1086, "pyart-retrieve-compute-ccor"]], "pyart.retrieve.compute_cdr": [[436, "pyart-retrieve-compute-cdr"], [1087, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_centroids": [[437, "pyart-retrieve-compute-centroids"], [1088, "pyart-retrieve-compute-centroids"]], "pyart.retrieve.compute_differential_phase": [[438, "pyart-retrieve-compute-differential-phase"], [1089, "pyart-retrieve-compute-differential-phase"]], "pyart.retrieve.compute_differential_phase_iq": [[439, "pyart-retrieve-compute-differential-phase-iq"], [1090, "pyart-retrieve-compute-differential-phase-iq"]], "pyart.retrieve.compute_differential_reflectivity": [[440, "pyart-retrieve-compute-differential-reflectivity"], [1091, "pyart-retrieve-compute-differential-reflectivity"]], "pyart.retrieve.compute_differential_reflectivity_iq": [[441, "pyart-retrieve-compute-differential-reflectivity-iq"], [1092, "pyart-retrieve-compute-differential-reflectivity-iq"]], "pyart.retrieve.compute_evp": [[442, "pyart-retrieve-compute-evp"], [1093, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_iq": [[443, "pyart-retrieve-compute-iq"], [1094, "pyart-retrieve-compute-iq"]], "pyart.retrieve.compute_l": [[444, "pyart-retrieve-compute-l"], [1095, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_mean_phase_iq": [[445, "pyart-retrieve-compute-mean-phase-iq"], [1096, "pyart-retrieve-compute-mean-phase-iq"]], "pyart.retrieve.compute_noise_power": [[446, "pyart-retrieve-compute-noise-power"], [1097, "pyart-retrieve-compute-noise-power"]], "pyart.retrieve.compute_noisedBZ": [[447, "pyart-retrieve-compute-noisedbz"], [1098, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_pol_variables": [[448, "pyart-retrieve-compute-pol-variables"], [1099, "pyart-retrieve-compute-pol-variables"]], "pyart.retrieve.compute_pol_variables_iq": [[449, "pyart-retrieve-compute-pol-variables-iq"], [1100, "pyart-retrieve-compute-pol-variables-iq"]], "pyart.retrieve.compute_qvp": [[450, "pyart-retrieve-compute-qvp"], [1101, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_radial_noise_hs": [[451, "pyart-retrieve-compute-radial-noise-hs"], [1102, "pyart-retrieve-compute-radial-noise-hs"]], "pyart.retrieve.compute_radial_noise_ivic": [[452, "pyart-retrieve-compute-radial-noise-ivic"], [1103, "pyart-retrieve-compute-radial-noise-ivic"]], "pyart.retrieve.compute_rcs": [[453, "pyart-retrieve-compute-rcs"], [1104, "pyart-retrieve-compute-rcs"]], "pyart.retrieve.compute_rcs_from_pr": [[454, "pyart-retrieve-compute-rcs-from-pr"], [1105, "pyart-retrieve-compute-rcs-from-pr"]], "pyart.retrieve.compute_refl_from_zdr": [[455, "pyart-retrieve-compute-refl-from-zdr"], [1106, "pyart-retrieve-compute-refl-from-zdr"]], "pyart.retrieve.compute_reflectivity": [[456, "pyart-retrieve-compute-reflectivity"], [1107, "pyart-retrieve-compute-reflectivity"]], "pyart.retrieve.compute_reflectivity_iq": [[457, "pyart-retrieve-compute-reflectivity-iq"], [1108, "pyart-retrieve-compute-reflectivity-iq"]], "pyart.retrieve.compute_rhohv": [[458, "pyart-retrieve-compute-rhohv"], [1109, "pyart-retrieve-compute-rhohv"]], "pyart.retrieve.compute_rhohv_iq": [[459, "pyart-retrieve-compute-rhohv-iq"], [1110, "pyart-retrieve-compute-rhohv-iq"]], "pyart.retrieve.compute_rqvp": [[460, "pyart-retrieve-compute-rqvp"], [1111, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_signal_power": [[461, "pyart-retrieve-compute-signal-power"], [1112, "pyart-retrieve-compute-signal-power"]], "pyart.retrieve.compute_snr": [[462, "pyart-retrieve-compute-snr"], [1113, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_spectra": [[463, "pyart-retrieve-compute-spectra"], [1114, "pyart-retrieve-compute-spectra"]], "pyart.retrieve.compute_spectral_differential_phase": [[464, "pyart-retrieve-compute-spectral-differential-phase"], [1115, "pyart-retrieve-compute-spectral-differential-phase"]], "pyart.retrieve.compute_spectral_differential_reflectivity": [[465, "pyart-retrieve-compute-spectral-differential-reflectivity"], [1116, "pyart-retrieve-compute-spectral-differential-reflectivity"]], "pyart.retrieve.compute_spectral_noise": [[466, "pyart-retrieve-compute-spectral-noise"], [1117, "pyart-retrieve-compute-spectral-noise"]], "pyart.retrieve.compute_spectral_phase": [[467, "pyart-retrieve-compute-spectral-phase"], [1118, "pyart-retrieve-compute-spectral-phase"]], "pyart.retrieve.compute_spectral_power": [[468, "pyart-retrieve-compute-spectral-power"], [1119, "pyart-retrieve-compute-spectral-power"]], "pyart.retrieve.compute_spectral_reflectivity": [[469, "pyart-retrieve-compute-spectral-reflectivity"], [1120, "pyart-retrieve-compute-spectral-reflectivity"]], "pyart.retrieve.compute_spectral_rhohv": [[470, "pyart-retrieve-compute-spectral-rhohv"], [1121, "pyart-retrieve-compute-spectral-rhohv"]], "pyart.retrieve.compute_st1_iq": [[471, "pyart-retrieve-compute-st1-iq"], [1122, "pyart-retrieve-compute-st1-iq"]], "pyart.retrieve.compute_st2_iq": [[472, "pyart-retrieve-compute-st2-iq"], [1123, "pyart-retrieve-compute-st2-iq"]], "pyart.retrieve.compute_svp": [[473, "pyart-retrieve-compute-svp"], [1124, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[474, "pyart-retrieve-compute-ts-along-coord"], [1125, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vol_refl": [[475, "pyart-retrieve-compute-vol-refl"], [1126, "pyart-retrieve-compute-vol-refl"]], "pyart.retrieve.compute_vp": [[476, "pyart-retrieve-compute-vp"], [1127, "pyart-retrieve-compute-vp"]], "pyart.retrieve.compute_wbn_iq": [[477, "pyart-retrieve-compute-wbn-iq"], [1128, "pyart-retrieve-compute-wbn-iq"]], "pyart.retrieve.conv_strat_raut": [[478, "pyart-retrieve-conv-strat-raut"], [1129, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[479, "pyart-retrieve-conv-strat-yuter"], [1130, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.data_for_centroids": [[480, "pyart-retrieve-data-for-centroids"], [1131, "pyart-retrieve-data-for-centroids"]], "pyart.retrieve.dealias_spectra": [[481, "pyart-retrieve-dealias-spectra"], [1132, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.detect_ml": [[482, "pyart-retrieve-detect-ml"], [1133, "pyart-retrieve-detect-ml"]], "Paremeters": [[482, "paremeters"], [1133, "paremeters"]], "pyart.retrieve.determine_medoids": [[483, "pyart-retrieve-determine-medoids"], [1134, "pyart-retrieve-determine-medoids"]], "pyart.retrieve.est_rain_rate_a": [[484, "pyart-retrieve-est-rain-rate-a"], [1135, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[485, "pyart-retrieve-est-rain-rate-hydro"], [1136, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[486, "pyart-retrieve-est-rain-rate-kdp"], [1137, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[487, "pyart-retrieve-est-rain-rate-z"], [1138, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[488, "pyart-retrieve-est-rain-rate-za"], [1139, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[489, "pyart-retrieve-est-rain-rate-zkdp"], [1140, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[490, "pyart-retrieve-est-rain-rate-zpoly"], [1141, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.est_vertical_windshear": [[491, "pyart-retrieve-est-vertical-windshear"], [1142, "pyart-retrieve-est-vertical-windshear"]], "pyart.retrieve.est_vertical_windshear_lidar": [[492, "pyart-retrieve-est-vertical-windshear-lidar"], [1143, "pyart-retrieve-est-vertical-windshear-lidar"]], "pyart.retrieve.est_wind_profile": [[493, "pyart-retrieve-est-wind-profile"], [1144, "pyart-retrieve-est-wind-profile"]], "pyart.retrieve.est_wind_vel": [[494, "pyart-retrieve-est-wind-vel"], [1145, "pyart-retrieve-est-wind-vel"]], "pyart.retrieve.feature_detection": [[495, "pyart-retrieve-feature-detection"], [1146, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[496, "pyart-retrieve-fetch-radar-time-profile"], [1147, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.gecsx": [[497, "pyart-retrieve-gecsx"], [1148, "pyart-retrieve-gecsx"]], "pyart.retrieve.get_coeff_attg": [[498, "pyart-retrieve-get-coeff-attg"], [1149, "pyart-retrieve-get-coeff-attg"]], "pyart.retrieve.get_freq_band": [[499, "pyart-retrieve-get-freq-band"], [1150, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.get_iso0_val": [[500, "pyart-retrieve-get-iso0-val"], [1151, "pyart-retrieve-get-iso0-val"]], "pyart.retrieve.get_ml_rng_limits": [[501, "pyart-retrieve-get-ml-rng-limits"], [1152, "pyart-retrieve-get-ml-rng-limits"]], "pyart.retrieve.grid_displacement_pc": [[502, "pyart-retrieve-grid-displacement-pc"], [1153, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[503, "pyart-retrieve-grid-shift"], [1154, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[504, "pyart-retrieve-hydroclass-semisupervised"], [1155, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_leastsquare_double_window": [[505, "pyart-retrieve-kdp-leastsquare-double-window"], [1156, "pyart-retrieve-kdp-leastsquare-double-window"]], "pyart.retrieve.kdp_leastsquare_single_window": [[506, "pyart-retrieve-kdp-leastsquare-single-window"], [1157, "pyart-retrieve-kdp-leastsquare-single-window"]], "pyart.retrieve.kdp_maesaka": [[507, "pyart-retrieve-kdp-maesaka"], [1158, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[508, "pyart-retrieve-kdp-schneebeli"], [1159, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[509, "pyart-retrieve-kdp-vulpiani"], [1160, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[510, "pyart-retrieve-map-profile-to-gates"], [1161, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.melting_layer_giangrande": [[511, "pyart-retrieve-melting-layer-giangrande"], [1162, "pyart-retrieve-melting-layer-giangrande"]], "pyart.retrieve.melting_layer_hydroclass": [[512, "pyart-retrieve-melting-layer-hydroclass"], [1163, "pyart-retrieve-melting-layer-hydroclass"]], "pyart.retrieve.melting_layer_mf": [[513, "pyart-retrieve-melting-layer-mf"], [1164, "pyart-retrieve-melting-layer-mf"]], "pyart.retrieve.quasi_vertical_profile": [[514, "pyart-retrieve-quasi-vertical-profile"], [1165, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.select_samples": [[515, "pyart-retrieve-select-samples"], [1166, "pyart-retrieve-select-samples"]], "pyart.retrieve.steiner_conv_strat": [[516, "pyart-retrieve-steiner-conv-strat"], [1167, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.synthetic_obs_distribution": [[517, "pyart-retrieve-synthetic-obs-distribution"], [1168, "pyart-retrieve-synthetic-obs-distribution"]], "pyart.retrieve.vad_browning": [[518, "pyart-retrieve-vad-browning"], [1170, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[519, "pyart-retrieve-vad-michelson"], [1171, "pyart-retrieve-vad-michelson"]], "pyart.util.EPOCH_UNITS": [[520, "pyart-util-epoch-units"]], "pyart.util.angular_mean": [[521, "pyart-util-angular-mean"], [1259, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[522, "pyart-util-angular-mean-deg"], [1260, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[523, "pyart-util-angular-std"], [1261, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[524, "pyart-util-angular-std-deg"], [1262, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[525, "pyart-util-angular-texture-2d"], [1263, "pyart-util-angular-texture-2d"]], "pyart.util.colocated_gates": [[526, "pyart-util-colocated-gates"], [1264, "pyart-util-colocated-gates"]], "pyart.util.colocated_gates2": [[527, "pyart-util-colocated-gates2"], [1265, "pyart-util-colocated-gates2"]], "pyart.util.compute_azimuthal_average": [[528, "pyart-util-compute-azimuthal-average"], [1266, "pyart-util-compute-azimuthal-average"]], "pyart.util.compute_corr": [[529, "pyart-util-compute-corr"], [1267, "pyart-util-compute-corr"]], "pyart.util.compute_directional_stats": [[530, "pyart-util-compute-directional-stats"], [1268, "pyart-util-compute-directional-stats"]], "pyart.util.compute_mse": [[531, "pyart-util-compute-mse"], [1269, "pyart-util-compute-mse"]], "pyart.util.compute_nse": [[532, "pyart-util-compute-nse"], [1270, "pyart-util-compute-nse"]], "pyart.util.cross_section_ppi": [[533, "pyart-util-cross-section-ppi"], [1271, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[534, "pyart-util-cross-section-rhi"], [1272, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[535, "pyart-util-datetime-from-dataset"], [1273, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[536, "pyart-util-datetime-from-grid"], [1274, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[537, "pyart-util-datetime-from-radar"], [1275, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[538, "pyart-util-datetimes-from-dataset"], [1276, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[539, "pyart-util-datetimes-from-radar"], [1277, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[540, "pyart-util-determine-sweeps"], [1278, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[541, "pyart-util-estimate-noise-hs74"], [1279, "pyart-util-estimate-noise-hs74"]], "pyart.util.estimate_noise_ivic13": [[542, "pyart-util-estimate-noise-ivic13"], [1280, "pyart-util-estimate-noise-ivic13"]], "pyart.util.find_neighbour_gates": [[543, "pyart-util-find-neighbour-gates"], [1281, "pyart-util-find-neighbour-gates"]], "pyart.util.for_azimuth": [[544, "pyart-util-for-azimuth"], [1282, "pyart-util-for-azimuth"]], "Assumptions": [[544, "assumptions"], [571, "assumptions"], [1282, "assumptions"], [1309, "assumptions"]], "pyart.util.get_column_rays": [[545, "pyart-util-get-column-rays"], [1283, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[546, "pyart-util-get-field-location"], [1284, "pyart-util-get-field-location"]], "pyart.util.get_ivic_flat_reg_var_max": [[547, "pyart-util-get-ivic-flat-reg-var-max"], [1285, "pyart-util-get-ivic-flat-reg-var-max"]], "pyart.util.get_ivic_pct": [[548, "pyart-util-get-ivic-pct"], [1286, "pyart-util-get-ivic-pct"]], "pyart.util.get_ivic_snr_thr": [[549, "pyart-util-get-ivic-snr-thr"], [1287, "pyart-util-get-ivic-snr-thr"]], "pyart.util.get_statistic": [[550, "pyart-util-get-statistic"], [1288, "pyart-util-get-statistic"]], "pyart.util.get_target_elevations": [[551, "pyart-util-get-target-elevations"], [1289, "pyart-util-get-target-elevations"]], "pyart.util.grid_texture_2d": [[552, "pyart-util-grid-texture-2d"], [1290, "pyart-util-grid-texture-2d"]], "pyart.util.image_mute_radar": [[553, "pyart-util-image-mute-radar"], [1291, "pyart-util-image-mute-radar"]], "pyart.util.interpol_spectra": [[554, "pyart-util-interpol-spectra"], [1292, "pyart-util-interpol-spectra"]], "pyart.util.intersection": [[555, "pyart-util-intersection"], [1293, "pyart-util-intersection"]], "pyart.util.interval_mean": [[556, "pyart-util-interval-mean"], [1294, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[557, "pyart-util-interval-std"], [1295, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[558, "pyart-util-is-vpt"], [1296, "pyart-util-is-vpt"]], "pyart.util.ivic_flat_reg_var_max_table": [[559, "pyart-util-ivic-flat-reg-var-max-table"], [1297, "pyart-util-ivic-flat-reg-var-max-table"]], "pyart.util.ivic_flat_reg_wind_len_table": [[560, "pyart-util-ivic-flat-reg-wind-len-table"], [1298, "pyart-util-ivic-flat-reg-wind-len-table"]], "pyart.util.ivic_pct_table": [[561, "pyart-util-ivic-pct-table"], [1299, "pyart-util-ivic-pct-table"]], "pyart.util.ivic_snr_thr_table": [[562, "pyart-util-ivic-snr-thr-table"], [1300, "pyart-util-ivic-snr-thr-table"]], "pyart.util.join_radar": [[563, "pyart-util-join-radar"], [1301, "pyart-util-join-radar"]], "pyart.util.join_spectra": [[564, "pyart-util-join-spectra"], [1302, "pyart-util-join-spectra"]], "pyart.util.ma_broadcast_to": [[565, "pyart-util-ma-broadcast-to"], [1303, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[566, "pyart-util-mean-of-two-angles"], [1304, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[567, "pyart-util-mean-of-two-angles-deg"], [1305, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.radar_from_spectra": [[568, "pyart-util-radar-from-spectra"], [1306, "pyart-util-radar-from-spectra"]], "pyart.util.rolling_window": [[569, "pyart-util-rolling-window"], [1307, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[570, "pyart-util-simulated-vel-from-profile"], [1308, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[571, "pyart-util-sphere-distance"], [1309, "pyart-util-sphere-distance"]], "Parameter": [[571, "parameter"], [1309, "parameter"]], "pyart.util.subset_radar": [[572, "pyart-util-subset-radar"], [1310, "pyart-util-subset-radar"]], "pyart.util.subset_radar_spectra": [[573, "pyart-util-subset-radar-spectra"], [1311, "pyart-util-subset-radar-spectra"]], "pyart.util.texture": [[574, "pyart-util-texture"], [1312, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[575, "pyart-util-texture-along-ray"], [1313, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[576, "pyart-util-to-vpt"], [1314, "pyart-util-to-vpt"]], "pyart.util.weighted_kurtosis": [[577, "pyart-util-weighted-kurtosis"], [1315, "pyart-util-weighted-kurtosis"]], "pyart.util.weighted_mean": [[578, "pyart-util-weighted-mean"], [1316, "pyart-util-weighted-mean"]], "pyart.util.weighted_skew": [[579, "pyart-util-weighted-skew"], [1317, "pyart-util-weighted-skew"]], "pyart.util.weighted_variance": [[580, "pyart-util-weighted-variance"], [1318, "pyart-util-weighted-variance"]], "pyart._debug_info": [[581, "pyart-debug-info"]], "pyart.aux_io": [[582, "pyart-aux-io"]], "Auxiliary input and output (pyart.aux_io)": [[582, "auxiliary-input-and-output-pyart-aux-io"]], "Reading radar data": [[582, "reading-radar-data"], [1013, "reading-radar-data"]], "Writing radar data": [[582, "writing-radar-data"], [1013, "writing-radar-data"]], "Special use": [[582, "special-use"], [1013, "special-use"]], "pyart.aux_io.convert_data": [[583, "pyart-aux-io-convert-data"]], "pyart.aux_io.get_library": [[585, "pyart-aux-io-get-library"]], "pyart.aux_io.read_edge_netcdf": [[595, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_file_c": [[596, "pyart-aux-io-read-file-c"]], "pyart.aux_io.read_file_py": [[597, "pyart-aux-io-read-file-py"]], "pyart.aux_io.read_knmi_grid_h5": [[604, "pyart-aux-io-read-knmi-grid-h5"]], "pyart.aux_io.read_mch_vad": [[605, "pyart-aux-io-read-mch-vad"]], "pyart.aux_io.read_product_c": [[613, "pyart-aux-io-read-product-c"]], "pyart.aux_io.read_product_py": [[614, "pyart-aux-io-read-product-py"]], "pyart.aux_io.read_psr_cpi_header": [[615, "pyart-aux-io-read-psr-cpi-header"]], "pyart.aux_io.read_psr_header": [[616, "pyart-aux-io-read-psr-header"]], "pyart.aux_io.read_psr_spectra": [[617, "pyart-aux-io-read-psr-spectra"]], "pyart.aux_io.read_sinarame_h5": [[622, "pyart-aux-io-read-sinarame-h5"]], "pyart.bridge": [[630, "pyart-bridge"]], "Bridging to other toolkits (pyart.bridge)": [[630, "bridging-to-other-toolkits-pyart-bridge"]], "Phase functions": [[630, "phase-functions"]], "pyart.config": [[632, "pyart-config"], [632, "id1"]], "pyart.config.get_KE": [[637, "pyart-config-get-ke"]], "pyart.core": [[645, "pyart-core"]], "Core (pyart.core)": [[645, "core-pyart-core"]], "Core classes": [[645, "core-classes"]], "Coordinate transformations": [[645, "coordinate-transformations"]], "pyart.correct": [[727, "pyart-correct"]], "Radar Corrections (pyart.correct)": [[727, "radar-corrections-pyart-correct"]], "Velocity unfolding": [[727, "velocity-unfolding"]], "Attenuation": [[727, "attenuation"]], "Phase processing": [[727, "phase-processing"]], "Other corrections": [[727, "other-corrections"]], "Helper functions": [[727, "helper-functions"]], "pyart.correct.GateFilter": [[728, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[729, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[730, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[731, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[732, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[733, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[734, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[735, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[736, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[737, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[738, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[739, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[740, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[741, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[742, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[743, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[744, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[745, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[746, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[747, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[748, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[749, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[750, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[751, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[752, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[753, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[754, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[755, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[756, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[757, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[758, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[761, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[762, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.correct_visibility": [[764, "pyart-correct-correct-visibility"]], "pyart.correct.correct_vpr": [[765, "pyart-correct-correct-vpr"]], "pyart.correct.correct_vpr_spatialised": [[766, "pyart-correct-correct-vpr-spatialised"]], "pyart.correct.despeckle_field": [[770, "pyart-correct-despeckle-field"]], "pyart.correct.est_rhohv_rain": [[772, "pyart-correct-est-rhohv-rain"]], "pyart.correct.est_zdr_precip": [[773, "pyart-correct-est-zdr-precip"]], "pyart.correct.est_zdr_snow": [[774, "pyart-correct-est-zdr-snow"]], "pyart.correct.gauss_fit": [[776, "pyart-correct-gauss-fit"]], "pyart.correct.get_sun_hits": [[778, "pyart-correct-get-sun-hits"]], "pyart.correct.get_sun_hits_ivic": [[779, "pyart-correct-get-sun-hits-ivic"]], "pyart.correct.get_sun_hits_psr": [[780, "pyart-correct-get-sun-hits-psr"]], "pyart.correct.moment_based_gate_filter": [[781, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.retrieval_result": [[785, "pyart-correct-retrieval-result"]], "pyart.correct.selfconsistency_bias": [[787, "pyart-correct-selfconsistency-bias"]], "pyart.correct.selfconsistency_bias2": [[788, "pyart-correct-selfconsistency-bias2"]], "pyart.correct.selfconsistency_kdp_phidp": [[789, "pyart-correct-selfconsistency-kdp-phidp"]], "pyart.correct.sun_retrieval": [[797, "pyart-correct-sun-retrieval"]], "pyart.exceptions": [[798, "pyart-exceptions"], [798, "id1"]], "pyart.filters": [[799, "pyart-filters"]], "Filters (pyart.filters)": [[799, "filters-pyart-filters"]], "Filtering radar data": [[799, "filtering-radar-data"]], "pyart.graph": [[836, "pyart-graph"]], "Graphing (pyart.graph)": [[836, "graphing-pyart-graph"]], "Plotting radar data": [[836, "plotting-radar-data"]], "Plotting grid data": [[836, "plotting-grid-data"]], "pyart.graph.plot_convstrat_scheme": [[1011, "pyart-graph-plot-convstrat-scheme"]], "pyart.graph.plot_maxcappi": [[1012, "pyart-graph-plot-maxcappi"]], "pyart.io": [[1013, "pyart-io"]], "Input and output (pyart.io)": [[1013, "input-and-output-pyart-io"]], "Reading grid data": [[1013, "reading-grid-data"]], "Writing grid data": [[1013, "writing-grid-data"]], "Reading Sonde data": [[1013, "reading-sonde-data"]], "pyart.lazydict": [[1036, "pyart-lazydict"], [1036, "id1"]], "pyart.lazydict.MutableMapping": [[1050, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[1051, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[1052, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[1053, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[1054, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[1055, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[1056, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[1057, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[1058, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[1059, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[1060, "pyart-map"]], "pyart.map.GateMapper": [[1061, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[1062, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[1063, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[1064, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[1065, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[1066, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[1067, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[1068, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[1069, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[1070, "pyart-map-grid-rhi-sweeps"]], "pyart.map.gridstats_from_radar": [[1071, "pyart-map-gridstats-from-radar"]], "pyart.map.map_gates_to_grid": [[1072, "pyart-map-map-gates-to-grid"]], "pyart.map.map_gates_to_grid_to_list": [[1073, "pyart-map-map-gates-to-grid-to-list"]], "pyart.map.map_to_grid": [[1074, "pyart-map-map-to-grid"]], "pyart.retrieve": [[1075, "pyart-retrieve"]], "Radar Retrievals (pyart.retrieve)": [[1075, "radar-retrievals-pyart-retrieve"]], "Composite Reflectivity": [[1075, "composite-reflectivity"]], "Melting Layer (ML) Detection": [[1075, "melting-layer-ml-detection"]], "KDP Processing": [[1075, "kdp-processing"]], "Echo Classification": [[1075, "echo-classification"]], "Gate ID": [[1075, "gate-id"]], "Simple Moment Calculations": [[1075, "simple-moment-calculations"]], "QPE (Quantitative Precipitation Estimation)": [[1075, "qpe-quantitative-precipitation-estimation"]], "Advection": [[1075, "advection"]], "Wind Estimation": [[1075, "wind-estimation"]], "VAD (Velocity Azimuth Display)": [[1075, "vad-velocity-azimuth-display"]], "QVP (Quasi Vertical Profile) Retrievals": [[1075, "qvp-quasi-vertical-profile-retrievals"]], "Spectra Processing": [[1075, "spectra-processing"]], "IQ Processing": [[1075, "iq-processing"]], "Visibility estimation": [[1075, "visibility-estimation"]], "pyart.retrieve.texture_of_complex_phase": [[1169, "pyart-retrieve-texture-of-complex-phase"]], "pyart.testing": [[1172, "pyart-testing"]], "pyart.testing.Grid": [[1173, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[1174, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[1175, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[1176, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[1177, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[1178, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[1179, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[1180, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[1181, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[1182, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[1183, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[1184, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[1185, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[1186, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[1187, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[1188, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[1189, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[1190, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[1191, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[1192, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[1193, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[1194, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[1195, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[1196, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[1197, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[1198, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[1199, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[1200, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[1201, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[1202, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[1203, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[1204, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[1205, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[1206, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[1207, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[1208, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[1209, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[1210, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[1211, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[1212, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[1213, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[1214, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.add_field": [[1215, "pyart-testing-radarspectra-add-field"]], "pyart.testing.RadarSpectra.add_field_like": [[1216, "pyart-testing-radarspectra-add-field-like"]], "pyart.testing.RadarSpectra.add_filter": [[1217, "pyart-testing-radarspectra-add-filter"]], "pyart.testing.RadarSpectra.check_field_exists": [[1218, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.extract_sweeps": [[1219, "pyart-testing-radarspectra-extract-sweeps"]], "pyart.testing.RadarSpectra.get_azimuth": [[1220, "pyart-testing-radarspectra-get-azimuth"]], "pyart.testing.RadarSpectra.get_elevation": [[1221, "pyart-testing-radarspectra-get-elevation"]], "pyart.testing.RadarSpectra.get_end": [[1222, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_field": [[1223, "pyart-testing-radarspectra-get-field"]], "pyart.testing.RadarSpectra.get_gate_area": [[1224, "pyart-testing-radarspectra-get-gate-area"]], "pyart.testing.RadarSpectra.get_gate_lat_lon_alt": [[1225, "pyart-testing-radarspectra-get-gate-lat-lon-alt"]], "pyart.testing.RadarSpectra.get_gate_x_y_z": [[1226, "pyart-testing-radarspectra-get-gate-x-y-z"]], "pyart.testing.RadarSpectra.get_nyquist_vel": [[1227, "pyart-testing-radarspectra-get-nyquist-vel"]], "pyart.testing.RadarSpectra.get_slice": [[1228, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[1229, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[1230, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.info": [[1231, "pyart-testing-radarspectra-info"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[1232, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[1233, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[1234, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[1235, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[1236, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[1237, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[1238, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[1239, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[1240, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[1241, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[1242, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.get_metadata": [[1243, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[1244, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[1245, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[1246, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[1247, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[1248, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[1249, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[1250, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[1251, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[1252, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[1253, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[1254, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[1255, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[1256, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[1257, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[1258, "pyart-util"]], "Circular Statistics": [[1258, "circular-statistics"]], "Datetime Utilities": [[1258, "datetime-utilities"]], "Column Section": [[1258, "column-section"]], "Cross Section": [[1258, "cross-section"]], "Noise estimation": [[1258, "noise-estimation"]], "Radar Utilities": [[1258, "radar-utilities"]], "Simulated Velocity": [[1258, "simulated-velocity"]], "Signal Mathematics": [[1258, "signal-mathematics"]], "Weighted statistics": [[1258, "weighted-statistics"]], "API Manual": [[1319, "api-manual"]], "Changelog": [[1320, "changelog"]], "v1.9.2": [[1320, "v1-9-2"]], "v1.9.0": [[1320, "v1-9-0"]], "v1.8.9": [[1320, "v1-8-9"]], "v1.8.8": [[1320, "v1-8-8"]], "v1.8.7": [[1320, "v1-8-7"]], "v1.8.6": [[1320, "v1-8-6"]], "v1.8.5": [[1320, "v1-8-5"]], "v1.8.4": [[1320, "v1-8-4"]], "v1.8.3": [[1320, "v1-8-3"]], "v1.8.2": [[1320, "v1-8-2"]], "v1.8.1": [[1320, "v1-8-1"]], "v1.8": [[1320, "v1-8"]], "v1.7.1": [[1320, "v1-7-1"]], "v1.7": [[1320, "v1-7"]], "v1.6.4": [[1320, "v1-6-4"]], "New additions": [[1320, "new-additions"]], "v1.6.3": [[1320, "v1-6-3"]], "v1.6.2": [[1320, "v1-6-2"]], "v1.6.1": [[1320, "v1-6-1"]], "v1.6": [[1320, "v1-6"]], "Moment correction examples": [[1321, "moment-correction-examples"], [1325, "moment-correction-examples"]], "Correct reflectivity attenuation": [[1322, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[1323, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[1324, "computation-times"], [1329, "computation-times"], [1334, "computation-times"], [1353, "computation-times"], [1360, "computation-times"], [1361, "computation-times"], [1374, "computation-times"]], "Example Gallery": [[1325, "example-gallery"]], "Input/Output Examples": [[1325, "input-output-examples"], [1326, "input-output-examples"]], "Mapping examples": [[1325, "mapping-examples"], [1330, "mapping-examples"]], "Plotting examples": [[1325, "plotting-examples"], [1335, "plotting-examples"]], "Retrieval Examples": [[1325, "retrieval-examples"], [1354, "retrieval-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[1327, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[1327, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[1327, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[1328, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[1328, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[1331, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[1332, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[1333, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[1336, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[1337, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[1338, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[1339, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[1340, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[1341, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[1342, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[1343, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[1344, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[1345, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [1346, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[1347, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [1348, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[1349, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[1350, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[1351, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[1352, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[1355, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[1356, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[1357, "convective-stratiform-classification"]], "How the algorithm works": [[1357, "how-the-algorithm-works"]], "Examples": [[1357, "examples"]], "Summary of recommendations and best practices": [[1357, "summary-of-recommendations-and-best-practices"]], "References": [[1357, "references"]], "Calculate and Plot hydrometeor classification": [[1358, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[1359, "calculate-and-plot-vad-profile"]], "About the MeteoSwiss fork of Py-ART": [[1362, "about-the-meteoswiss-fork-of-py-art"]], "Citing Py-ART": [[1362, "citing-py-art"]], "What can Py-ART do?": [[1362, "what-can-py-art-do"]], "Short Courses": [[1362, "short-courses"]], "Install": [[1362, "install"], [1376, "install"]], "Dependencies": [[1362, "dependencies"]], "Optional Dependences": [[1362, "optional-dependences"]], "Getting help": [[1362, "getting-help"]], "Contributing": [[1362, "contributing"]], "Notebook Gallery": [[1363, "notebook-gallery"]], "Notebooks": [[1363, null]], "Creating a basic ingest of a NetCDF file": [[1364, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[1365, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[1366, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[1368, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[1369, "masking-data-with-py-art-gatefilters"]], "Reading MeteoSwiss Metranet data with Py-ART": [[1370, "reading-meteoswiss-metranet-data-with-py-art"]], "Reading Polar data": [[1370, "reading-polar-data"]], "Low-res data (MLx files)": [[1370, "low-res-data-mlx-files"]], "High-res data (MHx files)": [[1370, "high-res-data-mhx-files"]], "Reading other polar products": [[1370, "reading-other-polar-products"]], "Reading Cartesian products": [[1370, "reading-cartesian-products"]], "Processing of Doppler wind data from a Swiss volumetric scan": [[1371, "processing-of-doppler-wind-data-from-a-swiss-volumetric-scan"]], "Reading and dealiasing the data": [[1371, "reading-and-dealiasing-the-data"]], "CAPPI plots": [[1371, "cappi-plots"]], "Velocity azimuth display (VAD)": [[1371, "velocity-azimuth-display-vad"]], "Filtering and retrievals on raw Swiss C-band data": [[1372, "filtering-and-retrievals-on-raw-swiss-c-band-data"]], "Reading the data": [[1372, "reading-the-data"]], "Ground-clutter and noise removal": [[1372, "ground-clutter-and-noise-removal"]], "Attenuation correction": [[1372, "attenuation-correction"]], "KDP estimation": [[1372, "kdp-estimation"]], "Hydrometeor classification": [[1372, "hydrometeor-classification"]], "QPE": [[1372, "qpe"]], "The Py-ART Radar object and indexing": [[1373, "the-py-art-radar-object-and-indexing"]], "Installation": [[1375, "installation"]], "Required Dependencies": [[1375, "required-dependencies"]], "Optional Dependencies": [[1375, "optional-dependencies"]], "Obtaining the latest source": [[1375, "obtaining-the-latest-source"]], "Installing from Source": [[1375, "installing-from-source"]], "Frequently asked questions": [[1375, "frequently-asked-questions"]], "Contributor\u2019s Guide": [[1376, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[1376, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[1376, "important-links"]], "Citing": [[1376, "citing"]], "Resources": [[1376, "resources"]], "Code Style": [[1376, "code-style"]], "Python File Setup": [[1376, "python-file-setup"]], "Testing": [[1376, "testing"]], "GitHub": [[1376, "github"]], "Blog Posts": [[1376, "blog-posts"]], "User Guide": [[1377, "user-guide"]], "Setting up an Environment": [[1378, "setting-up-an-environment"]], "Anaconda": [[1378, "anaconda"]], "Setting a Channel": [[1378, "setting-a-channel"]], "Creating an Environment": [[1378, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[1378, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[1378, "more-information"]]}, "indexentries": {"extract_sweeps_skyecho() (in module pyart.aux_io)": [[0, "pyart.aux_io.extract_sweeps_skyecho"], [584, "pyart.aux_io.extract_sweeps_skyecho"]], "get_sweep_time_coverage() (in module pyart.aux_io)": [[1, "pyart.aux_io.get_sweep_time_coverage"], [586, "pyart.aux_io.get_sweep_time_coverage"]], "read_bin() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_bin"], [587, "pyart.aux_io.read_bin"]], "read_bin_mf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_bin_mf"], [588, "pyart.aux_io.read_bin_mf"]], "read_cartesian_metranet() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_cartesian_metranet"], [589, "pyart.aux_io.read_cartesian_metranet"]], "read_cf1() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_cf1"], [590, "pyart.aux_io.read_cf1"]], "read_cf1_cartesian() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_cf1_cartesian"], [591, "pyart.aux_io.read_cf1_cartesian"]], "read_cf1_cartesian_mf() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_cf1_cartesian_mf"], [592, "pyart.aux_io.read_cf1_cartesian_mf"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_d3r_gcpex_nc"], [593, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_dat_mf() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_dat_mf"], [594, "pyart.aux_io.read_dat_mf"]], "read_gamic() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_gamic"], [598, "pyart.aux_io.read_gamic"]], "read_gif() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_gif"], [599, "pyart.aux_io.read_gif"]], "read_grib() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_grib"], [600, "pyart.aux_io.read_grib"]], "read_hpl() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_hpl"], [601, "pyart.aux_io.read_hpl"]], "read_iq() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_iq"], [602, "pyart.aux_io.read_iq"]], "read_kazr() (in module pyart.aux_io)": [[15, "pyart.aux_io.read_kazr"], [603, "pyart.aux_io.read_kazr"]], "read_metranet() (in module pyart.aux_io)": [[16, "pyart.aux_io.read_metranet"], [606, "pyart.aux_io.read_metranet"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[17, "pyart.aux_io.read_noxp_iphex_nc"], [607, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_grid_h5() (in module pyart.aux_io)": [[18, "pyart.aux_io.read_odim_grid_h5"], [608, "pyart.aux_io.read_odim_grid_h5"]], "read_odim_h5() (in module pyart.aux_io)": [[19, "pyart.aux_io.read_odim_h5"], [609, "pyart.aux_io.read_odim_h5"]], "read_odim_vp_h5() (in module pyart.aux_io)": [[20, "pyart.aux_io.read_odim_vp_h5"], [610, "pyart.aux_io.read_odim_vp_h5"]], "read_pattern() (in module pyart.aux_io)": [[21, "pyart.aux_io.read_pattern"], [611, "pyart.aux_io.read_pattern"]], "read_png() (in module pyart.aux_io)": [[22, "pyart.aux_io.read_png"], [612, "pyart.aux_io.read_png"]], "read_radx() (in module pyart.aux_io)": [[23, "pyart.aux_io.read_radx"], [618, "pyart.aux_io.read_radx"]], "read_rainbow_psr() (in module pyart.aux_io)": [[24, "pyart.aux_io.read_rainbow_psr"], [619, "pyart.aux_io.read_rainbow_psr"]], "read_rainbow_psr_spectra() (in module pyart.aux_io)": [[25, "pyart.aux_io.read_rainbow_psr_spectra"], [620, "pyart.aux_io.read_rainbow_psr_spectra"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[26, "pyart.aux_io.read_rainbow_wrl"], [621, "pyart.aux_io.read_rainbow_wrl"]], "read_skyecho() (in module pyart.aux_io)": [[27, "pyart.aux_io.read_skyecho"], [623, "pyart.aux_io.read_skyecho"]], "read_spectra() (in module pyart.aux_io)": [[28, "pyart.aux_io.read_spectra"], [624, "pyart.aux_io.read_spectra"]], "read_swissbirdradar_spectra() (in module pyart.aux_io)": [[29, "pyart.aux_io.read_swissbirdradar_spectra"], [625, "pyart.aux_io.read_swissbirdradar_spectra"]], "write_odim_grid_h5() (in module pyart.aux_io)": [[30, "pyart.aux_io.write_odim_grid_h5"], [626, "pyart.aux_io.write_odim_grid_h5"]], "write_odim_h5() (in module pyart.aux_io)": [[31, "pyart.aux_io.write_odim_h5"], [627, "pyart.aux_io.write_odim_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[32, "pyart.aux_io.write_sinarame_cfradial"], [628, "pyart.aux_io.write_sinarame_cfradial"]], "write_spectra() (in module pyart.aux_io)": [[33, "pyart.aux_io.write_spectra"], [629, "pyart.aux_io.write_spectra"]], "texture_of_complex_phase() (in module pyart.bridge)": [[34, "pyart.bridge.texture_of_complex_phase"], [631, "pyart.bridge.texture_of_complex_phase"]], "filemetadata (class in pyart.config)": [[35, "pyart.config.FileMetadata"], [633, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[36, "pyart.config.FileMetadata.__call__"], [634, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[37, "pyart.config.FileMetadata.get_field_name"], [635, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[38, "pyart.config.FileMetadata.get_metadata"], [636, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[39, "pyart.config.get_field_colormap"], [638, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[40, "pyart.config.get_field_limits"], [639, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[41, "pyart.config.get_field_mapping"], [640, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[42, "pyart.config.get_field_name"], [641, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[43, "pyart.config.get_fillvalue"], [642, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[44, "pyart.config.get_metadata"], [643, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[45, "pyart.config.load_config"], [644, "pyart.config.load_config"]], "grid (class in pyart.core)": [[46, "pyart.core.Grid"], [646, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[47, "pyart.core.Grid.add_field"], [647, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[48, "pyart.core.Grid.get_point_longitude_latitude"], [648, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[49, "pyart.core.Grid.get_projparams"], [649, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[50, "pyart.core.Grid.init_point_altitude"], [650, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[51, "pyart.core.Grid.init_point_longitude_latitude"], [651, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[52, "pyart.core.Grid.init_point_x_y_z"], [652, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[53, "pyart.core.Grid.projection_proj"], [653, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[54, "pyart.core.Grid.to_xarray"], [654, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[55, "pyart.core.Grid.write"], [655, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[56, "pyart.core.HorizontalWindProfile"], [656, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[57, "pyart.core.HorizontalWindProfile.from_u_and_v"], [657, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[58, "pyart.core.HorizontalWindProfile.u_wind"], [658, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[59, "pyart.core.HorizontalWindProfile.v_wind"], [659, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[60, "pyart.core.Radar"], [660, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[61, "pyart.core.Radar.add_field"], [661, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[62, "pyart.core.Radar.add_field_like"], [662, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[63, "pyart.core.Radar.add_filter"], [663, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[64, "pyart.core.Radar.check_field_exists"], [664, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[65, "pyart.core.Radar.extract_sweeps"], [665, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[66, "pyart.core.Radar.get_azimuth"], [666, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[67, "pyart.core.Radar.get_elevation"], [667, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[68, "pyart.core.Radar.get_end"], [668, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[69, "pyart.core.Radar.get_field"], [669, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[70, "pyart.core.Radar.get_gate_area"], [670, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[71, "pyart.core.Radar.get_gate_lat_lon_alt"], [671, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[72, "pyart.core.Radar.get_gate_x_y_z"], [672, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[73, "pyart.core.Radar.get_nyquist_vel"], [673, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[74, "pyart.core.Radar.get_slice"], [674, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[75, "pyart.core.Radar.get_start"], [675, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[76, "pyart.core.Radar.get_start_end"], [676, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[77, "pyart.core.Radar.info"], [677, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[78, "pyart.core.Radar.init_gate_altitude"], [678, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[79, "pyart.core.Radar.init_gate_longitude_latitude"], [679, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[80, "pyart.core.Radar.init_gate_x_y_z"], [680, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[81, "pyart.core.Radar.init_rays_per_sweep"], [681, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[82, "pyart.core.Radar.iter_azimuth"], [682, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[83, "pyart.core.Radar.iter_elevation"], [683, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[84, "pyart.core.Radar.iter_end"], [684, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[85, "pyart.core.Radar.iter_field"], [685, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[86, "pyart.core.Radar.iter_slice"], [686, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[87, "pyart.core.Radar.iter_start"], [687, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[88, "pyart.core.Radar.iter_start_end"], [688, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[89, "pyart.core.RadarSpectra"], [689, "pyart.core.RadarSpectra"]], "add_field() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.add_field"], [690, "pyart.core.RadarSpectra.add_field"]], "add_field_like() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.add_field_like"], [691, "pyart.core.RadarSpectra.add_field_like"]], "add_filter() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.add_filter"], [692, "pyart.core.RadarSpectra.add_filter"]], "check_field_exists() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.check_field_exists"], [693, "pyart.core.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.extract_sweeps"], [694, "pyart.core.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.get_azimuth"], [695, "pyart.core.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.get_elevation"], [696, "pyart.core.RadarSpectra.get_elevation"]], "get_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.get_end"], [697, "pyart.core.RadarSpectra.get_end"]], "get_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.get_field"], [698, "pyart.core.RadarSpectra.get_field"]], "get_gate_area() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.get_gate_area"], [699, "pyart.core.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"], [700, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.get_gate_x_y_z"], [701, "pyart.core.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radarspectra method)": [[102, "pyart.core.RadarSpectra.get_nyquist_vel"], [702, "pyart.core.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.core.radarspectra method)": [[103, "pyart.core.RadarSpectra.get_slice"], [703, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[104, "pyart.core.RadarSpectra.get_start"], [704, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[105, "pyart.core.RadarSpectra.get_start_end"], [705, "pyart.core.RadarSpectra.get_start_end"]], "info() (pyart.core.radarspectra method)": [[106, "pyart.core.RadarSpectra.info"], [706, "pyart.core.RadarSpectra.info"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[107, "pyart.core.RadarSpectra.init_gate_altitude"], [707, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[108, "pyart.core.RadarSpectra.init_gate_longitude_latitude"], [708, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[109, "pyart.core.RadarSpectra.init_gate_x_y_z"], [709, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[110, "pyart.core.RadarSpectra.init_rays_per_sweep"], [710, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[111, "pyart.core.RadarSpectra.iter_azimuth"], [711, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[112, "pyart.core.RadarSpectra.iter_elevation"], [712, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[113, "pyart.core.RadarSpectra.iter_end"], [713, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[114, "pyart.core.RadarSpectra.iter_field"], [714, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[115, "pyart.core.RadarSpectra.iter_slice"], [715, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[116, "pyart.core.RadarSpectra.iter_start"], [716, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.iter_start_end"], [717, "pyart.core.RadarSpectra.iter_start_end"]], "antenna_to_cartesian() (in module pyart.core)": [[118, "pyart.core.antenna_to_cartesian"], [718, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_vectors_to_cartesian"], [719, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[120, "pyart.core.cartesian_to_antenna"], [720, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"], [721, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"], [722, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"], [723, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"], [724, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"], [725, "pyart.core.geographic_to_cartesian_aeqd"]], "wgs84_to_swissch1903() (in module pyart.core)": [[126, "pyart.core.wgs84_to_swissCH1903"], [726, "pyart.core.wgs84_to_swissCH1903"]], "compute_apparent_vpr() (in module pyart.correct)": [[127, "pyart.correct.compute_apparent_vpr"], [759, "pyart.correct.compute_apparent_vpr"]], "compute_theoretical_vpr() (in module pyart.correct)": [[128, "pyart.correct.compute_theoretical_vpr"], [760, "pyart.correct.compute_theoretical_vpr"]], "correct_sys_phase() (in module pyart.correct)": [[129, "pyart.correct.correct_sys_phase"], [763, "pyart.correct.correct_sys_phase"]], "dealias_fourdd() (in module pyart.correct)": [[130, "pyart.correct.dealias_fourdd"], [767, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[131, "pyart.correct.dealias_region_based"], [768, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[132, "pyart.correct.dealias_unwrap_phase"], [769, "pyart.correct.dealias_unwrap_phase"]], "det_sys_phase_ray() (in module pyart.correct)": [[133, "pyart.correct.det_sys_phase_ray"], [771, "pyart.correct.det_sys_phase_ray"]], "find_objects() (in module pyart.correct)": [[134, "pyart.correct.find_objects"], [775, "pyart.correct.find_objects"]], "get_mask_fzl() (in module pyart.correct)": [[135, "pyart.correct.get_mask_fzl"], [777, "pyart.correct.get_mask_fzl"]], "phase_proc_lp() (in module pyart.correct)": [[136, "pyart.correct.phase_proc_lp"], [782, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[137, "pyart.correct.phase_proc_lp_gf"], [783, "pyart.correct.phase_proc_lp_gf"]], "ptoa_to_sf() (in module pyart.correct)": [[138, "pyart.correct.ptoa_to_sf"], [784, "pyart.correct.ptoa_to_sf"]], "scanning_losses() (in module pyart.correct)": [[139, "pyart.correct.scanning_losses"], [786, "pyart.correct.scanning_losses"]], "smooth_masked() (in module pyart.correct)": [[140, "pyart.correct.smooth_masked"], [790, "pyart.correct.smooth_masked"]], "smooth_phidp_double_window() (in module pyart.correct)": [[141, "pyart.correct.smooth_phidp_double_window"], [791, "pyart.correct.smooth_phidp_double_window"]], "smooth_phidp_single_window() (in module pyart.correct)": [[142, "pyart.correct.smooth_phidp_single_window"], [792, "pyart.correct.smooth_phidp_single_window"]], "solar_flux_lookup() (in module pyart.correct)": [[143, "pyart.correct.solar_flux_lookup"], [793, "pyart.correct.solar_flux_lookup"]], "sun_position_mfr() (in module pyart.correct)": [[144, "pyart.correct.sun_position_mfr"], [794, "pyart.correct.sun_position_mfr"]], "sun_position_pysolar() (in module pyart.correct)": [[145, "pyart.correct.sun_position_pysolar"], [795, "pyart.correct.sun_position_pysolar"]], "sun_power() (in module pyart.correct)": [[146, "pyart.correct.sun_power"], [796, "pyart.correct.sun_power"]], "deprecatedattribute": [[147, "pyart.exceptions.DeprecatedAttribute"]], "deprecatedfunctionname": [[148, "pyart.exceptions.DeprecatedFunctionName"]], "missingoptionaldependency": [[149, "pyart.exceptions.MissingOptionalDependency"]], "_deprecated_alias() (in module pyart.exceptions)": [[150, "pyart.exceptions._deprecated_alias"]], "gatefilter (class in pyart.filters)": [[151, "pyart.filters.GateFilter"], [800, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[152, "pyart.filters.GateFilter.copy"], [801, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[153, "pyart.filters.GateFilter.exclude_above"], [802, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[154, "pyart.filters.GateFilter.exclude_all"], [803, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[155, "pyart.filters.GateFilter.exclude_below"], [804, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[156, "pyart.filters.GateFilter.exclude_equal"], [805, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[157, "pyart.filters.GateFilter.exclude_gates"], [806, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[158, "pyart.filters.GateFilter.exclude_inside"], [807, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[159, "pyart.filters.GateFilter.exclude_invalid"], [808, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[160, "pyart.filters.GateFilter.exclude_masked"], [809, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[161, "pyart.filters.GateFilter.exclude_none"], [810, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[162, "pyart.filters.GateFilter.exclude_not_equal"], [811, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[163, "pyart.filters.GateFilter.exclude_outside"], [812, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[164, "pyart.filters.GateFilter.exclude_transition"], [813, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[165, "pyart.filters.GateFilter.gate_excluded"], [814, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[166, "pyart.filters.GateFilter.gate_included"], [815, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[167, "pyart.filters.GateFilter.include_above"], [816, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[168, "pyart.filters.GateFilter.include_all"], [817, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[169, "pyart.filters.GateFilter.include_below"], [818, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[170, "pyart.filters.GateFilter.include_equal"], [819, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.include_gates"], [820, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.include_inside"], [821, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.include_none"], [822, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.include_not_equal"], [823, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.include_not_masked"], [824, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.include_not_transition"], [825, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.include_outside"], [826, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.include_valid"], [827, "pyart.filters.GateFilter.include_valid"]], "birds_gate_filter() (in module pyart.filters)": [[179, "pyart.filters.birds_gate_filter"], [828, "pyart.filters.birds_gate_filter"]], "class_based_gate_filter() (in module pyart.filters)": [[180, "pyart.filters.class_based_gate_filter"], [829, "pyart.filters.class_based_gate_filter"]], "iso0_based_gate_filter() (in module pyart.filters)": [[181, "pyart.filters.iso0_based_gate_filter"], [830, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[182, "pyart.filters.moment_and_texture_based_gate_filter"], [831, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[183, "pyart.filters.moment_based_gate_filter"], [832, "pyart.filters.moment_based_gate_filter"]], "snr_based_gate_filter() (in module pyart.filters)": [[184, "pyart.filters.snr_based_gate_filter"], [833, "pyart.filters.snr_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[185, "pyart.filters.temp_based_gate_filter"], [834, "pyart.filters.temp_based_gate_filter"]], "visibility_based_gate_filter() (in module pyart.filters)": [[186, "pyart.filters.visibility_based_gate_filter"], [835, "pyart.filters.visibility_based_gate_filter"]], "airborneradardisplay (class in pyart.graph)": [[187, "pyart.graph.AirborneRadarDisplay"], [837, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[188, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"], [838, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[189, "pyart.graph.AirborneRadarDisplay.generate_filename"], [839, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[190, "pyart.graph.AirborneRadarDisplay.generate_ray_title"], [840, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[191, "pyart.graph.AirborneRadarDisplay.generate_title"], [841, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[192, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"], [842, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.airborneradardisplay method)": [[193, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"], [843, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[194, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"], [844, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[195, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"], [845, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[196, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"], [846, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[197, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"], [847, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.airborneradardisplay method)": [[198, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"], [848, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[199, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"], [849, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.airborneradardisplay method)": [[200, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"], [850, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[201, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"], [851, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[202, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"], [852, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[203, "pyart.graph.AirborneRadarDisplay.plot"], [853, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[204, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"], [854, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[205, "pyart.graph.AirborneRadarDisplay.plot_colorbar"], [855, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"], [856, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[207, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"], [857, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[208, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"], [858, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.plot_label"], [859, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[210, "pyart.graph.AirborneRadarDisplay.plot_labels"], [860, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.plot_ppi"], [861, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[212, "pyart.graph.AirborneRadarDisplay.plot_range_ring"], [862, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.plot_range_rings"], [863, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.plot_ray"], [864, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.plot_rhi"], [865, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"], [866, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.plot_vpt"], [867, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot_xsection"], [868, "pyart.graph.AirborneRadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[219, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"], [869, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.set_limits"], [870, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[221, "pyart.graph.GridMapDisplay"], [871, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[222, "pyart.graph.GridMapDisplay.cartopy_coastlines"], [872, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[223, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"], [873, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[224, "pyart.graph.GridMapDisplay.cartopy_states"], [874, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[225, "pyart.graph.GridMapDisplay.generate_filename"], [875, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[226, "pyart.graph.GridMapDisplay.generate_grid_title"], [876, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[227, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"], [877, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[228, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"], [878, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[229, "pyart.graph.GridMapDisplay.plot_colorbar"], [879, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[230, "pyart.graph.GridMapDisplay.plot_cross_section"], [880, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_cross_section_level() (pyart.graph.gridmapdisplay method)": [[231, "pyart.graph.GridMapDisplay.plot_cross_section_level"], [881, "pyart.graph.GridMapDisplay.plot_cross_section_level"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[232, "pyart.graph.GridMapDisplay.plot_crosshairs"], [882, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[233, "pyart.graph.GridMapDisplay.plot_grid"], [883, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_grid_contour() (pyart.graph.gridmapdisplay method)": [[234, "pyart.graph.GridMapDisplay.plot_grid_contour"], [884, "pyart.graph.GridMapDisplay.plot_grid_contour"]], "plot_grid_raw() (pyart.graph.gridmapdisplay method)": [[235, "pyart.graph.GridMapDisplay.plot_grid_raw"], [885, "pyart.graph.GridMapDisplay.plot_grid_raw"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.plot_latitude_slice"], [886, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.plot_latitudinal_level"], [887, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.plot_longitude_slice"], [888, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.plot_longitudinal_level"], [889, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[240, "pyart.graph.GridMapDisplayBasemap"], [890, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[241, "pyart.graph.GridMapDisplayBasemap.generate_filename"], [891, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[242, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"], [892, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[243, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"], [893, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[244, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"], [894, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[245, "pyart.graph.GridMapDisplayBasemap.get_basemap"], [895, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[246, "pyart.graph.GridMapDisplayBasemap.plot_basemap"], [896, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[247, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"], [897, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[248, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"], [898, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[249, "pyart.graph.GridMapDisplayBasemap.plot_grid"], [899, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[250, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"], [900, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[251, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"], [901, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[252, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"], [902, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[253, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"], [903, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[254, "pyart.graph.RadarDisplay"], [904, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[255, "pyart.graph.RadarDisplay.generate_az_rhi_title"], [905, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[256, "pyart.graph.RadarDisplay.generate_filename"], [906, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[257, "pyart.graph.RadarDisplay.generate_ray_title"], [907, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[258, "pyart.graph.RadarDisplay.generate_title"], [908, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[259, "pyart.graph.RadarDisplay.generate_vpt_title"], [909, "pyart.graph.RadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radardisplay method)": [[260, "pyart.graph.RadarDisplay.generate_xsection_title"], [910, "pyart.graph.RadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[261, "pyart.graph.RadarDisplay.label_xaxis_r"], [911, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[262, "pyart.graph.RadarDisplay.label_xaxis_rays"], [912, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[263, "pyart.graph.RadarDisplay.label_xaxis_time"], [913, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[264, "pyart.graph.RadarDisplay.label_xaxis_x"], [914, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radardisplay method)": [[265, "pyart.graph.RadarDisplay.label_xaxis_xsection"], [915, "pyart.graph.RadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[266, "pyart.graph.RadarDisplay.label_yaxis_field"], [916, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radardisplay method)": [[267, "pyart.graph.RadarDisplay.label_yaxis_xsection"], [917, "pyart.graph.RadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[268, "pyart.graph.RadarDisplay.label_yaxis_y"], [918, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.label_yaxis_z"], [919, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[270, "pyart.graph.RadarDisplay.plot"], [920, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[271, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"], [921, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.plot_colorbar"], [922, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.plot_cr_raster"], [923, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[274, "pyart.graph.RadarDisplay.plot_cross_hair"], [924, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[275, "pyart.graph.RadarDisplay.plot_grid_lines"], [925, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.plot_label"], [926, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.plot_labels"], [927, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.plot_ppi"], [928, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[279, "pyart.graph.RadarDisplay.plot_range_ring"], [929, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.plot_range_rings"], [930, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[281, "pyart.graph.RadarDisplay.plot_ray"], [931, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.plot_rhi"], [932, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.plot_vpt"], [933, "pyart.graph.RadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot_xsection"], [934, "pyart.graph.RadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[285, "pyart.graph.RadarDisplay.set_aspect_ratio"], [935, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[286, "pyart.graph.RadarDisplay.set_limits"], [936, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[287, "pyart.graph.RadarMapDisplay"], [937, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[288, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"], [938, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[289, "pyart.graph.RadarMapDisplay.generate_filename"], [939, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[290, "pyart.graph.RadarMapDisplay.generate_ray_title"], [940, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[291, "pyart.graph.RadarMapDisplay.generate_title"], [941, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[292, "pyart.graph.RadarMapDisplay.generate_vpt_title"], [942, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplay method)": [[293, "pyart.graph.RadarMapDisplay.generate_xsection_title"], [943, "pyart.graph.RadarMapDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[294, "pyart.graph.RadarMapDisplay.label_xaxis_r"], [944, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[295, "pyart.graph.RadarMapDisplay.label_xaxis_rays"], [945, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[296, "pyart.graph.RadarMapDisplay.label_xaxis_time"], [946, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[297, "pyart.graph.RadarMapDisplay.label_xaxis_x"], [947, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"], [948, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[299, "pyart.graph.RadarMapDisplay.label_yaxis_field"], [949, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplay method)": [[300, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"], [950, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[301, "pyart.graph.RadarMapDisplay.label_yaxis_y"], [951, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.label_yaxis_z"], [952, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.plot"], [953, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"], [954, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.plot_colorbar"], [955, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.plot_cr_raster"], [956, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[307, "pyart.graph.RadarMapDisplay.plot_cross_hair"], [957, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[308, "pyart.graph.RadarMapDisplay.plot_grid_lines"], [958, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.plot_label"], [959, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.plot_labels"], [960, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.plot_line_geo"], [961, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.plot_line_xy"], [962, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.plot_point"], [963, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.plot_ppi"], [964, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_ppi_map"], [965, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_range_ring"], [966, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_range_rings"], [967, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_ray"], [968, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_rhi"], [969, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_vpt"], [970, "pyart.graph.RadarMapDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_xsection"], [971, "pyart.graph.RadarMapDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[322, "pyart.graph.RadarMapDisplay.set_aspect_ratio"], [972, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[323, "pyart.graph.RadarMapDisplay.set_limits"], [973, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[324, "pyart.graph.RadarMapDisplayBasemap"], [974, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[325, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"], [975, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[326, "pyart.graph.RadarMapDisplayBasemap.generate_filename"], [976, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[327, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"], [977, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[328, "pyart.graph.RadarMapDisplayBasemap.generate_title"], [978, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[329, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"], [979, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplaybasemap method)": [[330, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"], [980, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"], [981, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[332, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"], [982, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[333, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"], [983, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[334, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"], [984, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"], [985, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"], [986, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"], [987, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"], [988, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"], [989, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.plot"], [990, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"], [991, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[342, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"], [992, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"], [993, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"], [994, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"], [995, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_label"], [996, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_labels"], [997, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"], [998, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"], [999, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_point"], [1000, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"], [1001, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"], [1002, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"], [1003, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"], [1004, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_ray"], [1005, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"], [1006, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"], [1007, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"], [1008, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[359, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"], [1009, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[360, "pyart.graph.RadarMapDisplayBasemap.set_limits"], [1010, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "make_time_unit_str() (in module pyart.io)": [[361, "pyart.io.make_time_unit_str"], [1014, "pyart.io.make_time_unit_str"]], "prepare_for_read() (in module pyart.io)": [[362, "pyart.io.prepare_for_read"], [1015, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[363, "pyart.io.read"], [1016, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[364, "pyart.io.read_arm_sonde"], [1017, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[365, "pyart.io.read_arm_sonde_vap"], [1018, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[366, "pyart.io.read_cfradial"], [1019, "pyart.io.read_cfradial"]], "read_cfradial2() (in module pyart.io)": [[367, "pyart.io.read_cfradial2"], [1020, "pyart.io.read_cfradial2"]], "read_chl() (in module pyart.io)": [[368, "pyart.io.read_chl"], [1021, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[369, "pyart.io.read_grid"], [1022, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[370, "pyart.io.read_grid_mdv"], [1023, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[371, "pyart.io.read_mdv"], [1024, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[372, "pyart.io.read_nexrad_archive"], [1025, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[373, "pyart.io.read_nexrad_cdm"], [1026, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[374, "pyart.io.read_nexrad_level3"], [1027, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[375, "pyart.io.read_rsl"], [1028, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[376, "pyart.io.read_sigmet"], [1029, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[377, "pyart.io.read_uf"], [1030, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[378, "pyart.io.write_cfradial"], [1031, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[379, "pyart.io.write_grid"], [1032, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[380, "pyart.io.write_grid_geotiff"], [1033, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[381, "pyart.io.write_grid_mdv"], [1034, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[382, "pyart.io.write_uf"], [1035, "pyart.io.write_uf"]], "lazyloaddict (class in pyart.lazydict)": [[383, "pyart.lazydict.LazyLoadDict"], [1037, "pyart.lazydict.LazyLoadDict"]], "__contains__() (pyart.lazydict.lazyloaddict method)": [[384, "pyart.lazydict.LazyLoadDict.__contains__"]], "__delattr__() (pyart.lazydict.lazyloaddict method)": [[385, "pyart.lazydict.LazyLoadDict.__delattr__"]], "__delitem__() (pyart.lazydict.lazyloaddict method)": [[386, "pyart.lazydict.LazyLoadDict.__delitem__"]], "__dir__() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.__dir__"]], "__eq__() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.__eq__"]], "__format__() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.__format__"]], "__ge__() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.__ge__"]], "__getattribute__() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.__getattribute__"]], "__getitem__() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.__getitem__"]], "__getstate__() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.__getstate__"]], "__gt__() (pyart.lazydict.lazyloaddict method)": [[394, "pyart.lazydict.LazyLoadDict.__gt__"]], "__init__() (pyart.lazydict.lazyloaddict method)": [[395, "pyart.lazydict.LazyLoadDict.__init__"]], "__init_subclass__() (pyart.lazydict.lazyloaddict method)": [[396, "pyart.lazydict.LazyLoadDict.__init_subclass__"]], "__iter__() (pyart.lazydict.lazyloaddict method)": [[397, "pyart.lazydict.LazyLoadDict.__iter__"]], "__le__() (pyart.lazydict.lazyloaddict method)": [[398, "pyart.lazydict.LazyLoadDict.__le__"]], "__len__() (pyart.lazydict.lazyloaddict method)": [[399, "pyart.lazydict.LazyLoadDict.__len__"]], "__lt__() (pyart.lazydict.lazyloaddict method)": [[400, "pyart.lazydict.LazyLoadDict.__lt__"]], "__ne__() (pyart.lazydict.lazyloaddict method)": [[401, "pyart.lazydict.LazyLoadDict.__ne__"]], "__new__() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.__new__"]], "__reduce__() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.__reduce__"]], "__reduce_ex__() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.__reduce_ex__"]], "__repr__() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.__repr__"]], "__setattr__() (pyart.lazydict.lazyloaddict method)": [[406, "pyart.lazydict.LazyLoadDict.__setattr__"]], "__setitem__() (pyart.lazydict.lazyloaddict method)": [[407, "pyart.lazydict.LazyLoadDict.__setitem__"]], "__sizeof__() (pyart.lazydict.lazyloaddict method)": [[408, "pyart.lazydict.LazyLoadDict.__sizeof__"]], "__str__() (pyart.lazydict.lazyloaddict method)": [[409, "pyart.lazydict.LazyLoadDict.__str__"]], "__subclasshook__() (pyart.lazydict.lazyloaddict class method)": [[410, "pyart.lazydict.LazyLoadDict.__subclasshook__"]], "clear() (pyart.lazydict.lazyloaddict method)": [[411, "pyart.lazydict.LazyLoadDict.clear"], [1038, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[412, "pyart.lazydict.LazyLoadDict.copy"], [1039, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[413, "pyart.lazydict.LazyLoadDict.get"], [1040, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[414, "pyart.lazydict.LazyLoadDict.has_key"], [1041, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[415, "pyart.lazydict.LazyLoadDict.items"], [1042, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[416, "pyart.lazydict.LazyLoadDict.keys"], [1043, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[417, "pyart.lazydict.LazyLoadDict.pop"], [1044, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[418, "pyart.lazydict.LazyLoadDict.popitem"], [1045, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[419, "pyart.lazydict.LazyLoadDict.set_lazy"], [1046, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[420, "pyart.lazydict.LazyLoadDict.setdefault"], [1047, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[421, "pyart.lazydict.LazyLoadDict.update"], [1048, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[422, "pyart.lazydict.LazyLoadDict.values"], [1049, "pyart.lazydict.LazyLoadDict.values"]], "_destandardize() (in module pyart.retrieve)": [[423, "pyart.retrieve._destandardize"]], "_get_res_vol_sides() (in module pyart.retrieve)": [[424, "pyart.retrieve._get_res_vol_sides"]], "atmospheric_gas_att() (in module pyart.retrieve)": [[425, "pyart.retrieve.atmospheric_gas_att"], [1076, "pyart.retrieve.atmospheric_gas_att"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[426, "pyart.retrieve.calculate_snr_from_reflectivity"], [1077, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[427, "pyart.retrieve.calculate_velocity_texture"], [1078, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[428, "pyart.retrieve.composite_reflectivity"], [1079, "pyart.retrieve.composite_reflectivity"]], "compute_doppler_velocity() (in module pyart.retrieve)": [[429, "pyart.retrieve.compute_Doppler_velocity"], [1080, "pyart.retrieve.compute_Doppler_velocity"]], "compute_doppler_velocity_iq() (in module pyart.retrieve)": [[430, "pyart.retrieve.compute_Doppler_velocity_iq"], [1081, "pyart.retrieve.compute_Doppler_velocity_iq"]], "compute_doppler_width() (in module pyart.retrieve)": [[431, "pyart.retrieve.compute_Doppler_width"], [1082, "pyart.retrieve.compute_Doppler_width"]], "compute_doppler_width_iq() (in module pyart.retrieve)": [[432, "pyart.retrieve.compute_Doppler_width_iq"], [1083, "pyart.retrieve.compute_Doppler_width_iq"]], "compute_apparent_profile() (in module pyart.retrieve)": [[433, "pyart.retrieve.compute_apparent_profile"], [1084, "pyart.retrieve.compute_apparent_profile"]], "compute_bird_density() (in module pyart.retrieve)": [[434, "pyart.retrieve.compute_bird_density"], [1085, "pyart.retrieve.compute_bird_density"]], "compute_ccor() (in module pyart.retrieve)": [[435, "pyart.retrieve.compute_ccor"], [1086, "pyart.retrieve.compute_ccor"]], "compute_cdr() (in module pyart.retrieve)": [[436, "pyart.retrieve.compute_cdr"], [1087, "pyart.retrieve.compute_cdr"]], "compute_centroids() (in module pyart.retrieve)": [[437, "pyart.retrieve.compute_centroids"], [1088, "pyart.retrieve.compute_centroids"]], "compute_differential_phase() (in module pyart.retrieve)": [[438, "pyart.retrieve.compute_differential_phase"], [1089, "pyart.retrieve.compute_differential_phase"]], "compute_differential_phase_iq() (in module pyart.retrieve)": [[439, "pyart.retrieve.compute_differential_phase_iq"], [1090, "pyart.retrieve.compute_differential_phase_iq"]], "compute_differential_reflectivity() (in module pyart.retrieve)": [[440, "pyart.retrieve.compute_differential_reflectivity"], [1091, "pyart.retrieve.compute_differential_reflectivity"]], "compute_differential_reflectivity_iq() (in module pyart.retrieve)": [[441, "pyart.retrieve.compute_differential_reflectivity_iq"], [1092, "pyart.retrieve.compute_differential_reflectivity_iq"]], "compute_evp() (in module pyart.retrieve)": [[442, "pyart.retrieve.compute_evp"], [1093, "pyart.retrieve.compute_evp"]], "compute_iq() (in module pyart.retrieve)": [[443, "pyart.retrieve.compute_iq"], [1094, "pyart.retrieve.compute_iq"]], "compute_l() (in module pyart.retrieve)": [[444, "pyart.retrieve.compute_l"], [1095, "pyart.retrieve.compute_l"]], "compute_mean_phase_iq() (in module pyart.retrieve)": [[445, "pyart.retrieve.compute_mean_phase_iq"], [1096, "pyart.retrieve.compute_mean_phase_iq"]], "compute_noise_power() (in module pyart.retrieve)": [[446, "pyart.retrieve.compute_noise_power"], [1097, "pyart.retrieve.compute_noise_power"]], "compute_noisedbz() (in module pyart.retrieve)": [[447, "pyart.retrieve.compute_noisedBZ"], [1098, "pyart.retrieve.compute_noisedBZ"]], "compute_pol_variables() (in module pyart.retrieve)": [[448, "pyart.retrieve.compute_pol_variables"], [1099, "pyart.retrieve.compute_pol_variables"]], "compute_pol_variables_iq() (in module pyart.retrieve)": [[449, "pyart.retrieve.compute_pol_variables_iq"], [1100, "pyart.retrieve.compute_pol_variables_iq"]], "compute_qvp() (in module pyart.retrieve)": [[450, "pyart.retrieve.compute_qvp"], [1101, "pyart.retrieve.compute_qvp"]], "compute_radial_noise_hs() (in module pyart.retrieve)": [[451, "pyart.retrieve.compute_radial_noise_hs"], [1102, "pyart.retrieve.compute_radial_noise_hs"]], "compute_radial_noise_ivic() (in module pyart.retrieve)": [[452, "pyart.retrieve.compute_radial_noise_ivic"], [1103, "pyart.retrieve.compute_radial_noise_ivic"]], "compute_rcs() (in module pyart.retrieve)": [[453, "pyart.retrieve.compute_rcs"], [1104, "pyart.retrieve.compute_rcs"]], "compute_rcs_from_pr() (in module pyart.retrieve)": [[454, "pyart.retrieve.compute_rcs_from_pr"], [1105, "pyart.retrieve.compute_rcs_from_pr"]], "compute_refl_from_zdr() (in module pyart.retrieve)": [[455, "pyart.retrieve.compute_refl_from_zdr"], [1106, "pyart.retrieve.compute_refl_from_zdr"]], "compute_reflectivity() (in module pyart.retrieve)": [[456, "pyart.retrieve.compute_reflectivity"], [1107, "pyart.retrieve.compute_reflectivity"]], "compute_reflectivity_iq() (in module pyart.retrieve)": [[457, "pyart.retrieve.compute_reflectivity_iq"], [1108, "pyart.retrieve.compute_reflectivity_iq"]], "compute_rhohv() (in module pyart.retrieve)": [[458, "pyart.retrieve.compute_rhohv"], [1109, "pyart.retrieve.compute_rhohv"]], "compute_rhohv_iq() (in module pyart.retrieve)": [[459, "pyart.retrieve.compute_rhohv_iq"], [1110, "pyart.retrieve.compute_rhohv_iq"]], "compute_rqvp() (in module pyart.retrieve)": [[460, "pyart.retrieve.compute_rqvp"], [1111, "pyart.retrieve.compute_rqvp"]], "compute_signal_power() (in module pyart.retrieve)": [[461, "pyart.retrieve.compute_signal_power"], [1112, "pyart.retrieve.compute_signal_power"]], "compute_snr() (in module pyart.retrieve)": [[462, "pyart.retrieve.compute_snr"], [1113, "pyart.retrieve.compute_snr"]], "compute_spectra() (in module pyart.retrieve)": [[463, "pyart.retrieve.compute_spectra"], [1114, "pyart.retrieve.compute_spectra"]], "compute_spectral_differential_phase() (in module pyart.retrieve)": [[464, "pyart.retrieve.compute_spectral_differential_phase"], [1115, "pyart.retrieve.compute_spectral_differential_phase"]], "compute_spectral_differential_reflectivity() (in module pyart.retrieve)": [[465, "pyart.retrieve.compute_spectral_differential_reflectivity"], [1116, "pyart.retrieve.compute_spectral_differential_reflectivity"]], "compute_spectral_noise() (in module pyart.retrieve)": [[466, "pyart.retrieve.compute_spectral_noise"], [1117, "pyart.retrieve.compute_spectral_noise"]], "compute_spectral_phase() (in module pyart.retrieve)": [[467, "pyart.retrieve.compute_spectral_phase"], [1118, "pyart.retrieve.compute_spectral_phase"]], "compute_spectral_power() (in module pyart.retrieve)": [[468, "pyart.retrieve.compute_spectral_power"], [1119, "pyart.retrieve.compute_spectral_power"]], "compute_spectral_reflectivity() (in module pyart.retrieve)": [[469, "pyart.retrieve.compute_spectral_reflectivity"], [1120, "pyart.retrieve.compute_spectral_reflectivity"]], "compute_spectral_rhohv() (in module pyart.retrieve)": [[470, "pyart.retrieve.compute_spectral_rhohv"], [1121, "pyart.retrieve.compute_spectral_rhohv"]], "compute_st1_iq() (in module pyart.retrieve)": [[471, "pyart.retrieve.compute_st1_iq"], [1122, "pyart.retrieve.compute_st1_iq"]], "compute_st2_iq() (in module pyart.retrieve)": [[472, "pyart.retrieve.compute_st2_iq"], [1123, "pyart.retrieve.compute_st2_iq"]], "compute_svp() (in module pyart.retrieve)": [[473, "pyart.retrieve.compute_svp"], [1124, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[474, "pyart.retrieve.compute_ts_along_coord"], [1125, "pyart.retrieve.compute_ts_along_coord"]], "compute_vol_refl() (in module pyart.retrieve)": [[475, "pyart.retrieve.compute_vol_refl"], [1126, "pyart.retrieve.compute_vol_refl"]], "compute_vp() (in module pyart.retrieve)": [[476, "pyart.retrieve.compute_vp"], [1127, "pyart.retrieve.compute_vp"]], "compute_wbn_iq() (in module pyart.retrieve)": [[477, "pyart.retrieve.compute_wbn_iq"], [1128, "pyart.retrieve.compute_wbn_iq"]], "conv_strat_raut() (in module pyart.retrieve)": [[478, "pyart.retrieve.conv_strat_raut"], [1129, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[479, "pyart.retrieve.conv_strat_yuter"], [1130, "pyart.retrieve.conv_strat_yuter"]], "data_for_centroids() (in module pyart.retrieve)": [[480, "pyart.retrieve.data_for_centroids"], [1131, "pyart.retrieve.data_for_centroids"]], "dealias_spectra() (in module pyart.retrieve)": [[481, "pyart.retrieve.dealias_spectra"], [1132, "pyart.retrieve.dealias_spectra"]], "detect_ml() (in module pyart.retrieve)": [[482, "pyart.retrieve.detect_ml"], [1133, "pyart.retrieve.detect_ml"]], "determine_medoids() (in module pyart.retrieve)": [[483, "pyart.retrieve.determine_medoids"], [1134, "pyart.retrieve.determine_medoids"]], "est_rain_rate_a() (in module pyart.retrieve)": [[484, "pyart.retrieve.est_rain_rate_a"], [1135, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[485, "pyart.retrieve.est_rain_rate_hydro"], [1136, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[486, "pyart.retrieve.est_rain_rate_kdp"], [1137, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[487, "pyart.retrieve.est_rain_rate_z"], [1138, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[488, "pyart.retrieve.est_rain_rate_za"], [1139, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[489, "pyart.retrieve.est_rain_rate_zkdp"], [1140, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[490, "pyart.retrieve.est_rain_rate_zpoly"], [1141, "pyart.retrieve.est_rain_rate_zpoly"]], "est_vertical_windshear() (in module pyart.retrieve)": [[491, "pyart.retrieve.est_vertical_windshear"], [1142, "pyart.retrieve.est_vertical_windshear"]], "est_vertical_windshear_lidar() (in module pyart.retrieve)": [[492, "pyart.retrieve.est_vertical_windshear_lidar"], [1143, "pyart.retrieve.est_vertical_windshear_lidar"]], "est_wind_profile() (in module pyart.retrieve)": [[493, "pyart.retrieve.est_wind_profile"], [1144, "pyart.retrieve.est_wind_profile"]], "est_wind_vel() (in module pyart.retrieve)": [[494, "pyart.retrieve.est_wind_vel"], [1145, "pyart.retrieve.est_wind_vel"]], "feature_detection() (in module pyart.retrieve)": [[495, "pyart.retrieve.feature_detection"], [1146, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[496, "pyart.retrieve.fetch_radar_time_profile"], [1147, "pyart.retrieve.fetch_radar_time_profile"]], "gecsx() (in module pyart.retrieve)": [[497, "pyart.retrieve.gecsx"], [1148, "pyart.retrieve.gecsx"]], "get_coeff_attg() (in module pyart.retrieve)": [[498, "pyart.retrieve.get_coeff_attg"], [1149, "pyart.retrieve.get_coeff_attg"]], "get_freq_band() (in module pyart.retrieve)": [[499, "pyart.retrieve.get_freq_band"], [1150, "pyart.retrieve.get_freq_band"]], "get_iso0_val() (in module pyart.retrieve)": [[500, "pyart.retrieve.get_iso0_val"], [1151, "pyart.retrieve.get_iso0_val"]], "get_ml_rng_limits() (in module pyart.retrieve)": [[501, "pyart.retrieve.get_ml_rng_limits"], [1152, "pyart.retrieve.get_ml_rng_limits"]], "grid_displacement_pc() (in module pyart.retrieve)": [[502, "pyart.retrieve.grid_displacement_pc"], [1153, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[503, "pyart.retrieve.grid_shift"], [1154, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[504, "pyart.retrieve.hydroclass_semisupervised"], [1155, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_leastsquare_double_window() (in module pyart.retrieve)": [[505, "pyart.retrieve.kdp_leastsquare_double_window"], [1156, "pyart.retrieve.kdp_leastsquare_double_window"]], "kdp_leastsquare_single_window() (in module pyart.retrieve)": [[506, "pyart.retrieve.kdp_leastsquare_single_window"], [1157, "pyart.retrieve.kdp_leastsquare_single_window"]], "kdp_maesaka() (in module pyart.retrieve)": [[507, "pyart.retrieve.kdp_maesaka"], [1158, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[508, "pyart.retrieve.kdp_schneebeli"], [1159, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[509, "pyart.retrieve.kdp_vulpiani"], [1160, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[510, "pyart.retrieve.map_profile_to_gates"], [1161, "pyart.retrieve.map_profile_to_gates"]], "melting_layer_giangrande() (in module pyart.retrieve)": [[511, "pyart.retrieve.melting_layer_giangrande"], [1162, "pyart.retrieve.melting_layer_giangrande"]], "melting_layer_hydroclass() (in module pyart.retrieve)": [[512, "pyart.retrieve.melting_layer_hydroclass"], [1163, "pyart.retrieve.melting_layer_hydroclass"]], "melting_layer_mf() (in module pyart.retrieve)": [[513, "pyart.retrieve.melting_layer_mf"], [1164, "pyart.retrieve.melting_layer_mf"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[514, "pyart.retrieve.quasi_vertical_profile"], [1165, "pyart.retrieve.quasi_vertical_profile"]], "select_samples() (in module pyart.retrieve)": [[515, "pyart.retrieve.select_samples"], [1166, "pyart.retrieve.select_samples"]], "steiner_conv_strat() (in module pyart.retrieve)": [[516, "pyart.retrieve.steiner_conv_strat"], [1167, "pyart.retrieve.steiner_conv_strat"]], "synthetic_obs_distribution() (in module pyart.retrieve)": [[517, "pyart.retrieve.synthetic_obs_distribution"], [1168, "pyart.retrieve.synthetic_obs_distribution"]], "vad_browning() (in module pyart.retrieve)": [[518, "pyart.retrieve.vad_browning"], [1170, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[519, "pyart.retrieve.vad_michelson"], [1171, "pyart.retrieve.vad_michelson"]], "epoch_units (in module pyart.util)": [[520, "pyart.util.EPOCH_UNITS"]], "angular_mean() (in module pyart.util)": [[521, "pyart.util.angular_mean"], [1259, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[522, "pyart.util.angular_mean_deg"], [1260, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[523, "pyart.util.angular_std"], [1261, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[524, "pyart.util.angular_std_deg"], [1262, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[525, "pyart.util.angular_texture_2d"], [1263, "pyart.util.angular_texture_2d"]], "colocated_gates() (in module pyart.util)": [[526, "pyart.util.colocated_gates"], [1264, "pyart.util.colocated_gates"]], "colocated_gates2() (in module pyart.util)": [[527, "pyart.util.colocated_gates2"], [1265, "pyart.util.colocated_gates2"]], "compute_azimuthal_average() (in module pyart.util)": [[528, "pyart.util.compute_azimuthal_average"], [1266, "pyart.util.compute_azimuthal_average"]], "compute_corr() (in module pyart.util)": [[529, "pyart.util.compute_corr"], [1267, "pyart.util.compute_corr"]], "compute_directional_stats() (in module pyart.util)": [[530, "pyart.util.compute_directional_stats"], [1268, "pyart.util.compute_directional_stats"]], "compute_mse() (in module pyart.util)": [[531, "pyart.util.compute_mse"], [1269, "pyart.util.compute_mse"]], "compute_nse() (in module pyart.util)": [[532, "pyart.util.compute_nse"], [1270, "pyart.util.compute_nse"]], "cross_section_ppi() (in module pyart.util)": [[533, "pyart.util.cross_section_ppi"], [1271, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[534, "pyart.util.cross_section_rhi"], [1272, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[535, "pyart.util.datetime_from_dataset"], [1273, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[536, "pyart.util.datetime_from_grid"], [1274, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[537, "pyart.util.datetime_from_radar"], [1275, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[538, "pyart.util.datetimes_from_dataset"], [1276, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[539, "pyart.util.datetimes_from_radar"], [1277, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[540, "pyart.util.determine_sweeps"], [1278, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[541, "pyart.util.estimate_noise_hs74"], [1279, "pyart.util.estimate_noise_hs74"]], "estimate_noise_ivic13() (in module pyart.util)": [[542, "pyart.util.estimate_noise_ivic13"], [1280, "pyart.util.estimate_noise_ivic13"]], "find_neighbour_gates() (in module pyart.util)": [[543, "pyart.util.find_neighbour_gates"], [1281, "pyart.util.find_neighbour_gates"]], "for_azimuth() (in module pyart.util)": [[544, "pyart.util.for_azimuth"], [1282, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[545, "pyart.util.get_column_rays"], [1283, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[546, "pyart.util.get_field_location"], [1284, "pyart.util.get_field_location"]], "get_ivic_flat_reg_var_max() (in module pyart.util)": [[547, "pyart.util.get_ivic_flat_reg_var_max"], [1285, "pyart.util.get_ivic_flat_reg_var_max"]], "get_ivic_pct() (in module pyart.util)": [[548, "pyart.util.get_ivic_pct"], [1286, "pyart.util.get_ivic_pct"]], "get_ivic_snr_thr() (in module pyart.util)": [[549, "pyart.util.get_ivic_snr_thr"], [1287, "pyart.util.get_ivic_snr_thr"]], "get_statistic() (in module pyart.util)": [[550, "pyart.util.get_statistic"], [1288, "pyart.util.get_statistic"]], "get_target_elevations() (in module pyart.util)": [[551, "pyart.util.get_target_elevations"], [1289, "pyart.util.get_target_elevations"]], "grid_texture_2d() (in module pyart.util)": [[552, "pyart.util.grid_texture_2d"], [1290, "pyart.util.grid_texture_2d"]], "image_mute_radar() (in module pyart.util)": [[553, "pyart.util.image_mute_radar"], [1291, "pyart.util.image_mute_radar"]], "interpol_spectra() (in module pyart.util)": [[554, "pyart.util.interpol_spectra"], [1292, "pyart.util.interpol_spectra"]], "intersection() (in module pyart.util)": [[555, "pyart.util.intersection"], [1293, "pyart.util.intersection"]], "interval_mean() (in module pyart.util)": [[556, "pyart.util.interval_mean"], [1294, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[557, "pyart.util.interval_std"], [1295, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[558, "pyart.util.is_vpt"], [1296, "pyart.util.is_vpt"]], "ivic_flat_reg_var_max_table() (in module pyart.util)": [[559, "pyart.util.ivic_flat_reg_var_max_table"], [1297, "pyart.util.ivic_flat_reg_var_max_table"]], "ivic_flat_reg_wind_len_table() (in module pyart.util)": [[560, "pyart.util.ivic_flat_reg_wind_len_table"], [1298, "pyart.util.ivic_flat_reg_wind_len_table"]], "ivic_pct_table() (in module pyart.util)": [[561, "pyart.util.ivic_pct_table"], [1299, "pyart.util.ivic_pct_table"]], "ivic_snr_thr_table() (in module pyart.util)": [[562, "pyart.util.ivic_snr_thr_table"], [1300, "pyart.util.ivic_snr_thr_table"]], "join_radar() (in module pyart.util)": [[563, "pyart.util.join_radar"], [1301, "pyart.util.join_radar"]], "join_spectra() (in module pyart.util)": [[564, "pyart.util.join_spectra"], [1302, "pyart.util.join_spectra"]], "ma_broadcast_to() (in module pyart.util)": [[565, "pyart.util.ma_broadcast_to"], [1303, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[566, "pyart.util.mean_of_two_angles"], [1304, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[567, "pyart.util.mean_of_two_angles_deg"], [1305, "pyart.util.mean_of_two_angles_deg"]], "radar_from_spectra() (in module pyart.util)": [[568, "pyart.util.radar_from_spectra"], [1306, "pyart.util.radar_from_spectra"]], "rolling_window() (in module pyart.util)": [[569, "pyart.util.rolling_window"], [1307, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[570, "pyart.util.simulated_vel_from_profile"], [1308, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[571, "pyart.util.sphere_distance"], [1309, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[572, "pyart.util.subset_radar"], [1310, "pyart.util.subset_radar"]], "subset_radar_spectra() (in module pyart.util)": [[573, "pyart.util.subset_radar_spectra"], [1311, "pyart.util.subset_radar_spectra"]], "texture() (in module pyart.util)": [[574, "pyart.util.texture"], [1312, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[575, "pyart.util.texture_along_ray"], [1313, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[576, "pyart.util.to_vpt"], [1314, "pyart.util.to_vpt"]], "weighted_kurtosis() (in module pyart.util)": [[577, "pyart.util.weighted_kurtosis"], [1315, "pyart.util.weighted_kurtosis"]], "weighted_mean() (in module pyart.util)": [[578, "pyart.util.weighted_mean"], [1316, "pyart.util.weighted_mean"]], "weighted_skew() (in module pyart.util)": [[579, "pyart.util.weighted_skew"], [1317, "pyart.util.weighted_skew"]], "weighted_variance() (in module pyart.util)": [[580, "pyart.util.weighted_variance"], [1318, "pyart.util.weighted_variance"]], "_debug_info() (in module pyart)": [[581, "pyart._debug_info"]], "module": [[582, "module-pyart.aux_io"], [630, "module-pyart.bridge"], [632, "module-pyart.config"], [645, "module-pyart.core"], [727, "module-pyart.correct"], [798, "module-pyart.exceptions"], [799, "module-pyart.filters"], [836, "module-pyart.graph"], [1013, "module-pyart.io"], [1036, "module-pyart.lazydict"], [1060, "module-pyart.map"], [1075, "module-pyart.retrieve"], [1172, "module-pyart.testing"], [1258, "module-pyart.util"]], "pyart.aux_io": [[582, "module-pyart.aux_io"]], "convert_data() (in module pyart.aux_io)": [[583, "pyart.aux_io.convert_data"]], "get_library() (in module pyart.aux_io)": [[585, "pyart.aux_io.get_library"]], "read_edge_netcdf() (in module pyart.aux_io)": [[595, "pyart.aux_io.read_edge_netcdf"]], "read_file_c() (in module pyart.aux_io)": [[596, "pyart.aux_io.read_file_c"]], "read_file_py() (in module pyart.aux_io)": [[597, "pyart.aux_io.read_file_py"]], "read_knmi_grid_h5() (in module pyart.aux_io)": [[604, "pyart.aux_io.read_knmi_grid_h5"]], "read_mch_vad() (in module pyart.aux_io)": [[605, "pyart.aux_io.read_mch_vad"]], "read_product_c() (in module pyart.aux_io)": [[613, "pyart.aux_io.read_product_c"]], "read_product_py() (in module pyart.aux_io)": [[614, "pyart.aux_io.read_product_py"]], "read_psr_cpi_header() (in module pyart.aux_io)": [[615, "pyart.aux_io.read_psr_cpi_header"]], "read_psr_header() (in module pyart.aux_io)": [[616, "pyart.aux_io.read_psr_header"]], "read_psr_spectra() (in module pyart.aux_io)": [[617, "pyart.aux_io.read_psr_spectra"]], "read_sinarame_h5() (in module pyart.aux_io)": [[622, "pyart.aux_io.read_sinarame_h5"]], "pyart.bridge": [[630, "module-pyart.bridge"]], "pyart.config": [[632, "module-pyart.config"]], "get_ke() (in module pyart.config)": [[637, "pyart.config.get_KE"]], "pyart.core": [[645, "module-pyart.core"]], "pyart.correct": [[727, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[728, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[729, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[730, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[731, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[732, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[733, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[734, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[735, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[736, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[737, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[738, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[739, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[740, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[741, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[742, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[743, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[744, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[745, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[746, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[747, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[748, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[749, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[750, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[751, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[752, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[753, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[754, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[755, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[756, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[757, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[758, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[761, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[762, "pyart.correct.correct_noise_rhohv"]], "correct_visibility() (in module pyart.correct)": [[764, "pyart.correct.correct_visibility"]], "correct_vpr() (in module pyart.correct)": [[765, "pyart.correct.correct_vpr"]], "correct_vpr_spatialised() (in module pyart.correct)": [[766, "pyart.correct.correct_vpr_spatialised"]], "despeckle_field() (in module pyart.correct)": [[770, "pyart.correct.despeckle_field"]], "est_rhohv_rain() (in module pyart.correct)": [[772, "pyart.correct.est_rhohv_rain"]], "est_zdr_precip() (in module pyart.correct)": [[773, "pyart.correct.est_zdr_precip"]], "est_zdr_snow() (in module pyart.correct)": [[774, "pyart.correct.est_zdr_snow"]], "gauss_fit() (in module pyart.correct)": [[776, "pyart.correct.gauss_fit"]], "get_sun_hits() (in module pyart.correct)": [[778, "pyart.correct.get_sun_hits"]], "get_sun_hits_ivic() (in module pyart.correct)": [[779, "pyart.correct.get_sun_hits_ivic"]], "get_sun_hits_psr() (in module pyart.correct)": [[780, "pyart.correct.get_sun_hits_psr"]], "moment_based_gate_filter() (in module pyart.correct)": [[781, "pyart.correct.moment_based_gate_filter"]], "retrieval_result() (in module pyart.correct)": [[785, "pyart.correct.retrieval_result"]], "selfconsistency_bias() (in module pyart.correct)": [[787, "pyart.correct.selfconsistency_bias"]], "selfconsistency_bias2() (in module pyart.correct)": [[788, "pyart.correct.selfconsistency_bias2"]], "selfconsistency_kdp_phidp() (in module pyart.correct)": [[789, "pyart.correct.selfconsistency_kdp_phidp"]], "sun_retrieval() (in module pyart.correct)": [[797, "pyart.correct.sun_retrieval"]], "pyart.exceptions": [[798, "module-pyart.exceptions"]], "pyart.filters": [[799, "module-pyart.filters"]], "pyart.graph": [[836, "module-pyart.graph"]], "plot_convstrat_scheme() (in module pyart.graph)": [[1011, "pyart.graph.plot_convstrat_scheme"]], "plot_maxcappi() (in module pyart.graph)": [[1012, "pyart.graph.plot_maxcappi"]], "pyart.io": [[1013, "module-pyart.io"]], "pyart.lazydict": [[1036, "module-pyart.lazydict"]], "mutablemapping (class in pyart.lazydict)": [[1050, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[1051, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[1052, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[1053, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[1054, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[1055, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[1056, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[1057, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[1058, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[1059, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[1060, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[1061, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[1062, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[1063, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[1064, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[1065, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[1066, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[1067, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[1068, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[1069, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[1070, "pyart.map.grid_rhi_sweeps"]], "gridstats_from_radar() (in module pyart.map)": [[1071, "pyart.map.gridstats_from_radar"]], "map_gates_to_grid() (in module pyart.map)": [[1072, "pyart.map.map_gates_to_grid"]], "map_gates_to_grid_to_list() (in module pyart.map)": [[1073, "pyart.map.map_gates_to_grid_to_list"]], "map_to_grid() (in module pyart.map)": [[1074, "pyart.map.map_to_grid"]], "pyart.retrieve": [[1075, "module-pyart.retrieve"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[1169, "pyart.retrieve.texture_of_complex_phase"]], "pyart.testing": [[1172, "module-pyart.testing"]], "grid (class in pyart.testing)": [[1173, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[1174, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[1175, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[1176, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[1177, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[1178, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[1179, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[1180, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[1181, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[1182, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[1183, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[1184, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[1185, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[1186, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[1187, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[1188, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[1189, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[1190, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[1191, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[1192, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[1193, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[1194, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[1195, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[1196, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[1197, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[1198, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[1199, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[1200, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[1201, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[1202, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[1203, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[1204, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[1205, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[1206, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[1207, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[1208, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[1209, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[1210, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[1211, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[1212, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[1213, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[1214, "pyart.testing.RadarSpectra"]], "add_field() (pyart.testing.radarspectra method)": [[1215, "pyart.testing.RadarSpectra.add_field"]], "add_field_like() (pyart.testing.radarspectra method)": [[1216, "pyart.testing.RadarSpectra.add_field_like"]], "add_filter() (pyart.testing.radarspectra method)": [[1217, "pyart.testing.RadarSpectra.add_filter"]], "check_field_exists() (pyart.testing.radarspectra method)": [[1218, "pyart.testing.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.testing.radarspectra method)": [[1219, "pyart.testing.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.testing.radarspectra method)": [[1220, "pyart.testing.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.testing.radarspectra method)": [[1221, "pyart.testing.RadarSpectra.get_elevation"]], "get_end() (pyart.testing.radarspectra method)": [[1222, "pyart.testing.RadarSpectra.get_end"]], "get_field() (pyart.testing.radarspectra method)": [[1223, "pyart.testing.RadarSpectra.get_field"]], "get_gate_area() (pyart.testing.radarspectra method)": [[1224, "pyart.testing.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radarspectra method)": [[1225, "pyart.testing.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radarspectra method)": [[1226, "pyart.testing.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radarspectra method)": [[1227, "pyart.testing.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.testing.radarspectra method)": [[1228, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[1229, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[1230, "pyart.testing.RadarSpectra.get_start_end"]], "info() (pyart.testing.radarspectra method)": [[1231, "pyart.testing.RadarSpectra.info"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[1232, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[1233, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[1234, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[1235, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[1236, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[1237, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[1238, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[1239, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[1240, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[1241, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[1242, "pyart.testing.RadarSpectra.iter_start_end"]], "get_metadata() (in module pyart.testing)": [[1243, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[1244, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[1245, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[1246, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[1247, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[1248, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[1249, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[1250, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[1251, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[1252, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[1253, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[1254, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[1255, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[1256, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[1257, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[1258, "module-pyart.util"]]}})