Search.setIndex({"docnames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/generated/pyart.aux_io.read_bin", "API/generated/generated/pyart.aux_io.read_bin_mf", "API/generated/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/generated/pyart.aux_io.read_cf1", "API/generated/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/generated/pyart.aux_io.read_dat_mf", "API/generated/generated/pyart.aux_io.read_gamic", "API/generated/generated/pyart.aux_io.read_gif", "API/generated/generated/pyart.aux_io.read_grib", "API/generated/generated/pyart.aux_io.read_hpl", "API/generated/generated/pyart.aux_io.read_iq", "API/generated/generated/pyart.aux_io.read_kazr", "API/generated/generated/pyart.aux_io.read_metranet", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/generated/pyart.aux_io.read_odim_h5", "API/generated/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/generated/pyart.aux_io.read_pattern", "API/generated/generated/pyart.aux_io.read_png", "API/generated/generated/pyart.aux_io.read_radx", "API/generated/generated/pyart.aux_io.read_rainbow_psr", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/generated/pyart.aux_io.read_skyecho", "API/generated/generated/pyart.aux_io.read_spectra", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/generated/pyart.aux_io.write_odim_h5", "API/generated/generated/pyart.aux_io.write_spectra", "API/generated/generated/pyart.bridge.texture_of_complex_phase", "API/generated/generated/pyart.config.FileMetadata", "API/generated/generated/pyart.config.FileMetadata.__call__", "API/generated/generated/pyart.config.FileMetadata.get_field_name", "API/generated/generated/pyart.config.FileMetadata.get_metadata", "API/generated/generated/pyart.config.get_field_colormap", "API/generated/generated/pyart.config.get_field_limits", "API/generated/generated/pyart.config.get_field_mapping", "API/generated/generated/pyart.config.get_field_name", "API/generated/generated/pyart.config.get_fillvalue", "API/generated/generated/pyart.config.get_metadata", "API/generated/generated/pyart.config.load_config", "API/generated/generated/pyart.core.Grid", "API/generated/generated/pyart.core.Grid.add_field", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.get_projparams", "API/generated/generated/pyart.core.Grid.init_point_altitude", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/generated/pyart.core.Grid.projection_proj", "API/generated/generated/pyart.core.Grid.to_xarray", "API/generated/generated/pyart.core.Grid.write", "API/generated/generated/pyart.core.HorizontalWindProfile", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/generated/pyart.core.Radar", "API/generated/generated/pyart.core.Radar.add_field", "API/generated/generated/pyart.core.Radar.add_field_like", "API/generated/generated/pyart.core.Radar.add_filter", "API/generated/generated/pyart.core.Radar.check_field_exists", "API/generated/generated/pyart.core.Radar.extract_sweeps", "API/generated/generated/pyart.core.Radar.get_azimuth", "API/generated/generated/pyart.core.Radar.get_elevation", "API/generated/generated/pyart.core.Radar.get_end", "API/generated/generated/pyart.core.Radar.get_field", "API/generated/generated/pyart.core.Radar.get_gate_area", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/generated/pyart.core.Radar.get_slice", "API/generated/generated/pyart.core.Radar.get_start", "API/generated/generated/pyart.core.Radar.get_start_end", "API/generated/generated/pyart.core.Radar.info", "API/generated/generated/pyart.core.Radar.init_gate_altitude", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/generated/pyart.core.Radar.iter_azimuth", "API/generated/generated/pyart.core.Radar.iter_elevation", "API/generated/generated/pyart.core.Radar.iter_end", "API/generated/generated/pyart.core.Radar.iter_field", "API/generated/generated/pyart.core.Radar.iter_slice", "API/generated/generated/pyart.core.Radar.iter_start", "API/generated/generated/pyart.core.Radar.iter_start_end", "API/generated/generated/pyart.core.RadarSpectra", "API/generated/generated/pyart.core.RadarSpectra.add_field", "API/generated/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/generated/pyart.core.RadarSpectra.add_filter", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/generated/pyart.core.RadarSpectra.get_end", "API/generated/generated/pyart.core.RadarSpectra.get_field", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/generated/pyart.core.RadarSpectra.get_slice", "API/generated/generated/pyart.core.RadarSpectra.get_start", "API/generated/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/generated/pyart.core.RadarSpectra.info", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/generated/pyart.core.RadarSpectra.iter_end", "API/generated/generated/pyart.core.RadarSpectra.iter_field", "API/generated/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/generated/pyart.core.RadarSpectra.iter_start", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/generated/pyart.core.antenna_to_cartesian", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/generated/pyart.core.cartesian_to_antenna", "API/generated/generated/pyart.core.cartesian_to_geographic", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/generated/pyart.core.geographic_to_cartesian", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/generated/pyart.correct.calculate_attenuation", "API/generated/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/generated/pyart.correct.compute_apparent_vpr", "API/generated/generated/pyart.correct.compute_theoretical_vpr", "API/generated/generated/pyart.correct.correct_bias", "API/generated/generated/pyart.correct.correct_noise_rhohv", "API/generated/generated/pyart.correct.correct_sys_phase", "API/generated/generated/pyart.correct.correct_visibility", "API/generated/generated/pyart.correct.correct_vpr", "API/generated/generated/pyart.correct.correct_vpr_spatialised", "API/generated/generated/pyart.correct.dealias_fourdd", "API/generated/generated/pyart.correct.dealias_region_based", "API/generated/generated/pyart.correct.dealias_unwrap_phase", "API/generated/generated/pyart.correct.despeckle_field", "API/generated/generated/pyart.correct.det_sys_phase_ray", "API/generated/generated/pyart.correct.est_rhohv_rain", "API/generated/generated/pyart.correct.est_zdr_precip", "API/generated/generated/pyart.correct.est_zdr_snow", "API/generated/generated/pyart.correct.find_objects", "API/generated/generated/pyart.correct.get_mask_fzl", "API/generated/generated/pyart.correct.get_sun_hits", "API/generated/generated/pyart.correct.get_sun_hits_ivic", "API/generated/generated/pyart.correct.get_sun_hits_psr", "API/generated/generated/pyart.correct.phase_proc_lp", "API/generated/generated/pyart.correct.phase_proc_lp_gf", "API/generated/generated/pyart.correct.ptoa_to_sf", "API/generated/generated/pyart.correct.scanning_losses", "API/generated/generated/pyart.correct.selfconsistency_bias", "API/generated/generated/pyart.correct.selfconsistency_bias2", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/generated/pyart.correct.smooth_masked", "API/generated/generated/pyart.correct.smooth_phidp_double_window", "API/generated/generated/pyart.correct.smooth_phidp_single_window", "API/generated/generated/pyart.correct.solar_flux_lookup", "API/generated/generated/pyart.correct.sun_position_mfr", "API/generated/generated/pyart.correct.sun_position_pysolar", "API/generated/generated/pyart.correct.sun_power", "API/generated/generated/pyart.correct.sun_retrieval", "API/generated/generated/pyart.exceptions.DeprecatedAttribute", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName", "API/generated/generated/pyart.exceptions.MissingOptionalDependency", "API/generated/generated/pyart.exceptions._deprecated_alias", "API/generated/generated/pyart.filters.GateFilter", "API/generated/generated/pyart.filters.GateFilter.copy", "API/generated/generated/pyart.filters.GateFilter.exclude_above", "API/generated/generated/pyart.filters.GateFilter.exclude_all", "API/generated/generated/pyart.filters.GateFilter.exclude_below", "API/generated/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/generated/pyart.filters.GateFilter.exclude_none", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/generated/pyart.filters.GateFilter.gate_included", "API/generated/generated/pyart.filters.GateFilter.include_above", "API/generated/generated/pyart.filters.GateFilter.include_all", "API/generated/generated/pyart.filters.GateFilter.include_below", "API/generated/generated/pyart.filters.GateFilter.include_equal", "API/generated/generated/pyart.filters.GateFilter.include_gates", "API/generated/generated/pyart.filters.GateFilter.include_inside", "API/generated/generated/pyart.filters.GateFilter.include_none", "API/generated/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/generated/pyart.filters.GateFilter.include_outside", "API/generated/generated/pyart.filters.GateFilter.include_valid", "API/generated/generated/pyart.filters.birds_gate_filter", "API/generated/generated/pyart.filters.class_based_gate_filter", "API/generated/generated/pyart.filters.iso0_based_gate_filter", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/generated/pyart.filters.moment_based_gate_filter", "API/generated/generated/pyart.filters.snr_based_gate_filter", "API/generated/generated/pyart.filters.temp_based_gate_filter", "API/generated/generated/pyart.filters.visibility_based_gate_filter", "API/generated/generated/pyart.graph.AirborneRadarDisplay", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/generated/pyart.graph.GridMapDisplay", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/generated/pyart.graph.RadarDisplay", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarDisplay.plot", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplay", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/generated/pyart.io.make_time_unit_str", "API/generated/generated/pyart.io.prepare_for_read", "API/generated/generated/pyart.io.read", "API/generated/generated/pyart.io.read_arm_sonde", "API/generated/generated/pyart.io.read_arm_sonde_vap", "API/generated/generated/pyart.io.read_cfradial", "API/generated/generated/pyart.io.read_cfradial2", "API/generated/generated/pyart.io.read_chl", "API/generated/generated/pyart.io.read_grid", "API/generated/generated/pyart.io.read_grid_mdv", "API/generated/generated/pyart.io.read_mdv", "API/generated/generated/pyart.io.read_nexrad_archive", "API/generated/generated/pyart.io.read_nexrad_cdm", "API/generated/generated/pyart.io.read_nexrad_level3", "API/generated/generated/pyart.io.read_rsl", "API/generated/generated/pyart.io.read_sigmet", "API/generated/generated/pyart.io.read_uf", "API/generated/generated/pyart.io.write_cfradial", "API/generated/generated/pyart.io.write_grid", "API/generated/generated/pyart.io.write_grid_geotiff", "API/generated/generated/pyart.io.write_grid_mdv", "API/generated/generated/pyart.io.write_uf", "API/generated/generated/pyart.lazydict.LazyLoadDict", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/generated/pyart.retrieve._destandardize", "API/generated/generated/pyart.retrieve._get_res_vol_sides", "API/generated/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/generated/pyart.retrieve.compute_Doppler_width", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/generated/pyart.retrieve.compute_apparent_profile", "API/generated/generated/pyart.retrieve.compute_bird_density", "API/generated/generated/pyart.retrieve.compute_ccor", "API/generated/generated/pyart.retrieve.compute_cdr", "API/generated/generated/pyart.retrieve.compute_centroids", "API/generated/generated/pyart.retrieve.compute_differential_phase", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_evp", "API/generated/generated/pyart.retrieve.compute_iq", "API/generated/generated/pyart.retrieve.compute_l", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/generated/pyart.retrieve.compute_noise_power", "API/generated/generated/pyart.retrieve.compute_noisedBZ", "API/generated/generated/pyart.retrieve.compute_pol_variables", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/generated/pyart.retrieve.compute_qvp", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/generated/pyart.retrieve.compute_rcs", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/generated/pyart.retrieve.compute_reflectivity", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_rhohv", "API/generated/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/generated/pyart.retrieve.compute_rqvp", "API/generated/generated/pyart.retrieve.compute_signal_power", "API/generated/generated/pyart.retrieve.compute_snr", "API/generated/generated/pyart.retrieve.compute_spectra", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_noise", "API/generated/generated/pyart.retrieve.compute_spectral_phase", "API/generated/generated/pyart.retrieve.compute_spectral_power", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/generated/pyart.retrieve.compute_st1_iq", "API/generated/generated/pyart.retrieve.compute_st2_iq", "API/generated/generated/pyart.retrieve.compute_svp", "API/generated/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/generated/pyart.retrieve.compute_vol_refl", "API/generated/generated/pyart.retrieve.compute_vp", "API/generated/generated/pyart.retrieve.compute_wbn_iq", "API/generated/generated/pyart.retrieve.conv_strat_yuter", "API/generated/generated/pyart.retrieve.data_for_centroids", "API/generated/generated/pyart.retrieve.dealias_spectra", "API/generated/generated/pyart.retrieve.detect_ml", "API/generated/generated/pyart.retrieve.determine_medoids", "API/generated/generated/pyart.retrieve.est_rain_rate_a", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/generated/pyart.retrieve.est_rain_rate_z", "API/generated/generated/pyart.retrieve.est_rain_rate_za", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/generated/pyart.retrieve.est_vertical_windshear", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/generated/pyart.retrieve.est_wind_profile", "API/generated/generated/pyart.retrieve.est_wind_vel", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/generated/pyart.retrieve.gecsx", "API/generated/generated/pyart.retrieve.get_coeff_attg", "API/generated/generated/pyart.retrieve.get_freq_band", "API/generated/generated/pyart.retrieve.get_iso0_val", "API/generated/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/generated/pyart.retrieve.grid_displacement_pc", "API/generated/generated/pyart.retrieve.grid_shift", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/generated/pyart.retrieve.kdp_maesaka", "API/generated/generated/pyart.retrieve.kdp_schneebeli", "API/generated/generated/pyart.retrieve.kdp_vulpiani", "API/generated/generated/pyart.retrieve.map_profile_to_gates", "API/generated/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/generated/pyart.retrieve.melting_layer_mf", "API/generated/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/generated/pyart.retrieve.select_samples", "API/generated/generated/pyart.retrieve.steiner_conv_strat", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/generated/pyart.retrieve.vad_browning", "API/generated/generated/pyart.retrieve.vad_michelson", "API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.convert_data", "API/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/pyart.aux_io.get_library", "API/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/pyart.aux_io.read_bin", "API/generated/pyart.aux_io.read_bin_mf", "API/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/pyart.aux_io.read_cf1", "API/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_dat_mf", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_file_c", "API/generated/pyart.aux_io.read_file_py", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_gif", "API/generated/pyart.aux_io.read_grib", "API/generated/pyart.aux_io.read_hpl", "API/generated/pyart.aux_io.read_iq", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_knmi_grid_h5", "API/generated/pyart.aux_io.read_mch_vad", "API/generated/pyart.aux_io.read_metranet", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_png", "API/generated/pyart.aux_io.read_product_c", "API/generated/pyart.aux_io.read_product_py", "API/generated/pyart.aux_io.read_psr_cpi_header", "API/generated/pyart.aux_io.read_psr_header", "API/generated/pyart.aux_io.read_psr_spectra", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_rainbow_psr", "API/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.read_skyecho", "API/generated/pyart.aux_io.read_spectra", "API/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/pyart.aux_io.write_odim_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.aux_io.write_spectra", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_KE", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.add_field", "API/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/pyart.core.RadarSpectra.add_filter", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_field", "API/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.info", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.compute_apparent_vpr", "API/generated/pyart.correct.compute_theoretical_vpr", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.correct_sys_phase", "API/generated/pyart.correct.correct_visibility", "API/generated/pyart.correct.correct_vpr", "API/generated/pyart.correct.correct_vpr_spatialised", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.det_sys_phase_ray", "API/generated/pyart.correct.est_rhohv_rain", "API/generated/pyart.correct.est_zdr_precip", "API/generated/pyart.correct.est_zdr_snow", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.gauss_fit", "API/generated/pyart.correct.get_mask_fzl", "API/generated/pyart.correct.get_sun_hits", "API/generated/pyart.correct.get_sun_hits_ivic", "API/generated/pyart.correct.get_sun_hits_psr", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.ptoa_to_sf", "API/generated/pyart.correct.retrieval_result", "API/generated/pyart.correct.scanning_losses", "API/generated/pyart.correct.selfconsistency_bias", "API/generated/pyart.correct.selfconsistency_bias2", "API/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/pyart.correct.smooth_masked", "API/generated/pyart.correct.smooth_phidp_double_window", "API/generated/pyart.correct.smooth_phidp_single_window", "API/generated/pyart.correct.solar_flux_lookup", "API/generated/pyart.correct.sun_position_mfr", "API/generated/pyart.correct.sun_position_pysolar", "API/generated/pyart.correct.sun_power", "API/generated/pyart.correct.sun_retrieval", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.birds_gate_filter", "API/generated/pyart.filters.class_based_gate_filter", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.snr_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.filters.visibility_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.make_time_unit_str", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_cfradial2", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/pyart.retrieve.compute_Doppler_width", "API/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/pyart.retrieve.compute_apparent_profile", "API/generated/pyart.retrieve.compute_bird_density", "API/generated/pyart.retrieve.compute_ccor", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_centroids", "API/generated/pyart.retrieve.compute_differential_phase", "API/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_iq", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/pyart.retrieve.compute_noise_power", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_pol_variables", "API/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/pyart.retrieve.compute_rcs", "API/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/pyart.retrieve.compute_reflectivity", "API/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/pyart.retrieve.compute_rhohv", "API/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_signal_power", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_spectra", "API/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/pyart.retrieve.compute_spectral_noise", "API/generated/pyart.retrieve.compute_spectral_phase", "API/generated/pyart.retrieve.compute_spectral_power", "API/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/pyart.retrieve.compute_st1_iq", "API/generated/pyart.retrieve.compute_st2_iq", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vol_refl", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.compute_wbn_iq", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.data_for_centroids", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.detect_ml", "API/generated/pyart.retrieve.determine_medoids", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.est_vertical_windshear", "API/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/pyart.retrieve.est_wind_profile", "API/generated/pyart.retrieve.est_wind_vel", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.gecsx", "API/generated/pyart.retrieve.get_coeff_attg", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.get_iso0_val", "API/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/pyart.retrieve.melting_layer_mf", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.select_samples", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.add_field", "API/generated/pyart.testing.RadarSpectra.add_field_like", "API/generated/pyart.testing.RadarSpectra.add_filter", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.extract_sweeps", "API/generated/pyart.testing.RadarSpectra.get_azimuth", "API/generated/pyart.testing.RadarSpectra.get_elevation", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_field", "API/generated/pyart.testing.RadarSpectra.get_gate_area", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.info", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.colocated_gates", "API/generated/pyart.util.colocated_gates2", "API/generated/pyart.util.compute_azimuthal_average", "API/generated/pyart.util.compute_corr", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.compute_mse", "API/generated/pyart.util.compute_nse", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.estimate_noise_ivic13", "API/generated/pyart.util.find_neighbour_gates", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/pyart.util.get_ivic_pct", "API/generated/pyart.util.get_ivic_snr_thr", "API/generated/pyart.util.get_target_elevations", "API/generated/pyart.util.grid_texture_2d", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interpol_spectra", "API/generated/pyart.util.intersection", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/pyart.util.ivic_pct_table", "API/generated/pyart.util.ivic_snr_thr_table", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.join_spectra", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.radar_from_spectra", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.subset_radar_spectra", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "changelog", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/read_mch_metranet_data", "notebooks/swiss_doppler", "notebooks/swiss_thunderstorm", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/generated/pyart.aux_io.read_bin.rst", "API/generated/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/generated/pyart.aux_io.read_cf1.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/generated/pyart.aux_io.read_gamic.rst", "API/generated/generated/pyart.aux_io.read_gif.rst", "API/generated/generated/pyart.aux_io.read_grib.rst", "API/generated/generated/pyart.aux_io.read_hpl.rst", "API/generated/generated/pyart.aux_io.read_iq.rst", "API/generated/generated/pyart.aux_io.read_kazr.rst", "API/generated/generated/pyart.aux_io.read_metranet.rst", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/generated/pyart.aux_io.read_pattern.rst", "API/generated/generated/pyart.aux_io.read_png.rst", "API/generated/generated/pyart.aux_io.read_radx.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/generated/pyart.aux_io.read_skyecho.rst", "API/generated/generated/pyart.aux_io.read_spectra.rst", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/generated/pyart.aux_io.write_spectra.rst", "API/generated/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/generated/pyart.config.FileMetadata.rst", "API/generated/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/generated/pyart.config.get_field_colormap.rst", "API/generated/generated/pyart.config.get_field_limits.rst", "API/generated/generated/pyart.config.get_field_mapping.rst", "API/generated/generated/pyart.config.get_field_name.rst", "API/generated/generated/pyart.config.get_fillvalue.rst", "API/generated/generated/pyart.config.get_metadata.rst", "API/generated/generated/pyart.config.load_config.rst", "API/generated/generated/pyart.core.Grid.rst", "API/generated/generated/pyart.core.Grid.add_field.rst", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.get_projparams.rst", "API/generated/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/generated/pyart.core.Grid.projection_proj.rst", "API/generated/generated/pyart.core.Grid.to_xarray.rst", "API/generated/generated/pyart.core.Grid.write.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/generated/pyart.core.Radar.rst", "API/generated/generated/pyart.core.Radar.add_field.rst", "API/generated/generated/pyart.core.Radar.add_field_like.rst", "API/generated/generated/pyart.core.Radar.add_filter.rst", "API/generated/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/generated/pyart.core.Radar.get_elevation.rst", "API/generated/generated/pyart.core.Radar.get_end.rst", "API/generated/generated/pyart.core.Radar.get_field.rst", "API/generated/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/generated/pyart.core.Radar.get_slice.rst", "API/generated/generated/pyart.core.Radar.get_start.rst", "API/generated/generated/pyart.core.Radar.get_start_end.rst", "API/generated/generated/pyart.core.Radar.info.rst", "API/generated/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/generated/pyart.core.Radar.iter_end.rst", "API/generated/generated/pyart.core.Radar.iter_field.rst", "API/generated/generated/pyart.core.Radar.iter_slice.rst", "API/generated/generated/pyart.core.Radar.iter_start.rst", "API/generated/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.info.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/generated/pyart.correct.calculate_attenuation.rst", "API/generated/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/generated/pyart.correct.correct_bias.rst", "API/generated/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/generated/pyart.correct.correct_sys_phase.rst", "API/generated/generated/pyart.correct.correct_visibility.rst", "API/generated/generated/pyart.correct.correct_vpr.rst", "API/generated/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/generated/pyart.correct.dealias_fourdd.rst", "API/generated/generated/pyart.correct.dealias_region_based.rst", "API/generated/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/generated/pyart.correct.despeckle_field.rst", "API/generated/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/generated/pyart.correct.est_zdr_precip.rst", "API/generated/generated/pyart.correct.est_zdr_snow.rst", "API/generated/generated/pyart.correct.find_objects.rst", "API/generated/generated/pyart.correct.get_mask_fzl.rst", "API/generated/generated/pyart.correct.get_sun_hits.rst", "API/generated/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/generated/pyart.correct.phase_proc_lp.rst", "API/generated/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/generated/pyart.correct.scanning_losses.rst", "API/generated/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/generated/pyart.correct.smooth_masked.rst", "API/generated/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/generated/pyart.correct.sun_position_mfr.rst", "API/generated/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/generated/pyart.correct.sun_power.rst", "API/generated/generated/pyart.correct.sun_retrieval.rst", "API/generated/generated/pyart.exceptions.DeprecatedAttribute.rst", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName.rst", "API/generated/generated/pyart.exceptions.MissingOptionalDependency.rst", "API/generated/generated/pyart.exceptions._deprecated_alias.rst", "API/generated/generated/pyart.filters.GateFilter.rst", "API/generated/generated/pyart.filters.GateFilter.copy.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/generated/pyart.filters.birds_gate_filter.rst", "API/generated/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.GridMapDisplay.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.RadarDisplay.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/generated/pyart.io.make_time_unit_str.rst", "API/generated/generated/pyart.io.prepare_for_read.rst", "API/generated/generated/pyart.io.read.rst", "API/generated/generated/pyart.io.read_arm_sonde.rst", "API/generated/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/generated/pyart.io.read_cfradial.rst", "API/generated/generated/pyart.io.read_cfradial2.rst", "API/generated/generated/pyart.io.read_chl.rst", "API/generated/generated/pyart.io.read_grid.rst", "API/generated/generated/pyart.io.read_grid_mdv.rst", "API/generated/generated/pyart.io.read_mdv.rst", "API/generated/generated/pyart.io.read_nexrad_archive.rst", "API/generated/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/generated/pyart.io.read_nexrad_level3.rst", "API/generated/generated/pyart.io.read_rsl.rst", "API/generated/generated/pyart.io.read_sigmet.rst", "API/generated/generated/pyart.io.read_uf.rst", "API/generated/generated/pyart.io.write_cfradial.rst", "API/generated/generated/pyart.io.write_grid.rst", "API/generated/generated/pyart.io.write_grid_geotiff.rst", "API/generated/generated/pyart.io.write_grid_mdv.rst", "API/generated/generated/pyart.io.write_uf.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/generated/pyart.retrieve._destandardize.rst", "API/generated/generated/pyart.retrieve._get_res_vol_sides.rst", "API/generated/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/generated/pyart.retrieve.compute_ccor.rst", "API/generated/generated/pyart.retrieve.compute_cdr.rst", "API/generated/generated/pyart.retrieve.compute_centroids.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_evp.rst", "API/generated/generated/pyart.retrieve.compute_iq.rst", "API/generated/generated/pyart.retrieve.compute_l.rst", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/generated/pyart.retrieve.compute_qvp.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/generated/pyart.retrieve.compute_rcs.rst", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/generated/pyart.retrieve.compute_snr.rst", "API/generated/generated/pyart.retrieve.compute_spectra.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/generated/pyart.retrieve.compute_svp.rst", "API/generated/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/generated/pyart.retrieve.compute_vp.rst", "API/generated/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/generated/pyart.retrieve.detect_ml.rst", "API/generated/generated/pyart.retrieve.determine_medoids.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/generated/pyart.retrieve.gecsx.rst", "API/generated/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/generated/pyart.retrieve.get_freq_band.rst", "API/generated/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/generated/pyart.retrieve.grid_shift.rst", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/generated/pyart.retrieve.select_samples.rst", "API/generated/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/generated/pyart.retrieve.vad_browning.rst", "API/generated/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.convert_data.rst", "API/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/pyart.aux_io.get_library.rst", "API/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/pyart.aux_io.read_bin.rst", "API/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/pyart.aux_io.read_cf1.rst", "API/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_file_c.rst", "API/generated/pyart.aux_io.read_file_py.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_gif.rst", "API/generated/pyart.aux_io.read_grib.rst", "API/generated/pyart.aux_io.read_hpl.rst", "API/generated/pyart.aux_io.read_iq.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_knmi_grid_h5.rst", "API/generated/pyart.aux_io.read_mch_vad.rst", "API/generated/pyart.aux_io.read_metranet.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_png.rst", "API/generated/pyart.aux_io.read_product_c.rst", "API/generated/pyart.aux_io.read_product_py.rst", "API/generated/pyart.aux_io.read_psr_cpi_header.rst", "API/generated/pyart.aux_io.read_psr_header.rst", "API/generated/pyart.aux_io.read_psr_spectra.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.read_skyecho.rst", "API/generated/pyart.aux_io.read_spectra.rst", "API/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.aux_io.write_spectra.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_KE.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.info.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.correct_sys_phase.rst", "API/generated/pyart.correct.correct_visibility.rst", "API/generated/pyart.correct.correct_vpr.rst", "API/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/pyart.correct.est_zdr_precip.rst", "API/generated/pyart.correct.est_zdr_snow.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.gauss_fit.rst", "API/generated/pyart.correct.get_mask_fzl.rst", "API/generated/pyart.correct.get_sun_hits.rst", "API/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/pyart.correct.retrieval_result.rst", "API/generated/pyart.correct.scanning_losses.rst", "API/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/pyart.correct.smooth_masked.rst", "API/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/pyart.correct.sun_position_mfr.rst", "API/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/pyart.correct.sun_power.rst", "API/generated/pyart.correct.sun_retrieval.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.birds_gate_filter.rst", "API/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.make_time_unit_str.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_cfradial2.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/pyart.retrieve.compute_ccor.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_centroids.rst", "API/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_iq.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/pyart.retrieve.compute_rcs.rst", "API/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_spectra.rst", "API/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.detect_ml.rst", "API/generated/pyart.retrieve.determine_medoids.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.gecsx.rst", "API/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.select_samples.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.add_field.rst", "API/generated/pyart.testing.RadarSpectra.add_field_like.rst", "API/generated/pyart.testing.RadarSpectra.add_filter.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.testing.RadarSpectra.get_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.get_elevation.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_field.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_area.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.info.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.colocated_gates.rst", "API/generated/pyart.util.colocated_gates2.rst", "API/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/pyart.util.compute_corr.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.compute_mse.rst", "API/generated/pyart.util.compute_nse.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/pyart.util.find_neighbour_gates.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/pyart.util.get_ivic_pct.rst", "API/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/pyart.util.get_target_elevations.rst", "API/generated/pyart.util.grid_texture_2d.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interpol_spectra.rst", "API/generated/pyart.util.intersection.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/pyart.util.ivic_pct_table.rst", "API/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.join_spectra.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.radar_from_spectra.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.subset_radar_spectra.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "changelog.md", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/read_mch_metranet_data.ipynb", "notebooks/swiss_doppler.ipynb", "notebooks/swiss_thunderstorm.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_spectra", "pyart.bridge.texture_of_complex_phase", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions.DeprecatedAttribute", "pyart.exceptions.DeprecatedFunctionName", "pyart.exceptions.MissingOptionalDependency", "pyart.exceptions._deprecated_alias", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.__contains__", "pyart.lazydict.LazyLoadDict.__delattr__", "pyart.lazydict.LazyLoadDict.__delitem__", "pyart.lazydict.LazyLoadDict.__dir__", "pyart.lazydict.LazyLoadDict.__eq__", "pyart.lazydict.LazyLoadDict.__format__", "pyart.lazydict.LazyLoadDict.__ge__", "pyart.lazydict.LazyLoadDict.__getattribute__", "pyart.lazydict.LazyLoadDict.__getitem__", "pyart.lazydict.LazyLoadDict.__getstate__", "pyart.lazydict.LazyLoadDict.__gt__", "pyart.lazydict.LazyLoadDict.__init__", "pyart.lazydict.LazyLoadDict.__init_subclass__", "pyart.lazydict.LazyLoadDict.__iter__", "pyart.lazydict.LazyLoadDict.__le__", "pyart.lazydict.LazyLoadDict.__len__", "pyart.lazydict.LazyLoadDict.__lt__", "pyart.lazydict.LazyLoadDict.__ne__", "pyart.lazydict.LazyLoadDict.__new__", "pyart.lazydict.LazyLoadDict.__reduce__", "pyart.lazydict.LazyLoadDict.__reduce_ex__", "pyart.lazydict.LazyLoadDict.__repr__", "pyart.lazydict.LazyLoadDict.__setattr__", "pyart.lazydict.LazyLoadDict.__setitem__", "pyart.lazydict.LazyLoadDict.__sizeof__", "pyart.lazydict.LazyLoadDict.__str__", "pyart.lazydict.LazyLoadDict.__subclasshook__", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.retrieve._destandardize", "pyart.retrieve._get_res_vol_sides", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart._debug_info", "pyart.aux_io", "pyart.aux_io.convert_data", "pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_library", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_file_c", "pyart.aux_io.read_file_py", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_knmi_grid_h5", "pyart.aux_io.read_mch_vad", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_product_c", "pyart.aux_io.read_product_py", "pyart.aux_io.read_psr_cpi_header", "pyart.aux_io.read_psr_header", "pyart.aux_io.read_psr_spectra", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_KE", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.gauss_fit", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.retrieval_result", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.add_field", "pyart.testing.RadarSpectra.add_field_like", "pyart.testing.RadarSpectra.add_filter", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.extract_sweeps", "pyart.testing.RadarSpectra.get_azimuth", "pyart.testing.RadarSpectra.get_elevation", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_field", "pyart.testing.RadarSpectra.get_gate_area", "pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "pyart.testing.RadarSpectra.get_gate_x_y_z", "pyart.testing.RadarSpectra.get_nyquist_vel", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.info", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Manual", "Changelog", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "About the MeteoSwiss fork of Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "Reading MeteoSwiss Metranet data with Py-ART", "Processing of Doppler wind data from a Swiss volumetric scan", "Filtering and retrievals on raw Swiss C-band data", "The Py-ART Radar object and indexing", "Computation times", "Installation", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"filenam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44, 54, 207, 243, 259, 274, 307, 333, 344, 370, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 598, 609, 793, 829, 845, 860, 893, 919, 930, 956, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 1130, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1317], "basepath": [0, 538], "none": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 45, 55, 59, 62, 70, 71, 88, 91, 99, 100, 117, 118, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 164, 197, 198, 199, 200, 201, 202, 203, 204, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 429, 431, 439, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 538, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 567, 568, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 585, 587, 589, 593, 598, 600, 610, 614, 617, 625, 626, 643, 646, 654, 655, 672, 673, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 745, 746, 751, 782, 783, 784, 785, 786, 787, 788, 789, 795, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 850, 851, 852, 853, 854, 855, 856, 857, 858, 862, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 895, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 917, 918, 919, 921, 922, 923, 924, 925, 926, 927, 928, 932, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 965, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 991, 993, 1001, 1004, 1005, 1011, 1014, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1117, 1118, 1119, 1121, 1131, 1133, 1136, 1144, 1145, 1162, 1165, 1173, 1174, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1219, 1227, 1236, 1238, 1253, 1255, 1256, 1279, 1288, 1298, 1311, 1313, 1314, 1317], "sweep_dir": [0, 538], "dir_timeformat": [0, 538], "y": [0, 3, 9, 22, 45, 51, 53, 71, 79, 100, 108, 117, 118, 119, 120, 121, 122, 123, 124, 205, 207, 219, 222, 224, 227, 229, 232, 233, 234, 235, 236, 238, 249, 251, 255, 257, 267, 269, 271, 272, 274, 286, 289, 291, 294, 296, 299, 300, 301, 302, 304, 305, 307, 319, 322, 324, 327, 330, 332, 336, 337, 338, 339, 341, 342, 344, 356, 359, 361, 364, 367, 369, 373, 374, 375, 376, 378, 494, 516, 517, 530, 538, 542, 548, 566, 600, 606, 608, 626, 634, 655, 663, 672, 673, 674, 675, 676, 677, 678, 679, 791, 793, 805, 808, 810, 813, 815, 818, 819, 820, 821, 822, 824, 835, 837, 841, 843, 853, 855, 857, 858, 860, 872, 875, 877, 880, 882, 885, 886, 887, 888, 890, 891, 893, 905, 908, 910, 913, 916, 918, 922, 923, 924, 925, 927, 928, 930, 942, 945, 947, 950, 953, 955, 959, 960, 961, 962, 964, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1079, 1101, 1102, 1115, 1121, 1127, 1129, 1145, 1153, 1174, 1182, 1193, 1235, 1272, 1278, 1279, 1288, 1289, 1296, 1298, 1312], "m": [0, 3, 9, 14, 16, 22, 24, 25, 69, 72, 98, 101, 119, 125, 129, 130, 135, 136, 139, 146, 147, 152, 154, 155, 156, 160, 163, 197, 199, 203, 207, 274, 307, 344, 450, 459, 464, 467, 469, 476, 489, 490, 492, 499, 511, 515, 516, 518, 521, 522, 525, 527, 528, 530, 538, 539, 542, 548, 556, 560, 566, 573, 574, 624, 627, 653, 656, 674, 680, 713, 714, 719, 720, 723, 731, 732, 738, 741, 742, 743, 747, 750, 782, 784, 788, 793, 860, 893, 930, 1021, 1025, 1035, 1044, 1049, 1052, 1054, 1061, 1074, 1075, 1077, 1084, 1096, 1100, 1101, 1103, 1106, 1107, 1110, 1112, 1113, 1115, 1143, 1146, 1172, 1175, 1211, 1212, 1226, 1227, 1236, 1238, 1255, 1256, 1268, 1280, 1289, 1298, 1300, 1303, 1311, 1312, 1313, 1316, 1317], "d": [0, 3, 9, 22, 128, 139, 207, 274, 307, 344, 401, 429, 431, 433, 434, 435, 436, 438, 439, 440, 476, 489, 497, 523, 534, 538, 542, 548, 566, 712, 723, 793, 860, 893, 930, 990, 991, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1061, 1074, 1082, 1108, 1119, 1296, 1317], "file_prefix": [0, 538], "file_sufix": [0, 538], "file_timeformat": [0, 538], "dt": [0, 161, 162, 538, 748, 749, 1264], "h": [0, 9, 14, 139, 147, 148, 149, 207, 264, 274, 307, 344, 370, 449, 456, 462, 463, 467, 468, 482, 487, 488, 493, 504, 528, 538, 548, 556, 723, 732, 733, 734, 793, 850, 860, 893, 930, 956, 1034, 1041, 1047, 1048, 1052, 1053, 1067, 1072, 1073, 1078, 1089, 1113, 1225, 1272, 1279, 1313], "": [0, 9, 44, 45, 59, 72, 76, 88, 101, 105, 117, 118, 121, 124, 138, 139, 150, 151, 152, 163, 207, 209, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 274, 276, 289, 296, 300, 301, 302, 307, 309, 322, 332, 337, 338, 339, 344, 346, 359, 369, 374, 375, 376, 433, 434, 440, 454, 463, 467, 468, 469, 470, 482, 494, 499, 500, 513, 516, 521, 522, 523, 525, 528, 530, 531, 534, 538, 548, 598, 600, 614, 627, 631, 643, 656, 660, 672, 673, 676, 679, 722, 723, 736, 737, 738, 750, 793, 795, 808, 815, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 860, 862, 875, 882, 886, 887, 888, 893, 895, 908, 918, 923, 924, 925, 930, 932, 945, 955, 960, 961, 962, 995, 996, 1002, 1006, 1007, 1012, 1014, 1016, 1021, 1039, 1048, 1052, 1053, 1054, 1055, 1067, 1079, 1084, 1085, 1098, 1101, 1106, 1107, 1108, 1110, 1113, 1115, 1116, 1119, 1121, 1133, 1146, 1150, 1162, 1175, 1179, 1225, 1226, 1236, 1268, 1269, 1272, 1277, 1279, 1280, 1289, 1296, 1298, 1300, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1318], "sweep_start_tim": [0, 538], "sweep_end_tim": [0, 27, 538, 577], "field_nam": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36, 46, 60, 61, 63, 68, 84, 89, 90, 92, 97, 113, 131, 134, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 441, 459, 467, 476, 489, 490, 492, 538, 542, 544, 545, 546, 547, 548, 552, 554, 556, 557, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 577, 578, 579, 580, 581, 587, 589, 601, 615, 616, 618, 623, 639, 644, 645, 647, 652, 668, 715, 718, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 1044, 1052, 1061, 1074, 1075, 1077, 1122, 1134, 1135, 1137, 1142, 1158, 1163, 1164, 1166, 1171, 1187, 1213, 1255, 1256, 1272, 1309], "additional_metadata": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 34, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 538, 541, 542, 543, 544, 547, 548, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 577, 578, 579, 587, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983], "file_field_nam": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 36, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 538, 544, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 587, 589, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 988], "fals": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 30, 31, 32, 34, 46, 47, 54, 60, 61, 62, 65, 66, 68, 70, 71, 72, 89, 90, 91, 94, 95, 97, 99, 100, 101, 118, 122, 125, 126, 135, 137, 138, 139, 150, 151, 154, 155, 164, 169, 171, 173, 175, 181, 182, 185, 187, 189, 194, 195, 207, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 264, 267, 269, 271, 274, 289, 291, 296, 299, 300, 301, 302, 307, 322, 324, 332, 333, 336, 337, 338, 339, 344, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 428, 432, 445, 454, 458, 465, 466, 468, 469, 471, 473, 474, 475, 480, 481, 484, 485, 486, 494, 497, 498, 500, 509, 518, 519, 520, 521, 522, 523, 525, 526, 538, 539, 544, 545, 546, 547, 550, 551, 552, 556, 557, 558, 560, 561, 562, 563, 564, 567, 568, 573, 574, 575, 576, 577, 578, 580, 581, 583, 587, 601, 602, 609, 615, 616, 617, 620, 621, 623, 625, 626, 627, 644, 645, 646, 649, 650, 652, 654, 655, 656, 673, 677, 680, 682, 684, 686, 688, 694, 695, 698, 700, 702, 707, 708, 710, 719, 721, 722, 723, 736, 737, 741, 742, 751, 754, 756, 758, 760, 766, 767, 770, 772, 774, 779, 780, 793, 808, 810, 815, 818, 819, 820, 821, 822, 825, 835, 837, 838, 839, 841, 843, 844, 850, 853, 855, 857, 860, 875, 877, 882, 885, 886, 887, 888, 893, 908, 910, 918, 919, 922, 923, 924, 925, 930, 945, 947, 955, 956, 959, 960, 961, 962, 965, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 994, 1024, 1025, 1029, 1039, 1043, 1050, 1051, 1053, 1054, 1056, 1058, 1059, 1060, 1065, 1066, 1069, 1070, 1071, 1079, 1082, 1083, 1085, 1094, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1122, 1123, 1130, 1131, 1134, 1135, 1136, 1139, 1140, 1142, 1144, 1145, 1146, 1163, 1164, 1165, 1168, 1169, 1171, 1173, 1174, 1175, 1203, 1204, 1220, 1221, 1222, 1223, 1224, 1226, 1231, 1233, 1241, 1245, 1259, 1279, 1286, 1288, 1289, 1291, 1298, 1305, 1306, 1310, 1311, 1314, 1317], "exclude_field": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 538, 544, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 587, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 988], "include_field": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 62, 91, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 538, 544, 547, 552, 556, 557, 558, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 587, 617, 646, 972, 973, 974, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 1136, 1165], "verbos": [0, 511, 521, 538, 539, 550, 551, 567, 568, 1096, 1106, 1317], "kwarg": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 137, 138, 139, 221, 222, 223, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 264, 267, 268, 269, 270, 271, 288, 289, 290, 296, 300, 301, 302, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 358, 359, 360, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 420, 521, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 556, 558, 560, 561, 562, 563, 564, 565, 566, 572, 573, 574, 575, 576, 577, 578, 721, 722, 723, 807, 808, 809, 815, 819, 820, 821, 822, 834, 835, 837, 838, 839, 840, 841, 842, 843, 850, 853, 854, 855, 856, 857, 874, 875, 876, 882, 886, 887, 888, 907, 908, 909, 915, 916, 917, 918, 919, 920, 923, 924, 925, 944, 945, 946, 952, 953, 954, 955, 956, 957, 960, 961, 962, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 982, 983, 1021, 1022, 1023, 1024, 1025, 1106, 1220, 1221, 1222, 1223, 1224, 1312], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 105, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215, 219, 220, 221, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 329, 330, 331, 333, 334, 342, 366, 367, 368, 370, 371, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 410, 413, 415, 417, 425, 427, 430, 432, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 660, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 801, 805, 806, 807, 820, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 915, 916, 917, 919, 920, 928, 952, 953, 954, 956, 957, 965, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 992, 994, 999, 1014, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1179, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1264, 1266, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317, 1319], "read": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 36, 169, 222, 233, 289, 300, 322, 337, 359, 374, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 587, 589, 682, 754, 808, 819, 875, 886, 908, 923, 945, 960, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 988, 1261, 1263, 1264, 1266, 1267, 1270, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1283, 1285, 1288, 1289, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1306, 1307, 1309, 1310, 1314, 1315], "skyecho": [0, 1, 27, 538, 540, 577, 1261], "netcdf": [0, 1, 5, 6, 7, 8, 13, 15, 17, 21, 27, 28, 32, 54, 382, 383, 384, 385, 387, 391, 396, 397, 510, 538, 540, 544, 545, 546, 547, 549, 555, 557, 561, 565, 577, 578, 583, 609, 970, 971, 972, 973, 975, 979, 984, 985, 1095, 1130, 1220, 1223, 1261, 1303, 1304], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 44, 54, 59, 76, 88, 105, 126, 127, 128, 133, 137, 138, 139, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 197, 198, 199, 200, 201, 202, 203, 204, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 444, 446, 447, 448, 449, 455, 456, 457, 458, 462, 463, 465, 466, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 493, 494, 495, 496, 497, 511, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 535, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 587, 589, 592, 593, 594, 595, 598, 609, 614, 631, 643, 660, 710, 711, 712, 717, 721, 722, 723, 725, 726, 727, 728, 731, 735, 736, 737, 741, 742, 743, 745, 746, 782, 783, 784, 785, 786, 787, 788, 789, 966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 1028, 1031, 1032, 1033, 1034, 1040, 1041, 1042, 1043, 1047, 1048, 1050, 1051, 1057, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1078, 1079, 1080, 1081, 1082, 1096, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1117, 1120, 1130, 1133, 1150, 1162, 1179, 1192, 1253, 1261, 1263, 1265, 1266, 1268, 1269, 1270, 1273, 1275, 1276, 1277, 1280, 1282, 1285, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1310, 1312, 1313, 1314, 1315, 1316, 1319], "creat": [0, 30, 31, 32, 45, 56, 59, 61, 64, 88, 90, 93, 137, 138, 139, 140, 168, 197, 198, 199, 200, 201, 202, 203, 204, 205, 221, 235, 239, 258, 272, 288, 301, 305, 321, 333, 338, 342, 358, 370, 375, 391, 396, 397, 398, 399, 400, 459, 467, 476, 489, 490, 492, 508, 528, 533, 534, 538, 580, 581, 583, 600, 611, 614, 616, 619, 643, 645, 648, 721, 722, 723, 724, 735, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 807, 821, 825, 844, 858, 874, 887, 891, 907, 919, 924, 928, 944, 956, 961, 979, 984, 985, 986, 987, 988, 1024, 1025, 1044, 1052, 1061, 1074, 1075, 1077, 1093, 1113, 1118, 1119, 1121, 1131, 1133, 1135, 1138, 1162, 1164, 1167, 1252, 1253, 1263, 1264, 1266, 1269, 1272, 1273, 1274, 1276, 1277, 1279, 1293, 1294, 1298, 1303, 1304, 1306, 1309, 1312, 1313, 1315, 1317], "new": [0, 44, 61, 62, 64, 90, 91, 93, 140, 173, 175, 182, 189, 194, 459, 467, 476, 489, 490, 492, 517, 528, 533, 538, 598, 616, 617, 619, 645, 646, 648, 686, 688, 695, 702, 707, 724, 758, 760, 767, 774, 779, 1044, 1052, 1061, 1074, 1075, 1077, 1102, 1113, 1118, 1135, 1136, 1138, 1164, 1165, 1167, 1213, 1236, 1251, 1255, 1256, 1272, 1296, 1299, 1303, 1306, 1307, 1317, 1319], "cf": [0, 5, 6, 7, 13, 23, 28, 32, 59, 88, 384, 385, 396, 397, 510, 538, 544, 545, 546, 555, 572, 578, 583, 614, 643, 972, 973, 984, 985, 1095, 1133, 1162, 1266, 1276, 1294, 1303, 1314, 1315], "radial": [0, 5, 6, 7, 13, 23, 28, 32, 59, 88, 137, 138, 384, 385, 396, 445, 468, 469, 508, 509, 521, 533, 534, 538, 544, 545, 546, 555, 572, 578, 583, 614, 643, 721, 722, 972, 973, 984, 1029, 1053, 1054, 1093, 1094, 1106, 1118, 1119, 1133, 1162, 1210, 1226, 1253, 1262, 1266, 1268, 1276, 1294, 1303, 1307, 1312, 1314, 1315], "singl": [0, 31, 44, 138, 139, 140, 145, 154, 227, 228, 230, 232, 294, 295, 297, 299, 327, 328, 334, 336, 364, 365, 371, 373, 398, 538, 581, 598, 722, 723, 724, 729, 741, 813, 814, 816, 818, 880, 881, 883, 885, 913, 914, 920, 922, 950, 951, 957, 959, 986, 1025, 1198, 1259, 1266, 1268, 1271, 1272, 1275, 1296, 1311, 1312, 1315, 1317], "sweep": [0, 1, 27, 31, 39, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 114, 115, 116, 137, 138, 139, 142, 145, 147, 148, 182, 194, 197, 200, 201, 207, 209, 221, 222, 224, 229, 233, 234, 235, 236, 274, 276, 288, 289, 291, 296, 300, 301, 302, 307, 309, 321, 322, 324, 332, 333, 337, 338, 339, 344, 346, 358, 359, 361, 369, 370, 374, 375, 376, 390, 391, 392, 394, 445, 467, 489, 533, 538, 540, 577, 581, 593, 614, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 636, 637, 638, 639, 640, 641, 642, 643, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 665, 666, 667, 668, 669, 670, 671, 695, 707, 721, 722, 723, 726, 729, 732, 733, 735, 767, 779, 782, 785, 786, 793, 795, 807, 808, 810, 815, 819, 820, 821, 822, 860, 862, 874, 875, 877, 882, 886, 887, 888, 893, 895, 907, 908, 910, 918, 919, 923, 924, 925, 930, 932, 944, 945, 947, 955, 956, 960, 961, 962, 978, 979, 980, 982, 1014, 1022, 1023, 1029, 1052, 1074, 1118, 1133, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1194, 1195, 1218, 1219, 1261, 1264, 1268, 1272, 1288, 1289, 1291, 1296, 1298, 1300, 1307, 1310, 1311, 1312, 1313, 1314], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 76, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 105, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 593, 594, 597, 598, 600, 601, 602, 609, 610, 611, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 631, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 660, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 686, 688, 695, 702, 707, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 758, 760, 767, 774, 779, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 1014, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1150, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1179, 1191, 1192, 1193, 1194, 1195, 1196, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1255, 1256, 1258, 1259, 1292, 1298, 1306, 1307, 1309, 1314, 1316, 1317], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 54, 59, 60, 61, 63, 68, 88, 89, 90, 92, 97, 120, 122, 123, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 168, 173, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 407, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 587, 589, 590, 593, 594, 598, 600, 601, 609, 614, 615, 616, 618, 623, 643, 644, 645, 647, 652, 675, 677, 678, 686, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 744, 745, 746, 758, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 891, 892, 893, 894, 895, 896, 897, 907, 908, 909, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 928, 929, 930, 931, 932, 933, 934, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 1016, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1098, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1121, 1122, 1130, 1133, 1134, 1135, 1137, 1142, 1162, 1163, 1164, 1166, 1171, 1192, 1213, 1215, 1236, 1253, 1255, 1256, 1258], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 38, 39, 40, 41, 44, 45, 46, 59, 60, 61, 63, 68, 76, 88, 89, 90, 92, 97, 105, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 168, 173, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 403, 409, 424, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 585, 587, 589, 592, 593, 594, 595, 598, 600, 601, 614, 615, 616, 618, 623, 631, 643, 644, 645, 647, 652, 660, 686, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 745, 746, 758, 782, 783, 784, 785, 786, 787, 788, 789, 808, 810, 815, 818, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 919, 922, 923, 924, 925, 945, 947, 955, 956, 959, 960, 961, 962, 969, 970, 971, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 986, 987, 988, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1098, 1099, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1121, 1122, 1133, 1134, 1135, 1137, 1142, 1150, 1162, 1163, 1164, 1166, 1171, 1179, 1192, 1205, 1211, 1212, 1213, 1236, 1253, 1258, 1261, 1268, 1306, 1311, 1313, 1314], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 45, 46, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 81, 82, 84, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 101, 110, 111, 113, 131, 132, 135, 136, 137, 138, 139, 143, 144, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 164, 173, 182, 194, 197, 205, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 267, 269, 271, 272, 289, 291, 296, 299, 300, 301, 302, 305, 322, 324, 332, 333, 336, 337, 338, 339, 342, 359, 361, 369, 370, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 441, 447, 449, 451, 454, 456, 458, 459, 460, 462, 463, 467, 473, 475, 476, 479, 482, 487, 488, 489, 490, 492, 493, 495, 496, 497, 507, 508, 510, 511, 514, 519, 520, 521, 522, 523, 525, 528, 529, 530, 531, 533, 534, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 593, 599, 600, 601, 614, 615, 616, 619, 620, 621, 623, 624, 625, 626, 627, 636, 637, 639, 643, 644, 645, 648, 649, 650, 652, 653, 654, 655, 656, 665, 666, 668, 686, 695, 707, 715, 716, 719, 720, 721, 722, 723, 727, 728, 730, 731, 732, 733, 734, 739, 741, 742, 743, 744, 745, 746, 751, 758, 767, 779, 782, 791, 808, 810, 815, 818, 819, 820, 821, 822, 825, 835, 837, 838, 839, 841, 843, 844, 853, 855, 857, 858, 875, 877, 882, 885, 886, 887, 888, 891, 908, 910, 918, 919, 922, 923, 924, 925, 928, 945, 947, 955, 956, 959, 960, 961, 962, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 1013, 1014, 1021, 1022, 1023, 1025, 1030, 1032, 1034, 1036, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1052, 1058, 1060, 1061, 1064, 1067, 1072, 1073, 1074, 1075, 1077, 1078, 1080, 1081, 1082, 1092, 1093, 1095, 1096, 1099, 1104, 1105, 1106, 1107, 1108, 1110, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1122, 1133, 1134, 1135, 1138, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1155, 1156, 1158, 1162, 1163, 1164, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1184, 1185, 1187, 1192, 1198, 1211, 1212, 1236, 1255, 1256, 1259, 1261, 1263, 1264, 1266, 1267, 1270, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1291, 1293, 1295, 1296, 1298, 1300, 1303, 1304, 1305, 1306, 1307, 1314, 1315, 1317], "from": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 39, 40, 41, 44, 45, 48, 53, 56, 59, 61, 64, 68, 69, 70, 71, 88, 90, 93, 97, 98, 99, 100, 117, 118, 119, 121, 124, 125, 126, 127, 128, 132, 137, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 154, 155, 156, 164, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 222, 223, 224, 229, 232, 233, 234, 235, 236, 239, 247, 249, 251, 252, 253, 255, 257, 258, 264, 265, 267, 269, 271, 272, 289, 290, 291, 296, 299, 300, 301, 302, 305, 322, 323, 324, 330, 332, 333, 336, 337, 338, 339, 342, 359, 360, 361, 367, 369, 370, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 429, 437, 439, 444, 445, 446, 447, 448, 449, 451, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 505, 508, 510, 511, 516, 517, 519, 520, 521, 523, 524, 525, 528, 530, 532, 533, 534, 535, 536, 538, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 592, 593, 594, 595, 598, 600, 603, 608, 611, 614, 616, 619, 623, 624, 625, 626, 643, 645, 648, 652, 653, 654, 655, 672, 673, 674, 676, 679, 680, 682, 686, 688, 695, 702, 707, 710, 711, 712, 716, 721, 722, 723, 726, 727, 731, 732, 733, 734, 735, 736, 737, 739, 741, 742, 743, 751, 753, 754, 758, 760, 767, 774, 779, 782, 783, 784, 785, 786, 787, 788, 789, 791, 808, 809, 810, 815, 818, 819, 820, 821, 822, 825, 833, 835, 837, 838, 839, 841, 843, 844, 850, 851, 853, 855, 857, 858, 875, 876, 877, 882, 885, 886, 887, 888, 891, 908, 909, 910, 916, 918, 919, 922, 923, 924, 925, 928, 945, 946, 947, 953, 955, 956, 959, 960, 961, 962, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 991, 999, 1001, 1004, 1011, 1013, 1016, 1018, 1019, 1020, 1024, 1025, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1093, 1095, 1096, 1101, 1102, 1104, 1105, 1106, 1108, 1109, 1110, 1113, 1115, 1117, 1118, 1119, 1121, 1124, 1129, 1133, 1135, 1138, 1142, 1143, 1144, 1145, 1162, 1164, 1167, 1171, 1172, 1173, 1174, 1198, 1210, 1218, 1219, 1225, 1228, 1229, 1230, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1251, 1253, 1261, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1282, 1285, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1309, 1310, 1311, 1313, 1314, 1315, 1317, 1319], "base": [0, 59, 64, 65, 66, 68, 69, 70, 71, 72, 88, 93, 94, 95, 97, 98, 99, 100, 101, 138, 139, 169, 197, 198, 199, 200, 201, 202, 203, 204, 235, 301, 338, 375, 398, 449, 469, 476, 494, 497, 521, 538, 614, 619, 620, 621, 623, 624, 625, 626, 627, 643, 648, 649, 650, 652, 653, 654, 655, 656, 682, 722, 723, 735, 754, 782, 783, 784, 785, 786, 787, 788, 789, 821, 887, 924, 961, 986, 1020, 1024, 1025, 1034, 1054, 1061, 1079, 1082, 1106, 1133, 1138, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1162, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1226, 1236, 1262, 1265, 1266, 1268, 1303, 1307, 1310, 1313, 1314, 1315, 1317], "path": [0, 23, 127, 128, 139, 538, 572, 582, 711, 712, 723, 1131, 1192, 1268, 1269, 1303, 1313, 1316, 1317], "where": [0, 5, 6, 7, 28, 70, 71, 99, 100, 117, 121, 124, 127, 128, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 151, 158, 159, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 200, 201, 222, 229, 232, 233, 234, 235, 236, 250, 266, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 384, 385, 459, 467, 468, 476, 489, 490, 492, 494, 509, 524, 525, 527, 534, 538, 544, 545, 546, 578, 582, 625, 626, 654, 655, 672, 676, 679, 684, 686, 687, 688, 689, 690, 691, 693, 694, 695, 698, 700, 701, 702, 703, 705, 706, 707, 708, 709, 711, 712, 717, 719, 720, 721, 722, 723, 725, 726, 727, 728, 731, 735, 737, 745, 746, 756, 758, 759, 760, 761, 762, 763, 765, 766, 767, 770, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 785, 786, 808, 815, 818, 819, 820, 821, 822, 836, 852, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962, 965, 972, 973, 1030, 1044, 1052, 1053, 1061, 1074, 1075, 1077, 1079, 1094, 1109, 1110, 1112, 1119, 1144, 1145, 1173, 1174, 1213, 1218, 1219, 1227, 1228, 1236, 1258, 1268, 1269, 1272, 1277, 1280, 1296, 1298, 1303, 1306, 1310, 1319], "store": [0, 3, 9, 14, 16, 22, 26, 30, 31, 32, 45, 59, 88, 137, 138, 139, 154, 155, 401, 425, 459, 467, 476, 489, 490, 492, 527, 538, 542, 548, 556, 560, 566, 575, 580, 581, 583, 600, 614, 643, 721, 722, 723, 741, 742, 990, 1025, 1030, 1044, 1052, 1061, 1074, 1075, 1077, 1112, 1121, 1133, 1162, 1268, 1296, 1303, 1306, 1309, 1311, 1312, 1313, 1314, 1319], "extract": [0, 10, 222, 289, 322, 359, 394, 490, 510, 538, 552, 808, 875, 908, 945, 982, 1075, 1095, 1218, 1219, 1230, 1266, 1272, 1293, 1295, 1298, 1301, 1303, 1315], "If": [0, 6, 7, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 29, 30, 31, 44, 45, 46, 59, 61, 62, 63, 70, 88, 90, 91, 92, 99, 120, 122, 123, 125, 129, 131, 135, 136, 137, 140, 144, 145, 148, 154, 155, 156, 182, 194, 197, 200, 201, 207, 209, 222, 223, 228, 229, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 289, 290, 295, 296, 300, 301, 302, 307, 309, 322, 323, 328, 331, 332, 333, 337, 338, 339, 344, 346, 359, 360, 365, 368, 369, 370, 374, 375, 376, 381, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 428, 435, 439, 443, 449, 454, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 479, 480, 481, 484, 485, 486, 489, 490, 492, 494, 497, 498, 499, 500, 501, 503, 504, 508, 509, 510, 511, 518, 521, 522, 523, 524, 525, 526, 529, 530, 538, 539, 545, 546, 547, 550, 551, 556, 558, 560, 561, 562, 563, 564, 567, 568, 573, 574, 575, 576, 577, 579, 580, 581, 598, 600, 601, 614, 616, 617, 618, 625, 643, 645, 646, 647, 654, 675, 677, 678, 680, 695, 707, 713, 715, 719, 720, 721, 724, 728, 729, 733, 735, 741, 742, 743, 767, 779, 782, 785, 786, 793, 795, 808, 809, 814, 815, 819, 820, 821, 822, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 850, 851, 852, 853, 854, 855, 856, 857, 860, 862, 875, 876, 881, 882, 886, 887, 888, 893, 895, 908, 909, 914, 917, 918, 919, 923, 924, 925, 930, 932, 945, 946, 951, 954, 955, 956, 960, 961, 962, 965, 969, 971, 974, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 988, 990, 997, 1001, 1008, 1011, 1025, 1027, 1034, 1039, 1043, 1044, 1045, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1064, 1065, 1066, 1069, 1070, 1071, 1074, 1075, 1077, 1079, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1093, 1094, 1095, 1096, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1121, 1122, 1133, 1135, 1136, 1137, 1144, 1162, 1164, 1165, 1166, 1173, 1213, 1218, 1219, 1225, 1226, 1244, 1245, 1246, 1255, 1256, 1298, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1316, 1317, 1319], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 44, 45, 46, 47, 52, 59, 61, 62, 69, 70, 71, 72, 76, 88, 90, 91, 98, 99, 100, 101, 105, 117, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 157, 158, 164, 167, 169, 171, 173, 174, 175, 176, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 194, 195, 197, 200, 201, 207, 209, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 289, 290, 291, 294, 295, 296, 299, 300, 301, 302, 305, 307, 309, 322, 323, 324, 327, 328, 332, 333, 336, 337, 338, 339, 342, 344, 346, 359, 360, 361, 364, 365, 369, 370, 373, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 414, 428, 435, 436, 439, 443, 445, 450, 452, 454, 458, 459, 460, 463, 467, 468, 469, 473, 476, 480, 482, 489, 490, 492, 494, 496, 498, 499, 500, 503, 504, 509, 510, 511, 514, 518, 519, 521, 522, 523, 525, 526, 527, 529, 530, 533, 538, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 593, 598, 600, 601, 602, 607, 614, 616, 617, 624, 625, 626, 627, 631, 643, 645, 646, 653, 654, 655, 656, 660, 672, 675, 676, 677, 678, 679, 682, 684, 686, 687, 688, 689, 691, 693, 694, 695, 698, 700, 701, 702, 703, 705, 707, 708, 710, 711, 712, 713, 715, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 733, 735, 736, 737, 740, 741, 742, 743, 744, 745, 751, 754, 756, 758, 759, 760, 761, 763, 765, 766, 767, 770, 772, 773, 774, 775, 777, 779, 780, 782, 785, 786, 793, 795, 808, 809, 810, 813, 814, 815, 818, 819, 820, 821, 822, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 850, 851, 852, 853, 854, 855, 856, 857, 860, 862, 875, 876, 877, 880, 881, 882, 885, 886, 887, 888, 891, 893, 895, 908, 909, 910, 913, 914, 918, 919, 922, 923, 924, 925, 928, 930, 932, 945, 946, 947, 950, 951, 955, 956, 959, 960, 961, 962, 965, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 997, 998, 1001, 1003, 1008, 1009, 1011, 1014, 1021, 1022, 1023, 1024, 1025, 1027, 1029, 1030, 1035, 1037, 1039, 1043, 1044, 1045, 1048, 1052, 1053, 1054, 1058, 1061, 1065, 1067, 1074, 1075, 1077, 1079, 1081, 1083, 1084, 1085, 1088, 1089, 1094, 1095, 1096, 1099, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1114, 1115, 1118, 1121, 1122, 1123, 1128, 1133, 1135, 1136, 1143, 1144, 1145, 1146, 1150, 1162, 1164, 1165, 1172, 1173, 1174, 1175, 1179, 1198, 1210, 1211, 1212, 1218, 1219, 1225, 1226, 1228, 1235, 1236, 1238, 1241, 1244, 1245, 1246, 1248, 1254, 1255, 1256, 1258, 1259, 1260, 1263, 1268, 1269, 1272, 1277, 1278, 1279, 1280, 1283, 1288, 1289, 1296, 1298, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1319], "current": [0, 42, 47, 135, 136, 137, 173, 175, 182, 189, 194, 207, 209, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 247, 249, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 274, 276, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 309, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 344, 346, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 389, 442, 459, 467, 476, 489, 490, 492, 511, 521, 538, 591, 596, 602, 686, 688, 695, 702, 707, 719, 720, 721, 758, 760, 767, 774, 779, 793, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 833, 835, 836, 837, 838, 839, 841, 843, 850, 851, 852, 853, 855, 857, 860, 862, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 893, 895, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 925, 927, 930, 932, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 964, 977, 1015, 1017, 1044, 1052, 1061, 1074, 1075, 1077, 1096, 1106, 1123, 1261, 1317], "directori": [0, 44, 535, 538, 598, 1131, 1260, 1268, 1316, 1317], "time": [0, 1, 3, 9, 18, 22, 27, 30, 32, 45, 53, 54, 59, 88, 135, 136, 137, 161, 162, 207, 209, 222, 224, 229, 233, 234, 235, 236, 274, 276, 289, 291, 296, 300, 301, 302, 307, 309, 322, 324, 332, 333, 337, 338, 339, 344, 346, 359, 361, 369, 370, 374, 375, 376, 379, 382, 383, 394, 396, 397, 449, 458, 459, 466, 467, 475, 476, 489, 490, 492, 510, 516, 525, 527, 538, 540, 542, 548, 558, 562, 566, 577, 580, 583, 600, 608, 609, 614, 643, 719, 720, 721, 748, 749, 793, 795, 808, 810, 815, 819, 820, 821, 822, 860, 862, 875, 877, 882, 886, 887, 888, 893, 895, 908, 910, 918, 919, 923, 924, 925, 930, 932, 945, 947, 955, 956, 960, 961, 962, 967, 970, 971, 982, 984, 985, 1014, 1017, 1025, 1034, 1043, 1044, 1051, 1052, 1060, 1061, 1074, 1075, 1077, 1095, 1101, 1110, 1112, 1121, 1129, 1130, 1133, 1162, 1220, 1223, 1261, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1305, 1311, 1312, 1314, 1317, 1319], "format": [0, 3, 9, 22, 26, 32, 53, 54, 59, 88, 207, 209, 222, 224, 229, 232, 233, 234, 235, 236, 274, 276, 289, 291, 296, 299, 300, 301, 302, 307, 309, 322, 324, 332, 333, 336, 337, 338, 339, 344, 346, 359, 361, 369, 370, 373, 374, 375, 376, 381, 391, 393, 395, 396, 397, 399, 536, 537, 538, 542, 548, 566, 575, 583, 608, 609, 614, 643, 793, 795, 808, 810, 815, 818, 819, 820, 821, 822, 860, 862, 875, 877, 882, 885, 886, 887, 888, 893, 895, 908, 910, 918, 919, 922, 923, 924, 925, 930, 932, 945, 947, 955, 956, 959, 960, 961, 962, 966, 969, 979, 981, 983, 984, 985, 987, 1129, 1130, 1133, 1162, 1261, 1289, 1303, 1305, 1311], "prefix": [0, 62, 91, 538, 617, 646, 1131, 1136, 1165], "add": [0, 3, 9, 22, 46, 60, 61, 89, 90, 140, 151, 222, 224, 229, 232, 233, 234, 235, 236, 249, 250, 251, 252, 253, 255, 257, 264, 266, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 456, 459, 467, 476, 489, 492, 538, 542, 548, 566, 601, 615, 616, 644, 645, 724, 737, 808, 810, 815, 818, 819, 820, 821, 822, 835, 836, 837, 838, 839, 841, 843, 850, 852, 853, 855, 857, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 919, 922, 923, 924, 925, 945, 947, 955, 956, 959, 960, 961, 962, 1041, 1044, 1052, 1061, 1074, 1077, 1122, 1134, 1135, 1163, 1164, 1261, 1272, 1277, 1278, 1279, 1288, 1289, 1291, 1296, 1298, 1299, 1307, 1313, 1316, 1317, 1319], "contain": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 33, 39, 44, 45, 46, 47, 59, 60, 64, 65, 66, 68, 69, 70, 71, 72, 88, 89, 93, 94, 95, 97, 98, 99, 100, 101, 126, 127, 128, 129, 135, 136, 137, 138, 139, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 197, 198, 199, 200, 201, 202, 203, 204, 211, 222, 229, 232, 233, 234, 235, 236, 238, 248, 278, 289, 296, 299, 300, 301, 302, 304, 311, 322, 332, 333, 336, 337, 338, 339, 341, 348, 359, 369, 370, 373, 374, 375, 376, 378, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 444, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 465, 466, 467, 468, 469, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 518, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 534, 538, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 585, 593, 598, 600, 601, 602, 614, 615, 619, 620, 621, 623, 624, 625, 626, 627, 643, 644, 648, 649, 650, 652, 653, 654, 655, 656, 710, 711, 712, 713, 719, 720, 721, 722, 723, 729, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 782, 783, 784, 785, 786, 787, 788, 789, 797, 808, 815, 818, 819, 820, 821, 822, 824, 834, 864, 875, 882, 885, 886, 887, 888, 890, 897, 908, 918, 919, 922, 923, 924, 925, 927, 934, 945, 955, 956, 959, 960, 961, 962, 964, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 986, 987, 988, 990, 1003, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1059, 1060, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1117, 1119, 1121, 1122, 1123, 1133, 1134, 1138, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1162, 1163, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1210, 1211, 1212, 1218, 1219, 1226, 1230, 1253, 1255, 1256, 1259, 1269, 1281, 1282, 1303, 1305, 1306, 1309, 1311, 1312, 1313, 1314, 1316, 1317, 1319], "sufix": [0, 538], "datetim": [0, 1, 27, 161, 162, 207, 209, 229, 233, 235, 274, 276, 296, 300, 301, 307, 309, 332, 337, 338, 344, 346, 369, 374, 375, 379, 382, 383, 400, 459, 467, 476, 489, 490, 492, 538, 540, 577, 748, 749, 793, 795, 815, 819, 821, 860, 862, 882, 886, 887, 893, 895, 918, 923, 924, 930, 932, 955, 960, 961, 967, 970, 971, 988, 1044, 1052, 1061, 1074, 1075, 1077, 1220, 1221, 1222, 1223, 1224], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 45, 46, 53, 54, 60, 61, 62, 64, 65, 66, 68, 76, 85, 88, 89, 90, 91, 93, 94, 95, 97, 105, 114, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 162, 169, 197, 198, 199, 200, 201, 202, 203, 204, 205, 223, 236, 239, 247, 251, 252, 258, 265, 272, 290, 302, 305, 323, 333, 339, 342, 360, 376, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 426, 427, 433, 434, 437, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 525, 526, 527, 528, 532, 533, 534, 535, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 585, 589, 600, 601, 608, 609, 615, 616, 617, 619, 620, 621, 623, 631, 640, 643, 644, 645, 646, 648, 649, 650, 652, 660, 669, 682, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 745, 746, 748, 749, 754, 782, 783, 784, 785, 786, 787, 788, 789, 791, 809, 822, 825, 833, 837, 838, 844, 851, 858, 876, 888, 891, 909, 919, 925, 928, 946, 962, 967, 968, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 995, 996, 999, 1002, 1006, 1007, 1012, 1014, 1021, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1110, 1111, 1112, 1113, 1117, 1118, 1119, 1120, 1121, 1122, 1129, 1130, 1134, 1135, 1136, 1138, 1139, 1140, 1142, 1150, 1159, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1171, 1179, 1188, 1193, 1194, 1195, 1196, 1198, 1211, 1212, 1213, 1225, 1227, 1229, 1230, 1234, 1236, 1237, 1238, 1241, 1246, 1247, 1251, 1252, 1255, 1256, 1258, 1259, 1268, 1272, 1279, 1280, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1296, 1298, 1299, 1303, 1304, 1305, 1309, 1310, 1311, 1312, 1313, 1317], "The": [0, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 32, 44, 45, 59, 88, 117, 121, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 168, 198, 199, 203, 227, 252, 294, 327, 364, 370, 380, 381, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 414, 441, 442, 445, 447, 450, 454, 459, 460, 463, 464, 466, 467, 476, 478, 479, 482, 484, 489, 490, 492, 494, 495, 496, 497, 509, 511, 514, 516, 518, 519, 520, 521, 522, 523, 525, 526, 529, 530, 531, 533, 537, 538, 542, 543, 547, 548, 555, 556, 558, 560, 561, 562, 563, 564, 566, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 598, 600, 614, 643, 672, 676, 679, 680, 710, 711, 712, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 731, 732, 733, 734, 740, 741, 742, 743, 744, 745, 746, 783, 784, 788, 813, 838, 880, 913, 950, 956, 968, 969, 974, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 990, 1014, 1015, 1016, 1017, 1021, 1024, 1025, 1029, 1030, 1032, 1035, 1039, 1044, 1045, 1048, 1049, 1051, 1052, 1061, 1063, 1064, 1067, 1069, 1074, 1075, 1077, 1079, 1080, 1081, 1082, 1094, 1096, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1114, 1115, 1116, 1118, 1121, 1133, 1162, 1192, 1205, 1206, 1207, 1210, 1213, 1214, 1215, 1216, 1217, 1225, 1226, 1227, 1231, 1232, 1233, 1235, 1237, 1239, 1240, 1242, 1243, 1244, 1245, 1248, 1251, 1253, 1255, 1256, 1258, 1266, 1269, 1280, 1291, 1298, 1303, 1304, 1307, 1310, 1311, 1312, 1313, 1316], "start": [0, 1, 18, 30, 45, 59, 74, 75, 86, 87, 88, 103, 104, 115, 116, 248, 394, 400, 468, 490, 510, 525, 538, 540, 550, 558, 562, 580, 600, 614, 629, 630, 641, 642, 643, 658, 659, 670, 671, 834, 982, 988, 1053, 1075, 1095, 1110, 1121, 1133, 1148, 1149, 1160, 1161, 1162, 1177, 1178, 1189, 1190, 1221, 1268, 1277, 1278, 1288, 1289, 1303, 1305, 1311, 1313, 1317, 1318], "end": [0, 1, 18, 27, 30, 44, 67, 75, 83, 87, 96, 104, 112, 116, 126, 127, 128, 138, 139, 142, 143, 146, 151, 154, 155, 156, 248, 525, 538, 540, 558, 562, 577, 580, 598, 622, 630, 638, 642, 651, 659, 667, 671, 710, 711, 712, 722, 723, 726, 727, 731, 737, 741, 742, 743, 834, 1110, 1141, 1149, 1157, 1161, 1170, 1178, 1186, 1190, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1312], "period": [0, 145, 538, 729, 1307], "we": [0, 147, 509, 538, 732, 1094, 1261, 1268, 1269, 1272, 1277, 1296, 1298, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1318, 1319], "want": [0, 8, 538, 547, 1269, 1303, 1310, 1314, 1317, 1319], "dict": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 33, 34, 37, 40, 45, 46, 48, 53, 59, 60, 88, 89, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 205, 272, 305, 333, 342, 380, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 441, 445, 450, 451, 453, 454, 461, 464, 468, 469, 470, 471, 477, 478, 491, 494, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 538, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 569, 570, 573, 574, 575, 576, 577, 578, 579, 585, 587, 590, 594, 600, 601, 603, 608, 614, 615, 643, 644, 675, 677, 678, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 732, 733, 734, 736, 737, 741, 742, 743, 745, 746, 791, 858, 891, 919, 928, 968, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 985, 987, 988, 990, 1024, 1025, 1029, 1035, 1036, 1038, 1039, 1046, 1049, 1053, 1054, 1055, 1056, 1062, 1063, 1076, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1121, 1122, 1124, 1129, 1133, 1134, 1162, 1163, 1211, 1212, 1213, 1238, 1253, 1305], "option": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 45, 46, 47, 54, 55, 59, 60, 61, 62, 65, 66, 68, 70, 71, 76, 88, 91, 94, 95, 97, 99, 100, 117, 118, 119, 121, 122, 124, 126, 127, 128, 131, 132, 137, 138, 139, 140, 145, 146, 150, 151, 167, 169, 173, 175, 182, 189, 194, 222, 229, 233, 234, 235, 236, 238, 249, 251, 253, 255, 257, 264, 267, 269, 271, 289, 296, 300, 301, 302, 304, 322, 330, 331, 332, 333, 337, 338, 339, 341, 359, 367, 368, 369, 370, 374, 375, 376, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 441, 444, 445, 453, 461, 463, 464, 478, 482, 483, 484, 485, 494, 496, 497, 499, 500, 501, 502, 503, 504, 505, 508, 510, 511, 516, 517, 518, 521, 522, 523, 524, 530, 532, 533, 534, 538, 541, 542, 543, 544, 547, 548, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 585, 593, 600, 601, 602, 609, 610, 614, 615, 616, 617, 620, 621, 623, 625, 626, 631, 643, 646, 649, 650, 652, 654, 655, 672, 673, 674, 676, 677, 679, 682, 686, 688, 695, 702, 707, 710, 711, 712, 715, 716, 721, 722, 723, 724, 729, 731, 736, 737, 754, 758, 760, 767, 774, 779, 808, 815, 819, 820, 821, 822, 824, 835, 837, 839, 841, 843, 850, 853, 855, 857, 875, 882, 886, 887, 888, 890, 908, 916, 917, 918, 919, 923, 924, 925, 927, 945, 953, 954, 955, 956, 960, 961, 962, 964, 965, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 1025, 1028, 1029, 1038, 1046, 1048, 1049, 1063, 1067, 1068, 1069, 1070, 1079, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1095, 1096, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1115, 1117, 1118, 1119, 1121, 1122, 1123, 1130, 1133, 1134, 1135, 1136, 1139, 1140, 1142, 1144, 1145, 1150, 1162, 1165, 1168, 1169, 1171, 1173, 1174, 1218, 1219, 1225, 1241, 1253, 1258, 1259, 1261, 1298, 1314], "dictionari": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 37, 40, 43, 45, 46, 59, 60, 61, 63, 88, 89, 90, 92, 120, 122, 123, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 145, 147, 148, 149, 150, 151, 154, 155, 156, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 404, 430, 432, 444, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 462, 463, 468, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 493, 494, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 518, 524, 525, 526, 527, 530, 531, 532, 538, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 556, 557, 558, 560, 561, 562, 563, 564, 566, 569, 570, 573, 574, 575, 576, 577, 578, 579, 583, 585, 587, 589, 590, 594, 597, 600, 601, 614, 615, 616, 618, 643, 644, 645, 647, 675, 677, 678, 710, 711, 712, 713, 714, 719, 720, 721, 722, 723, 724, 729, 732, 733, 734, 736, 737, 741, 742, 743, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 988, 989, 990, 992, 994, 1021, 1024, 1025, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1047, 1048, 1053, 1057, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1078, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1103, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1121, 1122, 1133, 1134, 1135, 1137, 1162, 1163, 1164, 1166, 1191, 1211, 1212, 1213, 1253, 1269, 1306, 1314], "map": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 40, 45, 59, 88, 121, 124, 227, 251, 252, 253, 264, 294, 305, 327, 329, 330, 331, 333, 334, 342, 364, 366, 367, 368, 370, 371, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 439, 524, 538, 544, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 587, 594, 600, 614, 643, 676, 679, 813, 837, 838, 839, 850, 880, 891, 913, 915, 916, 917, 919, 920, 928, 950, 952, 953, 954, 956, 957, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 988, 1001, 1011, 1030, 1109, 1121, 1133, 1162, 1272, 1275, 1276, 1278, 1279, 1294, 1296, 1298, 1303, 1304, 1311, 1312, 1313, 1315, 1317], "field": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 45, 46, 53, 59, 60, 61, 62, 63, 68, 71, 84, 88, 89, 90, 91, 92, 97, 100, 113, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 169, 171, 173, 174, 175, 176, 177, 178, 180, 181, 185, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 221, 222, 223, 224, 229, 232, 233, 234, 235, 236, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 288, 289, 290, 291, 296, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 317, 321, 322, 323, 324, 332, 333, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 354, 358, 359, 360, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 441, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 533, 534, 538, 542, 544, 545, 546, 547, 548, 552, 554, 556, 557, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 587, 589, 592, 593, 594, 595, 600, 601, 608, 614, 615, 616, 617, 618, 623, 626, 639, 643, 644, 645, 646, 647, 652, 655, 668, 681, 682, 684, 686, 687, 688, 689, 690, 691, 693, 694, 698, 700, 701, 702, 703, 705, 706, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 735, 736, 737, 741, 742, 743, 745, 746, 754, 756, 758, 759, 760, 761, 762, 763, 765, 766, 770, 772, 773, 774, 775, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 803, 807, 808, 809, 810, 815, 818, 819, 820, 821, 822, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 870, 874, 875, 876, 877, 882, 885, 886, 887, 888, 891, 892, 893, 894, 895, 896, 897, 903, 907, 908, 909, 910, 918, 919, 922, 923, 924, 925, 928, 929, 930, 931, 932, 933, 934, 940, 944, 945, 946, 947, 955, 956, 959, 960, 961, 962, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 1016, 1021, 1022, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1117, 1118, 1119, 1121, 1122, 1129, 1133, 1134, 1135, 1136, 1137, 1142, 1145, 1158, 1162, 1163, 1164, 1165, 1166, 1171, 1174, 1187, 1193, 1194, 1195, 1196, 1198, 1201, 1202, 1203, 1204, 1210, 1211, 1212, 1213, 1215, 1230, 1235, 1236, 1238, 1253, 1255, 1256, 1257, 1258, 1261, 1263, 1266, 1268, 1272, 1273, 1274, 1277, 1278, 1280, 1291, 1295, 1296, 1297, 1298, 1299, 1303, 1304, 1305, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1317], "radar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 45, 53, 88, 90, 91, 93, 94, 95, 97, 100, 105, 117, 118, 119, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 169, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 221, 222, 227, 229, 233, 234, 235, 236, 249, 253, 255, 257, 267, 269, 271, 272, 288, 289, 294, 296, 300, 301, 302, 305, 321, 322, 327, 330, 332, 333, 337, 338, 339, 342, 358, 359, 364, 367, 369, 370, 374, 375, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 538, 541, 542, 544, 545, 546, 547, 548, 549, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 585, 587, 589, 593, 599, 600, 608, 643, 645, 646, 648, 649, 650, 652, 655, 660, 672, 673, 674, 682, 695, 707, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 747, 750, 751, 754, 767, 779, 782, 783, 784, 785, 786, 787, 788, 789, 791, 807, 808, 813, 815, 819, 820, 821, 822, 835, 839, 841, 843, 853, 855, 857, 858, 874, 875, 880, 882, 886, 887, 888, 891, 907, 908, 913, 916, 918, 919, 923, 924, 925, 928, 944, 945, 950, 953, 955, 956, 960, 961, 962, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 987, 988, 1013, 1014, 1016, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1121, 1129, 1162, 1164, 1165, 1167, 1168, 1169, 1171, 1174, 1179, 1194, 1195, 1196, 1198, 1201, 1202, 1203, 1204, 1211, 1212, 1213, 1215, 1218, 1219, 1222, 1224, 1226, 1227, 1228, 1229, 1230, 1234, 1236, 1238, 1241, 1246, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1271, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1297, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1307, 1309, 1310, 1311, 1312, 1313, 1315, 1318], "unlik": [0, 5, 10, 15, 27, 28, 384, 385, 538, 544, 552, 557, 577, 578, 972, 973], "other": [0, 5, 10, 15, 26, 27, 28, 45, 53, 55, 59, 88, 137, 138, 139, 140, 145, 197, 201, 222, 224, 229, 232, 233, 234, 235, 236, 251, 252, 253, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 387, 390, 392, 394, 398, 406, 494, 511, 525, 527, 528, 533, 538, 544, 552, 557, 575, 577, 578, 600, 608, 610, 614, 643, 721, 722, 723, 724, 729, 735, 782, 786, 808, 810, 815, 818, 819, 820, 821, 822, 837, 838, 839, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 919, 922, 923, 924, 925, 945, 947, 955, 956, 959, 960, 961, 962, 969, 972, 973, 975, 978, 980, 982, 986, 1014, 1025, 1079, 1096, 1110, 1112, 1113, 1118, 1121, 1129, 1133, 1162, 1194, 1195, 1196, 1261, 1298, 1303, 1305, 1312, 1316, 1317, 1319], "function": [0, 5, 10, 13, 15, 27, 28, 44, 70, 99, 145, 147, 148, 149, 166, 168, 197, 198, 199, 200, 201, 202, 203, 204, 221, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 288, 289, 296, 300, 301, 302, 305, 321, 322, 332, 337, 338, 339, 342, 358, 359, 369, 374, 375, 376, 381, 384, 385, 388, 389, 395, 398, 441, 454, 460, 476, 479, 494, 521, 523, 529, 531, 533, 536, 538, 544, 552, 555, 557, 577, 578, 582, 586, 598, 599, 625, 654, 729, 732, 733, 734, 735, 753, 782, 783, 784, 785, 786, 787, 788, 789, 790, 807, 808, 815, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 874, 875, 882, 886, 887, 888, 891, 907, 908, 918, 923, 924, 925, 928, 944, 945, 955, 960, 961, 962, 965, 966, 969, 972, 973, 976, 977, 983, 986, 1013, 1014, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1030, 1039, 1045, 1061, 1064, 1079, 1106, 1108, 1114, 1116, 1118, 1120, 1144, 1173, 1205, 1230, 1236, 1241, 1242, 1243, 1252, 1253, 1259, 1260, 1261, 1277, 1296, 1298, 1303, 1307, 1309, 1311, 1312, 1313, 1314, 1316, 1317], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 44, 45, 47, 59, 61, 62, 65, 66, 68, 70, 71, 72, 88, 90, 91, 94, 95, 97, 99, 100, 101, 120, 122, 123, 126, 127, 128, 132, 137, 138, 139, 142, 143, 144, 145, 146, 148, 150, 151, 154, 155, 156, 169, 173, 182, 197, 198, 199, 200, 201, 202, 203, 204, 221, 253, 288, 305, 321, 333, 342, 358, 370, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 414, 428, 439, 443, 445, 454, 459, 467, 469, 476, 489, 490, 492, 494, 508, 509, 510, 511, 521, 522, 523, 527, 530, 533, 534, 535, 538, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 593, 598, 600, 602, 614, 616, 617, 620, 621, 623, 625, 626, 627, 643, 645, 646, 649, 650, 652, 654, 655, 656, 675, 677, 678, 682, 686, 695, 710, 711, 712, 716, 721, 722, 723, 726, 727, 728, 729, 731, 733, 735, 736, 737, 741, 742, 743, 754, 758, 767, 782, 783, 784, 785, 786, 787, 788, 789, 807, 839, 874, 891, 907, 919, 928, 944, 956, 965, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 990, 1001, 1003, 1011, 1014, 1016, 1022, 1023, 1024, 1025, 1027, 1029, 1030, 1039, 1044, 1052, 1054, 1061, 1074, 1075, 1077, 1079, 1093, 1094, 1095, 1096, 1106, 1107, 1108, 1112, 1115, 1118, 1119, 1121, 1123, 1133, 1135, 1136, 1139, 1140, 1142, 1144, 1145, 1146, 1162, 1164, 1165, 1168, 1169, 1171, 1173, 1174, 1175, 1198, 1210, 1225, 1235, 1236, 1241, 1244, 1245, 1246, 1259, 1260, 1263, 1264, 1268, 1269, 1272, 1273, 1277, 1278, 1279, 1280, 1283, 1289, 1296, 1298, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1319], "have": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 47, 59, 62, 70, 88, 91, 99, 126, 127, 128, 137, 150, 173, 175, 182, 189, 194, 222, 233, 258, 289, 300, 322, 333, 337, 359, 374, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 443, 450, 490, 494, 511, 516, 525, 526, 538, 544, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 602, 614, 617, 625, 643, 646, 654, 686, 688, 695, 702, 707, 710, 711, 712, 721, 736, 758, 760, 767, 774, 779, 808, 819, 844, 875, 886, 908, 919, 923, 945, 960, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 1027, 1035, 1075, 1079, 1096, 1101, 1110, 1111, 1123, 1133, 1136, 1144, 1162, 1165, 1173, 1213, 1226, 1246, 1268, 1269, 1296, 1298, 1303, 1309, 1311, 1312, 1313, 1316, 1317, 1318, 1319], "valu": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 42, 44, 45, 59, 62, 88, 91, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 164, 169, 171, 173, 174, 175, 177, 180, 182, 185, 187, 188, 189, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 289, 290, 291, 293, 296, 297, 298, 299, 300, 301, 302, 322, 323, 324, 326, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 359, 360, 361, 363, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 408, 410, 412, 416, 418, 419, 424, 425, 435, 436, 441, 443, 445, 450, 454, 459, 464, 467, 471, 476, 477, 489, 490, 492, 494, 495, 496, 497, 500, 503, 504, 508, 511, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 530, 533, 534, 537, 538, 541, 542, 543, 544, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 567, 568, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 591, 593, 596, 598, 600, 614, 617, 643, 646, 675, 676, 677, 678, 679, 682, 684, 686, 687, 688, 690, 693, 695, 698, 700, 701, 702, 705, 707, 709, 710, 711, 712, 713, 714, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 735, 736, 737, 739, 741, 742, 743, 745, 746, 751, 754, 756, 758, 759, 760, 762, 765, 767, 770, 772, 773, 774, 777, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 808, 809, 810, 812, 815, 816, 817, 818, 819, 820, 821, 822, 833, 835, 837, 838, 839, 841, 843, 850, 851, 853, 855, 857, 875, 876, 877, 879, 882, 883, 884, 885, 886, 887, 888, 908, 909, 910, 912, 915, 916, 917, 918, 919, 921, 922, 923, 924, 925, 945, 946, 947, 949, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 965, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 997, 998, 1003, 1008, 1009, 1024, 1025, 1027, 1029, 1030, 1035, 1039, 1044, 1049, 1052, 1056, 1061, 1062, 1074, 1075, 1077, 1079, 1080, 1081, 1082, 1085, 1088, 1089, 1093, 1096, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1115, 1118, 1119, 1121, 1133, 1136, 1162, 1165, 1194, 1195, 1196, 1210, 1215, 1225, 1232, 1236, 1239, 1240, 1242, 1244, 1246, 1261, 1269, 1272, 1277, 1280, 1296, 1297, 1298, 1306, 1307, 1310, 1311, 1312, 1317], "ar": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44, 45, 59, 70, 72, 88, 99, 101, 121, 124, 125, 126, 127, 128, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 182, 194, 197, 199, 200, 201, 202, 203, 204, 222, 228, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 289, 295, 296, 300, 301, 302, 322, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 430, 445, 454, 460, 463, 468, 479, 480, 482, 484, 490, 494, 499, 500, 501, 503, 504, 508, 511, 518, 521, 523, 530, 533, 534, 536, 538, 544, 547, 551, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 598, 600, 614, 625, 627, 643, 654, 656, 676, 679, 680, 695, 707, 710, 711, 712, 719, 720, 721, 722, 723, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 753, 767, 779, 782, 784, 785, 786, 787, 788, 789, 808, 814, 815, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 850, 853, 855, 857, 875, 881, 882, 886, 887, 888, 908, 914, 915, 916, 917, 918, 919, 920, 923, 924, 925, 945, 951, 952, 953, 954, 955, 956, 957, 960, 961, 962, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 990, 992, 1020, 1021, 1024, 1025, 1029, 1030, 1039, 1045, 1048, 1053, 1064, 1065, 1067, 1069, 1075, 1079, 1084, 1085, 1086, 1088, 1089, 1093, 1096, 1103, 1106, 1108, 1115, 1118, 1119, 1121, 1133, 1144, 1146, 1162, 1173, 1175, 1194, 1195, 1196, 1218, 1219, 1225, 1228, 1239, 1240, 1242, 1244, 1245, 1254, 1259, 1264, 1266, 1268, 1269, 1272, 1277, 1279, 1280, 1288, 1291, 1296, 1298, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1319], "still": [0, 5, 10, 15, 27, 28, 137, 305, 342, 384, 385, 400, 538, 544, 552, 557, 577, 578, 721, 891, 928, 972, 973, 988, 1025, 1241, 1268, 1317], "includ": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 34, 36, 59, 64, 70, 71, 88, 93, 99, 100, 126, 127, 128, 137, 138, 139, 140, 142, 143, 145, 146, 154, 155, 156, 169, 173, 175, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 517, 533, 538, 541, 542, 543, 544, 547, 548, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 577, 578, 579, 582, 583, 587, 589, 614, 619, 625, 626, 643, 648, 654, 655, 682, 686, 688, 692, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 721, 722, 723, 724, 726, 727, 729, 731, 735, 741, 742, 743, 753, 754, 758, 760, 764, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 808, 815, 819, 820, 821, 822, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 1022, 1023, 1024, 1025, 1102, 1118, 1133, 1138, 1144, 1145, 1162, 1167, 1173, 1174, 1213, 1248, 1268, 1272, 1291, 1303, 1310, 1311, 1316, 1317], "exclud": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 62, 91, 126, 127, 128, 150, 151, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 191, 194, 197, 199, 200, 201, 202, 203, 204, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 497, 521, 522, 523, 525, 528, 533, 534, 538, 544, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 587, 617, 646, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 702, 704, 707, 710, 711, 712, 735, 736, 737, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 774, 776, 779, 782, 784, 785, 786, 787, 788, 789, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 987, 988, 1082, 1106, 1107, 1108, 1110, 1113, 1118, 1119, 1136, 1165, 1264, 1273, 1310], "them": [0, 5, 10, 15, 18, 19, 20, 27, 28, 70, 99, 137, 138, 139, 140, 239, 258, 333, 384, 385, 394, 497, 508, 526, 536, 538, 544, 550, 552, 557, 562, 563, 564, 577, 578, 625, 654, 721, 722, 723, 724, 825, 844, 919, 972, 973, 982, 1025, 1082, 1093, 1111, 1144, 1173, 1226, 1261, 1277, 1303, 1311, 1312, 1319], "us": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 39, 44, 45, 47, 59, 61, 68, 70, 71, 88, 90, 97, 99, 100, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 169, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 309, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 344, 346, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 372, 373, 374, 375, 376, 378, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 428, 441, 444, 446, 447, 448, 449, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 511, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 541, 542, 543, 544, 547, 548, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 585, 587, 593, 598, 600, 602, 614, 616, 623, 625, 626, 643, 645, 652, 654, 655, 675, 676, 677, 678, 679, 682, 695, 707, 710, 711, 712, 713, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 754, 767, 779, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 795, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 862, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 893, 895, 907, 908, 909, 910, 911, 912, 913, 914, 917, 918, 919, 921, 922, 923, 924, 925, 927, 928, 930, 932, 944, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 958, 959, 960, 961, 962, 964, 965, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 988, 990, 1014, 1021, 1022, 1023, 1024, 1025, 1028, 1030, 1031, 1032, 1033, 1034, 1036, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1096, 1099, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1123, 1133, 1135, 1142, 1144, 1145, 1162, 1164, 1171, 1173, 1174, 1198, 1205, 1210, 1212, 1213, 1215, 1218, 1219, 1225, 1226, 1241, 1242, 1246, 1248, 1253, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1271, 1275, 1276, 1277, 1278, 1280, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1294, 1296, 1298, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319], "which": [0, 5, 10, 13, 15, 27, 28, 30, 31, 33, 45, 47, 55, 56, 59, 64, 68, 81, 82, 84, 85, 88, 93, 97, 110, 111, 113, 114, 129, 130, 133, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 150, 151, 154, 155, 156, 158, 159, 165, 166, 168, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 222, 223, 227, 228, 229, 232, 233, 234, 235, 236, 239, 247, 249, 251, 252, 255, 257, 258, 264, 265, 267, 269, 271, 289, 290, 294, 295, 296, 299, 300, 301, 302, 322, 323, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 380, 381, 383, 384, 385, 390, 391, 394, 395, 397, 398, 399, 400, 401, 425, 444, 445, 447, 449, 450, 454, 463, 465, 466, 474, 475, 476, 480, 481, 482, 483, 484, 485, 486, 490, 495, 496, 498, 508, 509, 510, 511, 518, 519, 520, 521, 522, 523, 525, 527, 530, 532, 533, 534, 538, 544, 552, 555, 557, 577, 578, 580, 581, 585, 600, 602, 610, 611, 614, 619, 623, 636, 637, 639, 640, 643, 648, 652, 665, 666, 668, 669, 682, 686, 688, 695, 702, 707, 713, 714, 717, 721, 722, 723, 724, 725, 726, 727, 728, 731, 732, 735, 736, 737, 741, 742, 743, 745, 746, 754, 758, 760, 767, 774, 779, 782, 783, 784, 785, 786, 787, 788, 789, 808, 809, 813, 814, 815, 818, 819, 820, 821, 822, 825, 833, 835, 837, 838, 841, 843, 844, 850, 851, 853, 855, 857, 875, 876, 880, 881, 882, 885, 886, 887, 888, 908, 909, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 945, 946, 950, 951, 952, 953, 954, 955, 956, 957, 959, 960, 961, 962, 968, 969, 971, 972, 973, 978, 979, 982, 983, 985, 986, 987, 988, 990, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1032, 1034, 1035, 1039, 1048, 1050, 1051, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1075, 1080, 1081, 1083, 1093, 1094, 1095, 1096, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1115, 1117, 1118, 1119, 1121, 1123, 1133, 1138, 1142, 1155, 1156, 1158, 1159, 1162, 1167, 1171, 1184, 1185, 1187, 1188, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1225, 1226, 1229, 1230, 1235, 1236, 1239, 1240, 1253, 1258, 1261, 1264, 1268, 1269, 1272, 1277, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1296, 1303, 1307, 1309, 1311, 1312, 1313, 1314, 1316, 1317], "renam": [0, 5, 10, 15, 27, 28, 44, 165, 166, 168, 384, 385, 395, 538, 544, 552, 557, 577, 578, 598, 972, 973, 983], "kei": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 32, 45, 46, 59, 60, 61, 88, 89, 90, 120, 122, 123, 137, 138, 139, 333, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 401, 402, 404, 410, 415, 417, 425, 430, 432, 435, 436, 437, 439, 463, 482, 484, 485, 510, 511, 538, 544, 545, 546, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 583, 600, 601, 614, 615, 616, 643, 644, 645, 675, 677, 678, 721, 722, 723, 919, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 984, 985, 987, 988, 989, 990, 992, 994, 997, 998, 999, 1001, 1003, 1008, 1009, 1011, 1024, 1025, 1048, 1067, 1069, 1070, 1095, 1096, 1121, 1122, 1133, 1134, 1135, 1162, 1163, 1164, 1198, 1305, 1306, 1310], "uniform": [0, 5, 10, 13, 15, 27, 28, 72, 101, 138, 139, 384, 385, 393, 445, 531, 538, 544, 552, 555, 557, 577, 578, 627, 656, 722, 723, 972, 973, 981, 1029, 1116, 1146, 1175, 1237, 1277, 1280, 1303, 1305], "bool": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 46, 47, 54, 60, 61, 62, 65, 66, 68, 70, 71, 72, 89, 90, 91, 94, 95, 97, 99, 100, 101, 118, 122, 125, 126, 135, 136, 137, 138, 139, 150, 151, 154, 155, 156, 169, 173, 175, 182, 189, 194, 207, 209, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 264, 267, 269, 271, 274, 276, 289, 291, 296, 299, 300, 301, 302, 307, 309, 322, 324, 332, 333, 336, 337, 338, 339, 344, 346, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 445, 449, 454, 458, 465, 466, 468, 469, 471, 473, 474, 475, 480, 481, 484, 485, 486, 494, 497, 498, 500, 503, 504, 511, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 538, 544, 545, 546, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 587, 601, 602, 609, 615, 616, 617, 620, 621, 623, 625, 626, 627, 644, 645, 646, 649, 650, 652, 654, 655, 656, 673, 677, 680, 682, 686, 688, 695, 702, 707, 710, 719, 720, 721, 722, 723, 736, 737, 741, 742, 743, 754, 758, 760, 767, 774, 779, 793, 795, 808, 810, 815, 818, 819, 820, 821, 822, 825, 835, 837, 838, 839, 841, 843, 844, 850, 853, 855, 857, 860, 862, 875, 877, 882, 885, 886, 887, 888, 893, 895, 908, 910, 918, 919, 922, 923, 924, 925, 930, 932, 945, 947, 955, 956, 959, 960, 961, 962, 965, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 1021, 1022, 1025, 1029, 1034, 1039, 1043, 1050, 1051, 1053, 1054, 1056, 1058, 1059, 1060, 1065, 1066, 1069, 1070, 1071, 1079, 1082, 1083, 1085, 1088, 1089, 1096, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1114, 1115, 1122, 1123, 1130, 1134, 1135, 1136, 1139, 1140, 1142, 1144, 1145, 1146, 1163, 1164, 1165, 1168, 1169, 1171, 1173, 1174, 1175, 1226, 1241, 1259, 1261], "true": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 45, 46, 47, 54, 59, 60, 61, 62, 65, 66, 68, 70, 71, 72, 88, 89, 90, 91, 94, 95, 97, 99, 100, 101, 118, 122, 126, 135, 136, 137, 138, 139, 150, 151, 154, 155, 156, 161, 169, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 207, 209, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 264, 267, 269, 271, 274, 276, 289, 291, 296, 299, 300, 301, 302, 307, 309, 322, 324, 332, 333, 336, 337, 338, 339, 344, 346, 359, 361, 369, 370, 373, 374, 375, 376, 380, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 428, 432, 445, 449, 454, 458, 465, 466, 468, 469, 473, 474, 475, 480, 481, 484, 485, 486, 494, 497, 498, 500, 503, 504, 509, 511, 518, 521, 522, 523, 525, 526, 527, 529, 530, 538, 539, 544, 545, 546, 547, 550, 551, 552, 556, 557, 558, 560, 561, 562, 563, 564, 567, 568, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 587, 600, 601, 602, 609, 614, 615, 616, 617, 620, 621, 623, 625, 626, 627, 643, 644, 645, 646, 649, 650, 652, 654, 655, 656, 673, 677, 682, 684, 686, 687, 688, 689, 690, 691, 693, 694, 695, 698, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 719, 720, 721, 722, 723, 730, 736, 737, 741, 742, 743, 748, 754, 756, 758, 759, 760, 761, 762, 763, 765, 766, 767, 770, 772, 773, 774, 775, 777, 778, 779, 780, 781, 793, 795, 808, 810, 815, 818, 819, 820, 821, 822, 825, 835, 837, 838, 839, 841, 843, 844, 850, 853, 855, 857, 860, 862, 875, 877, 882, 885, 886, 887, 888, 893, 895, 908, 910, 918, 919, 922, 923, 924, 925, 930, 932, 945, 947, 955, 956, 959, 960, 961, 962, 965, 968, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 994, 1021, 1022, 1024, 1025, 1029, 1034, 1039, 1043, 1050, 1051, 1053, 1054, 1058, 1059, 1060, 1065, 1066, 1069, 1070, 1071, 1079, 1082, 1083, 1085, 1088, 1089, 1094, 1096, 1103, 1106, 1107, 1108, 1110, 1111, 1112, 1114, 1115, 1121, 1122, 1123, 1130, 1131, 1133, 1134, 1135, 1136, 1139, 1140, 1142, 1144, 1145, 1146, 1162, 1163, 1164, 1165, 1168, 1169, 1171, 1173, 1174, 1175, 1203, 1204, 1226, 1241, 1259, 1279, 1286, 1287, 1288, 1289, 1298, 1300, 1306, 1307, 1311, 1312, 1313, 1314, 1317], "forc": [0, 5, 10, 15, 18, 19, 20, 27, 28, 384, 385, 395, 445, 526, 538, 544, 552, 557, 562, 563, 564, 577, 578, 972, 973, 983, 1029, 1111, 1246], "case": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 39, 120, 122, 123, 137, 139, 182, 194, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 439, 511, 538, 544, 545, 546, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 580, 581, 593, 675, 677, 678, 695, 707, 721, 723, 767, 779, 966, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 1001, 1011, 1096, 1261, 1268, 1269, 1272, 1289, 1311, 1317], "ignor": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 137, 138, 139, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 445, 538, 544, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 721, 722, 723, 808, 810, 815, 818, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 919, 922, 923, 924, 925, 945, 947, 955, 956, 959, 960, 961, 962, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 1022, 1023, 1029, 1263, 1272, 1313], "list": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 34, 62, 91, 135, 136, 144, 198, 205, 224, 228, 231, 252, 258, 272, 291, 295, 298, 305, 324, 328, 335, 342, 361, 365, 372, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 454, 459, 460, 465, 466, 467, 476, 479, 489, 490, 492, 496, 510, 517, 538, 544, 545, 546, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 580, 581, 587, 617, 646, 719, 720, 728, 783, 791, 810, 814, 817, 838, 844, 858, 877, 881, 884, 891, 910, 914, 921, 928, 947, 951, 958, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 988, 1016, 1022, 1023, 1025, 1039, 1044, 1045, 1050, 1051, 1052, 1061, 1064, 1074, 1075, 1077, 1081, 1095, 1102, 1136, 1165, 1213, 1218, 1219, 1229, 1268, 1317, 1318], "appli": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 59, 62, 88, 91, 131, 134, 135, 136, 138, 139, 145, 150, 151, 152, 163, 197, 200, 201, 222, 223, 229, 232, 233, 234, 235, 236, 247, 265, 289, 290, 296, 299, 300, 301, 302, 322, 323, 332, 333, 336, 337, 338, 339, 359, 360, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 449, 463, 465, 468, 481, 482, 484, 485, 494, 500, 525, 527, 538, 544, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 614, 617, 643, 646, 715, 718, 719, 720, 722, 723, 729, 735, 736, 737, 738, 750, 782, 785, 786, 808, 809, 815, 818, 819, 820, 821, 822, 833, 851, 875, 876, 882, 885, 886, 887, 888, 908, 909, 918, 919, 922, 923, 924, 925, 945, 946, 955, 956, 959, 960, 961, 962, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 987, 1014, 1021, 1025, 1030, 1034, 1048, 1050, 1053, 1066, 1067, 1069, 1070, 1079, 1085, 1110, 1112, 1133, 1136, 1162, 1165, 1225, 1226, 1268, 1277, 1288, 1298, 1307], "after": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 137, 138, 168, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 401, 511, 521, 538, 544, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 721, 722, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 990, 1096, 1106, 1226, 1269, 1298, 1312, 1313, 1316, 1317, 1319], "set": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44, 45, 59, 70, 71, 72, 88, 99, 100, 101, 120, 121, 122, 123, 124, 125, 126, 127, 128, 137, 138, 139, 150, 151, 154, 155, 169, 173, 175, 182, 189, 194, 197, 199, 200, 201, 202, 203, 204, 222, 224, 229, 232, 233, 234, 235, 236, 237, 238, 251, 252, 253, 289, 291, 296, 299, 300, 301, 302, 303, 304, 322, 324, 332, 333, 336, 337, 338, 339, 340, 341, 359, 361, 369, 370, 373, 374, 375, 376, 377, 378, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 425, 433, 434, 437, 438, 468, 476, 499, 500, 501, 503, 504, 511, 521, 522, 523, 538, 544, 547, 552, 556, 557, 558, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 598, 600, 614, 625, 626, 627, 643, 654, 655, 656, 675, 676, 677, 678, 679, 680, 682, 686, 688, 695, 702, 707, 710, 711, 712, 721, 722, 723, 735, 736, 737, 741, 742, 754, 758, 760, 767, 774, 779, 782, 784, 785, 786, 787, 788, 789, 808, 810, 815, 818, 819, 820, 821, 822, 823, 824, 837, 838, 839, 875, 877, 882, 885, 886, 887, 888, 889, 890, 908, 910, 918, 919, 922, 923, 924, 925, 926, 927, 945, 947, 955, 956, 959, 960, 961, 962, 963, 964, 972, 973, 974, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 988, 995, 996, 999, 1000, 1006, 1007, 1010, 1025, 1053, 1061, 1084, 1085, 1086, 1088, 1089, 1096, 1106, 1107, 1108, 1121, 1133, 1144, 1145, 1146, 1162, 1173, 1174, 1175, 1194, 1195, 1196, 1203, 1204, 1210, 1213, 1246, 1249, 1250, 1261, 1269, 1272, 1278, 1285, 1288, 1289, 1292, 1293, 1298, 1303, 1307, 1312, 1316, 1317, 1318], "all": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 45, 47, 59, 62, 70, 71, 88, 91, 99, 100, 118, 137, 138, 139, 143, 144, 145, 150, 151, 154, 155, 156, 169, 172, 179, 182, 186, 191, 194, 197, 201, 222, 228, 229, 232, 233, 234, 235, 236, 251, 252, 289, 295, 296, 299, 300, 301, 302, 322, 328, 332, 333, 336, 337, 338, 339, 359, 365, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 415, 429, 445, 459, 467, 476, 489, 492, 494, 496, 510, 511, 517, 521, 523, 536, 538, 544, 545, 546, 547, 552, 556, 557, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 600, 602, 614, 617, 625, 626, 643, 646, 654, 655, 673, 682, 685, 692, 695, 699, 704, 707, 721, 722, 723, 727, 728, 729, 735, 736, 737, 741, 742, 743, 754, 757, 764, 767, 771, 776, 779, 782, 786, 808, 814, 815, 818, 819, 820, 821, 822, 837, 838, 875, 881, 882, 885, 886, 887, 888, 908, 914, 918, 919, 922, 923, 924, 925, 945, 951, 955, 956, 959, 960, 961, 962, 965, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 991, 1003, 1004, 1021, 1022, 1023, 1024, 1025, 1029, 1044, 1052, 1061, 1074, 1077, 1079, 1081, 1095, 1096, 1102, 1106, 1108, 1121, 1123, 1133, 1136, 1144, 1145, 1162, 1165, 1173, 1174, 1213, 1225, 1260, 1266, 1277, 1296, 1297, 1298, 1300, 1303, 1311, 1312, 1313, 1314, 1315, 1317, 1319], "specifi": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 52, 59, 62, 70, 71, 88, 91, 99, 100, 120, 122, 123, 137, 138, 139, 173, 175, 189, 222, 224, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 264, 267, 268, 269, 270, 271, 289, 291, 296, 300, 301, 302, 322, 324, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 361, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 435, 497, 521, 522, 523, 538, 541, 542, 543, 544, 547, 548, 552, 553, 554, 556, 557, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 600, 607, 614, 617, 625, 626, 643, 646, 654, 655, 675, 677, 678, 686, 688, 702, 721, 722, 723, 753, 758, 760, 774, 808, 810, 815, 819, 820, 821, 822, 834, 835, 837, 838, 839, 840, 841, 842, 843, 850, 853, 854, 855, 856, 857, 875, 877, 882, 886, 887, 888, 908, 910, 915, 916, 917, 918, 919, 920, 923, 924, 925, 945, 947, 952, 953, 954, 955, 956, 957, 960, 961, 962, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 986, 987, 988, 989, 990, 997, 1008, 1014, 1024, 1025, 1082, 1106, 1107, 1108, 1121, 1128, 1133, 1136, 1144, 1145, 1162, 1165, 1173, 1174, 1213, 1253, 1258, 1261, 1264, 1268, 1309, 1310, 1312, 1316], "Be": [0, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 538, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962], "about": [0, 59, 88, 511, 538, 614, 643, 1096, 1133, 1162], "process": [0, 30, 31, 138, 150, 151, 252, 454, 511, 538, 580, 581, 722, 736, 737, 838, 1039, 1096, 1261, 1268, 1303, 1304, 1313, 1317], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 183, 184, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 243, 244, 245, 246, 259, 260, 261, 262, 273, 274, 275, 276, 277, 278, 306, 307, 308, 309, 310, 311, 343, 344, 345, 346, 347, 348, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 406, 407, 408, 409, 412, 416, 417, 418, 419, 423, 427, 428, 430, 435, 436, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 585, 589, 590, 591, 592, 593, 594, 595, 596, 597, 602, 603, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 636, 637, 638, 639, 640, 641, 642, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 696, 697, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 768, 769, 782, 783, 784, 785, 786, 787, 788, 789, 792, 793, 794, 795, 796, 797, 829, 830, 831, 832, 845, 846, 847, 848, 859, 860, 861, 862, 863, 864, 892, 893, 894, 895, 896, 897, 929, 930, 931, 932, 933, 934, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 992, 997, 998, 1008, 1009, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1131, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1258, 1296, 1298, 1306, 1309, 1314, 1317], "note": [0, 5, 13, 27, 28, 61, 90, 117, 137, 145, 173, 175, 182, 189, 194, 251, 252, 333, 384, 385, 388, 389, 399, 516, 521, 533, 538, 544, 555, 577, 578, 616, 645, 672, 686, 688, 695, 702, 707, 721, 729, 758, 760, 767, 774, 779, 837, 838, 919, 972, 973, 976, 977, 987, 1022, 1023, 1025, 1101, 1106, 1118, 1135, 1164, 1268, 1269, 1279, 1298, 1312, 1313, 1316, 1317], "ha": [0, 5, 8, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 59, 88, 132, 137, 165, 166, 168, 207, 243, 258, 259, 274, 307, 342, 344, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 432, 439, 498, 500, 503, 504, 538, 544, 547, 555, 556, 558, 560, 561, 562, 563, 564, 567, 568, 573, 574, 575, 576, 577, 578, 579, 582, 614, 643, 716, 721, 793, 829, 844, 845, 860, 893, 928, 930, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 987, 994, 1001, 1011, 1013, 1083, 1085, 1088, 1089, 1133, 1162, 1198, 1225, 1237, 1258, 1261, 1268, 1277, 1298, 1303, 1309, 1311, 1312, 1314, 1316, 1317, 1319], "been": [0, 5, 13, 26, 27, 28, 132, 137, 165, 166, 168, 173, 175, 182, 189, 194, 258, 342, 384, 385, 387, 390, 391, 392, 394, 498, 538, 544, 555, 567, 568, 575, 577, 578, 686, 688, 695, 702, 707, 716, 721, 758, 760, 767, 774, 779, 844, 928, 972, 973, 975, 978, 979, 980, 982, 1083, 1213, 1225, 1268, 1298, 1303, 1309, 1313, 1316, 1317], "test": [0, 5, 13, 26, 27, 28, 137, 384, 385, 390, 392, 401, 454, 487, 488, 536, 538, 544, 555, 575, 577, 578, 721, 972, 973, 978, 980, 990, 1039, 1072, 1073, 1261, 1263, 1264, 1272, 1273, 1274, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1303, 1305], "stream": [0, 5, 13, 27, 28, 76, 105, 384, 385, 535, 538, 544, 555, 577, 578, 631, 660, 972, 973, 1150, 1179], "cfradial": [0, 5, 13, 27, 28, 384, 385, 538, 544, 555, 577, 578, 582, 972, 973, 1261, 1266, 1276, 1277, 1291, 1293, 1294, 1305, 1313, 1315], "get": [1, 25, 39, 147, 148, 149, 152, 163, 240, 241, 242, 263, 384, 401, 410, 438, 512, 515, 525, 531, 540, 574, 593, 732, 733, 734, 738, 750, 826, 827, 828, 849, 972, 990, 1000, 1010, 1014, 1097, 1100, 1110, 1116, 1231, 1232, 1233, 1234, 1242, 1243, 1244, 1245, 1261, 1269, 1288, 1289, 1298, 1305, 1307, 1310, 1312, 1314, 1316, 1317, 1318, 1319], "each": [1, 2, 3, 9, 11, 22, 45, 53, 55, 59, 69, 88, 98, 126, 127, 128, 130, 138, 139, 140, 141, 142, 143, 146, 154, 155, 156, 164, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 394, 398, 400, 454, 490, 495, 497, 498, 508, 514, 515, 518, 525, 526, 527, 529, 531, 533, 540, 541, 542, 548, 553, 566, 582, 600, 608, 610, 614, 624, 643, 653, 710, 711, 712, 714, 722, 723, 724, 725, 726, 727, 731, 741, 742, 743, 751, 808, 815, 819, 820, 821, 835, 841, 843, 853, 855, 857, 875, 882, 886, 887, 908, 918, 919, 923, 924, 945, 955, 956, 960, 961, 982, 986, 988, 1014, 1021, 1024, 1025, 1039, 1075, 1080, 1082, 1083, 1093, 1099, 1100, 1103, 1110, 1111, 1112, 1114, 1116, 1118, 1121, 1129, 1133, 1143, 1162, 1172, 1194, 1195, 1196, 1231, 1232, 1233, 1235, 1242, 1243, 1244, 1245, 1268, 1273, 1288, 1291, 1298, 1310, 1314, 1317], "assum": [1, 3, 9, 59, 88, 117, 118, 137, 140, 141, 142, 143, 154, 155, 156, 470, 471, 496, 509, 511, 516, 521, 523, 524, 540, 542, 548, 614, 643, 672, 673, 721, 724, 725, 726, 727, 741, 742, 743, 1055, 1056, 1081, 1094, 1096, 1101, 1106, 1108, 1109, 1133, 1162, 1313], "clockwis": [1, 59, 88, 540, 614, 643, 1133, 1162], "rotat": [1, 59, 88, 205, 540, 614, 643, 791, 1133, 1162], "north": [1, 55, 59, 88, 251, 252, 264, 333, 370, 540, 610, 614, 643, 837, 838, 850, 919, 956, 1133, 1162, 1230, 1281, 1313, 1314], "tstart": [1, 540], "tend": [1, 540, 1312], "arrai": [1, 8, 14, 16, 26, 45, 47, 53, 55, 56, 61, 65, 66, 68, 69, 70, 71, 72, 90, 94, 95, 97, 98, 99, 100, 101, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 138, 139, 145, 146, 157, 160, 163, 164, 169, 173, 175, 182, 189, 194, 205, 211, 222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 272, 278, 289, 290, 291, 296, 300, 301, 302, 305, 311, 322, 323, 324, 329, 330, 332, 333, 337, 338, 339, 342, 348, 359, 360, 361, 366, 367, 369, 370, 374, 375, 376, 441, 442, 443, 454, 464, 494, 495, 498, 515, 518, 522, 523, 524, 529, 531, 533, 534, 537, 540, 547, 550, 551, 556, 560, 567, 568, 575, 600, 602, 608, 610, 611, 616, 620, 621, 623, 624, 625, 626, 627, 645, 649, 650, 652, 653, 654, 655, 656, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 686, 688, 695, 702, 707, 721, 722, 723, 729, 730, 731, 739, 744, 747, 750, 751, 754, 758, 760, 767, 774, 779, 791, 797, 808, 809, 810, 815, 819, 820, 821, 822, 833, 835, 837, 838, 839, 841, 843, 850, 851, 853, 855, 857, 858, 864, 875, 876, 877, 882, 886, 887, 888, 891, 897, 908, 909, 910, 915, 916, 918, 919, 923, 924, 925, 928, 934, 945, 946, 947, 952, 953, 955, 956, 960, 961, 962, 1014, 1024, 1025, 1027, 1039, 1049, 1079, 1080, 1083, 1100, 1103, 1107, 1108, 1109, 1114, 1116, 1118, 1119, 1121, 1123, 1129, 1135, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1164, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1206, 1207, 1208, 1209, 1210, 1214, 1216, 1217, 1223, 1224, 1225, 1226, 1231, 1232, 1233, 1234, 1235, 1239, 1240, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1252, 1272, 1285, 1298, 1300, 1305, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1317], "sweep_start": [1, 540], "sweep_end": [1, 540], "indic": [1, 36, 45, 59, 83, 86, 87, 88, 112, 115, 116, 151, 154, 155, 169, 173, 182, 194, 249, 394, 497, 521, 522, 523, 528, 533, 534, 540, 589, 600, 614, 638, 641, 642, 643, 667, 670, 671, 682, 686, 695, 707, 730, 737, 741, 742, 754, 758, 767, 779, 835, 982, 1082, 1106, 1107, 1108, 1113, 1118, 1119, 1121, 1133, 1157, 1160, 1161, 1162, 1186, 1189, 1190, 1226, 1227, 1229, 1268, 1285, 1312, 1313], "chy0": [2, 4, 6, 7, 11, 541, 543, 545, 546, 553], "255": [2, 4, 6, 11, 398, 541, 543, 545, 553, 986, 1311], "0": [2, 3, 4, 6, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 30, 31, 39, 47, 59, 64, 65, 66, 68, 69, 70, 71, 72, 88, 93, 94, 95, 97, 98, 99, 100, 101, 121, 124, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 162, 169, 194, 197, 199, 200, 201, 202, 203, 204, 205, 221, 222, 229, 232, 233, 234, 235, 236, 237, 251, 252, 253, 267, 272, 288, 289, 296, 299, 300, 301, 302, 303, 305, 321, 322, 331, 332, 333, 336, 337, 338, 339, 340, 342, 358, 359, 368, 369, 370, 373, 374, 375, 376, 377, 394, 398, 441, 444, 450, 454, 456, 458, 459, 463, 466, 467, 468, 470, 471, 475, 476, 477, 482, 489, 490, 491, 492, 494, 497, 498, 500, 502, 503, 504, 506, 507, 508, 511, 514, 517, 518, 519, 521, 522, 525, 526, 527, 528, 529, 530, 531, 534, 541, 542, 543, 545, 548, 553, 556, 560, 562, 563, 564, 566, 573, 574, 580, 581, 593, 602, 614, 619, 620, 621, 623, 624, 625, 626, 627, 643, 648, 649, 650, 652, 653, 654, 655, 656, 676, 679, 682, 707, 710, 711, 713, 714, 715, 717, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 745, 746, 749, 754, 779, 782, 784, 785, 786, 787, 788, 789, 791, 807, 808, 815, 818, 819, 820, 821, 822, 823, 837, 838, 839, 853, 858, 874, 875, 882, 885, 886, 887, 888, 889, 891, 907, 908, 917, 918, 919, 922, 923, 924, 925, 926, 928, 944, 945, 954, 955, 956, 959, 960, 961, 962, 963, 982, 986, 1014, 1022, 1023, 1024, 1025, 1028, 1030, 1035, 1039, 1041, 1043, 1044, 1048, 1051, 1052, 1053, 1055, 1056, 1060, 1061, 1062, 1067, 1074, 1075, 1076, 1077, 1079, 1082, 1083, 1085, 1087, 1088, 1089, 1091, 1092, 1093, 1096, 1099, 1102, 1103, 1104, 1106, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1123, 1133, 1138, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1162, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1211, 1212, 1215, 1226, 1231, 1232, 1233, 1237, 1238, 1241, 1246, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317], "chx0": [2, 4, 6, 7, 11, 541, 543, 545, 546, 553], "160": [2, 4, 6, 11, 541, 543, 545, 553, 1298, 1300, 1301, 1309, 1311, 1312, 1315], "xre": [2, 3, 9, 11, 22, 541, 542, 548, 553, 566], "1": [2, 3, 5, 6, 7, 9, 11, 14, 18, 19, 20, 22, 26, 30, 31, 45, 59, 69, 88, 98, 117, 121, 124, 129, 130, 135, 136, 137, 139, 147, 148, 149, 150, 151, 152, 163, 182, 197, 236, 252, 272, 302, 339, 376, 384, 390, 391, 392, 397, 443, 449, 450, 454, 459, 461, 463, 467, 468, 471, 476, 477, 482, 489, 490, 494, 496, 498, 500, 508, 511, 512, 518, 521, 523, 525, 527, 529, 533, 534, 541, 542, 544, 545, 546, 548, 553, 556, 562, 563, 564, 566, 575, 580, 581, 600, 614, 624, 643, 653, 672, 676, 679, 695, 713, 714, 719, 720, 721, 723, 732, 733, 734, 736, 737, 738, 750, 767, 782, 822, 838, 858, 888, 925, 962, 972, 978, 979, 980, 985, 1024, 1025, 1027, 1034, 1035, 1039, 1044, 1046, 1048, 1052, 1053, 1056, 1061, 1062, 1067, 1074, 1075, 1079, 1081, 1083, 1085, 1093, 1096, 1097, 1103, 1106, 1108, 1110, 1112, 1114, 1118, 1119, 1121, 1133, 1143, 1162, 1172, 1211, 1212, 1213, 1215, 1225, 1226, 1232, 1238, 1244, 1245, 1252, 1263, 1264, 1268, 1272, 1273, 1274, 1277, 1278, 1279, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1298, 1299, 1300, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1317], "yre": [2, 3, 9, 11, 22, 541, 542, 548, 553, 566], "nx": [2, 3, 9, 11, 22, 45, 541, 542, 548, 553, 566, 600, 1121, 1312], "710": [2, 11, 541, 553], "ny": [2, 3, 9, 11, 22, 45, 541, 542, 548, 553, 566, 600, 1121, 1312], "640": [2, 11, 541, 553], "nz": [2, 3, 9, 11, 22, 45, 541, 542, 548, 553, 566, 600, 1121, 1312], "meteoswiss": [2, 11, 30, 31, 541, 553, 580, 581, 1261, 1299, 1300, 1304, 1312, 1313, 1316, 1317], "oper": [2, 3, 9, 11, 135, 136, 173, 175, 182, 189, 194, 394, 523, 530, 541, 542, 548, 553, 686, 688, 695, 702, 707, 719, 720, 758, 760, 767, 774, 779, 982, 1021, 1025, 1108, 1115, 1298, 1312, 1313, 1316], "binari": [2, 3, 9, 18, 19, 20, 30, 31, 32, 380, 541, 542, 548, 562, 563, 564, 580, 581, 583, 968, 1311], "retriev": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 35, 37, 45, 65, 66, 68, 69, 70, 71, 72, 94, 95, 97, 98, 99, 100, 101, 135, 136, 148, 164, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 588, 590, 600, 620, 621, 623, 624, 625, 626, 627, 649, 650, 652, 653, 654, 655, 656, 719, 720, 733, 739, 751, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 1121, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1211, 1212, 1226, 1261, 1297, 1298, 1299, 1300, 1301, 1304, 1307, 1312, 1315, 1317], "metadata": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 43, 44, 45, 46, 59, 60, 61, 88, 89, 90, 126, 127, 128, 137, 138, 139, 141, 142, 143, 144, 150, 151, 154, 155, 156, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 444, 451, 470, 471, 477, 491, 497, 511, 519, 520, 521, 522, 523, 524, 525, 526, 527, 532, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 580, 581, 583, 585, 587, 588, 590, 597, 598, 600, 601, 614, 615, 616, 643, 644, 645, 710, 711, 712, 721, 722, 723, 725, 726, 727, 728, 736, 737, 741, 742, 743, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 987, 1028, 1030, 1036, 1055, 1056, 1062, 1076, 1082, 1096, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1117, 1121, 1122, 1133, 1134, 1135, 1162, 1163, 1164, 1191, 1193, 1198, 1253, 1269, 1286, 1287, 1291, 1314], "dure": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 132, 137, 138, 139, 182, 194, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 494, 521, 530, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 587, 695, 707, 716, 721, 722, 723, 767, 779, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 1079, 1106, 1115, 1312, 1313, 1316, 1319], "ani": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 44, 60, 61, 89, 90, 126, 127, 128, 137, 138, 139, 140, 150, 151, 169, 173, 175, 182, 189, 194, 197, 200, 201, 305, 342, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 495, 518, 525, 526, 541, 542, 543, 544, 545, 546, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 578, 579, 580, 581, 583, 598, 615, 616, 644, 645, 682, 686, 688, 695, 702, 707, 710, 711, 712, 721, 722, 723, 724, 735, 736, 737, 754, 758, 760, 767, 774, 779, 782, 785, 786, 891, 928, 969, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 988, 1022, 1023, 1025, 1030, 1080, 1103, 1110, 1111, 1134, 1135, 1163, 1164, 1193, 1259, 1305, 1311], "success": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983], "unless": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 72, 101, 120, 122, 123, 139, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 627, 656, 675, 677, 678, 723, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 987, 1146, 1175], "explicitli": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 1022, 1023], "A": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 33, 34, 45, 59, 61, 88, 90, 121, 124, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 168, 169, 197, 198, 199, 200, 201, 202, 203, 204, 205, 239, 252, 258, 272, 305, 331, 342, 368, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 401, 445, 449, 450, 459, 467, 494, 495, 496, 497, 499, 508, 511, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 530, 532, 533, 534, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 585, 587, 600, 614, 616, 643, 645, 676, 679, 682, 710, 711, 712, 713, 714, 717, 719, 720, 721, 722, 723, 725, 726, 727, 728, 731, 735, 736, 737, 741, 742, 743, 745, 746, 754, 782, 783, 784, 785, 786, 787, 788, 789, 791, 825, 838, 844, 858, 891, 917, 928, 954, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 985, 989, 990, 1003, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1034, 1035, 1044, 1052, 1079, 1080, 1081, 1082, 1084, 1093, 1096, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1117, 1118, 1119, 1121, 1133, 1135, 1162, 1164, 1236, 1280, 1298, 1302, 1303, 1311, 1313, 1317], "default": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 40, 44, 45, 59, 65, 66, 68, 70, 71, 76, 88, 94, 95, 97, 99, 100, 105, 120, 121, 122, 123, 124, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 154, 155, 156, 158, 159, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 229, 232, 233, 234, 235, 236, 238, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 296, 299, 300, 301, 302, 304, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 332, 333, 336, 337, 338, 339, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 369, 370, 373, 374, 375, 376, 378, 381, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 405, 407, 414, 431, 444, 446, 447, 448, 449, 455, 456, 457, 458, 462, 463, 465, 466, 469, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 493, 494, 495, 496, 497, 500, 503, 504, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 533, 541, 542, 543, 547, 548, 552, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 580, 581, 583, 585, 594, 598, 600, 614, 620, 621, 623, 625, 626, 631, 643, 649, 650, 652, 654, 655, 660, 675, 676, 677, 678, 679, 682, 686, 688, 695, 702, 707, 710, 711, 712, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 731, 733, 735, 736, 737, 741, 742, 743, 745, 746, 754, 758, 760, 767, 774, 779, 782, 783, 784, 785, 786, 787, 788, 789, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 815, 818, 819, 820, 821, 822, 824, 833, 835, 837, 838, 839, 841, 843, 850, 851, 853, 855, 857, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 882, 885, 886, 887, 888, 890, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 918, 919, 922, 923, 924, 925, 927, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 955, 956, 959, 960, 961, 962, 964, 969, 972, 974, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 988, 993, 1005, 1025, 1028, 1030, 1031, 1032, 1033, 1034, 1040, 1041, 1042, 1043, 1047, 1048, 1050, 1051, 1054, 1057, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1078, 1079, 1080, 1081, 1082, 1085, 1088, 1089, 1095, 1096, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1117, 1118, 1121, 1133, 1139, 1140, 1142, 1144, 1145, 1150, 1162, 1168, 1169, 1171, 1173, 1174, 1179, 1194, 1195, 1196, 1213, 1215, 1225, 1226, 1253, 1288, 1289, 1298, 1303, 1313, 1316, 1317, 1319], "introduct": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 576, 579, 969, 974, 976, 977, 978, 979, 980, 981, 982, 1317], "addit": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 137, 138, 139, 145, 221, 222, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 288, 289, 296, 300, 301, 302, 321, 322, 329, 330, 331, 332, 333, 334, 337, 338, 339, 358, 359, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 468, 469, 494, 536, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 587, 721, 722, 723, 729, 807, 808, 815, 819, 820, 821, 822, 834, 835, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 857, 874, 875, 882, 886, 887, 888, 907, 908, 915, 916, 917, 918, 919, 920, 923, 924, 925, 944, 945, 952, 953, 954, 955, 956, 957, 960, 961, 962, 965, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 1014, 1021, 1022, 1023, 1025, 1053, 1054, 1079, 1236, 1266, 1268, 1295, 1298, 1303], "specif": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 126, 127, 128, 143, 144, 151, 154, 155, 156, 182, 194, 342, 370, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 495, 499, 500, 501, 503, 504, 510, 511, 518, 519, 520, 521, 522, 523, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 695, 707, 710, 711, 712, 727, 728, 737, 741, 742, 743, 767, 779, 928, 956, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 1025, 1080, 1084, 1085, 1086, 1088, 1089, 1095, 1096, 1103, 1104, 1105, 1106, 1107, 1108, 1236, 1263, 1277, 1298, 1303, 1313, 1317, 1319], "py": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 44, 45, 59, 88, 120, 122, 123, 126, 127, 128, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 169, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 305, 322, 324, 332, 333, 337, 338, 339, 342, 359, 361, 369, 370, 374, 375, 376, 386, 387, 388, 389, 393, 395, 398, 444, 445, 446, 447, 448, 449, 455, 456, 457, 458, 462, 463, 465, 466, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 493, 494, 495, 496, 497, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 535, 536, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 580, 581, 584, 585, 586, 598, 599, 600, 614, 643, 675, 677, 678, 682, 710, 711, 712, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 735, 736, 737, 741, 742, 743, 745, 746, 752, 754, 782, 783, 784, 785, 786, 787, 788, 789, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 891, 908, 910, 918, 919, 923, 924, 925, 928, 945, 947, 955, 956, 960, 961, 962, 974, 975, 976, 977, 981, 983, 986, 1013, 1028, 1029, 1031, 1032, 1033, 1034, 1040, 1041, 1042, 1043, 1047, 1048, 1050, 1051, 1057, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1078, 1079, 1080, 1081, 1082, 1096, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1117, 1121, 1133, 1162, 1205, 1229, 1230, 1253, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1300, 1301, 1304, 1305, 1306, 1307, 1309, 1312, 1313, 1315, 1316, 1319], "art": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 44, 45, 59, 88, 120, 122, 123, 126, 127, 128, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 169, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 305, 322, 324, 332, 333, 337, 338, 339, 342, 359, 361, 369, 370, 374, 375, 376, 386, 387, 388, 389, 393, 395, 398, 444, 445, 446, 447, 448, 449, 455, 456, 457, 458, 462, 463, 465, 466, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 493, 494, 495, 496, 497, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 536, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 580, 581, 584, 585, 586, 598, 599, 600, 614, 643, 675, 677, 678, 682, 710, 711, 712, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 735, 736, 737, 741, 742, 743, 745, 746, 752, 754, 782, 783, 784, 785, 786, 787, 788, 789, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 891, 908, 910, 918, 919, 923, 924, 925, 928, 945, 947, 955, 956, 960, 961, 962, 974, 975, 976, 977, 981, 983, 986, 1013, 1028, 1029, 1031, 1032, 1033, 1034, 1040, 1041, 1042, 1043, 1047, 1048, 1050, 1051, 1057, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1078, 1079, 1080, 1081, 1082, 1096, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1117, 1121, 1133, 1162, 1205, 1229, 1230, 1253, 1260, 1261, 1263, 1264, 1266, 1267, 1268, 1269, 1276, 1277, 1279, 1296, 1304, 1305, 1306, 1307, 1309, 1312, 1313, 1316, 1319], "configur": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 33, 38, 39, 41, 44, 126, 127, 128, 133, 137, 138, 139, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 444, 446, 447, 448, 449, 455, 456, 457, 458, 462, 463, 465, 466, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 493, 494, 495, 496, 497, 511, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 541, 542, 543, 547, 548, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 579, 585, 586, 592, 593, 595, 598, 710, 711, 712, 717, 721, 722, 723, 725, 726, 727, 728, 731, 735, 736, 737, 741, 742, 743, 745, 746, 782, 783, 784, 785, 786, 787, 788, 789, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 1028, 1031, 1032, 1033, 1034, 1040, 1041, 1042, 1043, 1047, 1048, 1050, 1051, 1057, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1078, 1079, 1080, 1081, 1082, 1096, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1117, 1253, 1268, 1272, 1297, 1313, 1317], "float": [2, 3, 4, 6, 7, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 39, 72, 101, 117, 118, 119, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 173, 197, 199, 200, 201, 202, 203, 204, 205, 206, 222, 224, 225, 229, 230, 232, 233, 234, 235, 236, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 266, 267, 268, 269, 270, 271, 272, 273, 289, 291, 292, 296, 297, 299, 300, 301, 302, 305, 306, 322, 324, 325, 331, 332, 333, 334, 336, 337, 338, 339, 342, 343, 359, 361, 362, 368, 369, 370, 371, 373, 374, 375, 376, 398, 441, 443, 444, 445, 450, 451, 454, 456, 459, 464, 466, 467, 468, 470, 471, 476, 477, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 537, 541, 542, 543, 545, 546, 548, 553, 556, 560, 562, 563, 564, 566, 573, 574, 575, 579, 580, 581, 593, 627, 656, 672, 673, 674, 676, 679, 686, 710, 711, 712, 713, 714, 715, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 758, 782, 784, 785, 786, 787, 788, 789, 791, 792, 808, 810, 811, 815, 816, 818, 819, 820, 821, 822, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 850, 852, 853, 854, 855, 856, 857, 858, 859, 875, 877, 878, 882, 883, 885, 886, 887, 888, 891, 892, 908, 910, 911, 917, 918, 919, 920, 922, 923, 924, 925, 928, 929, 945, 947, 948, 954, 955, 956, 957, 959, 960, 961, 962, 965, 986, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1035, 1036, 1039, 1041, 1044, 1049, 1051, 1052, 1053, 1055, 1056, 1061, 1062, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1146, 1175, 1193, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1219, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1246, 1254, 1255, 1256, 1261, 1312], "swiss": [2, 4, 6, 7, 11, 125, 541, 543, 545, 546, 553, 680, 1304], "coordin": [2, 3, 4, 6, 7, 9, 11, 22, 45, 47, 53, 59, 70, 88, 99, 117, 118, 119, 120, 121, 122, 123, 124, 125, 162, 211, 222, 229, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 278, 289, 296, 300, 301, 302, 311, 322, 332, 333, 337, 338, 339, 348, 359, 369, 370, 374, 375, 376, 397, 490, 497, 511, 541, 542, 543, 545, 546, 548, 553, 566, 600, 602, 608, 614, 625, 643, 654, 672, 673, 674, 675, 676, 677, 678, 679, 680, 749, 797, 808, 815, 819, 820, 821, 822, 835, 841, 843, 853, 855, 857, 864, 875, 882, 886, 887, 888, 897, 908, 918, 919, 923, 924, 925, 934, 945, 955, 956, 960, 961, 962, 985, 1013, 1014, 1016, 1021, 1025, 1075, 1082, 1096, 1121, 1123, 1129, 1133, 1144, 1162, 1173, 1193, 1210, 1235, 1261, 1262, 1266, 1269, 1271, 1272, 1273, 1274, 1296, 1303, 1309, 1314], "posit": [2, 4, 6, 7, 11, 25, 26, 59, 88, 121, 124, 127, 128, 137, 147, 148, 149, 153, 161, 162, 164, 469, 471, 477, 496, 497, 508, 521, 525, 526, 527, 533, 534, 541, 543, 545, 546, 553, 574, 575, 614, 643, 676, 679, 711, 712, 721, 732, 733, 734, 739, 740, 748, 749, 751, 1030, 1054, 1056, 1062, 1081, 1082, 1093, 1106, 1110, 1111, 1112, 1118, 1119, 1133, 1162, 1211, 1212, 1272, 1277, 1279, 1312, 1313, 1314], "south": [2, 4, 6, 7, 11, 541, 543, 545, 546, 553, 1281, 1312], "western": [2, 4, 6, 7, 11, 541, 543, 545, 546, 553], "point": [2, 3, 4, 6, 7, 9, 11, 22, 44, 45, 47, 61, 90, 122, 126, 127, 128, 142, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 211, 225, 230, 236, 248, 249, 250, 266, 278, 292, 297, 302, 305, 311, 325, 330, 331, 334, 339, 348, 362, 367, 368, 371, 376, 388, 389, 392, 394, 398, 442, 450, 459, 467, 470, 471, 476, 477, 489, 492, 494, 508, 525, 530, 541, 542, 543, 545, 546, 548, 553, 566, 598, 600, 602, 616, 645, 677, 710, 711, 712, 726, 727, 731, 732, 733, 734, 736, 737, 740, 741, 742, 743, 744, 797, 811, 816, 822, 834, 835, 836, 852, 864, 878, 883, 888, 891, 897, 911, 916, 917, 920, 925, 934, 948, 953, 954, 957, 962, 976, 977, 980, 982, 986, 1021, 1024, 1025, 1035, 1044, 1052, 1055, 1056, 1061, 1062, 1074, 1077, 1079, 1093, 1110, 1115, 1121, 1123, 1135, 1164, 1193, 1213, 1215, 1225, 1226, 1230, 1232, 1241, 1244, 1259, 1261, 1266, 1278, 1285, 1295, 1298, 1301, 1303, 1307, 1309, 1312, 1313, 1314, 1315], "grid": [2, 3, 4, 6, 7, 9, 11, 12, 18, 22, 30, 39, 59, 88, 224, 226, 234, 236, 239, 243, 248, 250, 251, 252, 253, 254, 256, 258, 259, 264, 266, 267, 268, 270, 291, 293, 302, 324, 326, 333, 339, 361, 363, 376, 387, 388, 397, 398, 399, 459, 467, 476, 489, 492, 494, 511, 516, 517, 530, 541, 542, 543, 545, 546, 548, 553, 554, 558, 562, 566, 580, 593, 614, 643, 810, 812, 820, 822, 825, 829, 834, 836, 837, 838, 839, 840, 842, 844, 845, 850, 852, 853, 854, 856, 877, 879, 888, 910, 912, 919, 925, 947, 949, 962, 975, 976, 985, 986, 987, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1044, 1052, 1061, 1074, 1077, 1079, 1096, 1101, 1102, 1115, 1133, 1162, 1193, 1197, 1199, 1200, 1221, 1235, 1237, 1255, 1256, 1261, 1266, 1271, 1275, 1276, 1279, 1289, 1292, 1294, 1298, 1303, 1304, 1311, 1312, 1313, 1315], "resolut": [2, 3, 9, 11, 22, 59, 88, 129, 130, 135, 136, 222, 224, 225, 229, 230, 233, 234, 235, 236, 252, 264, 289, 291, 292, 296, 297, 300, 301, 302, 322, 324, 325, 332, 333, 334, 337, 338, 339, 359, 361, 362, 369, 370, 371, 374, 375, 376, 390, 442, 450, 459, 467, 476, 489, 492, 494, 511, 515, 521, 527, 530, 541, 542, 548, 553, 566, 614, 643, 713, 714, 719, 720, 808, 810, 811, 815, 816, 819, 820, 821, 822, 838, 850, 875, 877, 878, 882, 883, 886, 887, 888, 908, 910, 911, 918, 919, 920, 923, 924, 925, 945, 947, 948, 955, 956, 957, 960, 961, 962, 978, 1025, 1035, 1044, 1052, 1061, 1074, 1077, 1079, 1096, 1100, 1106, 1112, 1115, 1133, 1162, 1226, 1269, 1282, 1285, 1307, 1309, 1310, 1311, 1312, 1313], "km": [2, 3, 9, 11, 22, 117, 121, 124, 205, 225, 230, 231, 238, 272, 292, 297, 298, 304, 305, 325, 334, 335, 341, 342, 362, 370, 371, 372, 378, 443, 451, 464, 491, 494, 495, 511, 514, 515, 518, 521, 541, 542, 548, 553, 566, 672, 676, 679, 791, 811, 816, 817, 824, 858, 878, 883, 884, 890, 891, 911, 920, 921, 927, 928, 948, 956, 957, 958, 964, 1023, 1027, 1036, 1049, 1076, 1079, 1080, 1096, 1099, 1100, 1103, 1106, 1226, 1228, 1254, 1281, 1286, 1287, 1289, 1296, 1309, 1312, 1313], "int": [2, 3, 9, 11, 14, 16, 22, 26, 39, 45, 47, 59, 65, 66, 68, 69, 70, 71, 72, 88, 94, 95, 97, 98, 99, 100, 101, 128, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 154, 155, 156, 158, 159, 164, 182, 194, 198, 200, 207, 208, 209, 221, 225, 229, 230, 232, 233, 234, 236, 243, 244, 245, 246, 251, 252, 253, 259, 260, 261, 262, 264, 267, 274, 275, 276, 288, 292, 296, 297, 299, 300, 302, 307, 308, 309, 321, 325, 332, 333, 334, 336, 337, 339, 344, 345, 346, 358, 362, 369, 370, 371, 373, 374, 376, 398, 445, 449, 450, 454, 458, 459, 463, 464, 465, 466, 467, 468, 469, 475, 476, 481, 482, 484, 485, 489, 494, 495, 498, 508, 511, 519, 520, 521, 523, 525, 527, 529, 531, 533, 534, 537, 541, 542, 548, 553, 556, 560, 566, 575, 593, 600, 602, 614, 620, 621, 623, 624, 625, 626, 627, 643, 649, 650, 652, 653, 654, 655, 656, 695, 707, 712, 717, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 736, 737, 739, 741, 742, 743, 745, 746, 751, 767, 779, 783, 785, 793, 794, 795, 807, 811, 815, 816, 818, 819, 820, 822, 829, 830, 831, 832, 837, 838, 839, 845, 846, 847, 848, 850, 853, 860, 861, 862, 874, 878, 882, 883, 885, 886, 888, 893, 894, 895, 907, 911, 918, 919, 920, 922, 923, 925, 930, 931, 932, 944, 948, 955, 956, 957, 959, 960, 962, 986, 1022, 1023, 1025, 1029, 1034, 1035, 1039, 1043, 1044, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1060, 1061, 1066, 1067, 1069, 1070, 1074, 1079, 1080, 1083, 1093, 1096, 1104, 1105, 1106, 1108, 1110, 1112, 1114, 1116, 1118, 1119, 1121, 1123, 1133, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1162, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1194, 1195, 1196, 1210, 1213, 1215, 1225, 1226, 1227, 1229, 1231, 1235, 1258, 1261, 1312, 1317], "dimens": [2, 3, 9, 11, 22, 45, 88, 137, 388, 494, 510, 516, 521, 523, 530, 541, 542, 548, 553, 566, 600, 643, 721, 976, 1022, 1023, 1025, 1030, 1079, 1095, 1101, 1106, 1108, 1115, 1121, 1162, 1235, 1255, 1256, 1296, 1298, 1305, 1309, 1312, 1314], "1536": [3, 9, 542, 548], "dtype": [3, 8, 169, 542, 547, 682, 754, 1021, 1025, 1261, 1305, 1307, 1314], "float32": [3, 16, 26, 399, 542, 560, 575, 987, 1261, 1296, 1305, 1307, 1314], "date_format": [3, 9, 22, 542, 548, 566], "added_tim": [3, 9, 22, 542, 548, 566], "86400": [3, 542], "x_offset": [3, 9, 22, 542, 548, 566], "619652": [3, 9, 542, 548], "074056": [3, 9, 542, 548], "y_offset": [3, 9, 22, 542, 548, 566], "3526818": [3, 9, 542, 548], "337932": [3, 9, 542, 548], "lat_0": [3, 9, 22, 45, 59, 88, 121, 124, 333, 370, 542, 548, 566, 600, 614, 643, 676, 679, 919, 956, 1121, 1133, 1162, 1285, 1313], "90": [3, 9, 509, 542, 548, 1094, 1241, 1317], "lon_0": [3, 9, 22, 45, 59, 88, 121, 124, 333, 370, 542, 548, 566, 600, 614, 643, 676, 679, 919, 956, 1121, 1133, 1162, 1285, 1313], "proj": [3, 22, 45, 52, 59, 88, 120, 122, 123, 264, 342, 542, 566, 600, 607, 614, 643, 675, 677, 678, 850, 928, 1121, 1128, 1133, 1162], "gnom": [3, 542], "rainfall_accumul": [3, 542], "meteofr": [3, 9, 12, 22, 542, 548, 554, 566, 1303], "stereopolar": [3, 9, 542, 548], "project": [3, 9, 21, 22, 45, 48, 52, 59, 88, 120, 121, 122, 123, 124, 227, 239, 251, 252, 253, 264, 294, 305, 327, 333, 364, 370, 388, 397, 398, 459, 467, 476, 489, 492, 509, 542, 548, 565, 566, 584, 600, 603, 607, 614, 643, 675, 676, 677, 678, 679, 813, 825, 837, 838, 839, 850, 880, 891, 913, 919, 950, 956, 976, 985, 986, 1025, 1044, 1052, 1061, 1074, 1077, 1094, 1121, 1124, 1128, 1133, 1162, 1268, 1269, 1272, 1278, 1279, 1285, 1292, 1296, 1298, 1303, 1306, 1307, 1309, 1310, 1312, 1313, 1316], "type": [3, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 34, 40, 59, 88, 138, 139, 154, 155, 156, 157, 205, 272, 305, 342, 381, 386, 388, 389, 390, 391, 393, 394, 395, 399, 400, 441, 454, 459, 467, 476, 489, 492, 498, 500, 518, 521, 531, 542, 547, 556, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 579, 580, 581, 587, 594, 614, 643, 722, 723, 741, 742, 743, 744, 791, 858, 891, 928, 969, 974, 976, 977, 978, 979, 981, 982, 983, 987, 988, 1039, 1044, 1052, 1061, 1074, 1077, 1083, 1085, 1103, 1106, 1116, 1133, 1162, 1213, 1215, 1311, 1313, 1314, 1317], "date": [3, 9, 22, 382, 383, 542, 548, 566, 970, 971, 1260, 1268, 1269], "second": [3, 9, 22, 55, 56, 57, 58, 61, 72, 90, 101, 117, 137, 394, 401, 508, 523, 533, 542, 548, 566, 610, 611, 612, 613, 616, 627, 645, 656, 672, 721, 982, 990, 1014, 1093, 1108, 1118, 1135, 1146, 1164, 1175, 1249, 1250, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1310, 1311, 1314, 1317], "nomin": [3, 9, 14, 22, 24, 25, 542, 548, 556, 566, 573, 574], "24h": [3, 9, 542, 548], "accumul": [3, 9, 525, 542, 548, 1110, 1261, 1298], "mf": [3, 9, 147, 148, 149, 542, 548, 732, 733, 734], "x": [3, 9, 21, 22, 45, 51, 53, 71, 79, 88, 100, 108, 117, 118, 119, 120, 121, 122, 123, 124, 205, 211, 215, 222, 224, 227, 229, 232, 233, 234, 235, 236, 238, 249, 251, 255, 257, 267, 269, 271, 272, 278, 282, 289, 291, 294, 296, 299, 300, 301, 302, 304, 305, 311, 315, 322, 324, 327, 330, 332, 336, 337, 338, 339, 341, 342, 348, 352, 359, 361, 364, 367, 369, 373, 374, 375, 376, 378, 454, 494, 499, 513, 516, 517, 521, 522, 523, 530, 531, 542, 548, 565, 566, 600, 606, 608, 626, 634, 643, 655, 663, 672, 673, 674, 675, 676, 677, 678, 679, 791, 797, 801, 808, 810, 813, 815, 818, 819, 820, 821, 822, 824, 835, 837, 841, 843, 853, 855, 857, 858, 864, 868, 875, 877, 880, 882, 885, 886, 887, 888, 890, 891, 897, 901, 908, 910, 913, 916, 918, 922, 923, 924, 925, 927, 928, 934, 938, 945, 947, 950, 953, 955, 959, 960, 961, 962, 964, 1014, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1039, 1079, 1084, 1098, 1101, 1102, 1106, 1107, 1108, 1115, 1116, 1121, 1127, 1129, 1145, 1153, 1162, 1174, 1182, 1193, 1235, 1272, 1278, 1279, 1288, 1289, 1298, 1309, 1310, 1312, 1313, 1314, 1316], "offset": [3, 9, 18, 19, 20, 22, 30, 31, 32, 126, 133, 150, 151, 158, 159, 205, 272, 305, 331, 342, 368, 456, 466, 494, 542, 548, 562, 563, 564, 566, 580, 581, 583, 710, 717, 736, 737, 745, 746, 791, 858, 891, 917, 928, 954, 1041, 1051, 1079, 1241], "origin": [3, 9, 22, 45, 53, 137, 138, 139, 205, 272, 305, 342, 394, 396, 397, 401, 430, 542, 548, 566, 600, 608, 721, 722, 723, 791, 858, 891, 928, 982, 984, 985, 990, 992, 1021, 1025, 1121, 1129, 1218, 1219, 1237, 1272, 1273, 1274, 1297, 1298, 1303, 1317], "stereo": [3, 9, 542, 548], "polar": [3, 9, 26, 142, 143, 144, 147, 148, 149, 152, 154, 155, 156, 197, 388, 389, 497, 511, 523, 542, 548, 567, 575, 726, 727, 728, 732, 733, 734, 738, 741, 742, 743, 782, 976, 977, 1082, 1096, 1108, 1261, 1313], "correspond": [3, 9, 13, 22, 121, 124, 169, 221, 251, 252, 253, 267, 288, 321, 358, 382, 435, 460, 479, 531, 537, 542, 548, 555, 566, 676, 679, 682, 754, 807, 837, 838, 839, 853, 874, 907, 944, 970, 997, 1008, 1022, 1025, 1045, 1064, 1116, 1225, 1229, 1231, 1232, 1233, 1242, 1243, 1244, 1245, 1268, 1280, 1307, 1311, 1313, 1314, 1317], "northwest": [3, 9, 22, 542, 548, 566], "corner": [3, 9, 22, 224, 291, 324, 331, 361, 368, 542, 548, 566, 810, 877, 910, 917, 947, 954, 1312], "metropolitan": [3, 9, 22, 542, 548, 566], "french": [3, 9, 22, 542, 548, 566], "composit": [3, 9, 22, 398, 542, 548, 566, 986, 1030, 1266, 1295, 1301, 1315], "9": [3, 9, 22, 30, 31, 129, 135, 136, 197, 236, 302, 339, 376, 388, 518, 525, 527, 542, 548, 566, 580, 581, 713, 719, 720, 782, 822, 888, 925, 962, 976, 1103, 1110, 1112, 1225, 1269, 1278, 1280, 1285, 1289, 1296, 1297, 1298, 1305, 1310, 1311, 1313, 1314], "965": [3, 9, 22, 542, 548, 566], "53": [3, 9, 22, 150, 151, 542, 548, 566, 736, 737, 1300], "670": [3, 9, 22, 542, 548, 566], "deg": [3, 9, 14, 22, 24, 25, 125, 140, 145, 153, 163, 197, 199, 203, 443, 459, 489, 490, 492, 495, 509, 511, 514, 518, 521, 542, 548, 556, 566, 573, 574, 680, 724, 729, 740, 750, 782, 784, 788, 1027, 1044, 1074, 1075, 1077, 1080, 1094, 1096, 1099, 1103, 1106, 1211, 1227, 1238, 1255, 1256, 1300, 1312], "latitud": [3, 9, 22, 29, 45, 47, 50, 53, 55, 59, 70, 88, 99, 120, 121, 122, 124, 125, 161, 162, 205, 227, 228, 248, 250, 251, 252, 254, 255, 256, 264, 266, 268, 269, 270, 272, 294, 295, 305, 327, 328, 329, 331, 333, 342, 364, 365, 366, 368, 370, 459, 489, 492, 542, 548, 566, 579, 600, 602, 605, 608, 610, 614, 625, 643, 654, 675, 676, 677, 679, 680, 748, 749, 791, 813, 814, 834, 836, 837, 838, 840, 841, 842, 850, 852, 854, 855, 856, 858, 880, 881, 891, 913, 914, 915, 917, 919, 928, 950, 951, 952, 954, 956, 1025, 1044, 1074, 1077, 1121, 1123, 1126, 1129, 1133, 1144, 1162, 1173, 1211, 1228, 1229, 1230, 1238, 1254, 1261, 1266, 1267, 1270, 1278, 1285, 1292, 1296, 1298, 1305, 1306, 1312, 1313, 1314, 1315], "longitud": [3, 9, 22, 29, 45, 47, 50, 53, 55, 59, 70, 88, 99, 120, 121, 122, 124, 125, 161, 162, 205, 227, 228, 248, 250, 251, 252, 254, 256, 257, 264, 266, 268, 270, 271, 272, 294, 295, 305, 327, 328, 329, 331, 333, 342, 364, 365, 366, 368, 370, 459, 489, 492, 542, 548, 566, 579, 600, 602, 605, 608, 610, 614, 625, 643, 654, 675, 676, 677, 679, 680, 748, 749, 791, 813, 814, 834, 836, 837, 838, 840, 842, 843, 850, 852, 854, 856, 857, 858, 880, 881, 891, 913, 914, 915, 917, 919, 928, 950, 951, 952, 954, 956, 1025, 1044, 1074, 1077, 1121, 1123, 1126, 1129, 1133, 1144, 1162, 1173, 1211, 1228, 1229, 1230, 1238, 1254, 1266, 1267, 1270, 1278, 1285, 1292, 1296, 1298, 1305, 1306, 1312, 1313, 1314, 1315], "stereograph": [3, 9, 542, 548], "can": [3, 4, 13, 14, 16, 18, 22, 24, 25, 26, 30, 31, 32, 44, 59, 68, 71, 88, 97, 100, 120, 122, 123, 127, 128, 135, 136, 137, 140, 142, 143, 146, 147, 148, 149, 154, 155, 156, 157, 169, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 221, 288, 321, 358, 380, 388, 389, 391, 394, 398, 399, 400, 428, 447, 450, 454, 459, 463, 466, 467, 476, 482, 484, 489, 490, 492, 495, 497, 511, 514, 518, 521, 522, 523, 525, 527, 528, 531, 534, 535, 542, 543, 555, 556, 558, 560, 562, 566, 573, 574, 575, 580, 581, 583, 584, 598, 614, 623, 626, 643, 652, 655, 675, 677, 678, 682, 695, 707, 711, 712, 719, 720, 721, 724, 726, 727, 731, 732, 733, 734, 735, 741, 742, 743, 744, 754, 767, 779, 782, 783, 784, 785, 786, 787, 788, 789, 807, 874, 907, 944, 968, 976, 977, 979, 982, 986, 987, 988, 1024, 1025, 1032, 1035, 1039, 1044, 1048, 1051, 1052, 1061, 1067, 1069, 1074, 1075, 1077, 1080, 1082, 1096, 1099, 1103, 1106, 1107, 1108, 1110, 1112, 1113, 1116, 1119, 1133, 1142, 1145, 1162, 1171, 1174, 1213, 1242, 1248, 1261, 1268, 1269, 1272, 1277, 1296, 1298, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1319], "webmerc": [3, 22, 542, 566], "stere": [3, 22, 370, 542, 566, 956], "reader": [4, 14, 16, 543, 556, 560, 1261, 1269, 1303], "c": [4, 14, 16, 76, 105, 117, 121, 124, 126, 128, 132, 137, 139, 264, 370, 428, 449, 454, 459, 467, 469, 499, 513, 521, 522, 523, 528, 531, 534, 539, 543, 556, 560, 631, 660, 672, 676, 679, 710, 712, 716, 721, 723, 850, 956, 1034, 1039, 1044, 1052, 1054, 1084, 1098, 1106, 1107, 1108, 1113, 1116, 1119, 1150, 1179, 1198, 1226, 1261, 1272, 1303, 1304, 1306, 1309, 1311, 1312, 1316, 1317, 1319], "metranet": [4, 6, 7, 14, 16, 539, 543, 545, 546, 550, 551, 556, 560, 567, 568, 1261, 1304], "product": [4, 392, 394, 511, 534, 543, 980, 982, 1030, 1096, 1119, 1261], "librari": [4, 14, 16, 162, 381, 391, 394, 397, 398, 539, 543, 556, 560, 749, 969, 979, 982, 985, 986, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1316, 1317], "either": [4, 14, 16, 18, 30, 31, 127, 128, 137, 138, 139, 142, 143, 146, 154, 155, 156, 164, 222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 299, 300, 301, 302, 322, 323, 324, 332, 336, 337, 338, 339, 359, 360, 361, 369, 373, 374, 375, 376, 383, 439, 459, 467, 476, 489, 495, 496, 500, 503, 504, 511, 518, 543, 556, 558, 560, 562, 580, 581, 711, 712, 721, 722, 723, 726, 727, 731, 741, 742, 743, 751, 808, 809, 810, 815, 818, 819, 820, 821, 822, 833, 835, 837, 838, 839, 841, 843, 851, 853, 855, 857, 875, 876, 877, 882, 885, 886, 887, 888, 908, 909, 910, 918, 922, 923, 924, 925, 945, 946, 947, 955, 959, 960, 961, 962, 971, 1001, 1011, 1044, 1052, 1061, 1074, 1080, 1081, 1085, 1088, 1089, 1096, 1103, 1298, 1303, 1311, 1312, 1313, 1316, 1317], "python": [4, 14, 16, 44, 398, 535, 543, 556, 560, 598, 986, 1261, 1263, 1264, 1266, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1316, 1319], "delay_field_load": [5, 6, 7, 28, 381, 384, 385, 388, 389, 390, 393, 395, 544, 545, 546, 578, 969, 972, 973, 976, 977, 978, 981, 983], "delai": [5, 6, 7, 28, 381, 384, 385, 388, 389, 390, 393, 544, 545, 546, 578, 969, 972, 973, 976, 977, 978, 981, 1226], "load": [5, 6, 7, 28, 44, 381, 384, 385, 388, 389, 390, 393, 401, 437, 539, 544, 545, 546, 578, 598, 969, 972, 973, 976, 977, 978, 981, 989, 990, 999, 1311, 1312, 1313, 1314], "until": [5, 6, 7, 28, 44, 138, 381, 384, 385, 388, 389, 390, 393, 544, 545, 546, 578, 598, 722, 969, 972, 973, 976, 977, 978, 981, 1312], "particular": [5, 6, 7, 28, 381, 384, 385, 388, 389, 390, 393, 490, 512, 525, 544, 545, 546, 578, 969, 972, 973, 976, 977, 978, 981, 1025, 1075, 1097, 1110, 1303], "access": [5, 6, 7, 28, 34, 45, 59, 70, 71, 88, 99, 100, 169, 381, 384, 385, 388, 389, 390, 393, 401, 544, 545, 546, 578, 587, 600, 614, 625, 626, 643, 654, 655, 682, 754, 969, 972, 973, 976, 977, 978, 981, 990, 1121, 1133, 1144, 1145, 1162, 1173, 1174, 1192, 1268, 1269, 1309, 1314], "In": [5, 6, 7, 28, 30, 31, 120, 122, 123, 139, 145, 381, 384, 385, 388, 389, 390, 392, 393, 439, 490, 521, 534, 544, 545, 546, 578, 580, 581, 675, 677, 678, 723, 729, 966, 969, 972, 973, 976, 977, 978, 980, 981, 1001, 1011, 1014, 1030, 1075, 1106, 1119, 1210, 1263, 1264, 1269, 1298, 1303, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1316, 1317], "attribut": [5, 6, 7, 18, 19, 20, 28, 30, 31, 32, 45, 48, 49, 50, 51, 52, 59, 70, 71, 77, 78, 79, 80, 88, 99, 100, 106, 107, 108, 109, 137, 165, 169, 182, 194, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 393, 396, 397, 400, 471, 544, 545, 546, 558, 562, 563, 564, 578, 580, 581, 583, 600, 603, 604, 605, 606, 607, 614, 625, 626, 632, 633, 634, 635, 643, 654, 655, 661, 662, 663, 664, 682, 695, 707, 721, 754, 767, 779, 808, 815, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 969, 972, 973, 974, 976, 977, 978, 981, 984, 985, 988, 1056, 1121, 1124, 1125, 1126, 1127, 1128, 1133, 1144, 1145, 1151, 1152, 1153, 1154, 1162, 1173, 1174, 1180, 1181, 1182, 1183, 1296, 1305, 1311, 1314], "lazyloaddict": [5, 6, 7, 28, 45, 59, 88, 381, 384, 385, 388, 389, 390, 393, 544, 545, 546, 578, 600, 614, 643, 969, 972, 973, 976, 977, 978, 981, 1121, 1133, 1162], "provid": [5, 6, 7, 8, 13, 28, 59, 62, 88, 91, 137, 228, 252, 295, 328, 333, 365, 383, 384, 385, 386, 391, 394, 398, 399, 400, 401, 433, 434, 440, 511, 518, 544, 545, 546, 547, 555, 578, 614, 617, 643, 646, 721, 814, 838, 881, 914, 919, 951, 971, 972, 973, 974, 979, 982, 986, 987, 988, 990, 995, 996, 1002, 1003, 1006, 1007, 1012, 1014, 1096, 1103, 1133, 1136, 1162, 1165, 1236, 1253, 1260, 1269, 1296, 1298, 1303, 1310, 1311, 1313, 1316, 1317], "speedup": [5, 6, 7, 28, 251, 252, 333, 370, 384, 385, 544, 545, 546, 578, 837, 838, 919, 956, 972, 973], "number": [5, 6, 7, 14, 16, 26, 28, 32, 44, 45, 59, 65, 66, 68, 69, 70, 71, 72, 88, 94, 95, 97, 98, 99, 100, 101, 126, 127, 128, 133, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 158, 159, 164, 221, 225, 229, 230, 232, 233, 234, 235, 252, 288, 292, 296, 297, 299, 300, 301, 321, 325, 332, 333, 334, 336, 337, 338, 358, 362, 369, 370, 371, 373, 374, 375, 384, 385, 392, 398, 399, 417, 450, 454, 459, 463, 464, 467, 468, 469, 476, 482, 489, 495, 497, 498, 508, 517, 519, 520, 521, 523, 525, 527, 529, 531, 536, 544, 545, 546, 556, 560, 575, 578, 583, 598, 600, 614, 620, 621, 623, 624, 625, 626, 627, 643, 649, 650, 652, 653, 654, 655, 656, 710, 711, 712, 717, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 733, 736, 737, 739, 741, 742, 743, 744, 745, 746, 751, 807, 811, 815, 816, 818, 819, 820, 821, 838, 874, 878, 882, 883, 885, 886, 887, 907, 911, 918, 919, 920, 922, 923, 924, 944, 948, 955, 956, 957, 959, 960, 961, 966, 972, 973, 980, 986, 987, 1021, 1024, 1025, 1035, 1039, 1044, 1048, 1049, 1052, 1053, 1054, 1061, 1067, 1074, 1080, 1082, 1083, 1093, 1102, 1104, 1105, 1106, 1108, 1110, 1112, 1114, 1116, 1121, 1133, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1162, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1193, 1194, 1195, 1196, 1213, 1215, 1225, 1226, 1231, 1232, 1233, 1242, 1243, 1244, 1245, 1259, 1277, 1279, 1303, 1311, 1312, 1314, 1317], "gate": [5, 6, 7, 28, 59, 69, 70, 71, 88, 98, 99, 100, 117, 118, 119, 126, 127, 128, 133, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 150, 151, 154, 155, 156, 158, 159, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 272, 289, 296, 300, 301, 305, 322, 332, 333, 337, 338, 342, 359, 369, 370, 374, 375, 384, 385, 390, 391, 392, 393, 468, 469, 496, 497, 506, 507, 508, 521, 522, 523, 524, 525, 526, 527, 528, 533, 534, 544, 545, 546, 578, 614, 624, 625, 626, 643, 653, 654, 655, 672, 673, 674, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 717, 721, 722, 723, 724, 725, 726, 727, 729, 731, 733, 735, 736, 737, 741, 742, 743, 745, 746, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 808, 815, 819, 820, 821, 835, 841, 843, 853, 855, 857, 858, 875, 882, 886, 887, 891, 908, 918, 919, 923, 924, 928, 945, 955, 956, 960, 961, 972, 973, 978, 979, 980, 981, 1014, 1021, 1024, 1025, 1053, 1054, 1081, 1082, 1091, 1092, 1093, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1118, 1119, 1133, 1143, 1144, 1145, 1162, 1172, 1173, 1174, 1194, 1195, 1196, 1210, 1211, 1212, 1226, 1227, 1229, 1230, 1235, 1238, 1264, 1269, 1272, 1273, 1274, 1278, 1305, 1307, 1309, 1310, 1311, 1313, 1314], "vari": [5, 6, 7, 28, 384, 385, 388, 544, 545, 546, 578, 972, 973, 976, 1246, 1298, 1311], "between": [5, 6, 7, 14, 24, 25, 28, 30, 31, 47, 59, 70, 71, 88, 99, 100, 118, 121, 122, 135, 136, 137, 138, 140, 145, 147, 148, 149, 156, 182, 194, 197, 200, 201, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 384, 385, 390, 393, 399, 400, 452, 454, 494, 500, 508, 511, 526, 527, 544, 545, 546, 556, 573, 574, 578, 580, 581, 602, 614, 625, 626, 643, 654, 655, 673, 676, 677, 695, 707, 719, 720, 721, 722, 724, 729, 732, 733, 734, 735, 743, 767, 779, 782, 785, 786, 808, 815, 819, 820, 821, 822, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 965, 972, 973, 978, 981, 987, 988, 1014, 1037, 1039, 1079, 1085, 1093, 1096, 1111, 1112, 1123, 1133, 1144, 1145, 1162, 1173, 1174, 1205, 1212, 1214, 1216, 1217, 1244, 1245, 1254, 1261, 1272, 1278, 1288, 1298, 1307, 1309, 1312, 1313, 1317, 1319], "rai": [5, 6, 7, 28, 31, 59, 67, 70, 71, 72, 73, 74, 75, 88, 96, 99, 100, 101, 102, 103, 104, 118, 126, 127, 128, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 151, 154, 155, 156, 182, 194, 200, 206, 208, 211, 213, 214, 222, 229, 232, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 273, 275, 278, 280, 281, 289, 296, 299, 300, 301, 302, 306, 308, 311, 313, 314, 322, 332, 333, 336, 337, 338, 339, 343, 345, 348, 350, 351, 359, 369, 370, 373, 374, 375, 376, 383, 384, 385, 390, 393, 394, 442, 445, 464, 469, 497, 525, 526, 527, 533, 544, 545, 546, 578, 581, 614, 622, 625, 626, 627, 628, 629, 630, 643, 651, 654, 655, 656, 657, 658, 659, 673, 695, 707, 710, 711, 712, 719, 720, 721, 722, 723, 725, 726, 727, 729, 731, 732, 733, 737, 741, 742, 743, 767, 779, 785, 792, 794, 797, 799, 800, 808, 815, 818, 819, 820, 821, 822, 835, 841, 843, 853, 855, 857, 859, 861, 864, 866, 867, 875, 882, 885, 886, 887, 888, 892, 894, 897, 899, 900, 908, 918, 919, 922, 923, 924, 925, 929, 931, 934, 936, 937, 945, 955, 956, 959, 960, 961, 962, 971, 972, 973, 978, 981, 982, 1014, 1029, 1049, 1054, 1082, 1110, 1111, 1112, 1118, 1133, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1162, 1170, 1173, 1174, 1175, 1176, 1177, 1178, 1194, 1195, 1196, 1198, 1215, 1222, 1224, 1226, 1227, 1229, 1231, 1232, 1233, 1242, 1243, 1244, 1245, 1258, 1259, 1261, 1273, 1305, 1314, 1317], "ngates_vari": [5, 6, 7, 28, 384, 385, 544, 545, 546, 578, 972, 973], "recommend": [5, 6, 7, 28, 44, 59, 88, 137, 139, 370, 384, 385, 394, 494, 521, 544, 545, 546, 578, 598, 614, 643, 721, 723, 956, 972, 973, 982, 1025, 1079, 1106, 1133, 1162, 1210, 1277, 1303, 1316, 1317, 1318, 1319], "read_altitude_from_nc": [8, 547], "d3r": [8, 547], "gcpex": [8, 547], "odim_h5": [8, 18, 19, 20, 30, 31, 547, 558, 562, 563, 564, 580, 581, 1261], "found": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 44, 135, 136, 140, 141, 167, 381, 386, 388, 389, 390, 391, 393, 394, 395, 435, 498, 510, 547, 556, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 579, 598, 719, 720, 724, 725, 969, 974, 976, 977, 978, 979, 981, 982, 983, 997, 1008, 1021, 1024, 1025, 1030, 1083, 1095, 1242, 1269, 1303, 1311, 1316, 1317, 1319], "doe": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 63, 92, 120, 122, 123, 137, 138, 139, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 414, 439, 547, 556, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 579, 618, 647, 675, 677, 678, 721, 722, 723, 808, 810, 815, 818, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 919, 922, 923, 924, 925, 945, 947, 955, 956, 959, 960, 961, 962, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 1001, 1011, 1137, 1166, 1259, 1261, 1289, 1303, 1305, 1311, 1316, 1317, 1319], "appear": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 547, 556, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 579, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 1241], "place": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 146, 223, 227, 228, 247, 250, 265, 266, 290, 294, 295, 323, 327, 328, 360, 364, 365, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 450, 527, 547, 556, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 579, 731, 809, 813, 814, 833, 836, 851, 852, 876, 880, 881, 909, 913, 914, 946, 950, 951, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 987, 988, 1035, 1112, 1259, 1309, 1316], "defin": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 45, 59, 88, 120, 122, 123, 126, 127, 128, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 197, 198, 199, 200, 201, 202, 203, 204, 227, 228, 232, 294, 295, 299, 327, 328, 336, 364, 365, 373, 381, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 400, 445, 476, 490, 495, 511, 518, 519, 520, 521, 525, 526, 527, 530, 547, 556, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 579, 580, 581, 600, 614, 643, 675, 677, 678, 710, 711, 712, 717, 719, 720, 721, 724, 725, 726, 727, 728, 731, 735, 736, 737, 741, 742, 743, 745, 746, 782, 783, 784, 785, 786, 787, 788, 789, 813, 814, 818, 880, 881, 885, 913, 914, 922, 950, 951, 959, 969, 972, 974, 976, 977, 978, 979, 980, 981, 982, 983, 988, 1024, 1025, 1029, 1061, 1075, 1080, 1096, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1115, 1121, 1133, 1162, 1210, 1278, 1279, 1296, 1298, 1313], "mdv": [8, 14, 16, 18, 19, 20, 24, 25, 26, 29, 388, 389, 399, 547, 556, 558, 560, 562, 563, 564, 573, 574, 575, 576, 579, 976, 977, 987, 1264, 1266, 1273, 1276, 1294, 1303, 1307, 1309, 1315], "like": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 39, 55, 56, 76, 105, 120, 121, 123, 124, 125, 138, 139, 380, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 433, 434, 497, 525, 526, 527, 535, 547, 556, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 579, 593, 610, 611, 631, 660, 675, 676, 678, 679, 680, 722, 723, 968, 969, 974, 976, 977, 978, 979, 980, 981, 982, 983, 986, 987, 988, 989, 990, 995, 996, 1006, 1007, 1030, 1082, 1110, 1111, 1112, 1150, 1179, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1225, 1226, 1239, 1268, 1269, 1272, 1303, 1305, 1307, 1309, 1313, 1317], "onli": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 64, 70, 71, 93, 99, 100, 126, 127, 128, 132, 137, 139, 141, 146, 150, 151, 154, 155, 156, 169, 222, 233, 251, 252, 289, 300, 322, 333, 337, 359, 370, 374, 381, 386, 388, 389, 390, 391, 392, 393, 394, 496, 497, 511, 521, 547, 556, 558, 560, 561, 562, 563, 564, 573, 574, 575, 576, 579, 582, 619, 625, 626, 648, 654, 655, 682, 710, 711, 712, 716, 721, 723, 725, 731, 736, 737, 741, 742, 743, 754, 808, 819, 837, 838, 875, 886, 908, 919, 923, 945, 956, 960, 969, 974, 976, 977, 978, 979, 980, 981, 982, 1022, 1023, 1025, 1081, 1082, 1096, 1106, 1138, 1144, 1145, 1167, 1173, 1174, 1218, 1219, 1231, 1241, 1248, 1255, 1256, 1261, 1272, 1279, 1289, 1298, 1306, 1307, 1309, 1311, 1312, 1313, 1317], "you": [8, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 497, 547, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1082, 1268, 1298, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1316, 1317, 1319], "altitud": [8, 29, 45, 59, 70, 88, 99, 125, 129, 130, 135, 136, 147, 150, 151, 205, 236, 302, 339, 376, 450, 511, 514, 515, 527, 530, 547, 579, 600, 614, 625, 643, 654, 680, 713, 714, 719, 720, 732, 736, 737, 791, 822, 888, 925, 962, 1022, 1025, 1030, 1035, 1096, 1099, 1100, 1112, 1115, 1121, 1133, 1144, 1162, 1173, 1211, 1228, 1238, 1254, 1261, 1289, 1300, 1305, 1309, 1312, 1314], "np": [8, 14, 16, 26, 464, 534, 547, 556, 560, 575, 1014, 1049, 1119, 1252, 1261, 1272, 1273, 1277, 1280, 1285, 1288, 1289, 1291, 1296, 1298, 1299, 1300, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1317], "295": [8, 547], "float64": [8, 547, 1024, 1025, 1296, 1314], "nd": [9, 548], "65535": [9, 548], "radar_estimated_rain_r": [9, 548, 1311, 1313], "integ": [9, 222, 289, 322, 359, 400, 516, 517, 548, 808, 875, 908, 945, 988, 1101, 1102], "repres": [9, 59, 88, 133, 137, 141, 142, 143, 144, 154, 155, 156, 158, 159, 495, 508, 511, 518, 519, 520, 525, 527, 533, 534, 548, 614, 643, 717, 721, 725, 726, 727, 728, 741, 742, 743, 745, 746, 1022, 1023, 1080, 1093, 1096, 1103, 1104, 1105, 1110, 1112, 1118, 1119, 1133, 1162, 1194, 1195, 1259], "No": [9, 70, 71, 99, 100, 139, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 398, 449, 511, 548, 625, 626, 654, 655, 723, 808, 815, 819, 820, 821, 822, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 986, 1025, 1034, 1096, 1144, 1145, 1173, 1174, 1311, 1313], "valid_range_from_fil": [10, 552], "units_from_fil": [10, 552], "pulse_width": [10, 152, 163, 400, 470, 552, 738, 750, 988, 1055], "gamic": [10, 552], "hdf5": [10, 19, 30, 31, 552, 563, 580, 581, 1303], "valid": [10, 45, 59, 88, 126, 135, 136, 137, 141, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 196, 223, 247, 265, 290, 323, 360, 390, 399, 400, 443, 454, 459, 463, 467, 468, 469, 476, 482, 489, 495, 497, 508, 519, 520, 525, 527, 552, 600, 614, 643, 709, 710, 719, 720, 721, 725, 731, 732, 733, 734, 736, 741, 742, 743, 744, 745, 746, 781, 809, 833, 851, 876, 909, 946, 978, 987, 988, 1022, 1023, 1025, 1027, 1039, 1044, 1048, 1052, 1053, 1054, 1061, 1067, 1074, 1080, 1082, 1093, 1104, 1105, 1110, 1112, 1121, 1133, 1162, 1213, 1215, 1218, 1219, 1225, 1226, 1317], "rang": [10, 14, 16, 24, 25, 26, 59, 69, 71, 88, 98, 100, 117, 118, 119, 128, 133, 135, 136, 141, 142, 143, 144, 147, 158, 159, 197, 205, 222, 224, 229, 230, 231, 233, 234, 235, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 272, 289, 291, 296, 297, 298, 300, 301, 305, 322, 324, 332, 333, 334, 335, 337, 338, 342, 359, 361, 369, 370, 371, 372, 374, 375, 393, 442, 443, 450, 459, 463, 464, 476, 482, 489, 490, 496, 497, 508, 511, 515, 521, 523, 525, 526, 527, 552, 556, 560, 573, 574, 575, 614, 624, 626, 643, 653, 655, 672, 673, 674, 712, 717, 719, 720, 725, 726, 727, 728, 732, 745, 746, 782, 791, 808, 810, 815, 816, 817, 819, 820, 821, 835, 837, 838, 839, 841, 843, 850, 853, 855, 857, 858, 875, 877, 882, 883, 884, 886, 887, 891, 908, 910, 918, 919, 920, 921, 923, 924, 928, 945, 947, 955, 956, 957, 958, 960, 961, 981, 1022, 1023, 1025, 1027, 1035, 1044, 1048, 1049, 1061, 1067, 1074, 1075, 1081, 1082, 1093, 1096, 1100, 1106, 1108, 1110, 1111, 1112, 1133, 1143, 1145, 1162, 1172, 1174, 1215, 1227, 1238, 1244, 1245, 1255, 1256, 1261, 1277, 1282, 1285, 1291, 1300, 1305, 1312, 1314], "valid_min": [10, 137, 138, 139, 386, 552, 721, 722, 723, 974, 1298, 1314], "valid_max": [10, 137, 138, 139, 386, 552, 721, 722, 723, 974, 1298, 1314], "when": [10, 18, 19, 20, 32, 34, 45, 59, 60, 61, 65, 66, 68, 70, 71, 88, 89, 90, 94, 95, 97, 99, 100, 135, 136, 137, 138, 139, 150, 151, 154, 161, 162, 167, 168, 169, 173, 175, 182, 189, 194, 222, 229, 233, 234, 235, 236, 251, 252, 258, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 342, 359, 369, 370, 374, 375, 376, 390, 391, 393, 394, 396, 400, 401, 414, 445, 454, 459, 467, 476, 489, 492, 496, 500, 503, 504, 508, 511, 514, 519, 521, 522, 523, 527, 533, 534, 552, 562, 563, 564, 583, 587, 600, 614, 615, 616, 620, 621, 623, 625, 626, 643, 644, 645, 649, 650, 652, 654, 655, 682, 686, 688, 695, 702, 707, 719, 720, 721, 722, 723, 736, 737, 741, 748, 749, 754, 758, 760, 767, 774, 779, 808, 815, 819, 820, 821, 822, 837, 838, 844, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 928, 945, 955, 956, 960, 961, 962, 978, 979, 981, 982, 984, 988, 990, 1014, 1025, 1029, 1039, 1044, 1052, 1061, 1074, 1077, 1081, 1085, 1088, 1089, 1093, 1096, 1099, 1104, 1106, 1107, 1108, 1112, 1118, 1119, 1120, 1121, 1133, 1134, 1135, 1139, 1140, 1142, 1144, 1145, 1162, 1163, 1164, 1168, 1169, 1171, 1173, 1174, 1225, 1246, 1261, 1277, 1298, 1303, 1306, 1307, 1310, 1312, 1316, 1317, 1319], "thei": [10, 72, 101, 137, 138, 139, 145, 154, 155, 156, 173, 175, 182, 370, 386, 394, 400, 454, 490, 521, 536, 550, 552, 627, 656, 686, 688, 695, 721, 722, 723, 729, 741, 742, 743, 758, 760, 767, 956, 974, 982, 988, 1039, 1075, 1106, 1146, 1175, 1298, 1311, 1317], "present": [10, 44, 45, 59, 88, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 399, 400, 439, 552, 598, 600, 614, 643, 808, 815, 819, 820, 821, 822, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 987, 988, 1001, 1011, 1025, 1121, 1133, 1162, 1305, 1310], "unit": [10, 18, 19, 20, 69, 98, 120, 121, 122, 123, 124, 135, 136, 138, 139, 212, 215, 216, 217, 218, 219, 220, 227, 279, 282, 283, 284, 285, 286, 287, 294, 312, 315, 316, 317, 318, 319, 320, 327, 349, 352, 353, 354, 355, 356, 357, 364, 379, 386, 388, 463, 482, 484, 516, 552, 562, 563, 564, 624, 653, 675, 676, 677, 678, 679, 719, 720, 722, 723, 798, 801, 802, 803, 804, 805, 806, 813, 865, 868, 869, 870, 871, 872, 873, 880, 898, 901, 902, 903, 904, 905, 906, 913, 935, 938, 939, 940, 941, 942, 943, 950, 967, 974, 976, 1048, 1067, 1069, 1101, 1120, 1143, 1172, 1198, 1213, 1225, 1226, 1261, 1286, 1291, 1298, 1303, 1306, 1311, 1314, 1317], "avail": [10, 18, 19, 20, 59, 70, 71, 72, 88, 99, 100, 101, 126, 127, 128, 145, 146, 154, 155, 156, 182, 194, 249, 251, 252, 253, 255, 257, 267, 269, 271, 388, 398, 511, 552, 562, 563, 564, 584, 614, 625, 626, 627, 643, 654, 655, 656, 695, 707, 710, 711, 712, 729, 731, 741, 742, 743, 767, 779, 835, 837, 838, 839, 841, 843, 853, 855, 857, 976, 986, 1096, 1133, 1144, 1145, 1146, 1162, 1173, 1174, 1175, 1213, 1248, 1266, 1268, 1277, 1303, 1311], "mandatori": [10, 552], "processor": [10, 552], "pulsewidth": [10, 511, 552, 1096], "enum": [10, 552], "should": [10, 26, 36, 45, 59, 61, 68, 88, 90, 97, 132, 137, 138, 139, 146, 151, 169, 173, 205, 250, 266, 333, 370, 380, 394, 397, 399, 400, 428, 494, 497, 508, 511, 519, 520, 521, 522, 523, 528, 530, 533, 534, 536, 552, 575, 589, 600, 614, 616, 623, 643, 645, 652, 682, 686, 716, 721, 722, 723, 731, 737, 754, 758, 791, 836, 852, 919, 956, 965, 966, 968, 982, 985, 987, 988, 1022, 1023, 1024, 1025, 1079, 1082, 1093, 1096, 1104, 1105, 1106, 1107, 1108, 1113, 1115, 1118, 1119, 1121, 1133, 1135, 1142, 1162, 1164, 1171, 1225, 1226, 1277, 1298, 1303, 1316, 1317, 1319], "u": [10, 55, 56, 57, 121, 124, 518, 533, 534, 552, 610, 611, 612, 676, 679, 1103, 1118, 1119, 1269, 1300, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1317], "gif": [11, 553, 1261], "precipitation_typ": [12, 22, 554, 566], "grib": [12, 554], "locat": [13, 45, 47, 59, 69, 70, 71, 88, 98, 99, 100, 205, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 272, 289, 290, 291, 294, 295, 296, 297, 298, 300, 301, 302, 305, 322, 323, 324, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 342, 359, 360, 361, 364, 365, 367, 369, 370, 371, 372, 374, 375, 376, 390, 391, 393, 399, 555, 600, 602, 614, 624, 625, 626, 643, 653, 654, 655, 791, 808, 809, 810, 813, 814, 815, 816, 817, 819, 820, 821, 822, 833, 835, 837, 838, 839, 841, 843, 850, 851, 853, 855, 857, 858, 875, 876, 877, 880, 881, 882, 883, 884, 886, 887, 888, 891, 908, 909, 910, 913, 914, 916, 918, 919, 920, 921, 923, 924, 925, 928, 945, 946, 947, 950, 951, 953, 955, 956, 957, 958, 960, 961, 962, 978, 979, 981, 987, 1014, 1021, 1024, 1025, 1121, 1123, 1133, 1143, 1144, 1145, 1162, 1172, 1173, 1174, 1193, 1205, 1212, 1228, 1229, 1230, 1283, 1285, 1296, 1303, 1309, 1312, 1316, 1317], "hpl": [13, 555], "ascii": [13, 555], "halo": [13, 555], "photono": [13, 555], "steamlin": [13, 555], "lidar": [13, 507, 555, 1092, 1261, 1303], "come": [13, 525, 555, 1110, 1298], "assign": [13, 137, 154, 518, 555, 721, 741, 1103, 1298], "lat": [13, 54, 70, 99, 120, 121, 122, 123, 124, 125, 161, 162, 211, 236, 249, 250, 251, 252, 254, 255, 256, 257, 266, 268, 269, 270, 271, 278, 302, 311, 329, 331, 333, 339, 348, 366, 368, 376, 397, 398, 459, 489, 492, 555, 609, 625, 654, 675, 676, 677, 678, 679, 680, 748, 749, 797, 822, 835, 836, 837, 838, 840, 841, 842, 843, 852, 854, 855, 856, 857, 864, 888, 897, 915, 917, 919, 925, 934, 952, 954, 962, 985, 986, 1044, 1074, 1077, 1130, 1144, 1173, 1278, 1279, 1292, 1309, 1312], "lon": [13, 54, 70, 99, 120, 121, 122, 123, 124, 125, 161, 162, 211, 236, 249, 250, 251, 252, 254, 255, 256, 257, 266, 268, 269, 270, 271, 278, 302, 311, 329, 331, 333, 339, 348, 366, 368, 376, 397, 398, 459, 489, 492, 555, 609, 625, 654, 675, 676, 677, 678, 679, 680, 748, 749, 797, 822, 835, 836, 837, 838, 840, 841, 842, 843, 852, 854, 855, 856, 857, 864, 888, 897, 915, 917, 919, 925, 934, 952, 954, 962, 985, 986, 1044, 1074, 1077, 1130, 1144, 1173, 1279, 1292, 1312], "alt": [13, 54, 70, 99, 125, 397, 555, 609, 625, 654, 680, 985, 1130, 1144, 1173, 1312], "ad": [13, 45, 59, 61, 88, 90, 145, 150, 151, 258, 331, 368, 494, 511, 555, 600, 614, 616, 643, 645, 729, 736, 737, 844, 917, 954, 1022, 1024, 1079, 1096, 1121, 1133, 1135, 1162, 1164, 1261, 1288, 1289, 1305, 1306, 1316, 1317], "global": [13, 59, 88, 555, 614, 643, 1133, 1162, 1314, 1316], "variabl": [13, 32, 44, 45, 53, 54, 55, 59, 69, 88, 98, 169, 205, 239, 258, 272, 305, 342, 396, 397, 454, 465, 466, 498, 500, 510, 518, 521, 524, 528, 529, 531, 555, 583, 598, 600, 608, 609, 610, 614, 624, 643, 653, 682, 754, 791, 825, 844, 858, 891, 928, 984, 985, 1014, 1022, 1039, 1050, 1051, 1083, 1085, 1095, 1103, 1106, 1109, 1113, 1114, 1116, 1121, 1129, 1130, 1133, 1143, 1162, 1172, 1225, 1261, 1268, 1272, 1296, 1298, 1303, 1305, 1306, 1311, 1313, 1314, 1316], "location_campaign": [13, 555], "script": [13, 44, 535, 555, 598, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300], "filenames_iq": [14, 556], "nbyte": [14, 16, 26, 556, 560, 575], "4": [14, 16, 26, 30, 31, 59, 88, 117, 118, 125, 135, 136, 154, 155, 384, 388, 445, 524, 525, 556, 560, 575, 580, 581, 614, 643, 672, 673, 680, 719, 720, 741, 742, 972, 976, 1021, 1029, 1109, 1110, 1133, 1162, 1244, 1264, 1268, 1269, 1277, 1280, 1281, 1286, 1287, 1288, 1289, 1291, 1292, 1298, 1300, 1303, 1310, 1311, 1312, 1313, 1317], "prf": [14, 556, 1312], "ang_tol": [14, 24, 25, 467, 489, 490, 556, 573, 574, 1052, 1074, 1075], "noise_h": [14, 556], "noise_v": [14, 556], "rconst_h": [14, 556], "rconst_v": [14, 556], "radconst_h": [14, 556], "radconst_v": [14, 556], "mfloss_h": [14, 556], "mfloss_v": [14, 556], "azi_min": [14, 24, 25, 556, 573, 574, 1255, 1256], "azi_max": [14, 24, 25, 556, 573, 574, 1255, 1256], "ele_min": [14, 24, 25, 556, 573, 574, 1255, 1256], "ele_max": [14, 24, 25, 556, 573, 574, 1255, 1256], "rng_min": [14, 24, 25, 515, 556, 573, 574, 1100, 1255, 1256], "rng_max": [14, 24, 25, 515, 556, 573, 574, 1100, 1255, 1256], "rad4alp": [14, 556, 1261], "iq": [14, 447, 449, 456, 458, 460, 462, 466, 473, 475, 479, 487, 488, 493, 556, 1032, 1034, 1041, 1043, 1045, 1047, 1051, 1058, 1060, 1064, 1072, 1073, 1078, 1303], "refer": [14, 18, 24, 25, 30, 33, 45, 59, 61, 88, 90, 117, 121, 124, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 142, 143, 146, 150, 151, 152, 153, 154, 155, 156, 160, 163, 211, 236, 278, 302, 311, 339, 348, 376, 390, 391, 392, 449, 450, 454, 459, 463, 464, 467, 468, 469, 471, 476, 477, 482, 489, 490, 492, 494, 495, 497, 499, 511, 514, 518, 521, 522, 523, 525, 527, 528, 530, 532, 533, 534, 556, 558, 562, 573, 574, 580, 585, 600, 614, 616, 643, 645, 672, 676, 679, 710, 711, 712, 713, 714, 716, 719, 720, 721, 722, 723, 726, 727, 731, 736, 737, 738, 740, 741, 742, 743, 747, 750, 797, 822, 864, 888, 897, 925, 934, 962, 978, 979, 980, 1021, 1030, 1034, 1035, 1039, 1044, 1048, 1049, 1052, 1053, 1054, 1056, 1061, 1062, 1067, 1074, 1075, 1077, 1079, 1080, 1082, 1084, 1096, 1099, 1103, 1106, 1107, 1108, 1110, 1112, 1113, 1115, 1117, 1118, 1119, 1121, 1133, 1135, 1162, 1164, 1225, 1226, 1236, 1251, 1303, 1314, 1317], "rainbow": [14, 24, 25, 26, 556, 573, 574, 575], "byte": [14, 16, 26, 398, 426, 556, 560, 575, 986, 1261, 1311], "numpi": [14, 16, 26, 61, 90, 175, 189, 550, 551, 556, 560, 567, 568, 575, 616, 645, 688, 702, 760, 774, 1135, 1164, 1248, 1261, 1263, 1272, 1273, 1277, 1280, 1285, 1288, 1289, 1291, 1296, 1298, 1299, 1300, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1319], "e": [14, 16, 26, 31, 139, 145, 150, 151, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 382, 398, 439, 452, 490, 494, 521, 525, 527, 530, 556, 560, 575, 581, 723, 729, 736, 737, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 970, 986, 1001, 1011, 1037, 1075, 1079, 1106, 1110, 1112, 1115, 1211, 1212, 1236, 1238, 1268, 1280, 1298, 1312, 1316, 1317], "g": [14, 16, 26, 31, 145, 398, 489, 511, 521, 523, 534, 556, 560, 575, 581, 729, 986, 1021, 1074, 1096, 1106, 1108, 1119], "go": [14, 16, 26, 146, 150, 154, 155, 156, 454, 480, 499, 500, 501, 503, 504, 518, 527, 556, 560, 575, 731, 736, 741, 742, 743, 1039, 1065, 1084, 1085, 1086, 1088, 1089, 1103, 1112, 1211, 1212, 1238, 1255, 1256, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1306], "float6432": [14, 556], "scan": [14, 18, 30, 31, 59, 88, 137, 138, 139, 140, 143, 153, 205, 221, 222, 224, 235, 272, 288, 289, 291, 301, 305, 321, 322, 324, 338, 342, 358, 359, 361, 375, 390, 497, 525, 527, 556, 558, 562, 580, 581, 614, 643, 721, 722, 723, 724, 727, 740, 791, 807, 808, 810, 821, 858, 874, 875, 877, 887, 891, 907, 908, 910, 924, 928, 944, 945, 947, 961, 978, 1022, 1030, 1082, 1110, 1112, 1133, 1162, 1194, 1195, 1228, 1241, 1246, 1253, 1259, 1261, 1269, 1272, 1282, 1283, 1293, 1304, 1313], "toler": [14, 24, 25, 459, 467, 489, 490, 492, 506, 507, 556, 573, 574, 1014, 1015, 1017, 1044, 1052, 1074, 1075, 1077, 1091, 1092, 1211, 1218, 1219, 1234, 1238], "angl": [14, 24, 25, 59, 65, 66, 88, 94, 95, 117, 118, 119, 135, 136, 147, 148, 149, 152, 153, 160, 161, 162, 163, 205, 222, 234, 272, 289, 305, 322, 342, 359, 443, 467, 489, 490, 509, 511, 515, 523, 525, 527, 528, 551, 556, 573, 574, 614, 620, 621, 643, 649, 650, 672, 673, 674, 719, 720, 732, 733, 734, 738, 740, 747, 748, 749, 750, 791, 808, 820, 858, 875, 891, 908, 928, 945, 1027, 1052, 1074, 1075, 1094, 1096, 1100, 1108, 1110, 1112, 1113, 1133, 1139, 1140, 1162, 1168, 1169, 1206, 1207, 1208, 1209, 1213, 1218, 1219, 1228, 1229, 1234, 1238, 1246, 1249, 1250, 1259, 1261, 1291, 1293, 1300, 1305, 1314], "distanc": [14, 24, 25, 45, 53, 71, 100, 117, 118, 119, 222, 233, 289, 300, 322, 337, 359, 374, 459, 464, 489, 497, 516, 518, 523, 525, 526, 527, 556, 573, 574, 600, 608, 626, 655, 672, 673, 674, 808, 819, 875, 886, 908, 923, 945, 960, 1014, 1015, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1044, 1049, 1074, 1082, 1101, 1103, 1108, 1110, 1111, 1112, 1121, 1129, 1145, 1174, 1212, 1218, 1219, 1226, 1228, 1229, 1230, 1254, 1272, 1281, 1286, 1287, 1288, 1312], "psr": [14, 24, 25, 149, 556, 569, 570, 571, 573, 574, 734, 1237, 1251], "estim": [14, 128, 141, 142, 143, 144, 147, 148, 154, 155, 156, 164, 199, 203, 224, 291, 324, 361, 451, 463, 464, 466, 468, 469, 471, 482, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 521, 522, 523, 526, 528, 556, 712, 725, 726, 727, 728, 730, 732, 733, 741, 742, 743, 751, 784, 788, 810, 877, 910, 947, 1022, 1036, 1048, 1049, 1051, 1053, 1054, 1056, 1067, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1106, 1107, 1108, 1111, 1113, 1225, 1226, 1298, 1312], "v": [14, 26, 55, 56, 58, 147, 148, 149, 435, 436, 439, 456, 462, 487, 488, 493, 509, 525, 533, 534, 556, 575, 610, 611, 613, 732, 733, 734, 997, 998, 1001, 1008, 1009, 1011, 1041, 1047, 1072, 1073, 1078, 1094, 1110, 1118, 1119, 1288, 1289, 1300, 1317], "nois": [14, 24, 25, 132, 144, 147, 148, 149, 202, 444, 449, 458, 463, 464, 465, 466, 468, 469, 473, 474, 475, 478, 481, 482, 484, 485, 486, 493, 496, 556, 573, 574, 716, 728, 732, 733, 734, 787, 1028, 1034, 1043, 1048, 1049, 1050, 1051, 1053, 1054, 1058, 1059, 1060, 1063, 1066, 1067, 1069, 1070, 1071, 1078, 1081, 1225, 1226, 1231, 1242, 1307], "power": [14, 24, 25, 126, 128, 147, 148, 149, 150, 152, 163, 164, 201, 458, 463, 465, 468, 469, 471, 473, 474, 476, 477, 481, 482, 484, 485, 496, 499, 500, 501, 502, 503, 504, 511, 556, 573, 574, 710, 712, 732, 733, 734, 735, 736, 738, 750, 751, 786, 1043, 1048, 1050, 1053, 1054, 1056, 1058, 1059, 1061, 1062, 1066, 1067, 1069, 1070, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1096, 1226, 1231], "adu": [14, 463, 465, 466, 480, 481, 482, 483, 484, 485, 486, 556, 1048, 1050, 1051, 1065, 1066, 1067, 1068, 1069, 1070, 1071], "dynam": [14, 138, 556, 722], "factor": [14, 117, 118, 119, 129, 150, 151, 400, 450, 491, 496, 499, 500, 501, 502, 503, 504, 511, 527, 529, 556, 591, 672, 673, 674, 713, 736, 737, 988, 1030, 1035, 1076, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1096, 1112, 1114, 1210, 1279, 1287, 1293, 1309], "convers": [14, 30, 31, 467, 489, 556, 580, 581, 1052, 1074, 1210, 1311], "dbadu": [14, 463, 482, 484, 556, 1048, 1067, 1069], "dbm": [14, 147, 148, 149, 152, 163, 164, 463, 468, 469, 471, 477, 482, 484, 556, 732, 733, 734, 738, 750, 751, 1048, 1053, 1054, 1056, 1062, 1067, 1069], "dbz": [14, 26, 126, 132, 150, 151, 441, 450, 454, 464, 478, 494, 518, 525, 530, 556, 575, 710, 716, 736, 737, 1035, 1039, 1049, 1063, 1079, 1103, 1110, 1115, 1268, 1272, 1279, 1286, 1287, 1293, 1298, 1311, 1313, 1314], "constant": [14, 136, 390, 470, 471, 477, 491, 516, 521, 556, 720, 978, 1018, 1024, 1025, 1055, 1056, 1062, 1076, 1101, 1106, 1269, 1312], "match": [14, 137, 140, 145, 205, 272, 305, 342, 394, 471, 477, 508, 533, 534, 556, 721, 724, 729, 791, 858, 891, 928, 982, 1014, 1056, 1062, 1093, 1118, 1119, 1261, 1272, 1279, 1312], "filter": [14, 62, 91, 135, 136, 137, 138, 139, 140, 143, 144, 145, 154, 155, 156, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 452, 471, 477, 519, 520, 521, 522, 523, 556, 617, 646, 682, 686, 688, 695, 702, 707, 719, 720, 721, 722, 723, 724, 727, 728, 729, 735, 741, 742, 743, 808, 815, 819, 820, 821, 822, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 1014, 1024, 1025, 1037, 1056, 1062, 1104, 1105, 1106, 1107, 1108, 1136, 1165, 1264, 1272, 1273, 1274, 1278, 1297, 1304, 1307, 1310, 1311, 1312], "loss": [14, 153, 471, 477, 511, 556, 740, 1056, 1062, 1096], "receiv": [14, 152, 153, 160, 163, 471, 477, 556, 738, 740, 747, 750, 1022, 1023, 1056, 1062, 1307], "db": [14, 146, 147, 148, 152, 153, 163, 164, 199, 203, 443, 444, 471, 477, 511, 525, 556, 731, 732, 733, 738, 740, 750, 751, 784, 788, 1027, 1028, 1056, 1062, 1096, 1110, 1231, 1288, 1313, 1314], "minimum": [14, 24, 25, 126, 133, 135, 136, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 197, 200, 201, 202, 203, 204, 222, 224, 229, 232, 233, 234, 235, 236, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 454, 459, 463, 467, 469, 476, 482, 489, 490, 494, 498, 508, 511, 515, 519, 520, 525, 527, 556, 573, 574, 710, 717, 719, 720, 725, 726, 727, 728, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 744, 745, 746, 782, 785, 786, 787, 788, 789, 808, 810, 815, 818, 819, 820, 821, 822, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 919, 922, 923, 924, 925, 945, 947, 955, 956, 959, 960, 961, 962, 986, 1021, 1025, 1039, 1044, 1048, 1052, 1054, 1061, 1067, 1074, 1075, 1079, 1083, 1093, 1096, 1100, 1104, 1105, 1110, 1112, 1193, 1213, 1215, 1225, 1226, 1238, 1298, 1309], "maximum": [14, 16, 24, 25, 88, 129, 130, 133, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 197, 199, 200, 201, 202, 222, 224, 229, 232, 233, 234, 235, 236, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 450, 454, 459, 467, 476, 489, 490, 492, 494, 495, 497, 500, 503, 504, 508, 515, 521, 525, 526, 527, 556, 560, 573, 574, 643, 713, 714, 717, 719, 720, 721, 722, 725, 726, 727, 728, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 745, 746, 782, 784, 785, 786, 787, 808, 810, 815, 818, 819, 820, 821, 822, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 919, 922, 923, 924, 925, 945, 947, 955, 956, 959, 960, 961, 962, 965, 986, 1021, 1022, 1023, 1025, 1030, 1035, 1039, 1044, 1052, 1061, 1074, 1075, 1077, 1079, 1080, 1082, 1085, 1088, 1089, 1093, 1100, 1106, 1110, 1111, 1112, 1162, 1193, 1210, 1226, 1231, 1241, 1242, 1243, 1297, 1298, 1314], "keep": [14, 24, 25, 34, 137, 144, 198, 394, 495, 550, 556, 573, 574, 587, 721, 728, 783, 982, 1080, 1255, 1256, 1272, 1298, 1317, 1319], "k": [15, 124, 226, 227, 228, 230, 231, 232, 252, 293, 294, 295, 297, 298, 299, 326, 327, 328, 334, 335, 336, 363, 364, 365, 371, 372, 373, 431, 435, 436, 438, 439, 454, 511, 521, 533, 557, 679, 812, 813, 814, 816, 817, 818, 838, 879, 880, 881, 883, 884, 885, 912, 913, 914, 920, 921, 922, 949, 950, 951, 957, 958, 959, 993, 997, 998, 1000, 1001, 1005, 1008, 1009, 1010, 1011, 1039, 1096, 1106, 1118, 1278, 1285, 1288, 1289, 1317], "band": [15, 21, 126, 128, 132, 398, 454, 459, 493, 499, 513, 521, 522, 523, 530, 531, 557, 565, 710, 712, 716, 986, 1039, 1044, 1078, 1084, 1098, 1106, 1107, 1108, 1115, 1116, 1304, 1312], "arm": [15, 32, 54, 382, 383, 384, 396, 397, 510, 557, 583, 609, 970, 971, 972, 984, 985, 1025, 1095, 1130, 1193, 1198, 1261, 1274, 1289, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1316, 1319], "zenith": [15, 557], "kazr": [15, 557], "ingest": [15, 557, 1303, 1304], "rmax": [16, 197, 476, 560, 782, 1061, 1238], "noxp": [17, 561], "iphex": [17, 561], "gain": [18, 19, 20, 30, 31, 32, 152, 163, 471, 511, 562, 563, 564, 580, 581, 583, 738, 750, 1056, 1096], "nodata": [18, 19, 20, 30, 31, 562, 563, 564, 580, 581, 1261], "nan": [18, 19, 20, 137, 177, 196, 197, 201, 523, 550, 551, 562, 563, 564, 567, 568, 690, 709, 721, 735, 762, 781, 782, 786, 1108, 1296, 1311, 1312], "undetect": [18, 19, 20, 30, 31, 562, 563, 564, 580, 581, 1261], "use_file_convers": [18, 19, 20, 562, 563, 564], "time_ref": [18, 30, 558, 562, 580], "convert": [18, 19, 20, 23, 30, 31, 53, 125, 152, 494, 537, 562, 563, 564, 572, 580, 581, 608, 680, 738, 1079, 1129, 1241, 1259, 1298, 1312], "what": [18, 19, 20, 30, 137, 558, 562, 563, 564, 580, 721, 753, 1025, 1268, 1277, 1305, 1307, 1310, 1317, 1319], "user": [18, 19, 20, 26, 44, 62, 91, 127, 128, 140, 370, 398, 481, 485, 562, 563, 564, 575, 598, 617, 646, 711, 712, 724, 956, 986, 1066, 1070, 1136, 1165, 1258, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1319], "physic": [18, 19, 20, 30, 31, 32, 494, 550, 551, 562, 563, 564, 567, 568, 580, 581, 583, 739, 1014, 1030, 1079, 1298, 1311, 1313], "otherwis": [18, 19, 20, 137, 154, 155, 407, 428, 435, 454, 459, 465, 467, 474, 476, 480, 481, 485, 489, 490, 492, 498, 500, 503, 504, 509, 511, 516, 550, 551, 562, 563, 564, 567, 568, 721, 741, 742, 997, 1008, 1039, 1044, 1050, 1052, 1059, 1061, 1065, 1066, 1070, 1074, 1075, 1077, 1083, 1085, 1088, 1089, 1094, 1096, 1101, 1217, 1248], "pass": [18, 19, 20, 120, 122, 123, 137, 138, 139, 221, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 288, 289, 296, 300, 301, 302, 321, 322, 329, 330, 331, 332, 333, 334, 337, 338, 339, 358, 359, 366, 367, 368, 369, 370, 371, 374, 375, 376, 380, 381, 390, 392, 508, 521, 562, 563, 564, 675, 677, 678, 721, 722, 723, 807, 808, 815, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 850, 853, 855, 857, 874, 875, 882, 886, 887, 888, 907, 908, 915, 916, 917, 918, 919, 920, 923, 924, 925, 944, 945, 952, 953, 954, 955, 956, 957, 960, 961, 962, 968, 969, 978, 980, 1021, 1025, 1093, 1106, 1268, 1269, 1306, 1309, 1312], "mid": [18, 30, 558, 562, 580], "expect": [18, 30, 236, 302, 339, 376, 523, 558, 562, 580, 822, 888, 925, 962, 1108, 1313, 1317], "starttim": [18, 30, 558, 562, 580], "middl": [18, 25, 30, 558, 562, 574, 580], "endtim": [18, 30, 558, 562, 580], "include_dataset": [19, 563], "exclude_dataset": [19, 563], "dataset": [19, 30, 31, 253, 333, 370, 390, 392, 466, 510, 563, 580, 581, 839, 919, 956, 978, 980, 1022, 1023, 1051, 1095, 1220, 1223, 1230, 1261, 1268, 1296, 1299, 1300, 1303, 1305], "given": [19, 36, 39, 40, 41, 43, 45, 47, 59, 65, 66, 67, 68, 71, 72, 73, 74, 75, 88, 94, 95, 96, 97, 100, 101, 102, 103, 104, 135, 136, 137, 153, 160, 161, 163, 171, 173, 174, 175, 176, 178, 180, 181, 185, 187, 188, 189, 190, 192, 193, 195, 197, 200, 201, 222, 227, 228, 248, 249, 250, 254, 255, 256, 257, 266, 268, 269, 270, 271, 289, 294, 295, 322, 327, 328, 329, 330, 359, 364, 365, 366, 367, 435, 454, 476, 481, 485, 509, 511, 518, 524, 563, 589, 593, 594, 595, 597, 600, 602, 614, 620, 621, 622, 623, 626, 627, 628, 629, 630, 643, 649, 650, 651, 652, 655, 656, 657, 658, 659, 684, 686, 687, 688, 689, 691, 693, 694, 698, 700, 701, 702, 703, 705, 706, 708, 719, 720, 721, 735, 740, 747, 748, 750, 756, 758, 759, 760, 761, 763, 765, 766, 770, 772, 773, 774, 775, 777, 778, 780, 782, 785, 786, 808, 813, 814, 834, 835, 836, 840, 841, 842, 843, 852, 854, 855, 856, 857, 875, 880, 881, 908, 913, 914, 915, 916, 945, 950, 951, 952, 953, 997, 1008, 1014, 1022, 1023, 1024, 1025, 1039, 1061, 1066, 1070, 1094, 1096, 1103, 1109, 1121, 1123, 1133, 1139, 1140, 1141, 1142, 1145, 1146, 1147, 1148, 1149, 1162, 1168, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1178, 1191, 1229, 1230, 1239, 1240, 1253, 1296, 1298, 1303, 1312], "dataset1": [19, 563], "dataset2": [19, 563], "vertic": [20, 59, 88, 130, 132, 137, 143, 222, 223, 224, 229, 233, 234, 235, 236, 244, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 337, 338, 339, 359, 360, 361, 369, 374, 375, 376, 398, 450, 456, 457, 458, 459, 462, 467, 474, 475, 476, 487, 488, 489, 492, 493, 495, 506, 507, 508, 509, 514, 516, 518, 527, 528, 564, 614, 643, 714, 716, 721, 727, 808, 809, 810, 815, 819, 820, 821, 822, 830, 833, 835, 837, 839, 841, 843, 851, 853, 855, 857, 875, 876, 877, 882, 886, 887, 888, 908, 909, 910, 918, 923, 924, 925, 945, 946, 947, 955, 960, 961, 962, 986, 1022, 1023, 1035, 1041, 1042, 1043, 1044, 1047, 1052, 1059, 1060, 1061, 1072, 1073, 1074, 1077, 1078, 1080, 1091, 1092, 1093, 1094, 1099, 1101, 1103, 1112, 1113, 1133, 1162, 1241, 1259, 1289, 1299, 1300, 1303, 1312, 1313], "profil": [20, 31, 55, 129, 130, 135, 136, 137, 382, 383, 450, 459, 467, 476, 489, 492, 508, 510, 522, 523, 524, 527, 528, 564, 581, 610, 713, 714, 719, 720, 721, 970, 971, 1035, 1044, 1052, 1061, 1074, 1077, 1093, 1095, 1107, 1108, 1109, 1112, 1113, 1217, 1253, 1264, 1266, 1295, 1301, 1303, 1311, 1312, 1315, 1317], "those": [20, 62, 69, 91, 98, 138, 139, 169, 394, 468, 536, 564, 617, 624, 646, 653, 682, 722, 723, 754, 982, 1024, 1025, 1053, 1136, 1143, 1165, 1172, 1244, 1260, 1319], "vol2bird": [20, 564], "pattern": [21, 135, 136, 527, 565, 719, 720, 1112, 1288], "25": [22, 154, 155, 566, 741, 742, 1022, 1023, 1268, 1272, 1288, 1289, 1292, 1296, 1305, 1310, 1311, 1312, 1313], "889375": [22, 566], "418": [22, 566], "4794775": [22, 566], "243": [22, 566], "png": [22, 207, 243, 259, 274, 307, 344, 566, 793, 829, 845, 860, 893, 930], "web": [22, 380, 390, 398, 566, 968, 978, 986, 1268, 1269], "mercat": [22, 264, 566, 850], "radx_dir": [23, 572], "first": [23, 27, 32, 59, 72, 88, 101, 137, 139, 141, 146, 151, 382, 383, 393, 396, 471, 494, 521, 522, 523, 530, 572, 577, 583, 614, 627, 643, 656, 721, 723, 725, 731, 737, 970, 971, 981, 984, 1014, 1025, 1056, 1079, 1106, 1107, 1108, 1115, 1133, 1146, 1162, 1175, 1220, 1222, 1249, 1250, 1261, 1264, 1268, 1269, 1282, 1291, 1296, 1298, 1307, 1309, 1310, 1311, 1312, 1314, 1317], "radxconvert": [23, 572], "radx": [23, 572], "instal": [23, 120, 122, 123, 140, 145, 398, 536, 572, 675, 677, 678, 724, 729, 986, 1311, 1318, 1319], "filenames_psr": [24, 25, 573, 574], "undo_txcorr": [24, 25, 573, 574], "cpi": [24, 25, 569, 573, 574], "mean": [24, 29, 117, 157, 447, 449, 459, 462, 466, 467, 476, 489, 496, 533, 573, 579, 672, 744, 1032, 1034, 1044, 1047, 1051, 1052, 1061, 1074, 1081, 1118, 1206, 1207, 1213, 1215, 1216, 1225, 1226, 1231, 1239, 1249, 1250, 1268, 1269, 1310, 1311, 1312, 1314, 1317], "5": [24, 25, 26, 45, 126, 128, 135, 136, 137, 140, 145, 147, 148, 149, 150, 154, 155, 156, 164, 201, 222, 229, 232, 233, 234, 235, 236, 252, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 397, 454, 494, 495, 498, 500, 506, 507, 514, 518, 525, 527, 529, 573, 574, 575, 600, 710, 712, 719, 720, 721, 724, 729, 732, 733, 734, 735, 736, 741, 742, 743, 751, 786, 808, 815, 818, 819, 820, 821, 822, 838, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962, 985, 1039, 1079, 1080, 1083, 1085, 1091, 1092, 1099, 1103, 1110, 1112, 1114, 1121, 1241, 1263, 1264, 1269, 1277, 1280, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1292, 1296, 1298, 1299, 1300, 1301, 1305, 1307, 1310, 1311, 1312, 1313, 1314, 1317], "correct": [24, 25, 68, 71, 97, 100, 169, 197, 198, 199, 200, 201, 202, 203, 204, 388, 452, 510, 511, 521, 573, 574, 623, 626, 652, 655, 754, 782, 783, 784, 785, 786, 787, 788, 789, 976, 1037, 1095, 1096, 1106, 1142, 1145, 1171, 1174, 1198, 1261, 1264, 1265, 1269, 1279, 1299, 1303, 1307, 1312, 1315, 1317], "transmit": [24, 25, 471, 573, 574, 1056, 1307], "remov": [24, 25, 45, 59, 70, 71, 88, 99, 100, 126, 127, 128, 137, 142, 143, 146, 154, 155, 156, 197, 198, 199, 200, 201, 202, 203, 204, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 404, 429, 435, 436, 466, 494, 508, 573, 574, 600, 614, 625, 626, 643, 654, 655, 710, 711, 712, 721, 726, 727, 731, 735, 741, 742, 743, 782, 783, 784, 785, 786, 787, 788, 789, 808, 815, 819, 820, 821, 822, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 991, 997, 998, 1004, 1008, 1009, 1051, 1079, 1093, 1121, 1133, 1144, 1145, 1162, 1173, 1174, 1226, 1263, 1273, 1279, 1288, 1298, 1307, 1310, 1317], "signal": [24, 25, 26, 132, 144, 147, 148, 149, 164, 201, 202, 444, 447, 449, 452, 458, 460, 463, 465, 466, 468, 469, 473, 474, 475, 477, 479, 480, 481, 482, 483, 484, 485, 486, 496, 511, 573, 574, 575, 716, 728, 732, 733, 734, 735, 751, 786, 787, 1028, 1032, 1034, 1037, 1043, 1045, 1048, 1050, 1051, 1053, 1054, 1058, 1059, 1060, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1081, 1096, 1225, 1226, 1231], "low_prf": [24, 25, 573, 574], "intermediate_prf": [24, 25, 573, 574], "high_prf": [24, 25, 573, 574], "within": [24, 44, 61, 62, 90, 91, 133, 137, 138, 139, 140, 141, 142, 143, 144, 151, 154, 155, 156, 158, 159, 169, 197, 236, 302, 339, 376, 445, 459, 467, 476, 489, 492, 495, 518, 519, 520, 525, 573, 598, 616, 617, 645, 646, 682, 717, 721, 722, 723, 724, 725, 726, 727, 728, 737, 741, 742, 743, 745, 746, 754, 782, 822, 888, 925, 962, 1021, 1024, 1025, 1029, 1044, 1052, 1061, 1074, 1077, 1080, 1103, 1104, 1105, 1110, 1135, 1136, 1164, 1165, 1205, 1218, 1219, 1227, 1228, 1230, 1239, 1240, 1260, 1268, 1269, 1279, 1280, 1303, 1307, 1309, 1313, 1317, 1319], "step": [24, 135, 136, 148, 236, 302, 339, 376, 398, 459, 467, 469, 476, 489, 490, 492, 525, 527, 573, 719, 720, 733, 822, 888, 925, 962, 986, 1044, 1052, 1054, 1061, 1074, 1075, 1077, 1110, 1112, 1226, 1233, 1245, 1268, 1288, 1289, 1298, 1319], "taken": [24, 117, 125, 150, 151, 222, 289, 322, 359, 573, 672, 680, 736, 737, 808, 875, 908, 945, 1198, 1218, 1219, 1225, 1239, 1240, 1281], "fold": [25, 137, 138, 496, 574, 721, 722, 1081, 1268, 1312], "positive_awai": [25, 574], "complex": [25, 33, 463, 465, 474, 480, 481, 482, 483, 484, 485, 486, 532, 571, 574, 585, 1048, 1050, 1059, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1117], "spectra": [25, 28, 29, 32, 88, 446, 448, 449, 455, 457, 460, 463, 465, 468, 472, 474, 479, 480, 481, 482, 483, 484, 485, 486, 496, 571, 574, 578, 579, 583, 643, 1031, 1033, 1034, 1040, 1042, 1045, 1048, 1050, 1053, 1057, 1059, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1081, 1162, 1196, 1202, 1225, 1237, 1247, 1256], "so": [25, 138, 222, 233, 289, 300, 322, 337, 359, 374, 394, 443, 574, 722, 730, 808, 819, 875, 886, 908, 923, 945, 960, 982, 1025, 1027, 1237, 1261, 1268, 1269, 1298, 1311, 1312, 1313, 1317, 1319], "doppler": [25, 88, 117, 137, 138, 139, 197, 446, 447, 448, 449, 452, 463, 466, 468, 482, 496, 508, 533, 574, 643, 672, 721, 722, 723, 782, 1031, 1032, 1033, 1034, 1037, 1048, 1051, 1053, 1067, 1081, 1093, 1118, 1162, 1225, 1226, 1261, 1262, 1265, 1266, 1281, 1291, 1303, 1304, 1314, 1315, 1317], "revers": [25, 222, 233, 289, 300, 322, 337, 359, 374, 394, 521, 574, 808, 819, 875, 886, 908, 923, 945, 960, 982, 1106], "veloc": [25, 26, 39, 72, 88, 101, 137, 138, 139, 197, 445, 446, 447, 496, 506, 507, 508, 509, 516, 533, 534, 574, 575, 593, 627, 643, 656, 721, 722, 723, 782, 1029, 1031, 1032, 1081, 1091, 1092, 1093, 1094, 1101, 1118, 1119, 1146, 1162, 1175, 1210, 1253, 1261, 1262, 1265, 1266, 1268, 1277, 1281, 1289, 1291, 1303, 1304, 1310, 1311, 1314, 1315, 1317], "awai": [25, 574, 1312], "routin": [26, 30, 31, 32, 396, 536, 575, 580, 581, 583, 753, 984, 1024, 1261, 1303, 1311, 1313], "rainbow5": [26, 575], "version": [26, 45, 136, 168, 518, 519, 520, 533, 535, 575, 600, 720, 1016, 1103, 1104, 1105, 1118, 1121, 1205, 1261, 1303, 1311, 1314, 1316, 1317, 1319], "22": [26, 143, 152, 160, 163, 575, 727, 738, 747, 750, 1268, 1277, 1296, 1298, 1301, 1315], "3": [26, 59, 88, 117, 118, 129, 130, 137, 138, 146, 153, 163, 197, 199, 200, 203, 234, 388, 392, 398, 451, 491, 494, 508, 525, 527, 575, 614, 643, 672, 673, 713, 714, 721, 722, 731, 740, 750, 782, 784, 785, 788, 820, 976, 980, 986, 1021, 1022, 1023, 1025, 1036, 1076, 1079, 1093, 1110, 1112, 1133, 1162, 1193, 1226, 1233, 1245, 1263, 1264, 1266, 1269, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1291, 1293, 1294, 1296, 1297, 1298, 1299, 1300, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319], "34": [26, 530, 575, 1115, 1298, 1313], "16": [26, 154, 158, 499, 519, 533, 575, 741, 745, 1084, 1104, 1118, 1263, 1264, 1272, 1284, 1290, 1297, 1307, 1311, 1313, 1314, 1317], "35": [26, 139, 150, 151, 454, 575, 723, 736, 737, 1039, 1272, 1275, 1277, 1286, 1288, 1289, 1301, 1310, 1315], "sinc": [26, 509, 521, 575, 1030, 1094, 1106, 1298, 1306, 1309, 1312, 1313, 1314], "evolv": [26, 575], "constantli": [26, 575], "guaranti": [26, 575], "work": [26, 121, 124, 251, 252, 305, 333, 342, 370, 390, 392, 496, 530, 575, 676, 679, 837, 838, 891, 919, 928, 956, 978, 980, 1081, 1115, 1269, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1319], "necessari": [26, 575], "adapt": [26, 117, 152, 153, 160, 163, 575, 672, 738, 740, 747, 750, 1261, 1319], "code": [26, 44, 137, 516, 533, 575, 598, 721, 1101, 1118, 1261, 1263, 1264, 1266, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1313, 1316, 1319], "accord": [26, 132, 134, 394, 443, 454, 461, 468, 469, 499, 500, 501, 503, 504, 575, 716, 718, 982, 1025, 1027, 1039, 1046, 1053, 1054, 1084, 1085, 1086, 1088, 1089, 1233, 1245], "its": [26, 164, 249, 521, 575, 739, 751, 835, 1106, 1248, 1303, 1312, 1316, 1317, 1319], "own": [26, 536, 575, 1277, 1303, 1313, 1316], "rais": [26, 45, 46, 52, 60, 61, 63, 72, 89, 90, 92, 101, 167, 381, 393, 407, 435, 436, 575, 600, 601, 607, 615, 616, 618, 627, 644, 645, 647, 656, 969, 981, 997, 998, 1008, 1009, 1121, 1122, 1128, 1134, 1135, 1137, 1146, 1163, 1164, 1166, 1175], "an": [26, 30, 31, 39, 43, 44, 45, 53, 59, 61, 62, 65, 66, 72, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 95, 101, 110, 111, 112, 113, 114, 115, 116, 130, 137, 138, 139, 140, 150, 151, 165, 168, 177, 197, 199, 200, 201, 202, 203, 204, 205, 227, 294, 327, 364, 370, 394, 397, 398, 440, 460, 467, 468, 469, 489, 498, 510, 537, 550, 551, 567, 568, 575, 580, 581, 593, 597, 598, 600, 608, 614, 616, 617, 620, 621, 627, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 649, 650, 656, 665, 666, 667, 668, 669, 670, 671, 690, 714, 721, 722, 723, 724, 735, 736, 737, 762, 782, 784, 785, 786, 787, 788, 789, 791, 813, 880, 913, 950, 956, 982, 985, 986, 1002, 1012, 1014, 1021, 1022, 1024, 1025, 1045, 1052, 1053, 1054, 1074, 1083, 1095, 1121, 1129, 1133, 1135, 1136, 1139, 1140, 1146, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1168, 1169, 1175, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1210, 1219, 1223, 1224, 1239, 1240, 1244, 1245, 1257, 1259, 1261, 1266, 1269, 1272, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1296, 1298, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1318], "issu": [26, 44, 168, 305, 342, 394, 397, 575, 598, 891, 928, 982, 985, 1261, 1266, 1267, 1270, 1303, 1315, 1316, 1317, 1319], "upstream": [26, 575, 1317], "reflect": [26, 61, 90, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 140, 141, 142, 143, 144, 147, 148, 150, 151, 154, 155, 156, 158, 159, 169, 197, 200, 201, 224, 291, 324, 361, 444, 446, 448, 450, 451, 455, 457, 458, 464, 470, 471, 472, 473, 474, 477, 478, 480, 481, 485, 491, 494, 495, 497, 500, 502, 503, 504, 505, 511, 518, 519, 521, 525, 527, 529, 530, 575, 616, 645, 682, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 724, 725, 726, 727, 728, 732, 733, 735, 736, 737, 741, 742, 743, 745, 746, 754, 782, 785, 786, 810, 877, 910, 947, 965, 1014, 1025, 1028, 1030, 1031, 1033, 1035, 1036, 1040, 1042, 1043, 1049, 1055, 1056, 1057, 1058, 1059, 1062, 1063, 1065, 1066, 1070, 1076, 1079, 1080, 1082, 1085, 1087, 1088, 1089, 1090, 1096, 1103, 1104, 1106, 1110, 1112, 1114, 1115, 1135, 1164, 1201, 1203, 1204, 1236, 1262, 1264, 1265, 1266, 1268, 1269, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1281, 1284, 1287, 1290, 1291, 1293, 1294, 1295, 1296, 1298, 1301, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315], "dbuz": [26, 575], "dbzv": [26, 575], "dbuzv": [26, 575], "vu": [26, 575], "vv": [26, 575], "vvu": [26, 575], "spectrum": [26, 29, 448, 449, 496, 575, 579, 1033, 1034, 1081, 1225, 1226, 1261, 1314], "width": [26, 129, 152, 153, 163, 164, 250, 252, 266, 333, 370, 448, 449, 450, 470, 575, 713, 738, 739, 740, 750, 751, 836, 838, 852, 919, 956, 1025, 1033, 1034, 1035, 1055, 1314], "w": [26, 76, 105, 139, 152, 160, 163, 454, 497, 511, 518, 525, 527, 575, 631, 660, 723, 738, 747, 750, 1039, 1082, 1096, 1103, 1110, 1112, 1150, 1179, 1299, 1311, 1312, 1313], "wu": [26, 575, 1021, 1309], "wv": [26, 575], "wvu": [26, 575], "differenti": [26, 33, 126, 127, 128, 133, 141, 143, 144, 147, 148, 150, 151, 154, 155, 156, 158, 159, 197, 200, 455, 456, 457, 458, 462, 466, 480, 481, 495, 497, 501, 504, 518, 519, 520, 521, 522, 523, 525, 528, 532, 575, 585, 710, 711, 712, 717, 725, 727, 728, 732, 733, 736, 737, 741, 742, 743, 745, 746, 782, 785, 1040, 1041, 1042, 1043, 1047, 1051, 1065, 1066, 1080, 1082, 1086, 1089, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1113, 1117, 1281, 1303, 1313], "zdr": [26, 127, 128, 132, 143, 144, 147, 148, 154, 155, 156, 164, 200, 441, 453, 454, 518, 575, 711, 712, 716, 727, 728, 732, 733, 741, 742, 743, 751, 785, 1038, 1039, 1103, 1311, 1313], "zdru": [26, 575], "co": [26, 117, 121, 124, 142, 143, 144, 154, 155, 156, 197, 494, 509, 575, 672, 676, 679, 726, 727, 728, 741, 742, 743, 782, 1079, 1094, 1212, 1298], "correl": [26, 142, 143, 144, 154, 155, 156, 197, 200, 201, 495, 497, 516, 518, 525, 527, 575, 726, 727, 728, 735, 741, 742, 743, 782, 785, 786, 1080, 1082, 1101, 1103, 1110, 1112, 1214, 1216, 1236, 1280, 1281, 1297, 1298], "coeffici": [26, 126, 127, 128, 147, 148, 149, 150, 152, 163, 197, 454, 495, 497, 498, 518, 525, 575, 710, 711, 712, 732, 733, 734, 736, 738, 750, 782, 1039, 1080, 1082, 1083, 1103, 1110, 1214, 1216, 1217, 1236, 1280, 1281, 1297], "rhohv": [26, 132, 142, 143, 144, 154, 155, 156, 200, 201, 441, 450, 453, 454, 461, 465, 474, 475, 486, 518, 525, 527, 575, 716, 726, 727, 728, 735, 741, 742, 743, 785, 786, 1035, 1038, 1039, 1046, 1050, 1059, 1060, 1071, 1103, 1110, 1112, 1280, 1313, 1314], "rhohvu": [26, 575], "phase": [26, 33, 126, 127, 128, 133, 139, 141, 143, 144, 150, 151, 154, 155, 156, 158, 159, 200, 455, 456, 462, 466, 480, 483, 489, 495, 497, 501, 504, 516, 518, 519, 520, 521, 522, 523, 528, 532, 575, 585, 710, 711, 712, 717, 723, 725, 727, 728, 736, 737, 741, 742, 743, 745, 746, 785, 1040, 1041, 1047, 1051, 1065, 1068, 1074, 1080, 1082, 1086, 1089, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1113, 1117, 1281, 1303, 1307, 1313], "phidp": [26, 127, 128, 133, 141, 143, 144, 150, 151, 154, 155, 156, 158, 159, 200, 519, 520, 521, 575, 711, 712, 717, 725, 727, 728, 736, 737, 741, 742, 743, 745, 746, 785, 1104, 1105, 1106, 1303, 1313], "uphidp": [26, 575], "uphidpu": [26, 575], "kdp": [26, 144, 150, 151, 154, 155, 156, 441, 454, 501, 504, 518, 519, 520, 521, 522, 523, 575, 728, 736, 737, 741, 742, 743, 1039, 1086, 1089, 1103, 1104, 1105, 1106, 1107, 1108, 1299, 1303], "ukdp": [26, 575], "ukdpu": [26, 575], "qualiti": [26, 132, 152, 153, 160, 163, 201, 522, 523, 575, 716, 735, 738, 740, 747, 750, 786, 1107, 1108, 1268], "sqi": [26, 575], "sqiu": [26, 575], "sqiv": [26, 575], "sqivu": [26, 575], "temperatur": [26, 127, 128, 135, 136, 142, 143, 144, 146, 154, 155, 156, 203, 495, 514, 518, 525, 527, 575, 711, 712, 719, 720, 726, 727, 728, 731, 741, 742, 743, 788, 1080, 1099, 1103, 1110, 1112, 1299, 1313], "temp": [26, 575, 1261, 1313], "bin": [26, 59, 88, 117, 118, 119, 128, 141, 142, 143, 144, 147, 158, 159, 393, 459, 467, 476, 489, 492, 496, 515, 519, 520, 529, 575, 614, 643, 672, 673, 674, 712, 725, 726, 727, 728, 732, 745, 746, 981, 1044, 1052, 1061, 1074, 1077, 1081, 1100, 1104, 1105, 1114, 1133, 1162, 1225, 1231, 1242, 1272, 1307, 1314], "respect": [26, 59, 88, 161, 162, 164, 443, 494, 495, 497, 518, 525, 526, 527, 529, 530, 575, 614, 643, 739, 748, 749, 751, 1027, 1079, 1080, 1082, 1103, 1110, 1111, 1112, 1114, 1115, 1133, 1162], "iso0": [26, 127, 135, 136, 142, 143, 146, 154, 155, 156, 199, 454, 495, 497, 514, 518, 525, 526, 527, 531, 575, 711, 719, 720, 726, 727, 731, 741, 742, 743, 784, 1039, 1080, 1082, 1099, 1103, 1110, 1111, 1112, 1116], "visibl": [26, 134, 204, 511, 575, 718, 789, 1096, 1238, 1303], "digit": [26, 236, 302, 339, 376, 511, 550, 551, 567, 568, 575, 822, 888, 925, 962, 1096, 1261, 1311], "elev": [26, 31, 59, 66, 71, 82, 88, 95, 100, 111, 117, 118, 119, 135, 136, 143, 144, 147, 148, 149, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 197, 205, 222, 224, 229, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 272, 289, 291, 296, 300, 301, 302, 305, 322, 324, 332, 333, 337, 338, 339, 342, 359, 361, 369, 370, 374, 375, 376, 394, 443, 467, 489, 490, 509, 511, 515, 523, 525, 575, 581, 614, 621, 626, 637, 643, 650, 655, 666, 672, 673, 674, 719, 720, 727, 728, 730, 732, 733, 734, 738, 739, 740, 741, 742, 743, 747, 748, 749, 750, 751, 782, 791, 808, 810, 815, 819, 820, 821, 822, 835, 841, 843, 853, 855, 857, 858, 875, 877, 882, 886, 887, 888, 891, 908, 910, 918, 919, 923, 924, 925, 928, 945, 947, 955, 956, 960, 961, 962, 982, 1022, 1027, 1052, 1074, 1075, 1094, 1096, 1100, 1108, 1110, 1133, 1140, 1145, 1156, 1162, 1169, 1174, 1185, 1219, 1234, 1238, 1241, 1246, 1261, 1272, 1297, 1305, 1311, 1312, 1313, 1314], "model": [26, 30, 31, 59, 88, 117, 118, 135, 136, 138, 236, 302, 339, 376, 391, 397, 511, 525, 527, 575, 580, 581, 614, 643, 672, 673, 719, 720, 722, 822, 888, 925, 962, 979, 985, 1096, 1110, 1112, 1133, 1162, 1217, 1299, 1313], "dem": [26, 236, 302, 339, 376, 511, 575, 822, 888, 925, 962, 1096, 1303], "vi": [26, 454, 518, 575, 1039, 1103, 1299, 1311, 1313], "introduc": [26, 395, 523, 525, 575, 983, 1108, 1110], "swissbirdradar": [29, 579, 1261], "degre": [29, 47, 55, 69, 70, 98, 99, 117, 118, 119, 120, 121, 122, 123, 124, 125, 146, 150, 151, 161, 162, 203, 205, 222, 227, 228, 236, 248, 250, 254, 256, 264, 266, 268, 270, 272, 289, 294, 295, 302, 305, 322, 327, 328, 331, 333, 339, 342, 359, 364, 365, 368, 370, 376, 459, 470, 489, 525, 533, 579, 602, 610, 624, 625, 653, 654, 672, 673, 674, 675, 676, 677, 678, 679, 680, 730, 731, 736, 737, 748, 749, 788, 791, 808, 813, 814, 822, 834, 836, 840, 842, 850, 852, 854, 856, 858, 875, 880, 881, 888, 891, 908, 913, 914, 917, 919, 925, 928, 945, 950, 951, 954, 956, 962, 1044, 1055, 1074, 1110, 1118, 1123, 1143, 1144, 1172, 1173, 1207, 1209, 1218, 1219, 1228, 1229, 1230, 1241, 1250, 1254, 1293, 1296, 1314, 1317], "abov": [29, 55, 56, 59, 61, 88, 90, 126, 127, 128, 129, 130, 135, 136, 137, 140, 142, 143, 145, 146, 150, 151, 154, 155, 156, 158, 171, 185, 197, 199, 200, 201, 203, 227, 228, 294, 295, 327, 328, 364, 365, 443, 444, 454, 494, 498, 519, 525, 527, 533, 579, 610, 611, 614, 616, 643, 645, 684, 698, 710, 711, 712, 713, 714, 719, 720, 721, 724, 726, 727, 729, 731, 735, 736, 737, 741, 742, 743, 745, 756, 770, 782, 784, 785, 786, 788, 813, 814, 880, 881, 913, 914, 950, 951, 965, 1025, 1027, 1028, 1039, 1079, 1083, 1104, 1110, 1112, 1118, 1133, 1135, 1162, 1164, 1225, 1226, 1229, 1230, 1266, 1272, 1287, 1289, 1295, 1300, 1301, 1303, 1305, 1307, 1312, 1315, 1317, 1319], "sea": [29, 55, 56, 59, 88, 533, 579, 610, 611, 614, 643, 1118, 1133, 1162, 1317], "level": [29, 30, 31, 47, 53, 55, 56, 59, 76, 88, 105, 127, 128, 243, 244, 245, 246, 251, 252, 253, 255, 257, 259, 260, 261, 262, 267, 269, 271, 390, 391, 392, 398, 399, 463, 468, 482, 497, 516, 525, 526, 527, 530, 533, 579, 580, 581, 602, 608, 610, 611, 614, 631, 643, 660, 711, 712, 829, 830, 831, 832, 837, 838, 839, 841, 843, 845, 846, 847, 848, 853, 855, 857, 978, 979, 980, 986, 987, 1048, 1053, 1067, 1082, 1101, 1110, 1111, 1112, 1115, 1118, 1123, 1129, 1133, 1150, 1162, 1179, 1225, 1226, 1288, 1289, 1292, 1297, 1303, 1309, 1311, 1313, 1314, 1317], "meter": [29, 55, 56, 57, 58, 70, 71, 72, 99, 100, 101, 117, 118, 119, 120, 121, 122, 123, 124, 125, 146, 205, 236, 272, 302, 305, 330, 333, 339, 342, 367, 370, 376, 444, 494, 516, 521, 524, 530, 533, 579, 610, 611, 612, 613, 625, 626, 627, 654, 655, 656, 672, 673, 674, 675, 676, 677, 678, 679, 680, 731, 791, 822, 858, 888, 891, 916, 919, 925, 928, 953, 956, 962, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1024, 1025, 1028, 1079, 1101, 1106, 1109, 1115, 1118, 1144, 1145, 1146, 1173, 1174, 1175, 1193, 1228, 1254, 1272, 1300, 1309, 1312, 1314, 1317], "compress": [30, 31, 380, 388, 389, 580, 581, 968, 976, 977], "gzip": [30, 31, 380, 388, 389, 580, 581, 968, 976, 977], "compression_opt": [30, 31, 580, 581], "6": [30, 31, 132, 135, 136, 157, 158, 159, 200, 495, 500, 508, 511, 514, 518, 519, 520, 527, 580, 581, 716, 719, 720, 744, 745, 746, 785, 1080, 1085, 1093, 1096, 1099, 1103, 1104, 1105, 1112, 1226, 1233, 1245, 1269, 1272, 1277, 1278, 1282, 1285, 1296, 1297, 1299, 1300, 1303, 1305, 1307, 1310, 1311, 1312, 1313, 1314, 1316, 1319], "undefined_valu": [30, 31, 580, 581], "odim_convent": [30, 31, 580, 581], "v2_2": [30, 31, 580, 581], "write": [30, 31, 32, 396, 397, 398, 399, 400, 580, 581, 582, 583, 984, 985, 986, 987, 988, 1120, 1131, 1261, 1266, 1267, 1306], "eumetnet": [30, 31, 580, 581], "opera": [30, 31, 580, 581, 1261, 1303], "compliant": [30, 31, 396, 580, 581, 984], "produc": [30, 31, 32, 140, 387, 396, 398, 401, 468, 469, 528, 534, 580, 581, 583, 724, 975, 984, 986, 990, 1053, 1054, 1113, 1119, 1303, 1317], "follow": [30, 31, 32, 139, 197, 200, 201, 396, 397, 399, 400, 439, 496, 511, 518, 521, 525, 527, 580, 581, 583, 723, 735, 782, 785, 786, 984, 985, 987, 988, 1001, 1011, 1024, 1025, 1081, 1096, 1103, 1106, 1110, 1112, 1268, 1296, 1303, 1311, 1312, 1313, 1316, 1317], "inform": [30, 31, 39, 45, 59, 76, 88, 105, 126, 137, 147, 148, 149, 150, 151, 182, 194, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 384, 386, 394, 397, 521, 530, 535, 539, 550, 551, 567, 568, 580, 581, 593, 600, 614, 631, 643, 660, 695, 707, 710, 721, 732, 733, 734, 736, 737, 767, 779, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 972, 974, 982, 985, 1106, 1115, 1121, 1133, 1150, 1162, 1179, 1269, 1289, 1303, 1317], "http": [30, 31, 125, 390, 391, 392, 494, 516, 580, 581, 680, 978, 979, 980, 1030, 1079, 1101, 1236, 1261, 1269, 1280, 1289, 1298, 1303, 1311, 1316, 1317, 1319], "www": [30, 31, 125, 390, 391, 392, 516, 580, 581, 680, 978, 979, 980, 1101, 1317], "eu": [30, 31, 580, 581], "wp": [30, 31, 580, 581], "content": [30, 31, 580, 581, 1311], "upload": [30, 31, 580, 581], "2021": [30, 31, 580, 581, 1298, 1303, 1312], "07": [30, 31, 580, 581, 1269, 1280, 1298, 1314], "odim_h5_v2": [30, 31, 580, 581], "pdf": [30, 31, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 580, 581, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962], "save": [30, 31, 54, 207, 222, 224, 229, 233, 234, 235, 236, 243, 259, 274, 289, 291, 296, 300, 301, 302, 307, 322, 324, 332, 333, 337, 338, 339, 344, 359, 361, 369, 370, 374, 375, 376, 397, 399, 580, 581, 609, 793, 808, 810, 815, 819, 820, 821, 822, 829, 845, 860, 875, 877, 882, 886, 887, 888, 893, 908, 910, 918, 919, 923, 924, 925, 930, 945, 947, 955, 956, 960, 961, 962, 985, 987, 1130, 1303, 1304], "equal": [30, 31, 62, 91, 120, 122, 123, 138, 174, 175, 180, 188, 189, 192, 370, 388, 399, 530, 533, 580, 581, 617, 646, 675, 677, 678, 687, 688, 693, 701, 702, 705, 722, 759, 760, 765, 773, 774, 777, 956, 976, 987, 1115, 1118, 1136, 1165, 1246, 1280, 1298, 1299, 1310, 1312, 1313], "_fillvalu": [30, 31, 32, 396, 397, 580, 581, 583, 984, 985, 1306, 1314], "fill": [30, 31, 42, 126, 127, 128, 530, 580, 581, 596, 710, 711, 712, 1115, 1305, 1306], "linear": [30, 31, 127, 135, 136, 150, 151, 390, 494, 523, 580, 581, 711, 719, 720, 736, 737, 978, 1079, 1108, 1213, 1225, 1226, 1237, 1253, 1298, 1303], "keyword": [30, 31, 32, 221, 288, 321, 333, 358, 370, 390, 392, 466, 511, 580, 581, 583, 807, 874, 907, 919, 944, 956, 978, 980, 1051, 1096, 1306, 1309], "scale_factor": [30, 31, 32, 399, 580, 581, 583, 987], "add_offset": [30, 31, 32, 399, 580, 581, 583, 987], "calcul": [30, 31, 32, 33, 45, 47, 59, 70, 71, 88, 99, 100, 117, 118, 122, 126, 127, 128, 142, 143, 146, 150, 151, 154, 155, 156, 161, 169, 197, 199, 200, 201, 202, 203, 204, 205, 236, 272, 302, 305, 339, 342, 376, 444, 445, 451, 470, 471, 477, 491, 494, 511, 516, 528, 532, 533, 534, 580, 581, 583, 585, 600, 602, 614, 625, 626, 643, 654, 655, 672, 673, 677, 682, 710, 711, 712, 726, 727, 731, 735, 736, 737, 741, 742, 743, 748, 754, 782, 784, 785, 786, 787, 788, 789, 791, 822, 858, 888, 891, 925, 928, 962, 1024, 1025, 1028, 1029, 1036, 1055, 1056, 1062, 1076, 1079, 1096, 1101, 1113, 1117, 1118, 1119, 1121, 1123, 1133, 1144, 1145, 1162, 1173, 1174, 1210, 1212, 1225, 1228, 1229, 1230, 1235, 1254, 1263, 1266, 1272, 1288, 1289, 1295, 1298, 1301, 1303, 1307, 1310, 1315, 1317], "fly": [30, 31, 32, 580, 581, 583], "_write_as_dtyp": [30, 31, 32, 399, 580, 581, 583, 987], "datatyp": [30, 31, 580, 581, 1261], "It": [30, 31, 146, 152, 414, 428, 509, 523, 525, 533, 580, 581, 731, 738, 1025, 1094, 1108, 1110, 1118, 1210, 1225, 1272, 1311, 1313, 1317, 1319], "uint8": [30, 31, 399, 580, 581, 987], "uint16": [30, 31, 399, 580, 581, 987], "typic": [30, 31, 121, 124, 138, 169, 173, 175, 182, 189, 194, 398, 580, 581, 676, 679, 682, 686, 688, 695, 702, 707, 722, 754, 758, 760, 767, 774, 779, 986, 1021, 1024, 1319], "lzf": [30, 31, 580, 581], "recomend": [30, 31, 580, 581], "replac": [30, 31, 46, 60, 61, 62, 89, 90, 91, 138, 139, 173, 175, 182, 189, 194, 580, 581, 601, 615, 616, 617, 644, 645, 646, 686, 688, 695, 702, 707, 722, 723, 758, 760, 767, 774, 779, 1122, 1134, 1135, 1136, 1163, 1164, 1165, 1261], "exampl": [30, 31, 44, 61, 90, 169, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 401, 580, 581, 598, 616, 645, 682, 754, 808, 815, 818, 819, 820, 821, 822, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962, 990, 1014, 1018, 1019, 1020, 1024, 1025, 1131, 1135, 1164, 1263, 1264, 1265, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305, 1307, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1319], "NOT": [30, 31, 169, 580, 581, 682, 754], "written": [30, 31, 397, 399, 400, 580, 581, 985, 987, 988, 1261, 1303], "odim": [30, 31, 580, 581, 1261], "convent": [30, 31, 59, 88, 137, 447, 466, 508, 533, 534, 580, 581, 614, 643, 721, 1032, 1051, 1093, 1118, 1119, 1133, 1162, 1261, 1268, 1303, 1312, 1314], "v2_3": [30, 31, 580, 581], "support": [31, 251, 252, 333, 370, 381, 389, 390, 391, 392, 393, 401, 521, 536, 581, 837, 838, 919, 956, 969, 977, 978, 979, 980, 981, 989, 990, 1014, 1106, 1261, 1288, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1316], "featur": [31, 454, 581, 1039, 1280, 1298, 1303, 1313], "ppi": [31, 59, 88, 138, 139, 140, 145, 221, 225, 229, 288, 292, 296, 321, 325, 332, 333, 358, 362, 369, 370, 467, 489, 511, 523, 581, 614, 643, 722, 723, 724, 729, 807, 811, 815, 874, 878, 882, 907, 911, 918, 919, 944, 948, 955, 956, 1022, 1023, 1052, 1074, 1096, 1108, 1133, 1162, 1194, 1195, 1198, 1201, 1203, 1218, 1219, 1266, 1276, 1279, 1280, 1292, 1294, 1303, 1312, 1313, 1314, 1315], "pvol": [31, 581], "differ": [31, 120, 122, 123, 135, 136, 137, 147, 148, 149, 154, 155, 156, 494, 496, 500, 508, 521, 527, 581, 675, 677, 678, 719, 720, 721, 730, 732, 733, 734, 741, 742, 743, 965, 1014, 1022, 1023, 1079, 1081, 1085, 1093, 1106, 1112, 1244, 1246, 1261, 1268, 1272, 1298, 1309, 1311, 1312, 1313, 1316, 1317], "group": [31, 581, 1317], "sector": [31, 59, 88, 581, 614, 643, 1133, 1162, 1314], "azim": [31, 581], "rhi": [31, 59, 88, 221, 222, 233, 288, 289, 300, 321, 322, 337, 358, 359, 374, 467, 489, 497, 523, 525, 581, 614, 643, 807, 808, 819, 874, 875, 886, 907, 908, 923, 944, 945, 960, 1023, 1052, 1074, 1082, 1108, 1110, 1133, 1162, 1195, 1204, 1218, 1219, 1234, 1246, 1266, 1276, 1294, 1303, 1312, 1314, 1315], "Not": [31, 381, 389, 581, 969, 977], "yet": [31, 394, 581, 982, 1268, 1303], "fix": [31, 490, 536, 581, 1075, 1261, 1266, 1267, 1270, 1291, 1305, 1313, 1315, 1316, 1317, 1319], "stare": [31, 581], "mode": [31, 59, 76, 88, 105, 380, 490, 525, 581, 614, 631, 643, 660, 968, 1075, 1110, 1133, 1150, 1162, 1179, 1314, 1316, 1317], "netcdf4": [32, 54, 391, 396, 397, 583, 609, 979, 984, 985, 1130, 1286, 1303, 1305, 1316, 1319], "time_refer": [32, 396, 583, 984, 1305], "arm_time_vari": [32, 54, 396, 397, 583, 609, 984, 985, 1130], "standard": [32, 54, 59, 76, 88, 105, 117, 118, 137, 147, 148, 164, 384, 396, 397, 398, 468, 495, 508, 522, 536, 583, 609, 614, 631, 643, 660, 672, 673, 721, 732, 733, 739, 751, 972, 984, 985, 986, 1030, 1053, 1080, 1093, 1107, 1130, 1133, 1150, 1162, 1179, 1208, 1209, 1235, 1240, 1305, 1306, 1307, 1311, 1313, 1317], "attempt": [32, 138, 139, 396, 397, 583, 722, 723, 984, 985], "also": [32, 44, 59, 88, 173, 223, 247, 265, 290, 323, 333, 360, 391, 392, 396, 398, 400, 438, 494, 583, 598, 614, 643, 686, 758, 809, 833, 851, 876, 909, 919, 946, 979, 980, 984, 986, 988, 1000, 1010, 1014, 1022, 1079, 1133, 1162, 1268, 1272, 1298, 1303, 1305, 1309, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1319], "made": [32, 61, 90, 396, 445, 583, 616, 645, 984, 1029, 1135, 1164, 1259, 1317], "meet": [32, 173, 175, 182, 189, 194, 396, 583, 686, 688, 695, 702, 707, 758, 760, 767, 774, 779, 984], "mani": [32, 396, 454, 583, 984, 1039, 1303, 1309, 1312, 1317, 1319], "outlin": [32, 396, 521, 583, 984, 1106, 1225, 1226, 1317], "To": [32, 45, 61, 90, 197, 199, 200, 201, 202, 203, 204, 396, 397, 399, 583, 600, 616, 645, 735, 782, 784, 785, 786, 787, 788, 789, 984, 985, 987, 1121, 1135, 1164, 1259, 1303, 1306, 1309, 1312, 1316, 1317, 1319], "control": [32, 44, 137, 152, 153, 160, 163, 394, 396, 397, 518, 521, 525, 583, 598, 721, 738, 740, 747, 750, 982, 984, 985, 1025, 1103, 1106, 1110, 1309], "how": [32, 61, 90, 394, 396, 397, 454, 497, 583, 616, 645, 982, 984, 985, 1039, 1082, 1135, 1164, 1268, 1269, 1277, 1278, 1279, 1303, 1306, 1309, 1310, 1311, 1319], "_zlib": [32, 396, 397, 583, 984, 985], "_deflatelevel": [32, 396, 397, 583, 984, 985], "_shuffl": [32, 396, 397, 583, 984, 985], "_fletcher32": [32, 396, 397, 583, 984, 985], "_contingu": [32, 396, 397, 583, 984, 985], "_chunksiz": [32, 396, 397, 583, 984, 985], "_endian": [32, 396, 397, 583, 984, 985], "_least_significant_digit": [32, 396, 397, 583, 984, 985], "see": [32, 61, 90, 118, 137, 169, 221, 235, 248, 252, 254, 256, 264, 268, 270, 288, 301, 321, 333, 338, 358, 370, 375, 388, 396, 397, 494, 497, 516, 530, 583, 616, 645, 673, 682, 721, 754, 807, 821, 834, 838, 840, 842, 850, 854, 856, 874, 887, 907, 919, 924, 944, 956, 961, 976, 984, 985, 1025, 1079, 1082, 1101, 1115, 1135, 1164, 1268, 1269, 1277, 1298, 1305, 1307, 1309, 1310, 1311, 1312, 1317], "document": [32, 137, 248, 252, 254, 256, 264, 268, 270, 333, 370, 391, 396, 397, 583, 721, 834, 838, 840, 842, 850, 854, 856, 919, 956, 979, 984, 985, 1253, 1260, 1303, 1309, 1317], "detail": [32, 118, 137, 169, 252, 264, 333, 370, 396, 397, 494, 583, 673, 682, 721, 754, 838, 850, 919, 956, 984, 985, 1021, 1025, 1079, 1298, 1303, 1314, 1317], "one": [32, 40, 45, 53, 54, 59, 61, 88, 90, 135, 136, 145, 159, 173, 175, 182, 189, 194, 197, 201, 396, 397, 399, 443, 487, 496, 497, 506, 507, 521, 522, 523, 525, 526, 527, 582, 583, 594, 600, 608, 609, 614, 616, 643, 645, 686, 688, 695, 702, 707, 719, 720, 729, 735, 746, 758, 760, 767, 774, 779, 782, 786, 984, 985, 987, 1014, 1021, 1024, 1025, 1027, 1030, 1072, 1081, 1082, 1091, 1092, 1106, 1107, 1108, 1110, 1111, 1112, 1121, 1129, 1130, 1133, 1135, 1162, 1164, 1215, 1218, 1219, 1236, 1246, 1247, 1253, 1261, 1266, 1271, 1272, 1277, 1303, 1306, 1311, 1312, 1313, 1314, 1317, 1319], "netcdf4_class": [32, 54, 396, 397, 583, 609, 984, 985, 1130], "netcdf3_class": [32, 54, 396, 397, 583, 609, 984, 985, 1130], "netcdf3_64bit": [32, 54, 396, 397, 583, 609, 984, 985, 1130], "non": [32, 120, 122, 123, 139, 394, 396, 494, 521, 523, 536, 583, 675, 677, 678, 723, 982, 984, 1079, 1106, 1108, 1298], "zero": [32, 396, 494, 511, 517, 521, 550, 583, 965, 984, 1079, 1096, 1102, 1106, 1246, 1253, 1261, 1298, 1306, 1310], "base_tim": [32, 54, 396, 397, 583, 609, 984, 985, 1130, 1296], "time_offset": [32, 54, 396, 397, 583, 609, 984, 985, 1130, 1296], "phidp_field": [33, 126, 127, 128, 133, 141, 143, 144, 150, 151, 154, 155, 156, 158, 159, 519, 520, 521, 522, 523, 532, 585, 710, 711, 712, 717, 725, 727, 728, 736, 737, 741, 742, 743, 745, 746, 1104, 1105, 1106, 1107, 1108, 1117, 1263, 1299, 1313], "phidp_texture_field": [33, 532, 585, 1117], "textur": [33, 200, 445, 532, 585, 785, 1029, 1117, 1210, 1235, 1258, 1303, 1307, 1313], "real": [33, 137, 532, 585, 721, 1117, 1266, 1276, 1298, 1303, 1317, 1319], "part": [33, 499, 532, 585, 1084, 1117, 1268, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314], "shift": [33, 133, 141, 150, 151, 154, 158, 159, 205, 272, 305, 342, 496, 517, 519, 520, 522, 532, 585, 717, 725, 736, 737, 741, 745, 746, 791, 858, 891, 928, 1081, 1102, 1104, 1105, 1107, 1117, 1307, 1313], "texture_field": [33, 532, 585, 1117], "gourlei": [33, 132, 154, 155, 156, 532, 585, 716, 741, 742, 743, 1117], "j": [33, 121, 124, 139, 150, 151, 152, 153, 160, 163, 494, 497, 518, 522, 523, 525, 528, 530, 532, 533, 534, 585, 676, 679, 723, 736, 737, 738, 740, 747, 750, 1030, 1079, 1082, 1103, 1107, 1108, 1110, 1113, 1115, 1117, 1118, 1119, 1263, 1264, 1273, 1274, 1281, 1282, 1284, 1286, 1290, 1293, 1298, 1303, 1317], "p": [33, 35, 37, 43, 117, 121, 124, 152, 153, 160, 163, 449, 454, 463, 467, 468, 476, 482, 489, 499, 528, 532, 585, 588, 590, 597, 672, 676, 679, 738, 740, 747, 750, 1021, 1034, 1039, 1048, 1052, 1053, 1061, 1067, 1074, 1084, 1113, 1117, 1191, 1225, 1303, 1317], "tabari": [33, 532, 585, 1117], "parent": [33, 532, 585, 1117], "du": [33, 532, 585, 1117], "chatelet": [33, 532, 585, 1117], "fuzzi": [33, 532, 585, 1117], "logic": [33, 173, 175, 182, 189, 194, 532, 585, 686, 688, 695, 702, 707, 758, 760, 767, 774, 779, 1117], "algorithm": [33, 135, 136, 137, 138, 139, 148, 154, 155, 169, 428, 449, 454, 468, 469, 494, 497, 498, 521, 525, 530, 532, 585, 682, 719, 720, 721, 722, 723, 733, 741, 742, 754, 1021, 1025, 1034, 1039, 1053, 1054, 1079, 1082, 1083, 1106, 1110, 1115, 1117, 1262, 1265, 1266, 1303, 1312, 1313, 1315, 1317], "separ": [33, 149, 511, 516, 530, 532, 533, 585, 734, 1022, 1023, 1096, 1101, 1115, 1117, 1118, 1225, 1236, 1268, 1280, 1311, 1312, 1319], "precipit": [33, 133, 136, 141, 158, 159, 476, 489, 518, 532, 585, 717, 720, 725, 745, 746, 1025, 1061, 1074, 1103, 1117, 1236, 1272, 1280, 1298, 1312, 1313, 1317], "nonprecipit": [33, 532, 585, 1117], "echo": [33, 494, 511, 518, 532, 585, 1079, 1096, 1103, 1117, 1298, 1310, 1312], "polarimetr": [33, 126, 127, 128, 132, 150, 151, 459, 465, 466, 467, 476, 489, 497, 500, 518, 525, 528, 529, 532, 585, 710, 711, 712, 716, 736, 737, 1044, 1050, 1051, 1052, 1061, 1074, 1082, 1085, 1103, 1110, 1113, 1114, 1117, 1263, 1313], "observ": [33, 117, 135, 136, 152, 153, 155, 160, 163, 454, 476, 489, 494, 521, 527, 532, 585, 672, 719, 720, 738, 740, 742, 747, 750, 1039, 1061, 1074, 1079, 1106, 1112, 1117, 1217, 1298, 1313], "journal": [33, 137, 139, 449, 463, 468, 469, 482, 499, 511, 532, 585, 721, 723, 1021, 1034, 1048, 1053, 1054, 1067, 1084, 1096, 1117, 1225, 1226, 1303, 1317], "atmospher": [33, 59, 88, 117, 118, 137, 138, 152, 163, 443, 469, 499, 511, 524, 532, 585, 614, 643, 672, 673, 721, 722, 738, 750, 1025, 1027, 1054, 1084, 1096, 1109, 1117, 1133, 1162, 1226, 1268, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "ocean": [33, 137, 150, 151, 469, 494, 499, 511, 528, 532, 585, 721, 736, 737, 1054, 1079, 1084, 1096, 1113, 1117, 1226, 1268, 1298], "technologi": [33, 137, 469, 499, 511, 532, 585, 721, 1054, 1084, 1096, 1117, 1226], "24": [33, 532, 585, 1117, 1269, 1270, 1311, 1312], "8": [33, 76, 105, 125, 126, 137, 150, 154, 155, 200, 249, 251, 252, 253, 255, 257, 267, 269, 271, 532, 585, 631, 660, 680, 710, 721, 736, 741, 742, 785, 835, 837, 838, 839, 841, 843, 853, 855, 857, 1117, 1150, 1179, 1226, 1269, 1272, 1273, 1278, 1288, 1292, 1296, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1317], "1439": [33, 532, 585, 1117], "1451": [33, 532, 585, 1117], "class": [34, 45, 55, 59, 88, 169, 198, 205, 239, 251, 252, 258, 272, 305, 333, 342, 401, 414, 428, 454, 497, 498, 511, 518, 536, 586, 587, 600, 610, 614, 643, 681, 682, 753, 754, 783, 790, 791, 825, 837, 838, 844, 858, 891, 919, 928, 989, 990, 1003, 1013, 1014, 1015, 1017, 1024, 1039, 1082, 1083, 1096, 1103, 1120, 1121, 1131, 1133, 1162, 1260, 1261, 1303, 1309, 1310, 1313, 1317], "filetyp": [34, 40, 587, 594], "need": [34, 59, 68, 70, 71, 88, 97, 99, 100, 135, 136, 167, 398, 410, 494, 587, 614, 623, 625, 626, 643, 652, 654, 655, 719, 720, 986, 1079, 1133, 1142, 1144, 1145, 1162, 1171, 1173, 1174, 1228, 1254, 1268, 1272, 1277, 1298, 1303, 1305, 1306, 1307, 1309, 1310, 1313, 1314, 1316, 1317, 1319], "being": [34, 36, 137, 197, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 523, 587, 589, 721, 782, 808, 810, 815, 818, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 919, 922, 923, 924, 925, 945, 947, 955, 956, 959, 960, 961, 962, 1025, 1030, 1108, 1239, 1240, 1261, 1289, 1316], "string": [34, 45, 59, 88, 224, 227, 228, 232, 235, 250, 252, 266, 291, 294, 295, 299, 301, 324, 327, 328, 329, 330, 331, 334, 336, 338, 361, 364, 365, 366, 367, 368, 371, 373, 375, 379, 427, 460, 479, 510, 511, 516, 522, 523, 528, 533, 534, 537, 587, 600, 614, 643, 810, 813, 814, 818, 821, 836, 838, 852, 877, 880, 881, 885, 887, 910, 913, 914, 915, 916, 917, 920, 922, 924, 947, 950, 951, 952, 953, 954, 957, 959, 961, 967, 1024, 1025, 1045, 1064, 1095, 1096, 1101, 1107, 1108, 1113, 1118, 1119, 1121, 1133, 1162, 1211, 1212, 1277, 1317], "initi": [34, 49, 50, 51, 55, 77, 78, 79, 80, 106, 107, 108, 109, 137, 138, 169, 205, 272, 305, 342, 401, 529, 587, 604, 605, 606, 610, 632, 633, 634, 635, 661, 662, 663, 664, 682, 721, 722, 754, 791, 858, 891, 928, 990, 1114, 1125, 1126, 1127, 1151, 1152, 1153, 1154, 1180, 1181, 1182, 1183, 1279], "dic": [37, 45, 59, 60, 88, 89, 401, 413, 590, 600, 614, 615, 643, 644, 990, 1121, 1133, 1134, 1162, 1163], "colormap": [38, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 592, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 986, 1266, 1276, 1280, 1294, 1299, 1313, 1315], "select": [39, 64, 73, 93, 102, 139, 459, 467, 476, 489, 492, 506, 507, 525, 527, 529, 593, 619, 628, 648, 657, 723, 1044, 1052, 1061, 1074, 1077, 1091, 1092, 1110, 1112, 1114, 1138, 1147, 1167, 1176], "limit": [39, 137, 138, 150, 151, 197, 199, 200, 201, 202, 203, 204, 224, 238, 264, 291, 304, 324, 341, 361, 378, 388, 399, 441, 515, 521, 525, 593, 721, 722, 735, 736, 737, 782, 784, 785, 786, 787, 788, 789, 810, 824, 850, 877, 890, 910, 927, 947, 964, 976, 987, 1022, 1023, 1100, 1106, 1110, 1255, 1256, 1273, 1274, 1278, 1303, 1309, 1313], "relat": [39, 128, 154, 155, 156, 399, 494, 500, 503, 504, 505, 522, 530, 593, 712, 741, 742, 743, 987, 1079, 1085, 1088, 1089, 1090, 1107, 1115, 1298, 1303, 1313, 1316, 1317], "instac": [39, 593], "nyquist": [39, 72, 101, 137, 138, 139, 445, 593, 627, 656, 721, 722, 723, 1029, 1146, 1175, 1210, 1307, 1312, 1314], "consid": [39, 126, 133, 135, 136, 140, 141, 142, 143, 144, 145, 147, 148, 154, 155, 156, 158, 159, 463, 468, 469, 482, 494, 506, 507, 515, 519, 520, 525, 526, 527, 593, 710, 717, 719, 720, 724, 725, 726, 727, 728, 729, 732, 733, 741, 742, 743, 745, 746, 965, 1022, 1023, 1048, 1053, 1054, 1067, 1079, 1091, 1092, 1100, 1104, 1105, 1110, 1111, 1112, 1215, 1218, 1219, 1225, 1226, 1241, 1298], "vmin": [39, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 593, 808, 810, 815, 818, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 919, 922, 923, 924, 925, 945, 947, 955, 956, 959, 960, 961, 962, 986, 1263, 1264, 1268, 1269, 1272, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1306, 1307, 1309, 1310, 1312, 1313], "vmax": [39, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 593, 808, 810, 815, 818, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 919, 922, 923, 924, 925, 945, 947, 955, 956, 959, 960, 961, 962, 986, 1263, 1264, 1268, 1269, 1272, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1306, 1307, 1309, 1310, 1312, 1313], "2": [39, 117, 121, 125, 139, 140, 144, 145, 147, 148, 149, 150, 152, 154, 155, 163, 200, 211, 222, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 249, 250, 251, 255, 257, 266, 267, 269, 271, 278, 289, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 311, 322, 324, 327, 328, 332, 335, 336, 337, 338, 339, 341, 348, 359, 361, 364, 365, 369, 370, 372, 373, 374, 375, 376, 378, 390, 391, 392, 394, 436, 449, 450, 468, 476, 491, 494, 496, 511, 521, 527, 533, 593, 672, 676, 680, 723, 724, 728, 729, 732, 733, 734, 736, 738, 741, 742, 750, 785, 797, 808, 810, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 835, 836, 837, 841, 843, 852, 853, 855, 857, 864, 875, 877, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 897, 908, 910, 913, 914, 918, 921, 922, 923, 924, 925, 927, 934, 945, 947, 950, 951, 955, 956, 958, 959, 960, 961, 962, 964, 978, 979, 980, 982, 998, 1009, 1014, 1021, 1022, 1023, 1025, 1034, 1035, 1053, 1061, 1076, 1079, 1081, 1096, 1106, 1112, 1118, 1193, 1211, 1212, 1226, 1236, 1238, 1260, 1265, 1270, 1272, 1277, 1278, 1279, 1282, 1284, 1285, 1288, 1289, 1292, 1296, 1298, 1300, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1317], "tuplet": [39, 593], "minimun": [39, 593], "maximun": [39, 593], "teoric": [39, 593], "copi": [40, 44, 45, 61, 62, 64, 65, 66, 68, 90, 91, 93, 94, 95, 97, 183, 184, 401, 594, 598, 600, 616, 617, 619, 620, 621, 623, 645, 646, 648, 649, 650, 652, 696, 697, 768, 769, 990, 1025, 1121, 1135, 1136, 1138, 1139, 1140, 1142, 1164, 1165, 1167, 1168, 1169, 1171, 1259, 1306], "field_map": [40, 594], "anoth": [40, 459, 467, 476, 489, 492, 594, 1014, 1044, 1052, 1061, 1074, 1077, 1236, 1272, 1305, 1310, 1313, 1316, 1319], "empti": [43, 407, 436, 522, 523, 597, 998, 1009, 1107, 1108, 1191, 1193, 1196, 1261, 1305, 1312, 1313], "exist": [43, 46, 60, 61, 63, 89, 90, 92, 145, 173, 175, 182, 189, 194, 197, 200, 201, 394, 521, 597, 601, 615, 616, 618, 644, 645, 647, 686, 688, 695, 702, 707, 729, 735, 758, 760, 767, 774, 779, 782, 785, 786, 982, 1106, 1122, 1131, 1134, 1135, 1137, 1163, 1164, 1166, 1191, 1259, 1263, 1303, 1305], "self": [44, 150, 151, 154, 155, 156, 403, 406, 407, 408, 409, 412, 416, 418, 419, 423, 424, 598, 736, 737, 741, 742, 743, 1306, 1309, 1317], "descrip": [44, 598], "default_config": [44, 598, 1261], "These": [44, 137, 169, 264, 398, 536, 598, 682, 721, 754, 850, 986, 1025, 1242, 1268, 1277, 1298, 1303, 1310, 1316, 1317], "modifi": [44, 59, 88, 140, 598, 614, 643, 724, 1133, 1162, 1266, 1276, 1294, 1315, 1317], "environment": [44, 598, 1303, 1316], "pyart_config": [44, 598, 1313], "execut": [44, 598, 1265, 1270, 1275, 1294, 1301, 1302, 1315], "full": [44, 76, 105, 140, 145, 394, 598, 631, 660, 724, 729, 982, 1150, 1179, 1261, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303], "permiss": [44, 598], "mai": [44, 137, 138, 173, 175, 182, 189, 194, 305, 342, 390, 392, 398, 401, 414, 523, 525, 536, 598, 686, 688, 695, 702, 707, 721, 722, 758, 760, 767, 774, 779, 891, 928, 978, 980, 986, 990, 1025, 1108, 1110, 1205, 1298, 1303], "secur": [44, 598], "do": [44, 59, 88, 125, 137, 197, 200, 201, 398, 399, 509, 598, 614, 643, 680, 721, 735, 782, 785, 786, 986, 987, 1094, 1133, 1162, 1269, 1298, 1305, 1306, 1307, 1309, 1310, 1312, 1316, 1317, 1319], "un": [44, 598], "trust": [44, 598], "method": [44, 45, 61, 68, 70, 71, 90, 97, 99, 100, 126, 128, 133, 141, 150, 151, 154, 156, 169, 173, 175, 182, 189, 194, 234, 399, 400, 401, 414, 439, 463, 482, 496, 510, 511, 519, 520, 521, 522, 523, 533, 598, 600, 616, 623, 625, 626, 645, 652, 654, 655, 682, 686, 688, 695, 702, 707, 710, 712, 717, 725, 736, 737, 741, 743, 754, 758, 760, 767, 774, 779, 820, 987, 988, 990, 1001, 1003, 1011, 1022, 1023, 1024, 1048, 1067, 1081, 1095, 1096, 1104, 1105, 1106, 1107, 1108, 1118, 1121, 1135, 1142, 1144, 1145, 1164, 1171, 1173, 1174, 1225, 1226, 1260, 1263, 1283, 1303, 1310, 1312, 1313, 1317], "chang": [44, 45, 59, 61, 65, 66, 68, 70, 88, 90, 94, 95, 97, 99, 137, 168, 169, 393, 401, 598, 600, 614, 616, 620, 621, 623, 625, 643, 645, 649, 650, 652, 654, 682, 721, 754, 981, 990, 1121, 1131, 1133, 1135, 1139, 1140, 1142, 1144, 1162, 1164, 1168, 1169, 1171, 1173, 1205, 1261, 1298, 1306, 1309, 1314, 1316, 1317], "home": [44, 598, 1263, 1269, 1317, 1319], "make": [44, 45, 497, 529, 598, 600, 1082, 1114, 1121, 1193, 1197, 1199, 1200, 1261, 1272, 1279, 1288, 1298, 1305, 1306, 1312, 1316, 1317, 1319], "adjust": [44, 121, 238, 304, 341, 378, 598, 676, 824, 890, 927, 964, 1277, 1280, 1288], "login": [44, 598], "shell": [44, 598], "session": [44, 598], "modif": [44, 61, 90, 598, 616, 645, 1135, 1164, 1261], "last": [44, 59, 88, 137, 146, 222, 223, 229, 233, 234, 235, 247, 249, 255, 257, 258, 265, 267, 269, 271, 289, 290, 296, 300, 301, 322, 323, 332, 333, 337, 338, 342, 359, 360, 369, 370, 374, 375, 598, 614, 643, 721, 731, 808, 809, 815, 819, 820, 821, 833, 835, 841, 843, 844, 851, 853, 855, 857, 875, 876, 882, 886, 887, 908, 909, 918, 919, 923, 924, 928, 945, 946, 955, 956, 960, 961, 1133, 1162, 1226, 1273, 1314], "origin_latitud": [45, 600, 1121], "origin_longitud": [45, 600, 1121], "origin_altitud": [45, 600, 1121], "z": [45, 51, 53, 59, 71, 79, 88, 100, 108, 117, 118, 119, 126, 128, 150, 151, 220, 287, 320, 357, 388, 398, 399, 494, 500, 503, 504, 505, 516, 600, 606, 608, 614, 626, 634, 643, 655, 663, 672, 673, 674, 710, 712, 736, 737, 806, 873, 906, 943, 976, 986, 987, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1030, 1079, 1085, 1088, 1089, 1090, 1101, 1121, 1127, 1129, 1133, 1145, 1153, 1162, 1174, 1182, 1193, 1232, 1263, 1286, 1288, 1289, 1298, 1303, 1306, 1313, 1317], "radar_latitud": [45, 600, 1121, 1228, 1254], "radar_longitud": [45, 600, 1121, 1228, 1254], "radar_altitud": [45, 515, 600, 1100, 1121], "radar_tim": [45, 600, 1121], "radar_nam": [45, 600, 1121], "rectilinear": [45, 600, 1121], "cartesian": [45, 47, 53, 59, 88, 117, 118, 119, 120, 121, 122, 123, 124, 388, 497, 511, 568, 600, 602, 608, 614, 643, 672, 673, 674, 675, 676, 677, 678, 679, 976, 1013, 1014, 1021, 1024, 1025, 1082, 1096, 1121, 1123, 1129, 1133, 1162, 1261, 1266, 1271, 1275, 1278, 1303, 1304, 1312, 1315], "section": [45, 59, 61, 88, 90, 216, 218, 222, 236, 283, 285, 289, 302, 316, 318, 322, 339, 353, 355, 359, 376, 451, 470, 471, 511, 600, 614, 616, 643, 645, 802, 804, 808, 822, 869, 871, 875, 888, 902, 904, 908, 925, 939, 941, 945, 962, 1023, 1025, 1036, 1055, 1056, 1096, 1121, 1133, 1135, 1162, 1164, 1218, 1219, 1231, 1261, 1266, 1276, 1294, 1298, 1303, 1312, 1315], "legaci": [45, 600, 1030, 1121], "befor": [45, 70, 99, 137, 145, 150, 151, 168, 454, 459, 467, 476, 489, 492, 494, 525, 535, 600, 625, 654, 721, 729, 736, 737, 1014, 1039, 1044, 1052, 1061, 1074, 1077, 1079, 1110, 1121, 1144, 1173, 1272, 1298, 1303, 1307, 1313, 1314, 1317], "from_legacy_paramet": [45, 600, 1121], "ax": [45, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 249, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 369, 370, 372, 373, 374, 375, 376, 377, 378, 494, 517, 530, 600, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 833, 835, 836, 837, 838, 839, 841, 843, 850, 851, 852, 853, 855, 857, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 955, 956, 958, 959, 960, 961, 962, 963, 964, 1018, 1019, 1020, 1079, 1102, 1115, 1121, 1263, 1264, 1268, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1292, 1296, 1297, 1298, 1299, 1300, 1307, 1311, 1312, 1313], "moment": [45, 53, 59, 88, 132, 137, 138, 139, 200, 201, 390, 391, 392, 550, 551, 600, 608, 614, 643, 716, 721, 722, 723, 735, 785, 786, 978, 979, 980, 1025, 1121, 1129, 1133, 1162, 1225, 1269, 1276, 1294, 1303, 1310, 1311, 1313, 1315], "describ": [45, 59, 88, 129, 197, 198, 199, 200, 201, 202, 203, 204, 250, 266, 463, 469, 482, 600, 614, 643, 713, 735, 782, 783, 784, 785, 786, 787, 788, 789, 836, 852, 1048, 1054, 1067, 1121, 1133, 1162, 1298], "geograph": [45, 59, 70, 88, 99, 120, 121, 122, 123, 124, 125, 305, 333, 342, 370, 397, 600, 614, 625, 643, 654, 675, 676, 677, 678, 679, 680, 891, 919, 928, 956, 985, 1025, 1121, 1133, 1144, 1162, 1173, 1303], "axi": [45, 53, 59, 88, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 247, 249, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 322, 323, 324, 325, 326, 327, 328, 332, 333, 335, 336, 337, 338, 339, 341, 359, 360, 361, 362, 363, 364, 365, 369, 370, 372, 373, 374, 375, 376, 378, 388, 398, 600, 608, 614, 643, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 833, 835, 836, 837, 838, 839, 841, 843, 850, 851, 852, 853, 855, 857, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 908, 909, 910, 911, 912, 913, 914, 918, 919, 921, 922, 923, 924, 925, 927, 945, 946, 947, 948, 949, 950, 951, 955, 956, 958, 959, 960, 961, 962, 964, 976, 986, 1121, 1129, 1133, 1162, 1215, 1263, 1278, 1289, 1298, 1300, 1312, 1313, 1314], "dimension": [45, 53, 137, 139, 530, 600, 608, 721, 723, 1021, 1115, 1121, 1129, 1272, 1298], "space": [45, 59, 88, 122, 224, 291, 324, 361, 399, 494, 508, 516, 600, 614, 643, 677, 810, 877, 910, 947, 987, 1025, 1079, 1093, 1101, 1121, 1133, 1162, 1269, 1298, 1305], "along": [45, 138, 145, 236, 248, 249, 254, 255, 256, 257, 268, 269, 270, 271, 302, 339, 376, 490, 600, 722, 729, 822, 834, 835, 840, 841, 842, 843, 854, 855, 856, 857, 888, 925, 962, 1075, 1121, 1215, 1218, 1219, 1229, 1230, 1258, 1298, 1312], "three": [45, 139, 197, 201, 398, 530, 600, 723, 735, 782, 786, 986, 1115, 1121, 1298, 1313], "repeat": [45, 511, 600, 1096, 1121], "throughout": [45, 600, 1121], "transform": [45, 59, 88, 120, 121, 122, 123, 124, 125, 227, 234, 294, 305, 327, 342, 364, 370, 397, 441, 454, 460, 479, 518, 531, 600, 614, 643, 675, 676, 677, 678, 679, 680, 813, 820, 880, 891, 913, 928, 950, 956, 985, 1025, 1039, 1045, 1064, 1103, 1116, 1121, 1133, 1162, 1277, 1298, 1311], "pyart_aeqd": [45, 52, 59, 88, 120, 122, 123, 600, 607, 614, 643, 675, 677, 678, 1121, 1128, 1133, 1162], "nativ": [45, 59, 88, 120, 122, 123, 381, 600, 614, 643, 675, 677, 678, 969, 1025, 1030, 1121, 1133, 1162], "azimuth": [45, 59, 65, 66, 69, 71, 81, 88, 94, 95, 98, 100, 110, 117, 118, 119, 120, 121, 122, 123, 124, 135, 136, 147, 148, 149, 161, 162, 164, 205, 206, 222, 224, 227, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 272, 273, 289, 291, 294, 296, 300, 301, 305, 306, 322, 324, 327, 332, 333, 337, 338, 342, 343, 359, 361, 364, 369, 370, 374, 375, 394, 398, 459, 489, 490, 506, 507, 509, 511, 523, 525, 533, 534, 550, 600, 614, 620, 621, 624, 626, 636, 643, 649, 650, 653, 655, 665, 672, 673, 674, 675, 676, 677, 678, 679, 719, 720, 730, 732, 733, 734, 739, 748, 749, 751, 791, 792, 808, 810, 813, 815, 819, 820, 821, 835, 841, 843, 853, 855, 857, 858, 859, 875, 877, 880, 882, 886, 887, 891, 892, 908, 910, 913, 918, 919, 923, 924, 928, 929, 945, 947, 950, 955, 956, 960, 961, 982, 986, 1023, 1030, 1044, 1074, 1075, 1091, 1092, 1094, 1096, 1108, 1110, 1118, 1119, 1121, 1133, 1139, 1140, 1143, 1145, 1155, 1162, 1168, 1169, 1172, 1174, 1184, 1213, 1218, 1219, 1227, 1228, 1229, 1234, 1238, 1246, 1259, 1261, 1291, 1293, 1296, 1305, 1314, 1317], "equidist": [45, 59, 88, 120, 121, 122, 123, 124, 227, 294, 327, 364, 370, 398, 600, 614, 643, 675, 676, 677, 678, 679, 813, 880, 913, 950, 956, 986, 1025, 1121, 1133, 1162], "pyproj": [45, 59, 88, 120, 122, 123, 600, 614, 643, 675, 677, 678, 1121, 1133, 1162, 1316], "projparam": [45, 48, 59, 88, 120, 122, 123, 600, 603, 614, 643, 675, 677, 678, 1121, 1124, 1133, 1162], "special": [45, 59, 88, 600, 614, 643, 1121, 1133, 1162, 1261, 1311], "_include_lon_0_lat_0": [45, 59, 88, 600, 614, 643, 1121, 1133, 1162], "interpret": [45, 59, 88, 138, 139, 397, 600, 614, 643, 722, 723, 985, 1121, 1133, 1162, 1239, 1240], "requir": [45, 59, 88, 120, 122, 123, 137, 140, 145, 394, 398, 446, 447, 448, 449, 455, 456, 457, 458, 462, 463, 465, 466, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 493, 496, 533, 536, 600, 614, 643, 675, 677, 678, 721, 724, 729, 982, 986, 1022, 1023, 1025, 1031, 1032, 1033, 1034, 1040, 1041, 1042, 1043, 1047, 1048, 1050, 1051, 1057, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1078, 1081, 1118, 1121, 1133, 1162, 1225, 1269, 1303, 1311, 1312, 1313, 1317, 1319], "get_projparam": [45, 600, 1121], "evalu": [45, 401, 410, 425, 430, 600, 990, 992, 1121], "up": [45, 59, 88, 127, 128, 135, 136, 154, 155, 156, 173, 175, 182, 189, 194, 476, 500, 503, 504, 524, 527, 600, 614, 643, 686, 688, 695, 702, 707, 711, 712, 719, 720, 741, 742, 743, 758, 760, 767, 774, 779, 1022, 1023, 1030, 1061, 1085, 1088, 1089, 1109, 1112, 1121, 1133, 1162, 1210, 1242, 1244, 1245, 1298, 1307, 1311, 1314, 1318], "collect": [45, 182, 194, 383, 390, 391, 392, 394, 600, 695, 707, 767, 779, 971, 978, 979, 980, 982, 1013, 1024, 1025, 1121, 1268, 1282, 1296, 1317, 1318, 1319], "nradar": [45, 600, 1121], "whose": [45, 393, 600, 981, 1020, 1121], "wa": [45, 70, 71, 99, 100, 138, 139, 168, 182, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 600, 625, 626, 654, 655, 695, 722, 723, 767, 808, 815, 819, 820, 821, 822, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 1121, 1144, 1145, 1173, 1174, 1236, 1261, 1303, 1313, 1317, 1319], "projection_proj": [45, 600, 1121], "instanc": [45, 52, 56, 62, 91, 137, 138, 139, 222, 229, 232, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 399, 400, 497, 600, 607, 611, 617, 646, 721, 722, 723, 808, 815, 818, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962, 987, 988, 1030, 1082, 1121, 1128, 1136, 1165, 1236, 1246, 1247, 1253], "valueerror": [45, 46, 52, 60, 61, 89, 90, 600, 601, 607, 615, 616, 644, 645, 1121, 1122, 1128, 1134, 1135, 1163, 1164], "point_z": [45, 397, 600, 985, 1121], "point_x": [45, 397, 600, 985, 1121], "point_i": [45, 397, 600, 985, 1121], "func": [45, 168, 600, 1121], "init_point_x_y_z": [45, 600, 1121], "reset": [45, 50, 51, 59, 70, 78, 79, 80, 88, 99, 107, 108, 109, 600, 605, 606, 614, 625, 633, 634, 635, 643, 654, 662, 663, 664, 1121, 1126, 1127, 1133, 1144, 1152, 1153, 1154, 1162, 1173, 1181, 1182, 1183, 1310], "point_latitud": [45, 397, 600, 985, 1121], "point_longitud": [45, 397, 600, 985, 1121], "perform": [45, 59, 70, 71, 72, 88, 99, 100, 101, 132, 137, 138, 139, 145, 173, 175, 182, 189, 194, 222, 227, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 294, 296, 299, 300, 301, 302, 322, 327, 332, 333, 336, 337, 338, 339, 342, 359, 364, 369, 370, 373, 374, 375, 376, 390, 393, 398, 454, 459, 467, 476, 489, 496, 521, 600, 614, 625, 626, 627, 643, 654, 655, 656, 686, 688, 695, 702, 707, 716, 721, 722, 723, 729, 758, 760, 767, 774, 779, 808, 813, 815, 818, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 880, 882, 885, 886, 887, 888, 908, 913, 918, 919, 922, 923, 924, 925, 928, 945, 950, 955, 956, 959, 960, 961, 962, 978, 981, 986, 1022, 1023, 1039, 1044, 1052, 1061, 1074, 1081, 1106, 1121, 1133, 1144, 1145, 1146, 1162, 1173, 1174, 1175, 1259, 1262, 1263, 1264, 1266, 1273, 1274, 1278, 1303, 1312], "invers": [45, 59, 88, 152, 163, 460, 533, 600, 614, 643, 738, 750, 1045, 1118, 1121, 1133, 1162], "rel": [45, 59, 88, 127, 143, 146, 154, 155, 156, 199, 234, 331, 368, 441, 454, 529, 531, 600, 614, 643, 711, 727, 731, 741, 742, 743, 784, 820, 917, 954, 1025, 1039, 1114, 1116, 1121, 1133, 1162, 1314, 1317], "init_point_longitude_latitud": [45, 600, 1121], "point_altitud": [45, 49, 397, 600, 604, 985, 1121, 1125], "init_point_altitud": [45, 600, 1121], "init": [45, 239, 258, 401, 413, 600, 825, 844, 990, 1121, 1228], "field_dict": [46, 601, 1122], "replace_exist": [46, 60, 61, 62, 89, 90, 91, 601, 615, 616, 617, 644, 645, 646, 1122, 1134, 1135, 1136, 1163, 1164, 1165, 1298, 1306, 1307, 1317], "overwrit": [46, 601, 1122], "alreadi": [46, 60, 61, 89, 90, 152, 519, 520, 601, 615, 616, 644, 645, 738, 1104, 1105, 1122, 1134, 1135, 1163, 1164], "edg": [47, 71, 100, 118, 122, 137, 138, 139, 140, 145, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 517, 523, 549, 602, 626, 655, 673, 677, 721, 722, 723, 724, 729, 808, 815, 819, 820, 821, 835, 841, 843, 853, 855, 857, 875, 882, 886, 887, 908, 918, 919, 923, 924, 945, 955, 956, 960, 961, 1102, 1108, 1123, 1145, 1174, 1288, 1289, 1298, 1303], "height": [47, 53, 55, 56, 127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 199, 251, 252, 253, 267, 333, 370, 441, 442, 444, 454, 459, 467, 476, 489, 492, 494, 495, 497, 510, 511, 514, 518, 524, 525, 526, 527, 529, 530, 531, 533, 534, 602, 608, 610, 611, 711, 712, 719, 720, 726, 727, 731, 741, 742, 743, 784, 837, 838, 839, 853, 919, 956, 1022, 1023, 1025, 1028, 1039, 1044, 1052, 1061, 1074, 1077, 1079, 1080, 1082, 1095, 1096, 1099, 1103, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1118, 1119, 1123, 1129, 1253, 1277, 1286, 1296, 1300, 1310, 1312, 1313, 1317], "determin": [47, 59, 88, 133, 137, 138, 139, 141, 151, 158, 159, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 333, 370, 381, 390, 391, 394, 399, 400, 445, 454, 463, 468, 482, 494, 496, 497, 499, 500, 501, 503, 504, 529, 530, 533, 602, 614, 643, 717, 721, 722, 723, 725, 737, 745, 746, 835, 837, 838, 839, 841, 843, 850, 853, 855, 857, 919, 956, 965, 969, 978, 979, 982, 987, 988, 1029, 1039, 1048, 1053, 1067, 1079, 1081, 1082, 1084, 1085, 1086, 1088, 1089, 1114, 1115, 1118, 1123, 1133, 1162, 1225, 1241, 1253, 1257, 1298, 1317], "same": [47, 59, 61, 69, 70, 71, 88, 90, 98, 99, 100, 121, 124, 137, 175, 189, 234, 333, 388, 394, 398, 399, 400, 443, 454, 494, 516, 524, 602, 614, 616, 624, 625, 626, 643, 645, 653, 654, 655, 676, 679, 688, 702, 721, 760, 774, 820, 919, 976, 982, 986, 987, 988, 1025, 1027, 1039, 1079, 1101, 1109, 1123, 1133, 1135, 1143, 1144, 1145, 1162, 1164, 1172, 1173, 1174, 1228, 1238, 1254, 1259, 1268, 1288, 1289, 1298, 1305, 1310, 1311, 1312, 1317, 1319], "layout": [47, 387, 602, 975, 1123], "interpol": [47, 71, 100, 118, 122, 222, 229, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 383, 390, 459, 467, 476, 489, 492, 497, 510, 523, 524, 525, 533, 602, 626, 655, 673, 677, 808, 815, 819, 820, 821, 822, 835, 841, 843, 853, 855, 857, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 971, 978, 1024, 1025, 1044, 1052, 1061, 1074, 1077, 1082, 1095, 1108, 1109, 1110, 1118, 1123, 1145, 1174, 1237, 1253, 1261, 1269, 1298, 1309, 1312, 1313, 1317], "extrapol": [47, 118, 122, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 602, 673, 677, 808, 815, 819, 820, 821, 835, 841, 843, 853, 855, 857, 875, 882, 886, 887, 908, 918, 919, 923, 924, 945, 955, 956, 960, 961, 1123], "boundari": [47, 118, 122, 145, 241, 242, 264, 370, 523, 602, 673, 677, 729, 827, 828, 850, 956, 1108, 1123, 1299, 1311, 1313], "center": [47, 59, 71, 88, 100, 117, 118, 119, 121, 122, 124, 138, 222, 227, 229, 233, 234, 235, 249, 250, 254, 255, 256, 257, 266, 267, 268, 269, 270, 271, 289, 294, 296, 300, 301, 305, 322, 327, 332, 333, 337, 338, 359, 364, 369, 370, 374, 375, 390, 392, 459, 467, 476, 489, 492, 515, 602, 614, 626, 643, 655, 672, 673, 674, 676, 677, 679, 722, 808, 813, 815, 819, 820, 821, 835, 836, 840, 841, 842, 843, 852, 853, 854, 855, 856, 857, 875, 880, 882, 886, 887, 891, 908, 913, 918, 919, 923, 924, 945, 950, 955, 956, 960, 961, 978, 980, 1018, 1019, 1020, 1044, 1052, 1061, 1074, 1077, 1100, 1123, 1133, 1145, 1162, 1174, 1193, 1210, 1213, 1235, 1277, 1307, 1312, 1313, 1314], "2d": [47, 69, 70, 71, 98, 99, 100, 118, 146, 388, 398, 442, 454, 518, 523, 529, 602, 624, 625, 626, 653, 654, 655, 673, 730, 731, 739, 976, 986, 1039, 1103, 1108, 1114, 1123, 1143, 1144, 1145, 1172, 1173, 1174, 1210, 1235, 1272, 1314], "point_": [50, 51, 605, 606, 1126, 1127], "properti": [52, 57, 58, 183, 184, 533, 607, 612, 613, 696, 697, 768, 769, 1015, 1017, 1118, 1128, 1311, 1317], "xarrai": [53, 239, 251, 252, 253, 608, 825, 837, 838, 839, 1022, 1023, 1129, 1230, 1292, 1296, 1303, 1316], "arm_alt_lat_lon_vari": [54, 397, 609, 985, 1130], "speed": [55, 56, 252, 511, 533, 534, 610, 611, 838, 1025, 1096, 1118, 1119, 1210, 1300, 1312, 1317], "direct": [55, 76, 105, 394, 447, 466, 496, 509, 511, 521, 533, 534, 610, 631, 660, 982, 1032, 1051, 1081, 1094, 1096, 1106, 1118, 1119, 1150, 1179, 1300, 1312, 1317], "horizont": [55, 56, 57, 58, 59, 88, 126, 131, 132, 134, 137, 222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 337, 338, 339, 359, 360, 361, 369, 374, 375, 376, 382, 383, 450, 456, 457, 458, 462, 474, 475, 487, 488, 493, 506, 507, 509, 527, 533, 610, 611, 612, 613, 614, 643, 710, 715, 716, 718, 721, 808, 809, 810, 815, 819, 820, 821, 822, 833, 835, 837, 839, 841, 843, 851, 853, 855, 857, 875, 876, 877, 882, 886, 887, 888, 908, 909, 910, 918, 923, 924, 925, 945, 946, 947, 955, 960, 961, 962, 970, 971, 1022, 1023, 1035, 1041, 1042, 1043, 1047, 1059, 1060, 1072, 1073, 1078, 1091, 1092, 1094, 1112, 1118, 1133, 1162, 1253, 1279, 1289, 1312, 1314, 1317], "wind": [55, 56, 57, 58, 137, 138, 382, 383, 506, 507, 508, 509, 533, 534, 610, 611, 612, 613, 721, 722, 970, 971, 1091, 1092, 1093, 1094, 1118, 1119, 1253, 1261, 1300, 1304, 1317], "1d": [55, 56, 118, 122, 146, 454, 495, 498, 518, 531, 537, 610, 611, 673, 677, 730, 731, 739, 1039, 1080, 1083, 1103, 1116, 1215, 1226, 1231, 1232, 1233, 1234, 1242, 1243, 1244, 1245, 1314], "were": [55, 56, 173, 175, 182, 533, 610, 611, 686, 688, 695, 758, 760, 767, 1118, 1244, 1261, 1313, 1317], "sampl": [55, 56, 149, 454, 463, 482, 495, 529, 531, 533, 534, 610, 611, 734, 1039, 1048, 1067, 1080, 1114, 1116, 1118, 1119, 1120, 1197, 1199, 1200, 1225, 1268, 1269, 1277, 1297, 1299, 1300, 1303, 1317], "per": [55, 56, 57, 58, 72, 88, 101, 137, 155, 533, 610, 611, 612, 613, 627, 643, 656, 721, 742, 1025, 1118, 1146, 1162, 1175, 1194, 1195, 1196, 1317], "east": [55, 222, 233, 289, 300, 322, 337, 359, 374, 610, 808, 819, 875, 886, 908, 923, 945, 960, 1230, 1281, 1313], "u_wind": [55, 56, 533, 534, 610, 611, 1118, 1119, 1300, 1312, 1317], "compon": [55, 56, 57, 58, 508, 509, 610, 611, 612, 613, 1093, 1094, 1317], "v_wind": [55, 56, 533, 534, 610, 611, 1118, 1119, 1300, 1312, 1317], "classmethod": [56, 428, 611], "_rang": [59, 88, 464, 614, 643, 1049, 1133, 1162], "scan_typ": [59, 88, 205, 221, 272, 288, 305, 321, 342, 358, 614, 643, 791, 807, 858, 874, 891, 907, 928, 944, 1133, 1162, 1314], "sweep_numb": [59, 88, 614, 643, 1133, 1162, 1286, 1305, 1314], "sweep_mod": [59, 88, 384, 614, 643, 972, 1133, 1162, 1305, 1314], "fixed_angl": [59, 88, 205, 272, 305, 342, 614, 643, 791, 858, 891, 928, 1133, 1162, 1246, 1286, 1287, 1291, 1305, 1314], "sweep_start_ray_index": [59, 88, 614, 643, 1133, 1162, 1305, 1314], "sweep_end_ray_index": [59, 88, 614, 643, 1133, 1162, 1305, 1314], "altitude_agl": [59, 88, 614, 643, 1133, 1162, 1314], "target_scan_r": [59, 88, 614, 643, 1133, 1162, 1314], "rays_are_index": [59, 88, 614, 643, 1133, 1162], "ray_angle_r": [59, 88, 614, 643, 1133, 1162], "scan_rat": [59, 88, 400, 614, 643, 988, 1133, 1162, 1314], "antenna_transit": [59, 70, 71, 88, 99, 100, 182, 194, 222, 229, 233, 234, 235, 236, 272, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 614, 625, 626, 643, 654, 655, 695, 707, 767, 779, 808, 815, 819, 820, 821, 822, 858, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 1133, 1144, 1145, 1162, 1173, 1174, 1314], "instrument_paramet": [59, 88, 137, 148, 400, 469, 471, 614, 643, 721, 733, 988, 1054, 1056, 1133, 1162, 1261, 1307, 1314], "radar_calibr": [59, 88, 463, 471, 482, 484, 485, 614, 643, 1048, 1056, 1067, 1069, 1070, 1133, 1162, 1314], "tilt": [59, 88, 205, 234, 333, 370, 528, 614, 643, 791, 820, 919, 956, 1113, 1133, 1162, 1269, 1285, 1292], "roll": [59, 88, 157, 205, 394, 614, 643, 744, 791, 982, 1133, 1162, 1252, 1258], "drift": [59, 88, 205, 614, 643, 791, 1133, 1162], "head": [59, 88, 205, 614, 643, 791, 1133, 1162], "pitch": [59, 88, 205, 614, 643, 791, 1133, 1162], "georefs_appli": [59, 88, 614, 643, 1133, 1162], "antenna": [59, 70, 71, 88, 99, 100, 117, 118, 119, 129, 135, 136, 146, 147, 148, 149, 152, 153, 160, 162, 163, 164, 182, 194, 199, 203, 222, 229, 233, 234, 235, 236, 272, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 450, 471, 477, 490, 511, 527, 614, 625, 626, 643, 654, 655, 672, 673, 674, 695, 707, 713, 719, 720, 731, 732, 733, 734, 738, 739, 740, 747, 749, 750, 751, 767, 779, 784, 788, 808, 815, 819, 820, 821, 822, 858, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 1030, 1035, 1056, 1062, 1075, 1096, 1112, 1133, 1144, 1145, 1162, 1173, 1174, 1246, 1261, 1262, 1266, 1271, 1272, 1273, 1274, 1303, 1309, 1314], "structur": [59, 88, 400, 530, 614, 643, 988, 1115, 1133, 1162, 1268, 1298, 1310], "under": [59, 88, 137, 138, 139, 614, 643, 721, 722, 723, 1025, 1133, 1162, 1298, 1303, 1316, 1317], "sub": [59, 88, 614, 643, 1133, 1162], "meta_group": [59, 88, 614, 643, 1133, 1162, 1314], "instrument": [59, 88, 182, 194, 197, 200, 201, 400, 614, 643, 695, 707, 735, 767, 779, 782, 785, 786, 988, 1133, 1162, 1307, 1314], "volum": [59, 88, 137, 139, 140, 333, 370, 390, 391, 392, 400, 442, 459, 467, 476, 489, 490, 492, 495, 497, 508, 510, 515, 525, 527, 533, 534, 582, 614, 643, 721, 723, 724, 919, 956, 978, 979, 980, 988, 1014, 1022, 1023, 1044, 1052, 1061, 1074, 1075, 1077, 1080, 1082, 1093, 1095, 1100, 1110, 1112, 1118, 1119, 1133, 1162, 1218, 1219, 1221, 1238, 1255, 1256, 1259, 1266, 1276, 1294, 1315], "multipl": [59, 88, 152, 163, 454, 527, 529, 614, 643, 738, 750, 1039, 1112, 1114, 1133, 1162, 1261, 1266, 1271, 1276, 1288, 1294, 1310, 1315, 1319], "ground": [59, 88, 476, 511, 614, 643, 1030, 1061, 1096, 1133, 1162, 1268, 1312], "target": [59, 88, 153, 398, 470, 471, 614, 643, 740, 986, 1055, 1056, 1133, 1162, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1226, 1228, 1229, 1230, 1234, 1254, 1314], "thr": [59, 88, 614, 643, 1133, 1162], "index": [59, 74, 88, 103, 133, 141, 142, 143, 144, 146, 158, 159, 201, 235, 251, 252, 253, 255, 257, 267, 269, 271, 301, 338, 375, 398, 454, 468, 528, 614, 629, 643, 658, 717, 725, 726, 727, 728, 731, 735, 745, 746, 786, 821, 837, 838, 839, 841, 843, 853, 855, 857, 887, 924, 961, 986, 1014, 1030, 1039, 1053, 1113, 1133, 1148, 1162, 1177, 1304, 1317], "rays_per_sweep": [59, 80, 88, 109, 614, 635, 643, 664, 1133, 1154, 1162, 1183, 1194, 1195], "upon": [59, 88, 197, 198, 199, 200, 201, 202, 203, 204, 614, 643, 735, 782, 783, 784, 785, 786, 787, 788, 789, 1133, 1162], "prior": [59, 61, 88, 90, 145, 150, 151, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 394, 614, 616, 643, 645, 729, 736, 737, 808, 815, 818, 819, 820, 821, 822, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962, 982, 1133, 1135, 1162, 1164, 1269, 1303], "init_rays_per_sweep": [59, 88, 614, 643, 1133, 1162], "intend": [59, 88, 476, 614, 643, 1061, 1133, 1162], "rate": [59, 88, 494, 499, 500, 501, 502, 503, 504, 505, 518, 614, 643, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1103, 1133, 1162, 1298], "whether": [59, 88, 154, 155, 161, 173, 384, 471, 519, 520, 525, 527, 614, 643, 686, 730, 741, 742, 748, 758, 972, 1021, 1056, 1104, 1105, 1110, 1112, 1133, 1162, 1310], "regular": [59, 88, 399, 459, 467, 476, 489, 492, 550, 551, 567, 568, 614, 643, 987, 1044, 1052, 1061, 1074, 1077, 1133, 1162, 1277, 1303], "angular": [59, 88, 614, 643, 1133, 1162, 1210, 1249, 1250], "express": [59, 88, 614, 643, 1133, 1162], "360": [59, 88, 140, 145, 334, 371, 614, 643, 724, 729, 920, 957, 1133, 1162, 1300, 1305, 1312, 1314], "represent": [59, 88, 427, 614, 643, 1133, 1162], "forbidden": [59, 88, 614, 643, 1133, 1162], "plane": [59, 88, 398, 509, 614, 643, 986, 1022, 1023, 1094, 1133, 1162, 1314], "180": [59, 88, 119, 121, 154, 155, 527, 614, 643, 674, 676, 741, 742, 1112, 1133, 1162, 1305, 1317], "gate_z": [59, 71, 88, 100, 614, 626, 643, 655, 1133, 1145, 1162, 1174], "gate_x": [59, 71, 88, 100, 614, 626, 643, 655, 1133, 1145, 1162, 1174], "gate_i": [59, 71, 88, 100, 614, 626, 643, 655, 1133, 1145, 1162, 1174], "system": [59, 88, 120, 121, 122, 133, 141, 150, 151, 158, 159, 380, 390, 398, 456, 466, 511, 614, 643, 675, 676, 677, 717, 725, 736, 737, 745, 746, 968, 978, 986, 1016, 1021, 1041, 1051, 1096, 1133, 1162, 1311, 1316], "earth": [59, 88, 117, 118, 121, 124, 511, 591, 614, 643, 672, 673, 676, 679, 1096, 1133, 1162, 1228, 1254], "radiu": [59, 88, 117, 118, 119, 121, 124, 494, 511, 530, 591, 614, 643, 672, 673, 674, 676, 679, 1018, 1019, 1020, 1021, 1024, 1025, 1079, 1096, 1115, 1133, 1162, 1228, 1254, 1298, 1309], "init_gate_x_y_z": [59, 88, 614, 643, 1133, 1162], "gate_latitud": [59, 70, 78, 88, 99, 107, 614, 625, 633, 643, 654, 662, 1133, 1144, 1152, 1162, 1173, 1181], "gate_longitud": [59, 70, 78, 88, 99, 107, 614, 625, 633, 643, 654, 662, 1133, 1144, 1152, 1162, 1173, 1181, 1305], "init_gate_longitude_latitud": [59, 88, 614, 643, 1133, 1162, 1305], "gate_altitud": [59, 70, 77, 88, 99, 106, 614, 625, 632, 643, 654, 661, 1133, 1144, 1151, 1162, 1173, 1180], "init_gate_altitud": [59, 88, 614, 643, 1133, 1162, 1305], "actual": [59, 88, 147, 394, 398, 614, 643, 732, 982, 986, 1021, 1133, 1162, 1311, 1319], "flag": [59, 88, 137, 272, 394, 497, 522, 523, 526, 530, 614, 643, 721, 858, 982, 1082, 1107, 1108, 1111, 1115, 1133, 1162, 1211, 1212, 1238, 1241, 1319], "transit": [59, 70, 71, 88, 99, 100, 182, 194, 197, 200, 201, 222, 229, 233, 234, 235, 236, 272, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 476, 489, 522, 614, 625, 626, 643, 654, 655, 695, 707, 735, 767, 779, 782, 785, 786, 808, 815, 819, 820, 821, 822, 858, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 1061, 1074, 1107, 1133, 1144, 1145, 1162, 1173, 1174], "ye": [59, 88, 137, 614, 643, 721, 1133, 1162], "aircraft": [59, 88, 234, 394, 614, 643, 820, 982, 1133, 1162], "longitudin": [59, 88, 234, 246, 257, 261, 262, 271, 614, 643, 820, 832, 843, 847, 848, 857, 1133, 1162], "orthogon": [59, 88, 509, 614, 643, 1094, 1133, 1162], "platform": [59, 88, 614, 643, 1133, 1162], "right": [59, 88, 333, 442, 496, 515, 614, 643, 919, 1081, 1100, 1133, 1162, 1277, 1278, 1313], "wing": [59, 88, 614, 643, 1133, 1162], "down": [59, 88, 614, 643, 1133, 1162, 1260], "track": [59, 88, 614, 643, 1133, 1162], "compass": [59, 88, 614, 643, 1133, 1162], "nose": [59, 88, 614, 643, 1133, 1162], "had": [59, 88, 399, 614, 643, 987, 1133, 1162, 1268, 1319], "georefer": [59, 88, 614, 643, 1133, 1162], "lead": [59, 88, 614, 643, 1133, 1162, 1261, 1272], "centric": [59, 88, 614, 643, 1133, 1162], "avaiabl": [59, 88, 614, 643, 1133, 1162], "radar_paramet": [59, 88, 614, 643, 1133, 1162], "subconvent": [59, 88, 614, 643, 1133, 1162], "calibr": [59, 88, 152, 153, 160, 163, 499, 614, 643, 738, 740, 747, 750, 1084, 1133, 1162], "ngate": [59, 69, 88, 98, 614, 624, 643, 653, 1133, 1143, 1162, 1172, 1194, 1195, 1196, 1305, 1314], "nrai": [59, 69, 88, 98, 464, 614, 624, 643, 653, 1049, 1133, 1143, 1162, 1172, 1196, 1229, 1261, 1305, 1314], "nsweep": [59, 88, 614, 643, 1133, 1162, 1194, 1195, 1286, 1287, 1300, 1314], "loos": [60, 61, 89, 90, 615, 616, 644, 645, 1134, 1135, 1163, 1164, 1248], "existing_field_nam": [61, 90, 616, 645, 1135, 1164], "done": [61, 90, 135, 137, 145, 511, 530, 616, 645, 719, 721, 729, 1096, 1115, 1135, 1164, 1305, 1316, 1317, 1319], "both": [61, 90, 137, 197, 201, 381, 516, 517, 616, 645, 721, 735, 782, 786, 969, 1101, 1102, 1135, 1164, 1269, 1272, 1274, 1278, 1293, 1303, 1309, 1310, 1311, 1316, 1317], "reflectivity_copi": [61, 90, 616, 645, 1135, 1164], "take": [61, 90, 138, 152, 233, 300, 337, 374, 444, 521, 582, 616, 645, 722, 738, 819, 886, 923, 960, 1024, 1025, 1028, 1106, 1135, 1164, 1268, 1269, 1272, 1279, 1298, 1313, 1317], "gatefilt": [62, 91, 126, 127, 128, 137, 138, 139, 140, 145, 151, 197, 198, 199, 200, 201, 202, 203, 204, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 497, 521, 522, 523, 528, 533, 534, 617, 646, 710, 711, 712, 721, 722, 723, 724, 729, 735, 737, 782, 783, 784, 785, 786, 787, 788, 789, 808, 815, 818, 819, 820, 821, 822, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962, 1014, 1024, 1025, 1030, 1082, 1106, 1107, 1108, 1113, 1118, 1119, 1136, 1165, 1264, 1272, 1273, 1274, 1278, 1297, 1304, 1307, 1313, 1317], "updat": [62, 91, 496, 617, 646, 1081, 1136, 1165, 1261, 1279, 1298, 1303, 1311, 1317], "mask": [62, 91, 137, 138, 139, 140, 146, 157, 173, 175, 178, 182, 189, 193, 194, 197, 199, 200, 201, 202, 203, 204, 222, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 390, 391, 392, 459, 467, 476, 489, 492, 524, 550, 551, 567, 568, 617, 646, 686, 688, 691, 695, 702, 706, 707, 721, 722, 723, 724, 731, 735, 744, 758, 760, 763, 767, 774, 778, 779, 782, 784, 785, 786, 787, 788, 789, 808, 815, 818, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962, 978, 979, 980, 1025, 1030, 1044, 1052, 1061, 1074, 1077, 1109, 1136, 1165, 1236, 1248, 1261, 1263, 1272, 1273, 1298, 1304, 1305, 1306, 1311, 1312, 1313, 1314], "condit": [62, 91, 137, 169, 173, 175, 182, 189, 194, 399, 617, 646, 682, 686, 688, 695, 702, 707, 721, 754, 758, 760, 767, 774, 779, 987, 1136, 1165, 1264, 1306, 1310], "append": [62, 91, 617, 646, 1136, 1165, 1300], "filtered_": [62, 91, 617, 646, 1136, 1165], "check": [63, 72, 92, 101, 138, 139, 140, 145, 154, 155, 393, 445, 496, 524, 618, 627, 647, 656, 722, 723, 724, 729, 741, 742, 981, 1029, 1081, 1109, 1137, 1146, 1166, 1175, 1228, 1238, 1254, 1259, 1303, 1316, 1317, 1318], "keyerror": [63, 92, 435, 436, 618, 647, 997, 998, 1008, 1009, 1137, 1166, 1316], "array_lik": [64, 93, 619, 648, 1138, 1167, 1240], "view": [65, 66, 68, 94, 95, 97, 401, 433, 434, 440, 620, 621, 623, 649, 650, 652, 990, 995, 996, 1002, 1006, 1007, 1012, 1139, 1140, 1142, 1168, 1169, 1171, 1278, 1307, 1309, 1314], "possibl": [65, 66, 68, 94, 95, 97, 394, 454, 525, 620, 621, 623, 649, 650, 652, 982, 1039, 1110, 1139, 1140, 1142, 1168, 1169, 1171, 1225, 1232, 1261, 1277, 1298, 1307, 1309, 1311, 1312], "underli": [65, 66, 68, 94, 95, 97, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 381, 620, 621, 623, 649, 650, 652, 808, 815, 819, 820, 821, 822, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 969, 1139, 1140, 1142, 1168, 1169, 1171, 1303], "get_gate_x_y_z": [68, 97, 623, 652, 1142, 1171, 1288, 1289], "obtain": [68, 71, 97, 100, 129, 154, 162, 450, 460, 470, 471, 479, 496, 525, 623, 626, 652, 655, 713, 741, 749, 1035, 1045, 1055, 1056, 1064, 1081, 1110, 1142, 1145, 1171, 1174, 1251, 1300, 1305, 1312, 1313, 1317], "plot": [68, 71, 97, 100, 205, 206, 207, 208, 209, 210, 211, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 459, 467, 476, 489, 492, 528, 534, 623, 626, 652, 655, 791, 792, 793, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 965, 1044, 1052, 1061, 1074, 1077, 1113, 1119, 1142, 1145, 1171, 1174, 1261, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1294, 1295, 1296, 1298, 1301, 1303, 1305, 1306, 1307, 1309, 1310, 1313, 1315], "spatial": [68, 71, 97, 100, 137, 623, 626, 652, 655, 721, 1142, 1145, 1171, 1174, 1261, 1309, 1313], "context": [68, 71, 97, 100, 623, 626, 652, 655, 1142, 1145, 1171, 1174, 1296, 1303, 1317], "request": [68, 97, 122, 390, 517, 623, 652, 677, 978, 1024, 1025, 1102, 1142, 1171, 1261, 1303, 1317], "area": [69, 98, 136, 222, 224, 229, 233, 234, 235, 236, 237, 289, 291, 296, 300, 301, 302, 303, 322, 324, 332, 333, 337, 338, 339, 340, 359, 361, 369, 370, 374, 375, 376, 377, 511, 523, 530, 624, 653, 720, 808, 810, 815, 819, 820, 821, 822, 823, 875, 877, 882, 886, 887, 888, 889, 908, 910, 918, 919, 923, 924, 925, 926, 945, 947, 955, 956, 960, 961, 962, 963, 1096, 1108, 1115, 1143, 1172, 1236], "squar": [69, 98, 154, 445, 516, 519, 520, 521, 533, 624, 653, 741, 1029, 1101, 1104, 1105, 1106, 1118, 1143, 1172, 1216], "assumpt": [69, 98, 509, 521, 624, 653, 1094, 1106, 1143, 1172], "size": [69, 98, 128, 137, 138, 140, 145, 200, 225, 292, 325, 362, 426, 443, 445, 454, 465, 481, 484, 485, 494, 497, 521, 523, 525, 624, 653, 712, 721, 722, 724, 729, 785, 811, 878, 911, 948, 1020, 1022, 1023, 1024, 1025, 1027, 1029, 1039, 1050, 1066, 1069, 1070, 1079, 1082, 1106, 1108, 1110, 1143, 1172, 1210, 1226, 1235, 1243, 1258, 1279, 1292, 1296, 1298], "reset_gate_coord": [70, 99, 625, 654, 1144, 1173], "filter_transit": [70, 71, 99, 100, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 625, 626, 654, 655, 808, 815, 819, 820, 821, 822, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 1144, 1145, 1173, 1174], "With": [70, 71, 99, 100, 625, 626, 654, 655, 1144, 1145, 1173, 1174, 1303, 1304, 1305], "therefor": [70, 71, 99, 100, 521, 625, 626, 654, 655, 1106, 1144, 1145, 1173, 1174, 1307, 1313, 1314], "more": [70, 71, 76, 99, 100, 105, 138, 145, 154, 252, 398, 494, 497, 530, 625, 626, 631, 654, 655, 660, 722, 729, 741, 838, 986, 1021, 1024, 1025, 1030, 1079, 1082, 1115, 1144, 1145, 1150, 1173, 1174, 1179, 1218, 1219, 1261, 1272, 1277, 1288, 1289, 1303, 1307, 1311, 1312, 1313, 1314, 1317], "effici": [70, 71, 99, 100, 625, 626, 654, 655, 1024, 1144, 1145, 1173, 1174, 1217, 1303, 1307], "than": [70, 71, 99, 100, 138, 147, 151, 157, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 494, 511, 521, 625, 626, 654, 655, 722, 732, 737, 744, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1079, 1096, 1106, 1144, 1145, 1173, 1174, 1236, 1246, 1261, 1298, 1311, 1312, 1313, 1319], "through": [70, 71, 99, 100, 236, 302, 339, 376, 460, 479, 518, 625, 626, 654, 655, 822, 888, 925, 962, 1045, 1064, 1103, 1144, 1145, 1173, 1174, 1272, 1277, 1312, 1317], "pleas": [70, 99, 305, 342, 536, 625, 654, 891, 928, 1144, 1173, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "get_field": [71, 100, 626, 655, 1145, 1174, 1288, 1289, 1311], "check_uniform": [72, 101, 627, 656, 1146, 1175], "lookuperror": [72, 101, 627, 656, 1146, 1175], "except": [72, 101, 398, 627, 656, 986, 1003, 1146, 1175, 1309], "skip": [72, 101, 138, 139, 393, 445, 627, 656, 722, 723, 981, 1029, 1146, 1175, 1312, 1317], "nyquist_veloc": [72, 101, 138, 139, 400, 627, 656, 722, 723, 988, 1146, 1175, 1307, 1314], "slice": [73, 85, 102, 114, 248, 249, 254, 255, 256, 257, 268, 269, 270, 271, 628, 640, 657, 669, 834, 835, 840, 841, 842, 843, 854, 855, 856, 857, 1147, 1159, 1176, 1188, 1292, 1309, 1312, 1314], "out": [76, 105, 140, 143, 144, 151, 154, 155, 156, 199, 203, 396, 397, 398, 399, 400, 510, 519, 520, 535, 539, 550, 551, 567, 568, 631, 660, 724, 727, 728, 737, 741, 742, 743, 784, 788, 984, 985, 986, 987, 988, 1030, 1095, 1104, 1105, 1150, 1179, 1273, 1274, 1278, 1289, 1297, 1299, 1303, 1309, 1313, 1316, 1317, 1318], "_io": [76, 105, 631, 660, 1150, 1179], "textiowrapp": [76, 105, 631, 660, 1150, 1179], "stdout": [76, 105, 535, 631, 660, 1150, 1179], "encod": [76, 105, 399, 631, 660, 987, 1150, 1179, 1261], "utf": [76, 105, 631, 660, 1150, 1179], "print": [76, 105, 126, 150, 151, 239, 258, 394, 521, 535, 539, 550, 551, 567, 568, 631, 660, 710, 736, 737, 825, 844, 982, 1106, 1150, 1179, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1298, 1306, 1310, 1311, 1314], "compact": [76, 105, 631, 660, 1150, 1179], "f": [76, 105, 264, 370, 439, 631, 660, 850, 956, 1001, 1011, 1150, 1179, 1269, 1277, 1286, 1287, 1291, 1298, 1303, 1312, 1319], "minim": [76, 105, 496, 521, 530, 631, 660, 1081, 1106, 1115, 1150, 1179], "everyth": [76, 105, 631, 660, 1150, 1179, 1269, 1317], "output": [76, 105, 132, 398, 460, 479, 496, 497, 511, 518, 525, 527, 631, 660, 716, 986, 1022, 1030, 1045, 1064, 1081, 1082, 1096, 1103, 1110, 1112, 1150, 1179, 1228, 1261, 1303, 1311, 1313], "screen": [76, 105, 631, 660, 1150, 1179], "gate_": [79, 108, 634, 663, 1153, 1182], "iter": [81, 82, 83, 84, 85, 86, 87, 110, 111, 112, 113, 114, 115, 116, 148, 415, 439, 454, 469, 498, 521, 523, 636, 637, 638, 639, 640, 641, 642, 665, 666, 667, 668, 669, 670, 671, 733, 1001, 1011, 1039, 1054, 1083, 1106, 1108, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1226, 1314], "over": [83, 86, 87, 112, 115, 116, 135, 136, 137, 138, 142, 146, 154, 155, 199, 222, 224, 229, 233, 234, 235, 236, 253, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 415, 494, 511, 514, 527, 529, 638, 641, 642, 667, 670, 671, 719, 720, 721, 722, 726, 731, 741, 742, 784, 808, 810, 815, 819, 820, 821, 822, 839, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1079, 1096, 1099, 1112, 1114, 1157, 1160, 1161, 1186, 1189, 1190, 1225, 1235, 1272, 1298, 1300, 1303, 1306, 1312, 1314], "npuls": [88, 643, 1162, 1226, 1231, 1232, 1233, 1242, 1243, 1244, 1245], "doppler_veloc": [88, 496, 643, 1081, 1162], "doppler_frequ": [88, 643, 1162], "puls": [88, 148, 152, 163, 469, 470, 511, 643, 733, 738, 750, 1054, 1055, 1096, 1162, 1196, 1226, 1231, 1232, 1233, 1238, 1242, 1243, 1244, 1245, 1307], "npulses_max": [88, 643, 1162, 1196], "frequenc": [88, 127, 128, 400, 443, 454, 470, 471, 491, 499, 500, 501, 503, 504, 511, 512, 513, 521, 522, 523, 531, 643, 711, 712, 988, 1027, 1039, 1055, 1056, 1076, 1084, 1085, 1086, 1088, 1089, 1096, 1097, 1098, 1106, 1107, 1108, 1116, 1162, 1313], "ke": [117, 118, 119, 511, 591, 672, 673, 674, 1096, 1261], "kilomet": [117, 494, 672, 1022, 1079], "effect": [117, 118, 119, 152, 163, 173, 175, 182, 189, 194, 234, 491, 511, 672, 673, 674, 686, 688, 695, 702, 707, 738, 750, 758, 760, 767, 774, 779, 820, 1024, 1025, 1076, 1096, 1288, 1312], "scale": [117, 118, 119, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 399, 400, 461, 521, 522, 672, 673, 674, 808, 815, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 987, 988, 1024, 1025, 1046, 1106, 1107, 1280, 1313], "equat": [117, 521, 672, 1106, 1225], "28": [117, 672, 1298, 1300, 1303, 1312, 1317], "b": [117, 494, 522, 534, 672, 965, 1079, 1107, 1119, 1317], "doviak": [117, 443, 672, 1027], "zrnic": [117, 443, 489, 672, 1027, 1074], "sqrt": [117, 121, 511, 672, 676, 1096, 1288, 1289, 1300, 1312], "r": [117, 120, 121, 122, 123, 124, 137, 139, 150, 151, 212, 227, 228, 250, 266, 279, 294, 295, 312, 327, 328, 329, 330, 349, 364, 365, 366, 367, 449, 459, 463, 468, 469, 476, 482, 494, 497, 500, 503, 504, 505, 525, 527, 530, 533, 672, 675, 676, 677, 678, 679, 721, 723, 736, 737, 798, 813, 814, 836, 852, 865, 880, 881, 898, 913, 914, 915, 916, 935, 950, 951, 952, 953, 1034, 1044, 1048, 1053, 1054, 1061, 1067, 1079, 1082, 1085, 1088, 1089, 1090, 1110, 1112, 1115, 1118, 1225, 1226, 1236, 1268, 1280, 1288, 1289, 1298, 1317], "sin": [117, 121, 124, 509, 672, 676, 679, 1094], "theta_": [117, 672], "arcsin": [117, 121, 672, 676], "frac": [117, 672], "theta_a": [117, 672], "arc": [117, 672, 1228], "length": [117, 150, 151, 154, 155, 156, 157, 158, 159, 497, 511, 521, 525, 672, 736, 737, 741, 742, 743, 744, 745, 746, 1082, 1096, 1106, 1110, 1231, 1242, 1243], "6371": [117, 121, 124, 672, 676, 679, 1228, 1254], "weather": [117, 137, 152, 153, 160, 163, 459, 469, 476, 511, 521, 599, 672, 721, 738, 740, 747, 750, 1021, 1044, 1054, 1061, 1096, 1106, 1226, 1268, 1277, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "edit": [117, 672, 1317], "1993": [117, 443, 672, 1027], "21": [117, 672, 1261, 1311], "vector": [118, 122, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 464, 516, 518, 519, 520, 673, 677, 730, 739, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1049, 1101, 1103, 1104, 1105, 1214, 1216, 1217, 1312], "util": [118, 128, 137, 138, 234, 499, 673, 712, 721, 722, 820, 1084, 1120, 1269, 1280, 1293, 1296, 1298, 1311, 1312, 1313, 1317], "antenna_to_cartesian": [118, 673], "cartograph": [120, 121, 122, 123, 124, 342, 675, 676, 677, 678, 679, 928], "build": [120, 122, 123, 169, 173, 175, 182, 189, 194, 400, 535, 675, 677, 678, 682, 686, 688, 695, 702, 707, 754, 758, 760, 767, 774, 779, 988, 1303, 1316, 1317], "desir": [120, 122, 123, 173, 175, 182, 189, 194, 401, 476, 494, 533, 675, 677, 678, 686, 688, 695, 702, 707, 758, 760, 767, 774, 779, 990, 1061, 1079, 1118, 1192, 1232, 1233, 1245, 1255, 1256, 1296, 1310], "6370997": [121, 124, 676, 679], "rho": [121, 676, 1311], "arctan2": [121, 676, 1300, 1312], "snyder": [121, 124, 676, 679], "manual": [121, 124, 676, 679, 1303], "geolog": [121, 124, 676, 679], "survei": [121, 124, 676, 679], "profession": [121, 124, 676, 679], "paper": [121, 124, 497, 676, 679, 1082, 1303, 1317], "1395": [121, 124, 676, 679], "1987": [121, 124, 676, 679], "pp": [121, 124, 443, 459, 467, 476, 489, 676, 679, 1027, 1044, 1052, 1061, 1074], "191": [121, 124, 676, 679], "202": [121, 124, 676, 679], "find": [122, 138, 145, 154, 155, 510, 527, 677, 722, 729, 741, 742, 1014, 1021, 1024, 1025, 1095, 1112, 1227, 1269, 1312, 1319], "arcco": [124, 679], "no_altitude_transform": [125, 680], "wgs84": [125, 236, 302, 339, 376, 398, 680, 822, 888, 925, 962, 986], "ch1903": [125, 680], "lv03": [125, 680], "formula": [125, 443, 680, 1027], "formeln": [125, 680], "und": [125, 680], "konstanten": [125, 680], "f\u00fcr": [125, 680], "die": [125, 680], "berechnung": [125, 680], "der": [125, 680], "schweizerischen": [125, 680], "schiefachsigen": [125, 680], "zylinderprojekt": [125, 680], "zwischen": [125, 680], "koordinatensystemen": [125, 680], "chapter": [125, 680], "n\u00e4herungsl\u00f6sungen": [125, 680], "bundesamt": [125, 680], "landestopografi": [125, 680], "swisstopo": [125, 680], "admin": [125, 680, 1317], "ch": [125, 680, 1299, 1300], "oktob": [125, 680], "2008": [125, 525, 680, 1110, 1269], "input": [125, 150, 151, 398, 460, 468, 469, 479, 495, 496, 511, 517, 518, 523, 525, 680, 736, 737, 986, 1022, 1023, 1045, 1053, 1054, 1064, 1080, 1081, 1096, 1102, 1103, 1108, 1110, 1213, 1236, 1298, 1310, 1313], "46": [125, 236, 302, 339, 376, 680, 822, 888, 925, 962, 1296, 1313], "38": [125, 680, 1269], "87": [125, 680, 1021], "43": [125, 680, 1261], "49": [125, 680], "79": [125, 680], "650": [125, 680], "60": [125, 680, 1014, 1263, 1268, 1272, 1274, 1279, 1305, 1307, 1309, 1313], "result": [125, 135, 136, 137, 138, 139, 173, 175, 182, 189, 194, 222, 229, 232, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 380, 397, 401, 496, 519, 520, 525, 526, 528, 533, 534, 680, 686, 688, 695, 702, 707, 719, 720, 721, 722, 723, 739, 758, 760, 767, 774, 779, 808, 815, 818, 819, 820, 821, 822, 835, 841, 843, 853, 855, 857, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962, 968, 985, 990, 1022, 1023, 1025, 1030, 1081, 1104, 1105, 1110, 1111, 1113, 1118, 1119, 1215, 1226, 1252, 1269, 1299, 1303, 1309, 1312, 1317], "chy": [125, 680], "699": [125, 680], "999": [125, 137, 401, 680, 721, 990], "76": [125, 680], "700000": [125, 680], "chx": [125, 680], "99": [125, 450, 527, 680, 1035, 1112, 1277], "97": [125, 143, 144, 680, 727, 728, 1272, 1274, 1278, 1280, 1292, 1296, 1298, 1305], "100000": [125, 680, 1309, 1312], "chh": [125, 680], "600": [125, 680, 1305], "05": [125, 137, 531, 680, 721, 1024, 1025, 1116, 1292, 1296], "z_offset": [126, 710], "debug": [126, 137, 150, 151, 239, 258, 394, 521, 535, 710, 721, 736, 737, 825, 844, 982, 1106], "doc": [126, 127, 128, 142, 143, 146, 151, 154, 155, 156, 710, 711, 712, 726, 727, 731, 737, 741, 742, 743, 1263, 1269, 1303, 1316, 1317, 1319], "15": [126, 511, 521, 710, 1096, 1106, 1236, 1263, 1264, 1265, 1268, 1269, 1270, 1277, 1280, 1286, 1287, 1288, 1289, 1292, 1293, 1296, 1300, 1307, 1312, 1314, 1315], "fzl": [126, 127, 128, 142, 143, 146, 150, 151, 154, 155, 156, 710, 711, 712, 726, 727, 731, 736, 737, 741, 742, 743, 1313], "4000": [126, 150, 151, 710, 736, 737, 1309], "rhv_min": [126, 710], "ncp_min": [126, 710], "a_coef": [126, 128, 710, 712], "06": [126, 710], "beta": [126, 128, 499, 500, 501, 502, 503, 504, 710, 712, 730, 739, 1084, 1085, 1086, 1087, 1088, 1089], "refl_field": [126, 127, 128, 129, 133, 135, 136, 141, 142, 143, 144, 150, 151, 154, 155, 156, 158, 159, 197, 200, 201, 444, 470, 471, 477, 478, 491, 494, 495, 497, 500, 502, 503, 504, 505, 518, 519, 525, 530, 710, 711, 712, 713, 717, 719, 720, 725, 726, 727, 728, 735, 736, 737, 741, 742, 743, 745, 746, 782, 785, 786, 1025, 1028, 1055, 1056, 1062, 1063, 1076, 1079, 1080, 1082, 1085, 1087, 1088, 1089, 1090, 1103, 1104, 1110, 1115, 1263, 1298, 1299, 1313], "ncp_field": [126, 150, 201, 710, 735, 736, 786, 1263], "rhv_field": [126, 150, 197, 200, 201, 495, 518, 525, 710, 735, 736, 782, 785, 786, 1080, 1103, 1110, 1263, 1299, 1313], "spec_at_field": [126, 127, 128, 710, 711, 712], "corr_refl_field": [126, 127, 128, 135, 136, 710, 711, 712, 719, 720], "attenu": [126, 127, 128, 147, 148, 149, 163, 443, 471, 477, 499, 500, 503, 512, 710, 711, 712, 732, 733, 734, 750, 1027, 1056, 1062, 1084, 1085, 1088, 1097, 1261, 1262, 1265, 1266, 1299, 1303, 1315], "phi": [126, 128, 150, 710, 712, 736, 1263, 1311, 1313], "must": [126, 127, 128, 137, 333, 383, 387, 388, 393, 399, 443, 497, 511, 516, 521, 522, 523, 526, 710, 711, 712, 721, 919, 971, 975, 976, 981, 987, 1027, 1082, 1096, 1101, 1106, 1107, 1108, 1111, 1253, 1298, 1303, 1311, 1316, 1317], "copol_coeff": [126, 710, 1198, 1263, 1296, 1297, 1305], "norm_coherent_pow": [126, 710, 1198, 1263, 1305], "proc_dp_phase_shift": [126, 710, 1263, 1296, 1305], "reflectivity_horizont": [126, 137, 710, 721, 1198, 1263, 1272, 1277, 1279, 1283, 1285, 1286, 1287, 1291, 1293, 1296, 1297, 1298, 1305, 1306], "supress": [126, 239, 251, 252, 258, 333, 370, 710, 825, 837, 838, 844, 919, 956], "freez": [126, 127, 128, 142, 143, 146, 154, 155, 156, 459, 476, 497, 525, 526, 527, 710, 711, 712, 726, 727, 731, 741, 742, 743, 1044, 1061, 1082, 1110, 1111, 1112, 1313], "layer": [126, 127, 128, 129, 130, 135, 136, 142, 143, 146, 154, 155, 156, 199, 203, 398, 450, 497, 500, 515, 521, 525, 526, 527, 528, 710, 711, 712, 713, 714, 719, 720, 726, 727, 731, 741, 742, 743, 784, 788, 986, 1035, 1082, 1085, 1100, 1106, 1110, 1111, 1112, 1113, 1261, 1313], "combin": [126, 127, 128, 710, 711, 712, 1246, 1247, 1317], "normal": [126, 129, 135, 136, 150, 201, 222, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 428, 518, 710, 713, 719, 720, 735, 736, 786, 808, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 882, 886, 887, 888, 908, 918, 919, 923, 924, 925, 945, 955, 956, 960, 961, 962, 1103, 1248, 1288], "coher": [126, 150, 201, 710, 735, 736, 786], "zdr_field": [126, 127, 128, 132, 143, 144, 147, 148, 154, 155, 156, 197, 200, 453, 495, 518, 525, 710, 711, 712, 716, 727, 728, 732, 733, 741, 742, 743, 782, 785, 1038, 1080, 1103, 1110, 1299, 1313], "spec_at": [126, 127, 128, 710, 711, 712, 1263, 1299, 1313], "cor_z": [126, 127, 128, 710, 711, 712, 1263, 1299, 1313], "gu": [126, 128, 710, 712], "et": [126, 128, 132, 148, 469, 494, 518, 521, 525, 526, 530, 710, 712, 716, 733, 1054, 1079, 1103, 1106, 1110, 1111, 1115, 1298, 1313], "al": [126, 128, 132, 148, 469, 494, 518, 521, 522, 525, 526, 530, 710, 712, 716, 733, 1054, 1079, 1103, 1106, 1107, 1110, 1111, 1115, 1298, 1313], "heavi": [126, 128, 710, 712, 1236, 1280, 1288], "rain": [126, 128, 133, 141, 142, 143, 154, 155, 156, 158, 159, 450, 459, 476, 499, 500, 501, 502, 505, 530, 710, 712, 717, 725, 726, 727, 741, 742, 743, 745, 746, 1035, 1044, 1061, 1084, 1085, 1086, 1087, 1090, 1115, 1280, 1288, 1298, 1299, 1312, 1313], "jamc": [126, 128, 523, 710, 712, 1108], "2011": [126, 128, 710, 712, 1296], "50": [126, 128, 144, 454, 467, 490, 492, 518, 525, 710, 712, 728, 1039, 1052, 1075, 1077, 1103, 1110, 1210, 1274, 1292, 1296, 1299, 1309, 1311, 1312, 1313, 1314], "39": [126, 128, 710, 712, 1296], "58": [126, 128, 710, 712, 1275, 1296], "pia_coef": [127, 711], "pida_coef": [127, 711], "temp_field": [127, 128, 135, 136, 142, 143, 144, 146, 154, 155, 156, 203, 495, 518, 525, 527, 711, 712, 719, 720, 726, 727, 728, 731, 741, 742, 743, 788, 1080, 1103, 1110, 1112, 1299, 1313], "iso0_field": [127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 199, 495, 497, 518, 525, 526, 527, 711, 712, 719, 720, 726, 727, 731, 741, 742, 743, 784, 1080, 1082, 1103, 1110, 1111, 1112], "pia_field": [127, 128, 711, 712], "spec_diff_at_field": [127, 128, 711, 712], "pida_field": [127, 128, 711, 712], "corr_zdr_field": [127, 128, 711, 712], "temp_ref": [127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 495, 514, 518, 525, 527, 711, 712, 719, 720, 726, 727, 731, 741, 742, 743, 1080, 1099, 1103, 1110, 1112, 1299, 1313], "dependec": [127, 711], "comput": [127, 128, 129, 130, 132, 135, 136, 147, 148, 149, 153, 154, 155, 163, 200, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 511, 514, 518, 519, 520, 521, 522, 523, 525, 527, 529, 533, 711, 712, 713, 714, 716, 719, 720, 732, 733, 734, 739, 740, 741, 742, 750, 785, 1027, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1096, 1099, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1114, 1118, 1206, 1207, 1208, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1226, 1235, 1239, 1240, 1242, 1244, 1245, 1249, 1250, 1258, 1299, 1300, 1303, 1312], "depend": [127, 128, 167, 500, 511, 525, 536, 711, 712, 1022, 1025, 1085, 1096, 1110, 1242, 1311, 1317], "refl": [127, 128, 711, 712, 1286], "integr": [127, 128, 153, 163, 711, 712, 740, 750, 1313], "pida_coeff": [127, 711], "0c": [127, 128, 146, 711, 712, 731], "isotherm": [127, 128, 146, 711, 712, 731], "height_over_iso0": [127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 495, 518, 525, 527, 711, 712, 719, 720, 726, 727, 731, 741, 742, 743, 1080, 1103, 1110, 1112, 1310], "fixed_fzl": [127, 128, 143, 146, 154, 155, 156, 711, 712, 727, 731, 741, 742, 743], "pia_dict": [127, 128, 711, 712], "spec_diff_at": [127, 128, 711, 712, 1299, 1313], "pida_dict": [127, 128, 711, 712], "cor_zdr": [127, 128, 711, 712, 1299, 1313], "smooth_window_len": [128, 712], "smooth": [128, 145, 154, 155, 156, 157, 158, 159, 465, 481, 484, 485, 519, 520, 521, 712, 729, 741, 742, 743, 744, 745, 746, 1050, 1066, 1069, 1070, 1104, 1105, 1106, 1228, 1254, 1288, 1289, 1309], "window": [128, 137, 150, 151, 154, 155, 156, 157, 158, 159, 200, 445, 460, 465, 479, 481, 484, 485, 519, 520, 523, 525, 533, 712, 721, 736, 737, 741, 742, 743, 744, 745, 746, 785, 1029, 1045, 1050, 1064, 1066, 1069, 1070, 1104, 1105, 1108, 1110, 1118, 1210, 1231, 1235, 1242, 1243, 1252, 1258, 1303, 1317], "expon": [128, 150, 151, 499, 500, 501, 502, 503, 504, 712, 736, 737, 1084, 1085, 1086, 1087, 1088, 1089], "law": [128, 499, 500, 501, 502, 503, 504, 712, 1084, 1085, 1086, 1087, 1088, 1089], "ryzhkov": [128, 459, 467, 499, 525, 528, 712, 1044, 1052, 1084, 1110, 1113], "potenti": [128, 147, 499, 525, 712, 732, 1084, 1110], "rainfal": [128, 499, 500, 501, 502, 503, 504, 505, 521, 523, 712, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1106, 1108, 1313], "mitig": [128, 499, 712, 1084], "partial": [128, 499, 712, 1084], "beam": [128, 129, 153, 450, 499, 511, 712, 713, 740, 1020, 1024, 1025, 1035, 1084, 1096], "blockag": [128, 499, 712, 1084], "network": [128, 138, 392, 499, 712, 722, 980, 1084, 1312], "jaot": [128, 132, 712, 716], "2014": [128, 499, 522, 528, 712, 1084, 1107, 1113], "31": [128, 158, 390, 499, 519, 712, 745, 978, 1084, 1104, 1269, 1296, 1311], "599": [128, 499, 712, 1084], "619": [128, 499, 712, 1084], "ml_top": [129, 130, 450, 515, 713, 714, 1035, 1100], "3000": [129, 130, 450, 514, 530, 713, 714, 1035, 1099, 1115, 1305, 1309], "ml_thick": [129, 130, 450, 713, 714, 1035], "200": [129, 130, 135, 136, 443, 450, 527, 713, 714, 719, 720, 1027, 1035, 1112, 1226, 1244, 1245, 1311, 1317], "val_ml": [129, 130, 713, 714], "val_dr": [129, 130, 713, 714], "h_max": [129, 130, 135, 136, 450, 527, 713, 714, 719, 720, 1035, 1112], "6000": [129, 130, 135, 136, 450, 525, 527, 713, 714, 719, 720, 1035, 1110, 1112, 1305, 1309], "h_re": [129, 130, 135, 136, 450, 527, 713, 714, 719, 720, 1035, 1112], "max_weight": [129, 135, 136, 713, 719, 720], "vpr_theo_dict": [129, 713], "normalized_reflect": [129, 713], "appar": [129, 450, 713, 1035], "vpr": [129, 135, 136, 713, 719, 720, 1261, 1303], "melt": [129, 130, 135, 136, 142, 143, 154, 155, 156, 199, 203, 450, 497, 500, 515, 521, 525, 526, 527, 528, 713, 714, 719, 720, 726, 727, 741, 742, 743, 784, 788, 1035, 1082, 1085, 1100, 1106, 1110, 1111, 1112, 1113, 1236, 1261, 1280, 1298, 1299, 1313], "top": [129, 130, 135, 136, 152, 163, 258, 333, 450, 497, 506, 507, 515, 524, 525, 526, 527, 713, 714, 719, 720, 738, 750, 844, 919, 1025, 1035, 1082, 1091, 1092, 1100, 1109, 1110, 1111, 1112, 1277, 1296, 1309, 1317], "asl": [129, 130, 450, 713, 714, 1035], "thick": [129, 130, 135, 136, 142, 143, 146, 154, 155, 156, 199, 203, 450, 527, 713, 714, 719, 720, 726, 727, 731, 741, 742, 743, 784, 788, 1035, 1112], "peak": [129, 130, 135, 136, 450, 525, 527, 713, 714, 719, 720, 1035, 1110, 1112, 1225, 1261, 1307], "decreas": [129, 130, 135, 136, 495, 514, 518, 713, 714, 719, 720, 1080, 1099, 1103], "ratio": [129, 130, 135, 136, 144, 200, 201, 202, 237, 303, 340, 377, 444, 452, 453, 511, 713, 714, 719, 720, 728, 735, 785, 786, 787, 823, 889, 926, 963, 1028, 1037, 1038, 1096, 1313, 1314], "theoret": [129, 135, 136, 163, 450, 531, 713, 719, 720, 750, 1021, 1035, 1116], "multipli": [129, 450, 460, 494, 527, 713, 965, 1035, 1045, 1079, 1112, 1298, 1305], "radar_out": [129, 450, 713, 1035], "conta": [129, 130, 450, 497, 525, 526, 527, 537, 713, 714, 1035, 1082, 1110, 1111, 1112], "ideal": [130, 714], "val_theo_dict": [130, 714], "bottom": [130, 331, 333, 368, 450, 497, 515, 525, 526, 527, 714, 917, 919, 954, 1035, 1082, 1100, 1110, 1111, 1112, 1277, 1279], "bia": [131, 136, 143, 144, 154, 155, 164, 715, 720, 727, 728, 739, 741, 742, 751], "magnitud": [131, 521, 715, 1106, 1300, 1314], "corrected_field": [131, 134, 715, 718], "urhohv_field": [132, 716], "snr_field": [132, 144, 202, 444, 478, 716, 728, 787, 1028, 1063], "nh_field": [132, 716], "nv_field": [132, 716], "rhohv_field": [132, 142, 143, 144, 154, 155, 156, 450, 453, 461, 497, 716, 726, 727, 728, 741, 742, 743, 1035, 1038, 1046, 1082], "eq": [132, 716, 1286], "2006": [132, 716, 1269], "subtract": [132, 449, 458, 465, 466, 473, 474, 475, 481, 484, 485, 486, 494, 716, 1034, 1043, 1050, 1051, 1058, 1059, 1060, 1066, 1069, 1070, 1071, 1079], "uncorrect": [132, 716], "snr": [132, 144, 202, 444, 478, 716, 728, 787, 1028, 1063, 1233, 1245, 1313], "channel": [132, 164, 398, 456, 462, 475, 487, 488, 493, 716, 751, 986, 1041, 1047, 1060, 1072, 1073, 1078], "meteo": [132, 135, 136, 525, 527, 716, 719, 720, 1110, 1112], "franc": [132, 135, 136, 527, 716, 719, 720, 1112], "23": [132, 716, 1300], "1340": [132, 716], "1356": [132, 716], "ind_rmin": [133, 141, 142, 143, 144, 158, 159, 468, 717, 725, 726, 727, 728, 745, 746, 1053], "10": [133, 140, 141, 142, 143, 144, 148, 150, 151, 158, 159, 160, 163, 169, 202, 204, 236, 302, 339, 376, 443, 454, 459, 469, 489, 494, 497, 508, 518, 522, 523, 525, 527, 682, 717, 724, 725, 726, 727, 728, 733, 736, 737, 745, 746, 747, 750, 754, 787, 789, 822, 888, 925, 962, 1021, 1025, 1027, 1039, 1044, 1054, 1074, 1079, 1082, 1093, 1103, 1107, 1108, 1110, 1112, 1226, 1236, 1264, 1269, 1272, 1273, 1277, 1280, 1281, 1283, 1285, 1288, 1289, 1292, 1298, 1300, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1317], "ind_rmax": [133, 141, 142, 143, 144, 158, 159, 717, 725, 726, 727, 728, 745, 746], "500": [133, 141, 142, 143, 144, 158, 159, 525, 717, 725, 726, 727, 728, 745, 746, 1014, 1110, 1272, 1278, 1282, 1311, 1312], "min_rcon": [133, 141, 154, 155, 158, 159, 717, 725, 741, 742, 745, 746], "11": [133, 141, 157, 158, 159, 236, 302, 339, 376, 451, 494, 519, 520, 717, 725, 744, 745, 746, 822, 888, 925, 962, 1036, 1079, 1104, 1105, 1252, 1263, 1265, 1269, 1310, 1314, 1315], "zmin": [133, 141, 142, 143, 144, 158, 159, 717, 725, 726, 727, 728, 745, 746, 1312], "20": [133, 135, 136, 141, 142, 143, 147, 154, 155, 156, 158, 159, 197, 200, 201, 450, 525, 527, 528, 717, 719, 720, 725, 726, 727, 732, 735, 741, 742, 743, 745, 746, 782, 785, 786, 1035, 1110, 1112, 1113, 1260, 1268, 1269, 1272, 1278, 1279, 1280, 1283, 1285, 1286, 1287, 1288, 1289, 1291, 1297, 1298, 1305, 1309, 1312, 1314], "zmax": [133, 141, 142, 143, 144, 158, 159, 717, 725, 726, 727, 728, 745, 746, 1312], "40": [133, 139, 141, 142, 158, 159, 264, 454, 519, 717, 723, 725, 726, 745, 746, 850, 1039, 1104, 1231, 1264, 1274, 1279, 1283, 1285, 1288, 1298, 1311, 1312, 1313], "psidp_field": [133, 158, 159, 521, 522, 523, 717, 745, 746, 1106, 1107, 1108, 1299, 1313], "public": [133, 141, 717, 725, 1260, 1305, 1306, 1307, 1309, 1310, 1311, 1314], "min": [133, 135, 136, 141, 142, 143, 144, 147, 158, 159, 197, 224, 291, 324, 361, 468, 525, 717, 719, 720, 725, 726, 727, 728, 732, 745, 746, 782, 810, 877, 910, 947, 1053, 1110, 1238, 1300, 1312], "max": [133, 135, 136, 141, 142, 143, 144, 154, 155, 158, 159, 197, 224, 291, 324, 361, 398, 468, 497, 525, 717, 719, 720, 725, 726, 727, 728, 741, 742, 745, 746, 782, 810, 877, 910, 947, 986, 1053, 1082, 1110, 1238, 1268, 1272, 1277, 1278, 1283, 1291, 1300, 1312], "look": [133, 141, 142, 143, 144, 147, 154, 155, 156, 158, 159, 161, 162, 467, 468, 525, 528, 717, 725, 726, 727, 728, 732, 741, 742, 743, 745, 746, 748, 749, 1030, 1052, 1053, 1110, 1113, 1227, 1242, 1244, 1245, 1268, 1269, 1272, 1279, 1303, 1305, 1307, 1309, 1312, 1313, 1314], "continu": [133, 137, 139, 141, 150, 158, 159, 526, 717, 721, 723, 725, 736, 745, 746, 1111], "consecut": [133, 141, 154, 155, 158, 159, 525, 717, 725, 741, 742, 745, 746, 1110, 1226], "cell": [133, 141, 158, 159, 717, 725, 745, 746, 1288], "phidp_dict": [133, 158, 159, 455, 456, 717, 745, 746, 1040, 1041], "vis_field": [134, 204, 718, 789], "nvalid_min": [135, 136, 459, 467, 476, 489, 527, 719, 720, 1044, 1052, 1061, 1074, 1112, 1213, 1215], "angle_min": [135, 136, 719, 720], "angle_max": [135, 136, 719, 720], "ml_thickness_min": [135, 136, 527, 719, 720, 1112], "ml_thickness_max": [135, 136, 527, 719, 720, 1112], "800": [135, 136, 148, 469, 719, 720, 733, 1054, 1226], "ml_thickness_step": [135, 136, 527, 719, 720, 1112], "iso0_max": [135, 136, 527, 719, 720, 1112], "5000": [135, 136, 719, 720, 1300, 1309, 1312], "ml_top_diff_max": [135, 136, 527, 719, 720, 1112], "ml_top_step": [135, 136, 527, 719, 720, 1112], "ml_peak_min": [135, 136, 719, 720], "ml_peak_max": [135, 136, 719, 720], "ml_peak_step": [135, 136, 719, 720], "dr_min": [135, 136, 719, 720], "dr_max": [135, 136, 719, 720], "dr_step": [135, 136, 719, 720], "dr_default": [135, 136, 719, 720], "dr_alt": [135, 136, 719, 720], "h_corr_max": [135, 136, 719, 720], "15000": [135, 136, 459, 489, 719, 720, 1044, 1074, 1305, 1309], "rmin_ob": [135, 136, 719, 720], "rmax_ob": [135, 136, 719, 720], "150000": [135, 136, 719, 720], "filter_param": [135, 719], "weight_mem": [135, 136, 719, 720], "75": [135, 136, 169, 237, 303, 340, 377, 398, 454, 494, 518, 525, 529, 682, 719, 720, 754, 823, 889, 926, 963, 986, 1039, 1079, 1103, 1110, 1114, 1272, 1288, 1298, 1305, 1309, 1310, 1311], "vpr_theo_dict_mem": [135, 136, 719, 720], "radar_mem_list": [135, 136, 719, 720], "lin_refl_field": [135, 136, 719, 720], "norm_refl_field": [135, 136, 719, 720], "corr_field": [135, 136, 719, 720], "averag": [135, 136, 138, 154, 155, 459, 463, 467, 476, 482, 489, 494, 511, 527, 533, 719, 720, 722, 741, 742, 965, 1044, 1048, 1052, 1061, 1067, 1074, 1079, 1096, 1112, 1118, 1213, 1215, 1225, 1239, 1261, 1298, 1300, 1312], "explor": [135, 136, 459, 527, 719, 720, 1044, 1112], "iso": [135, 136, 514, 527, 529, 719, 720, 1099, 1112, 1114], "proper": [135, 136, 719, 720, 1316], "could": [135, 136, 450, 719, 720, 1035, 1217, 1269, 1317], "abl": [135, 136, 143, 144, 719, 720, 727, 728, 1303, 1316], "dr": [135, 136, 511, 521, 719, 720, 1096, 1106], "masl": [135, 136, 515, 527, 719, 720, 1100, 1112], "weight": [135, 136, 154, 454, 476, 518, 521, 527, 533, 719, 720, 741, 1022, 1023, 1024, 1025, 1039, 1061, 1103, 1106, 1112, 1118, 1309, 1312], "compar": [135, 136, 137, 173, 454, 497, 527, 686, 719, 720, 721, 758, 1030, 1039, 1082, 1112, 1210, 1226, 1261, 1266, 1271, 1275, 1277, 1298, 1312, 1313, 1315, 1317], "previou": [135, 136, 137, 333, 370, 496, 525, 719, 720, 721, 919, 956, 1081, 1110], "shape": [135, 175, 189, 388, 524, 688, 702, 719, 760, 774, 976, 1109, 1248, 1298, 1305, 1309, 1310, 1314, 1317], "past": [135, 136, 527, 719, 720, 1112, 1317], "refl_corr_dict": [135, 136, 719, 720], "corr_field_dict": [135, 136, 719, 720], "vpr_theo_dict_filt": [135, 136, 719, 720], "radar_rhi": [135, 136, 719, 720, 1213, 1218], "correct_iso0": [136, 720], "spatialis": [136, 720], "last_radar": [137, 721], "sonde_profil": [137, 721], "filt": [137, 721], "rsl_badval": [137, 721], "131072": [137, 721], "keep_origin": [137, 138, 139, 721, 722, 723], "set_limit": [137, 138, 139, 721, 722, 723, 1280, 1281, 1282, 1284, 1286, 1287, 1288, 1289, 1291], "vel_field": [137, 138, 139, 197, 445, 509, 534, 721, 722, 723, 782, 1029, 1094, 1119, 1307], "corr_vel_field": [137, 138, 139, 721, 722, 723], "last_vel_field": [137, 721], "max_shear": [137, 721], "sign": [137, 508, 533, 534, 721, 1093, 1118, 1119, 1261, 1288, 1289, 1312], "dealia": [137, 138, 139, 496, 721, 722, 723, 1081, 1261, 1262, 1265, 1266, 1307, 1312, 1315], "4dd": [137, 721, 1261], "univers": [137, 395, 505, 721, 983, 1090, 1303], "washington": [137, 721], "sound": [137, 508, 533, 534, 721, 1093, 1118, 1119], "For": [137, 248, 254, 256, 268, 270, 388, 398, 519, 520, 521, 721, 834, 840, 842, 854, 856, 976, 986, 1024, 1104, 1105, 1106, 1268, 1272, 1299, 1310, 1314, 1317, 1319], "best": [137, 721], "argument": [137, 138, 139, 222, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 289, 296, 300, 301, 302, 322, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 366, 367, 368, 369, 370, 371, 374, 375, 376, 390, 392, 400, 401, 522, 523, 721, 722, 723, 808, 815, 819, 820, 821, 822, 834, 835, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 857, 875, 882, 886, 887, 888, 908, 915, 916, 917, 918, 919, 920, 923, 924, 925, 945, 952, 953, 954, 955, 956, 957, 960, 961, 962, 978, 980, 988, 990, 1021, 1025, 1107, 1108, 1261, 1317], "_fourdd_interfac": [137, 721], "fourdd_dealia": [137, 721], "fine": [137, 721], "tune": [137, 721, 1298], "behavior": [137, 333, 388, 401, 721, 919, 976, 990], "fourdd": [137, 721], "dealias": [137, 138, 139, 496, 721, 722, 723, 1081, 1264, 1268, 1303, 1304, 1311, 1317], "mean_doppler_veloc": [137, 721, 1291, 1296, 1305], "successfulli": [137, 721], "greatli": [137, 721], "improv": [137, 522, 523, 721, 1107, 1108, 1236, 1261, 1280], "final": [137, 454, 498, 522, 523, 721, 1039, 1083, 1107, 1108, 1298, 1312], "horizontalwindprofil": [137, 382, 383, 534, 721, 970, 971, 1119, 1253, 1317], "sond": [137, 138, 382, 383, 510, 721, 722, 970, 971, 1095, 1264], "moment_based_gate_filt": [137, 138, 139, 721, 722, 723, 1025], "bergen": [137, 721], "alber": [137, 721], "bad": [137, 497, 521, 522, 523, 530, 721, 1082, 1106, 1107, 1108, 1115, 1312], "rsl": [137, 381, 393, 394, 721, 969, 981, 982, 1261, 1303, 1316], "procedur": [137, 138, 139, 721, 722, 723], "fail": [137, 138, 139, 388, 398, 721, 722, 723, 976, 986, 1317], "element": [137, 138, 139, 140, 145, 169, 400, 524, 682, 721, 722, 723, 724, 729, 754, 988, 1022, 1023, 1024, 1025, 1109, 1239, 1240, 1249, 1250, 1312], "maxshear": [137, 721], "shear": [137, 506, 507, 721, 1091, 1092], "incorpor": [137, 721, 1298], "toward": [137, 508, 533, 534, 721, 1093, 1118, 1119], "neg": [137, 222, 233, 289, 300, 322, 337, 359, 374, 496, 508, 521, 533, 534, 721, 808, 819, 875, 886, 908, 923, 945, 960, 1081, 1093, 1106, 1118, 1119, 1261, 1277, 1312], "compthresh": [137, 721], "fraction": [137, 721, 1022, 1023, 1298, 1314], "threshold": [137, 140, 145, 149, 197, 199, 200, 201, 202, 203, 204, 454, 494, 497, 498, 500, 503, 504, 508, 721, 724, 729, 734, 735, 782, 784, 785, 786, 787, 788, 789, 965, 1039, 1079, 1082, 1083, 1085, 1088, 1089, 1093, 1225, 1226, 1231, 1232, 1233, 1236, 1242, 1243, 1244, 1245, 1298, 1307, 1310], "mark": [137, 169, 173, 182, 194, 682, 686, 695, 707, 721, 754, 758, 767, 779], "begin": [137, 138, 139, 150, 151, 169, 207, 209, 229, 233, 274, 276, 296, 300, 307, 309, 332, 337, 344, 346, 369, 374, 388, 389, 392, 394, 682, 721, 722, 723, 736, 737, 754, 793, 795, 815, 819, 860, 862, 882, 886, 893, 895, 918, 923, 930, 932, 955, 960, 976, 977, 980, 982], "unfold": [137, 138, 150, 151, 521, 721, 722, 736, 737, 1106, 1312], "compthresh2": [137, 721], "thresh": [137, 500, 503, 504, 721, 1085, 1088, 1089, 1313], "adjac": [137, 721], "count": [137, 721, 1272, 1307, 1314], "against": [137, 173, 686, 721, 758, 1288], "question": [137, 721, 966, 1025], "ckval": [137, 721], "absolut": [137, 233, 300, 337, 374, 721, 819, 886, 923, 960, 1210, 1246], "below": [137, 140, 146, 150, 151, 173, 187, 197, 199, 200, 201, 202, 203, 204, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 494, 500, 503, 504, 521, 527, 686, 700, 721, 724, 731, 735, 736, 737, 758, 772, 782, 784, 785, 786, 787, 788, 789, 808, 815, 818, 819, 820, 821, 822, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962, 1024, 1025, 1079, 1085, 1088, 1089, 1106, 1112, 1225, 1277, 1298, 1305, 1307, 1310, 1311, 1313, 1318], "stdthresh": [137, 721], "deviat": [137, 147, 148, 164, 468, 508, 721, 732, 733, 739, 751, 1053, 1093, 1208, 1209, 1235, 1240, 1307], "portion": [137, 721, 1309], "epsilon": [137, 721], "miss": [137, 497, 521, 522, 523, 530, 721, 1082, 1106, 1107, 1108, 1115, 1261, 1269], "maxcount": [137, 721], "allow": [137, 140, 145, 221, 288, 321, 358, 454, 497, 508, 525, 721, 724, 729, 807, 874, 907, 944, 1014, 1039, 1082, 1093, 1110, 1272, 1314, 1319], "pass2": [137, 721], "retain": [137, 138, 139, 197, 199, 200, 201, 202, 203, 204, 721, 722, 723, 735, 782, 784, 785, 786, 787, 788, 789, 1259], "rm": [137, 721], "left": [137, 331, 333, 368, 442, 496, 515, 721, 917, 919, 954, 1081, 1100, 1226, 1277, 1279, 1313], "proxim": [137, 721], "side": [137, 721], "doubl": [137, 398, 721, 986, 1298], "captur": [137, 721], "suffici": [137, 497, 721, 1082], "good": [137, 138, 721, 722, 1313], "mingood": [137, 721], "ba_mincount": [137, 721], "neighbor": [137, 390, 721, 978, 1025, 1309], "ba_edgecount": [137, 721], "usuccess": [137, 721], "radialvelvolum": [137, 721], "lastvelvolum": [137, 721], "unfoldedvolum": [137, 721], "sondvolum": [137, 721], "vr_corr": [137, 721], "due": [137, 153, 471, 477, 721, 740, 1030, 1056, 1062, 1246, 1272, 1307, 1313, 1316, 1319], "call": [137, 140, 168, 221, 222, 224, 229, 233, 234, 235, 236, 251, 252, 288, 289, 291, 296, 300, 301, 302, 321, 322, 324, 332, 333, 337, 338, 339, 358, 359, 361, 369, 370, 374, 375, 376, 393, 398, 401, 414, 721, 724, 807, 808, 810, 815, 819, 820, 821, 822, 837, 838, 874, 875, 877, 882, 886, 887, 888, 907, 908, 910, 918, 919, 923, 924, 925, 944, 945, 947, 955, 956, 960, 961, 962, 981, 986, 990, 1230, 1307, 1311, 1314, 1317, 1319], "long": [137, 158, 497, 519, 721, 745, 1082, 1104, 1306, 1314], "n": [137, 157, 211, 236, 278, 302, 311, 339, 348, 376, 511, 518, 721, 744, 797, 822, 864, 888, 897, 925, 934, 962, 1096, 1103, 1210, 1231, 1268, 1272, 1280, 1291, 1293, 1296, 1298, 1302, 1303, 1317, 1319], "jame": [137, 721], "houz": [137, 494, 530, 721, 965, 1079, 1115, 1298], "jr": [137, 494, 530, 721, 1079, 1115, 1298], "four": [137, 390, 391, 393, 721, 978, 979, 981, 1312], "dealis": [137, 721], "scheme": [137, 494, 521, 721, 965, 1021, 1079, 1106, 1298], "2001": [137, 721], "18": [137, 449, 721, 1034, 1278, 1289, 1312], "1674": [137, 721], "ref_vel_field": [138, 722], "interval_split": [138, 722], "interval_limit": [138, 722], "skip_between_rai": [138, 722], "100": [138, 140, 201, 225, 230, 236, 292, 297, 302, 325, 339, 362, 376, 400, 454, 498, 511, 527, 534, 722, 724, 735, 786, 811, 816, 822, 878, 883, 888, 911, 925, 948, 962, 988, 1025, 1039, 1083, 1096, 1112, 1119, 1274, 1278, 1288, 1289, 1300, 1311, 1312], "skip_along_rai": [138, 722], "nyquist_vel": [138, 139, 722, 723, 1307], "check_nyquist_uniform": [138, 139, 445, 722, 723, 1029], "rays_wrap_around": [138, 139, 722, 723], "region": [138, 151, 264, 333, 370, 722, 737, 850, 919, 956, 1030, 1226, 1231, 1236, 1238, 1242, 1243, 1262, 1265, 1266, 1268, 1280, 1298, 1310, 1312, 1315, 1317], "similar": [138, 454, 722, 1039, 1272, 1309, 1312], "merg": [138, 173, 175, 182, 189, 194, 383, 686, 688, 695, 702, 707, 722, 758, 760, 767, 774, 779, 971, 1261, 1312, 1317], "pair": [138, 390, 401, 436, 722, 978, 990, 998, 1003, 1009, 1305, 1312], "accomplish": [138, 394, 722, 982], "problem": [138, 150, 151, 305, 342, 722, 736, 737, 891, 928, 1025, 1269], "reduct": [138, 722], "anchor": [138, 722], "onc": [138, 722, 1298, 1316, 1319], "complet": [138, 722], "simul": [138, 511, 722, 1096, 1253, 1303], "simulated_vel_from_profil": [138, 722, 1317], "segment": [138, 150, 154, 155, 329, 330, 366, 367, 722, 736, 741, 742, 915, 916, 952, 953], "split": [138, 722, 1236], "interv": [138, 176, 181, 190, 195, 197, 201, 689, 694, 703, 708, 722, 735, 761, 766, 775, 780, 782, 786, 1210, 1239, 1240], "larger": [138, 511, 722, 1096, 1246, 1298], "longer": [138, 154, 722, 741, 1303, 1316], "better": [138, 225, 230, 292, 297, 325, 334, 362, 371, 511, 722, 811, 816, 878, 883, 911, 920, 948, 957, 1096, 1261, 1307, 1312], "seem": [138, 722], "compromis": [138, 722], "artifact": [138, 722, 1307, 1309], "free": [138, 722, 1303], "cover": [138, 722], "entir": [138, 139, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 722, 723, 808, 815, 819, 820, 821, 835, 841, 843, 853, 855, 857, 875, 882, 886, 887, 908, 918, 919, 923, 924, 945, 955, 956, 960, 961, 1025, 1255, 1256], "join": [138, 722, 1131], "gap": [138, 140, 145, 722, 724, 729, 1309], "connect": [138, 139, 722, 723], "disabl": [138, 139, 197, 199, 200, 201, 202, 203, 204, 722, 723, 735, 782, 784, 785, 786, 787, 788, 789, 1311], "across": [138, 722, 1297], "individu": [138, 139, 722, 723, 1025], "ident": [138, 139, 387, 722, 723, 975, 1024], "de": [138, 139, 368, 722, 723, 954, 1203, 1204], "alias": [138, 139, 496, 722, 723, 1081, 1203, 1204, 1307, 1312, 1314], "corr_vel": [138, 139, 722, 723, 1312], "unwrap_unit": [139, 723], "skip_check": [139, 723], "multi": [139, 533, 723, 1118, 1261], "unwrap": [139, 150, 151, 723, 736, 737], "independ": [139, 723], "often": [139, 723, 1030], "give": [139, 154, 398, 496, 723, 741, 986, 1081, 1226, 1261, 1303, 1307, 1310], "superior": [139, 723], "lower": [139, 249, 251, 252, 253, 255, 257, 267, 269, 271, 442, 497, 723, 835, 837, 838, 839, 841, 843, 853, 855, 857, 1082, 1273, 1274, 1312], "contamin": [139, 525, 530, 723, 1110, 1115, 1231], "clutter": [139, 452, 511, 519, 520, 723, 1037, 1096, 1104, 1105, 1226, 1232, 1244, 1307, 1310, 1311], "poor": [139, 723], "verif": [139, 723], "appropi": [139, 221, 288, 321, 358, 723, 807, 874, 907, 944, 1225], "offer": [139, 723], "extrem": [139, 248, 723, 834, 1313], "miguel": [139, 723], "arevallilo": [139, 723], "herraez": [139, 723], "david": [139, 723], "burton": [139, 723], "michael": [139, 723], "lalor": [139, 723], "munther": [139, 723], "gdeisat": [139, 723], "fast": [139, 723, 1313], "two": [139, 158, 248, 249, 400, 488, 490, 494, 516, 517, 530, 723, 745, 834, 835, 988, 1021, 1073, 1075, 1079, 1101, 1102, 1115, 1214, 1216, 1246, 1247, 1249, 1250, 1266, 1271, 1275, 1276, 1278, 1293, 1294, 1306, 1309, 1311, 1312, 1315, 1317], "sort": [139, 550, 723, 1312], "reliabl": [139, 723, 1312], "noncontinu": [139, 723], "optic": [139, 511, 723, 1096], "vol": [139, 449, 459, 467, 476, 489, 723, 1034, 1044, 1052, 1061, 1074, 1261], "41": [139, 723, 1296, 1300, 1309, 1312], "2002": [139, 723], "7437": [139, 723], "abdul": [139, 723], "rahman": [139, 723], "osten": [139, 723], "gorecki": [139, 723], "l": [139, 150, 151, 226, 230, 231, 264, 293, 297, 298, 326, 335, 363, 370, 372, 723, 736, 737, 812, 816, 817, 850, 879, 883, 884, 912, 921, 949, 956, 958, 1236, 1280], "novak": [139, 723], "ed": [139, 723], "metrologi": [139, 723], "2005": [139, 494, 723, 1079, 1298], "32": [139, 476, 723, 1061, 1226, 1277, 1281, 1282, 1283, 1293, 1296, 1300, 1312, 1313, 1314], "intern": [139, 454, 497, 723, 1039, 1082], "societi": [139, 723, 1030], "photon": [139, 723], "label_dict": [140, 145, 724, 729], "delta": [140, 145, 522, 724, 729, 1107], "despeckl": [140, 724], "identifi": [140, 145, 494, 496, 724, 729, 965, 1079, 1081, 1225, 1226, 1280, 1298, 1310], "small": [140, 145, 494, 496, 497, 509, 530, 724, 729, 1079, 1081, 1082, 1094, 1115, 1244, 1272, 1288], "investig": [140, 145, 528, 724, 729, 1113, 1268], "well": [140, 197, 199, 200, 201, 202, 203, 204, 370, 390, 392, 496, 536, 724, 735, 782, 784, 785, 786, 787, 788, 789, 956, 978, 980, 1025, 1081, 1269, 1278, 1303, 1309, 1310, 1311, 1312, 1313], "variou": [140, 169, 197, 198, 199, 200, 201, 202, 203, 204, 682, 724, 735, 754, 782, 783, 784, 785, 786, 787, 788, 789, 1230, 1261, 1266, 1295, 1303], "scipi": [140, 145, 460, 479, 521, 724, 729, 1045, 1064, 1106, 1253, 1261, 1288, 1289, 1303, 1316, 1317, 1319], "core": [140, 145, 398, 494, 522, 523, 724, 729, 965, 986, 1014, 1025, 1079, 1107, 1108, 1230, 1298, 1311, 1313, 1317], "queri": [140, 145, 724, 729, 1025], "speckl": [140, 724, 1298], "find_object": [140, 724], "tupl": [140, 145, 222, 224, 227, 228, 229, 232, 233, 234, 235, 236, 238, 249, 251, 255, 257, 267, 269, 271, 289, 291, 294, 295, 296, 299, 300, 301, 302, 304, 322, 324, 327, 328, 332, 333, 336, 337, 338, 339, 341, 359, 361, 364, 365, 369, 370, 373, 374, 375, 376, 378, 436, 454, 516, 517, 724, 729, 808, 810, 813, 814, 815, 818, 819, 820, 821, 822, 824, 835, 837, 841, 843, 853, 855, 857, 875, 877, 880, 881, 882, 885, 886, 887, 888, 890, 908, 910, 913, 914, 918, 919, 922, 923, 924, 925, 927, 945, 947, 950, 951, 955, 956, 959, 960, 961, 962, 964, 998, 1009, 1021, 1022, 1023, 1025, 1039, 1101, 1102, 1193, 1248], "contigu": [140, 145, 724, 729], "perman": [140, 724], "altern": [141, 725, 1025, 1030, 1298, 1312], "suitabl": [141, 142, 143, 144, 207, 243, 259, 274, 307, 344, 527, 725, 726, 727, 728, 793, 829, 845, 860, 893, 930, 1112], "phidp0_dict": [141, 725], "first_gates_dict": [141, 725], "700": [142, 143, 154, 155, 156, 527, 726, 727, 741, 742, 743, 1112], "quantil": [142, 454, 498, 726, 1039, 1083], "rhohv_rain_dict": [142, 726], "rhohvmin": [143, 144, 727, 728], "phidpmax": [143, 144, 727, 728], "elmax": [143, 144, 197, 525, 727, 728, 782, 1110, 1238], "undesir": [143, 144, 198, 199, 200, 201, 202, 203, 204, 727, 728, 735, 783, 784, 785, 786, 787, 788, 789, 1025], "moder": [143, 727], "zdr_prec_dict": [143, 727], "compli": [143, 144, 727, 728, 1238], "30": [144, 148, 150, 151, 454, 467, 469, 476, 494, 525, 728, 733, 736, 737, 1039, 1052, 1054, 1061, 1079, 1110, 1226, 1272, 1279, 1283, 1285, 1298, 1307, 1312], "snrmin": [144, 728], "snrmax": [144, 728], "kept_valu": [144, 198, 728, 783], "kdpmax": [144, 728], "tempmin": [144, 728], "tempmax": [144, 728], "hydro_field": [144, 154, 155, 156, 500, 518, 526, 728, 741, 742, 743, 1085, 1103, 1111, 1313], "kdp_field": [144, 150, 151, 155, 495, 500, 501, 503, 504, 518, 519, 520, 521, 522, 523, 728, 736, 737, 742, 1080, 1085, 1086, 1088, 1089, 1103, 1104, 1105, 1106, 1107, 1108, 1299, 1313], "snow": [144, 450, 494, 500, 728, 1035, 1079, 1085, 1236, 1280, 1298, 1299, 1313], "hydrometeor": [144, 154, 155, 156, 198, 398, 454, 495, 498, 500, 518, 526, 531, 728, 741, 742, 743, 783, 986, 1039, 1080, 1083, 1085, 1103, 1111, 1116, 1266, 1295, 1301, 1307, 1311, 1315], "classif": [144, 154, 155, 156, 198, 494, 495, 500, 518, 526, 530, 728, 741, 742, 743, 783, 965, 1079, 1080, 1085, 1103, 1111, 1115, 1266, 1295, 1301, 1311, 1315], "differneti": [144, 728], "zdr_snow_dict": [144, 728], "label": [145, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 294, 295, 296, 299, 300, 301, 302, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 327, 328, 331, 332, 333, 336, 337, 338, 339, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 368, 369, 370, 373, 374, 375, 376, 454, 729, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 813, 814, 815, 818, 819, 820, 821, 822, 833, 835, 837, 838, 839, 841, 843, 851, 853, 855, 857, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 880, 881, 882, 885, 886, 887, 888, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 913, 914, 917, 918, 919, 922, 923, 924, 925, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 950, 951, 954, 955, 956, 959, 960, 961, 962, 1039, 1259, 1261, 1272, 1278, 1279, 1288, 1289, 1293, 1299, 1311, 1313], "account": [145, 152, 729, 738, 1261], "examin": [145, 380, 394, 397, 729, 968, 982, 985, 1317], "box": [145, 398, 729, 986, 1299, 1312, 1313], "alwai": [145, 381, 394, 494, 521, 525, 729, 969, 982, 1079, 1106, 1110, 1261, 1303, 1311], "occur": [145, 177, 196, 390, 391, 690, 709, 729, 762, 781, 978, 979, 1307, 1312, 1314], "readi": [145, 729], "min_temp": [146, 203, 731, 788], "max_h_iso0": [146, 199, 731, 784], "beamwidth": [146, 153, 163, 199, 203, 236, 302, 339, 376, 470, 511, 527, 731, 740, 750, 784, 788, 822, 888, 925, 962, 1055, 1096, 1112], "construct": [146, 182, 194, 527, 695, 707, 731, 767, 779, 1025, 1112], "beyond": [146, 197, 536, 731, 782, 1244, 1245, 1316], "extent": [146, 511, 731, 1096, 1274], "reach": [146, 731], "mask_fzl": [146, 731], "end_gate_arr": [146, 731], "delev_max": [147, 148, 149, 732, 733, 734], "dazim_max": [147, 148, 149, 732, 733, 734], "elmin": [147, 148, 149, 197, 525, 732, 733, 734, 782, 1110, 1238], "rmin": [147, 197, 463, 482, 525, 732, 782, 1048, 1067, 1110, 1238], "50000": [147, 476, 732, 1061, 1274, 1278, 1298, 1309], "hmin": [147, 732, 1238], "10000": [147, 236, 264, 302, 339, 370, 376, 454, 459, 467, 476, 489, 492, 529, 534, 732, 822, 850, 888, 925, 956, 962, 1039, 1044, 1052, 1061, 1074, 1077, 1114, 1119, 1278, 1298, 1309], "nbins_min": [147, 148, 468, 732, 733, 1053], "attg": [147, 148, 149, 471, 477, 512, 732, 733, 734, 1056, 1062, 1097], "max_std_pwr": [147, 468, 732, 1053], "max_std_zdr": [147, 148, 732, 733], "sun_posit": [147, 148, 149, 732, 733, 734], "pwrh_field": [147, 148, 149, 732, 733, 734], "pwrv_field": [147, 148, 149, 732, 733, 734], "suspect": [147, 148, 149, 197, 732, 733, 734, 782], "sun": [147, 148, 149, 152, 153, 160, 161, 162, 163, 164, 730, 732, 733, 734, 738, 739, 740, 747, 748, 749, 750, 751], "hit": [147, 148, 149, 164, 730, 732, 733, 734, 739, 751, 1317], "detect": [147, 148, 149, 163, 496, 497, 525, 527, 732, 733, 734, 750, 1081, 1082, 1110, 1112, 1231, 1283, 1298, 1307, 1311, 1313], "hildebrand": [147, 449, 463, 468, 482, 732, 1034, 1048, 1053, 1067, 1225], "sekhon": [147, 463, 468, 482, 732, 1048, 1053, 1067, 1225], "higher": [147, 225, 230, 292, 297, 325, 334, 362, 371, 732, 811, 816, 878, 883, 911, 920, 948, 957, 1025, 1307, 1309], "ga": [147, 148, 149, 443, 471, 477, 512, 732, 733, 734, 1027, 1056, 1062, 1097], "wai": [147, 148, 149, 443, 467, 471, 477, 496, 511, 512, 528, 732, 733, 734, 1027, 1052, 1056, 1062, 1081, 1096, 1097, 1113, 1272, 1305, 1312, 1317, 1319], "pysolar": [147, 148, 149, 162, 732, 733, 734, 749], "sun_hit": [147, 148, 149, 164, 732, 733, 734, 751], "new_radar": [147, 148, 732, 733, 1306], "npulses_rai": [148, 469, 733, 1054], "ivic": [148, 469, 733, 1054, 1226, 1233, 1242, 1244, 1245], "2003": [148, 733, 1298], "instead": [148, 251, 398, 469, 733, 837, 986, 1054, 1261, 1269, 1298, 1303, 1309, 1316, 1317, 1319], "7": [148, 160, 163, 200, 388, 469, 533, 733, 747, 750, 785, 976, 1054, 1118, 1226, 1235, 1258, 1269, 1278, 1280, 1292, 1303, 1310, 1311, 1313, 1314, 1316, 1317], "noise_thr": [149, 734], "simpl": [149, 496, 734, 1014, 1081, 1306, 1307], "self_const": [150, 151, 736, 737], "60000": [150, 151, 736, 737, 1274, 1278, 1309], "low_z": [150, 151, 736, 737], "high_z": [150, 151, 736, 737], "min_phidp": [150, 151, 736, 737], "01": [150, 151, 331, 368, 454, 521, 736, 737, 917, 954, 1039, 1106, 1231, 1246, 1265, 1277, 1294, 1315], "min_ncp": [150, 201, 735, 736, 786], "min_rhv": [150, 200, 201, 735, 736, 785, 786], "sys_phas": [150, 736], "ncpt": [150, 151, 736, 737], "overide_sys_phas": [150, 736], "nowrap": [150, 151, 736, 737], "really_verbos": [150, 151, 736, 737], "lp_solver": [150, 151, 736, 737], "cylp": [150, 151, 736, 737, 1303, 1316, 1319], "unf_field": [150, 151, 736, 737], "window_len": [150, 151, 157, 736, 737, 744], "proc": [150, 151, 521, 736, 737, 1106], "coef": [150, 151, 736, 737], "914": [150, 151, 736, 737], "lp": [150, 151, 736, 737, 1303], "consist": [150, 151, 154, 155, 156, 736, 737, 741, 742, 743, 1261, 1309], "low": [150, 151, 152, 153, 160, 163, 390, 521, 736, 737, 738, 740, 747, 750, 978, 1106, 1280, 1312], "high": [150, 151, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 521, 736, 737, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1106, 1299, 1313], "copolar": [150, 495, 497, 518, 525, 736, 1080, 1082, 1103, 1110, 1297], "automat": [150, 394, 399, 400, 445, 511, 525, 530, 736, 982, 987, 988, 1025, 1029, 1096, 1110, 1115, 1283, 1303, 1317], "lpx": [150, 151, 736, 737], "messag": [150, 151, 239, 258, 390, 736, 737, 825, 844, 978, 1269], "suppress": [150, 151, 521, 736, 737, 1106], "pyglpk": [150, 151, 736, 737, 1303, 1316], "cvxopt": [150, 151, 736, 737, 1303, 1316], "cylp_mp": [150, 151, 736, 737], "modul": [150, 151, 736, 737, 1198, 1260, 1268, 1269, 1303, 1306, 1307, 1309, 1310, 1311, 1314, 1316, 1317], "solv": [150, 151, 736, 737], "horizon": [150, 151, 495, 518, 525, 736, 737, 1080, 1103, 1110], "sobel": [150, 151, 736, 737], "worker": [150, 151, 736, 737], "link": [150, 151, 539, 736, 737, 1313], "1z": [150, 151, 736, 737], "reproc_phas": [150, 151, 736, 737], "sob_kdp": [150, 151, 736, 737], "recalcul": [150, 151, 511, 736, 737, 1096, 1305], "giangrand": [150, 151, 525, 736, 737, 1110], "mcgraw": [150, 151, 736, 737], "lei": [150, 151, 736, 737], "applic": [150, 151, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 494, 736, 737, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 986, 1079, 1252, 1317], "program": [150, 151, 511, 736, 737, 1096, 1303, 1317], "atmo": [150, 151, 518, 528, 736, 737, 1103, 1113, 1236, 1280, 1317], "tech": [150, 151, 518, 736, 737, 1103, 1236, 1280], "2013": [150, 151, 469, 522, 528, 736, 737, 1054, 1107, 1113, 1226, 1314], "1716": [150, 151, 736, 737], "system_phas": [151, 737], "first_gate_sysp": [151, 737], "carri": [151, 737], "smaller": [151, 370, 511, 737, 956, 1025, 1096, 1246, 1298, 1317], "off": [151, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 517, 737, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1102, 1277, 1298], "ptoa": [152, 738], "wavelen": [152, 160, 163, 738, 747, 750], "antenna_gain": [152, 163, 471, 738, 750, 1056], "coeff_band": [152, 163, 738, 750], "solar": [152, 160, 163, 738, 747, 750], "flux": [152, 160, 163, 738, 747, 750], "amospher": [152, 738], "wavelength": [152, 160, 163, 511, 738, 747, 750, 1096], "bandwidth": [152, 163, 738, 750], "s0": [152, 160, 738, 747], "10e": [152, 160, 163, 738, 747, 750], "m2": [152, 160, 163, 738, 747, 750], "hz": [152, 160, 163, 443, 470, 471, 512, 513, 738, 747, 750, 1027, 1055, 1056, 1097, 1098, 1286], "altub": [152, 153, 160, 163, 738, 740, 747, 750], "bech": [152, 153, 160, 163, 738, 740, 747, 750], "o": [152, 153, 160, 163, 398, 738, 740, 747, 750, 986, 1131, 1279, 1303, 1316, 1317], "argemi": [152, 153, 160, 163, 738, 740, 747, 750], "t": [152, 153, 160, 163, 398, 467, 494, 497, 521, 522, 525, 527, 528, 534, 738, 740, 747, 750, 986, 1052, 1079, 1082, 1106, 1107, 1110, 1112, 1113, 1119, 1272, 1298, 1303, 1305, 1313], "rigo": [152, 153, 160, 163, 738, 740, 747, 750], "2015": [152, 153, 160, 163, 499, 528, 738, 740, 747, 750, 1084, 1113], "align": [152, 153, 160, 163, 738, 740, 747, 750], "midrang": [152, 153, 160, 163, 738, 740, 747, 750], "angle_step": [153, 163, 740, 750], "fact": [153, 521, 523, 740, 1106, 1108], "la": [153, 740], "zdr_kdpzh_dict": [154, 155, 156, 741, 742, 743], "min_rhohv": [154, 155, 156, 741, 742, 743], "92": [154, 155, 156, 264, 741, 742, 743, 850, 1286, 1296], "filter_rain": [154, 155, 156, 741, 742, 743], "max_phidp": [154, 155, 156, 741, 742, 743], "smooth_wind_len": [154, 155, 156, 741, 742, 743], "dphidp_min": [154, 741], "dphidp_max": [154, 741], "parametr": [154, 155, 156, 741, 742, 743], "check_wet_radom": [154, 155, 741, 742], "wet_radome_refl": [154, 155, 741, 742], "wet_radome_len_min": [154, 155, 741, 742], "wet_radome_len_max": [154, 155, 741, 742], "wet_radome_ngates_min": [154, 155, 741, 742], "valid_gates_onli": [154, 741], "keep_point": [154, 155, 741, 742], "kdp_wind_len": [154, 741], "12": [154, 741, 1023, 1263, 1268, 1269, 1279, 1286, 1296, 1306, 1310, 1312, 1314], "tabl": [154, 155, 156, 398, 741, 742, 743, 986, 1242, 1244, 1245, 1311], "zh": [154, 155, 156, 550, 551, 741, 742, 743, 1311, 1313], "curv": [154, 155, 156, 741, 742, 743, 1298], "wolfensberg": [154, 155, 156, 497, 741, 742, 743, 1082, 1299, 1300], "louf": [154, 155, 156, 741, 742, 743], "gorgucci": [154, 155, 156, 741, 742, 743], "vaccarono": [154, 155, 156, 741, 742, 743], "kdpsim_field": [154, 155, 156, 741, 742, 743], "phidpsim_field": [154, 155, 156, 741, 742, 743], "closest": [154, 155, 383, 459, 467, 476, 489, 492, 741, 742, 971, 1014, 1044, 1052, 1061, 1074, 1077], "radom": [154, 155, 471, 477, 741, 742, 1056, 1062], "close": [154, 155, 380, 509, 521, 741, 742, 968, 1094, 1106, 1313], "wet": [154, 155, 741, 742, 1299, 1313], "mim": [154, 155, 741, 742], "disk": [154, 155, 741, 742], "around": [154, 155, 490, 494, 497, 741, 742, 1024, 1075, 1079, 1082, 1210, 1235, 1273, 1288, 1291, 1298, 1305, 1307, 1312, 1313], "decid": [154, 155, 527, 741, 742, 1112], "That": [154, 741], "total": [154, 511, 521, 522, 523, 741, 1096, 1106, 1107, 1108, 1263, 1264, 1265, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1315], "further": [154, 155, 741, 742, 1230], "analysi": [154, 155, 741, 742, 1021, 1230], "least": [154, 494, 496, 519, 520, 741, 1079, 1081, 1104, 1105, 1298], "refl_bias_dict": [154, 155, 741, 742], "selfconsistency_dict": [154, 155, 741, 742], "keep_poinst": [154, 155, 741, 742], "measur": [154, 155, 160, 163, 444, 494, 499, 508, 509, 518, 521, 522, 523, 741, 742, 747, 750, 1028, 1079, 1084, 1093, 1094, 1103, 1106, 1107, 1108, 1298, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1317], "min_zdr": [155, 742], "bias_per_g": [155, 742], "kdp_data_dict": [155, 742], "selfconsist": [156, 743], "privat": [156, 401, 743, 1317], "kdp_sim_dict": [156, 743], "phidp_sim_dict": [156, 743], "raw_data": [157, 744], "wind_len": [157, 159, 520, 744, 746, 1105], "min_valid": [157, 159, 520, 744, 746, 1105], "wind_typ": [157, 744], "median": [157, 454, 459, 467, 476, 489, 498, 744, 1039, 1044, 1052, 1061, 1074, 1083, 1213, 1215, 1226], "less": [157, 494, 523, 744, 1025, 1079, 1108, 1236, 1298, 1312, 1313], "move": [157, 158, 159, 165, 166, 168, 200, 465, 481, 484, 485, 511, 519, 520, 744, 745, 746, 785, 1050, 1066, 1069, 1070, 1096, 1104, 1105, 1225, 1272, 1312, 1317], "data_smooth": [157, 744], "swind_len": [158, 519, 745, 1104], "smin_valid": [158, 519, 745, 1104], "lwind_len": [158, 519, 745, 1104], "lmin_valid": [158, 519, 745, 1104], "zthr": [158, 519, 745, 1104], "short": [158, 519, 745, 1104, 1317], "solar_flux": [160, 163, 747, 750], "cm": [160, 163, 491, 747, 750, 1076, 1289, 1311], "lat_deg": [161, 748], "lon_deg": [161, 748], "refract": [161, 511, 748, 1096], "boolean": [161, 164, 169, 175, 189, 494, 509, 539, 550, 551, 567, 568, 682, 688, 702, 730, 748, 751, 754, 760, 774, 965, 1079, 1094, 1310], "elev_sun": [161, 748], "azim_sun": [161, 748], "sensor": [161, 162, 748, 749], "el": [162, 509, 749, 1094, 1211, 1212, 1312], "az": [162, 398, 749, 986, 1286, 1287], "would": [163, 750, 1030, 1226, 1268, 1269, 1307, 1309, 1317], "without": [163, 233, 300, 337, 374, 452, 468, 750, 819, 886, 923, 960, 1037, 1053, 1193, 1205, 1248, 1316], "characterist": [163, 750, 1309], "pwr_det": [163, 750], "az_rad": [164, 751], "az_sun": [164, 751], "el_rad": [164, 751], "el_sun": [164, 751], "sun_hit_std": [164, 751], "az_width_co": [164, 751], "el_width_co": [164, 751], "az_width_cross": [164, 751], "el_width_cross": [164, 751], "is_zdr": [164, 751], "val": [164, 739, 751], "val_std": [164, 739, 751], "az_bia": [164, 739, 751], "el_bia": [164, 739, 751], "az_width": [164, 739, 751], "el_width": [164, 739, 751], "nhit": [164, 751], "par": [164, 730, 739, 751], "gaussian": [164, 465, 481, 484, 485, 529, 730, 739, 751, 1050, 1066, 1069, 1070, 1114, 1197, 1288], "fit": [164, 730, 739, 751], "warn": [165, 166, 168, 394, 397, 982, 985, 1244, 1261, 1263, 1269, 1272, 1309, 1311, 1312, 1313], "categori": [165, 166, 1313], "old_nam": 168, "new_nam": 168, "alia": [168, 1203, 1204, 1311], "namespac": [168, 584], "wrapper": [168, 1303, 1311], "deprecatedfunctionnam": 168, "exclude_bas": [169, 682, 754], "exclude_below": [169, 682, 754, 1272, 1297, 1310, 1313], "suggest": [169, 682, 754], "gate_exclud": [169, 682, 754, 1310], "gate_includ": [169, 682, 754, 1310], "lost": [169, 523, 682, 754, 1108, 1259, 1309], "again": [169, 682, 754, 1261, 1269, 1279, 1311, 1316], "import": [169, 528, 533, 534, 682, 754, 1113, 1118, 1119, 1131, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1316], "io": [169, 536, 682, 754, 1021, 1263, 1264, 1268, 1269, 1270, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319], "radar_fil": [169, 568, 682, 754, 1264, 1277, 1279], "nc": [169, 682, 754, 1263, 1272, 1274, 1277, 1278, 1279, 1283, 1285, 1286, 1287, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1305, 1306, 1310, 1311, 1313], "normalized_coherent_pow": [169, 682, 754, 1310], "exclude_mask": [171, 173, 174, 175, 176, 177, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 684, 686, 687, 688, 689, 690, 693, 694, 695, 698, 700, 701, 702, 703, 705, 706, 707, 708, 709, 756, 758, 759, 760, 761, 762, 765, 766, 767, 770, 772, 773, 774, 775, 777, 778, 779, 780, 781, 1273], "op": [171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 684, 686, 687, 688, 689, 690, 691, 693, 694, 695, 698, 700, 701, 702, 703, 705, 706, 707, 708, 709, 756, 758, 759, 760, 761, 762, 763, 765, 766, 767, 770, 772, 773, 774, 775, 777, 778, 779, 780, 781], "inclus": [171, 173, 176, 181, 185, 187, 190, 195, 684, 686, 689, 694, 698, 700, 703, 708, 756, 758, 761, 766, 770, 772, 775, 780, 1021, 1025, 1193, 1277], "exclus": [173, 686, 758], "AND": [173, 175, 182, 189, 194, 686, 688, 695, 702, 707, 758, 760, 767, 774, 779], "OR": [173, 175, 182, 189, 194, 686, 688, 695, 702, 707, 758, 760, 767, 774, 779], "gener": [173, 175, 182, 189, 194, 206, 207, 208, 209, 210, 211, 222, 224, 229, 232, 233, 234, 235, 236, 243, 244, 245, 246, 249, 251, 252, 253, 255, 257, 259, 260, 261, 262, 267, 269, 271, 273, 274, 275, 276, 277, 278, 289, 291, 296, 299, 300, 301, 302, 306, 307, 308, 309, 310, 311, 322, 324, 332, 333, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 359, 361, 369, 370, 373, 374, 375, 376, 397, 400, 510, 511, 521, 529, 531, 686, 688, 695, 702, 707, 758, 760, 767, 774, 779, 792, 793, 794, 795, 796, 797, 808, 810, 815, 818, 819, 820, 821, 822, 829, 830, 831, 832, 835, 837, 838, 839, 841, 843, 845, 846, 847, 848, 853, 855, 857, 859, 860, 861, 862, 863, 864, 875, 877, 882, 885, 886, 887, 888, 892, 893, 894, 895, 896, 897, 908, 910, 918, 919, 922, 923, 924, 925, 929, 930, 931, 932, 933, 934, 945, 947, 955, 956, 959, 960, 961, 962, 985, 988, 1003, 1014, 1024, 1025, 1095, 1096, 1106, 1114, 1116, 1263, 1264, 1266, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303], "here": [173, 175, 182, 189, 194, 264, 686, 688, 695, 702, 707, 758, 760, 767, 774, 779, 850, 1272, 1298, 1303, 1305, 1310, 1311, 1312, 1313, 1316, 1319], "previous": [173, 175, 182, 189, 194, 686, 688, 695, 702, 707, 758, 760, 767, 774, 779, 1268, 1298, 1313], "becaus": [173, 175, 182, 521, 686, 688, 695, 758, 760, 767, 1106, 1298, 1312, 1313, 1319], "invalid": [173, 175, 177, 182, 197, 199, 200, 201, 202, 203, 204, 686, 688, 690, 695, 730, 735, 758, 760, 762, 767, 782, 784, 785, 786, 787, 788, 789], "v1": [176, 181, 190, 195, 689, 694, 703, 708, 761, 766, 775, 780, 1316], "v2": [176, 181, 190, 195, 689, 694, 703, 708, 761, 766, 775, 780, 1317], "insid": [176, 190, 526, 689, 703, 761, 775, 1111, 1306], "inf": [177, 196, 197, 201, 690, 709, 735, 762, 781, 782, 786], "outsid": [181, 195, 197, 201, 229, 232, 234, 235, 249, 251, 252, 253, 255, 257, 267, 269, 271, 296, 299, 301, 332, 333, 336, 338, 369, 370, 373, 375, 476, 477, 694, 708, 735, 766, 780, 782, 786, 815, 818, 820, 821, 835, 837, 838, 839, 841, 843, 853, 855, 857, 882, 885, 887, 918, 919, 922, 924, 955, 956, 959, 961, 1061, 1062, 1317], "trans_valu": [182, 194, 695, 707, 767, 779], "max_zdr": [197, 782], "max_rhv": [197, 782], "min_refl": [197, 201, 735, 782, 786], "max_refl": [197, 201, 735, 782, 786], "vel_lim": [197, 782], "2000": [197, 534, 782, 1119, 1273, 1309], "25000": [197, 444, 782, 1028, 1309], "85": [197, 200, 782, 785, 1300, 1312], "bird": [197, 451, 782, 1036], "criteria": [197, 198, 199, 200, 201, 202, 203, 204, 521, 530, 735, 782, 783, 784, 785, 786, 787, 788, 789, 1025, 1106, 1115, 1238], "built": [197, 198, 199, 200, 201, 202, 203, 204, 735, 782, 783, 784, 785, 786, 787, 788, 789, 1024, 1025], "highest": [197, 200, 252, 782, 785, 838], "lowest": [197, 199, 200, 201, 202, 203, 204, 524, 735, 782, 784, 785, 786, 787, 788, 789, 1030, 1109, 1268, 1272, 1296, 1298], "greatest": [197, 201, 735, 782, 786], "400": [199, 203, 784, 788, 1305], "primarili": [199, 203, 784, 788], "phi_field": [200, 785], "textzdr_field": [200, 785], "textrhv_field": [200, 785], "textphi_field": [200, 785], "textrefl_field": [200, 785], "wind_siz": [200, 445, 785, 1029, 1258, 1307], "max_textphi": [200, 785], "max_textrhv": [200, 785], "max_textzdr": [200, 785], "max_textrefl": [200, 785], "cross": [200, 201, 216, 218, 222, 225, 236, 248, 249, 283, 285, 289, 292, 302, 316, 318, 322, 325, 339, 353, 355, 359, 362, 376, 451, 470, 471, 511, 735, 785, 786, 802, 804, 808, 811, 822, 834, 835, 869, 871, 875, 878, 888, 902, 904, 908, 911, 925, 939, 941, 945, 948, 962, 1023, 1036, 1055, 1056, 1096, 1218, 1219, 1261, 1266, 1276, 1285, 1294, 1298, 1312, 1314, 1315], "min_rhi": [201, 735, 786], "min_snr": [202, 787], "max_snr": [202, 787], "min_vi": [204, 789], "displai": [205, 222, 224, 229, 233, 234, 235, 236, 238, 272, 289, 291, 296, 300, 301, 302, 304, 305, 322, 324, 332, 333, 337, 338, 339, 341, 342, 359, 361, 369, 370, 374, 375, 376, 378, 398, 511, 533, 534, 791, 808, 810, 815, 819, 820, 821, 822, 824, 858, 875, 877, 882, 886, 887, 888, 890, 891, 908, 910, 918, 919, 923, 924, 925, 927, 928, 945, 947, 955, 956, 960, 961, 962, 964, 986, 1030, 1096, 1118, 1119, 1261, 1263, 1264, 1268, 1269, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1305, 1306, 1307, 1309, 1310, 1313, 1317], "airborn": [205, 791], "plot_var": [205, 272, 305, 342, 791, 858, 891, 928], "order": [205, 272, 305, 342, 394, 399, 400, 494, 518, 521, 525, 527, 791, 858, 891, 928, 965, 982, 987, 988, 1014, 1079, 1103, 1106, 1110, 1112, 1210, 1263, 1298, 1303, 1313, 1317], "cb": [205, 272, 305, 342, 791, 858, 891, 928, 1279], "colorbar": [205, 222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 258, 265, 267, 269, 271, 272, 289, 290, 291, 296, 299, 300, 301, 302, 305, 322, 323, 324, 332, 333, 336, 337, 338, 339, 342, 359, 360, 361, 369, 370, 373, 374, 375, 376, 791, 808, 809, 810, 815, 818, 819, 820, 821, 822, 833, 835, 837, 838, 839, 841, 843, 844, 851, 853, 855, 857, 858, 875, 876, 877, 882, 885, 886, 887, 888, 891, 908, 909, 910, 918, 919, 922, 923, 924, 925, 928, 945, 946, 947, 955, 956, 959, 960, 961, 962, 1266, 1272, 1276, 1277, 1293, 1294, 1311, 1315], "loc": [205, 272, 305, 342, 791, 858, 891, 928, 1278], "titl": [206, 208, 209, 210, 211, 222, 224, 229, 232, 233, 234, 235, 236, 244, 245, 246, 249, 251, 252, 253, 255, 257, 260, 261, 262, 267, 269, 271, 273, 275, 276, 277, 278, 289, 291, 296, 299, 300, 301, 302, 306, 308, 309, 310, 311, 322, 324, 332, 333, 336, 337, 338, 339, 343, 345, 346, 347, 348, 359, 361, 369, 370, 373, 374, 375, 376, 792, 794, 795, 796, 797, 808, 810, 815, 818, 819, 820, 821, 822, 830, 831, 832, 835, 837, 838, 839, 841, 843, 846, 847, 848, 853, 855, 857, 859, 861, 862, 863, 864, 875, 877, 882, 885, 886, 887, 888, 892, 894, 895, 896, 897, 908, 910, 918, 919, 922, 923, 924, 925, 929, 931, 932, 933, 934, 945, 947, 955, 956, 959, 960, 961, 962, 1263, 1264, 1272, 1279, 1281, 1282, 1284, 1286, 1287, 1291, 1311, 1312, 1313, 1314], "ext": [207, 243, 259, 274, 307, 344, 793, 829, 845, 860, 893, 930], "datetime_format": [207, 209, 274, 276, 307, 309, 344, 346, 793, 795, 860, 862, 893, 895, 930, 932], "use_sweep_tim": [207, 209, 274, 276, 307, 309, 344, 346, 793, 795, 860, 862, 893, 895, 930, 932], "form": [207, 224, 243, 259, 274, 291, 307, 324, 344, 361, 793, 810, 829, 845, 860, 877, 893, 910, 930, 947], "radar_name_field_sweep_tim": [207, 274, 307, 344, 793, 860, 893, 930], "extens": [207, 243, 259, 274, 307, 344, 398, 793, 829, 845, 860, 893, 930, 986, 1316], "strftime": [207, 209, 229, 233, 274, 276, 296, 300, 307, 309, 332, 337, 344, 346, 369, 374, 793, 795, 815, 819, 860, 862, 882, 886, 893, 895, 918, 923, 930, 932, 955, 960], "vpt": [210, 221, 235, 277, 288, 301, 310, 321, 338, 347, 358, 375, 796, 807, 821, 863, 874, 887, 896, 907, 924, 933, 944, 961, 1241], "ndarrai": [211, 236, 278, 302, 311, 339, 348, 376, 518, 571, 797, 822, 864, 888, 897, 925, 934, 962, 1103, 1215, 1235, 1314], "xaxi": [212, 215, 216, 279, 282, 283, 312, 315, 316, 349, 352, 353, 798, 801, 802, 865, 868, 869, 898, 901, 902, 935, 938, 939, 1279], "static": [213, 214, 225, 226, 230, 237, 238, 280, 281, 292, 293, 297, 303, 304, 313, 314, 325, 326, 340, 341, 350, 351, 362, 363, 377, 378, 799, 800, 811, 812, 816, 823, 824, 866, 867, 878, 879, 883, 889, 890, 899, 900, 911, 912, 926, 927, 936, 937, 948, 949, 963, 964, 1303], "yaxi": [213, 214, 217, 218, 219, 220, 280, 281, 284, 285, 286, 287, 313, 314, 317, 318, 319, 320, 350, 351, 354, 355, 356, 357, 799, 800, 803, 804, 805, 806, 866, 867, 870, 871, 872, 873, 899, 900, 903, 904, 905, 906, 936, 937, 940, 941, 942, 943], "custom": [221, 222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 288, 289, 290, 291, 296, 300, 301, 302, 321, 322, 323, 324, 332, 333, 337, 338, 339, 358, 359, 360, 361, 369, 370, 374, 375, 376, 428, 752, 807, 808, 809, 810, 815, 819, 820, 821, 822, 833, 835, 837, 839, 841, 843, 851, 853, 855, 857, 874, 875, 876, 877, 882, 886, 887, 888, 907, 908, 909, 910, 918, 919, 923, 924, 925, 944, 945, 946, 947, 955, 956, 960, 961, 962, 1024, 1309], "plot_ppi": [221, 288, 321, 358, 807, 874, 907, 944, 1264, 1299, 1305, 1312, 1313], "plot_sweep_grid": [221, 807], "target_azimuth": [222, 289, 322, 359, 808, 875, 908, 945, 1218], "mask_tupl": [222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 808, 815, 818, 819, 820, 821, 822, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962], "norm": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 521, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1106, 1279, 1299, 1311, 1313], "cmap": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 986, 1272, 1277, 1278, 1279, 1280, 1284, 1287, 1289, 1291, 1292, 1297, 1298, 1306, 1307, 1311], "mask_outsid": [222, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 808, 815, 818, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962, 1286, 1287, 1313], "title_flag": [222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 808, 810, 815, 818, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 919, 922, 923, 924, 925, 945, 947, 955, 956, 959, 960, 961, 962, 1291], "axislabel": [222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 336, 337, 338, 339, 359, 361, 369, 373, 374, 375, 376, 808, 810, 815, 818, 819, 820, 821, 822, 835, 837, 841, 843, 853, 855, 857, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 922, 923, 924, 925, 945, 947, 955, 959, 960, 961, 962, 1281, 1286, 1287], "axislabels_flag": [222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 336, 337, 338, 339, 359, 361, 369, 373, 374, 375, 376, 808, 810, 815, 818, 819, 820, 821, 822, 835, 837, 841, 843, 853, 855, 857, 875, 877, 882, 885, 886, 887, 888, 908, 910, 918, 922, 923, 924, 925, 945, 947, 955, 959, 960, 961, 962, 1298], "colorbar_flag": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962], "colorbar_label": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1263, 1264, 1268, 1281, 1282, 1286, 1287, 1288, 1289, 1293, 1312, 1313], "colorbar_ori": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 337, 338, 339, 359, 361, 369, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 923, 924, 925, 945, 947, 955, 960, 961, 962], "reverse_xaxi": [222, 233, 289, 300, 322, 337, 359, 374, 808, 819, 875, 886, 908, 923, 945, 960], "fig": [222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 299, 300, 301, 302, 322, 323, 324, 332, 333, 336, 337, 338, 339, 359, 360, 361, 369, 370, 373, 374, 375, 376, 808, 809, 810, 815, 818, 819, 820, 821, 822, 833, 835, 837, 838, 839, 841, 843, 851, 853, 855, 857, 875, 876, 877, 882, 885, 886, 887, 888, 908, 909, 910, 918, 919, 922, 923, 924, 925, 945, 946, 947, 955, 956, 959, 960, 961, 962, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1297, 1299, 1300, 1307, 1309, 1310, 1312, 1313], "tick": [222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 333, 337, 338, 339, 359, 360, 361, 369, 370, 374, 375, 376, 808, 809, 810, 815, 819, 820, 821, 822, 833, 835, 837, 839, 841, 843, 851, 853, 855, 857, 875, 876, 877, 882, 886, 887, 888, 908, 909, 910, 918, 919, 923, 924, 925, 945, 946, 947, 955, 956, 960, 961, 962, 1277, 1279, 1298, 1299, 1311, 1313], "ticklab": [222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 333, 337, 338, 339, 359, 360, 361, 369, 370, 374, 375, 376, 808, 809, 810, 815, 819, 820, 821, 822, 833, 835, 837, 839, 841, 843, 851, 853, 855, 857, 875, 876, 877, 882, 886, 887, 888, 908, 909, 910, 918, 919, 923, 924, 925, 945, 946, 947, 955, 956, 960, 961, 962, 1298, 1299, 1313], "raster": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 511, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 986, 1096, 1261], "pseudo": [222, 289, 322, 359, 525, 808, 875, 908, 945, 1110, 1312], "associ": [222, 289, 322, 359, 808, 875, 908, 945, 1003], "matplotlib": [222, 224, 227, 228, 229, 233, 234, 235, 236, 249, 250, 251, 253, 255, 257, 266, 267, 269, 271, 289, 291, 294, 295, 296, 300, 301, 302, 322, 324, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 398, 808, 810, 813, 814, 815, 819, 820, 821, 822, 835, 836, 837, 839, 841, 843, 852, 853, 855, 857, 875, 877, 880, 881, 882, 886, 887, 888, 908, 910, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 925, 945, 947, 950, 951, 952, 953, 954, 955, 956, 957, 960, 961, 962, 986, 1261, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1316, 1319], "pcolormesh": [222, 224, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1272, 1288, 1298, 1311, 1312], "ncp": [222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 808, 815, 818, 819, 820, 821, 822, 875, 882, 885, 886, 887, 888, 908, 918, 919, 922, 923, 924, 925, 945, 955, 956, 959, 960, 961, 962], "lumin": [222, 224, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 835, 837, 838, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962], "west": [222, 233, 289, 300, 322, 337, 359, 374, 808, 819, 875, 886, 908, 923, 945, 960, 1281, 1312, 1313], "leav": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 835, 837, 839, 841, 843, 853, 855, 857, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962], "orient": [222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 337, 338, 339, 359, 360, 361, 369, 374, 375, 376, 808, 809, 810, 815, 819, 820, 821, 822, 833, 835, 837, 839, 841, 843, 851, 853, 855, 857, 875, 876, 877, 882, 886, 887, 888, 908, 909, 910, 918, 923, 924, 925, 945, 946, 947, 955, 960, 961, 962, 1299, 1300, 1312, 1313], "treat": [222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 808, 815, 819, 820, 821, 835, 841, 843, 853, 855, 857, 875, 882, 886, 887, 908, 918, 919, 923, 924, 945, 955, 956, 960, 961], "themselv": [222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 808, 815, 819, 820, 821, 835, 841, 843, 853, 855, 857, 875, 882, 886, 887, 908, 918, 919, 923, 924, 945, 955, 956, 960, 961], "figur": [222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 299, 300, 301, 302, 322, 323, 324, 332, 333, 336, 337, 338, 339, 359, 360, 361, 369, 370, 373, 374, 375, 376, 808, 809, 810, 815, 818, 819, 820, 821, 822, 833, 835, 837, 838, 839, 841, 843, 851, 853, 855, 857, 875, 876, 877, 882, 885, 886, 887, 888, 908, 909, 910, 918, 919, 922, 923, 924, 925, 945, 946, 947, 955, 956, 959, 960, 961, 962, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1297, 1298, 1306, 1307, 1309, 1310, 1311, 1312, 1313], "render": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962], "rather": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962], "larg": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 521, 530, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1106, 1115, 1313], "sure": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1272, 1279, 1298, 1316, 1317, 1319], "dpi": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962], "your": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 536, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962, 1266, 1276, 1278, 1294, 1298, 1303, 1311, 1313, 1315, 1316, 1317, 1319], "ep": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962], "svg": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 808, 810, 815, 819, 820, 821, 822, 875, 877, 882, 886, 887, 888, 908, 910, 918, 919, 923, 924, 925, 945, 947, 955, 956, 960, 961, 962], "mappabl": [223, 247, 258, 265, 290, 323, 360, 809, 833, 844, 851, 876, 909, 946], "cax": [223, 247, 265, 290, 323, 360, 809, 833, 851, 876, 909, 946, 1299, 1313], "imag": [223, 247, 252, 265, 290, 323, 360, 517, 809, 833, 838, 851, 876, 909, 946, 1102, 1210, 1236, 1266, 1276, 1294, 1296, 1298, 1315], "contourset": [223, 247, 258, 265, 290, 323, 360, 809, 833, 844, 851, 876, 909, 946], "etc": [223, 247, 251, 252, 258, 265, 290, 323, 333, 360, 370, 397, 459, 467, 476, 489, 492, 809, 833, 837, 838, 844, 851, 876, 909, 919, 946, 956, 985, 1044, 1052, 1061, 1074, 1077, 1311], "onto": [223, 247, 265, 267, 290, 323, 333, 360, 370, 524, 809, 833, 851, 853, 876, 909, 919, 946, 956, 1014, 1021, 1025, 1109], "drawn": [223, 247, 265, 290, 323, 360, 809, 833, 851, 876, 909, 946], "target_rang": [224, 291, 324, 361, 810, 877, 910, 947], "delta_x": [224, 291, 324, 361, 810, 877, 910, 947], "delta_i": [224, 291, 324, 361, 810, 877, 910, 947], "az_limit": [224, 291, 324, 361, 810, 877, 910, 947], "el_limit": [224, 291, 324, 361, 810, 877, 910, 947], "reflector": [224, 291, 324, 361, 810, 877, 910, 947], "griddata": [224, 291, 324, 361, 810, 877, 910, 947], "npt": [225, 230, 292, 297, 325, 334, 362, 371, 811, 816, 878, 883, 911, 920, 948, 957], "hair": [225, 292, 325, 362, 811, 878, 911, 948, 1285], "col": [226, 230, 231, 293, 297, 298, 326, 335, 363, 372, 812, 816, 817, 879, 883, 884, 912, 921, 949, 958], "line": [226, 232, 250, 251, 252, 264, 266, 293, 299, 326, 329, 330, 333, 334, 336, 363, 366, 367, 370, 371, 373, 398, 521, 812, 818, 836, 837, 838, 850, 852, 879, 885, 912, 915, 916, 919, 920, 922, 949, 952, 953, 956, 957, 959, 986, 1106, 1266, 1276, 1278, 1294, 1296, 1315, 1316, 1317, 1319], "color": [226, 227, 228, 230, 231, 250, 252, 293, 294, 295, 297, 298, 326, 327, 328, 333, 335, 363, 364, 365, 372, 398, 812, 813, 814, 816, 817, 836, 838, 879, 880, 881, 883, 884, 912, 913, 914, 919, 921, 949, 950, 951, 958, 986, 1278, 1279, 1280, 1288, 1289, 1296, 1298, 1299, 1311, 1313], "linestyl": [226, 230, 231, 250, 293, 297, 298, 326, 335, 363, 372, 812, 816, 817, 836, 879, 883, 884, 912, 921, 949, 958, 1278, 1279, 1289], "symbol": [227, 228, 294, 295, 327, 328, 331, 364, 365, 368, 813, 814, 880, 881, 913, 914, 917, 950, 951, 954], "text_color": [227, 228, 294, 295, 327, 328, 364, 365, 813, 814, 880, 881, 913, 914, 950, 951], "text": [227, 228, 294, 295, 327, 328, 331, 364, 365, 368, 813, 814, 880, 881, 913, 914, 917, 950, 951, 954, 1131, 1277, 1286, 1300, 1307, 1311, 1312], "just": [227, 228, 294, 295, 327, 328, 364, 365, 388, 813, 814, 880, 881, 913, 914, 950, 951, 976, 1277, 1280, 1305, 1314, 1317, 1319], "marker": [227, 228, 232, 250, 266, 294, 295, 299, 327, 328, 336, 364, 365, 373, 813, 814, 818, 836, 852, 880, 881, 885, 913, 914, 922, 950, 951, 959], "title_datetime_format": [229, 233, 296, 300, 332, 337, 369, 374, 815, 819, 882, 886, 918, 923, 955, 960], "title_use_sweep_tim": [229, 233, 296, 300, 332, 337, 369, 374, 815, 819, 882, 886, 918, 923, 955, 960], "range_ring_location_km": [230, 297, 334, 371, 816, 883, 920, 957], "lw": [230, 231, 297, 298, 335, 372, 816, 817, 883, 884, 921, 958], "ring": [230, 231, 297, 298, 334, 335, 371, 372, 816, 817, 883, 884, 920, 921, 957, 958, 1273, 1285], "range_r": [231, 298, 335, 372, 817, 884, 921, 958], "seri": [231, 298, 335, 372, 490, 817, 884, 921, 958, 1075], "draw": [231, 251, 252, 264, 298, 333, 335, 370, 372, 817, 837, 838, 850, 884, 919, 921, 956, 958], "format_str": [232, 299, 336, 373, 818, 885, 922, 959], "ray_min": [232, 299, 336, 373, 818, 885, 922, 959], "ray_max": [232, 299, 336, 373, 818, 885, 922, 959], "style": [232, 250, 266, 299, 329, 330, 334, 336, 366, 367, 371, 373, 398, 818, 836, 852, 885, 915, 916, 920, 922, 952, 953, 957, 959, 986], "consider": [233, 300, 337, 374, 521, 819, 886, 923, 960, 1106, 1298], "ignoretilt": [234, 820], "run": [234, 494, 535, 820, 1079, 1120, 1261, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1316, 1317, 1319], "antenna_to_cartesian_track_rel": [234, 820], "slant": [234, 489, 820, 1022, 1074], "ncar": [234, 820], "soloii": [234, 820], "softwar": [234, 391, 398, 584, 820, 979, 986, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1316, 1317], "time_axis_flag": [235, 301, 338, 375, 821, 887, 924, 961], "date_time_form": [235, 301, 338, 375, 821, 887, 924, 961], "tz": [235, 301, 338, 375, 821, 887, 924, 961], "zone": [235, 301, 338, 375, 821, 887, 924, 961], "info": [235, 301, 333, 338, 370, 375, 511, 821, 887, 919, 924, 956, 961, 1096, 1261, 1299, 1314], "ref_point": [236, 302, 339, 376, 822, 888, 925, 962], "1000": [236, 302, 339, 376, 525, 822, 888, 925, 962, 1110, 1212, 1274, 1282, 1288, 1289, 1309, 1317], "vert_r": [236, 302, 339, 376, 822, 888, 925, 962], "alt_max": [236, 302, 339, 376, 822, 888, 925, 962], "dem_field": [236, 302, 339, 376, 822, 888, 925, 962], "terrain_altitud": [236, 302, 339, 376, 822, 888, 925, 962], "arbitrari": [236, 302, 339, 376, 521, 822, 888, 925, 962, 1106, 1261, 1312], "trajectori": [236, 302, 339, 376, 822, 888, 925, 962], "45": [236, 302, 339, 376, 508, 822, 888, 925, 962, 1093, 1280, 1289, 1298, 1313, 1317], "47": [236, 302, 339, 376, 525, 822, 888, 925, 962, 1110, 1300, 1312], "3db": [236, 302, 339, 376, 511, 822, 888, 925, 962, 1096], "ist": [236, 302, 339, 376, 822, 888, 925, 962], "aspect_ratio": [237, 303, 340, 377, 823, 889, 926, 963], "aspect": [237, 303, 340, 377, 511, 823, 889, 926, 963, 1096, 1277], "xlim": [238, 304, 341, 378, 824, 890, 927, 964, 1282, 1284, 1288, 1289, 1309], "ylim": [238, 304, 341, 378, 824, 890, 927, 964, 1282, 1284, 1286, 1287, 1288, 1289, 1291, 1293], "cartopi": [239, 240, 241, 242, 251, 252, 253, 305, 333, 825, 826, 827, 828, 837, 838, 839, 891, 919, 1266, 1268, 1269, 1272, 1276, 1278, 1279, 1292, 1294, 1296, 1298, 1303, 1306, 1307, 1309, 1310, 1312, 1313, 1315, 1316, 1317, 1319], "coastlin": [240, 251, 252, 333, 370, 826, 837, 838, 919, 956], "polit": [241, 827], "state": [242, 522, 828, 1107], "grid_name_field_level_tim": [243, 259, 829, 845], "latitudin": [245, 255, 269, 831, 841, 855], "plot_longitudinal_level": [248, 256, 270, 834, 842, 856], "tuppl": [248, 454, 460, 479, 834, 1039, 1045, 1064], "ind_1": [249, 835], "ind_2": [249, 835], "basemap": [249, 255, 257, 258, 263, 264, 267, 269, 271, 342, 366, 367, 368, 370, 371, 835, 841, 843, 844, 849, 850, 853, 855, 857, 928, 952, 953, 954, 956, 957, 1303, 1316], "upper": [249, 251, 252, 253, 255, 257, 267, 269, 271, 442, 835, 837, 838, 839, 841, 843, 853, 855, 857, 1212, 1278], "colormesh": [249, 251, 252, 253, 255, 257, 267, 269, 271, 835, 837, 838, 839, 841, 843, 853, 855, 857], "64": [249, 251, 252, 253, 255, 257, 267, 269, 271, 835, 837, 838, 839, 841, 843, 853, 855, 857, 1277, 1282, 1283, 1284, 1288, 1290, 1292, 1293, 1296, 1310, 1316], "linewidth": [250, 252, 266, 836, 838, 852, 1279, 1288, 1289], "crosshair": [250, 266, 836, 852], "lat_lin": [251, 252, 264, 333, 370, 837, 838, 850, 919, 956, 1272, 1285, 1296, 1313], "lon_lin": [251, 252, 264, 333, 370, 837, 838, 850, 919, 956, 1272, 1285, 1296, 1313], "embellish": [251, 252, 333, 837, 838, 919, 1279, 1313], "add_grid_lin": [251, 333, 837, 919], "imshow": [251, 837, 1273, 1274, 1277, 1311], "reason": [251, 264, 837, 850], "america": [251, 252, 264, 333, 370, 837, 838, 850, 919, 956], "cr": [251, 252, 305, 333, 454, 518, 837, 838, 891, 919, 1039, 1103, 1268, 1269, 1272, 1278, 1279, 1285, 1292, 1296, 1298, 1299, 1306, 1307, 1310, 1311, 1312, 1313], "subsequ": [251, 252, 333, 837, 838, 919], "geoax": [251, 252, 333, 837, 838, 919, 1306, 1309, 1312], "platecarre": [251, 252, 333, 837, 838, 919, 1268, 1272, 1278, 1279, 1292, 1296, 1298, 1307, 1310, 1312], "drawinf": [251, 252, 837, 838], "shapefil": [251, 252, 333, 370, 837, 838, 919, 956], "certain": [251, 252, 333, 517, 837, 838, 919, 966, 1102, 1236, 1298, 1310], "contour_valu": [252, 838], "maps_list": [252, 838], "countri": [252, 838], "110m": [252, 333, 838, 919], "background_zoom": [252, 838], "contour": [252, 838, 1266, 1276, 1294, 1315], "reson": [252, 333, 370, 838, 919, 956], "sequenc": [252, 838], "colour": [252, 838], "embelish": [252, 370, 838, 956], "10m": [252, 333, 838, 919, 1269, 1285, 1313], "50m": [252, 333, 838, 919, 1307, 1310], "naturalearthfeatur": [252, 333, 838, 919, 1313], "zoom": [252, 838], "background": [252, 370, 494, 530, 838, 956, 965, 1079, 1115, 1285, 1292, 1298], "cost": [252, 521, 838, 1106], "alpha": [253, 333, 370, 454, 499, 500, 501, 502, 503, 504, 730, 739, 839, 919, 956, 1039, 1084, 1085, 1086, 1087, 1088, 1089, 1279, 1288, 1313], "transpar": [253, 380, 839, 968, 1288], "overplot": [253, 333, 370, 839, 919, 956], "plot_latitudinal_level": [254, 268, 840, 854], "y_index": [255, 269, 841, 855], "x_index": [257, 271, 843, 857], "veric": [260, 846], "area_thresh": [264, 370, 850, 956], "auto_rang": [264, 850], "min_lon": [264, 333, 370, 850, 919, 956, 1272, 1285, 1310, 1313], "max_lon": [264, 333, 370, 850, 919, 956, 1272, 1285, 1310, 1313], "86": [264, 850], "min_lat": [264, 333, 370, 850, 919, 956, 1272, 1285, 1310, 1313], "max_lat": [264, 333, 370, 850, 919, 956, 1272, 1285, 1310, 1313], "44": [264, 443, 494, 850, 1027, 1079, 1261, 1298, 1316], "databas": [264, 370, 850, 956], "merc": [264, 370, 850, 956], "line_styl": [266, 329, 330, 334, 366, 367, 371, 852, 915, 916, 920, 952, 953, 957, 1285], "plot_rhi": [288, 321, 358, 874, 907, 944, 1312], "plot_vpt": [288, 321, 358, 874, 907, 944], "grid_project": [305, 891, 1024, 1025], "progress": [305, 342, 511, 891, 928, 1096], "some": [305, 342, 436, 523, 525, 891, 928, 998, 1009, 1108, 1110, 1131, 1261, 1269, 1277, 1278, 1296, 1298, 1303, 1307, 1309, 1311, 1312, 1313, 1316], "correctli": [305, 342, 891, 928], "report": [305, 342, 393, 534, 535, 536, 891, 928, 981, 1119, 1303, 1317], "github": [305, 342, 891, 928, 1261, 1289, 1303, 1316, 1319], "tracker": [305, 342, 891, 928, 1303, 1317], "azimuthalequidist": [305, 891], "line_lon": [329, 366, 915, 952], "line_lat": [329, 366, 915, 952], "compat": [329, 330, 331, 334, 366, 367, 368, 371, 395, 915, 916, 917, 920, 952, 953, 954, 957, 983, 1319], "line_x": [330, 367, 916, 953], "line_i": [330, 367, 916, 953], "ro": [331, 368, 917, 954], "label_text": [331, 368, 917, 954], "label_offset": [331, 368, 917, 954], "shapefile_kwarg": [333, 919], "single_grid_lines_label": [333, 919], "edgecolor": [333, 919, 1288, 1313], "face": [333, 919], "lambertconform": [333, 919, 1269, 1285, 1306], "domain": [333, 370, 449, 511, 919, 956, 1034, 1096, 1272], "neither": [333, 370, 401, 919, 956, 990], "extend": [333, 370, 394, 414, 919, 956, 982, 1227, 1313], "word": [333, 919], "ones": [333, 460, 479, 919, 1045, 1064, 1277], "tranpar": [333, 370, 919, 956], "pixel": [333, 516, 517, 525, 919, 1101, 1102, 1110, 1311, 1312, 1313], "lcc": [370, 956], "cylindr": [370, 956], "mill": [370, 956], "exhibit": [370, 956], "distort": [370, 956], "aea": [370, 956], "laea": [370, 956], "conform": [370, 956, 1303, 1305, 1313], "tmerc": [370, 956], "aeqd": [370, 956], "cass": [370, 956], "even": [370, 523, 956, 1108, 1288, 1303, 1309, 1313, 1319], "cyl": [370, 956], "cannot": [370, 381, 956, 969, 1311], "lake": [370, 956, 1313], "esri": [370, 956], "untest": [370, 956], "dtobj": [379, 967], "storage_opt": [380, 390, 392, 968, 978, 980], "anon": [380, 390, 392, 968, 978, 980], "open": [380, 390, 392, 968, 978, 980, 1131, 1282, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1317, 1319], "decompress": [380, 968], "bzip2": [380, 968], "backend": [380, 390, 968, 978], "googl": [380, 390, 968, 978, 1317], "cloud": [380, 390, 521, 968, 978, 1106, 1266, 1267, 1270, 1313, 1315, 1317, 1319], "storag": [380, 390, 968, 978, 1192], "amazon": [380, 390, 968, 978, 1268, 1269], "servic": [380, 390, 968, 978, 1268, 1269, 1277], "s3": [380, 390, 968, 978, 1268, 1269, 1280, 1298], "file_lik": [380, 968], "use_rsl": [381, 969], "read_": [381, 969], "trmm": [381, 394, 969, 982, 1303, 1316], "choos": [381, 969, 1266, 1276, 1294, 1298, 1315, 1319], "typeerror": [381, 407, 969], "launch_datetim": [382, 970], "radiosond": [382, 970], "launch": [382, 970], "record": [382, 970, 1312, 1314], "target_datetim": [383, 971], "profile_datetim": [383, 971], "use_arm_scan_nam": [384, 972], "scan_nam": [384, 972], "cfradial2": [385, 973], "use_file_field_attribut": [386, 974], "csu": [386, 974], "chill": [386, 974], "chl": [386, 974], "field_file_nam": [386, 974], "long_nam": [386, 974, 1298, 1306, 1314], "write_grid": [387, 975], "zlib": [388, 389, 976, 977], "read_mdv": [388, 976, 1264, 1273, 1284, 1288, 1289, 1290], "fulli": [388, 536, 976, 1316], "interchang": [388, 976], "vlevel": [388, 976], "proj_polar_radar": [388, 976], "proj_rhi_radar": [388, 976], "13": [388, 463, 468, 482, 976, 1048, 1053, 1067, 1225, 1269, 1274, 1275, 1291, 1292, 1294, 1310, 1313, 1314, 1315], "vlevel_typ": [388, 976], "vert_type_z": [388, 976], "vert_type_elev": [388, 976], "vert_type_az": [388, 976], "17": [388, 976, 1286, 1291, 1294, 1315], "vert_type_pressur": [388, 976], "vert_type_theta": [388, 976], "unknown": [388, 976], "most": [388, 496, 966, 976, 1081, 1277, 1307, 1309, 1313, 1319], "station": [390, 391, 978, 979, 1269], "linear_interp": [390, 978], "nexrad": [390, 391, 392, 393, 978, 979, 980, 981, 1266, 1267, 1270, 1276, 1280, 1294, 1298, 1303, 1314, 1315], "archiv": [390, 978, 1281, 1303], "host": [390, 392, 978, 980], "noaa": [390, 392, 394, 978, 980, 982, 1268, 1269, 1280, 1298], "nation": [390, 392, 978, 980, 1268, 1277], "climat": [390, 392, 978, 980, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "ucar": [390, 391, 978, 979], "thredd": [390, 391, 397, 978, 979, 985], "server": [390, 391, 978, 979], "letter": [390, 391, 393, 978, 979, 981], "icao": [390, 391, 978, 979], "older": [390, 391, 978, 979, 1261, 1266, 1267, 1270, 1303, 1315, 1317], "mix": [390, 978, 1236, 1280, 1298], "nearest": [390, 459, 467, 468, 476, 489, 492, 510, 978, 1022, 1025, 1044, 1052, 1053, 1061, 1074, 1077, 1095, 1212, 1218, 1219, 1253, 1309, 1312], "fsspec": [390, 392, 978, 980], "cut": [390, 391, 392, 517, 978, 979, 980, 1102, 1255, 1256], "ncdc": [390, 392, 978, 980], "gov": [390, 392, 978, 980, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1286, 1288, 1289, 1290, 1291, 1293, 1296, 1297], "edu": [390, 391, 516, 978, 979, 1101, 1280, 1298], "catalog": [390, 391, 978, 979], "html": [390, 391, 516, 978, 979, 1101, 1303, 1311, 1316, 1317], "common": [391, 979, 1303, 1316], "cdm": [391, 397, 979, 985], "url": [391, 979, 1269], "java": [391, 397, 979, 985], "tool": [391, 397, 979, 985, 1303, 1316, 1317], "opendap": [391, 979], "accept": [391, 454, 459, 467, 476, 489, 498, 522, 523, 979, 1039, 1044, 1052, 1061, 1074, 1083, 1107, 1108, 1261, 1317], "compil": [391, 522, 979, 1107, 1303, 1316], "unidata": [391, 979, 1268], "htm": [391, 979], "nw": [392, 980], "wsr": [392, 525, 980, 1110], "88d": [392, 525, 980, 1110], "iii": [392, 980], "distribut": [392, 494, 529, 531, 533, 980, 1079, 1114, 1116, 1118, 1206, 1207, 1208, 1209, 1239, 1240, 1298, 1303, 1317], "roc": [392, 980], "wsr88d": [392, 393, 980, 981], "level_iii": [392, 980], "level3info": [392, 980], "asp": [392, 980], "radar_format": [393, 981], "callid": [393, 981], "skip_range_check": [393, 981], "rsl_radar": [393, 981], "id": [393, 398, 981, 986], "verifi": [393, 981, 1241, 1259], "ioerror": [393, 981], "time_ord": [394, 982], "full_xhdr": [394, 982], "noaa_hh_hdr": [394, 982], "ignore_xhdr": [394, 982], "ignore_sweep_start_m": [394, 982], "sigmet": [394, 982, 1303], "iri": [394, 982, 1303, 1316], "sequenti": [394, 982, 1277], "re": [394, 982], "manner": [394, 982], "determind": [394, 982], "maintain": [394, 982, 1021], "reverse_and_rol": [394, 982], "strictli": [394, 982], "increas": [394, 497, 511, 521, 524, 982, 1025, 1082, 1096, 1106, 1109, 1277, 1309, 1317], "becom": [394, 982, 1298, 1306, 1309, 1312], "thisopt": [394, 982], "strict": [394, 982], "header": [394, 569, 570, 982], "decod": [394, 982], "hurrican": [394, 982, 1298], "hunter": [394, 982], "millisecond": [394, 982], "precis": [394, 982, 1261], "explic": [394, 982], "read_rsl": [394, 982, 1316], "error": [394, 398, 522, 523, 982, 986, 1107, 1108, 1216, 1244, 1245, 1261, 1312, 1316], "uf": [395, 400, 983, 988, 1303], "implement": [395, 401, 403, 405, 414, 424, 516, 527, 983, 990, 1003, 1024, 1101, 1112, 1263], "write_proj_coord_si": [397, 985], "proj_coord_si": [397, 985], "write_point_x_y_z": [397, 985], "write_point_lon_lat_alt": [397, 985], "projectioncoordinatesystem": [397, 985], "toolsui": [397, 985], "appropri": [397, 985], "understood": [397, 985], "rgb": [398, 986], "viridi": [398, 986, 1298], "color_level": [398, 986], "warp": [398, 986], "sld": [398, 986], "use_doublequot": [398, 986], "geotiff": [398, 986, 1303], "sphere": [398, 986, 1228, 1254], "latter": [398, 986], "usabl": [398, 986], "former": [398, 986], "gi": [398, 986], "while": [398, 986, 1307, 1319], "show": [398, 986, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1298, 1305, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1317], "lack": [398, 439, 986, 1001, 1011], "gdal": [398, 986, 1303], "via": [398, 986, 1022, 1023], "conda": [398, 986, 1303, 1316, 1317, 1319], "rbg": [398, 986], "column": [398, 986, 1229, 1230, 1266, 1295, 1301, 1315], "categor": [398, 986, 1299, 1313], "gdalwarp": [398, 986], "command": [398, 986, 1303, 1306, 1311, 1313, 1317, 1319], "descriptor": [398, 986], "tiff": [398, 986], "don": [398, 986, 1272], "quot": [398, 986], "help": [398, 986, 1120, 1272, 1277, 1298, 1317, 1319], "translat": [398, 986], "sr": [398, 986], "mdv_field_nam": [399, 987], "field_write_ord": [399, 400, 987, 988], "sentinel": [399, 400, 987, 988], "writabl": [399, 987], "satisfi": [399, 987], "xy": [399, 987, 1025], "irregular": [399, 987, 1261], "exce": [399, 987, 1298], "122": [399, 987, 1268, 1272, 1278, 1297], "uncompress": [399, 987], "sai": [399, 987, 1317], "uf_field_nam": [400, 988], "radar_field_nam": [400, 988], "volume_start": [400, 988], "templates_extra": [400, 988], "radar_beam_width_h": [400, 988], "radar_beam_width_v": [400, 988], "radar_receiver_bandwidth": [400, 988], "prt": [400, 988], "polarization_mod": [400, 988], "round": [400, 988, 1022, 1023, 1261], "_uf_scale_factor": [400, 988], "charact": [400, 988], "advanc": [400, 988], "usag": [400, 988], "templat": [400, 988, 1317], "mandatory_head": [400, 988], "optional_head": [400, 988], "field_head": [400, 988], "lazi": [401, 404, 410, 415, 417, 430, 437, 989, 990, 992, 999], "set_lazi": [401, 990], "callabl": [401, 437, 990, 999], "cach": [401, 428, 990], "tradit": [401, 404, 415, 417, 990], "supplement": [401, 990], "syntax": [401, 990], "prevent": [401, 990, 1025, 1317], "comparison": [401, 454, 527, 990, 1039, 1112, 1272], "__cmp__": [401, 990], "__ge__": [401, 990], "__gt__": [401, 990], "__le__": [401, 990], "__lt__": [401, 990], "__ne__": [401, 990], "nor": [401, 990], "viewitem": [401, 990], "viewkei": [401, 990], "viewvalu": [401, 990], "fromkei": [401, 990], "tradition": [401, 425, 990], "referenc": [401, 990], "lazyloaddictionari": [401, 990], "henc": [401, 990], "key1": [401, 990], "value1": [401, 990], "key2": [401, 990], "value2": [401, 990], "lazy_func": [401, 990], "lambda": [401, 990], "lazykey1": [401, 990], "delattr": 403, "dir": [405, 1131], "format_spec": 407, "formatt": 407, "getattr": 409, "helper": [411, 421, 422, 1277], "pickl": [411, 421, 422], "subclass": 414, "noth": 414, "overridden": 414, "protocol": 422, "repr": 423, "setattr": 424, "memori": [426, 527, 1025, 1112, 1311, 1312], "abstract": 428, "overrid": [428, 1289, 1313], "issubclass": 428, "invok": 428, "earli": 428, "abc": 428, "abcmeta": 428, "__subclasscheck__": 428, "notimpl": 428, "outcom": 428, "item": [429, 439, 991, 1001, 1004, 1011], "els": [431, 432, 993, 994, 1005, 1312], "value_cal": [437, 999], "mx": 441, "mn": 441, "relh_slop": [441, 454, 531, 1039, 1116], "005": 441, "destandard": 441, "h_iso0": [441, 454, 518, 1039, 1103], "slope": [441, 454, 511, 522, 531, 1039, 1096, 1107, 1116], "sigmoid": [441, 454, 531, 1039, 1116], "field_std": 441, "hlowerleft": 442, "hupperright": 442, "matrix": [442, 454, 522, 730, 739, 1039, 1107], "freq": [443, 470, 471, 491, 512, 513, 1027, 1055, 1056, 1076, 1097, 1098], "rng": [443, 515, 1027, 1100, 1211, 1212, 1227], "empir": [443, 1027], "satur": [443, 1027], "latm": [443, 1027], "toa": [444, 524, 1024, 1025, 1028, 1109], "floor": [444, 1028], "nyq": [445, 1029, 1307], "check_nyq_uniform": [445, 1029], "deriv": [445, 521, 523, 1029, 1106, 1108, 1311], "try": [445, 521, 527, 1029, 1106, 1112, 1309, 1310, 1313], "vel_dict": [445, 446, 447, 1029, 1031, 1032], "entri": [445, 1029, 1314], "sdbz_field": [446, 448, 455, 457, 472, 1031, 1033, 1040, 1042, 1057], "spectral": [446, 448, 455, 457, 465, 472, 474, 480, 481, 482, 483, 484, 485, 486, 496, 571, 1031, 1033, 1040, 1042, 1050, 1057, 1059, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1081, 1225, 1261], "signal_field": [447, 449, 462, 463, 473, 482, 483, 484, 485, 487, 488, 493, 1032, 1034, 1047, 1048, 1058, 1067, 1068, 1069, 1070, 1072, 1073, 1078], "negative_awai": [447, 466, 1032, 1051], "negative_toward": [447, 466, 1032, 1051], "width_dict": [448, 449, 1033, 1034], "subtract_nois": [449, 458, 465, 466, 473, 474, 475, 481, 484, 485, 486, 1034, 1043, 1050, 1051, 1058, 1059, 1060, 1066, 1069, 1070, 1071], "noise_field": [449, 464, 468, 469, 473, 478, 484, 485, 1034, 1049, 1053, 1054, 1058, 1063, 1069, 1070], "lag": [449, 458, 466, 475, 487, 488, 1034, 1043, 1051, 1060, 1072, 1073], "denomin": [449, 1034], "varianc": [449, 1034, 1225, 1226, 1231, 1242, 1243], "srivastava": [449, 1034], "jameson": [449, 1034], "meteorologi": [449, 463, 468, 482, 521, 534, 1021, 1030, 1034, 1048, 1053, 1067, 1106, 1119, 1225], "februari": [449, 1034], "1979": [449, 1034], "rhohv_snow": [450, 527, 1035, 1112], "rhohv_rain": [450, 527, 1035, 1112], "rhohv_ml": [450, 527, 1035, 1112], "93": [450, 470, 491, 511, 527, 1035, 1055, 1076, 1096, 1112], "zh_snow": [450, 527, 1035, 1112], "zh_rain": [450, 527, 1035, 1112], "zh_ml": [450, 527, 1035, 1112], "27": [450, 527, 1035, 1112, 1296], "zv_snow": [450, 527, 1035, 1112], "zv_rain": [450, 527, 1035, 1112], "zv_ml": [450, 527, 1035, 1112], "26": [450, 459, 527, 1035, 1044, 1112], "beam_factor": [450, 527, 1035, 1112], "npts_diagram": [450, 527, 1035, 1112], "81": [450, 527, 1035, 1112, 1314], "rng_bottom_max": [450, 527, 1035, 1112], "200000": [450, 527, 1035, 1112, 1285, 1298], "theoretical_cross_correlation_ratio": [450, 1035], "diagram": [450, 1035], "rhohv_theo_dict": [450, 1035], "sigma_bird": [451, 1036], "vol_refl_field": [451, 491, 1036, 1076], "bird_density_field": [451, 1036], "densiti": [451, 531, 1036, 1116, 1299, 1313], "volumetr": [451, 491, 1036, 1076, 1304], "bird_density_dict": [451, 1036], "filt_field": [452, 1037], "unfilt_field": [452, 1037], "ccor_field": [452, 1037], "ccor": [452, 1037], "unfilt": [452, 1037, 1313], "ccor_dict": [452, 1037], "cdr_field": [453, 1038], "circular": [453, 1038, 1239, 1240, 1298], "depolar": [453, 1038], "cdr": [453, 1038], "features_matrix": [454, 1039], "var_nam": [454, 498, 518, 531, 1039, 1083, 1103, 1116], "hydro_nam": [454, 498, 518, 531, 1039, 1083, 1103, 1116], "ag": [454, 518, 527, 1039, 1103, 1112, 1299, 1311, 1313], "lr": [454, 518, 1039, 1103, 1299, 1311, 1313], "rp": [454, 518, 1039, 1103, 1299, 1311, 1313], "rn": [454, 518, 1039, 1103, 1299, 1311, 1313], "mh": [454, 518, 1039, 1103, 1299, 1311, 1313], "ih": [454, 518, 1039, 1103, 1299, 1311, 1313], "hdg": [454, 518, 1039, 1103, 1299, 1311, 1313], "nsamples_it": [454, 1039], "20000": [454, 495, 497, 529, 1039, 1080, 1082, 1114, 1285, 1309], "external_iter": [454, 1039], "internal_iter": [454, 1039], "cv_approach": [454, 1039], "num_samples_arr": [454, 1039], "n_samples_syn": [454, 1039], "nmedoids_min": [454, 498, 1039, 1083], "acceptance_threshold": [454, 498, 1039, 1083], "001": [454, 531, 1039, 1116, 1233, 1288], "parallel": [454, 521, 522, 523, 1039, 1106, 1107, 1108], "sample_data": [454, 1039], "kmax_it": [454, 498, 1039, 1083], "nsamples_smal": [454, 1039], "40000": [454, 1039, 1274, 1278, 1285, 1309], "sampling_size_clara": [454, 1039], "niter_clara": [454, 1039], "keep_labeled_data": [454, 1039], "use_median": [454, 498, 1039, 1083], "allow_label_dupl": [454, 1039], "centroid": [454, 495, 518, 529, 1039, 1080, 1103, 1114, 1313], "nsampl": [454, 529, 531, 1039, 1114, 1116], "nvariabl": [454, 518, 1039, 1103], "extern": [454, 1039], "loop": [454, 1039, 1300], "medoid": [454, 498, 1039, 1083], "inter": [454, 498, 1039, 1083], "dispers": [454, 498, 1039, 1083], "cluster": [454, 518, 1039, 1103, 1313], "critic": [454, 1039], "approach": [454, 511, 518, 525, 527, 1039, 1096, 1103, 1110, 1112], "reject": [454, 1039], "intermedi": [454, 498, 1039, 1083], "kmedoid": [454, 498, 1039, 1083], "clara": [454, 1039], "exceed": [454, 508, 1039, 1093], "kept": [454, 497, 1039, 1082], "labeled_data": [454, 1039], "medoids_dict": [454, 498, 1039, 1083], "final_medoids_dict": [454, 498, 1039, 1083], "sphidp_field": [455, 1040], "phase_offset": [456, 466, 1041, 1051], "signal_h_field": [456, 458, 465, 466, 474, 475, 480, 481, 486, 1041, 1043, 1050, 1051, 1059, 1060, 1065, 1066, 1071], "signal_v_field": [456, 458, 465, 466, 474, 475, 480, 481, 486, 1041, 1043, 1050, 1051, 1059, 1060, 1065, 1066, 1071], "sdbzv_field": [457, 1042], "zdr_dict": [457, 458, 1042, 1043], "noise_h_field": [458, 465, 466, 474, 475, 481, 486, 1043, 1050, 1051, 1059, 1060, 1066, 1071], "noise_v_field": [458, 465, 466, 474, 475, 481, 486, 1043, 1050, 1051, 1059, 1060, 1066, 1071], "ref_tim": [459, 467, 476, 489, 490, 492, 1044, 1052, 1061, 1074, 1075, 1077], "latlon_tol": [459, 489, 492, 1044, 1074, 1077, 1211, 1238], "0005": [459, 489, 492, 1044, 1074, 1077], "delta_rng": [459, 489, 1044, 1074, 1227], "delta_azi": [459, 489, 1044, 1074, 1213, 1227], "hmax": [459, 467, 476, 489, 492, 1044, 1052, 1061, 1074, 1077, 1238], "hre": [459, 467, 476, 489, 492, 525, 1044, 1052, 1061, 1074, 1077, 1110], "250": [459, 489, 497, 1024, 1025, 1044, 1074, 1082, 1311, 1314], "avg_typ": [459, 467, 476, 489, 1044, 1052, 1061, 1074, 1213, 1215], "interp_kind": [459, 467, 476, 489, 492, 1044, 1052, 1061, 1074, 1077, 1253], "qvp": [459, 467, 476, 489, 492, 528, 1044, 1052, 1061, 1074, 1077, 1113], "enhanc": [459, 1044, 1319], "interest": [459, 489, 492, 1044, 1074, 1077, 1272, 1298, 1313], "central": [459, 489, 1044, 1074, 1227], "evp": [459, 489, 1044, 1074], "regardless": [459, 467, 476, 489, 492, 508, 1044, 1052, 1061, 1074, 1077, 1093], "elimin": [459, 467, 476, 489, 492, 1044, 1052, 1061, 1074, 1077, 1307, 1309], "kaltenboeck": [459, 1044], "2016": [459, 467, 497, 518, 1044, 1052, 1082, 1103, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1317], "storm": [459, 530, 1044, 1115, 1197, 1199, 1280, 1298, 1309, 1312], "methodologi": [459, 534, 1044, 1119, 1307], "meteorologisch": [459, 1044], "zeitschrift": [459, 1044], "207": [459, 1044], "222": [459, 1044, 1264, 1281, 1312], "fields_in_list": [460, 479, 1045, 1064], "fields_out_list": [460, 479, 496, 1045, 1064, 1081], "fourier": [460, 479, 1045, 1064], "get_window": [460, 479, 1045, 1064], "ifft": [460, 1045], "l_field": [461, 1046], "logarithm": [461, 1046], "ll": [461, 1046], "log10": [461, 1046, 1272], "mph_dict": [462, 1047], "navg": [463, 482, 1048, 1067, 1225], "nnoise_min": [463, 482, 1048, 1067, 1225], "dbadu_to_dbm_hh": [463, 482, 484, 485, 1048, 1067, 1069, 1070], "dbadu_to_dbm_vv": [463, 482, 484, 485, 1048, 1067, 1069, 1070], "sehkon": [463, 482, 1048, 1067, 1225], "1974": [463, 468, 482, 1048, 1053, 1067, 1225], "noise_dict": [463, 468, 469, 482, 1048, 1053, 1054, 1067], "808": [463, 468, 482, 1048, 1053, 1067, 1225], "811": [463, 468, 482, 1048, 1053, 1067, 1225], "noisedbz_v": [464, 1049], "ref_dist": [464, 1049], "noisedbz": [464, 1049], "fields_list": [465, 466, 1050, 1051], "use_pwr": [465, 1050], "smooth_window": [465, 481, 484, 485, 1050, 1066, 1069, 1070], "srhohv_field": [465, 474, 480, 1050, 1059, 1065], "pwr_h_field": [465, 474, 481, 1050, 1059, 1066], "pwr_v_field": [465, 474, 481, 1050, 1059, 1066], "quasi": [467, 476, 528, 1052, 1061, 1113], "zhang": [467, 489, 499, 528, 1052, 1074, 1084, 1113], "reev": [467, 528, 1052, 1113], "kumjian": [467, 476, 528, 1052, 1061, 1113], "tschallen": [467, 528, 1052, 1113], "tr\u00f6mel": [467, 1052], "simmer": [467, 499, 528, 1052, 1084, 1113], "jtech": [467, 489, 1052, 1074], "33": [467, 1052, 1314], "551": [467, 1052, 1270], "562": [467, 1052], "pwr_field": [468, 469, 477, 485, 496, 1053, 1054, 1062, 1070, 1081], "get_noise_po": [468, 469, 1053, 1054, 1226], "noisi": [468, 469, 1053, 1054], "noise_pos_dict": [468, 469, 1053, 1054], "reserv": [468, 1053, 1211, 1212, 1238], "ngates_min": [469, 1054, 1226], "curti": [469, 1054, 1226], "torr": [469, 1054, 1226], "2737": [469, 1054, 1226], "2753": [469, 1054, 1226], "kw2": [470, 1055], "rcs_field": [470, 471, 1055, 1056], "water": [470, 491, 511, 1055, 1076, 1096], "rc": [470, 471, 511, 1055, 1056, 1096], "rcs_dict": [470, 471, 1055, 1056], "lmf": [471, 477, 1056, 1062], "radconst": [471, 477, 1056, 1062], "tx_pwr": [471, 1056], "lrx": [471, 477, 1056, 1062], "ltx": [471, 1056], "lradom": [471, 477, 1056, 1062], "neglect_gas_att": [471, 1056], "feed": [471, 477, 1056, 1062], "neglect": [471, 1056], "dbz_dict": [472, 473, 1057, 1058], "use_rhohv": [474, 480, 1059, 1065], "srhohv": [474, 480, 1059, 1065], "srho_hv": [474, 1059], "rhohv_dict": [474, 475, 1059, 1060], "weight_pow": [476, 1061], "ab": [476, 1061], "grng": [476, 1061], "tobin": [476, 1061], "2017": [476, 489, 1061, 1074], "surfac": [476, 494, 1061, 1079, 1298], "ic": [476, 489, 1061, 1074, 1288, 1299, 1313], "pellet": [476, 1061], "forecast": [476, 1061], "2065": [476, 1061], "2082": [476, 1061], "THE": [477, 1062], "s_pwr_dict": [477, 1062], "sphidp_dict": [480, 1065], "compute_pow": [481, 485, 1066, 1070], "szdr_dict": [481, 1066], "phase_dict": [483, 1068], "pwr_dict": [484, 1069], "sdbz_dict": [485, 1070], "srhohv_dict": [486, 1071], "statist": [487, 488, 518, 1072, 1073, 1103, 1215], "fluctuat": [487, 488, 1072, 1073], "st1_dict": [487, 1072], "st1": [487, 1072, 1311], "st2_dict": [488, 1073], "st2": [488, 1073, 1311], "bukovc": [489, 1074], "winter": [489, 1074, 1280, 1298], "liquid": [489, 1074, 1313], "reveal": [489, 1074, 1313], "2dvd": [489, 1074], "oklahoma": [489, 1074, 1193], "56": [489, 1074, 1300, 1312], "1345": [489, 1074], "1363": [489, 1074], "along_azi": [490, 1075], "fixed_rang": [490, 1075], "fixed_azimuth": [490, 1075], "fixed_elev": [490, 1075], "rng_tol": [490, 1075], "value_start": [490, 1075], "value_stop": [490, 1075], "acoord": [490, 1075], "along_el": [490, 1075], "along_rng": [490, 1075], "stop": [490, 1075], "kw": [491, 1076], "vol_refl_dict": [491, 1076], "10log10": [491, 1076], "wide": [493, 1078], "wbn_dict": [493, 1078], "dx": [494, 511, 530, 1079, 1096, 1115, 1298], "dy": [494, 530, 1079, 1115, 1298], "level_m": [494, 1079], "always_core_thr": [494, 965, 1079, 1298], "42": [494, 530, 1079, 1115, 1298], "bkg_rad_km": [494, 1079, 1298], "use_cosin": [494, 965, 1079, 1298], "max_diff": [494, 965, 1079, 1298], "zero_diff_cos_v": [494, 965, 1079, 1298], "55": [494, 1079, 1292, 1298, 1313], "scalar_diff": [494, 965, 1079, 1298], "use_addit": [494, 965, 1079, 1298], "calc_thr": [494, 1079, 1298], "weak_echo_thr": [494, 1079, 1298], "min_dbz_us": [494, 1079, 1298], "db_averag": [494, 1079, 1298], "remove_small_object": [494, 1079, 1298], "min_km2_siz": [494, 1079, 1298], "val_for_max_conv_rad": [494, 1079, 1298], "max_conv_rad_km": [494, 1079, 1298], "cs_core": [494, 1079], "nosfcecho": [494, 1079, 1298], "weakecho": [494, 1079, 1298], "sf": [494, 1079, 1298], "conv": [494, 1079, 1298], "estimate_flag": [494, 1079, 1298], "estimate_offset": [494, 1079, 1298], "partit": [494, 530, 1079, 1115, 1263, 1313], "convect": [494, 530, 965, 1079, 1115, 1266, 1295, 1301, 1315], "stratiform": [494, 530, 965, 1079, 1115, 1266, 1295, 1301, 1312, 1315], "yuter": [494, 530, 965, 1079, 1115, 1236, 1280, 1298], "1997": [494, 965, 1079, 1298], "pars": [494, 1079], "classifi": [494, 518, 965, 1079, 1103, 1298, 1299, 1313], "cosin": [494, 965, 1079, 1298], "simpler": [494, 1079, 1298], "scalar": [494, 965, 1079, 1298], "eqn": [494, 965, 1079], "b1": [494, 965, 1079], "percentag": [494, 1079, 1238], "weak": [494, 1079, 1298], "underestim": [494, 1079, 1298], "wih": [494, 1079], "convsf_dict": [494, 1079, 1298], "raindrop": [494, 1079, 1298], "pacif": [494, 1079, 1298], "warm": [494, 521, 1079, 1106, 1298, 1313], "pool": [494, 1079, 1298], "implic": [494, 1079, 1298], "appl": [494, 523, 528, 530, 533, 1079, 1108, 1113, 1115, 1118, 1298, 1317], "meteor": [494, 523, 528, 530, 533, 1079, 1108, 1113, 1115, 1118, 1298, 1317], "36": [494, 1079, 1269, 1272, 1274, 1278, 1292, 1296, 1298, 1300, 1309], "847": [494, 1079, 1298], "867": [494, 1079, 1298], "doi": [494, 497, 518, 522, 523, 525, 1079, 1082, 1103, 1107, 1108, 1110, 1236, 1280, 1298, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "org": [494, 516, 1030, 1079, 1101, 1236, 1280, 1298, 1303, 1317], "1175": [494, 523, 525, 1079, 1108, 1110, 1298], "1520": [494, 1079, 1298], "0450": [494, 1079, 1298], "036": [494, 1079, 1298], "3c0847": [494, 1079, 1298], "morsdo": [494, 1079, 1298], "3e2": [494, 1079, 1298], "smith": [494, 1079, 1298], "wilheit": [494, 1079, 1298], "zipser": [494, 1079, 1298], "character": [494, 497, 530, 1079, 1082, 1115, 1298], "tropic": [494, 1079, 1298], "kwajex": [494, 1079, 1298], "385": [494, 1079, 1298], "415": [494, 1079, 1298], "jam2206": [494, 1079, 1298], "lapse_r": [495, 514, 518, 1080, 1099, 1103], "nsamples_max": [495, 1080], "prepar": [495, 1080, 1305, 1306, 1307, 1309, 1310, 1311, 1314], "refl_std": [495, 1080], "zdr_std": [495, 1080], "kdp_std": [495, 1080], "rhohv_std": [495, 1080], "relh_std": [495, 1080], "negative_vel_prior": [496, 1081], "quit": [496, 1081, 1313], "everi": [496, 522, 523, 533, 582, 1081, 1107, 1108, 1118, 1303, 1312], "tail": [496, 1081], "prioriti": [496, 536, 1081, 1261, 1319], "chosen": [496, 1081], "twice": [496, 1081], "fill_valu": [497, 511, 521, 522, 523, 530, 1082, 1096, 1106, 1107, 1108, 1115, 1237, 1305, 1306, 1314], "ml_field": [497, 525, 526, 527, 1082, 1110, 1111, 1112], "ml_pos_field": [497, 525, 526, 527, 1082, 1110, 1111, 1112], "max_rang": [497, 1082], "detect_threshold": [497, 1082], "02": [497, 1024, 1025, 1082, 1280, 1294, 1298, 1301, 1315], "interp_hol": [497, 1082], "max_length_hol": [497, 1082], "check_min_length": [497, 1082], "get_iso0": [497, 525, 526, 527, 1082, 1110, 1111, 1112], "ml": [497, 525, 1082, 1110, 1261], "plai": [497, 1082, 1316], "affect": [497, 515, 1025, 1082, 1100], "sensit": [497, 1082], "erron": [497, 1082, 1307], "hole": [497, 1082], "ml_obj": [497, 525, 526, 527, 1082, 1110, 1111, 1112], "ml_dict": [497, 525, 526, 527, 1082, 1110, 1111, 1112], "iso0_dict": [497, 525, 526, 527, 1082, 1110, 1111, 1112], "all_ml": [497, 1082], "scipion": [497, 1082], "bern": [497, 518, 522, 1082, 1103, 1107], "q": [497, 1082], "meteorol": [497, 528, 1082, 1113, 1298], "soc": [497, 1082], "142": [497, 1082], "108": [497, 1082], "124": [497, 1082, 1300, 1312], "1002": [497, 1082], "qj": [497, 1082], "2672": [497, 1082], "niter": [498, 1083], "nvar": [498, 510, 1083, 1095], "medoids_arr": [498, 1083], "a_field": [499, 500, 503, 1084, 1085, 1088, 1313], "rr_field": [499, 500, 501, 502, 503, 504, 505, 1084, 1085, 1086, 1087, 1088, 1089, 1090], "diederich": [499, 1084], "tromel": [499, 528, 1084, 1113], "wavelenght": [499, 1084], "hydrometeorologi": [499, 1084], "487": [499, 1084], "502": [499, 1084], "alphazr": [500, 1085], "0376": [500, 502, 503, 504, 1085, 1087, 1088, 1089], "betazr": [500, 1085], "6112": [500, 502, 503, 504, 1085, 1087, 1088, 1089], "alphaz": [500, 503, 504, 1085, 1088, 1089], "betaz": [500, 503, 504, 1085, 1088, 1089], "alphaa": [500, 503, 1085, 1088], "betaa": [500, 503, 1085, 1088], "mp_factor": [500, 1085], "master_field": [500, 503, 504, 1085, 1088, 1089], "thresh_max": [500, 503, 504, 1085, 1088, 1089], "act": [500, 503, 504, 584, 1085, 1088, 1089, 1298, 1305], "master": [500, 503, 504, 1085, 1088, 1089, 1289, 1317], "slave": [500, 503, 504, 1085, 1088, 1089], "blend": [503, 504, 1088, 1089, 1288], "rain_mast": [503, 504, 1088, 1089], "alphakdp": [504, 1089], "betakdp": [504, 1089], "mm": [504, 1089, 1298, 1313], "polynomi": [505, 1090], "develop": [505, 1090, 1303, 1311, 1316, 1317], "mcgill": [505, 1090, 1303], "az_tol": [506, 507, 1091, 1092, 1218], "wind_field": [506, 507, 509, 1091, 1092, 1094], "windshear_field": [506, 507, 1091, 1092], "windshear": [506, 507, 1091, 1092, 1261], "npoints_min": [508, 1093], "azi_spacing_max": [508, 1093], "vel_diff_max": [508, 1093], "rad_vel_field": [508, 1093], "u_vel_field": [508, 1093], "v_vel_field": [508, 1093], "w_vel_field": [508, 1093], "vel_est_field": [508, 1093], "vel_std_field": [508, 1093], "vel_diff_field": [508, 1093], "vad": [508, 533, 534, 1093, 1118, 1119, 1261, 1266, 1295, 1301, 1315, 1317], "techniqu": [508, 1021, 1093, 1312], "recomput": [508, 1093], "difer": [508, 1093], "vert_proj": [509, 1094], "neglig": [509, 1094], "v_r": [509, 1094], "v_el": [509, 1094], "v_az": [509, 1094], "perpendicular": [509, 1094], "v_h": [509, 1094], "know": [509, 1094, 1319], "hold": [509, 1094], "sonde_dset": [510, 1095], "time_kei": [510, 1095], "height_kei": [510, 1095], "vap": [510, 1095], "startard": [510, 1095], "ncvar": [510, 1095], "return_d": [510, 1095], "radar_spec": [511, 1096], "dem_grid": [511, 1096], "terrain_altitude_field": [511, 1096], "bent_terrain_altitude_field": [511, 1096], "terrain_slope_field": [511, 1096], "terrain_aspect_field": [511, 1096], "elevation_angle_field": [511, 1096], "visibility_field": [511, 1096], "min_vis_elevation_field": [511, 1096], "min_vis_altitude_field": [511, 1096], "incident_angle_field": [511, 1096], "effective_area_field": [511, 1096], "sigma_0_field": [511, 1096], "rcs_clutter_field": [511, 1096], "dbm_clutter_field": [511, 1096], "dbz_clutter_field": [511, 1096], "visibility_polar_field": [511, 1096], "az_conv": [511, 1096], "daz": [511, 1096], "012": [511, 1096], "3333333333333333": [511, 1096], "atm_att": [511, 1096], "mosotti_kw": [511, 1096], "9644": [511, 1096], "raster_oversampl": [511, 1096], "sigma0_method": [511, 1096], "gabella": [511, 518, 1096, 1103], "clip": [511, 1096], "return_pyart_object": [511, 1096], "frequenti": [511, 1096], "ghz": [511, 1096], "tau": [511, 1096], "terrain": [511, 1096, 1277], "backscatt": [511, 521, 528, 1096, 1106, 1113], "incid": [511, 1096], "topographi": [511, 1096], "rx": [511, 1096], "discret": [511, 1021, 1096], "slower": [511, 521, 1025, 1096, 1106], "equival": [511, 527, 591, 1014, 1096, 1112, 1268, 1279, 1287, 1293], "One": [511, 1096, 1305, 1314, 1317, 1319], "clausiu": [511, 1096], "mosotti": [511, 1096], "materi": [511, 1096, 1303], "sigma": [511, 529, 1096, 1114, 1197, 1288, 1289], "naught": [511, 1096], "undefin": [511, 1096], "oversampl": [511, 1096, 1261], "delrieu": [511, 1096], "lot": [511, 1096, 1312], "directli": [511, 1096, 1277, 1313], "bent_terrain_altitude_d": [511, 1096], "terrain_slope_d": [511, 1096], "terrain_aspect_d": [511, 1096], "elevation_d": [511, 1096], "min_vis_elevation_d": [511, 1096], "min_vis_altitude_d": [511, 1096], "visibility_d": [511, 1096], "incident_angle_d": [511, 1096], "effective_area_d": [511, 1096], "sigma_0_d": [511, 1096], "rcs_clutter_d": [511, 1096], "dbm_clutter_d": [511, 1096], "dbz_clutter_d": [511, 1096], "visibility_polar_d": [511, 1096], "perona": [511, 1096], "1998": [511, 1096], "orograph": [511, 1096], "influenc": [511, 1018, 1021, 1024, 1025, 1096, 1309], "geometr": [511, 1096], "1485": [511, 1096], "1494": [511, 1096], "freq_band": [513, 1098], "temp_ref_field": [514, 1099], "heigh_over_iso0": [514, 1099], "iso0_ref": [514, 1099], "insuffici": [514, 1099], "rng_left_km": [515, 1100], "rng_right_km": [515, 1100], "ang": [515, 1100, 1288, 1289], "ang_r": [515, 1100], "ml_bottom": [515, 1100], "msl": [515, 525, 1100, 1110, 1238], "grid1": [516, 1101], "grid2": [516, 1101], "return_valu": [516, 1101], "displac": [516, 1101], "en": [516, 1101, 1303, 1311, 1316, 1317], "wikipedia": [516, 1101], "wiki": [516, 1030, 1101], "phase_correl": [516, 1101], "inspir": [516, 1101], "christoph": [516, 1101], "gohlk": [516, 1101], "lfd": [516, 1101], "uci": [516, 1101], "imreg": [516, 1101], "advect": [516, 517, 1101, 1102], "trim_edg": [517, 1102], "field_list": [517, 1016, 1102], "shifted_grid": [517, 1102], "subset": [517, 1102, 1266, 1295, 1296], "mass_cent": [518, 1103, 1313], "entropy_field": [518, 1103], "compute_entropi": [518, 1103], "output_dist": [518, 1103], "besic": [518, 526, 1103, 1111, 1313], "nclass": [518, 1103], "decai": [518, 1103], "celsiu": [518, 1103, 1261], "entropi": [518, 1103], "fields_dict": [518, 1103], "figuera": [518, 1103, 1303, 1317], "ventura": [518, 1103, 1303, 1317], "grazioli": [518, 522, 1103, 1107, 1303, 1317], "germann": [518, 1103, 1303, 1317], "semi": [518, 1103], "supervis": [518, 1103], "mea": [518, 1103, 1236, 1280], "4425": [518, 1103], "4445": [518, 1103], "5194": [518, 1103, 1236, 1280], "amt": [518, 1103, 1236, 1280], "piecewis": [519, 520, 1104, 1105], "optim": [519, 520, 521, 1025, 1104, 1105, 1106], "lenght": [519, 520, 1104, 1105], "kdp_dict": [519, 520, 521, 522, 523, 1104, 1105, 1106, 1107, 1108], "cg": [521, 1106], "clpf": [521, 1106], "length_scal": [521, 1106], "first_guess": [521, 1106], "finite_ord": [521, 1106], "variat": [521, 1106], "maesaka": [521, 1106, 1313], "2012": [521, 523, 1106, 1108, 1313], "monoton": [521, 524, 1106, 1109, 1277], "propag": [521, 522, 523, 1106, 1107, 1108], "notat": [521, 1106], "primari": [521, 1106], "proport": [521, 1106], "analys": [521, 522, 523, 1106, 1107, 1108], "nonlinear": [521, 1106], "conjug": [521, 1106], "gradient": [521, 1106, 1277], "broyden": [521, 1106], "fletcher": [521, 1106], "goldfarb": [521, 1106], "shanno": [521, 1106], "bfg": [521, 1106], "howev": [521, 1106, 1307, 1311, 1312, 1313], "100k": [521, 1106], "parameter": [521, 1106], "attentu": [521, 1106], "constraint": [521, 1106], "bring": [521, 1106], "guess": [521, 1106], "root": [521, 1106, 1316, 1319], "signifi": [521, 530, 1106, 1115], "everywher": [521, 1106], "exactli": [521, 1106, 1272], "avoid": [521, 1106, 1261, 1312, 1319], "converg": [521, 1106], "closer": [521, 1106], "finit": [521, 1106], "accuraci": [521, 1106], "maxit": [521, 1106], "met": [521, 1106], "achiev": [521, 1106], "somewhat": [521, 1106], "thread": [521, 1106], "cpu": [521, 1106], "multiprocess": [521, 1106], "capabl": [521, 1106, 1307, 1314], "relev": [521, 1106], "phidpf_dict": [521, 1106], "phidpr_dict": [521, 522, 523, 1106, 1107, 1108], "forward": [521, 1106, 1228, 1229], "iwanami": [521, 1106], "maki": [521, 1106], "seventh": [521, 1106], "european": [521, 1106], "confer": [521, 1106, 1303], "hydrologi": [521, 1106], "rcov": [522, 1107], "pcov": [522, 1107], "prefilter_psidp": [522, 523, 1107, 1108], "filter_opt": [522, 523, 1107, 1108], "kalman": [522, 1107], "schneeb": [522, 1107], "psidp": [522, 523, 1107, 1108], "char": [522, 523, 1107, 1108], "capit": [522, 523, 1107, 1108], "intercept": [522, 1107], "3x3": [522, 1107], "covari": [522, 1107], "4x4": [522, 1107], "filter_psidp": [522, 523, 1107, 1108], "enabl": [522, 523, 1107, 1108], "kdp_std_dict": [522, 1107], "dev": [522, 1107, 1261, 1309, 1317], "ensembl": [522, 1107], "ieee": [522, 1107], "geosci": [522, 1107], "remot": [522, 1107, 1268, 1317], "sen": [522, 1107], "52": [522, 528, 1107, 1113, 1296, 1311, 1313], "5137": [522, 1107], "5149": [522, 1107], "1109": [522, 1107], "tgr": [522, 1107], "2287017": [522, 1107], "windsiz": [523, 1108], "n_iter": [523, 1108], "interp": [523, 1108], "vulpiani": [523, 1108], "pre": [523, 1108, 1312, 1313], "ex": [523, 1108, 1277, 1317], "advantag": [523, 1108], "eat": [523, 1108], "gianfranco": [523, 1108], "mario": [523, 1108], "montopoli": [523, 1108], "luca": [523, 1108], "delli": [523, 1108], "passeri": [523, 1108], "antonio": [523, 1108], "gioia": [523, 1108], "pietro": [523, 1108], "giordano": [523, 1108], "frank": [523, 1108], "marzano": [523, 1108], "On": [523, 1108], "dual": [523, 1108], "mountain": [523, 1108], "climatol": [523, 1108, 1298], "51": [523, 1108, 1296], "405": [523, 1108], "425": [523, 1108], "05024": [523, 1108], "profile_field": [524, 1109], "height_field": [524, 1109], "3re": [524, 1109], "whole": [524, 1109], "height_dict": [524, 1109], "profile_dict": [524, 1109], "nvol": [525, 1110], "maxh": [525, 1110], "rhomin": [525, 1110], "rhomax": [525, 1110], "94": [525, 1110, 1314], "zhmin": [525, 1110], "hwindow": [525, 1110], "mlzhmin": [525, 1110], "mlzhmax": [525, 1110], "mlzdrmin": [525, 1110], "mlzdrmax": [525, 1110], "htol": [525, 1110], "ml_bottom_diff_max": [525, 1110], "time_accu_max": [525, 1110], "1800": [525, 1110, 1305], "nml_points_min": [525, 1110], "wlength": [525, 1110], "percentile_bottom": [525, 1110], "percentile_top": [525, 1110], "time_nodata_allow": [525, 1110], "3600": [525, 1110, 1305], "ml_global": [525, 1110], "aggreg": [525, 527, 1110, 1112, 1299, 1313], "ml_bottom_dif_max": [525, 1110], "percentil": [525, 1110], "stack": [525, 1110, 1316, 1317], "Its": [525, 1110], "kraus": [525, 1110], "design": [525, 1110, 1236, 1288, 1298, 1317], "prototyp": [525, 1110], "clim": [525, 528, 1110, 1113], "1354": [525, 1110], "1364": [525, 1110], "2007jamc1634": [525, 1110], "force_continu": [526, 1111], "dist_max": [526, 1111], "350": [526, 1111, 1296], "heightand": [526, 1111], "1400": [527, 1112], "4500": [527, 1112, 1305], "ns_factor": [527, 1112], "rhohv_corr_min": [527, 1112], "rhohv_nash_min": [527, 1112], "ang_iso0": [527, 1112], "age_iso0": [527, 1112], "ml_thickness_iso0": [527, 1112], "ml_memori": [527, 1112], "rhohv_field_ob": [527, 1112], "rhohv_field_theo": [527, 1112], "nse": [527, 1112], "hour": [527, 1112, 1268, 1269], "ml_found_obj": [527, 1112], "instantan": [527, 1112], "desired_angl": [528, 1113], "wanted_angl": [528, 1113], "dictonari": [528, 1113], "troemel": [528, 1113], "2529": [528, 1113], "2548": [528, 1113], "54": [528, 1113, 1269, 1312], "2344": [528, 1113], "2359": [528, 1113], "submit": [528, 1113, 1303], "technol": [528, 1113], "fm": [529, 1114], "rg": [529, 531, 1114, 1116], "nbin": [529, 1114], "110": [529, 1114], "pdf_zh_max": [529, 1114], "pdf_relh_max": [529, 1114], "sigma_zh": [529, 1114], "sigma_relh": [529, 1114], "random": [529, 531, 1114, 1116], "platykurtic_dbz": [529, 1114], "platykurtic_h_iso0": [529, 1114], "nfeatur": [529, 1114], "histogram": [529, 1114, 1272, 1307], "platykurtik": [529, 1114], "guassian": [529, 1114], "quantiz": [529, 1114], "platykurt": [529, 1114], "fm_sampl": [529, 1114], "intens": [530, 1115, 1313], "work_level": [530, 1115], "peak_rel": [530, 1115], "area_rel": [530, 1115], "medium": [530, 1115], "bkg_rad": [530, 1115], "11000": [530, 1115, 1309], "use_intens": [530, 1115], "steiner": [530, 1115, 1298], "1995": [530, 1115, 1298], "greater": [530, 1115, 1298], "bright": [530, 1115], "sgp": [530, 1115, 1193], "peaked": [530, 1115], "eclass": [530, 1115], "climatolog": [530, 1115, 1298], "gaug": [530, 1115, 1298], "1978": [530, 1115, 1298, 1313], "2007": [530, 1115, 1298], "par_var": [531, 1116], "probabl": [531, 1116, 1231, 1232, 1233, 1245, 1311], "membership": [531, 1116], "synthetic_ob": [531, 1116], "z_want": [533, 534, 1118, 1119, 1300, 1312, 1317], "valid_ray_min": [533, 1118, 1317], "brown": [533, 1118, 1261, 1317], "amount": [533, 1118, 1309, 1317], "_averag1d": [533, 1118, 1317], "idw": [533, 1118], "wexler": [533, 1118, 1317], "1968": [533, 1118, 1317], "kinemat": [533, 1118, 1317], "105": [533, 1118, 1300, 1312, 1317], "113": [533, 1118, 1296, 1317], "linespac": [534, 1119], "michelson": [534, 1119], "andersson": [534, 1119], "koistinen": [534, 1119], "collier": [534, 1119], "riedl": [534, 1119], "szturc": [534, 1119], "gjertsen": [534, 1119], "nielsen": [534, 1119], "overgaard": [534, 1119], "baltex": [534, 1119], "centr": [534, 1119], "smhi": [534, 1119], "climatologi": [534, 1021, 1119], "swedish": [534, 1119], "meteorolog": [534, 1030, 1119], "hydrolog": [534, 1119], "institut": [534, 1119, 1314], "norrkop": [534, 1119], "statu": [535, 1317], "dependeci": 535, "sy": 535, "descript": [536, 584, 586, 599, 681, 752, 753, 790, 966, 989, 1013, 1026, 1120, 1205, 1253, 1303, 1317], "polish": 536, "risk": 536, "bug": [536, 1261, 1303, 1316, 1317], "momentpm": 539, "momentm": 539, "share": 539, "extra": [539, 550, 551, 567, 568], "momentspm": 539, "momentsm": 539, "metranet_lib": 539, "keep_all_rai": 550, "physic_valu": [550, 551, 567, 568, 1311], "masked_arrai": [550, 551, 567, 568, 1305, 1314], "duplic": [550, 1261], "ret_data": [550, 551, 567, 568], "radardata": [550, 551, 567, 568], "reorder_angl": 551, "reorder": [551, 1261], "knmi_h5": [558, 1261], "file_path": 559, "properli": [567, 568, 1259, 1269], "cpi_head": 569, "3d": [571, 1312], "sinarame_h5": [576, 582], "folder": [582, 1317], "commun": [584, 1317, 1319], "interact": 599, "az_data": 730, "az_ref": 730, "el_data": 730, "el_ref": 730, "sunhit": [730, 739], "npar": [730, 739], "do_elcorr": 730, "radian": [730, 1206, 1208, 1249], "concret": 1003, "__getitem__": 1003, "__setitem__": 1003, "__delitem__": 1003, "__iter__": 1003, "__len__": 1003, "robust": [1013, 1313], "src_radar": 1014, "dest_radar": 1014, "distance_toler": [1014, 1272], "gatefilter_src": [1014, 1272], "time_toler": [1014, 1272], "kd": 1014, "tree": [1014, 1025], "easi": [1014, 1030, 1303], "src_radar_i": 1014, "src_radar_x": 1014, "destin": [1014, 1016, 1272], "src_radar_tim": 1014, "dest_radar_tim": 1014, "gate_mapp": 1014, "src": [1014, 1311, 1312, 1313], "dest": 1014, "dest_index": 1014, "radar_map": 1014, "mapped_radar": [1014, 1272], "adequ": [1014, 1272], "getter": [1015, 1017], "zg": [1018, 1019, 1020], "yg": [1018, 1019, 1020], "xg": [1018, 1019, 1020], "roi": [1018, 1019, 1020, 1022, 1023, 1025], "grow": [1019, 1020, 1024, 1025, 1317], "virtual": [1020, 1024, 1025], "grid_shap": [1021, 1022, 1023, 1024, 1025, 1193, 1273, 1274, 1278, 1298, 1309, 1312], "grid_limit": [1021, 1022, 1023, 1024, 1025, 1193, 1273, 1274, 1278, 1298, 1309, 1312], "gridding_algo": 1021, "map_gates_to_grid": 1021, "copy_field_dtyp": 1021, "map_to_grid": [1021, 1024], "significantli": [1021, 1025], "faster": [1021, 1025], "barn": [1021, 1025, 1309], "1964": 1021, "maxim": 1021, "numer": [1021, 1313], "396": [1021, 1275], "409": 1021, "cressman": [1021, 1025, 1309], "1959": 1021, "monthli": 1021, "review": 1021, "367": 1021, "374": 1021, "paulei": [1021, 1309], "1990": [1021, 1309], "respons": 1021, "118": 1021, "1145": 1021, "1164": 1021, "target_sweep": [1022, 1023], "grid_siz": [1022, 1023, 1024, 1025], "801": [1022, 1023, 1311], "auto": [1022, 1023, 1277, 1311, 1312], "max_z": [1022, 1023], "12000": [1022, 1023, 1305, 1309], "el_rounding_frac": 1022, "add_grid_altitud": 1022, "grid_from_radar": [1022, 1023, 1024, 1025, 1273, 1274, 1278, 1298, 1309, 1312], "h_factor": [1022, 1023, 1024, 1025], "dist_factor": [1022, 1023, 1024], "radar_d": [1022, 1023], "third": [1022, 1023, 1313, 1317], "az_rounding_frac": 1023, "grid_origin": [1024, 1025, 1274, 1278], "grid_origin_alt": [1024, 1025], "map_roi": [1024, 1025], "weighting_funct": [1024, 1025, 1309], "barnes2": [1024, 1025], "17000": [1024, 1025, 1309], "roi_func": [1024, 1025, 1309], "dist_beam": [1024, 1025, 1309], "constant_roi": [1024, 1025], "z_factor": [1024, 1025], "xy_factor": [1024, 1025], "min_radiu": [1024, 1025, 1309], "nb": [1024, 1025], "bsp": [1024, 1025], "linearli": 1024, "roifunct": 1024, "dist": [1024, 1025, 1239, 1240], "get_roi": 1024, "cython": [1024, 1261], "copy_field_data": 1025, "kd_tree": 1025, "leafsiz": 1025, "nearbi": [1025, 1274], "coodin": 1025, "azimut": 1025, "similarili": 1025, "example_roi_func_const": 1025, "example_roi_func_dist": 1025, "example_roi_func_dist_beam": 1025, "foreach": 1025, "metet": 1025, "sacr": 1025, "sapr": [1025, 1198], "dist_mean": 1025, "preserv": [1025, 1307], "leaf": 1025, "lookup": [1025, 1261], "natur": 1025, "am": [1030, 1303, 1317], "glossari": 1030, "dry": [1030, 1299, 1311], "world": [1030, 1266, 1276], "aloft": [1030, 1312, 1313], "oppos": [1030, 1280], "nwp": [1030, 1299, 1313], "why": [1030, 1317], "think": 1030, "turn": [1030, 1277, 1298, 1303], "spin": 1030, "author": [1030, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300], "randi": 1030, "chase": 1030, "dopplerchas": 1030, "american": 1030, "2022": [1030, 1236, 1268, 1280, 1298, 1303, 1317], "ametsoc": 1030, "suffix": 1131, "tmp": 1131, "temporari": 1131, "my_cwd": 1131, "getcwd": 1131, "tmpdir": 1131, "_": [1131, 1268, 1269, 1299, 1313], "txt": [1131, 1316], "wt": 1131, "assert": [1131, 1317], "isfil": 1131, "path_to_fil": 1192, "local": [1192, 1226, 1231, 1235, 1303, 1316, 1317], "site": [1193, 1263, 1269, 1296, 1306, 1309, 1311, 1312, 1313, 1316], "radarspectra": [1196, 1237, 1251], "mu": 1197, "dp_phase_shift": [1198, 1296, 1305], "diff_phas": [1198, 1305], "differential_reflect": [1198, 1268, 1281, 1288, 1310, 1311, 1314], "rectangular": [1199, 1200], "miscellan": 1205, "depreci": 1205, "caution": 1205, "std": [1208, 1209, 1240, 1252], "convolut": 1210, "ndimag": [1210, 1288, 1289], "generic_filt": 1210, "pi": [1210, 1307], "std_dev": 1210, "radar1": [1211, 1212, 1238, 1246], "radar2": [1211, 1212, 1238, 1246], "h_tol": [1211, 1238], "coloc_gates_field": [1211, 1212], "coloc": [1211, 1212], "coloc_dict": [1211, 1212], "azi": [1211, 1212, 1227], "coloc_rad1": [1211, 1212], "distance_upper_bound": 1212, "neighbour": [1212, 1227], "ckdtree": 1212, "bound": 1212, "lin_tran": 1213, "span": 1213, "consdier": 1213, "vec1": [1214, 1216], "vec2": [1214, 1216], "pearson": 1214, "corr": [1214, 1216, 1312], "stat": 1215, "nvalid": 1215, "arr1": 1216, "arr2": 1216, "obs_data": 1217, "mod_data": 1217, "nash": 1217, "sutcliff": 1217, "nash_coeff": 1217, "target_elev": [1219, 1234], "el_tol": [1219, 1234], "radar_ppi": 1219, "epoch": [1220, 1221, 1222, 1223, 1224], "articl": 1225, "var": [1225, 1226, 1257, 1258], "nnois": [1225, 1226], "pwr_w_rai": 1226, "pct": [1226, 1232, 1244], "270436": 1226, "flat_reg_wlen": [1226, 1231, 1242], "flat_reg_var_max": [1226, 1242, 1243], "439551": 1226, "snr_thr": [1226, 1233], "769572": 1226, "ngates_final_min": 1226, "ngates_median": 1226, "83": [1226, 1313], "decibel": 1226, "flat": [1226, 1231, 1242, 1243, 1268, 1312], "inds_rai": 1226, "inds_ray_aux": 1227, "ind_rng_aux": 1227, "target_latitud": [1228, 1254], "target_longitud": [1228, 1254], "bear": 1228, "alongitudeg": 1228, "great": [1228, 1254], "circl": [1228, 1254, 1298], "known": [1228, 1314, 1317], "6371000": [1228, 1254], "calculatitude": 1228, "degress": [1228, 1254], "sphere_dist": 1230, "for_azimuth": 1230, "get_column_rai": 1230, "xarari": 1230, "prob_thr": [1231, 1232], "var_thr": 1231, "0001": 1232, "pct_out": 1232, "pfa_thr": 1233, "alarm": [1233, 1245], "xwind": 1235, "ywind": 1235, "win_std": 1235, "mute_field": [1236, 1280], "mute_threshold": [1236, 1280], "field_threshold": [1236, 1280], "discern": 1236, "mute": [1236, 1266, 1276, 1294, 1298, 1315], "tomkin": [1236, 1280, 1298], "miller": [1236, 1280], "allen": [1236, 1280], "identif": [1236, 1280], "5515": [1236, 1280], "5525": [1236, 1280], "kind": [1237, 1253, 1263, 1313], "psr_interp": 1237, "vol_d_tol": 1238, "vismin": 1238, "azmin": 1238, "azmax": 1238, "visib_field": 1238, "intersec_field": 1238, "regard": 1238, "decim": 1238, "diamet": 1238, "intersec_rad1_dict": 1238, "interval_min": [1239, 1240], "interval_max": [1239, 1240], "endpoint": [1239, 1240], "to_vpt": 1241, "verticl": 1241, "prescrib": 1242, "ivic_flat_reg_wind_len": 1242, "throw": [1244, 1245], "pfa": [1244, 1245], "1e": [1244, 1245, 1305, 1314], "matlab": 1244, "get_ivic_pct": 1244, "particularli": 1244, "pct_tabl": 1244, "snr_thr_out": 1245, "coerce_angl": [1246, 1261], "slightli": [1246, 1279, 1313], "slight": 1246, "misposit": [1246, 1261], "spectra1": 1247, "spectra2": 1247, "tup": 1248, "guarante": 1248, "broadcast": 1248, "broadcasted_arrai": 1248, "angles1": 1249, "angles2": 1249, "angle1": 1250, "angle2": 1250, "eg": 1252, "ma": [1252, 1272, 1273, 1298, 1306, 1310, 1317], "sim_vel_field": 1253, "slinear": 1253, "quadrat": 1253, "cubic": 1253, "interp1d": [1253, 1317], "sim_vel": [1253, 1317], "coverag": [1255, 1256, 1312], "11pt": 1257, "stdev": 1257, "texarrai": 1257, "pyradarobj": 1257, "tex": 1258, "single_scan": 1259, "is_vpt": 1259, "mislabel": 1259, "releas": [1260, 1303, 1306, 1309, 1312, 1316, 1317], "aug": 1260, "2024": 1260, "guid": [1260, 1303], "broken": 1260, "sever": [1261, 1313], "wolfidan": 1261, "com": [1261, 1269, 1289, 1316, 1317, 1319], "pyart": [1261, 1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1319], "pull": [1261, 1269, 1303, 1317], "writer": [1261, 1303], "flip": [1261, 1312], "coerc": 1261, "dealias_spectra": 1261, "output_to_geotiff": 1261, "improvemnet": 1261, "lib": [1261, 1263, 1269, 1306, 1309, 1311, 1312, 1313, 1316], "download": [1261, 1263, 1264, 1266, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1317, 1319], "gh": 1261, "action": 1261, "cfg": 1261, "handl": 1261, "typo": 1261, "odim_h5_writ": 1261, "sw_version": 1261, "led": [1261, 1319], "timestep": [1261, 1312], "wrong": 1261, "deprec": [1261, 1306, 1309, 1311, 1312], "cumtrapz": 1261, "hydro": [1261, 1299, 1311, 1313], "gecsx": [1261, 1303], "commit": [1261, 1317], "57664ce7b27c27af03f631fcd0e92a2": 1261, "linalg": 1261, "lstsq": 1261, "config": [1261, 1305, 1312, 1313, 1319], "bias_and_nois": 1261, "extract_sweeps_skyecho": 1261, "aux_io": [1261, 1311], "knmi": 1261, "h5": 1261, "proprietari": 1261, "latlon": 1261, "cross_sect": 1261, "gridmapdisplai": [1261, 1266, 1276, 1278, 1294, 1298, 1309, 1312, 1315], "_rsl_interfac": 1261, "pyx": 1261, "read_product": [1261, 1311], "behaviour": 1261, "conv_strat_yut": [1261, 1298], "juhi24": 1261, "patch": [1261, 1288], "radar_util": 1261, "register_cmap": 1261, "join_radar": [1261, 1312], "colobar": [1261, 1279], "graph": [1261, 1263, 1264, 1268, 1269, 1272, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1305, 1306, 1307, 1309, 1310, 1312, 1313], "_label_axes_latlon": 1261, "minor": [1261, 1306, 1309, 1312], "rad4alp_gif_read": 1261, "imageio": 1261, "nrow": [1261, 1277], "ncol": 1261, "agre": 1261, "cpc": 1261, "plot_xsect": [1261, 1293, 1294, 1315], "radardisplai": [1261, 1263, 1264, 1277, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1297, 1299, 1312, 1313], "rainforest": 1261, "compute_refl_time_avg": 1261, "crash": [1261, 1311], "radar_": 1261, "care": 1261, "read_odim_h5": 1261, "guidelin": 1261, "prohibit": 1261, "write_odim_grid": 1261, "interfac": 1261, "setuptool": 1261, "interpol_field": 1261, "northernmost": 1261, "runner": [1263, 1269], "micromamba": [1263, 1269], "env": [1263, 1269, 1303, 1306, 1309, 1311, 1312, 1313, 1319], "python3": [1263, 1269, 1311, 1312, 1313], "packag": [1263, 1269, 1303, 1306, 1309, 1311, 1312, 1313, 1316, 1317, 1319], "_core": 1263, "fromnumer": [1263, 1313], "870": 1263, "userwarn": [1263, 1269, 1311, 1312, 1313], "maskedarrai": [1263, 1313], "kth": [1263, 1313], "__doc__": [1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1298], "jonathan": [1263, 1264, 1273, 1274, 1281, 1282, 1284, 1286, 1290, 1293, 1319], "helmu": [1263, 1264, 1273, 1274, 1281, 1282, 1284, 1286, 1290, 1293, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317, 1319], "jhelmu": [1263, 1264, 1273, 1274, 1281, 1282, 1284, 1286, 1290, 1293], "anl": [1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1286, 1288, 1289, 1290, 1291, 1293, 1296, 1297], "licens": [1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1317], "bsd": [1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1317], "claus": [1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1317], "pyplot": [1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313], "plt": [1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313], "get_test_data": [1263, 1264, 1272, 1273, 1274, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298], "sgpcsaprsurcmaci7": [1263, 1306], "c0": [1263, 1286, 1287, 1291, 1306], "20110520": [1263, 1306], "095101": [1263, 1306], "read_cfradi": [1263, 1272, 1274, 1278, 1286, 1287, 1291, 1299, 1300, 1312, 1313], "pop": 1263, "specific_attenu": [1263, 1296, 1299, 1305, 1310, 1313], "corrected_reflectivity_horizont": [1263, 1274, 1278, 1296, 1305], "calculate_attenu": 1263, "add_field": [1263, 1264, 1298, 1299, 1306, 1307, 1312, 1313, 1317], "figsiz": [1263, 1264, 1268, 1269, 1272, 1277, 1278, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1297, 1298, 1299, 1306, 1307, 1309, 1310, 1312, 1313], "ax1": [1263, 1264, 1278, 1292, 1293, 1298], "add_subplot": [1263, 1264, 1273, 1274, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1293], "131": [1263, 1298], "raw": [1263, 1264, 1303, 1304, 1312], "ax2": [1263, 1264, 1272, 1278, 1292, 1293, 1297, 1298, 1307], "132": [1263, 1298], "ax3": [1263, 1264, 1292, 1298], "133": [1263, 1296, 1298], "suptitl": [1263, 1264, 1291, 1300, 1312], "fontsiz": [1263, 1264, 1277, 1279, 1288, 1289], "minut": [1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1312], "081": [1263, 1265, 1315], "jupyt": [1263, 1264, 1266, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1311, 1319], "notebook": [1263, 1264, 1266, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1306, 1309, 1310, 1317, 1319], "plot_attenu": [1263, 1265, 1315], "ipynb": [1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300], "zip": [1263, 1264, 1266, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303], "galleri": [1263, 1264, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1303, 1315], "sphinx": [1263, 1264, 1266, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300], "ial": 1264, "095636": [1264, 1307], "sonde_fil": 1264, "sgpinterpolatedsondec1": 1264, "c1": [1264, 1310], "20110510": 1264, "000000": 1264, "cdf": 1264, "read_arm_sonde_vap": 1264, "exclude_transit": [1264, 1273, 1274, 1278, 1297], "exclude_invalid": 1264, "exclude_outsid": 1264, "80": [1264, 1292, 1297], "dealias_data": 1264, "dealias_region_bas": [1264, 1307, 1312], "corrected_veloc": [1264, 1300, 1307, 1310, 1312], "sixth": 1264, "221": [1264, 1281, 1312], "223": [1264, 1281, 1312], "ax4": 1264, "224": [1264, 1281, 1312], "819": [1264, 1265, 1315], "plot_dealia": [1264, 1265, 1315], "900": [1265, 1305], "mem": [1265, 1270, 1275, 1294, 1301, 1302, 1315], "mb": [1265, 1270, 1275, 1294, 1301, 1302, 1315], "04": [1265, 1294, 1296, 1301, 1315], "00": [1265, 1270, 1275, 1294, 1301, 1302, 1315], "varieti": [1266, 1267, 1317], "aw": [1266, 1267, 1269, 1270, 1315], "gatemapp": [1266, 1271, 1275, 1315], "panel": [1266, 1276, 1294, 1315], "examples_python": 1266, "examples_jupyt": 1266, "next": 1268, "quick": 1268, "grover": [1268, 1272, 1277, 1278, 1283, 1291, 1296, 1297], "mgrover": [1268, 1272, 1277, 1278, 1283, 1291, 1296, 1297], "ccr": [1268, 1269, 1272, 1278, 1279, 1285, 1292, 1296, 1298, 1306, 1307, 1310, 1312, 1313], "let": [1268, 1269, 1272, 1277, 1279, 1296, 1298, 1305, 1307, 1309, 1310, 1312, 1313, 1314, 1317, 1319], "administr": 1268, "our": [1268, 1269, 1272, 1277, 1278, 1296, 1298, 1313], "filepath": [1268, 1269], "level2": [1268, 1269, 1280, 1298], "bucket": 1268, "organ": 1268, "year": [1268, 1269, 1317], "month": [1268, 1269], "radarsit": [1268, 1269], "_v06": 1268, "houston": 1268, "texa": 1268, "khgx": 1268, "march": 1268, "1201": 1268, "utc": [1268, 1269, 1291], "aws_nexrad_level2_fil": [1268, 1269], "03": [1268, 1294, 1301, 1315], "khgx20220322_120125_v06": 1268, "read_nexrad_arch": [1268, 1269, 1280, 1281, 1282, 1298], "summari": 1268, "differential_phas": [1268, 1281, 1310, 1314], "clutter_filter_power_remov": 1268, "spectrum_width": [1268, 1310, 1311, 1314], "cross_correlation_ratio": [1268, 1280, 1281, 1298, 1310, 1314], "radarmapdisplai": [1268, 1269, 1272, 1279, 1285, 1296, 1305, 1306, 1307, 1309, 1310, 1313], "subplot": [1268, 1272, 1277, 1278, 1279, 1291, 1296, 1297, 1298, 1299, 1300, 1307, 1312, 1313], "121": [1268, 1272, 1278, 1297], "plot_ppi_map": [1268, 1269, 1272, 1279, 1285, 1296, 1306, 1307, 1310, 1313], "relect": 1268, "z_": [1268, 1272, 1279], "v_": 1268, "70": [1268, 1272, 1278], "n0u": 1268, "noq": 1268, "level3": 1268, "aws_nexrad_level3_velocity_fil": 1268, "hgx_n0u_2022_03_22_12_01_25": 1268, "aws_nexrad_level3_reflectivity_fil": 1268, "hgx_n0q_2022_03_22_12_01_25": 1268, "read_nexrad_level3": 1268, "radar_level3_veloc": 1268, "radar_level3_reflect": 1268, "confirm": [1268, 1305], "setup": [1268, 1272, 1277, 1278, 1283, 1296, 1303, 1316], "reflectivity_displai": 1268, "velocity_displai": 1268, "677": [1268, 1270, 1315], "plot_nexrad_data_aw": [1268, 1270, 1315], "zachari": 1269, "sherman": 1269, "zsherman": [1269, 1319], "tendenc": 1269, "usual": [1269, 1317], "gz": 1269, "handford": 1269, "ca": 1269, "khnx": 1269, "juli": [1269, 1312], "0203": 1269, "v06": 1269, "khnx20060724_020338": 1269, "nexrad_arch": 1269, "231": 1269, "14": [1269, 1277, 1279, 1312, 1314], "ref": [1269, 1292], "now": [1269, 1272, 1277, 1279, 1296, 1298, 1305, 1307, 1312, 1313, 1316], "clearli": [1269, 1312, 1313], "lucki": 1269, "31417": 1269, "119": [1269, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "63111": 1269, "plote": [1269, 1285], "central_latitud": [1269, 1285, 1298, 1306], "central_longitud": [1269, 1285, 1298, 1306], "__init__": [1269, 1317], "241": [1269, 1273], "downloadwarn": 1269, "naturalearth": 1269, "amazonaw": 1269, "10m_physic": 1269, "ne_10m_coastlin": 1269, "10m_cultur": 1269, "ne_10m_admin_1_states_provinces_lin": 1269, "874": [1269, 1270, 1315], "plot_older_nexrad_data_aw": [1269, 1270, 1315], "08": [1270, 1275, 1315], "bobbi": 1272, "jackson": 1272, "rjackson": 1272, "filterwarn": 1272, "xsapr": [1272, 1274, 1278], "xsapr_sw_fil": [1272, 1274, 1278], "swx_20120520_0641": [1272, 1274, 1277, 1278, 1279, 1283, 1293, 1296, 1297, 1298], "xsapr_se_fil": [1272, 1274, 1278], "sex_20120520_0641": [1272, 1274, 1278], "radar_sw": [1272, 1274, 1278], "radar_s": [1272, 1274, 1278], "southwestern": 1272, "southeastern": 1272, "gmapper": 1272, "radar_sw_mapped_to_radar_s": 1272, "notic": [1272, 1279], "disp1": 1272, "37": [1272, 1296, 1310, 1311, 1312], "98": [1272, 1296, 1300, 1310, 1312], "arang": [1272, 1285, 1288, 1289, 1296, 1299, 1300, 1311, 1312, 1313, 1317], "96": [1272, 1310], "disp2": 1272, "remap": [1272, 1311], "difficult": 1272, "eyebal": 1272, "fortun": 1272, "mind": [1272, 1317], "cours": [1272, 1317], "reflectivity_se_radar": 1272, "reflectivity_sw_radar": 1272, "reflectivity_differ": 1272, "add_field_lik": 1272, "reflectivity_bia": 1272, "111": [1272, 1273, 1274, 1279, 1282, 1283, 1284, 1288, 1289, 1290, 1296], "pyart_bal": [1272, 1291, 1307], "southwest": 1272, "xspar": 1272, "southeast": 1272, "neccessarili": 1272, "incl_gat": 1272, "argwher": 1272, "refl_s": 1272, "refl_sw": 1272, "values_without_mask": 1272, "logical_and": 1272, "flatten": 1272, "hist": [1272, 1307], "histogram2d": 1272, "masked_wher": [1272, 1310], "meshgrid": 1272, "pyart_homeyerrainbow": [1272, 1277, 1278, 1279, 1284, 1287, 1291, 1292, 1297], "log_": 1272, "xlabel": [1272, 1286, 1287, 1307], "ylabel": [1272, 1286, 1287, 1307], "934": [1272, 1275, 1315], "plot_compare_two_radars_gatemapp": [1272, 1275, 1315], "110635": [1273, 1284, 1309], "123000": 1273, "842": [1273, 1275, 1315], "plot_map_one_radar_to_grid": [1273, 1275, 1315], "xsarp": [1274, 1286, 1287], "gatefilter_s": [1274, 1278], "exclude_abov": [1274, 1278, 1307], "gatefilter_sw": [1274, 1278], "201": [1274, 1298, 1309], "57861": [1274, 1278], "363611": [1274, 1278], "48": 1274, "620": [1274, 1275, 1315], "plot_map_two_radars_to_grid": [1274, 1275, 1315], "visual": [1277, 1280, 1288, 1296, 1313], "linspac": [1277, 1280, 1298, 1305, 1317], "256": [1277, 1299, 1311, 1313], "vstack": 1277, "def": [1277, 1317], "plot_color_gradi": 1277, "cmap_categori": 1277, "cmap_list": 1277, "len": [1277, 1291, 1299, 1305, 1311, 1313], "figh": 1277, "subplots_adjust": [1277, 1286, 1287], "set_titl": [1277, 1298], "cmap_nam": 1277, "pyart_": 1277, "va": 1277, "transax": 1277, "spine": 1277, "set_axis_off": 1277, "colorblind": 1277, "friendli": 1277, "langrainbow12": 1277, "homeyerrainbow": 1277, "balanc": 1277, "chasespectr": 1277, "spectralextend": 1277, "perceptu": [1277, 1280], "light": [1277, 1299, 1313], "bu10": 1277, "bu7": 1277, "gray5": 1277, "gray9": 1277, "diverg": 1277, "meaning": 1277, "bluebrown11": 1277, "brbu10": 1277, "brbu12": 1277, "budor12": 1277, "budor18": 1277, "budrd12": 1277, "budrd18": 1277, "bugr14": 1277, "bugy8": 1277, "buor10": 1277, "buor12": 1277, "buor8": 1277, "buorr14": 1277, "grmg16": 1277, "rdylbu11b": 1277, "There": [1277, 1313, 1316, 1319], "bluebrown10": 1277, "nwsref": 1277, "carbone11": 1277, "carbone17": 1277, "carbone42": 1277, "cat12": 1277, "ewilson17": 1277, "nwsvel": 1277, "nws_spw": 1277, "pd17": 1277, "rrate11": 1277, "refdiff": 1277, "scook18": 1277, "stepseq25": 1277, "symgray12": 1277, "theodore16": 1277, "wild25": 1277, "spectral_r": 1277, "rememb": 1277, "front": [1277, 1312], "shown": 1277, "015": [1277, 1294, 1315], "plot_choose_a_colormap": [1277, 1294, 1315], "181": 1278, "plot_grid": [1278, 1292, 1298, 1309, 1312], "scatter": [1278, 1296], "tab": 1278, "blue": [1278, 1288, 1289, 1313], "black": [1278, 1296], "legend": 1278, "plot_cross_sect": [1278, 1294, 1315], "092": [1278, 1294, 1315], "joe": 1279, "brien": 1279, "obrienj": 1279, "perfect": 1279, "overlap": [1279, 1288], "coord": 1279, "gridlin": 1279, "gl": 1279, "draw_label": 1279, "grai": [1279, 1280, 1311, 1313], "gca": 1279, "set_major_loc": 1279, "nullloc": 1279, "top_label": 1279, "right_label": 1279, "xlabel_styl": 1279, "ylabel_styl": 1279, "delet": [1279, 1317], "del": 1279, "manipul": [1279, 1304], "axsb": 1279, "ppi_map": 1279, "cbar": 1279, "set_label": 1279, "set_tick": 1279, "071": [1279, 1294, 1315], "plot_modify_colorbar": [1279, 1294, 1315], "reduc": [1280, 1316], "promin": 1280, "deemphas": 1280, "depict": 1280, "ultim": [1280, 1313], "misinterpret": 1280, "laura": [1280, 1298], "lmtomkin": [1280, 1298], "ncsu": [1280, 1298], "citat": 1280, "mcolor": [1280, 1298], "nexrad_fil": [1280, 1298], "2020": [1280, 1303, 1316, 1317], "kbgm": 1280, "kbgm20200207_132642_v06": 1280, "image_mute_radar": [1280, 1298], "magma_cmap": 1280, "get_cmap": [1280, 1298], "magma_r": [1280, 1298], "grays_cmap": 1280, "gray_r": 1280, "nonmuted_cmap": 1280, "linearsegmentedcolormap": [1280, 1298], "from_list": [1280, 1298], "muted_cmap": 1280, "nonmuted_reflect": [1280, 1298], "muted_reflect": 1280, "300": [1280, 1281, 1305], "set_aspect": [1280, 1298, 1299, 1312, 1313], "861": [1280, 1294, 1315], "plot_nexrad_image_muted_reflect": [1280, 1294, 1315], "katx20130717_195021_v06": [1281, 1314], "549": [1281, 1294, 1312, 1315], "plot_nexrad_multiple_mo": [1281, 1294, 1315], "level2_katx_20130717_1950": 1282, "ar2v": 1282, "super": [1282, 1306, 1309, 1312], "plot_range_r": [1282, 1283, 1285], "152": [1282, 1294, 1315], "plot_nexrad_reflect": [1282, 1294, 1315], "main": [1283, 1317], "plot_cross_hair": 1283, "380": [1283, 1294, 1315], "plot_ppi_cfradi": [1283, 1294, 1315], "150": [1284, 1307], "172": [1284, 1294, 1315], "plot_ppi_mdv": [1284, 1294, 1315], "jason": [1285, 1292], "hemeding": [1285, 1292], "nsaxsaprppic1": 1285, "a1": 1285, "20140201": 1285, "184802": 1285, "157": 1285, "156": 1285, "71": 1285, "158": 1285, "154": 1285, "69": [1285, 1312], "72": 1285, "40km": 1285, "plot_line_xi": 1285, "plot_point": 1285, "039": [1285, 1294, 1315], "plot_ppi_with_r": [1285, 1294, 1315], "sgpxsaprrhicmaci5": [1286, 1287, 1291], "20110524": [1286, 1287, 1291], "015604_nc4": [1286, 1287, 1291], "instrument_nam": [1286, 1287, 1314], "hspace": [1286, 1287], "agl": 1286, "fac": 1286, "nplot": [1286, 1287, 1291], "snum": 1286, "hsrhi": [1286, 1287], "3f": [1286, 1287], "time_start": 1286, "num2dat": 1286, "only_use_cftime_datetim": 1286, "only_use_python_datetim": 1286, "figure_titl": 1286, "isoformat": 1286, "825": [1286, 1294, 1315], "plot_rhi_cfradi": [1286, 1294, 1315], "915": [1287, 1294, 1315], "plot_rhi_cfradial_singlescan": [1287, 1294, 1315], "differnenti": 1288, "cori": [1288, 1289], "weber": [1288, 1289], "cweber": [1288, 1289], "220629": 1288, "white": 1288, "matplolib": 1288, "visabl": 1288, "border": [1288, 1313], "flow": [1288, 1311], "paramt": 1288, "compens": 1288, "nearli": 1288, "00015": 1288, "veri": [1288, 1298, 1312, 1313], "antialias": [1288, 1289], "moir": 1288, "get_start": [1288, 1289], "get_end": [1288, 1289], "blur": 1288, "nice": [1288, 1316], "arbirarli": 1288, "impact": 1288, "gaussian_filt": [1288, 1289], "levels_rain": 1288, "levels_ic": 1288, "contours_ic": 1288, "contours_rain": 1288, "red": [1288, 1289], "fmt": [1288, 1289], "0000": [1288, 1289], "clabel": [1288, 1289], "inlin": [1288, 1289, 1311], "077": [1288, 1294, 1315], "plot_rhi_contours_differential_reflect": [1288, 1294, 1315], "spyi": 1289, "034142": 1289, "ramp": 1289, "blob": 1289, "pyart_budrd18": 1289, "comment": [1289, 1314], "coutour": 1289, "solid": 1289, "dot": 1289, "major": [1289, 1312], "axhlin": 1289, "dash": 1289, "axvlin": 1289, "00b4ff": 1289, "ff6800": 1289, "set_ylabel": [1289, 1300, 1312], "cp": 1289, "476": [1289, 1294, 1315], "plot_rhi_data_overlai": [1289, 1294, 1315], "110041": 1290, "331": [1290, 1294, 1315], "plot_rhi_mdv": [1290, 1294, 1315], "fields_to_plot": 1291, "plot_num": 1291, "grab": 1291, "u00b0": 1291, "834": [1291, 1294, 1315], "plot_rhi_two_panel": [1291, 1294, 1315], "20110520100000_nexrad_grid": 1292, "read_grid": 1292, "map_panel_ax": 1292, "x_cut_panel_ax": 1292, "y_cut_panel_ax": 1292, "add_ax": [1292, 1312], "plot_crosshair": 1292, "plot_longitude_slic": 1292, "set_ylim": [1292, 1299, 1312, 1313], "set_xlim": [1292, 1299, 1312, 1313], "plot_latitude_slic": [1292, 1309, 1312], "929": [1292, 1294, 1315], "plot_three_panel_gridmapdisplai": [1292, 1294, 1315], "225": 1293, "270": [1293, 1312, 1317], "xsect": 1293, "cross_section_ppi": [1293, 1312], "211": 1293, "212": 1293, "tight_layout": 1293, "399": [1293, 1294, 1315], "117": 1294, "09": [1294, 1298, 1315], "maxwel": [1296, 1297], "site_lon": 1296, "73": 1296, "site_lat": 1296, "latitdu": 1296, "pathcollect": 1296, "0x7fbc179003e0": 1296, "columnsect": 1296, "get_field_loc": 1296, "2kb": 1296, "176b": 1296, "818e": 1296, "88": 1296, "recalculated_diff_phas": [1296, 1305], "555": 1296, "2778": 1296, "unf_dp_phase_shift": [1296, 1305], "88b": 1296, "688": 1296, "145": 1296, "144": 1296, "diff_reflect": [1296, 1305], "95": [1296, 1314], "datetime64": 1296, "8b": 1296, "distance_from_radar": 1296, "233": 1296, "545": 1296, "latitude_of_loc": 1296, "longitude_of_loc": 1296, "line2d": 1296, "0x7fbc17e75ee0": 1296, "193": [1296, 1301, 1315], "plot_column_subset": [1296, 1301, 1315], "compz": 1297, "composite_reflect": 1297, "composite_displai": 1297, "514": [1297, 1301, 1315], "plot_composite_reflect": [1297, 1301, 1315], "classifc": 1298, "summer": 1298, "ian": 1298, "footprint": 1298, "yield": 1298, "smoother": 1298, "rescal": 1298, "simpli": [1298, 1307, 1309, 1316, 1317, 1319], "plot_convstrat_schem": 1298, "pick": 1298, "radii": 1298, "dilat": 1298, "event": [1298, 1312, 1313], "extract_sweep": [1298, 1300], "convsf_mask": 1298, "masked_equ": 1298, "convsf": 1298, "magma_r_cmap": 1298, "ref_cmap": 1298, "albersequalarea": 1298, "convsf_und": 1298, "overestim": 1298, "convsf_ov": 1298, "uncertainti": 1298, "underest": 1298, "overest": 1298, "ktbw": 1298, "ktbw20220928_190142_v06": 1298, "rasumussen": 1298, "reflecit": 1298, "kokx": 1298, "kokx20210207_161413_v06": 1298, "nonmuted_ref": 1298, "masked_invalid": 1298, "nonmuted_ref_linear": 1298, "mm6": 1298, "m3": 1298, "snow_rat": 1298, "57": 1298, "67": 1298, "snow_rate_dict": 1298, "standard_nam": [1298, 1306, 1314], "hr": 1298, "40500": 1298, "purpos": 1298, "034": 1298, "ccotd": 1298, "rasmussen": 1298, "dixon": 1298, "vasiloff": 1298, "hage": 1298, "knight": 1298, "vivekanandan": 1298, "xu": 1298, "nowcast": 1298, "042": 1298, "3c0020": 1298, "snuart": 1298, "plot_convective_stratiform": [1298, 1301, 1315], "daniel": [1299, 1300], "mpl": [1299, 1306, 1309, 1311, 1312, 1313], "open_radar_data": [1299, 1300], "fetch": [1299, 1300, 1317], "mll2217907250u": [1299, 1311], "003": [1299, 1313], "preinterpol": 1299, "20220628072500_savevol_cosmo_lookup_temp": 1299, "nwp_temp": 1299, "calculate_attenuation_zphi": [1299, 1313], "uncorrected_differential_phas": [1299, 1311, 1313], "pia": [1299, 1313], "pida": [1299, 1313], "corrected_reflect": [1299, 1310, 1313], "corrected_differential_reflect": [1299, 1310, 1313], "kdp_maesaka": [1299, 1313], "specific_differential_phas": [1299, 1310, 1313], "hydroclass_semisupervis": [1299, 1313], "uncorrected_cross_correlation_ratio": [1299, 1311, 1313], "radar_echo_classif": [1299, 1313], "boundarynorm": [1299, 1311, 1313], "crystal": [1299, 1313], "rime": [1299, 1313], "particl": [1299, 1313], "hail": [1299, 1313], "graupel": [1299, 1313], "329": [1299, 1301, 1315], "plot_hydrometeor": [1299, 1301, 1315], "2682": [1300, 1312], "5470252465457": 1300, "447329906746745": 1300, "5273": 1300, "055691199377": 1300, "753380835056305": 1300, "7815": [1300, 1312], "512289514765": 1300, "341798424720764": 1300, "10403": [1300, 1312], "798926953226": 1300, "977668903768063": 1300, "14259": [1300, 1312], "735942972824": 1300, "905980998650193": 1300, "18533": [1300, 1312], "705525264144": 1300, "262250505387783": 1300, "22800": [1300, 1305, 1312], "975898388773": 1300, "19": [1300, 1312, 1314], "613872004672885": 1300, "27060": [1300, 1305, 1312], "2588441018": 1300, "959520561620593": 1300, "31310": [1300, 1312], "27047857456": 1300, "297873068600893": 1300, "35549": [1300, 1312], "73162293248": 1300, "62760863825679": 1300, "39777": [1300, 1312], "36817018688": 1300, "9474090076983": 1300, "43991": [1300, 1312], "91144847497": 1300, "2559589445591": 1300, "50263": [1300, 1312], "4232680127": 1300, "67129246518016": 1300, "58621": [1300, 1312], "52708690986": 1300, "22838294506073": 1300, "71003": 1300, "15134508349": 1300, "68": 1300, "92014465294778": 1300, "87118": [1300, 1312], "52771787904": 1300, "4666521307081": 1300, "106741": 1300, "22927869856": 1300, "65626283548772": 1300, "125477": 1300, "00921786763": 1300, "97631609067321": 1300, "143293": [1300, 1312], "15607023984": 1300, "143": [1300, 1312], "38700986094773": 1300, "160000": [1300, 1312], "29130353592": 1300, "68618298135698": 1300, "mla2119412050u": 1300, "zlevel": [1300, 1312], "u_allsweep": 1300, "v_allsweep": 1300, "idx": 1300, "radar_1sweep": 1300, "vad_brown": [1300, 1312], "u_avg": 1300, "nanmean": [1300, 1312], "v_avg": 1300, "rad2deg": [1300, 1312], "sharei": [1300, 1312, 1313], "set_xlabel": [1300, 1312], "567": [1300, 1301, 1315], "plot_vad": [1300, 1301, 1315], "762": 1301, "000": 1302, "cookbook": [1303, 1318], "depth": [1303, 1314, 1317], "conceptu": 1303, "projectpythia": 1303, "understand": 1303, "search": [1303, 1316], "api": 1303, "demonstr": 1303, "toolkit": [1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314], "basi": 1303, "pyrad": [1303, 1311, 1312, 1313, 1317], "exploit": 1303, "prefer": [1303, 1316], "submodul": [1303, 1309], "superproject": 1303, "propos": 1303, "bleed": 1303, "among": 1303, "europ": 1303, "fmi": 1303, "windcub": 1303, "leospher": 1303, "research": [1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "facil": [1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "colli": [1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "languag": [1303, 1317], "e25": [1303, 1317], "5334": [1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "jor": [1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "lainer": [1303, 1317], "schauweck": [1303, 1317], "framework": [1303, 1317], "330": [1303, 1317], "abil": [1303, 1319], "ii": [1303, 1314], "sophist": 1303, "tutori": 1303, "erad": 1303, "easiest": [1303, 1317], "latest": [1303, 1317], "januari": 1303, "1st": 1303, "anaconda": [1303, 1316, 1317], "miniconda": [1303, 1317], "environ": [1303, 1313, 1316, 1318], "yml": [1303, 1319], "Or": 1303, "basic": [1303, 1304, 1306], "pyart_env": [1303, 1306, 1309, 1319], "forg": [1303, 1316, 1317, 1319], "pyart_mch": [1303, 1316, 1317, 1319], "termin": [1303, 1317, 1319], "prompt": [1303, 1317], "wish": 1303, "unreleas": 1303, "clone": [1303, 1316], "git": [1303, 1316, 1317, 1319], "repositori": [1303, 1316, 1317, 1319], "Then": [1303, 1316, 1317], "scientif": [1303, 1317], "linux": [1303, 1317, 1319], "mac": 1303, "charg": 1303, "resourc": [1303, 1316], "lassen": 1303, "radtec": 1303, "rsl_path": [1303, 1316], "usr": 1303, "anaconda3": [1303, 1306, 1309, 1311, 1312, 1313, 1316, 1319], "h5py": 1303, "solver": 1303, "fastest": 1303, "cbc": 1303, "glpk": 1303, "coincbc": [1303, 1316, 1319], "coin_install_dir": [1303, 1316, 1319], "wradlib": 1303, "pytest": [1303, 1316, 1317], "discuss": 1303, "appreci": 1303, "sometim": 1305, "might": [1305, 1319], "hypothet": 1305, "doesn": 1305, "partli": [1305, 1306, 1307, 1309, 1310, 1311, 1314], "depart": [1305, 1306, 1307, 1309, 1310, 1311, 1314], "energi": [1305, 1306, 1307, 1309, 1310, 1311, 1314], "radiat": [1305, 1306, 1307, 1309, 1310, 1311, 1314, 1317], "offic": [1305, 1306, 1307, 1309, 1310, 1311, 1314], "scienc": [1305, 1306, 1307, 1309, 1310, 1311, 1314], "cite": [1305, 1306, 1307, 1309, 1310, 1311, 1314], "jj": [1305, 1306, 1307, 1309, 1310, 1311, 1314], "sm": [1305, 1306, 1307, 1309, 1310, 1311, 1314], "test_radar": [1305, 1317], "idea": [1305, 1307, 1312, 1313], "dict_kei": [1305, 1310], "rain_rate_a": [1305, 1310], "time_coverage_start": [1305, 1314], "time_coverage_end": 1305, "volume_numb": 1305, "platform_typ": 1305, "instrument_typ": 1305, "primary_axi": 1305, "667": 1305, "make_empty_ppi_radar": 1305, "59416667": 1305, "As": [1305, 1307, 1309, 1310, 1317], "isn": 1305, "120": [1305, 1313], "240": 1305, "420": 1305, "480": 1305, "540": 1305, "660": 1305, "720": 1305, "780": 1305, "840": 1305, "960": 1305, "1020": 1305, "1080": 1305, "1140": 1305, "1200": 1305, "1260": 1305, "1320": 1305, "1380": [1305, 1313], "1440": 1305, "1500": 1305, "1560": 1305, "1620": 1305, "1680": 1305, "1740": 1305, "1860": 1305, "1920": 1305, "1980": 1305, "2040": 1305, "2100": 1305, "2160": 1305, "2220": 1305, "2280": 1305, "2340": 1305, "2400": 1305, "2460": 1305, "2520": 1305, "2580": 1305, "2640": [1305, 1313], "2700": 1305, "2760": 1305, "2820": 1305, "2880": 1305, "2940": 1305, "3060": 1305, "3120": 1305, "3180": 1305, "3240": 1305, "3300": 1305, "3360": 1305, "3420": 1305, "3480": 1305, "3540": 1305, "3660": 1305, "3720": 1305, "3780": 1305, "3840": 1305, "3900": 1305, "3960": 1305, "4020": 1305, "4080": 1305, "4140": 1305, "4200": [1305, 1313], "4260": 1305, "4320": 1305, "4380": 1305, "4440": 1305, "4560": 1305, "4620": 1305, "4680": 1305, "4740": 1305, "4800": 1305, "4860": 1305, "4920": 1305, "4980": 1305, "5040": 1305, "5100": 1305, "5160": 1305, "5220": 1305, "5280": 1305, "5340": 1305, "5400": 1305, "5460": 1305, "5520": 1305, "5580": 1305, "5640": 1305, "5700": 1305, "5760": 1305, "5820": 1305, "5880": 1305, "5940": 1305, "6060": 1305, "6120": 1305, "6180": 1305, "6240": 1305, "6300": 1305, "6360": 1305, "6420": 1305, "6480": 1305, "6540": 1305, "6600": 1305, "6660": 1305, "6720": 1305, "6780": 1305, "6840": 1305, "6900": 1305, "6960": 1305, "7020": 1305, "7080": 1305, "7140": 1305, "7200": [1305, 1314], "7260": 1305, "7320": 1305, "7380": 1305, "7440": 1305, "7500": 1305, "7560": 1305, "7620": 1305, "7680": 1305, "7740": 1305, "7800": 1305, "7860": 1305, "7920": 1305, "7980": 1305, "8040": 1305, "8100": 1305, "8160": 1305, "8220": 1305, "8280": 1305, "8340": 1305, "8400": 1305, "8460": 1305, "8520": 1305, "8580": 1305, "8640": 1305, "8700": 1305, "8760": 1305, "8820": 1305, "8880": 1305, "8940": 1305, "9000": [1305, 1309], "9060": 1305, "9120": 1305, "9180": 1305, "9240": 1305, "9300": 1305, "9360": 1305, "9420": 1305, "9480": 1305, "9540": 1305, "9600": 1305, "9660": 1305, "9720": 1305, "9780": 1305, "9840": 1305, "9900": 1305, "9960": 1305, "10020": 1305, "10080": 1305, "10140": 1305, "10200": 1305, "10260": 1305, "10320": 1305, "10380": 1305, "10440": 1305, "10500": 1305, "10560": 1305, "10620": 1305, "10680": 1305, "10740": 1305, "10800": 1305, "10860": 1305, "10920": 1305, "10980": 1305, "11040": 1305, "11100": 1305, "11160": 1305, "11220": 1305, "11280": 1305, "11340": 1305, "11400": 1305, "11460": 1305, "11520": 1305, "11580": 1305, "11640": 1305, "11700": 1305, "11760": 1305, "11820": 1305, "11880": 1305, "11940": 1305, "12060": 1305, "12120": 1305, "12180": 1305, "12240": 1305, "12300": 1305, "12360": 1305, "12420": 1305, "12480": 1305, "12540": 1305, "12600": 1305, "12660": 1305, "12720": 1305, "12780": 1305, "12840": 1305, "12900": 1305, "12960": 1305, "13020": 1305, "13080": 1305, "13140": 1305, "13200": 1305, "13260": 1305, "13320": 1305, "13380": 1305, "13440": 1305, "13500": 1305, "13560": 1305, "13620": 1305, "13680": 1305, "13740": 1305, "13800": 1305, "13860": 1305, "13920": 1305, "13980": 1305, "14040": 1305, "14100": 1305, "14160": 1305, "14220": 1305, "14280": 1305, "14340": 1305, "14400": 1305, "14460": 1305, "14520": 1305, "14580": 1305, "14640": 1305, "14700": 1305, "14760": 1305, "14820": 1305, "14880": 1305, "14940": 1305, "15060": 1305, "15120": 1305, "15180": 1305, "15240": 1305, "15300": 1305, "15360": 1305, "15420": 1305, "15480": 1305, "15540": 1305, "15600": 1305, "15660": 1305, "15720": 1305, "15780": 1305, "15840": 1305, "15900": 1305, "15960": 1305, "16020": 1305, "16080": 1305, "16140": 1305, "16200": 1305, "16260": 1305, "16320": 1305, "16380": 1305, "16440": 1305, "16500": 1305, "16560": 1305, "16620": 1305, "16680": 1305, "16740": 1305, "16800": 1305, "16860": 1305, "16920": 1305, "16980": 1305, "17040": 1305, "17100": 1305, "17160": 1305, "17220": 1305, "17280": 1305, "17340": 1305, "17400": 1305, "17460": 1305, "17520": 1305, "17580": 1305, "17640": 1305, "17700": 1305, "17760": 1305, "17820": 1305, "17880": 1305, "17940": 1305, "18000": [1305, 1309], "18060": 1305, "18120": 1305, "18180": 1305, "18240": 1305, "18300": 1305, "18360": 1305, "18420": 1305, "18480": 1305, "18540": 1305, "18600": 1305, "18660": 1305, "18720": 1305, "18780": 1305, "18840": 1305, "18900": 1305, "18960": 1305, "19020": 1305, "19080": 1305, "19140": 1305, "19200": 1305, "19260": 1305, "19320": 1305, "19380": 1305, "19440": 1305, "19500": 1305, "19560": 1305, "19620": 1305, "19680": 1305, "19740": 1305, "19800": 1305, "19860": 1305, "19920": 1305, "19980": 1305, "20040": 1305, "20100": 1305, "20160": 1305, "20220": 1305, "20280": 1305, "20340": 1305, "20400": 1305, "20460": 1305, "20520": 1305, "20580": 1305, "20640": 1305, "20700": 1305, "20760": 1305, "20820": 1305, "20880": 1305, "20940": 1305, "21000": [1305, 1309], "21060": 1305, "21120": 1305, "21180": 1305, "21240": 1305, "21300": 1305, "21360": 1305, "21420": 1305, "21480": 1305, "21540": 1305, "21600": 1305, "21660": 1305, "21720": 1305, "21780": 1305, "21840": 1305, "21900": 1305, "21960": 1305, "22020": 1305, "22080": 1305, "22140": 1305, "22200": 1305, "22260": 1305, "22320": 1305, "22380": 1305, "22440": 1305, "22500": 1305, "22560": 1305, "22620": 1305, "22680": 1305, "22740": 1305, "22860": 1305, "22920": 1305, "22980": 1305, "23040": 1305, "23100": 1305, "23160": 1305, "23220": 1305, "23280": 1305, "23340": 1305, "23400": 1305, "23460": 1305, "23520": 1305, "23580": 1305, "23640": 1305, "23700": 1305, "23760": 1305, "23820": 1305, "23880": 1305, "23940": 1305, "24000": [1305, 1309], "24060": 1305, "24120": 1305, "24180": 1305, "24240": 1305, "24300": 1305, "24360": 1305, "24420": 1305, "24480": 1305, "24540": 1305, "24600": 1305, "24660": 1305, "24720": 1305, "24780": 1305, "24840": 1305, "24900": 1305, "24960": 1305, "25020": 1305, "25080": 1305, "25140": 1305, "25200": 1305, "25260": 1305, "25320": 1305, "25380": 1305, "25440": 1305, "25500": 1305, "25560": 1305, "25620": 1305, "25680": 1305, "25740": 1305, "25800": 1305, "25860": 1305, "25920": 1305, "25980": 1305, "26040": 1305, "26100": 1305, "26160": 1305, "26220": 1305, "26280": 1305, "26340": 1305, "26400": 1305, "26460": 1305, "26520": 1305, "26580": 1305, "26640": 1305, "26700": 1305, "26760": 1305, "26820": 1305, "26880": 1305, "26940": 1305, "27000": [1305, 1309], "27120": 1305, "27180": 1305, "27240": 1305, "27300": 1305, "27360": 1305, "27420": 1305, "27480": 1305, "27540": 1305, "27600": 1305, "27660": 1305, "27720": 1305, "27780": 1305, "27840": 1305, "27900": 1305, "27960": 1305, "28020": 1305, "28080": 1305, "28140": 1305, "28200": 1305, "28260": 1305, "28320": 1305, "28380": 1305, "28440": 1305, "28500": 1305, "28560": 1305, "28620": 1305, "28680": 1305, "28740": 1305, "28800": 1305, "28860": 1305, "28920": 1305, "28980": 1305, "29040": 1305, "29100": 1305, "29160": 1305, "29220": 1305, "29280": 1305, "29340": 1305, "29400": 1305, "29460": 1305, "29520": 1305, "29580": 1305, "29640": 1305, "29700": 1305, "29760": 1305, "29820": 1305, "29880": 1305, "29940": 1305, "30000": [1305, 1309], "30060": 1305, "30120": 1305, "30180": 1305, "30240": 1305, "30300": 1305, "30360": 1305, "30420": 1305, "30480": 1305, "30540": 1305, "30600": 1305, "30660": 1305, "30720": 1305, "30780": 1305, "30840": 1305, "30900": 1305, "30960": 1305, "31020": 1305, "31080": 1305, "31140": 1305, "31200": 1305, "31260": 1305, "31320": 1305, "31380": 1305, "31440": 1305, "31500": 1305, "31560": 1305, "31620": 1305, "31680": 1305, "31740": 1305, "31800": 1305, "31860": 1305, "31920": 1305, "31980": 1305, "32040": 1305, "32100": 1305, "32160": 1305, "32220": 1305, "32280": 1305, "32340": 1305, "32400": 1305, "32460": 1305, "32520": 1305, "32580": 1305, "32640": 1305, "32700": 1305, "32760": 1305, "32820": 1305, "32880": 1305, "32940": 1305, "33000": [1305, 1309], "33060": 1305, "33120": 1305, "33180": 1305, "33240": 1305, "33300": 1305, "33360": 1305, "33420": 1305, "33480": 1305, "33540": 1305, "33600": 1305, "33660": 1305, "33720": 1305, "33780": 1305, "33840": 1305, "33900": 1305, "33960": 1305, "34020": 1305, "34080": 1305, "34140": 1305, "34200": 1305, "34260": 1305, "34320": 1305, "34380": 1305, "34440": 1305, "34500": 1305, "34560": 1305, "34620": 1305, "34680": 1305, "34740": 1305, "34800": 1305, "34860": 1305, "34920": 1305, "34980": 1305, "35040": 1305, "35100": 1305, "35160": 1305, "35220": 1305, "35280": 1305, "35340": 1305, "35400": 1305, "35460": 1305, "35520": 1305, "35580": 1305, "35640": 1305, "35700": 1305, "35760": 1305, "35820": 1305, "35880": 1305, "35940": 1305, "36000": [1305, 1309], "36060": 1305, "36120": 1305, "36180": 1305, "36240": 1305, "36300": 1305, "36360": 1305, "36420": 1305, "36480": 1305, "36540": 1305, "36600": 1305, "36660": 1305, "36720": 1305, "36780": 1305, "36840": 1305, "36900": 1305, "36960": 1305, "37020": 1305, "37080": 1305, "37140": 1305, "37200": 1305, "37260": 1305, "37320": 1305, "37380": 1305, "37440": 1305, "37500": 1305, "37560": 1305, "37620": 1305, "37680": 1305, "37740": 1305, "37800": 1305, "37860": 1305, "37920": 1305, "37980": 1305, "38040": 1305, "38100": 1305, "38160": 1305, "38220": 1305, "38280": 1305, "38340": 1305, "38400": 1305, "38460": 1305, "38520": 1305, "38580": 1305, "38640": 1305, "38700": 1305, "38760": 1305, "38820": 1305, "38880": 1305, "38940": 1305, "39000": [1305, 1309], "39060": 1305, "39120": 1305, "39180": 1305, "39240": 1305, "39300": 1305, "39360": 1305, "39420": 1305, "39480": 1305, "39540": 1305, "39600": 1305, "39660": 1305, "39720": 1305, "39780": 1305, "39840": 1305, "39900": 1305, "39960": 1305, "squeez": 1305, "59416776": 1305, "59416886": 1305, "59489769": 1305, "59489879": 1305, "5948999": 1305, "59415662": 1305, "59414657": 1305, "5874659": 1305, "58745576": 1305, "58744563": 1305, "59414621": 1305, "59412575": 1305, "5805231": 1305, "58050246": 1305, "58048182": 1305, "59419881": 1305, "59423095": 1305, "61560159": 1305, "61563401": 1305, "61566644": 1305, "59418877": 1305, "59421087": 1305, "6089062": 1305, "6089285": 1305, "60895079": 1305, "59417836": 1305, "59419005": 1305, "60196382": 1305, "60197561": 1305, "60198741": 1305, "get_metadata": 1305, "ref_dict": 1305, "reflecitivity_horizont": 1305, "21875": 1305, "34375": 1305, "0078125": 1305, "2109375": 1305, "1171875": 1305, "59375": 1305, "421875": 1305, "5625": 1305, "7109375": 1305, "609375": 1305, "5078125": 1305, "3828125": 1305, "6875": 1305, "328125": 1305, "3203125": 1305, "859375": 1305, "6484375": 1305, "8515625": 1305, "9375": [1305, 1314], "0234375": 1305, "6328125": 1305, "2890625": 1305, "546875": 1305, "578125": 1305, "6796875": 1305, "ref_field": 1306, "ref_gt_0": 1306, "mask_dict": 1306, "reflectivity_mask": 1306, "coolwarm": 1306, "sherm": [1306, 1309], "782": [1306, 1309], "matplotlibdeprecationwarn": [1306, 1309, 1312], "set_xtick": [1306, 1309], "position": [1306, 1309], "later": [1306, 1309, 1312, 1313], "xtick": [1306, 1309], "829": [1306, 1309], "set_ytick": [1306, 1309], "ytick": [1306, 1309], "write_cfradi": 1306, "2pi": 1307, "wave": 1307, "3pi": 1307, "incorrect": 1307, "phenomena": [1307, 1314], "maximium": 1307, "unambi": 1307, "preprocess": 1307, "thankfulli": [1307, 1309], "calculate_velocity_textur": 1307, "surround": [1307, 1309, 1312, 1313], "presenc": [1307, 1312, 1313], "524973": 1307, "vel_textur": 1307, "velocity_textur": [1307, 1310], "vleociti": 1307, "At": [1307, 1312], "velocity_dealias": 1307, "much": [1307, 1309, 1310, 1312, 1313], "realist": 1307, "gates_to_grid": 1309, "deprecationwarn": [1309, 1311], "99000": 1309, "98000": 1309, "97000": 1309, "96000": 1309, "95000": 1309, "94000": 1309, "93000": 1309, "92000": 1309, "91000": 1309, "90000": 1309, "89000": 1309, "88000": 1309, "87000": 1309, "86000": 1309, "85000": 1309, "84000": 1309, "83000": 1309, "82000": 1309, "81000": 1309, "80000": 1309, "79000": 1309, "78000": 1309, "77000": 1309, "76000": 1309, "75000": 1309, "74000": 1309, "73000": 1309, "72000": 1309, "71000": 1309, "70000": 1309, "69000": 1309, "68000": 1309, "67000": 1309, "66000": 1309, "65000": 1309, "64000": 1309, "63000": 1309, "62000": 1309, "61000": 1309, "59000": 1309, "58000": 1309, "57000": 1309, "56000": 1309, "55000": 1309, "54000": 1309, "53000": 1309, "52000": 1309, "51000": 1309, "49000": 1309, "48000": 1309, "47000": 1309, "46000": 1309, "45000": 1309, "44000": 1309, "43000": 1309, "42000": 1309, "41000": 1309, "38000": 1309, "37000": 1309, "35000": 1309, "34000": 1309, "32000": 1309, "31000": 1309, "29000": 1309, "28000": 1309, "26000": 1309, "23000": 1309, "22000": 1309, "19000": 1309, "16000": 1309, "14000": 1309, "13000": 1309, "8000": [1309, 1312], "7000": 1309, "suit": [1309, 1313, 1317], "longitudn": 1309, "latitudn": 1309, "suffer": 1309, "artifici": 1309, "feather": 1309, "grid_bett": 1309, "1750": 1309, "sgpxsaprcmacsuri5": 1310, "20171004": 1310, "203018": 1310, "total_pow": 1310, "xsapr_clutt": 1310, "sounding_temperatur": 1310, "signal_to_noise_ratio": [1310, 1313], "gate_id": 1310, "simulated_veloc": 1310, "unfolded_differential_phas": 1310, "corrected_differential_phas": 1310, "filtered_corrected_differential_phas": 1310, "corrected_specific_diff_phas": 1310, "filtered_corrected_specific_diff_phas": 1310, "path_integrated_attenu": 1310, "specific_differential_attenu": 1310, "path_integrated_differential_attenu": 1310, "trip": 1310, "nonhydrometeor": 1310, "analyz": [1310, 1317], "exclude_equ": 1310, "cleaner": 1310, "tell": 1310, "refl_arrai": 1310, "reflectivity_w_mask": 1310, "iter_slic": [1310, 1314], "9344453454202706": 1310, "620691732853737": 1310, "3756584054113996": 1310, "597935968662154": 1310, "696735014111216": 1310, "061894569912447": 1310, "721673265240488": 1310, "086695918593689": 1310, "33930700509078": 1310, "599363169483158": 1310, "836875745223637": 1310, "051601529570966": 1310, "22435547210836": 1310, "378109469982695": 1310, "553820234067336": 1310, "648943841665002": 1310, "837593740986444": 1310, "049614721040282": 1310, "331202567459613": 1310, "585432697375357": 1310, "87002341270722": 1310, "993012637722325": 1310, "061966001642219": 1310, "122799449619672": 1310, "861035552720102": 1310, "74608994279257": 1310, "148801770281325": 1310, "70860719727862": 1310, "989513966551444": 1310, "188644935344827": 1310, "89301878240611": 1310, "172644371021923": 1310, "79879842243138": 1310, "912806090219976": 1310, "766281467013889": 1310, "920522471877334": 1310, "898600907318164": 1310, "971026055481874": 1310, "110503947133682": 1310, "094456418731509": 1310, "0822160050675675": 1310, "036430544969512": 1310, "259332430219459": 1310, "2438254054588604": 1310, "473482666015625": 1310, "574283685503023": 1310, "866719139946832": 1310, "771468742643597": 1310, "compani": 1311, "eld": 1311, "dn": 1311, "lema": [1311, 1313], "data_dir": 1311, "scratch": [1311, 1319], "wolfensb": [1311, 1312, 1313], "pyrad_cours": 1311, "mch_jan_2024": 1311, "010": 1311, "read_metranet": 1311, "msrad": [1311, 1312, 1313], "rainforest_test": [1311, 1312, 1313], "tqdm": 1311, "tqdmwarn": 1311, "iprogress": 1311, "ipywidget": 1311, "readthedoc": [1311, 1317], "stabl": 1311, "user_instal": 1311, "autonotebook": 1311, "notebook_tqdm": 1311, "fieldnam": 1311, "mch": 1311, "zv": 1311, "reflectivity_vv": 1311, "vel": 1311, "wid": 1311, "clt": 1311, "clutter_exit_cod": 1311, "stat_test_lag1": 1311, "stat_test_lag2": 1311, "wbn": 1311, "wide_band_nois": 1311, "mph": 1311, "mean_phas": 1311, "discrimin": 1311, "isnan": 1311, "read_file_c": 1311, "read_file_pi": 1311, "reli": [1311, 1313], "marco": 1311, "boscacci": 1311, "anywher": 1311, "prone": [1311, 1312], "zh_dn": 1311, "mha": 1311, "mhd": 1311, "mhl": 1311, "mhp": 1311, "mhw": 1311, "fashion": 1311, "file_hr": 1311, "mhl2217907250u": [1311, 1313], "ymx": 1311, "dvx": 1311, "yml2217907257l": 1311, "810": 1311, "dealv": 1311, "dvl2217907257l": 1311, "py_decod": 1311, "dbg": 1311, "verb": 1311, "verbl": 1311, "goe": 1311, "map_hydro": 1311, "io_aux": 1311, "hydro_remap": 1311, "pyart_langrainbow12": 1311, "set_yticklabel": 1311, "welcom": 1311, "pydda": 1311, "jax": 1311, "unabl": 1311, "engin": 1311, "tensorflow": 1311, "pyrad_proc": 1311, "flow_aux": 1311, "bokeh": 1311, "primit": 1311, "bool8": 1311, "bool_": 1311, "bokeh_bool_typ": 1311, "qpe": 1311, "rzc": 1311, "poh": 1311, "bzc": 1311, "mesh": 1311, "mzc": 1311, "read_cartesian_metranet": 1311, "rzc221790725vl": 1311, "63": [1311, 1314], "pyart_rrate11": 1311, "0x2b0d2db45660": 1311, "read_fil": 1311, "read_polar": 1311, "qpe_data_dn": 1311, "qpe_data": 1311, "summar": 1311, "ezc": 1311, "impli": 1311, "unrel": 1311, "unus": 1311, "exercic": [1312, 1313], "topic": [1312, 1313], "tackl": [1312, 1313], "pseudorhi": 1312, "glob": [1312, 1317], "load_config": [1312, 1313], "mch_config": [1312, 1313], "thu": 1312, "too": [1312, 1313], "inde": [1312, 1313], "especi": 1312, "strong": [1312, 1313], "simplest": 1312, "files_radar": 1312, "exercice2_swiss_doppl": 1312, "mll221790725": 1312, "enumer": 1312, "radar_merg": 1312, "sharex": [1312, 1313], "ravel": 1312, "discontinu": 1312, "difficulti": 1312, "isol": [1312, 1313], "seen": [1312, 1317], "ymin": 1312, "xmin": 1312, "ymax": 1312, "xmax": 1312, "cappi_res_h": 1312, "cappi_res_v": 1312, "cappi_zh": 1312, "throught": 1312, "thunderstorm": [1312, 1313], "1785": 1312, "shade": 1312, "quadrilater": 1312, "gouraud": 1312, "rcparam": 1312, "pcolor": 1312, "arg": 1312, "altitudin": 1312, "downdraft": 1312, "updraft": 1312, "wider": 1312, "cold": 1312, "13th": 1312, "albi": 1312, "z\u00fcrich": 1312, "widespread": 1312, "unfortun": 1312, "question_pyart_meteoswiss": 1312, "mla211941205": 1312, "corrected_velocity_neg": 1312, "5272": 1312, "464": 1312, "runtimewarn": 1312, "mean_velocity_per_g": 1312, "reshap": 1312, "y_new": 1312, "y_in_window": 1312, "71002": 1312, "106740": 1312, "125476": 1312, "radiosound": 1312, "payern": 1312, "130": 1312, "though": [1312, 1319], "discrep": 1312, "startup": 1313, "cosmo": 1313, "file_radar": 1313, "exercice1_swiss_thunderstorm": 1313, "20220628073500_savevol_cosmo_lookup_temp": 1313, "problemat": 1313, "gtfilter": 1313, "moment_and_texture_based_gate_filt": 1313, "clear": 1313, "mostli": 1313, "behind": 1313, "knowledg": 1313, "insight": 1313, "signific": 1313, "oblat": 1313, "drop": 1313, "784": 1313, "mont": 1313, "8231": 1313, "2514": 1313, "0644": 1313, "9861": 1313, "0239": 1313, "1971": 1313, "9661": 1313, "1464": 1313, "9447": 1313, "1142": 1313, "9787": 1313, "974": 1313, "2450": 1313, "5540": 1313, "1459": 1313, "9937": 1313, "945": 1313, "9432": 1313, "0110": 1313, "5141": 1313, "9928": 1313, "993": 1313, "5202": 1313, "3498": 1313, "9746": 1313, "843": 1313, "5287": 1313, "9751": 1313, "9804": 1313, "6547": 1313, "7054": 1313, "5101": 1313, "9765": 1313, "1114": 1313, "4998": 1313, "6431": 1313, "9845": 1313, "1010": 1313, "complic": 1313, "few": [1313, 1319], "dai": 1313, "refin": 1313, "est_rain_rate_hydro": 1313, "land": 1313, "lon_bnd": 1313, "lat_bnd": 1313, "states_provinc": 1313, "cultur": 1313, "admin_0_countri": 1313, "facecolor": 1313, "river": 1313, "add_featur": 1313, "287": 1313, "lambert": 1313, "feature_artist": 1313, "featureartist": 1313, "0x2b9150c92f80": 1313, "didn": 1313, "uncertain": 1313, "beam_azimuth_angl": 1314, "azimuth_angle_from_true_north": 1314, "radial_azimuth_coordin": 1314, "beam_elevation_angl": 1314, "elevation_angle_from_horizontal_plan": 1314, "radial_elevation_coordin": 1314, "1832": 1314, "log_differential_reflectivity_hv": 1314, "875": 1314, "9999": 1314, "differential_phase_hv": 1314, "equivalent_reflectivity_factor": 1314, "cross_correlation_ratio_hv": 1314, "correlation_ratio": 1314, "meters_per_second": 1314, "doppler_spectrum_width": 1314, "radial_velocity_of_scatterers_away_from_instru": 1314, "target_fixed_angl": 1314, "unambiguous_rang": 1314, "unambigu": 1314, "degrees_north": 1314, "degrees_east": 1314, "projection_range_coordin": 1314, "range_to_measurement_volum": 1314, "radial_range_coordin": 1314, "spacing_is_const": 1314, "meters_to_center_of_first_g": 1314, "2125": 1314, "meters_between_g": 1314, "int32": 1314, "s20": 1314, "unitless": 1314, "coplan": 1314, "vertical_point": 1314, "idl": 1314, "azimuth_surveil": 1314, "elevation_surveil": 1314, "sunscan": 1314, "manual_ppi": 1314, "manual_rhi": 1314, "17t19": 1314, "21z": 1314, "time_in_seconds_since_volume_start": 1314, "calendar": 1314, "gregorian": 1314, "histori": 1314, "katx": 1314, "original_contain": 1314, "vcp_pattern": 1314, "7470703": 1314, "7196045": 1314, "6893921": 1314, "511719": 1314, "get_slic": 1314, "sweep_1": 1314, "52734375": 1314, "itself": 1314, "indici": 1314, "slice_indic": 1314, "9066728410400056": 1314, "478547577741713": 1314, "587792083929423": 1314, "871031288639269": 1314, "971692217963673": 1314, "830616390843327": 1314, "108188248095756": 1314, "483419908190385": 1314, "88976917057903": 1314, "852766685681688": 1314, "410455582269897": 1314, "66444787446138": 1314, "997862391449566": 1314, "172098402018502": 1314, "489752513534416": 1314, "712565619531706": 1314, "commonli": 1314, "726": 1315, "29": 1315, "8x": 1316, "But": 1316, "bash": 1316, "export": [1316, 1319], "pythonpath": 1316, "pth": 1316, "build_ext": 1316, "pip": [1316, 1317, 1319], "segfault": 1316, "newer": 1316, "Theres": 1316, "reinstal": 1316, "remedi": 1316, "fno": 1316, "protector": 1316, "d_fortify_sourc": 1316, "cflag": 1316, "makefil": 1316, "troubl": 1316, "my": 1316, "bit": 1316, "define_macro": 1316, "macro": 1316, "extra_compile_arg": 1316, "m32": 1316, "extra_link_arg": 1316, "m64": 1316, "readm": 1316, "proj_lib": 1316, "xx": 1316, "usernam": 1316, "xxx": 1316, "mpl_toolkit": 1316, "offici": 1317, "mail": 1317, "openradar": 1317, "ev": 1317, "pyart_short_cours": 1317, "youtub": 1317, "watch": 1317, "diip": 1317, "q3bkzw": 1317, "auto_exampl": 1317, "scm": 1317, "book": 1317, "pep8": 1317, "popular": 1317, "pycodestyl": 1317, "pylint": 1317, "pep": 1317, "0008": 1317, "highli": 1317, "tast": 1317, "brief": 1317, "parti": 1317, "explain": 1317, "velocity_azimuth_displai": 1317, "_inverse_dist_squar": 1317, "_average1d": 1317, "explan": 1317, "mention": [1317, 1319], "statement": 1317, "futur": 1317, "ran": 1317, "rerun": 1317, "test_vad": 1317, "make_target_radar": 1317, "ones_lik": 1317, "z_start": 1317, "z_end": 1317, "z_count": 1317, "vad_height": 1317, "vad_spe": 1317, "98665725": 1317, "94020686": 1317, "88107152": 1317, "81939374": 1317, "75851962": 1317, "vad_direct": 1317, "359": 1317, "84659496": 1317, "30240553": 1317, "358": 1317, "58658589": 1317, "357": 1317, "81073051": 1317, "01353486": 1317, "01335138": 1317, "06014712": 1317, "12039762": 1317, "18410404": 1317, "24791911": 1317, "98663937": 1317, "9398407": 1317, "87958641": 1317, "81587601": 1317, "75205693": 1317, "assert_almost_equ": 1317, "pyarg": 1317, "test_cfradi": 1317, "cd": 1317, "contribut": [1317, 1318], "branch": [1317, 1319], "fork": 1317, "cartopy_map": 1317, "push": 1317, "branch_nam": 1317, "checkout": 1317, "task": 1317, "untrack": 1317, "switch": 1317, "acronym": 1317, "maint": 1317, "finish": [1317, 1319], "quotat": 1317, "enter": 1317, "acronymn": 1317, "gitwash": 1317, "development_workflow": 1317, "editor": [1317, 1319], "sty": 1317, "whitespac": 1317, "vim": 1317, "thing": 1317, "ff": 1317, "checker": 1317, "appveyor": 1317, "travisci": 1317, "sit": 1317, "blog_post": 1317, "instruct": 1318, "contributor": 1318, "conflict": 1319, "panda": 1319, "ask": 1319, "exit": 1319, "recent": 1319, "manag": 1319, "activ": 1319, "deactiv": 1319, "enviro": 1319, "ipython": 1319, "spyder": 1319, "yourusernam": 1319, "youranacondadir": 1319, "machin": 1319, "jjhelmu": 1319, "py3": 1319, "gitter": 1319, "im": 1319}, "objects": {"pyart": [[535, 0, 1, "", "_debug_info"], [536, 1, 0, "-", "aux_io"], [584, 1, 0, "-", "bridge"], [586, 1, 0, "-", "config"], [599, 1, 0, "-", "core"], [681, 1, 0, "-", "correct"], [752, 1, 0, "-", "exceptions"], [753, 1, 0, "-", "filters"], [790, 1, 0, "-", "graph"], [966, 1, 0, "-", "io"], [989, 1, 0, "-", "lazydict"], [1013, 1, 0, "-", "map"], [1026, 1, 0, "-", "retrieve"], [1120, 1, 0, "-", "testing"], [1205, 1, 0, "-", "util"]], "pyart.aux_io": [[537, 0, 1, "", "convert_data"], [538, 0, 1, "", "extract_sweeps_skyecho"], [539, 0, 1, "", "get_library"], [540, 0, 1, "", "get_sweep_time_coverage"], [541, 0, 1, "", "read_bin"], [542, 0, 1, "", "read_bin_mf"], [543, 0, 1, "", "read_cartesian_metranet"], [544, 0, 1, "", "read_cf1"], [545, 0, 1, "", "read_cf1_cartesian"], [546, 0, 1, "", "read_cf1_cartesian_mf"], [547, 0, 1, "", "read_d3r_gcpex_nc"], [548, 0, 1, "", "read_dat_mf"], [549, 0, 1, "", "read_edge_netcdf"], [550, 0, 1, "", "read_file_c"], [551, 0, 1, "", "read_file_py"], [552, 0, 1, "", "read_gamic"], [553, 0, 1, "", "read_gif"], [554, 0, 1, "", "read_grib"], [555, 0, 1, "", "read_hpl"], [556, 0, 1, "", "read_iq"], [557, 0, 1, "", "read_kazr"], [558, 0, 1, "", "read_knmi_grid_h5"], [559, 0, 1, "", "read_mch_vad"], [560, 0, 1, "", "read_metranet"], [561, 0, 1, "", "read_noxp_iphex_nc"], [562, 0, 1, "", "read_odim_grid_h5"], [563, 0, 1, "", "read_odim_h5"], [564, 0, 1, "", "read_odim_vp_h5"], [565, 0, 1, "", "read_pattern"], [566, 0, 1, "", "read_png"], [567, 0, 1, "", "read_product_c"], [568, 0, 1, "", "read_product_py"], [569, 0, 1, "", "read_psr_cpi_header"], [570, 0, 1, "", "read_psr_header"], [571, 0, 1, "", "read_psr_spectra"], [572, 0, 1, "", "read_radx"], [573, 0, 1, "", "read_rainbow_psr"], [574, 0, 1, "", "read_rainbow_psr_spectra"], [575, 0, 1, "", "read_rainbow_wrl"], [576, 0, 1, "", "read_sinarame_h5"], [577, 0, 1, "", "read_skyecho"], [578, 0, 1, "", "read_spectra"], [579, 0, 1, "", "read_swissbirdradar_spectra"], [580, 0, 1, "", "write_odim_grid_h5"], [581, 0, 1, "", "write_odim_h5"], [582, 0, 1, "", "write_sinarame_cfradial"], [583, 0, 1, "", "write_spectra"]], "pyart.bridge": [[585, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[587, 2, 1, "", "FileMetadata"], [591, 0, 1, "", "get_KE"], [592, 0, 1, "", "get_field_colormap"], [593, 0, 1, "", "get_field_limits"], [594, 0, 1, "", "get_field_mapping"], [595, 0, 1, "", "get_field_name"], [596, 0, 1, "", "get_fillvalue"], [597, 0, 1, "", "get_metadata"], [598, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[588, 3, 1, "", "__call__"], [589, 3, 1, "", "get_field_name"], [590, 3, 1, "", "get_metadata"]], "pyart.core": [[600, 2, 1, "", "Grid"], [610, 2, 1, "", "HorizontalWindProfile"], [614, 2, 1, "", "Radar"], [643, 2, 1, "", "RadarSpectra"], [672, 0, 1, "", "antenna_to_cartesian"], [673, 0, 1, "", "antenna_vectors_to_cartesian"], [674, 0, 1, "", "cartesian_to_antenna"], [675, 0, 1, "", "cartesian_to_geographic"], [676, 0, 1, "", "cartesian_to_geographic_aeqd"], [677, 0, 1, "", "cartesian_vectors_to_geographic"], [678, 0, 1, "", "geographic_to_cartesian"], [679, 0, 1, "", "geographic_to_cartesian_aeqd"], [680, 0, 1, "", "wgs84_to_swissCH1903"]], "pyart.core.Grid": [[601, 3, 1, "", "add_field"], [602, 3, 1, "", "get_point_longitude_latitude"], [603, 3, 1, "", "get_projparams"], [604, 3, 1, "", "init_point_altitude"], [605, 3, 1, "", "init_point_longitude_latitude"], [606, 3, 1, "", "init_point_x_y_z"], [607, 4, 1, "", "projection_proj"], [608, 3, 1, "", "to_xarray"], [609, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[611, 3, 1, "", "from_u_and_v"], [612, 4, 1, "", "u_wind"], [613, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[615, 3, 1, "", "add_field"], [616, 3, 1, "", "add_field_like"], [617, 3, 1, "", "add_filter"], [618, 3, 1, "", "check_field_exists"], [619, 3, 1, "", "extract_sweeps"], [620, 3, 1, "", "get_azimuth"], [621, 3, 1, "", "get_elevation"], [622, 3, 1, "", "get_end"], [623, 3, 1, "", "get_field"], [624, 3, 1, "", "get_gate_area"], [625, 3, 1, "", "get_gate_lat_lon_alt"], [626, 3, 1, "", "get_gate_x_y_z"], [627, 3, 1, "", "get_nyquist_vel"], [628, 3, 1, "", "get_slice"], [629, 3, 1, "", "get_start"], [630, 3, 1, "", "get_start_end"], [631, 3, 1, "", "info"], [632, 3, 1, "", "init_gate_altitude"], [633, 3, 1, "", "init_gate_longitude_latitude"], [634, 3, 1, "", "init_gate_x_y_z"], [635, 3, 1, "", "init_rays_per_sweep"], [636, 3, 1, "", "iter_azimuth"], [637, 3, 1, "", "iter_elevation"], [638, 3, 1, "", "iter_end"], [639, 3, 1, "", "iter_field"], [640, 3, 1, "", "iter_slice"], [641, 3, 1, "", "iter_start"], [642, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[644, 3, 1, "", "add_field"], [645, 3, 1, "", "add_field_like"], [646, 3, 1, "", "add_filter"], [647, 3, 1, "", "check_field_exists"], [648, 3, 1, "", "extract_sweeps"], [649, 3, 1, "", "get_azimuth"], [650, 3, 1, "", "get_elevation"], [651, 3, 1, "", "get_end"], [652, 3, 1, "", "get_field"], [653, 3, 1, "", "get_gate_area"], [654, 3, 1, "", "get_gate_lat_lon_alt"], [655, 3, 1, "", "get_gate_x_y_z"], [656, 3, 1, "", "get_nyquist_vel"], [657, 3, 1, "", "get_slice"], [658, 3, 1, "", "get_start"], [659, 3, 1, "", "get_start_end"], [660, 3, 1, "", "info"], [661, 3, 1, "", "init_gate_altitude"], [662, 3, 1, "", "init_gate_longitude_latitude"], [663, 3, 1, "", "init_gate_x_y_z"], [664, 3, 1, "", "init_rays_per_sweep"], [665, 3, 1, "", "iter_azimuth"], [666, 3, 1, "", "iter_elevation"], [667, 3, 1, "", "iter_end"], [668, 3, 1, "", "iter_field"], [669, 3, 1, "", "iter_slice"], [670, 3, 1, "", "iter_start"], [671, 3, 1, "", "iter_start_end"]], "pyart.correct": [[682, 2, 1, "", "GateFilter"], [710, 0, 1, "", "calculate_attenuation"], [711, 0, 1, "", "calculate_attenuation_philinear"], [712, 0, 1, "", "calculate_attenuation_zphi"], [713, 0, 1, "", "compute_apparent_vpr"], [714, 0, 1, "", "compute_theoretical_vpr"], [715, 0, 1, "", "correct_bias"], [716, 0, 1, "", "correct_noise_rhohv"], [717, 0, 1, "", "correct_sys_phase"], [718, 0, 1, "", "correct_visibility"], [719, 0, 1, "", "correct_vpr"], [720, 0, 1, "", "correct_vpr_spatialised"], [721, 0, 1, "", "dealias_fourdd"], [722, 0, 1, "", "dealias_region_based"], [723, 0, 1, "", "dealias_unwrap_phase"], [724, 0, 1, "", "despeckle_field"], [725, 0, 1, "", "det_sys_phase_ray"], [726, 0, 1, "", "est_rhohv_rain"], [727, 0, 1, "", "est_zdr_precip"], [728, 0, 1, "", "est_zdr_snow"], [729, 0, 1, "", "find_objects"], [730, 0, 1, "", "gauss_fit"], [731, 0, 1, "", "get_mask_fzl"], [732, 0, 1, "", "get_sun_hits"], [733, 0, 1, "", "get_sun_hits_ivic"], [734, 0, 1, "", "get_sun_hits_psr"], [735, 0, 1, "", "moment_based_gate_filter"], [736, 0, 1, "", "phase_proc_lp"], [737, 0, 1, "", "phase_proc_lp_gf"], [738, 0, 1, "", "ptoa_to_sf"], [739, 0, 1, "", "retrieval_result"], [740, 0, 1, "", "scanning_losses"], [741, 0, 1, "", "selfconsistency_bias"], [742, 0, 1, "", "selfconsistency_bias2"], [743, 0, 1, "", "selfconsistency_kdp_phidp"], [744, 0, 1, "", "smooth_masked"], [745, 0, 1, "", "smooth_phidp_double_window"], [746, 0, 1, "", "smooth_phidp_single_window"], [747, 0, 1, "", "solar_flux_lookup"], [748, 0, 1, "", "sun_position_mfr"], [749, 0, 1, "", "sun_position_pysolar"], [750, 0, 1, "", "sun_power"], [751, 0, 1, "", "sun_retrieval"]], "pyart.correct.GateFilter": [[683, 3, 1, "", "copy"], [684, 3, 1, "", "exclude_above"], [685, 3, 1, "", "exclude_all"], [686, 3, 1, "", "exclude_below"], [687, 3, 1, "", "exclude_equal"], [688, 3, 1, "", "exclude_gates"], [689, 3, 1, "", "exclude_inside"], [690, 3, 1, "", "exclude_invalid"], [691, 3, 1, "", "exclude_masked"], [692, 3, 1, "", "exclude_none"], [693, 3, 1, "", "exclude_not_equal"], [694, 3, 1, "", "exclude_outside"], [695, 3, 1, "", "exclude_transition"], [696, 4, 1, "", "gate_excluded"], [697, 4, 1, "", "gate_included"], [698, 3, 1, "", "include_above"], [699, 3, 1, "", "include_all"], [700, 3, 1, "", "include_below"], [701, 3, 1, "", "include_equal"], [702, 3, 1, "", "include_gates"], [703, 3, 1, "", "include_inside"], [704, 3, 1, "", "include_none"], [705, 3, 1, "", "include_not_equal"], [706, 3, 1, "", "include_not_masked"], [707, 3, 1, "", "include_not_transition"], [708, 3, 1, "", "include_outside"], [709, 3, 1, "", "include_valid"]], "pyart.exceptions": [[165, 5, 1, "", "DeprecatedAttribute"], [166, 5, 1, "", "DeprecatedFunctionName"], [167, 5, 1, "", "MissingOptionalDependency"], [168, 0, 1, "", "_deprecated_alias"]], "pyart.filters": [[754, 2, 1, "", "GateFilter"], [782, 0, 1, "", "birds_gate_filter"], [783, 0, 1, "", "class_based_gate_filter"], [784, 0, 1, "", "iso0_based_gate_filter"], [785, 0, 1, "", "moment_and_texture_based_gate_filter"], [786, 0, 1, "", "moment_based_gate_filter"], [787, 0, 1, "", "snr_based_gate_filter"], [788, 0, 1, "", "temp_based_gate_filter"], [789, 0, 1, "", "visibility_based_gate_filter"]], "pyart.filters.GateFilter": [[755, 3, 1, "", "copy"], [756, 3, 1, "", "exclude_above"], [757, 3, 1, "", "exclude_all"], [758, 3, 1, "", "exclude_below"], [759, 3, 1, "", "exclude_equal"], [760, 3, 1, "", "exclude_gates"], [761, 3, 1, "", "exclude_inside"], [762, 3, 1, "", "exclude_invalid"], [763, 3, 1, "", "exclude_masked"], [764, 3, 1, "", "exclude_none"], [765, 3, 1, "", "exclude_not_equal"], [766, 3, 1, "", "exclude_outside"], [767, 3, 1, "", "exclude_transition"], [768, 4, 1, "", "gate_excluded"], [769, 4, 1, "", "gate_included"], [770, 3, 1, "", "include_above"], [771, 3, 1, "", "include_all"], [772, 3, 1, "", "include_below"], [773, 3, 1, "", "include_equal"], [774, 3, 1, "", "include_gates"], [775, 3, 1, "", "include_inside"], [776, 3, 1, "", "include_none"], [777, 3, 1, "", "include_not_equal"], [778, 3, 1, "", "include_not_masked"], [779, 3, 1, "", "include_not_transition"], [780, 3, 1, "", "include_outside"], [781, 3, 1, "", "include_valid"]], "pyart.graph": [[791, 2, 1, "", "AirborneRadarDisplay"], [825, 2, 1, "", "GridMapDisplay"], [844, 2, 1, "", "GridMapDisplayBasemap"], [858, 2, 1, "", "RadarDisplay"], [891, 2, 1, "", "RadarMapDisplay"], [928, 2, 1, "", "RadarMapDisplayBasemap"], [965, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[792, 3, 1, "", "generate_az_rhi_title"], [793, 3, 1, "", "generate_filename"], [794, 3, 1, "", "generate_ray_title"], [795, 3, 1, "", "generate_title"], [796, 3, 1, "", "generate_vpt_title"], [797, 3, 1, "", "generate_xsection_title"], [798, 3, 1, "", "label_xaxis_r"], [799, 3, 1, "", "label_xaxis_rays"], [800, 3, 1, "", "label_xaxis_time"], [801, 3, 1, "", "label_xaxis_x"], [802, 3, 1, "", "label_xaxis_xsection"], [803, 3, 1, "", "label_yaxis_field"], [804, 3, 1, "", "label_yaxis_xsection"], [805, 3, 1, "", "label_yaxis_y"], [806, 3, 1, "", "label_yaxis_z"], [807, 3, 1, "", "plot"], [808, 3, 1, "", "plot_azimuth_to_rhi"], [809, 3, 1, "", "plot_colorbar"], [810, 3, 1, "", "plot_cr_raster"], [811, 3, 1, "", "plot_cross_hair"], [812, 3, 1, "", "plot_grid_lines"], [813, 3, 1, "", "plot_label"], [814, 3, 1, "", "plot_labels"], [815, 3, 1, "", "plot_ppi"], [816, 3, 1, "", "plot_range_ring"], [817, 3, 1, "", "plot_range_rings"], [818, 3, 1, "", "plot_ray"], [819, 3, 1, "", "plot_rhi"], [820, 3, 1, "", "plot_sweep_grid"], [821, 3, 1, "", "plot_vpt"], [822, 3, 1, "", "plot_xsection"], [823, 3, 1, "", "set_aspect_ratio"], [824, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[826, 3, 1, "", "cartopy_coastlines"], [827, 3, 1, "", "cartopy_political_boundaries"], [828, 3, 1, "", "cartopy_states"], [829, 3, 1, "", "generate_filename"], [830, 3, 1, "", "generate_grid_title"], [831, 3, 1, "", "generate_latitudinal_level_title"], [832, 3, 1, "", "generate_longitudinal_level_title"], [833, 3, 1, "", "plot_colorbar"], [834, 3, 1, "", "plot_cross_section"], [835, 3, 1, "", "plot_cross_section_level"], [836, 3, 1, "", "plot_crosshairs"], [837, 3, 1, "", "plot_grid"], [838, 3, 1, "", "plot_grid_contour"], [839, 3, 1, "", "plot_grid_raw"], [840, 3, 1, "", "plot_latitude_slice"], [841, 3, 1, "", "plot_latitudinal_level"], [842, 3, 1, "", "plot_longitude_slice"], [843, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[845, 3, 1, "", "generate_filename"], [846, 3, 1, "", "generate_grid_title"], [847, 3, 1, "", "generate_latitudinal_level_title"], [848, 3, 1, "", "generate_longitudinal_level_title"], [849, 3, 1, "", "get_basemap"], [850, 3, 1, "", "plot_basemap"], [851, 3, 1, "", "plot_colorbar"], [852, 3, 1, "", "plot_crosshairs"], [853, 3, 1, "", "plot_grid"], [854, 3, 1, "", "plot_latitude_slice"], [855, 3, 1, "", "plot_latitudinal_level"], [856, 3, 1, "", "plot_longitude_slice"], [857, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[859, 3, 1, "", "generate_az_rhi_title"], [860, 3, 1, "", "generate_filename"], [861, 3, 1, "", "generate_ray_title"], [862, 3, 1, "", "generate_title"], [863, 3, 1, "", "generate_vpt_title"], [864, 3, 1, "", "generate_xsection_title"], [865, 3, 1, "", "label_xaxis_r"], [866, 3, 1, "", "label_xaxis_rays"], [867, 3, 1, "", "label_xaxis_time"], [868, 3, 1, "", "label_xaxis_x"], [869, 3, 1, "", "label_xaxis_xsection"], [870, 3, 1, "", "label_yaxis_field"], [871, 3, 1, "", "label_yaxis_xsection"], [872, 3, 1, "", "label_yaxis_y"], [873, 3, 1, "", "label_yaxis_z"], [874, 3, 1, "", "plot"], [875, 3, 1, "", "plot_azimuth_to_rhi"], [876, 3, 1, "", "plot_colorbar"], [877, 3, 1, "", "plot_cr_raster"], [878, 3, 1, "", "plot_cross_hair"], [879, 3, 1, "", "plot_grid_lines"], [880, 3, 1, "", "plot_label"], [881, 3, 1, "", "plot_labels"], [882, 3, 1, "", "plot_ppi"], [883, 3, 1, "", "plot_range_ring"], [884, 3, 1, "", "plot_range_rings"], [885, 3, 1, "", "plot_ray"], [886, 3, 1, "", "plot_rhi"], [887, 3, 1, "", "plot_vpt"], [888, 3, 1, "", "plot_xsection"], [889, 3, 1, "", "set_aspect_ratio"], [890, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[892, 3, 1, "", "generate_az_rhi_title"], [893, 3, 1, "", "generate_filename"], [894, 3, 1, "", "generate_ray_title"], [895, 3, 1, "", "generate_title"], [896, 3, 1, "", "generate_vpt_title"], [897, 3, 1, "", "generate_xsection_title"], [898, 3, 1, "", "label_xaxis_r"], [899, 3, 1, "", "label_xaxis_rays"], [900, 3, 1, "", "label_xaxis_time"], [901, 3, 1, "", "label_xaxis_x"], [902, 3, 1, "", "label_xaxis_xsection"], [903, 3, 1, "", "label_yaxis_field"], [904, 3, 1, "", "label_yaxis_xsection"], [905, 3, 1, "", "label_yaxis_y"], [906, 3, 1, "", "label_yaxis_z"], [907, 3, 1, "", "plot"], [908, 3, 1, "", "plot_azimuth_to_rhi"], [909, 3, 1, "", "plot_colorbar"], [910, 3, 1, "", "plot_cr_raster"], [911, 3, 1, "", "plot_cross_hair"], [912, 3, 1, "", "plot_grid_lines"], [913, 3, 1, "", "plot_label"], [914, 3, 1, "", "plot_labels"], [915, 3, 1, "", "plot_line_geo"], [916, 3, 1, "", "plot_line_xy"], [917, 3, 1, "", "plot_point"], [918, 3, 1, "", "plot_ppi"], [919, 3, 1, "", "plot_ppi_map"], [920, 3, 1, "", "plot_range_ring"], [921, 3, 1, "", "plot_range_rings"], [922, 3, 1, "", "plot_ray"], [923, 3, 1, "", "plot_rhi"], [924, 3, 1, "", "plot_vpt"], [925, 3, 1, "", "plot_xsection"], [926, 3, 1, "", "set_aspect_ratio"], [927, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[929, 3, 1, "", "generate_az_rhi_title"], [930, 3, 1, "", "generate_filename"], [931, 3, 1, "", "generate_ray_title"], [932, 3, 1, "", "generate_title"], [933, 3, 1, "", "generate_vpt_title"], [934, 3, 1, "", "generate_xsection_title"], [935, 3, 1, "", "label_xaxis_r"], [936, 3, 1, "", "label_xaxis_rays"], [937, 3, 1, "", "label_xaxis_time"], [938, 3, 1, "", "label_xaxis_x"], [939, 3, 1, "", "label_xaxis_xsection"], [940, 3, 1, "", "label_yaxis_field"], [941, 3, 1, "", "label_yaxis_xsection"], [942, 3, 1, "", "label_yaxis_y"], [943, 3, 1, "", "label_yaxis_z"], [944, 3, 1, "", "plot"], [945, 3, 1, "", "plot_azimuth_to_rhi"], [946, 3, 1, "", "plot_colorbar"], [947, 3, 1, "", "plot_cr_raster"], [948, 3, 1, "", "plot_cross_hair"], [949, 3, 1, "", "plot_grid_lines"], [950, 3, 1, "", "plot_label"], [951, 3, 1, "", "plot_labels"], [952, 3, 1, "", "plot_line_geo"], [953, 3, 1, "", "plot_line_xy"], [954, 3, 1, "", "plot_point"], [955, 3, 1, "", "plot_ppi"], [956, 3, 1, "", "plot_ppi_map"], [957, 3, 1, "", "plot_range_ring"], [958, 3, 1, "", "plot_range_rings"], [959, 3, 1, "", "plot_ray"], [960, 3, 1, "", "plot_rhi"], [961, 3, 1, "", "plot_vpt"], [962, 3, 1, "", "plot_xsection"], [963, 3, 1, "", "set_aspect_ratio"], [964, 3, 1, "", "set_limits"]], "pyart.io": [[967, 0, 1, "", "make_time_unit_str"], [968, 0, 1, "", "prepare_for_read"], [969, 0, 1, "", "read"], [970, 0, 1, "", "read_arm_sonde"], [971, 0, 1, "", "read_arm_sonde_vap"], [972, 0, 1, "", "read_cfradial"], [973, 0, 1, "", "read_cfradial2"], [974, 0, 1, "", "read_chl"], [975, 0, 1, "", "read_grid"], [976, 0, 1, "", "read_grid_mdv"], [977, 0, 1, "", "read_mdv"], [978, 0, 1, "", "read_nexrad_archive"], [979, 0, 1, "", "read_nexrad_cdm"], [980, 0, 1, "", "read_nexrad_level3"], [981, 0, 1, "", "read_rsl"], [982, 0, 1, "", "read_sigmet"], [983, 0, 1, "", "read_uf"], [984, 0, 1, "", "write_cfradial"], [985, 0, 1, "", "write_grid"], [986, 0, 1, "", "write_grid_geotiff"], [987, 0, 1, "", "write_grid_mdv"], [988, 0, 1, "", "write_uf"]], "pyart.lazydict": [[990, 2, 1, "", "LazyLoadDict"], [1003, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[402, 3, 1, "", "__contains__"], [403, 3, 1, "", "__delattr__"], [404, 3, 1, "", "__delitem__"], [405, 3, 1, "", "__dir__"], [406, 3, 1, "", "__eq__"], [407, 3, 1, "", "__format__"], [408, 3, 1, "", "__ge__"], [409, 3, 1, "", "__getattribute__"], [410, 3, 1, "", "__getitem__"], [411, 3, 1, "", "__getstate__"], [412, 3, 1, "", "__gt__"], [413, 3, 1, "", "__init__"], [414, 3, 1, "", "__init_subclass__"], [415, 3, 1, "", "__iter__"], [416, 3, 1, "", "__le__"], [417, 3, 1, "", "__len__"], [418, 3, 1, "", "__lt__"], [419, 3, 1, "", "__ne__"], [420, 3, 1, "", "__new__"], [421, 3, 1, "", "__reduce__"], [422, 3, 1, "", "__reduce_ex__"], [423, 3, 1, "", "__repr__"], [424, 3, 1, "", "__setattr__"], [425, 3, 1, "", "__setitem__"], [426, 3, 1, "", "__sizeof__"], [427, 3, 1, "", "__str__"], [428, 3, 1, "", "__subclasshook__"], [991, 3, 1, "", "clear"], [992, 3, 1, "", "copy"], [993, 3, 1, "", "get"], [994, 3, 1, "", "has_key"], [995, 3, 1, "", "items"], [996, 3, 1, "", "keys"], [997, 3, 1, "", "pop"], [998, 3, 1, "", "popitem"], [999, 3, 1, "", "set_lazy"], [1000, 3, 1, "", "setdefault"], [1001, 3, 1, "", "update"], [1002, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[1004, 3, 1, "", "clear"], [1005, 3, 1, "", "get"], [1006, 3, 1, "", "items"], [1007, 3, 1, "", "keys"], [1008, 3, 1, "", "pop"], [1009, 3, 1, "", "popitem"], [1010, 3, 1, "", "setdefault"], [1011, 3, 1, "", "update"], [1012, 3, 1, "", "values"]], "pyart.map": [[1014, 2, 1, "", "GateMapper"], [1018, 0, 1, "", "example_roi_func_constant"], [1019, 0, 1, "", "example_roi_func_dist"], [1020, 0, 1, "", "example_roi_func_dist_beam"], [1021, 0, 1, "", "grid_from_radars"], [1022, 0, 1, "", "grid_ppi_sweeps"], [1023, 0, 1, "", "grid_rhi_sweeps"], [1024, 0, 1, "", "map_gates_to_grid"], [1025, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[1015, 4, 1, "", "distance_tolerance"], [1016, 3, 1, "", "mapped_radar"], [1017, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[441, 0, 1, "", "_destandardize"], [442, 0, 1, "", "_get_res_vol_sides"], [1027, 0, 1, "", "atmospheric_gas_att"], [1028, 0, 1, "", "calculate_snr_from_reflectivity"], [1029, 0, 1, "", "calculate_velocity_texture"], [1030, 0, 1, "", "composite_reflectivity"], [1031, 0, 1, "", "compute_Doppler_velocity"], [1032, 0, 1, "", "compute_Doppler_velocity_iq"], [1033, 0, 1, "", "compute_Doppler_width"], [1034, 0, 1, "", "compute_Doppler_width_iq"], [1035, 0, 1, "", "compute_apparent_profile"], [1036, 0, 1, "", "compute_bird_density"], [1037, 0, 1, "", "compute_ccor"], [1038, 0, 1, "", "compute_cdr"], [1039, 0, 1, "", "compute_centroids"], [1040, 0, 1, "", "compute_differential_phase"], [1041, 0, 1, "", "compute_differential_phase_iq"], [1042, 0, 1, "", "compute_differential_reflectivity"], [1043, 0, 1, "", "compute_differential_reflectivity_iq"], [1044, 0, 1, "", "compute_evp"], [1045, 0, 1, "", "compute_iq"], [1046, 0, 1, "", "compute_l"], [1047, 0, 1, "", "compute_mean_phase_iq"], [1048, 0, 1, "", "compute_noise_power"], [1049, 0, 1, "", "compute_noisedBZ"], [1050, 0, 1, "", "compute_pol_variables"], [1051, 0, 1, "", "compute_pol_variables_iq"], [1052, 0, 1, "", "compute_qvp"], [1053, 0, 1, "", "compute_radial_noise_hs"], [1054, 0, 1, "", "compute_radial_noise_ivic"], [1055, 0, 1, "", "compute_rcs"], [1056, 0, 1, "", "compute_rcs_from_pr"], [1057, 0, 1, "", "compute_reflectivity"], [1058, 0, 1, "", "compute_reflectivity_iq"], [1059, 0, 1, "", "compute_rhohv"], [1060, 0, 1, "", "compute_rhohv_iq"], [1061, 0, 1, "", "compute_rqvp"], [1062, 0, 1, "", "compute_signal_power"], [1063, 0, 1, "", "compute_snr"], [1064, 0, 1, "", "compute_spectra"], [1065, 0, 1, "", "compute_spectral_differential_phase"], [1066, 0, 1, "", "compute_spectral_differential_reflectivity"], [1067, 0, 1, "", "compute_spectral_noise"], [1068, 0, 1, "", "compute_spectral_phase"], [1069, 0, 1, "", "compute_spectral_power"], [1070, 0, 1, "", "compute_spectral_reflectivity"], [1071, 0, 1, "", "compute_spectral_rhohv"], [1072, 0, 1, "", "compute_st1_iq"], [1073, 0, 1, "", "compute_st2_iq"], [1074, 0, 1, "", "compute_svp"], [1075, 0, 1, "", "compute_ts_along_coord"], [1076, 0, 1, "", "compute_vol_refl"], [1077, 0, 1, "", "compute_vp"], [1078, 0, 1, "", "compute_wbn_iq"], [1079, 0, 1, "", "conv_strat_yuter"], [1080, 0, 1, "", "data_for_centroids"], [1081, 0, 1, "", "dealias_spectra"], [1082, 0, 1, "", "detect_ml"], [1083, 0, 1, "", "determine_medoids"], [1084, 0, 1, "", "est_rain_rate_a"], [1085, 0, 1, "", "est_rain_rate_hydro"], [1086, 0, 1, "", "est_rain_rate_kdp"], [1087, 0, 1, "", "est_rain_rate_z"], [1088, 0, 1, "", "est_rain_rate_za"], [1089, 0, 1, "", "est_rain_rate_zkdp"], [1090, 0, 1, "", "est_rain_rate_zpoly"], [1091, 0, 1, "", "est_vertical_windshear"], [1092, 0, 1, "", "est_vertical_windshear_lidar"], [1093, 0, 1, "", "est_wind_profile"], [1094, 0, 1, "", "est_wind_vel"], [1095, 0, 1, "", "fetch_radar_time_profile"], [1096, 0, 1, "", "gecsx"], [1097, 0, 1, "", "get_coeff_attg"], [1098, 0, 1, "", "get_freq_band"], [1099, 0, 1, "", "get_iso0_val"], [1100, 0, 1, "", "get_ml_rng_limits"], [1101, 0, 1, "", "grid_displacement_pc"], [1102, 0, 1, "", "grid_shift"], [1103, 0, 1, "", "hydroclass_semisupervised"], [1104, 0, 1, "", "kdp_leastsquare_double_window"], [1105, 0, 1, "", "kdp_leastsquare_single_window"], [1106, 0, 1, "", "kdp_maesaka"], [1107, 0, 1, "", "kdp_schneebeli"], [1108, 0, 1, "", "kdp_vulpiani"], [1109, 0, 1, "", "map_profile_to_gates"], [1110, 0, 1, "", "melting_layer_giangrande"], [1111, 0, 1, "", "melting_layer_hydroclass"], [1112, 0, 1, "", "melting_layer_mf"], [1113, 0, 1, "", "quasi_vertical_profile"], [1114, 0, 1, "", "select_samples"], [1115, 0, 1, "", "steiner_conv_strat"], [1116, 0, 1, "", "synthetic_obs_distribution"], [1117, 0, 1, "", "texture_of_complex_phase"], [1118, 0, 1, "", "vad_browning"], [1119, 0, 1, "", "vad_michelson"]], "pyart.testing": [[1121, 2, 1, "", "Grid"], [1131, 2, 1, "", "InTemporaryDirectory"], [1133, 2, 1, "", "Radar"], [1162, 2, 1, "", "RadarSpectra"], [1191, 0, 1, "", "get_metadata"], [1192, 0, 1, "", "get_test_data"], [1193, 0, 1, "", "make_empty_grid"], [1194, 0, 1, "", "make_empty_ppi_radar"], [1195, 0, 1, "", "make_empty_rhi_radar"], [1196, 0, 1, "", "make_empty_spectra_radar"], [1197, 0, 1, "", "make_normal_storm"], [1198, 0, 1, "", "make_single_ray_radar"], [1199, 0, 1, "", "make_storm_grid"], [1200, 0, 1, "", "make_target_grid"], [1201, 0, 1, "", "make_target_radar"], [1202, 0, 1, "", "make_target_spectra_radar"], [1203, 0, 1, "", "make_velocity_aliased_radar"], [1204, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[1122, 3, 1, "", "add_field"], [1123, 3, 1, "", "get_point_longitude_latitude"], [1124, 3, 1, "", "get_projparams"], [1125, 3, 1, "", "init_point_altitude"], [1126, 3, 1, "", "init_point_longitude_latitude"], [1127, 3, 1, "", "init_point_x_y_z"], [1128, 4, 1, "", "projection_proj"], [1129, 3, 1, "", "to_xarray"], [1130, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[1132, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[1134, 3, 1, "", "add_field"], [1135, 3, 1, "", "add_field_like"], [1136, 3, 1, "", "add_filter"], [1137, 3, 1, "", "check_field_exists"], [1138, 3, 1, "", "extract_sweeps"], [1139, 3, 1, "", "get_azimuth"], [1140, 3, 1, "", "get_elevation"], [1141, 3, 1, "", "get_end"], [1142, 3, 1, "", "get_field"], [1143, 3, 1, "", "get_gate_area"], [1144, 3, 1, "", "get_gate_lat_lon_alt"], [1145, 3, 1, "", "get_gate_x_y_z"], [1146, 3, 1, "", "get_nyquist_vel"], [1147, 3, 1, "", "get_slice"], [1148, 3, 1, "", "get_start"], [1149, 3, 1, "", "get_start_end"], [1150, 3, 1, "", "info"], [1151, 3, 1, "", "init_gate_altitude"], [1152, 3, 1, "", "init_gate_longitude_latitude"], [1153, 3, 1, "", "init_gate_x_y_z"], [1154, 3, 1, "", "init_rays_per_sweep"], [1155, 3, 1, "", "iter_azimuth"], [1156, 3, 1, "", "iter_elevation"], [1157, 3, 1, "", "iter_end"], [1158, 3, 1, "", "iter_field"], [1159, 3, 1, "", "iter_slice"], [1160, 3, 1, "", "iter_start"], [1161, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[1163, 3, 1, "", "add_field"], [1164, 3, 1, "", "add_field_like"], [1165, 3, 1, "", "add_filter"], [1166, 3, 1, "", "check_field_exists"], [1167, 3, 1, "", "extract_sweeps"], [1168, 3, 1, "", "get_azimuth"], [1169, 3, 1, "", "get_elevation"], [1170, 3, 1, "", "get_end"], [1171, 3, 1, "", "get_field"], [1172, 3, 1, "", "get_gate_area"], [1173, 3, 1, "", "get_gate_lat_lon_alt"], [1174, 3, 1, "", "get_gate_x_y_z"], [1175, 3, 1, "", "get_nyquist_vel"], [1176, 3, 1, "", "get_slice"], [1177, 3, 1, "", "get_start"], [1178, 3, 1, "", "get_start_end"], [1179, 3, 1, "", "info"], [1180, 3, 1, "", "init_gate_altitude"], [1181, 3, 1, "", "init_gate_longitude_latitude"], [1182, 3, 1, "", "init_gate_x_y_z"], [1183, 3, 1, "", "init_rays_per_sweep"], [1184, 3, 1, "", "iter_azimuth"], [1185, 3, 1, "", "iter_elevation"], [1186, 3, 1, "", "iter_end"], [1187, 3, 1, "", "iter_field"], [1188, 3, 1, "", "iter_slice"], [1189, 3, 1, "", "iter_start"], [1190, 3, 1, "", "iter_start_end"]], "pyart.util": [[1206, 0, 1, "", "angular_mean"], [1207, 0, 1, "", "angular_mean_deg"], [1208, 0, 1, "", "angular_std"], [1209, 0, 1, "", "angular_std_deg"], [1210, 0, 1, "", "angular_texture_2d"], [1211, 0, 1, "", "colocated_gates"], [1212, 0, 1, "", "colocated_gates2"], [1213, 0, 1, "", "compute_azimuthal_average"], [1214, 0, 1, "", "compute_corr"], [1215, 0, 1, "", "compute_directional_stats"], [1216, 0, 1, "", "compute_mse"], [1217, 0, 1, "", "compute_nse"], [1218, 0, 1, "", "cross_section_ppi"], [1219, 0, 1, "", "cross_section_rhi"], [1220, 0, 1, "", "datetime_from_dataset"], [1221, 0, 1, "", "datetime_from_grid"], [1222, 0, 1, "", "datetime_from_radar"], [1223, 0, 1, "", "datetimes_from_dataset"], [1224, 0, 1, "", "datetimes_from_radar"], [1225, 0, 1, "", "estimate_noise_hs74"], [1226, 0, 1, "", "estimate_noise_ivic13"], [1227, 0, 1, "", "find_neighbour_gates"], [1228, 0, 1, "", "for_azimuth"], [1229, 0, 1, "", "get_column_rays"], [1230, 0, 1, "", "get_field_location"], [1231, 0, 1, "", "get_ivic_flat_reg_var_max"], [1232, 0, 1, "", "get_ivic_pct"], [1233, 0, 1, "", "get_ivic_snr_thr"], [1234, 0, 1, "", "get_target_elevations"], [1235, 0, 1, "", "grid_texture_2d"], [1236, 0, 1, "", "image_mute_radar"], [1237, 0, 1, "", "interpol_spectra"], [1238, 0, 1, "", "intersection"], [1239, 0, 1, "", "interval_mean"], [1240, 0, 1, "", "interval_std"], [1241, 0, 1, "", "is_vpt"], [1242, 0, 1, "", "ivic_flat_reg_var_max_table"], [1243, 0, 1, "", "ivic_flat_reg_wind_len_table"], [1244, 0, 1, "", "ivic_pct_table"], [1245, 0, 1, "", "ivic_snr_thr_table"], [1246, 0, 1, "", "join_radar"], [1247, 0, 1, "", "join_spectra"], [1248, 0, 1, "", "ma_broadcast_to"], [1249, 0, 1, "", "mean_of_two_angles"], [1250, 0, 1, "", "mean_of_two_angles_deg"], [1251, 0, 1, "", "radar_from_spectra"], [1252, 0, 1, "", "rolling_window"], [1253, 0, 1, "", "simulated_vel_from_profile"], [1254, 0, 1, "", "sphere_distance"], [1255, 0, 1, "", "subset_radar"], [1256, 0, 1, "", "subset_radar_spectra"], [1257, 0, 1, "", "texture"], [1258, 0, 1, "", "texture_along_ray"], [1259, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259], "aux_io": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583], "extract_sweeps_skyecho": [0, 538], "get_sweep_time_coverag": [1, 540], "read_bin": [2, 541], "read_bin_mf": [3, 542], "read_cartesian_metranet": [4, 543], "read_cf1": [5, 544], "read_cf1_cartesian": [6, 545], "read_cf1_cartesian_mf": [7, 546], "read_d3r_gcpex_nc": [8, 547], "read_dat_mf": [9, 548], "read_gam": [10, 552], "read_gif": [11, 553], "read_grib": [12, 554], "read_hpl": [13, 555], "read_iq": [14, 556], "read_kazr": [15, 557], "read_metranet": [16, 560], "read_noxp_iphex_nc": [17, 561], "read_odim_grid_h5": [18, 562], "read_odim_h5": [19, 563], "read_odim_vp_h5": [20, 564], "read_pattern": [21, 565], "read_png": [22, 566], "read_radx": [23, 572], "read_rainbow_psr": [24, 573], "read_rainbow_psr_spectra": [25, 574], "read_rainbow_wrl": [26, 575], "read_skyecho": [27, 577], "read_spectra": [28, 578], "read_swissbirdradar_spectra": [29, 579], "write_odim_grid_h5": [30, 580], "write_odim_h5": [31, 581], "write_spectra": [32, 583], "bridg": [33, 584, 585], "texture_of_complex_phas": [33, 532, 585, 1117], "config": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "filemetadata": [34, 35, 36, 37, 587, 588, 589, 590], "__call__": [35, 588], "get_field_nam": [36, 41, 589, 595], "get_metadata": [37, 43, 590, 597, 1191], "get_field_colormap": [38, 592], "get_field_limit": [39, 593], "get_field_map": [40, 594], "get_fillvalu": [42, 596], "load_config": [44, 598], "core": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680], "grid": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 790, 966, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1273, 1274, 1278, 1309], "add_field": [46, 60, 89, 601, 615, 644, 1122, 1134, 1163], "get_point_longitude_latitud": [47, 602, 1123], "get_projparam": [48, 603, 1124], "init_point_altitud": [49, 604, 1125], "init_point_longitude_latitud": [50, 605, 1126], "init_point_x_y_z": [51, 606, 1127], "projection_proj": [52, 607, 1128], "to_xarrai": [53, 608, 1129], "write": [54, 536, 609, 966, 1130], "horizontalwindprofil": [55, 56, 57, 58, 610, 611, 612, 613], "from_u_and_v": [56, 611], "u_wind": [57, 612], "v_wind": [58, 613], "radar": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 536, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 681, 753, 790, 966, 1026, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1272, 1273, 1274, 1296, 1306, 1314, 1317], "add_field_lik": [61, 90, 616, 645, 1135, 1164], "add_filt": [62, 91, 617, 646, 1136, 1165], "check_field_exist": [63, 92, 618, 647, 1137, 1166], "extract_sweep": [64, 93, 619, 648, 1138, 1167], "get_azimuth": [65, 94, 620, 649, 1139, 1168], "get_elev": [66, 95, 621, 650, 1140, 1169], "get_end": [67, 96, 622, 651, 1141, 1170], "get_field": [68, 97, 623, 652, 1142, 1171], "get_gate_area": [69, 98, 624, 653, 1143, 1172], "get_gate_lat_lon_alt": [70, 99, 625, 654, 1144, 1173], "get_gate_x_y_z": [71, 100, 626, 655, 1145, 1174], "get_nyquist_vel": [72, 101, 627, 656, 1146, 1175], "get_slic": [73, 102, 628, 657, 1147, 1176], "get_start": [74, 103, 629, 658, 1148, 1177], "get_start_end": [75, 104, 630, 659, 1149, 1178], "info": [76, 105, 631, 660, 1150, 1179], "init_gate_altitud": [77, 106, 632, 661, 1151, 1180], "init_gate_longitude_latitud": [78, 107, 633, 662, 1152, 1181], "init_gate_x_y_z": [79, 108, 634, 663, 1153, 1182], "init_rays_per_sweep": [80, 109, 635, 664, 1154, 1183], "iter_azimuth": [81, 110, 636, 665, 1155, 1184], "iter_elev": [82, 111, 637, 666, 1156, 1185], "iter_end": [83, 112, 638, 667, 1157, 1186], "iter_field": [84, 113, 639, 668, 1158, 1187], "iter_slic": [85, 114, 640, 669, 1159, 1188], "iter_start": [86, 115, 641, 670, 1160, 1189], "iter_start_end": [87, 116, 642, 671, 1161, 1190], "radarspectra": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190], "antenna_to_cartesian": [117, 672], "antenna_vectors_to_cartesian": [118, 673], "cartesian_to_antenna": [119, 674], "cartesian_to_geograph": [120, 675], "cartesian_to_geographic_aeqd": [121, 676], "cartesian_vectors_to_geograph": [122, 677], "geographic_to_cartesian": [123, 678], "geographic_to_cartesian_aeqd": [124, 679], "wgs84_to_swissch1903": [125, 680], "test": [125, 680, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1317], "exampl": [125, 680, 1262, 1266, 1267, 1271, 1276, 1295, 1298], "correct": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 1262, 1263, 1266, 1313], "calculate_attenu": [126, 710], "calculate_attenuation_philinear": [127, 711], "calculate_attenuation_zphi": [128, 712], "compute_apparent_vpr": [129, 713], "compute_theoretical_vpr": [130, 714], "correct_bia": [131, 715], "correct_noise_rhohv": [132, 716], "correct_sys_phas": [133, 717], "correct_vis": [134, 718], "correct_vpr": [135, 719], "correct_vpr_spatialis": [136, 720], "dealias_fourdd": [137, 721], "dealias_region_bas": [138, 722], "dealias_unwrap_phas": [139, 723], "despeckle_field": [140, 724], "det_sys_phase_rai": [141, 725], "est_rhohv_rain": [142, 726], "est_zdr_precip": [143, 727], "est_zdr_snow": [144, 728], "find_object": [145, 729], "get_mask_fzl": [146, 731], "get_sun_hit": [147, 732], "get_sun_hits_iv": [148, 733], "get_sun_hits_psr": [149, 734], "phase_proc_lp": [150, 736], "phase_proc_lp_gf": [151, 737], "ptoa_to_sf": [152, 738], "scanning_loss": [153, 740], "selfconsistency_bia": [154, 741], "selfconsistency_bias2": [155, 742], "selfconsistency_kdp_phidp": [156, 743], "smooth_mask": [157, 744], "smooth_phidp_double_window": [158, 745], "smooth_phidp_single_window": [159, 746], "solar_flux_lookup": [160, 747], "sun_position_mfr": [161, 748], "sun_position_pysolar": [162, 749], "sun_pow": [163, 750], "sun_retriev": [164, 751], "except": [165, 166, 167, 168, 752], "deprecatedattribut": 165, "deprecatedfunctionnam": 166, "missingoptionaldepend": 167, "_deprecated_alia": 168, "filter": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 1313], "gatefilt": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 1310], "copi": [170, 430, 683, 755, 992], "exclude_abov": [171, 684, 756], "exclude_al": [172, 685, 757], "exclude_below": [173, 686, 758], "exclude_equ": [174, 687, 759], "exclude_g": [175, 688, 760], "exclude_insid": [176, 689, 761], "exclude_invalid": [177, 690, 762], "exclude_mask": [178, 691, 763], "exclude_non": [179, 692, 764], "exclude_not_equ": [180, 693, 765], "exclude_outsid": [181, 694, 766], "exclude_transit": [182, 695, 767], "gate_exclud": [183, 696, 768], "gate_includ": [184, 697, 769], "include_abov": [185, 698, 770], "include_al": [186, 699, 771], "include_below": [187, 700, 772], "include_equ": [188, 701, 773], "include_g": [189, 702, 774], "include_insid": [190, 703, 775], "include_non": [191, 704, 776], "include_not_equ": [192, 705, 777], "include_not_mask": [193, 706, 778], "include_not_transit": [194, 707, 779], "include_outsid": [195, 708, 780], "include_valid": [196, 709, 781], "birds_gate_filt": [197, 782], "class_based_gate_filt": [198, 783], "iso0_based_gate_filt": [199, 784], "moment_and_texture_based_gate_filt": [200, 785], "moment_based_gate_filt": [201, 735, 786], "snr_based_gate_filt": [202, 787], "temp_based_gate_filt": [203, 788], "visibility_based_gate_filt": [204, 789], "graph": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965], "airborneradardisplai": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824], "generate_az_rhi_titl": [206, 273, 306, 343, 792, 859, 892, 929], "generate_filenam": [207, 243, 259, 274, 307, 344, 793, 829, 845, 860, 893, 930], "generate_ray_titl": [208, 275, 308, 345, 794, 861, 894, 931], "generate_titl": [209, 276, 309, 346, 795, 862, 895, 932], "generate_vpt_titl": [210, 277, 310, 347, 796, 863, 896, 933], "generate_xsection_titl": [211, 278, 311, 348, 797, 864, 897, 934], "label_xaxis_r": [212, 279, 312, 349, 798, 865, 898, 935], "label_xaxis_rai": [213, 280, 313, 350, 799, 866, 899, 936], "label_xaxis_tim": [214, 281, 314, 351, 800, 867, 900, 937], "label_xaxis_x": [215, 282, 315, 352, 801, 868, 901, 938], "label_xaxis_xsect": [216, 283, 316, 353, 802, 869, 902, 939], "label_yaxis_field": [217, 284, 317, 354, 803, 870, 903, 940], "label_yaxis_xsect": [218, 285, 318, 355, 804, 871, 904, 941], "label_yaxis_i": [219, 286, 319, 356, 805, 872, 905, 942], "label_yaxis_z": [220, 287, 320, 357, 806, 873, 906, 943], "plot": [221, 288, 321, 358, 790, 807, 874, 907, 944, 1266, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1297, 1299, 1300, 1312], "plot_azimuth_to_rhi": [222, 289, 322, 359, 808, 875, 908, 945], "plot_colorbar": [223, 247, 265, 290, 323, 360, 809, 833, 851, 876, 909, 946], "plot_cr_rast": [224, 291, 324, 361, 810, 877, 910, 947], "plot_cross_hair": [225, 292, 325, 362, 811, 878, 911, 948], "plot_grid_lin": [226, 293, 326, 363, 812, 879, 912, 949], "plot_label": [227, 228, 294, 295, 327, 328, 364, 365, 813, 814, 880, 881, 913, 914, 950, 951], "plot_ppi": [229, 296, 332, 369, 815, 882, 918, 955], "plot_range_r": [230, 231, 297, 298, 334, 335, 371, 372, 816, 817, 883, 884, 920, 921, 957, 958], "plot_rai": [232, 299, 336, 373, 818, 885, 922, 959], "plot_rhi": [233, 300, 337, 374, 819, 886, 923, 960], "plot_sweep_grid": [234, 820], "plot_vpt": [235, 301, 338, 375, 821, 887, 924, 961], "plot_xsect": [236, 302, 339, 376, 822, 888, 925, 962], "set_aspect_ratio": [237, 303, 340, 377, 823, 889, 926, 963], "set_limit": [238, 304, 341, 378, 824, 890, 927, 964], "gridmapdisplai": [239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 1292], "cartopy_coastlin": [240, 826], "cartopy_political_boundari": [241, 827], "cartopy_st": [242, 828], "generate_grid_titl": [244, 260, 830, 846], "generate_latitudinal_level_titl": [245, 261, 831, 847], "generate_longitudinal_level_titl": [246, 262, 832, 848], "plot_cross_sect": [248, 834], "plot_cross_section_level": [249, 835], "plot_crosshair": [250, 266, 836, 852], "plot_grid": [251, 267, 837, 853], "plot_grid_contour": [252, 838], "plot_grid_raw": [253, 839], "plot_latitude_slic": [254, 268, 840, 854], "plot_latitudinal_level": [255, 269, 841, 855], "plot_longitude_slic": [256, 270, 842, 856], "plot_longitudinal_level": [257, 271, 843, 857], "gridmapdisplaybasemap": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857], "get_basemap": [263, 849], "plot_basemap": [264, 850], "radardisplai": [272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890], "radarmapdisplai": [305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927], "plot_line_geo": [329, 366, 915, 952], "plot_line_xi": [330, 367, 916, 953], "plot_point": [331, 368, 917, 954], "plot_ppi_map": [333, 370, 919, 956], "radarmapdisplaybasemap": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964], "io": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988], "make_time_unit_str": [379, 967], "prepare_for_read": [380, 968], "read": [381, 536, 966, 969, 1268, 1269, 1311, 1312, 1313], "read_arm_sond": [382, 970], "read_arm_sonde_vap": [383, 971], "read_cfradi": [384, 972], "read_cfradial2": [385, 973], "read_chl": [386, 974], "read_grid": [387, 975], "read_grid_mdv": [388, 976], "read_mdv": [389, 977], "read_nexrad_arch": [390, 978], "read_nexrad_cdm": [391, 979], "read_nexrad_level3": [392, 980], "read_rsl": [393, 981], "read_sigmet": [394, 982], "read_uf": [395, 983], "write_cfradi": [396, 984], "write_grid": [397, 985], "write_grid_geotiff": [398, 986], "write_grid_mdv": [399, 987], "write_uf": [400, 988], "lazydict": [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012], "lazyloaddict": [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002], "__contains__": 402, "__delattr__": 403, "__delitem__": 404, "__dir__": 405, "__eq__": 406, "__format__": 407, "__ge__": 408, "__getattribute__": 409, "__getitem__": 410, "__getstate__": 411, "__gt__": 412, "__init__": 413, "__init_subclass__": 414, "__iter__": 415, "__le__": 416, "__len__": 417, "__lt__": 418, "__ne__": 419, "__new__": 420, "__reduce__": 421, "__reduce_ex__": 422, "__repr__": 423, "__setattr__": 424, "__setitem__": 425, "__sizeof__": 426, "__str__": 427, "__subclasshook__": 428, "clear": [429, 991, 1004], "get": [431, 993, 1005, 1303], "has_kei": [432, 994], "item": [433, 995, 1006], "kei": [434, 996, 1007], "pop": [435, 997, 1008], "popitem": [436, 998, 1009], "set_lazi": [437, 999], "setdefault": [438, 1000, 1010], "updat": [439, 1001, 1011], "valu": [440, 1002, 1012], "retriev": [441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1266, 1295, 1313], "_destandard": 441, "_get_res_vol_sid": 442, "atmospheric_gas_att": [443, 1027], "calculate_snr_from_reflect": [444, 1028], "calculate_velocity_textur": [445, 1029], "compute_doppler_veloc": [446, 1031], "compute_doppler_velocity_iq": [447, 1032], "compute_doppler_width": [448, 1033], "compute_doppler_width_iq": [449, 1034], "compute_apparent_profil": [450, 1035], "compute_bird_dens": [451, 1036], "compute_ccor": [452, 1037], "compute_cdr": [453, 1038], "compute_centroid": [454, 1039], "compute_differential_phas": [455, 1040], "compute_differential_phase_iq": [456, 1041], "compute_differential_reflect": [457, 1042], "compute_differential_reflectivity_iq": [458, 1043], "compute_evp": [459, 1044], "compute_iq": [460, 1045], "compute_l": [461, 1046], "compute_mean_phase_iq": [462, 1047], "compute_noise_pow": [463, 1048], "compute_noisedbz": [464, 1049], "compute_pol_vari": [465, 1050], "compute_pol_variables_iq": [466, 1051], "compute_qvp": [467, 1052], "compute_radial_noise_h": [468, 1053], "compute_radial_noise_iv": [469, 1054], "compute_rc": [470, 1055], "compute_rcs_from_pr": [471, 1056], "compute_reflect": [472, 1057], "compute_reflectivity_iq": [473, 1058], "compute_rhohv": [474, 1059], "compute_rhohv_iq": [475, 1060], "compute_rqvp": [476, 1061], "compute_signal_pow": [477, 1062], "compute_snr": [478, 1063], "compute_spectra": [479, 1064], "compute_spectral_differential_phas": [480, 1065], "compute_spectral_differential_reflect": [481, 1066], "compute_spectral_nois": [482, 1067], "compute_spectral_phas": [483, 1068], "compute_spectral_pow": [484, 1069], "compute_spectral_reflect": [485, 1070], "compute_spectral_rhohv": [486, 1071], "compute_st1_iq": [487, 1072], "compute_st2_iq": [488, 1073], "compute_svp": [489, 1074], "compute_ts_along_coord": [490, 1075], "compute_vol_refl": [491, 1076], "compute_vp": [492, 1077], "compute_wbn_iq": [493, 1078], "conv_strat_yut": [494, 1079], "data_for_centroid": [495, 1080], "dealias_spectra": [496, 1081], "detect_ml": [497, 1082], "paremet": [497, 1082], "determine_medoid": [498, 1083], "est_rain_rate_a": [499, 1084], "est_rain_rate_hydro": [500, 1085], "est_rain_rate_kdp": [501, 1086], "est_rain_rate_z": [502, 1087], "est_rain_rate_za": [503, 1088], "est_rain_rate_zkdp": [504, 1089], "est_rain_rate_zpoli": [505, 1090], "est_vertical_windshear": [506, 1091], "est_vertical_windshear_lidar": [507, 1092], "est_wind_profil": [508, 1093], "est_wind_vel": [509, 1094], "fetch_radar_time_profil": [510, 1095], "gecsx": [511, 1096], "get_coeff_attg": [512, 1097], "get_freq_band": [513, 1098], "get_iso0_v": [514, 1099], "get_ml_rng_limit": [515, 1100], "grid_displacement_pc": [516, 1101], "grid_shift": [517, 1102], "hydroclass_semisupervis": [518, 1103], "kdp_leastsquare_double_window": [519, 1104], "kdp_leastsquare_single_window": [520, 1105], "kdp_maesaka": [521, 1106], "kdp_schneeb": [522, 1107], "kdp_vulpiani": [523, 1108], "map_profile_to_g": [524, 1109], "melting_layer_giangrand": [525, 1110], "melting_layer_hydroclass": [526, 1111], "melting_layer_mf": [527, 1112], "quasi_vertical_profil": [528, 1113], "select_sampl": [529, 1114], "steiner_conv_strat": [530, 1115], "synthetic_obs_distribut": [531, 1116], "vad_brown": [533, 1118], "vad_michelson": [534, 1119], "_debug_info": 535, "auxiliari": 536, "input": [536, 966, 1266, 1267], "output": [536, 966, 1266, 1267], "data": [536, 753, 790, 966, 1268, 1269, 1309, 1310, 1311, 1312, 1313], "convert_data": 537, "get_librari": 539, "read_edge_netcdf": 549, "read_file_c": 550, "read_file_pi": 551, "read_knmi_grid_h5": 558, "read_mch_vad": 559, "read_product_c": 567, "read_product_pi": 568, "read_psr_cpi_head": 569, "read_psr_head": 570, "read_psr_spectra": 571, "read_sinarame_h5": 576, "write_sinarame_cfradi": 582, "other": [584, 681, 1311], "toolkit": [584, 1317], "phase": 584, "function": [584, 681], "get_k": 591, "class": 599, "coordin": 599, "transform": 599, "veloc": [681, 1264, 1307, 1312], "unfold": 681, "helper": 681, "gauss_fit": 730, "retrieval_result": 739, "plot_convstrat_schem": 965, "sond": 966, "special": 966, "us": [966, 1264, 1272, 1292], "mutablemap": [1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012], "map": [1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1266, 1271, 1273, 1274, 1285, 1309], "gatemapp": [1014, 1015, 1016, 1017, 1272], "distance_toler": 1015, "mapped_radar": 1016, "time_toler": 1017, "example_roi_func_const": 1018, "example_roi_func_dist": 1019, "example_roi_func_dist_beam": 1020, "grid_from_radar": 1021, "grid_ppi_sweep": 1022, "grid_rhi_sweep": 1023, "map_gates_to_grid": 1024, "map_to_grid": 1025, "composite_reflect": 1030, "intemporarydirectori": [1131, 1132], "cleanup": 1132, "get_test_data": 1192, "make_empty_grid": 1193, "make_empty_ppi_radar": 1194, "make_empty_rhi_radar": 1195, "make_empty_spectra_radar": 1196, "make_normal_storm": 1197, "make_single_ray_radar": 1198, "make_storm_grid": 1199, "make_target_grid": 1200, "make_target_radar": 1201, "make_target_spectra_radar": 1202, "make_velocity_aliased_radar": 1203, "make_velocity_aliased_rhi_radar": 1204, "util": [1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259], "angular_mean": 1206, "angular_mean_deg": 1207, "angular_std": 1208, "angular_std_deg": 1209, "angular_texture_2d": 1210, "colocated_g": 1211, "colocated_gates2": 1212, "compute_azimuthal_averag": 1213, "compute_corr": 1214, "compute_directional_stat": 1215, "compute_ms": 1216, "compute_ns": 1217, "cross_section_ppi": 1218, "cross_section_rhi": 1219, "datetime_from_dataset": 1220, "datetime_from_grid": 1221, "datetime_from_radar": 1222, "datetimes_from_dataset": 1223, "datetimes_from_radar": 1224, "estimate_noise_hs74": 1225, "estimate_noise_ivic13": 1226, "find_neighbour_g": 1227, "for_azimuth": 1228, "assumpt": [1228, 1254], "get_column_rai": 1229, "get_field_loc": 1230, "get_ivic_flat_reg_var_max": 1231, "get_ivic_pct": 1232, "get_ivic_snr_thr": 1233, "get_target_elev": 1234, "grid_texture_2d": 1235, "image_mute_radar": 1236, "interpol_spectra": 1237, "intersect": 1238, "interval_mean": 1239, "interval_std": 1240, "is_vpt": 1241, "ivic_flat_reg_var_max_t": 1242, "ivic_flat_reg_wind_len_t": 1243, "ivic_pct_t": 1244, "ivic_snr_thr_t": 1245, "join_radar": 1246, "join_spectra": 1247, "ma_broadcast_to": 1248, "mean_of_two_angl": 1249, "mean_of_two_angles_deg": 1250, "radar_from_spectra": 1251, "rolling_window": 1252, "simulated_vel_from_profil": 1253, "sphere_dist": 1254, "paramet": 1254, "subset_radar": 1255, "subset_radar_spectra": 1256, "textur": 1257, "texture_along_rai": 1258, "to_vpt": 1259, "api": 1260, "manual": 1260, "changelog": 1261, "v1": 1261, "9": 1261, "2": [1261, 1268, 1269], "0": 1261, "8": 1261, "7": 1261, "6": 1261, "5": 1261, "4": 1261, "3": [1261, 1268, 1292], "1": 1261, "new": 1261, "addit": 1261, "moment": [1262, 1266, 1281], "reflect": [1263, 1280, 1282, 1288, 1289, 1297], "attenu": [1263, 1313], "dealia": 1264, "doppler": [1264, 1312], "region": 1264, "base": 1264, "algorithm": [1264, 1298], "comput": [1265, 1270, 1275, 1294, 1301, 1302, 1315], "time": [1265, 1270, 1275, 1294, 1301, 1302, 1315], "galleri": [1266, 1304], "nexrad": [1268, 1269, 1281, 1282], "from": [1268, 1278, 1281, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1293, 1312, 1316], "aw": 1268, "cloud": 1268, "level": [1268, 1269], "older": 1269, "fix": 1269, "latitud": 1269, "longitud": 1269, "issu": 1269, "compar": 1272, "two": [1272, 1274, 1291], "singl": 1273, "cartesian": [1273, 1274, 1309, 1311], "choos": 1277, "colormap": 1277, "your": [1277, 1279], "cross": [1278, 1293], "section": [1278, 1293], "modifi": 1279, "colorbar": 1279, "creat": [1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1305, 1319], "an": [1280, 1288, 1289, 1319], "imag": 1280, "mute": 1280, "multipl": [1281, 1286, 1287], "file": [1281, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1305, 1306, 1311, 1317], "ppi": [1283, 1284, 1285, 1293], "cfradial": 1283, "mdv": [1284, 1288, 1289, 1290], "cartopi": 1285, "panel": [1286, 1287, 1291, 1292], "rhi": [1286, 1287, 1288, 1289, 1290, 1291], "cf": [1286, 1287], "radial": [1286, 1287], "contour": [1288, 1289], "line": [1288, 1289], "volum": 1293, "extract": 1296, "column": 1296, "abov": 1296, "point": 1296, "calcul": [1297, 1299, 1300], "composit": 1297, "convect": 1298, "stratiform": 1298, "classif": [1298, 1299, 1313], "how": 1298, "work": 1298, "summari": 1298, "recommend": 1298, "best": 1298, "practic": 1298, "refer": 1298, "hydrometeor": [1299, 1313], "vad": [1300, 1312], "profil": 1300, "about": 1303, "meteoswiss": [1303, 1311], "fork": 1303, "py": [1303, 1310, 1311, 1314, 1317], "art": [1303, 1310, 1311, 1314, 1317], "cite": [1303, 1317], "what": 1303, "can": 1303, "do": 1303, "short": 1303, "cours": 1303, "instal": [1303, 1316, 1317], "depend": [1303, 1316, 1319], "option": [1303, 1316, 1319], "help": 1303, "contribut": 1303, "notebook": 1304, "basic": 1305, "ingest": 1305, "netcdf": 1305, "field": 1306, "manipul": 1306, "save": 1306, "object": [1306, 1314], "dealias": [1307, 1312], "mask": 1310, "With": 1310, "metranet": 1311, "polar": 1311, "low": 1311, "re": 1311, "mlx": 1311, "high": 1311, "mhx": 1311, "product": 1311, "process": 1312, "wind": 1312, "swiss": [1312, 1313], "volumetr": 1312, "scan": 1312, "cappi": 1312, "azimuth": 1312, "displai": 1312, "raw": 1313, "c": 1313, "band": 1313, "ground": 1313, "clutter": 1313, "nois": 1313, "remov": 1313, "kdp": 1313, "estim": 1313, "qpe": 1313, "The": [1314, 1317], "index": 1314, "requir": 1316, "obtain": 1316, "latest": 1316, "sourc": 1316, "frequent": 1316, "ask": 1316, "question": 1316, "contributor": 1317, "": 1317, "guid": [1317, 1318], "python": 1317, "arm": 1317, "import": 1317, "link": 1317, "resourc": 1317, "code": 1317, "style": 1317, "setup": 1317, "github": 1317, "blog": 1317, "post": 1317, "user": 1318, "set": 1319, "up": 1319, "environ": 1319, "anaconda": 1319, "channel": 1319, "ad": 1319, "path": 1319, "more": 1319, "inform": 1319}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart.aux_io.extract_sweeps_skyecho": [[0, "pyart-aux-io-extract-sweeps-skyecho"], [538, "pyart-aux-io-extract-sweeps-skyecho"]], "pyart.aux_io.get_sweep_time_coverage": [[1, "pyart-aux-io-get-sweep-time-coverage"], [540, "pyart-aux-io-get-sweep-time-coverage"]], "pyart.aux_io.read_bin": [[2, "pyart-aux-io-read-bin"], [541, "pyart-aux-io-read-bin"]], "pyart.aux_io.read_bin_mf": [[3, "pyart-aux-io-read-bin-mf"], [542, "pyart-aux-io-read-bin-mf"]], "pyart.aux_io.read_cartesian_metranet": [[4, "pyart-aux-io-read-cartesian-metranet"], [543, "pyart-aux-io-read-cartesian-metranet"]], "pyart.aux_io.read_cf1": [[5, "pyart-aux-io-read-cf1"], [544, "pyart-aux-io-read-cf1"]], "pyart.aux_io.read_cf1_cartesian": [[6, "pyart-aux-io-read-cf1-cartesian"], [545, "pyart-aux-io-read-cf1-cartesian"]], "pyart.aux_io.read_cf1_cartesian_mf": [[7, "pyart-aux-io-read-cf1-cartesian-mf"], [546, "pyart-aux-io-read-cf1-cartesian-mf"]], "pyart.aux_io.read_d3r_gcpex_nc": [[8, "pyart-aux-io-read-d3r-gcpex-nc"], [547, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_dat_mf": [[9, "pyart-aux-io-read-dat-mf"], [548, "pyart-aux-io-read-dat-mf"]], "pyart.aux_io.read_gamic": [[10, "pyart-aux-io-read-gamic"], [552, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_gif": [[11, "pyart-aux-io-read-gif"], [553, "pyart-aux-io-read-gif"]], "pyart.aux_io.read_grib": [[12, "pyart-aux-io-read-grib"], [554, "pyart-aux-io-read-grib"]], "pyart.aux_io.read_hpl": [[13, "pyart-aux-io-read-hpl"], [555, "pyart-aux-io-read-hpl"]], "pyart.aux_io.read_iq": [[14, "pyart-aux-io-read-iq"], [556, "pyart-aux-io-read-iq"]], "pyart.aux_io.read_kazr": [[15, "pyart-aux-io-read-kazr"], [557, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_metranet": [[16, "pyart-aux-io-read-metranet"], [560, "pyart-aux-io-read-metranet"]], "pyart.aux_io.read_noxp_iphex_nc": [[17, "pyart-aux-io-read-noxp-iphex-nc"], [561, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_grid_h5": [[18, "pyart-aux-io-read-odim-grid-h5"], [562, "pyart-aux-io-read-odim-grid-h5"]], "pyart.aux_io.read_odim_h5": [[19, "pyart-aux-io-read-odim-h5"], [563, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_odim_vp_h5": [[20, "pyart-aux-io-read-odim-vp-h5"], [564, "pyart-aux-io-read-odim-vp-h5"]], "pyart.aux_io.read_pattern": [[21, "pyart-aux-io-read-pattern"], [565, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_png": [[22, "pyart-aux-io-read-png"], [566, "pyart-aux-io-read-png"]], "pyart.aux_io.read_radx": [[23, "pyart-aux-io-read-radx"], [572, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_rainbow_psr": [[24, "pyart-aux-io-read-rainbow-psr"], [573, "pyart-aux-io-read-rainbow-psr"]], "pyart.aux_io.read_rainbow_psr_spectra": [[25, "pyart-aux-io-read-rainbow-psr-spectra"], [574, "pyart-aux-io-read-rainbow-psr-spectra"]], "pyart.aux_io.read_rainbow_wrl": [[26, "pyart-aux-io-read-rainbow-wrl"], [575, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_skyecho": [[27, "pyart-aux-io-read-skyecho"], [577, "pyart-aux-io-read-skyecho"]], "pyart.aux_io.read_spectra": [[28, "pyart-aux-io-read-spectra"], [578, "pyart-aux-io-read-spectra"]], "pyart.aux_io.read_swissbirdradar_spectra": [[29, "pyart-aux-io-read-swissbirdradar-spectra"], [579, "pyart-aux-io-read-swissbirdradar-spectra"]], "pyart.aux_io.write_odim_grid_h5": [[30, "pyart-aux-io-write-odim-grid-h5"], [580, "pyart-aux-io-write-odim-grid-h5"]], "pyart.aux_io.write_odim_h5": [[31, "pyart-aux-io-write-odim-h5"], [581, "pyart-aux-io-write-odim-h5"]], "pyart.aux_io.write_spectra": [[32, "pyart-aux-io-write-spectra"], [583, "pyart-aux-io-write-spectra"]], "pyart.bridge.texture_of_complex_phase": [[33, "pyart-bridge-texture-of-complex-phase"], [585, "pyart-bridge-texture-of-complex-phase"]], "pyart.config.FileMetadata": [[34, "pyart-config-filemetadata"], [587, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[35, "pyart-config-filemetadata-call"], [588, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[36, "pyart-config-filemetadata-get-field-name"], [589, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[37, "pyart-config-filemetadata-get-metadata"], [590, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[38, "pyart-config-get-field-colormap"], [592, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[39, "pyart-config-get-field-limits"], [593, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[40, "pyart-config-get-field-mapping"], [594, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[41, "pyart-config-get-field-name"], [595, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[42, "pyart-config-get-fillvalue"], [596, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[43, "pyart-config-get-metadata"], [597, "pyart-config-get-metadata"]], "pyart.config.load_config": [[44, "pyart-config-load-config"], [598, "pyart-config-load-config"]], "pyart.core.Grid": [[45, "pyart-core-grid"], [600, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[46, "pyart-core-grid-add-field"], [601, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[47, "pyart-core-grid-get-point-longitude-latitude"], [602, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[48, "pyart-core-grid-get-projparams"], [603, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[49, "pyart-core-grid-init-point-altitude"], [604, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[50, "pyart-core-grid-init-point-longitude-latitude"], [605, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[51, "pyart-core-grid-init-point-x-y-z"], [606, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[52, "pyart-core-grid-projection-proj"], [607, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[53, "pyart-core-grid-to-xarray"], [608, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[54, "pyart-core-grid-write"], [609, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[55, "pyart-core-horizontalwindprofile"], [610, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[56, "pyart-core-horizontalwindprofile-from-u-and-v"], [611, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[57, "pyart-core-horizontalwindprofile-u-wind"], [612, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[58, "pyart-core-horizontalwindprofile-v-wind"], [613, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[59, "pyart-core-radar"], [614, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[60, "pyart-core-radar-add-field"], [615, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[61, "pyart-core-radar-add-field-like"], [616, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[62, "pyart-core-radar-add-filter"], [617, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[63, "pyart-core-radar-check-field-exists"], [618, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[64, "pyart-core-radar-extract-sweeps"], [619, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[65, "pyart-core-radar-get-azimuth"], [620, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[66, "pyart-core-radar-get-elevation"], [621, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[67, "pyart-core-radar-get-end"], [622, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[68, "pyart-core-radar-get-field"], [623, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[69, "pyart-core-radar-get-gate-area"], [624, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[70, "pyart-core-radar-get-gate-lat-lon-alt"], [625, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[71, "pyart-core-radar-get-gate-x-y-z"], [626, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[72, "pyart-core-radar-get-nyquist-vel"], [627, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[73, "pyart-core-radar-get-slice"], [628, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[74, "pyart-core-radar-get-start"], [629, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[75, "pyart-core-radar-get-start-end"], [630, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[76, "pyart-core-radar-info"], [631, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[77, "pyart-core-radar-init-gate-altitude"], [632, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[78, "pyart-core-radar-init-gate-longitude-latitude"], [633, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[79, "pyart-core-radar-init-gate-x-y-z"], [634, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[80, "pyart-core-radar-init-rays-per-sweep"], [635, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[81, "pyart-core-radar-iter-azimuth"], [636, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[82, "pyart-core-radar-iter-elevation"], [637, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[83, "pyart-core-radar-iter-end"], [638, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[84, "pyart-core-radar-iter-field"], [639, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[85, "pyart-core-radar-iter-slice"], [640, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[86, "pyart-core-radar-iter-start"], [641, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[87, "pyart-core-radar-iter-start-end"], [642, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[88, "pyart-core-radarspectra"], [643, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.add_field": [[89, "pyart-core-radarspectra-add-field"], [644, "pyart-core-radarspectra-add-field"]], "pyart.core.RadarSpectra.add_field_like": [[90, "pyart-core-radarspectra-add-field-like"], [645, "pyart-core-radarspectra-add-field-like"]], "pyart.core.RadarSpectra.add_filter": [[91, "pyart-core-radarspectra-add-filter"], [646, "pyart-core-radarspectra-add-filter"]], "pyart.core.RadarSpectra.check_field_exists": [[92, "pyart-core-radarspectra-check-field-exists"], [647, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.extract_sweeps": [[93, "pyart-core-radarspectra-extract-sweeps"], [648, "pyart-core-radarspectra-extract-sweeps"]], "pyart.core.RadarSpectra.get_azimuth": [[94, "pyart-core-radarspectra-get-azimuth"], [649, "pyart-core-radarspectra-get-azimuth"]], "pyart.core.RadarSpectra.get_elevation": [[95, "pyart-core-radarspectra-get-elevation"], [650, "pyart-core-radarspectra-get-elevation"]], "pyart.core.RadarSpectra.get_end": [[96, "pyart-core-radarspectra-get-end"], [651, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_field": [[97, "pyart-core-radarspectra-get-field"], [652, "pyart-core-radarspectra-get-field"]], "pyart.core.RadarSpectra.get_gate_area": [[98, "pyart-core-radarspectra-get-gate-area"], [653, "pyart-core-radarspectra-get-gate-area"]], "pyart.core.RadarSpectra.get_gate_lat_lon_alt": [[99, "pyart-core-radarspectra-get-gate-lat-lon-alt"], [654, "pyart-core-radarspectra-get-gate-lat-lon-alt"]], "pyart.core.RadarSpectra.get_gate_x_y_z": [[100, "pyart-core-radarspectra-get-gate-x-y-z"], [655, "pyart-core-radarspectra-get-gate-x-y-z"]], "pyart.core.RadarSpectra.get_nyquist_vel": [[101, "pyart-core-radarspectra-get-nyquist-vel"], [656, "pyart-core-radarspectra-get-nyquist-vel"]], "pyart.core.RadarSpectra.get_slice": [[102, "pyart-core-radarspectra-get-slice"], [657, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[103, "pyart-core-radarspectra-get-start"], [658, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[104, "pyart-core-radarspectra-get-start-end"], [659, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.info": [[105, "pyart-core-radarspectra-info"], [660, "pyart-core-radarspectra-info"]], "pyart.core.RadarSpectra.init_gate_altitude": [[106, "pyart-core-radarspectra-init-gate-altitude"], [661, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[107, "pyart-core-radarspectra-init-gate-longitude-latitude"], [662, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[108, "pyart-core-radarspectra-init-gate-x-y-z"], [663, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[109, "pyart-core-radarspectra-init-rays-per-sweep"], [664, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[110, "pyart-core-radarspectra-iter-azimuth"], [665, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[111, "pyart-core-radarspectra-iter-elevation"], [666, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[112, "pyart-core-radarspectra-iter-end"], [667, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[113, "pyart-core-radarspectra-iter-field"], [668, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[114, "pyart-core-radarspectra-iter-slice"], [669, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[115, "pyart-core-radarspectra-iter-start"], [670, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[116, "pyart-core-radarspectra-iter-start-end"], [671, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.antenna_to_cartesian": [[117, "pyart-core-antenna-to-cartesian"], [672, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[118, "pyart-core-antenna-vectors-to-cartesian"], [673, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[119, "pyart-core-cartesian-to-antenna"], [674, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[120, "pyart-core-cartesian-to-geographic"], [675, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[121, "pyart-core-cartesian-to-geographic-aeqd"], [676, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[122, "pyart-core-cartesian-vectors-to-geographic"], [677, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[123, "pyart-core-geographic-to-cartesian"], [678, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[124, "pyart-core-geographic-to-cartesian-aeqd"], [679, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.core.wgs84_to_swissCH1903": [[125, "pyart-core-wgs84-to-swissch1903"], [680, "pyart-core-wgs84-to-swissch1903"]], "Test example": [[125, "test-example"], [680, "test-example"]], "pyart.correct.calculate_attenuation": [[126, "pyart-correct-calculate-attenuation"], [710, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[127, "pyart-correct-calculate-attenuation-philinear"], [711, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[128, "pyart-correct-calculate-attenuation-zphi"], [712, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.compute_apparent_vpr": [[129, "pyart-correct-compute-apparent-vpr"], [713, "pyart-correct-compute-apparent-vpr"]], "pyart.correct.compute_theoretical_vpr": [[130, "pyart-correct-compute-theoretical-vpr"], [714, "pyart-correct-compute-theoretical-vpr"]], "pyart.correct.correct_bias": [[131, "pyart-correct-correct-bias"], [715, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[132, "pyart-correct-correct-noise-rhohv"], [716, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.correct_sys_phase": [[133, "pyart-correct-correct-sys-phase"], [717, "pyart-correct-correct-sys-phase"]], "pyart.correct.correct_visibility": [[134, "pyart-correct-correct-visibility"], [718, "pyart-correct-correct-visibility"]], "pyart.correct.correct_vpr": [[135, "pyart-correct-correct-vpr"], [719, "pyart-correct-correct-vpr"]], "pyart.correct.correct_vpr_spatialised": [[136, "pyart-correct-correct-vpr-spatialised"], [720, "pyart-correct-correct-vpr-spatialised"]], "pyart.correct.dealias_fourdd": [[137, "pyart-correct-dealias-fourdd"], [721, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[138, "pyart-correct-dealias-region-based"], [722, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[139, "pyart-correct-dealias-unwrap-phase"], [723, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[140, "pyart-correct-despeckle-field"], [724, "pyart-correct-despeckle-field"]], "pyart.correct.det_sys_phase_ray": [[141, "pyart-correct-det-sys-phase-ray"], [725, "pyart-correct-det-sys-phase-ray"]], "pyart.correct.est_rhohv_rain": [[142, "pyart-correct-est-rhohv-rain"], [726, "pyart-correct-est-rhohv-rain"]], "pyart.correct.est_zdr_precip": [[143, "pyart-correct-est-zdr-precip"], [727, "pyart-correct-est-zdr-precip"]], "pyart.correct.est_zdr_snow": [[144, "pyart-correct-est-zdr-snow"], [728, "pyart-correct-est-zdr-snow"]], "pyart.correct.find_objects": [[145, "pyart-correct-find-objects"], [729, "pyart-correct-find-objects"]], "pyart.correct.get_mask_fzl": [[146, "pyart-correct-get-mask-fzl"], [731, "pyart-correct-get-mask-fzl"]], "pyart.correct.get_sun_hits": [[147, "pyart-correct-get-sun-hits"], [732, "pyart-correct-get-sun-hits"]], "pyart.correct.get_sun_hits_ivic": [[148, "pyart-correct-get-sun-hits-ivic"], [733, "pyart-correct-get-sun-hits-ivic"]], "pyart.correct.get_sun_hits_psr": [[149, "pyart-correct-get-sun-hits-psr"], [734, "pyart-correct-get-sun-hits-psr"]], "pyart.correct.phase_proc_lp": [[150, "pyart-correct-phase-proc-lp"], [736, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[151, "pyart-correct-phase-proc-lp-gf"], [737, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.ptoa_to_sf": [[152, "pyart-correct-ptoa-to-sf"], [738, "pyart-correct-ptoa-to-sf"]], "pyart.correct.scanning_losses": [[153, "pyart-correct-scanning-losses"], [740, "pyart-correct-scanning-losses"]], "pyart.correct.selfconsistency_bias": [[154, "pyart-correct-selfconsistency-bias"], [741, "pyart-correct-selfconsistency-bias"]], "pyart.correct.selfconsistency_bias2": [[155, "pyart-correct-selfconsistency-bias2"], [742, "pyart-correct-selfconsistency-bias2"]], "pyart.correct.selfconsistency_kdp_phidp": [[156, "pyart-correct-selfconsistency-kdp-phidp"], [743, "pyart-correct-selfconsistency-kdp-phidp"]], "pyart.correct.smooth_masked": [[157, "pyart-correct-smooth-masked"], [744, "pyart-correct-smooth-masked"]], "pyart.correct.smooth_phidp_double_window": [[158, "pyart-correct-smooth-phidp-double-window"], [745, "pyart-correct-smooth-phidp-double-window"]], "pyart.correct.smooth_phidp_single_window": [[159, "pyart-correct-smooth-phidp-single-window"], [746, "pyart-correct-smooth-phidp-single-window"]], "pyart.correct.solar_flux_lookup": [[160, "pyart-correct-solar-flux-lookup"], [747, "pyart-correct-solar-flux-lookup"]], "pyart.correct.sun_position_mfr": [[161, "pyart-correct-sun-position-mfr"], [748, "pyart-correct-sun-position-mfr"]], "pyart.correct.sun_position_pysolar": [[162, "pyart-correct-sun-position-pysolar"], [749, "pyart-correct-sun-position-pysolar"]], "pyart.correct.sun_power": [[163, "pyart-correct-sun-power"], [750, "pyart-correct-sun-power"]], "pyart.correct.sun_retrieval": [[164, "pyart-correct-sun-retrieval"], [751, "pyart-correct-sun-retrieval"]], "pyart.exceptions.DeprecatedAttribute": [[165, "pyart-exceptions-deprecatedattribute"]], "pyart.exceptions.DeprecatedFunctionName": [[166, "pyart-exceptions-deprecatedfunctionname"]], "pyart.exceptions.MissingOptionalDependency": [[167, "pyart-exceptions-missingoptionaldependency"]], "pyart.exceptions._deprecated_alias": [[168, "pyart-exceptions-deprecated-alias"]], "pyart.filters.GateFilter": [[169, "pyart-filters-gatefilter"], [754, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[170, "pyart-filters-gatefilter-copy"], [755, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[171, "pyart-filters-gatefilter-exclude-above"], [756, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[172, "pyart-filters-gatefilter-exclude-all"], [757, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[173, "pyart-filters-gatefilter-exclude-below"], [758, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[174, "pyart-filters-gatefilter-exclude-equal"], [759, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[175, "pyart-filters-gatefilter-exclude-gates"], [760, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[176, "pyart-filters-gatefilter-exclude-inside"], [761, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[177, "pyart-filters-gatefilter-exclude-invalid"], [762, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[178, "pyart-filters-gatefilter-exclude-masked"], [763, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[179, "pyart-filters-gatefilter-exclude-none"], [764, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[180, "pyart-filters-gatefilter-exclude-not-equal"], [765, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[181, "pyart-filters-gatefilter-exclude-outside"], [766, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[182, "pyart-filters-gatefilter-exclude-transition"], [767, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[183, "pyart-filters-gatefilter-gate-excluded"], [768, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[184, "pyart-filters-gatefilter-gate-included"], [769, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[185, "pyart-filters-gatefilter-include-above"], [770, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[186, "pyart-filters-gatefilter-include-all"], [771, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[187, "pyart-filters-gatefilter-include-below"], [772, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[188, "pyart-filters-gatefilter-include-equal"], [773, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[189, "pyart-filters-gatefilter-include-gates"], [774, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[190, "pyart-filters-gatefilter-include-inside"], [775, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[191, "pyart-filters-gatefilter-include-none"], [776, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[192, "pyart-filters-gatefilter-include-not-equal"], [777, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[193, "pyart-filters-gatefilter-include-not-masked"], [778, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[194, "pyart-filters-gatefilter-include-not-transition"], [779, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[195, "pyart-filters-gatefilter-include-outside"], [780, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[196, "pyart-filters-gatefilter-include-valid"], [781, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.birds_gate_filter": [[197, "pyart-filters-birds-gate-filter"], [782, "pyart-filters-birds-gate-filter"]], "pyart.filters.class_based_gate_filter": [[198, "pyart-filters-class-based-gate-filter"], [783, "pyart-filters-class-based-gate-filter"]], "pyart.filters.iso0_based_gate_filter": [[199, "pyart-filters-iso0-based-gate-filter"], [784, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[200, "pyart-filters-moment-and-texture-based-gate-filter"], [785, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[201, "pyart-filters-moment-based-gate-filter"], [786, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.snr_based_gate_filter": [[202, "pyart-filters-snr-based-gate-filter"], [787, "pyart-filters-snr-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[203, "pyart-filters-temp-based-gate-filter"], [788, "pyart-filters-temp-based-gate-filter"]], "pyart.filters.visibility_based_gate_filter": [[204, "pyart-filters-visibility-based-gate-filter"], [789, "pyart-filters-visibility-based-gate-filter"]], "pyart.graph.AirborneRadarDisplay": [[205, "pyart-graph-airborneradardisplay"], [791, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[206, "pyart-graph-airborneradardisplay-generate-az-rhi-title"], [792, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[207, "pyart-graph-airborneradardisplay-generate-filename"], [793, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[208, "pyart-graph-airborneradardisplay-generate-ray-title"], [794, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[209, "pyart-graph-airborneradardisplay-generate-title"], [795, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[210, "pyart-graph-airborneradardisplay-generate-vpt-title"], [796, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.generate_xsection_title": [[211, "pyart-graph-airborneradardisplay-generate-xsection-title"], [797, "pyart-graph-airborneradardisplay-generate-xsection-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[212, "pyart-graph-airborneradardisplay-label-xaxis-r"], [798, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[213, "pyart-graph-airborneradardisplay-label-xaxis-rays"], [799, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[214, "pyart-graph-airborneradardisplay-label-xaxis-time"], [800, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[215, "pyart-graph-airborneradardisplay-label-xaxis-x"], [801, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection": [[216, "pyart-graph-airborneradardisplay-label-xaxis-xsection"], [802, "pyart-graph-airborneradardisplay-label-xaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[217, "pyart-graph-airborneradardisplay-label-yaxis-field"], [803, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection": [[218, "pyart-graph-airborneradardisplay-label-yaxis-xsection"], [804, "pyart-graph-airborneradardisplay-label-yaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[219, "pyart-graph-airborneradardisplay-label-yaxis-y"], [805, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[220, "pyart-graph-airborneradardisplay-label-yaxis-z"], [806, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[221, "pyart-graph-airborneradardisplay-plot"], [807, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[222, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"], [808, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[223, "pyart-graph-airborneradardisplay-plot-colorbar"], [809, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[224, "pyart-graph-airborneradardisplay-plot-cr-raster"], [810, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[225, "pyart-graph-airborneradardisplay-plot-cross-hair"], [811, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[226, "pyart-graph-airborneradardisplay-plot-grid-lines"], [812, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[227, "pyart-graph-airborneradardisplay-plot-label"], [813, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[228, "pyart-graph-airborneradardisplay-plot-labels"], [814, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[229, "pyart-graph-airborneradardisplay-plot-ppi"], [815, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[230, "pyart-graph-airborneradardisplay-plot-range-ring"], [816, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[231, "pyart-graph-airborneradardisplay-plot-range-rings"], [817, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[232, "pyart-graph-airborneradardisplay-plot-ray"], [818, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[233, "pyart-graph-airborneradardisplay-plot-rhi"], [819, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[234, "pyart-graph-airborneradardisplay-plot-sweep-grid"], [820, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[235, "pyart-graph-airborneradardisplay-plot-vpt"], [821, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.plot_xsection": [[236, "pyart-graph-airborneradardisplay-plot-xsection"], [822, "pyart-graph-airborneradardisplay-plot-xsection"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[237, "pyart-graph-airborneradardisplay-set-aspect-ratio"], [823, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[238, "pyart-graph-airborneradardisplay-set-limits"], [824, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[239, "pyart-graph-gridmapdisplay"], [825, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[240, "pyart-graph-gridmapdisplay-cartopy-coastlines"], [826, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[241, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"], [827, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[242, "pyart-graph-gridmapdisplay-cartopy-states"], [828, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[243, "pyart-graph-gridmapdisplay-generate-filename"], [829, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[244, "pyart-graph-gridmapdisplay-generate-grid-title"], [830, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[245, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"], [831, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[246, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"], [832, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[247, "pyart-graph-gridmapdisplay-plot-colorbar"], [833, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[248, "pyart-graph-gridmapdisplay-plot-cross-section"], [834, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_cross_section_level": [[249, "pyart-graph-gridmapdisplay-plot-cross-section-level"], [835, "pyart-graph-gridmapdisplay-plot-cross-section-level"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[250, "pyart-graph-gridmapdisplay-plot-crosshairs"], [836, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[251, "pyart-graph-gridmapdisplay-plot-grid"], [837, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_grid_contour": [[252, "pyart-graph-gridmapdisplay-plot-grid-contour"], [838, "pyart-graph-gridmapdisplay-plot-grid-contour"]], "pyart.graph.GridMapDisplay.plot_grid_raw": [[253, "pyart-graph-gridmapdisplay-plot-grid-raw"], [839, "pyart-graph-gridmapdisplay-plot-grid-raw"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[254, "pyart-graph-gridmapdisplay-plot-latitude-slice"], [840, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[255, "pyart-graph-gridmapdisplay-plot-latitudinal-level"], [841, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[256, "pyart-graph-gridmapdisplay-plot-longitude-slice"], [842, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[257, "pyart-graph-gridmapdisplay-plot-longitudinal-level"], [843, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[258, "pyart-graph-gridmapdisplaybasemap"], [844, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[259, "pyart-graph-gridmapdisplaybasemap-generate-filename"], [845, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[260, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"], [846, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[261, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"], [847, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[262, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"], [848, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[263, "pyart-graph-gridmapdisplaybasemap-get-basemap"], [849, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[264, "pyart-graph-gridmapdisplaybasemap-plot-basemap"], [850, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[265, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"], [851, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[266, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"], [852, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[267, "pyart-graph-gridmapdisplaybasemap-plot-grid"], [853, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[268, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"], [854, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[269, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"], [855, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[270, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"], [856, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[271, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"], [857, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[272, "pyart-graph-radardisplay"], [858, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[273, "pyart-graph-radardisplay-generate-az-rhi-title"], [859, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[274, "pyart-graph-radardisplay-generate-filename"], [860, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[275, "pyart-graph-radardisplay-generate-ray-title"], [861, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[276, "pyart-graph-radardisplay-generate-title"], [862, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[277, "pyart-graph-radardisplay-generate-vpt-title"], [863, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.generate_xsection_title": [[278, "pyart-graph-radardisplay-generate-xsection-title"], [864, "pyart-graph-radardisplay-generate-xsection-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[279, "pyart-graph-radardisplay-label-xaxis-r"], [865, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[280, "pyart-graph-radardisplay-label-xaxis-rays"], [866, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[281, "pyart-graph-radardisplay-label-xaxis-time"], [867, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[282, "pyart-graph-radardisplay-label-xaxis-x"], [868, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_xaxis_xsection": [[283, "pyart-graph-radardisplay-label-xaxis-xsection"], [869, "pyart-graph-radardisplay-label-xaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[284, "pyart-graph-radardisplay-label-yaxis-field"], [870, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_xsection": [[285, "pyart-graph-radardisplay-label-yaxis-xsection"], [871, "pyart-graph-radardisplay-label-yaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[286, "pyart-graph-radardisplay-label-yaxis-y"], [872, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[287, "pyart-graph-radardisplay-label-yaxis-z"], [873, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[288, "pyart-graph-radardisplay-plot"], [874, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[289, "pyart-graph-radardisplay-plot-azimuth-to-rhi"], [875, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[290, "pyart-graph-radardisplay-plot-colorbar"], [876, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[291, "pyart-graph-radardisplay-plot-cr-raster"], [877, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[292, "pyart-graph-radardisplay-plot-cross-hair"], [878, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[293, "pyart-graph-radardisplay-plot-grid-lines"], [879, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[294, "pyart-graph-radardisplay-plot-label"], [880, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[295, "pyart-graph-radardisplay-plot-labels"], [881, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[296, "pyart-graph-radardisplay-plot-ppi"], [882, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[297, "pyart-graph-radardisplay-plot-range-ring"], [883, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[298, "pyart-graph-radardisplay-plot-range-rings"], [884, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[299, "pyart-graph-radardisplay-plot-ray"], [885, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[300, "pyart-graph-radardisplay-plot-rhi"], [886, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[301, "pyart-graph-radardisplay-plot-vpt"], [887, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.plot_xsection": [[302, "pyart-graph-radardisplay-plot-xsection"], [888, "pyart-graph-radardisplay-plot-xsection"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[303, "pyart-graph-radardisplay-set-aspect-ratio"], [889, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[304, "pyart-graph-radardisplay-set-limits"], [890, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[305, "pyart-graph-radarmapdisplay"], [891, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[306, "pyart-graph-radarmapdisplay-generate-az-rhi-title"], [892, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[307, "pyart-graph-radarmapdisplay-generate-filename"], [893, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[308, "pyart-graph-radarmapdisplay-generate-ray-title"], [894, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[309, "pyart-graph-radarmapdisplay-generate-title"], [895, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[310, "pyart-graph-radarmapdisplay-generate-vpt-title"], [896, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.generate_xsection_title": [[311, "pyart-graph-radarmapdisplay-generate-xsection-title"], [897, "pyart-graph-radarmapdisplay-generate-xsection-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[312, "pyart-graph-radarmapdisplay-label-xaxis-r"], [898, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[313, "pyart-graph-radarmapdisplay-label-xaxis-rays"], [899, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[314, "pyart-graph-radarmapdisplay-label-xaxis-time"], [900, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[315, "pyart-graph-radarmapdisplay-label-xaxis-x"], [901, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_xaxis_xsection": [[316, "pyart-graph-radarmapdisplay-label-xaxis-xsection"], [902, "pyart-graph-radarmapdisplay-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[317, "pyart-graph-radarmapdisplay-label-yaxis-field"], [903, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_xsection": [[318, "pyart-graph-radarmapdisplay-label-yaxis-xsection"], [904, "pyart-graph-radarmapdisplay-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[319, "pyart-graph-radarmapdisplay-label-yaxis-y"], [905, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[320, "pyart-graph-radarmapdisplay-label-yaxis-z"], [906, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[321, "pyart-graph-radarmapdisplay-plot"], [907, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[322, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"], [908, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[323, "pyart-graph-radarmapdisplay-plot-colorbar"], [909, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[324, "pyart-graph-radarmapdisplay-plot-cr-raster"], [910, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[325, "pyart-graph-radarmapdisplay-plot-cross-hair"], [911, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[326, "pyart-graph-radarmapdisplay-plot-grid-lines"], [912, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[327, "pyart-graph-radarmapdisplay-plot-label"], [913, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[328, "pyart-graph-radarmapdisplay-plot-labels"], [914, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[329, "pyart-graph-radarmapdisplay-plot-line-geo"], [915, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[330, "pyart-graph-radarmapdisplay-plot-line-xy"], [916, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[331, "pyart-graph-radarmapdisplay-plot-point"], [917, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[332, "pyart-graph-radarmapdisplay-plot-ppi"], [918, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[333, "pyart-graph-radarmapdisplay-plot-ppi-map"], [919, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[334, "pyart-graph-radarmapdisplay-plot-range-ring"], [920, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[335, "pyart-graph-radarmapdisplay-plot-range-rings"], [921, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[336, "pyart-graph-radarmapdisplay-plot-ray"], [922, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[337, "pyart-graph-radarmapdisplay-plot-rhi"], [923, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[338, "pyart-graph-radarmapdisplay-plot-vpt"], [924, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.plot_xsection": [[339, "pyart-graph-radarmapdisplay-plot-xsection"], [925, "pyart-graph-radarmapdisplay-plot-xsection"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[340, "pyart-graph-radarmapdisplay-set-aspect-ratio"], [926, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[341, "pyart-graph-radarmapdisplay-set-limits"], [927, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[342, "pyart-graph-radarmapdisplaybasemap"], [928, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[343, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"], [929, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[344, "pyart-graph-radarmapdisplaybasemap-generate-filename"], [930, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[345, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"], [931, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[346, "pyart-graph-radarmapdisplaybasemap-generate-title"], [932, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[347, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"], [933, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title": [[348, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"], [934, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[349, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"], [935, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[350, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"], [936, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[351, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"], [937, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[352, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"], [938, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection": [[353, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"], [939, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[354, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"], [940, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection": [[355, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"], [941, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[356, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"], [942, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[357, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"], [943, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[358, "pyart-graph-radarmapdisplaybasemap-plot"], [944, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[359, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"], [945, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[360, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"], [946, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[361, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"], [947, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[362, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"], [948, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[363, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"], [949, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[364, "pyart-graph-radarmapdisplaybasemap-plot-label"], [950, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[365, "pyart-graph-radarmapdisplaybasemap-plot-labels"], [951, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[366, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"], [952, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[367, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"], [953, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[368, "pyart-graph-radarmapdisplaybasemap-plot-point"], [954, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[369, "pyart-graph-radarmapdisplaybasemap-plot-ppi"], [955, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[370, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"], [956, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[371, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"], [957, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[372, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"], [958, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[373, "pyart-graph-radarmapdisplaybasemap-plot-ray"], [959, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[374, "pyart-graph-radarmapdisplaybasemap-plot-rhi"], [960, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[375, "pyart-graph-radarmapdisplaybasemap-plot-vpt"], [961, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.plot_xsection": [[376, "pyart-graph-radarmapdisplaybasemap-plot-xsection"], [962, "pyart-graph-radarmapdisplaybasemap-plot-xsection"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[377, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"], [963, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[378, "pyart-graph-radarmapdisplaybasemap-set-limits"], [964, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.io.make_time_unit_str": [[379, "pyart-io-make-time-unit-str"], [967, "pyart-io-make-time-unit-str"]], "pyart.io.prepare_for_read": [[380, "pyart-io-prepare-for-read"], [968, "pyart-io-prepare-for-read"]], "pyart.io.read": [[381, "pyart-io-read"], [969, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[382, "pyart-io-read-arm-sonde"], [970, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[383, "pyart-io-read-arm-sonde-vap"], [971, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[384, "pyart-io-read-cfradial"], [972, "pyart-io-read-cfradial"]], "pyart.io.read_cfradial2": [[385, "pyart-io-read-cfradial2"], [973, "pyart-io-read-cfradial2"]], "pyart.io.read_chl": [[386, "pyart-io-read-chl"], [974, "pyart-io-read-chl"]], "pyart.io.read_grid": [[387, "pyart-io-read-grid"], [975, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[388, "pyart-io-read-grid-mdv"], [976, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[389, "pyart-io-read-mdv"], [977, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[390, "pyart-io-read-nexrad-archive"], [978, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[391, "pyart-io-read-nexrad-cdm"], [979, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[392, "pyart-io-read-nexrad-level3"], [980, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[393, "pyart-io-read-rsl"], [981, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[394, "pyart-io-read-sigmet"], [982, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[395, "pyart-io-read-uf"], [983, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[396, "pyart-io-write-cfradial"], [984, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[397, "pyart-io-write-grid"], [985, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[398, "pyart-io-write-grid-geotiff"], [986, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[399, "pyart-io-write-grid-mdv"], [987, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[400, "pyart-io-write-uf"], [988, "pyart-io-write-uf"]], "pyart.lazydict.LazyLoadDict": [[401, "pyart-lazydict-lazyloaddict"], [990, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.__contains__": [[402, "pyart-lazydict-lazyloaddict-contains"]], "pyart.lazydict.LazyLoadDict.__delattr__": [[403, "pyart-lazydict-lazyloaddict-delattr"]], "pyart.lazydict.LazyLoadDict.__delitem__": [[404, "pyart-lazydict-lazyloaddict-delitem"]], "pyart.lazydict.LazyLoadDict.__dir__": [[405, "pyart-lazydict-lazyloaddict-dir"]], "pyart.lazydict.LazyLoadDict.__eq__": [[406, "pyart-lazydict-lazyloaddict-eq"]], "pyart.lazydict.LazyLoadDict.__format__": [[407, "pyart-lazydict-lazyloaddict-format"]], "pyart.lazydict.LazyLoadDict.__ge__": [[408, "pyart-lazydict-lazyloaddict-ge"]], "pyart.lazydict.LazyLoadDict.__getattribute__": [[409, "pyart-lazydict-lazyloaddict-getattribute"]], "pyart.lazydict.LazyLoadDict.__getitem__": [[410, "pyart-lazydict-lazyloaddict-getitem"]], "pyart.lazydict.LazyLoadDict.__getstate__": [[411, "pyart-lazydict-lazyloaddict-getstate"]], "pyart.lazydict.LazyLoadDict.__gt__": [[412, "pyart-lazydict-lazyloaddict-gt"]], "pyart.lazydict.LazyLoadDict.__init__": [[413, "pyart-lazydict-lazyloaddict-init"]], "pyart.lazydict.LazyLoadDict.__init_subclass__": [[414, "pyart-lazydict-lazyloaddict-init-subclass"]], "pyart.lazydict.LazyLoadDict.__iter__": [[415, "pyart-lazydict-lazyloaddict-iter"]], "pyart.lazydict.LazyLoadDict.__le__": [[416, "pyart-lazydict-lazyloaddict-le"]], "pyart.lazydict.LazyLoadDict.__len__": [[417, "pyart-lazydict-lazyloaddict-len"]], "pyart.lazydict.LazyLoadDict.__lt__": [[418, "pyart-lazydict-lazyloaddict-lt"]], "pyart.lazydict.LazyLoadDict.__ne__": [[419, "pyart-lazydict-lazyloaddict-ne"]], "pyart.lazydict.LazyLoadDict.__new__": [[420, "pyart-lazydict-lazyloaddict-new"]], "pyart.lazydict.LazyLoadDict.__reduce__": [[421, "pyart-lazydict-lazyloaddict-reduce"]], "pyart.lazydict.LazyLoadDict.__reduce_ex__": [[422, "pyart-lazydict-lazyloaddict-reduce-ex"]], "pyart.lazydict.LazyLoadDict.__repr__": [[423, "pyart-lazydict-lazyloaddict-repr"]], "pyart.lazydict.LazyLoadDict.__setattr__": [[424, "pyart-lazydict-lazyloaddict-setattr"]], "pyart.lazydict.LazyLoadDict.__setitem__": [[425, "pyart-lazydict-lazyloaddict-setitem"]], "pyart.lazydict.LazyLoadDict.__sizeof__": [[426, "pyart-lazydict-lazyloaddict-sizeof"]], "pyart.lazydict.LazyLoadDict.__str__": [[427, "pyart-lazydict-lazyloaddict-str"]], "pyart.lazydict.LazyLoadDict.__subclasshook__": [[428, "pyart-lazydict-lazyloaddict-subclasshook"]], "pyart.lazydict.LazyLoadDict.clear": [[429, "pyart-lazydict-lazyloaddict-clear"], [991, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[430, "pyart-lazydict-lazyloaddict-copy"], [992, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[431, "pyart-lazydict-lazyloaddict-get"], [993, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[432, "pyart-lazydict-lazyloaddict-has-key"], [994, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[433, "pyart-lazydict-lazyloaddict-items"], [995, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[434, "pyart-lazydict-lazyloaddict-keys"], [996, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[435, "pyart-lazydict-lazyloaddict-pop"], [997, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[436, "pyart-lazydict-lazyloaddict-popitem"], [998, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[437, "pyart-lazydict-lazyloaddict-set-lazy"], [999, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[438, "pyart-lazydict-lazyloaddict-setdefault"], [1000, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[439, "pyart-lazydict-lazyloaddict-update"], [1001, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[440, "pyart-lazydict-lazyloaddict-values"], [1002, "pyart-lazydict-lazyloaddict-values"]], "pyart.retrieve._destandardize": [[441, "pyart-retrieve-destandardize"]], "pyart.retrieve._get_res_vol_sides": [[442, "pyart-retrieve-get-res-vol-sides"]], "pyart.retrieve.atmospheric_gas_att": [[443, "pyart-retrieve-atmospheric-gas-att"], [1027, "pyart-retrieve-atmospheric-gas-att"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[444, "pyart-retrieve-calculate-snr-from-reflectivity"], [1028, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[445, "pyart-retrieve-calculate-velocity-texture"], [1029, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.compute_Doppler_velocity": [[446, "pyart-retrieve-compute-doppler-velocity"], [1031, "pyart-retrieve-compute-doppler-velocity"]], "pyart.retrieve.compute_Doppler_velocity_iq": [[447, "pyart-retrieve-compute-doppler-velocity-iq"], [1032, "pyart-retrieve-compute-doppler-velocity-iq"]], "pyart.retrieve.compute_Doppler_width": [[448, "pyart-retrieve-compute-doppler-width"], [1033, "pyart-retrieve-compute-doppler-width"]], "pyart.retrieve.compute_Doppler_width_iq": [[449, "pyart-retrieve-compute-doppler-width-iq"], [1034, "pyart-retrieve-compute-doppler-width-iq"]], "pyart.retrieve.compute_apparent_profile": [[450, "pyart-retrieve-compute-apparent-profile"], [1035, "pyart-retrieve-compute-apparent-profile"]], "pyart.retrieve.compute_bird_density": [[451, "pyart-retrieve-compute-bird-density"], [1036, "pyart-retrieve-compute-bird-density"]], "pyart.retrieve.compute_ccor": [[452, "pyart-retrieve-compute-ccor"], [1037, "pyart-retrieve-compute-ccor"]], "pyart.retrieve.compute_cdr": [[453, "pyart-retrieve-compute-cdr"], [1038, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_centroids": [[454, "pyart-retrieve-compute-centroids"], [1039, "pyart-retrieve-compute-centroids"]], "pyart.retrieve.compute_differential_phase": [[455, "pyart-retrieve-compute-differential-phase"], [1040, "pyart-retrieve-compute-differential-phase"]], "pyart.retrieve.compute_differential_phase_iq": [[456, "pyart-retrieve-compute-differential-phase-iq"], [1041, "pyart-retrieve-compute-differential-phase-iq"]], "pyart.retrieve.compute_differential_reflectivity": [[457, "pyart-retrieve-compute-differential-reflectivity"], [1042, "pyart-retrieve-compute-differential-reflectivity"]], "pyart.retrieve.compute_differential_reflectivity_iq": [[458, "pyart-retrieve-compute-differential-reflectivity-iq"], [1043, "pyart-retrieve-compute-differential-reflectivity-iq"]], "pyart.retrieve.compute_evp": [[459, "pyart-retrieve-compute-evp"], [1044, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_iq": [[460, "pyart-retrieve-compute-iq"], [1045, "pyart-retrieve-compute-iq"]], "pyart.retrieve.compute_l": [[461, "pyart-retrieve-compute-l"], [1046, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_mean_phase_iq": [[462, "pyart-retrieve-compute-mean-phase-iq"], [1047, "pyart-retrieve-compute-mean-phase-iq"]], "pyart.retrieve.compute_noise_power": [[463, "pyart-retrieve-compute-noise-power"], [1048, "pyart-retrieve-compute-noise-power"]], "pyart.retrieve.compute_noisedBZ": [[464, "pyart-retrieve-compute-noisedbz"], [1049, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_pol_variables": [[465, "pyart-retrieve-compute-pol-variables"], [1050, "pyart-retrieve-compute-pol-variables"]], "pyart.retrieve.compute_pol_variables_iq": [[466, "pyart-retrieve-compute-pol-variables-iq"], [1051, "pyart-retrieve-compute-pol-variables-iq"]], "pyart.retrieve.compute_qvp": [[467, "pyart-retrieve-compute-qvp"], [1052, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_radial_noise_hs": [[468, "pyart-retrieve-compute-radial-noise-hs"], [1053, "pyart-retrieve-compute-radial-noise-hs"]], "pyart.retrieve.compute_radial_noise_ivic": [[469, "pyart-retrieve-compute-radial-noise-ivic"], [1054, "pyart-retrieve-compute-radial-noise-ivic"]], "pyart.retrieve.compute_rcs": [[470, "pyart-retrieve-compute-rcs"], [1055, "pyart-retrieve-compute-rcs"]], "pyart.retrieve.compute_rcs_from_pr": [[471, "pyart-retrieve-compute-rcs-from-pr"], [1056, "pyart-retrieve-compute-rcs-from-pr"]], "pyart.retrieve.compute_reflectivity": [[472, "pyart-retrieve-compute-reflectivity"], [1057, "pyart-retrieve-compute-reflectivity"]], "pyart.retrieve.compute_reflectivity_iq": [[473, "pyart-retrieve-compute-reflectivity-iq"], [1058, "pyart-retrieve-compute-reflectivity-iq"]], "pyart.retrieve.compute_rhohv": [[474, "pyart-retrieve-compute-rhohv"], [1059, "pyart-retrieve-compute-rhohv"]], "pyart.retrieve.compute_rhohv_iq": [[475, "pyart-retrieve-compute-rhohv-iq"], [1060, "pyart-retrieve-compute-rhohv-iq"]], "pyart.retrieve.compute_rqvp": [[476, "pyart-retrieve-compute-rqvp"], [1061, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_signal_power": [[477, "pyart-retrieve-compute-signal-power"], [1062, "pyart-retrieve-compute-signal-power"]], "pyart.retrieve.compute_snr": [[478, "pyart-retrieve-compute-snr"], [1063, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_spectra": [[479, "pyart-retrieve-compute-spectra"], [1064, "pyart-retrieve-compute-spectra"]], "pyart.retrieve.compute_spectral_differential_phase": [[480, "pyart-retrieve-compute-spectral-differential-phase"], [1065, "pyart-retrieve-compute-spectral-differential-phase"]], "pyart.retrieve.compute_spectral_differential_reflectivity": [[481, "pyart-retrieve-compute-spectral-differential-reflectivity"], [1066, "pyart-retrieve-compute-spectral-differential-reflectivity"]], "pyart.retrieve.compute_spectral_noise": [[482, "pyart-retrieve-compute-spectral-noise"], [1067, "pyart-retrieve-compute-spectral-noise"]], "pyart.retrieve.compute_spectral_phase": [[483, "pyart-retrieve-compute-spectral-phase"], [1068, "pyart-retrieve-compute-spectral-phase"]], "pyart.retrieve.compute_spectral_power": [[484, "pyart-retrieve-compute-spectral-power"], [1069, "pyart-retrieve-compute-spectral-power"]], "pyart.retrieve.compute_spectral_reflectivity": [[485, "pyart-retrieve-compute-spectral-reflectivity"], [1070, "pyart-retrieve-compute-spectral-reflectivity"]], "pyart.retrieve.compute_spectral_rhohv": [[486, "pyart-retrieve-compute-spectral-rhohv"], [1071, "pyart-retrieve-compute-spectral-rhohv"]], "pyart.retrieve.compute_st1_iq": [[487, "pyart-retrieve-compute-st1-iq"], [1072, "pyart-retrieve-compute-st1-iq"]], "pyart.retrieve.compute_st2_iq": [[488, "pyart-retrieve-compute-st2-iq"], [1073, "pyart-retrieve-compute-st2-iq"]], "pyart.retrieve.compute_svp": [[489, "pyart-retrieve-compute-svp"], [1074, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[490, "pyart-retrieve-compute-ts-along-coord"], [1075, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vol_refl": [[491, "pyart-retrieve-compute-vol-refl"], [1076, "pyart-retrieve-compute-vol-refl"]], "pyart.retrieve.compute_vp": [[492, "pyart-retrieve-compute-vp"], [1077, "pyart-retrieve-compute-vp"]], "pyart.retrieve.compute_wbn_iq": [[493, "pyart-retrieve-compute-wbn-iq"], [1078, "pyart-retrieve-compute-wbn-iq"]], "pyart.retrieve.conv_strat_yuter": [[494, "pyart-retrieve-conv-strat-yuter"], [1079, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.data_for_centroids": [[495, "pyart-retrieve-data-for-centroids"], [1080, "pyart-retrieve-data-for-centroids"]], "pyart.retrieve.dealias_spectra": [[496, "pyart-retrieve-dealias-spectra"], [1081, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.detect_ml": [[497, "pyart-retrieve-detect-ml"], [1082, "pyart-retrieve-detect-ml"]], "Paremeters": [[497, "paremeters"], [1082, "paremeters"]], "pyart.retrieve.determine_medoids": [[498, "pyart-retrieve-determine-medoids"], [1083, "pyart-retrieve-determine-medoids"]], "pyart.retrieve.est_rain_rate_a": [[499, "pyart-retrieve-est-rain-rate-a"], [1084, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[500, "pyart-retrieve-est-rain-rate-hydro"], [1085, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[501, "pyart-retrieve-est-rain-rate-kdp"], [1086, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[502, "pyart-retrieve-est-rain-rate-z"], [1087, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[503, "pyart-retrieve-est-rain-rate-za"], [1088, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[504, "pyart-retrieve-est-rain-rate-zkdp"], [1089, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[505, "pyart-retrieve-est-rain-rate-zpoly"], [1090, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.est_vertical_windshear": [[506, "pyart-retrieve-est-vertical-windshear"], [1091, "pyart-retrieve-est-vertical-windshear"]], "pyart.retrieve.est_vertical_windshear_lidar": [[507, "pyart-retrieve-est-vertical-windshear-lidar"], [1092, "pyart-retrieve-est-vertical-windshear-lidar"]], "pyart.retrieve.est_wind_profile": [[508, "pyart-retrieve-est-wind-profile"], [1093, "pyart-retrieve-est-wind-profile"]], "pyart.retrieve.est_wind_vel": [[509, "pyart-retrieve-est-wind-vel"], [1094, "pyart-retrieve-est-wind-vel"]], "pyart.retrieve.fetch_radar_time_profile": [[510, "pyart-retrieve-fetch-radar-time-profile"], [1095, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.gecsx": [[511, "pyart-retrieve-gecsx"], [1096, "pyart-retrieve-gecsx"]], "pyart.retrieve.get_coeff_attg": [[512, "pyart-retrieve-get-coeff-attg"], [1097, "pyart-retrieve-get-coeff-attg"]], "pyart.retrieve.get_freq_band": [[513, "pyart-retrieve-get-freq-band"], [1098, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.get_iso0_val": [[514, "pyart-retrieve-get-iso0-val"], [1099, "pyart-retrieve-get-iso0-val"]], "pyart.retrieve.get_ml_rng_limits": [[515, "pyart-retrieve-get-ml-rng-limits"], [1100, "pyart-retrieve-get-ml-rng-limits"]], "pyart.retrieve.grid_displacement_pc": [[516, "pyart-retrieve-grid-displacement-pc"], [1101, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[517, "pyart-retrieve-grid-shift"], [1102, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[518, "pyart-retrieve-hydroclass-semisupervised"], [1103, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_leastsquare_double_window": [[519, "pyart-retrieve-kdp-leastsquare-double-window"], [1104, "pyart-retrieve-kdp-leastsquare-double-window"]], "pyart.retrieve.kdp_leastsquare_single_window": [[520, "pyart-retrieve-kdp-leastsquare-single-window"], [1105, "pyart-retrieve-kdp-leastsquare-single-window"]], "pyart.retrieve.kdp_maesaka": [[521, "pyart-retrieve-kdp-maesaka"], [1106, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[522, "pyart-retrieve-kdp-schneebeli"], [1107, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[523, "pyart-retrieve-kdp-vulpiani"], [1108, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[524, "pyart-retrieve-map-profile-to-gates"], [1109, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.melting_layer_giangrande": [[525, "pyart-retrieve-melting-layer-giangrande"], [1110, "pyart-retrieve-melting-layer-giangrande"]], "pyart.retrieve.melting_layer_hydroclass": [[526, "pyart-retrieve-melting-layer-hydroclass"], [1111, "pyart-retrieve-melting-layer-hydroclass"]], "pyart.retrieve.melting_layer_mf": [[527, "pyart-retrieve-melting-layer-mf"], [1112, "pyart-retrieve-melting-layer-mf"]], "pyart.retrieve.quasi_vertical_profile": [[528, "pyart-retrieve-quasi-vertical-profile"], [1113, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.select_samples": [[529, "pyart-retrieve-select-samples"], [1114, "pyart-retrieve-select-samples"]], "pyart.retrieve.steiner_conv_strat": [[530, "pyart-retrieve-steiner-conv-strat"], [1115, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.synthetic_obs_distribution": [[531, "pyart-retrieve-synthetic-obs-distribution"], [1116, "pyart-retrieve-synthetic-obs-distribution"]], "pyart.retrieve.texture_of_complex_phase": [[532, "pyart-retrieve-texture-of-complex-phase"], [1117, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[533, "pyart-retrieve-vad-browning"], [1118, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[534, "pyart-retrieve-vad-michelson"], [1119, "pyart-retrieve-vad-michelson"]], "pyart._debug_info": [[535, "pyart-debug-info"]], "pyart.aux_io": [[536, "pyart-aux-io"]], "Auxiliary input and output (pyart.aux_io)": [[536, "auxiliary-input-and-output-pyart-aux-io"]], "Reading radar data": [[536, "reading-radar-data"], [966, "reading-radar-data"]], "Writing radar data": [[536, "writing-radar-data"], [966, "writing-radar-data"]], "pyart.aux_io.convert_data": [[537, "pyart-aux-io-convert-data"]], "pyart.aux_io.get_library": [[539, "pyart-aux-io-get-library"]], "pyart.aux_io.read_edge_netcdf": [[549, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_file_c": [[550, "pyart-aux-io-read-file-c"]], "pyart.aux_io.read_file_py": [[551, "pyart-aux-io-read-file-py"]], "pyart.aux_io.read_knmi_grid_h5": [[558, "pyart-aux-io-read-knmi-grid-h5"]], "pyart.aux_io.read_mch_vad": [[559, "pyart-aux-io-read-mch-vad"]], "pyart.aux_io.read_product_c": [[567, "pyart-aux-io-read-product-c"]], "pyart.aux_io.read_product_py": [[568, "pyart-aux-io-read-product-py"]], "pyart.aux_io.read_psr_cpi_header": [[569, "pyart-aux-io-read-psr-cpi-header"]], "pyart.aux_io.read_psr_header": [[570, "pyart-aux-io-read-psr-header"]], "pyart.aux_io.read_psr_spectra": [[571, "pyart-aux-io-read-psr-spectra"]], "pyart.aux_io.read_sinarame_h5": [[576, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[582, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[584, "pyart-bridge"]], "Bridging to other toolkits (pyart.bridge)": [[584, "bridging-to-other-toolkits-pyart-bridge"]], "Phase functions": [[584, "phase-functions"]], "pyart.config": [[586, "pyart-config"], [586, "id1"]], "pyart.config.get_KE": [[591, "pyart-config-get-ke"]], "pyart.core": [[599, "pyart-core"]], "Core (pyart.core)": [[599, "core-pyart-core"]], "Core classes": [[599, "core-classes"]], "Coordinate transformations": [[599, "coordinate-transformations"]], "pyart.correct": [[681, "pyart-correct"]], "Radar Corrections (pyart.correct)": [[681, "radar-corrections-pyart-correct"]], "Velocity unfolding": [[681, "velocity-unfolding"]], "Other corrections": [[681, "other-corrections"]], "Helper functions": [[681, "helper-functions"]], "pyart.correct.GateFilter": [[682, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[683, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[684, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[685, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[686, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[687, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[688, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[689, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[690, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[691, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[692, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[693, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[694, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[695, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[696, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[697, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[698, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[699, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[700, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[701, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[702, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[703, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[704, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[705, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[706, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[707, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[708, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[709, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.gauss_fit": [[730, "pyart-correct-gauss-fit"]], "pyart.correct.moment_based_gate_filter": [[735, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.retrieval_result": [[739, "pyart-correct-retrieval-result"]], "pyart.exceptions": [[752, "pyart-exceptions"], [752, "id1"]], "pyart.filters": [[753, "pyart-filters"]], "Filters (pyart.filters)": [[753, "filters-pyart-filters"]], "Filtering radar data": [[753, "filtering-radar-data"]], "pyart.graph": [[790, "pyart-graph"]], "Graphing (pyart.graph)": [[790, "graphing-pyart-graph"]], "Plotting radar data": [[790, "plotting-radar-data"]], "Plotting grid data": [[790, "plotting-grid-data"]], "pyart.graph.plot_convstrat_scheme": [[965, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[966, "pyart-io"]], "Input and output (pyart.io)": [[966, "input-and-output-pyart-io"]], "Reading grid data": [[966, "reading-grid-data"]], "Writing grid data": [[966, "writing-grid-data"]], "Reading Sonde data": [[966, "reading-sonde-data"]], "Special use": [[966, "special-use"]], "pyart.lazydict": [[989, "pyart-lazydict"], [989, "id1"]], "pyart.lazydict.MutableMapping": [[1003, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[1004, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[1005, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[1006, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[1007, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[1008, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[1009, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[1010, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[1011, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[1012, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[1013, "pyart-map"]], "pyart.map.GateMapper": [[1014, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[1015, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[1016, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[1017, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[1018, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[1019, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[1020, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[1021, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[1022, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[1023, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[1024, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[1025, "pyart-map-map-to-grid"]], "pyart.retrieve": [[1026, "pyart-retrieve"]], "Radar Retrievals (pyart.retrieve)": [[1026, "radar-retrievals-pyart-retrieve"]], "Radar retrievals": [[1026, "radar-retrievals"]], "pyart.retrieve.composite_reflectivity": [[1030, "pyart-retrieve-composite-reflectivity"]], "pyart.testing": [[1120, "pyart-testing"]], "pyart.testing.Grid": [[1121, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[1122, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[1123, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[1124, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[1125, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[1126, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[1127, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[1128, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[1129, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[1130, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[1131, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[1132, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[1133, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[1134, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[1135, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[1136, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[1137, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[1138, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[1139, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[1140, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[1141, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[1142, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[1143, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[1144, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[1145, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[1146, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[1147, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[1148, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[1149, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[1150, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[1151, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[1152, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[1153, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[1154, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[1155, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[1156, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[1157, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[1158, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[1159, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[1160, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[1161, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[1162, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.add_field": [[1163, "pyart-testing-radarspectra-add-field"]], "pyart.testing.RadarSpectra.add_field_like": [[1164, "pyart-testing-radarspectra-add-field-like"]], "pyart.testing.RadarSpectra.add_filter": [[1165, "pyart-testing-radarspectra-add-filter"]], "pyart.testing.RadarSpectra.check_field_exists": [[1166, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.extract_sweeps": [[1167, "pyart-testing-radarspectra-extract-sweeps"]], "pyart.testing.RadarSpectra.get_azimuth": [[1168, "pyart-testing-radarspectra-get-azimuth"]], "pyart.testing.RadarSpectra.get_elevation": [[1169, "pyart-testing-radarspectra-get-elevation"]], "pyart.testing.RadarSpectra.get_end": [[1170, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_field": [[1171, "pyart-testing-radarspectra-get-field"]], "pyart.testing.RadarSpectra.get_gate_area": [[1172, "pyart-testing-radarspectra-get-gate-area"]], "pyart.testing.RadarSpectra.get_gate_lat_lon_alt": [[1173, "pyart-testing-radarspectra-get-gate-lat-lon-alt"]], "pyart.testing.RadarSpectra.get_gate_x_y_z": [[1174, "pyart-testing-radarspectra-get-gate-x-y-z"]], "pyart.testing.RadarSpectra.get_nyquist_vel": [[1175, "pyart-testing-radarspectra-get-nyquist-vel"]], "pyart.testing.RadarSpectra.get_slice": [[1176, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[1177, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[1178, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.info": [[1179, "pyart-testing-radarspectra-info"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[1180, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[1181, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[1182, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[1183, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[1184, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[1185, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[1186, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[1187, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[1188, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[1189, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[1190, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.get_metadata": [[1191, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[1192, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[1193, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[1194, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[1195, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[1196, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_normal_storm": [[1197, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[1198, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[1199, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[1200, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[1201, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[1202, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[1203, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[1204, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[1205, "pyart-util"]], "pyart.util.angular_mean": [[1206, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[1207, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[1208, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[1209, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[1210, "pyart-util-angular-texture-2d"]], "pyart.util.colocated_gates": [[1211, "pyart-util-colocated-gates"]], "pyart.util.colocated_gates2": [[1212, "pyart-util-colocated-gates2"]], "pyart.util.compute_azimuthal_average": [[1213, "pyart-util-compute-azimuthal-average"]], "pyart.util.compute_corr": [[1214, "pyart-util-compute-corr"]], "pyart.util.compute_directional_stats": [[1215, "pyart-util-compute-directional-stats"]], "pyart.util.compute_mse": [[1216, "pyart-util-compute-mse"]], "pyart.util.compute_nse": [[1217, "pyart-util-compute-nse"]], "pyart.util.cross_section_ppi": [[1218, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[1219, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[1220, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[1221, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[1222, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[1223, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[1224, "pyart-util-datetimes-from-radar"]], "pyart.util.estimate_noise_hs74": [[1225, "pyart-util-estimate-noise-hs74"]], "pyart.util.estimate_noise_ivic13": [[1226, "pyart-util-estimate-noise-ivic13"]], "pyart.util.find_neighbour_gates": [[1227, "pyart-util-find-neighbour-gates"]], "pyart.util.for_azimuth": [[1228, "pyart-util-for-azimuth"]], "Assumptions": [[1228, "assumptions"], [1254, "assumptions"]], "pyart.util.get_column_rays": [[1229, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[1230, "pyart-util-get-field-location"]], "pyart.util.get_ivic_flat_reg_var_max": [[1231, "pyart-util-get-ivic-flat-reg-var-max"]], "pyart.util.get_ivic_pct": [[1232, "pyart-util-get-ivic-pct"]], "pyart.util.get_ivic_snr_thr": [[1233, "pyart-util-get-ivic-snr-thr"]], "pyart.util.get_target_elevations": [[1234, "pyart-util-get-target-elevations"]], "pyart.util.grid_texture_2d": [[1235, "pyart-util-grid-texture-2d"]], "pyart.util.image_mute_radar": [[1236, "pyart-util-image-mute-radar"]], "pyart.util.interpol_spectra": [[1237, "pyart-util-interpol-spectra"]], "pyart.util.intersection": [[1238, "pyart-util-intersection"]], "pyart.util.interval_mean": [[1239, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[1240, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[1241, "pyart-util-is-vpt"]], "pyart.util.ivic_flat_reg_var_max_table": [[1242, "pyart-util-ivic-flat-reg-var-max-table"]], "pyart.util.ivic_flat_reg_wind_len_table": [[1243, "pyart-util-ivic-flat-reg-wind-len-table"]], "pyart.util.ivic_pct_table": [[1244, "pyart-util-ivic-pct-table"]], "pyart.util.ivic_snr_thr_table": [[1245, "pyart-util-ivic-snr-thr-table"]], "pyart.util.join_radar": [[1246, "pyart-util-join-radar"]], "pyart.util.join_spectra": [[1247, "pyart-util-join-spectra"]], "pyart.util.ma_broadcast_to": [[1248, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[1249, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[1250, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.radar_from_spectra": [[1251, "pyart-util-radar-from-spectra"]], "pyart.util.rolling_window": [[1252, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[1253, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[1254, "pyart-util-sphere-distance"]], "Parameter": [[1254, "parameter"]], "pyart.util.subset_radar": [[1255, "pyart-util-subset-radar"]], "pyart.util.subset_radar_spectra": [[1256, "pyart-util-subset-radar-spectra"]], "pyart.util.texture": [[1257, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[1258, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[1259, "pyart-util-to-vpt"]], "API Manual": [[1260, "api-manual"]], "Changelog": [[1261, "changelog"]], "v1.9.2": [[1261, "v1-9-2"]], "v1.9.0": [[1261, "v1-9-0"]], "v1.8.9": [[1261, "v1-8-9"]], "v1.8.8": [[1261, "v1-8-8"]], "v1.8.7": [[1261, "v1-8-7"]], "v1.8.6": [[1261, "v1-8-6"]], "v1.8.5": [[1261, "v1-8-5"]], "v1.8.4": [[1261, "v1-8-4"]], "v1.8.3": [[1261, "v1-8-3"]], "v1.8.2": [[1261, "v1-8-2"]], "v1.8.1": [[1261, "v1-8-1"]], "v1.8": [[1261, "v1-8"]], "v1.7.1": [[1261, "v1-7-1"]], "v1.7": [[1261, "v1-7"]], "v1.6.4": [[1261, "v1-6-4"]], "New additions": [[1261, "new-additions"]], "v1.6.3": [[1261, "v1-6-3"]], "v1.6.2": [[1261, "v1-6-2"]], "v1.6.1": [[1261, "v1-6-1"]], "v1.6": [[1261, "v1-6"]], "Moment correction examples": [[1262, "moment-correction-examples"], [1266, "moment-correction-examples"]], "Correct reflectivity attenuation": [[1263, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[1264, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[1265, "computation-times"], [1270, "computation-times"], [1275, "computation-times"], [1294, "computation-times"], [1301, "computation-times"], [1302, "computation-times"], [1315, "computation-times"]], "Example Gallery": [[1266, "example-gallery"]], "Input/Output Examples": [[1266, "input-output-examples"], [1267, "input-output-examples"]], "Mapping examples": [[1266, "mapping-examples"], [1271, "mapping-examples"]], "Plotting examples": [[1266, "plotting-examples"], [1276, "plotting-examples"]], "Retrieval Examples": [[1266, "retrieval-examples"], [1295, "retrieval-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[1268, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[1268, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[1268, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[1269, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[1269, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[1272, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[1273, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[1274, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[1277, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[1278, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[1279, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[1280, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[1281, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[1282, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[1283, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[1284, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[1285, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[1286, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [1287, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[1288, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [1289, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[1290, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[1291, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[1292, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[1293, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[1296, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[1297, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[1298, "convective-stratiform-classification"]], "How the algorithm works": [[1298, "how-the-algorithm-works"]], "Examples": [[1298, "examples"]], "Summary of recommendations and best practices": [[1298, "summary-of-recommendations-and-best-practices"]], "References": [[1298, "references"]], "Calculate and Plot hydrometeor classification": [[1299, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[1300, "calculate-and-plot-vad-profile"]], "About the MeteoSwiss fork of Py-ART": [[1303, "about-the-meteoswiss-fork-of-py-art"]], "Citing Py-ART": [[1303, "citing-py-art"]], "What can Py-ART do?": [[1303, "what-can-py-art-do"]], "Short Courses": [[1303, "short-courses"]], "Install": [[1303, "install"], [1317, "install"]], "Dependencies": [[1303, "dependencies"]], "Optional Dependences": [[1303, "optional-dependences"]], "Getting help": [[1303, "getting-help"]], "Contributing": [[1303, "contributing"]], "Notebook Gallery": [[1304, "notebook-gallery"]], "Notebooks": [[1304, null]], "Creating a basic ingest of a NetCDF file": [[1305, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[1306, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[1307, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[1309, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[1310, "masking-data-with-py-art-gatefilters"]], "Reading MeteoSwiss Metranet data with Py-ART": [[1311, "reading-meteoswiss-metranet-data-with-py-art"]], "Reading Polar data": [[1311, "reading-polar-data"]], "Low-res data (MLx files)": [[1311, "low-res-data-mlx-files"]], "High-res data (MHx files)": [[1311, "high-res-data-mhx-files"]], "Reading other polar products": [[1311, "reading-other-polar-products"]], "Reading Cartesian products": [[1311, "reading-cartesian-products"]], "Processing of Doppler wind data from a Swiss volumetric scan": [[1312, "processing-of-doppler-wind-data-from-a-swiss-volumetric-scan"]], "Reading and dealiasing the data": [[1312, "reading-and-dealiasing-the-data"]], "CAPPI plots": [[1312, "cappi-plots"]], "Velocity azimuth display (VAD)": [[1312, "velocity-azimuth-display-vad"]], "Filtering and retrievals on raw Swiss C-band data": [[1313, "filtering-and-retrievals-on-raw-swiss-c-band-data"]], "Reading the data": [[1313, "reading-the-data"]], "Ground-clutter and noise removal": [[1313, "ground-clutter-and-noise-removal"]], "Attenuation correction": [[1313, "attenuation-correction"]], "KDP estimation": [[1313, "kdp-estimation"]], "Hydrometeor classification": [[1313, "hydrometeor-classification"]], "QPE": [[1313, "qpe"]], "The Py-ART Radar object and indexing": [[1314, "the-py-art-radar-object-and-indexing"]], "Installation": [[1316, "installation"]], "Required Dependencies": [[1316, "required-dependencies"]], "Optional Dependencies": [[1316, "optional-dependencies"]], "Obtaining the latest source": [[1316, "obtaining-the-latest-source"]], "Installing from Source": [[1316, "installing-from-source"]], "Frequently asked questions": [[1316, "frequently-asked-questions"]], "Contributor\u2019s Guide": [[1317, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[1317, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[1317, "important-links"]], "Citing": [[1317, "citing"]], "Resources": [[1317, "resources"]], "Code Style": [[1317, "code-style"]], "Python File Setup": [[1317, "python-file-setup"]], "Testing": [[1317, "testing"]], "GitHub": [[1317, "github"]], "Blog Posts": [[1317, "blog-posts"]], "User Guide": [[1318, "user-guide"]], "Setting up an Environment": [[1319, "setting-up-an-environment"]], "Anaconda": [[1319, "anaconda"]], "Setting a Channel": [[1319, "setting-a-channel"]], "Creating an Environment": [[1319, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[1319, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[1319, "more-information"]]}, "indexentries": {"extract_sweeps_skyecho() (in module pyart.aux_io)": [[0, "pyart.aux_io.extract_sweeps_skyecho"], [538, "pyart.aux_io.extract_sweeps_skyecho"]], "get_sweep_time_coverage() (in module pyart.aux_io)": [[1, "pyart.aux_io.get_sweep_time_coverage"], [540, "pyart.aux_io.get_sweep_time_coverage"]], "read_bin() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_bin"], [541, "pyart.aux_io.read_bin"]], "read_bin_mf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_bin_mf"], [542, "pyart.aux_io.read_bin_mf"]], "read_cartesian_metranet() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_cartesian_metranet"], [543, "pyart.aux_io.read_cartesian_metranet"]], "read_cf1() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_cf1"], [544, "pyart.aux_io.read_cf1"]], "read_cf1_cartesian() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_cf1_cartesian"], [545, "pyart.aux_io.read_cf1_cartesian"]], "read_cf1_cartesian_mf() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_cf1_cartesian_mf"], [546, "pyart.aux_io.read_cf1_cartesian_mf"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_d3r_gcpex_nc"], [547, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_dat_mf() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_dat_mf"], [548, "pyart.aux_io.read_dat_mf"]], "read_gamic() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_gamic"], [552, "pyart.aux_io.read_gamic"]], "read_gif() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_gif"], [553, "pyart.aux_io.read_gif"]], "read_grib() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_grib"], [554, "pyart.aux_io.read_grib"]], "read_hpl() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_hpl"], [555, "pyart.aux_io.read_hpl"]], "read_iq() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_iq"], [556, "pyart.aux_io.read_iq"]], "read_kazr() (in module pyart.aux_io)": [[15, "pyart.aux_io.read_kazr"], [557, "pyart.aux_io.read_kazr"]], "read_metranet() (in module pyart.aux_io)": [[16, "pyart.aux_io.read_metranet"], [560, "pyart.aux_io.read_metranet"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[17, "pyart.aux_io.read_noxp_iphex_nc"], [561, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_grid_h5() (in module pyart.aux_io)": [[18, "pyart.aux_io.read_odim_grid_h5"], [562, "pyart.aux_io.read_odim_grid_h5"]], "read_odim_h5() (in module pyart.aux_io)": [[19, "pyart.aux_io.read_odim_h5"], [563, "pyart.aux_io.read_odim_h5"]], "read_odim_vp_h5() (in module pyart.aux_io)": [[20, "pyart.aux_io.read_odim_vp_h5"], [564, "pyart.aux_io.read_odim_vp_h5"]], "read_pattern() (in module pyart.aux_io)": [[21, "pyart.aux_io.read_pattern"], [565, "pyart.aux_io.read_pattern"]], "read_png() (in module pyart.aux_io)": [[22, "pyart.aux_io.read_png"], [566, "pyart.aux_io.read_png"]], "read_radx() (in module pyart.aux_io)": [[23, "pyart.aux_io.read_radx"], [572, "pyart.aux_io.read_radx"]], "read_rainbow_psr() (in module pyart.aux_io)": [[24, "pyart.aux_io.read_rainbow_psr"], [573, "pyart.aux_io.read_rainbow_psr"]], "read_rainbow_psr_spectra() (in module pyart.aux_io)": [[25, "pyart.aux_io.read_rainbow_psr_spectra"], [574, "pyart.aux_io.read_rainbow_psr_spectra"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[26, "pyart.aux_io.read_rainbow_wrl"], [575, "pyart.aux_io.read_rainbow_wrl"]], "read_skyecho() (in module pyart.aux_io)": [[27, "pyart.aux_io.read_skyecho"], [577, "pyart.aux_io.read_skyecho"]], "read_spectra() (in module pyart.aux_io)": [[28, "pyart.aux_io.read_spectra"], [578, "pyart.aux_io.read_spectra"]], "read_swissbirdradar_spectra() (in module pyart.aux_io)": [[29, "pyart.aux_io.read_swissbirdradar_spectra"], [579, "pyart.aux_io.read_swissbirdradar_spectra"]], "write_odim_grid_h5() (in module pyart.aux_io)": [[30, "pyart.aux_io.write_odim_grid_h5"], [580, "pyart.aux_io.write_odim_grid_h5"]], "write_odim_h5() (in module pyart.aux_io)": [[31, "pyart.aux_io.write_odim_h5"], [581, "pyart.aux_io.write_odim_h5"]], "write_spectra() (in module pyart.aux_io)": [[32, "pyart.aux_io.write_spectra"], [583, "pyart.aux_io.write_spectra"]], "texture_of_complex_phase() (in module pyart.bridge)": [[33, "pyart.bridge.texture_of_complex_phase"], [585, "pyart.bridge.texture_of_complex_phase"]], "filemetadata (class in pyart.config)": [[34, "pyart.config.FileMetadata"], [587, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[35, "pyart.config.FileMetadata.__call__"], [588, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[36, "pyart.config.FileMetadata.get_field_name"], [589, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[37, "pyart.config.FileMetadata.get_metadata"], [590, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[38, "pyart.config.get_field_colormap"], [592, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[39, "pyart.config.get_field_limits"], [593, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[40, "pyart.config.get_field_mapping"], [594, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[41, "pyart.config.get_field_name"], [595, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[42, "pyart.config.get_fillvalue"], [596, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[43, "pyart.config.get_metadata"], [597, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[44, "pyart.config.load_config"], [598, "pyart.config.load_config"]], "grid (class in pyart.core)": [[45, "pyart.core.Grid"], [600, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[46, "pyart.core.Grid.add_field"], [601, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[47, "pyart.core.Grid.get_point_longitude_latitude"], [602, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[48, "pyart.core.Grid.get_projparams"], [603, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[49, "pyart.core.Grid.init_point_altitude"], [604, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[50, "pyart.core.Grid.init_point_longitude_latitude"], [605, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[51, "pyart.core.Grid.init_point_x_y_z"], [606, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[52, "pyart.core.Grid.projection_proj"], [607, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[53, "pyart.core.Grid.to_xarray"], [608, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[54, "pyart.core.Grid.write"], [609, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[55, "pyart.core.HorizontalWindProfile"], [610, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[56, "pyart.core.HorizontalWindProfile.from_u_and_v"], [611, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[57, "pyart.core.HorizontalWindProfile.u_wind"], [612, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[58, "pyart.core.HorizontalWindProfile.v_wind"], [613, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[59, "pyart.core.Radar"], [614, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[60, "pyart.core.Radar.add_field"], [615, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[61, "pyart.core.Radar.add_field_like"], [616, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[62, "pyart.core.Radar.add_filter"], [617, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[63, "pyart.core.Radar.check_field_exists"], [618, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[64, "pyart.core.Radar.extract_sweeps"], [619, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[65, "pyart.core.Radar.get_azimuth"], [620, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[66, "pyart.core.Radar.get_elevation"], [621, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[67, "pyart.core.Radar.get_end"], [622, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[68, "pyart.core.Radar.get_field"], [623, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[69, "pyart.core.Radar.get_gate_area"], [624, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[70, "pyart.core.Radar.get_gate_lat_lon_alt"], [625, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[71, "pyart.core.Radar.get_gate_x_y_z"], [626, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[72, "pyart.core.Radar.get_nyquist_vel"], [627, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[73, "pyart.core.Radar.get_slice"], [628, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[74, "pyart.core.Radar.get_start"], [629, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[75, "pyart.core.Radar.get_start_end"], [630, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[76, "pyart.core.Radar.info"], [631, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[77, "pyart.core.Radar.init_gate_altitude"], [632, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[78, "pyart.core.Radar.init_gate_longitude_latitude"], [633, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[79, "pyart.core.Radar.init_gate_x_y_z"], [634, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[80, "pyart.core.Radar.init_rays_per_sweep"], [635, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[81, "pyart.core.Radar.iter_azimuth"], [636, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[82, "pyart.core.Radar.iter_elevation"], [637, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[83, "pyart.core.Radar.iter_end"], [638, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[84, "pyart.core.Radar.iter_field"], [639, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[85, "pyart.core.Radar.iter_slice"], [640, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[86, "pyart.core.Radar.iter_start"], [641, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[87, "pyart.core.Radar.iter_start_end"], [642, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[88, "pyart.core.RadarSpectra"], [643, "pyart.core.RadarSpectra"]], "add_field() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.add_field"], [644, "pyart.core.RadarSpectra.add_field"]], "add_field_like() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.add_field_like"], [645, "pyart.core.RadarSpectra.add_field_like"]], "add_filter() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.add_filter"], [646, "pyart.core.RadarSpectra.add_filter"]], "check_field_exists() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.check_field_exists"], [647, "pyart.core.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.extract_sweeps"], [648, "pyart.core.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.get_azimuth"], [649, "pyart.core.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.get_elevation"], [650, "pyart.core.RadarSpectra.get_elevation"]], "get_end() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.get_end"], [651, "pyart.core.RadarSpectra.get_end"]], "get_field() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.get_field"], [652, "pyart.core.RadarSpectra.get_field"]], "get_gate_area() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.get_gate_area"], [653, "pyart.core.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"], [654, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.get_gate_x_y_z"], [655, "pyart.core.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.get_nyquist_vel"], [656, "pyart.core.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.core.radarspectra method)": [[102, "pyart.core.RadarSpectra.get_slice"], [657, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[103, "pyart.core.RadarSpectra.get_start"], [658, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[104, "pyart.core.RadarSpectra.get_start_end"], [659, "pyart.core.RadarSpectra.get_start_end"]], "info() (pyart.core.radarspectra method)": [[105, "pyart.core.RadarSpectra.info"], [660, "pyart.core.RadarSpectra.info"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[106, "pyart.core.RadarSpectra.init_gate_altitude"], [661, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[107, "pyart.core.RadarSpectra.init_gate_longitude_latitude"], [662, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[108, "pyart.core.RadarSpectra.init_gate_x_y_z"], [663, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[109, "pyart.core.RadarSpectra.init_rays_per_sweep"], [664, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[110, "pyart.core.RadarSpectra.iter_azimuth"], [665, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[111, "pyart.core.RadarSpectra.iter_elevation"], [666, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[112, "pyart.core.RadarSpectra.iter_end"], [667, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[113, "pyart.core.RadarSpectra.iter_field"], [668, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[114, "pyart.core.RadarSpectra.iter_slice"], [669, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[115, "pyart.core.RadarSpectra.iter_start"], [670, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[116, "pyart.core.RadarSpectra.iter_start_end"], [671, "pyart.core.RadarSpectra.iter_start_end"]], "antenna_to_cartesian() (in module pyart.core)": [[117, "pyart.core.antenna_to_cartesian"], [672, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[118, "pyart.core.antenna_vectors_to_cartesian"], [673, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[119, "pyart.core.cartesian_to_antenna"], [674, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[120, "pyart.core.cartesian_to_geographic"], [675, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic_aeqd"], [676, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[122, "pyart.core.cartesian_vectors_to_geographic"], [677, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[123, "pyart.core.geographic_to_cartesian"], [678, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian_aeqd"], [679, "pyart.core.geographic_to_cartesian_aeqd"]], "wgs84_to_swissch1903() (in module pyart.core)": [[125, "pyart.core.wgs84_to_swissCH1903"], [680, "pyart.core.wgs84_to_swissCH1903"]], "calculate_attenuation() (in module pyart.correct)": [[126, "pyart.correct.calculate_attenuation"], [710, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[127, "pyart.correct.calculate_attenuation_philinear"], [711, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[128, "pyart.correct.calculate_attenuation_zphi"], [712, "pyart.correct.calculate_attenuation_zphi"]], "compute_apparent_vpr() (in module pyart.correct)": [[129, "pyart.correct.compute_apparent_vpr"], [713, "pyart.correct.compute_apparent_vpr"]], "compute_theoretical_vpr() (in module pyart.correct)": [[130, "pyart.correct.compute_theoretical_vpr"], [714, "pyart.correct.compute_theoretical_vpr"]], "correct_bias() (in module pyart.correct)": [[131, "pyart.correct.correct_bias"], [715, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[132, "pyart.correct.correct_noise_rhohv"], [716, "pyart.correct.correct_noise_rhohv"]], "correct_sys_phase() (in module pyart.correct)": [[133, "pyart.correct.correct_sys_phase"], [717, "pyart.correct.correct_sys_phase"]], "correct_visibility() (in module pyart.correct)": [[134, "pyart.correct.correct_visibility"], [718, "pyart.correct.correct_visibility"]], "correct_vpr() (in module pyart.correct)": [[135, "pyart.correct.correct_vpr"], [719, "pyart.correct.correct_vpr"]], "correct_vpr_spatialised() (in module pyart.correct)": [[136, "pyart.correct.correct_vpr_spatialised"], [720, "pyart.correct.correct_vpr_spatialised"]], "dealias_fourdd() (in module pyart.correct)": [[137, "pyart.correct.dealias_fourdd"], [721, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[138, "pyart.correct.dealias_region_based"], [722, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[139, "pyart.correct.dealias_unwrap_phase"], [723, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[140, "pyart.correct.despeckle_field"], [724, "pyart.correct.despeckle_field"]], "det_sys_phase_ray() (in module pyart.correct)": [[141, "pyart.correct.det_sys_phase_ray"], [725, "pyart.correct.det_sys_phase_ray"]], "est_rhohv_rain() (in module pyart.correct)": [[142, "pyart.correct.est_rhohv_rain"], [726, "pyart.correct.est_rhohv_rain"]], "est_zdr_precip() (in module pyart.correct)": [[143, "pyart.correct.est_zdr_precip"], [727, "pyart.correct.est_zdr_precip"]], "est_zdr_snow() (in module pyart.correct)": [[144, "pyart.correct.est_zdr_snow"], [728, "pyart.correct.est_zdr_snow"]], "find_objects() (in module pyart.correct)": [[145, "pyart.correct.find_objects"], [729, "pyart.correct.find_objects"]], "get_mask_fzl() (in module pyart.correct)": [[146, "pyart.correct.get_mask_fzl"], [731, "pyart.correct.get_mask_fzl"]], "get_sun_hits() (in module pyart.correct)": [[147, "pyart.correct.get_sun_hits"], [732, "pyart.correct.get_sun_hits"]], "get_sun_hits_ivic() (in module pyart.correct)": [[148, "pyart.correct.get_sun_hits_ivic"], [733, "pyart.correct.get_sun_hits_ivic"]], "get_sun_hits_psr() (in module pyart.correct)": [[149, "pyart.correct.get_sun_hits_psr"], [734, "pyart.correct.get_sun_hits_psr"]], "phase_proc_lp() (in module pyart.correct)": [[150, "pyart.correct.phase_proc_lp"], [736, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[151, "pyart.correct.phase_proc_lp_gf"], [737, "pyart.correct.phase_proc_lp_gf"]], "ptoa_to_sf() (in module pyart.correct)": [[152, "pyart.correct.ptoa_to_sf"], [738, "pyart.correct.ptoa_to_sf"]], "scanning_losses() (in module pyart.correct)": [[153, "pyart.correct.scanning_losses"], [740, "pyart.correct.scanning_losses"]], "selfconsistency_bias() (in module pyart.correct)": [[154, "pyart.correct.selfconsistency_bias"], [741, "pyart.correct.selfconsistency_bias"]], "selfconsistency_bias2() (in module pyart.correct)": [[155, "pyart.correct.selfconsistency_bias2"], [742, "pyart.correct.selfconsistency_bias2"]], "selfconsistency_kdp_phidp() (in module pyart.correct)": [[156, "pyart.correct.selfconsistency_kdp_phidp"], [743, "pyart.correct.selfconsistency_kdp_phidp"]], "smooth_masked() (in module pyart.correct)": [[157, "pyart.correct.smooth_masked"], [744, "pyart.correct.smooth_masked"]], "smooth_phidp_double_window() (in module pyart.correct)": [[158, "pyart.correct.smooth_phidp_double_window"], [745, "pyart.correct.smooth_phidp_double_window"]], "smooth_phidp_single_window() (in module pyart.correct)": [[159, "pyart.correct.smooth_phidp_single_window"], [746, "pyart.correct.smooth_phidp_single_window"]], "solar_flux_lookup() (in module pyart.correct)": [[160, "pyart.correct.solar_flux_lookup"], [747, "pyart.correct.solar_flux_lookup"]], "sun_position_mfr() (in module pyart.correct)": [[161, "pyart.correct.sun_position_mfr"], [748, "pyart.correct.sun_position_mfr"]], "sun_position_pysolar() (in module pyart.correct)": [[162, "pyart.correct.sun_position_pysolar"], [749, "pyart.correct.sun_position_pysolar"]], "sun_power() (in module pyart.correct)": [[163, "pyart.correct.sun_power"], [750, "pyart.correct.sun_power"]], "sun_retrieval() (in module pyart.correct)": [[164, "pyart.correct.sun_retrieval"], [751, "pyart.correct.sun_retrieval"]], "deprecatedattribute": [[165, "pyart.exceptions.DeprecatedAttribute"]], "deprecatedfunctionname": [[166, "pyart.exceptions.DeprecatedFunctionName"]], "missingoptionaldependency": [[167, "pyart.exceptions.MissingOptionalDependency"]], "_deprecated_alias() (in module pyart.exceptions)": [[168, "pyart.exceptions._deprecated_alias"]], "gatefilter (class in pyart.filters)": [[169, "pyart.filters.GateFilter"], [754, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[170, "pyart.filters.GateFilter.copy"], [755, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.exclude_above"], [756, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_all"], [757, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_below"], [758, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_equal"], [759, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_gates"], [760, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_inside"], [761, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_invalid"], [762, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_masked"], [763, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_none"], [764, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_not_equal"], [765, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_outside"], [766, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_transition"], [767, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[183, "pyart.filters.GateFilter.gate_excluded"], [768, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[184, "pyart.filters.GateFilter.gate_included"], [769, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.include_above"], [770, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_all"], [771, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_below"], [772, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_equal"], [773, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_gates"], [774, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_inside"], [775, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_none"], [776, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_not_equal"], [777, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_not_masked"], [778, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_not_transition"], [779, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_outside"], [780, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_valid"], [781, "pyart.filters.GateFilter.include_valid"]], "birds_gate_filter() (in module pyart.filters)": [[197, "pyart.filters.birds_gate_filter"], [782, "pyart.filters.birds_gate_filter"]], "class_based_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.class_based_gate_filter"], [783, "pyart.filters.class_based_gate_filter"]], "iso0_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.iso0_based_gate_filter"], [784, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.moment_and_texture_based_gate_filter"], [785, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[201, "pyart.filters.moment_based_gate_filter"], [786, "pyart.filters.moment_based_gate_filter"]], "snr_based_gate_filter() (in module pyart.filters)": [[202, "pyart.filters.snr_based_gate_filter"], [787, "pyart.filters.snr_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[203, "pyart.filters.temp_based_gate_filter"], [788, "pyart.filters.temp_based_gate_filter"]], "visibility_based_gate_filter() (in module pyart.filters)": [[204, "pyart.filters.visibility_based_gate_filter"], [789, "pyart.filters.visibility_based_gate_filter"]], "airborneradardisplay (class in pyart.graph)": [[205, "pyart.graph.AirborneRadarDisplay"], [791, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"], [792, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_filename"], [793, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_ray_title"], [794, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.generate_title"], [795, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[210, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"], [796, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"], [797, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"], [798, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[213, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"], [799, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[214, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"], [800, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"], [801, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"], [802, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"], [803, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"], [804, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"], [805, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[220, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"], [806, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[221, "pyart.graph.AirborneRadarDisplay.plot"], [807, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"], [808, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_colorbar"], [809, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"], [810, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"], [811, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"], [812, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_label"], [813, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_labels"], [814, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_ppi"], [815, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_range_ring"], [816, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_range_rings"], [817, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_ray"], [818, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[233, "pyart.graph.AirborneRadarDisplay.plot_rhi"], [819, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[234, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"], [820, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[235, "pyart.graph.AirborneRadarDisplay.plot_vpt"], [821, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.airborneradardisplay method)": [[236, "pyart.graph.AirborneRadarDisplay.plot_xsection"], [822, "pyart.graph.AirborneRadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[237, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"], [823, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[238, "pyart.graph.AirborneRadarDisplay.set_limits"], [824, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[239, "pyart.graph.GridMapDisplay"], [825, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.cartopy_coastlines"], [826, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"], [827, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.cartopy_states"], [828, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.generate_filename"], [829, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.generate_grid_title"], [830, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"], [831, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"], [832, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_colorbar"], [833, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_cross_section"], [834, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_cross_section_level() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.plot_cross_section_level"], [835, "pyart.graph.GridMapDisplay.plot_cross_section_level"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.plot_crosshairs"], [836, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_grid"], [837, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_grid_contour() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_grid_contour"], [838, "pyart.graph.GridMapDisplay.plot_grid_contour"]], "plot_grid_raw() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_grid_raw"], [839, "pyart.graph.GridMapDisplay.plot_grid_raw"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[254, "pyart.graph.GridMapDisplay.plot_latitude_slice"], [840, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[255, "pyart.graph.GridMapDisplay.plot_latitudinal_level"], [841, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[256, "pyart.graph.GridMapDisplay.plot_longitude_slice"], [842, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[257, "pyart.graph.GridMapDisplay.plot_longitudinal_level"], [843, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[258, "pyart.graph.GridMapDisplayBasemap"], [844, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.generate_filename"], [845, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"], [846, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"], [847, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"], [848, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.get_basemap"], [849, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.plot_basemap"], [850, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"], [851, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"], [852, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_grid"], [853, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[268, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"], [854, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[269, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"], [855, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[270, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"], [856, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[271, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"], [857, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[272, "pyart.graph.RadarDisplay"], [858, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.generate_az_rhi_title"], [859, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.generate_filename"], [860, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.generate_ray_title"], [861, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.generate_title"], [862, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.generate_vpt_title"], [863, "pyart.graph.RadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.generate_xsection_title"], [864, "pyart.graph.RadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.label_xaxis_r"], [865, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[280, "pyart.graph.RadarDisplay.label_xaxis_rays"], [866, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.label_xaxis_time"], [867, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.label_xaxis_x"], [868, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.label_xaxis_xsection"], [869, "pyart.graph.RadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.label_yaxis_field"], [870, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.label_yaxis_xsection"], [871, "pyart.graph.RadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.label_yaxis_y"], [872, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.label_yaxis_z"], [873, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot"], [874, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"], [875, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[290, "pyart.graph.RadarDisplay.plot_colorbar"], [876, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[291, "pyart.graph.RadarDisplay.plot_cr_raster"], [877, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[292, "pyart.graph.RadarDisplay.plot_cross_hair"], [878, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[293, "pyart.graph.RadarDisplay.plot_grid_lines"], [879, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[294, "pyart.graph.RadarDisplay.plot_label"], [880, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[295, "pyart.graph.RadarDisplay.plot_labels"], [881, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[296, "pyart.graph.RadarDisplay.plot_ppi"], [882, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[297, "pyart.graph.RadarDisplay.plot_range_ring"], [883, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[298, "pyart.graph.RadarDisplay.plot_range_rings"], [884, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[299, "pyart.graph.RadarDisplay.plot_ray"], [885, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[300, "pyart.graph.RadarDisplay.plot_rhi"], [886, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[301, "pyart.graph.RadarDisplay.plot_vpt"], [887, "pyart.graph.RadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radardisplay method)": [[302, "pyart.graph.RadarDisplay.plot_xsection"], [888, "pyart.graph.RadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[303, "pyart.graph.RadarDisplay.set_aspect_ratio"], [889, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[304, "pyart.graph.RadarDisplay.set_limits"], [890, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[305, "pyart.graph.RadarMapDisplay"], [891, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"], [892, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.generate_filename"], [893, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.generate_ray_title"], [894, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.generate_title"], [895, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.generate_vpt_title"], [896, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.generate_xsection_title"], [897, "pyart.graph.RadarMapDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.label_xaxis_r"], [898, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[313, "pyart.graph.RadarMapDisplay.label_xaxis_rays"], [899, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[314, "pyart.graph.RadarMapDisplay.label_xaxis_time"], [900, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.label_xaxis_x"], [901, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"], [902, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.label_yaxis_field"], [903, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"], [904, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.label_yaxis_y"], [905, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.label_yaxis_z"], [906, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot"], [907, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"], [908, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_colorbar"], [909, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_cr_raster"], [910, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[325, "pyart.graph.RadarMapDisplay.plot_cross_hair"], [911, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[326, "pyart.graph.RadarMapDisplay.plot_grid_lines"], [912, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[327, "pyart.graph.RadarMapDisplay.plot_label"], [913, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[328, "pyart.graph.RadarMapDisplay.plot_labels"], [914, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[329, "pyart.graph.RadarMapDisplay.plot_line_geo"], [915, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[330, "pyart.graph.RadarMapDisplay.plot_line_xy"], [916, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[331, "pyart.graph.RadarMapDisplay.plot_point"], [917, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[332, "pyart.graph.RadarMapDisplay.plot_ppi"], [918, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[333, "pyart.graph.RadarMapDisplay.plot_ppi_map"], [919, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[334, "pyart.graph.RadarMapDisplay.plot_range_ring"], [920, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[335, "pyart.graph.RadarMapDisplay.plot_range_rings"], [921, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[336, "pyart.graph.RadarMapDisplay.plot_ray"], [922, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[337, "pyart.graph.RadarMapDisplay.plot_rhi"], [923, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[338, "pyart.graph.RadarMapDisplay.plot_vpt"], [924, "pyart.graph.RadarMapDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplay method)": [[339, "pyart.graph.RadarMapDisplay.plot_xsection"], [925, "pyart.graph.RadarMapDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[340, "pyart.graph.RadarMapDisplay.set_aspect_ratio"], [926, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[341, "pyart.graph.RadarMapDisplay.set_limits"], [927, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[342, "pyart.graph.RadarMapDisplayBasemap"], [928, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"], [929, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.generate_filename"], [930, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"], [931, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.generate_title"], [932, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"], [933, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"], [934, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"], [935, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[350, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"], [936, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[351, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"], [937, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"], [938, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"], [939, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"], [940, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"], [941, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"], [942, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"], [943, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot"], [944, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"], [945, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"], [946, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[361, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"], [947, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[362, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"], [948, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[363, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"], [949, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[364, "pyart.graph.RadarMapDisplayBasemap.plot_label"], [950, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[365, "pyart.graph.RadarMapDisplayBasemap.plot_labels"], [951, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[366, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"], [952, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[367, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"], [953, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[368, "pyart.graph.RadarMapDisplayBasemap.plot_point"], [954, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[369, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"], [955, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[370, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"], [956, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[371, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"], [957, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[372, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"], [958, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[373, "pyart.graph.RadarMapDisplayBasemap.plot_ray"], [959, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[374, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"], [960, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[375, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"], [961, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[376, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"], [962, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[377, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"], [963, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[378, "pyart.graph.RadarMapDisplayBasemap.set_limits"], [964, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "make_time_unit_str() (in module pyart.io)": [[379, "pyart.io.make_time_unit_str"], [967, "pyart.io.make_time_unit_str"]], "prepare_for_read() (in module pyart.io)": [[380, "pyart.io.prepare_for_read"], [968, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[381, "pyart.io.read"], [969, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[382, "pyart.io.read_arm_sonde"], [970, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[383, "pyart.io.read_arm_sonde_vap"], [971, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[384, "pyart.io.read_cfradial"], [972, "pyart.io.read_cfradial"]], "read_cfradial2() (in module pyart.io)": [[385, "pyart.io.read_cfradial2"], [973, "pyart.io.read_cfradial2"]], "read_chl() (in module pyart.io)": [[386, "pyart.io.read_chl"], [974, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[387, "pyart.io.read_grid"], [975, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[388, "pyart.io.read_grid_mdv"], [976, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[389, "pyart.io.read_mdv"], [977, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[390, "pyart.io.read_nexrad_archive"], [978, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[391, "pyart.io.read_nexrad_cdm"], [979, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[392, "pyart.io.read_nexrad_level3"], [980, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[393, "pyart.io.read_rsl"], [981, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[394, "pyart.io.read_sigmet"], [982, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[395, "pyart.io.read_uf"], [983, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[396, "pyart.io.write_cfradial"], [984, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[397, "pyart.io.write_grid"], [985, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[398, "pyart.io.write_grid_geotiff"], [986, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[399, "pyart.io.write_grid_mdv"], [987, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[400, "pyart.io.write_uf"], [988, "pyart.io.write_uf"]], "lazyloaddict (class in pyart.lazydict)": [[401, "pyart.lazydict.LazyLoadDict"], [990, "pyart.lazydict.LazyLoadDict"]], "__contains__() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.__contains__"]], "__delattr__() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.__delattr__"]], "__delitem__() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.__delitem__"]], "__dir__() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.__dir__"]], "__eq__() (pyart.lazydict.lazyloaddict method)": [[406, "pyart.lazydict.LazyLoadDict.__eq__"]], "__format__() (pyart.lazydict.lazyloaddict method)": [[407, "pyart.lazydict.LazyLoadDict.__format__"]], "__ge__() (pyart.lazydict.lazyloaddict method)": [[408, "pyart.lazydict.LazyLoadDict.__ge__"]], "__getattribute__() (pyart.lazydict.lazyloaddict method)": [[409, "pyart.lazydict.LazyLoadDict.__getattribute__"]], "__getitem__() (pyart.lazydict.lazyloaddict method)": [[410, "pyart.lazydict.LazyLoadDict.__getitem__"]], "__getstate__() (pyart.lazydict.lazyloaddict method)": [[411, "pyart.lazydict.LazyLoadDict.__getstate__"]], "__gt__() (pyart.lazydict.lazyloaddict method)": [[412, "pyart.lazydict.LazyLoadDict.__gt__"]], "__init__() (pyart.lazydict.lazyloaddict method)": [[413, "pyart.lazydict.LazyLoadDict.__init__"]], "__init_subclass__() (pyart.lazydict.lazyloaddict method)": [[414, "pyart.lazydict.LazyLoadDict.__init_subclass__"]], "__iter__() (pyart.lazydict.lazyloaddict method)": [[415, "pyart.lazydict.LazyLoadDict.__iter__"]], "__le__() (pyart.lazydict.lazyloaddict method)": [[416, "pyart.lazydict.LazyLoadDict.__le__"]], "__len__() (pyart.lazydict.lazyloaddict method)": [[417, "pyart.lazydict.LazyLoadDict.__len__"]], "__lt__() (pyart.lazydict.lazyloaddict method)": [[418, "pyart.lazydict.LazyLoadDict.__lt__"]], "__ne__() (pyart.lazydict.lazyloaddict method)": [[419, "pyart.lazydict.LazyLoadDict.__ne__"]], "__new__() (pyart.lazydict.lazyloaddict method)": [[420, "pyart.lazydict.LazyLoadDict.__new__"]], "__reduce__() (pyart.lazydict.lazyloaddict method)": [[421, "pyart.lazydict.LazyLoadDict.__reduce__"]], "__reduce_ex__() (pyart.lazydict.lazyloaddict method)": [[422, "pyart.lazydict.LazyLoadDict.__reduce_ex__"]], "__repr__() (pyart.lazydict.lazyloaddict method)": [[423, "pyart.lazydict.LazyLoadDict.__repr__"]], "__setattr__() (pyart.lazydict.lazyloaddict method)": [[424, "pyart.lazydict.LazyLoadDict.__setattr__"]], "__setitem__() (pyart.lazydict.lazyloaddict method)": [[425, "pyart.lazydict.LazyLoadDict.__setitem__"]], "__sizeof__() (pyart.lazydict.lazyloaddict method)": [[426, "pyart.lazydict.LazyLoadDict.__sizeof__"]], "__str__() (pyart.lazydict.lazyloaddict method)": [[427, "pyart.lazydict.LazyLoadDict.__str__"]], "__subclasshook__() (pyart.lazydict.lazyloaddict class method)": [[428, "pyart.lazydict.LazyLoadDict.__subclasshook__"]], "clear() (pyart.lazydict.lazyloaddict method)": [[429, "pyart.lazydict.LazyLoadDict.clear"], [991, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[430, "pyart.lazydict.LazyLoadDict.copy"], [992, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[431, "pyart.lazydict.LazyLoadDict.get"], [993, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[432, "pyart.lazydict.LazyLoadDict.has_key"], [994, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[433, "pyart.lazydict.LazyLoadDict.items"], [995, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[434, "pyart.lazydict.LazyLoadDict.keys"], [996, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[435, "pyart.lazydict.LazyLoadDict.pop"], [997, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[436, "pyart.lazydict.LazyLoadDict.popitem"], [998, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[437, "pyart.lazydict.LazyLoadDict.set_lazy"], [999, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[438, "pyart.lazydict.LazyLoadDict.setdefault"], [1000, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[439, "pyart.lazydict.LazyLoadDict.update"], [1001, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[440, "pyart.lazydict.LazyLoadDict.values"], [1002, "pyart.lazydict.LazyLoadDict.values"]], "_destandardize() (in module pyart.retrieve)": [[441, "pyart.retrieve._destandardize"]], "_get_res_vol_sides() (in module pyart.retrieve)": [[442, "pyart.retrieve._get_res_vol_sides"]], "atmospheric_gas_att() (in module pyart.retrieve)": [[443, "pyart.retrieve.atmospheric_gas_att"], [1027, "pyart.retrieve.atmospheric_gas_att"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[444, "pyart.retrieve.calculate_snr_from_reflectivity"], [1028, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[445, "pyart.retrieve.calculate_velocity_texture"], [1029, "pyart.retrieve.calculate_velocity_texture"]], "compute_doppler_velocity() (in module pyart.retrieve)": [[446, "pyart.retrieve.compute_Doppler_velocity"], [1031, "pyart.retrieve.compute_Doppler_velocity"]], "compute_doppler_velocity_iq() (in module pyart.retrieve)": [[447, "pyart.retrieve.compute_Doppler_velocity_iq"], [1032, "pyart.retrieve.compute_Doppler_velocity_iq"]], "compute_doppler_width() (in module pyart.retrieve)": [[448, "pyart.retrieve.compute_Doppler_width"], [1033, "pyart.retrieve.compute_Doppler_width"]], "compute_doppler_width_iq() (in module pyart.retrieve)": [[449, "pyart.retrieve.compute_Doppler_width_iq"], [1034, "pyart.retrieve.compute_Doppler_width_iq"]], "compute_apparent_profile() (in module pyart.retrieve)": [[450, "pyart.retrieve.compute_apparent_profile"], [1035, "pyart.retrieve.compute_apparent_profile"]], "compute_bird_density() (in module pyart.retrieve)": [[451, "pyart.retrieve.compute_bird_density"], [1036, "pyart.retrieve.compute_bird_density"]], "compute_ccor() (in module pyart.retrieve)": [[452, "pyart.retrieve.compute_ccor"], [1037, "pyart.retrieve.compute_ccor"]], "compute_cdr() (in module pyart.retrieve)": [[453, "pyart.retrieve.compute_cdr"], [1038, "pyart.retrieve.compute_cdr"]], "compute_centroids() (in module pyart.retrieve)": [[454, "pyart.retrieve.compute_centroids"], [1039, "pyart.retrieve.compute_centroids"]], "compute_differential_phase() (in module pyart.retrieve)": [[455, "pyart.retrieve.compute_differential_phase"], [1040, "pyart.retrieve.compute_differential_phase"]], "compute_differential_phase_iq() (in module pyart.retrieve)": [[456, "pyart.retrieve.compute_differential_phase_iq"], [1041, "pyart.retrieve.compute_differential_phase_iq"]], "compute_differential_reflectivity() (in module pyart.retrieve)": [[457, "pyart.retrieve.compute_differential_reflectivity"], [1042, "pyart.retrieve.compute_differential_reflectivity"]], "compute_differential_reflectivity_iq() (in module pyart.retrieve)": [[458, "pyart.retrieve.compute_differential_reflectivity_iq"], [1043, "pyart.retrieve.compute_differential_reflectivity_iq"]], "compute_evp() (in module pyart.retrieve)": [[459, "pyart.retrieve.compute_evp"], [1044, "pyart.retrieve.compute_evp"]], "compute_iq() (in module pyart.retrieve)": [[460, "pyart.retrieve.compute_iq"], [1045, "pyart.retrieve.compute_iq"]], "compute_l() (in module pyart.retrieve)": [[461, "pyart.retrieve.compute_l"], [1046, "pyart.retrieve.compute_l"]], "compute_mean_phase_iq() (in module pyart.retrieve)": [[462, "pyart.retrieve.compute_mean_phase_iq"], [1047, "pyart.retrieve.compute_mean_phase_iq"]], "compute_noise_power() (in module pyart.retrieve)": [[463, "pyart.retrieve.compute_noise_power"], [1048, "pyart.retrieve.compute_noise_power"]], "compute_noisedbz() (in module pyart.retrieve)": [[464, "pyart.retrieve.compute_noisedBZ"], [1049, "pyart.retrieve.compute_noisedBZ"]], "compute_pol_variables() (in module pyart.retrieve)": [[465, "pyart.retrieve.compute_pol_variables"], [1050, "pyart.retrieve.compute_pol_variables"]], "compute_pol_variables_iq() (in module pyart.retrieve)": [[466, "pyart.retrieve.compute_pol_variables_iq"], [1051, "pyart.retrieve.compute_pol_variables_iq"]], "compute_qvp() (in module pyart.retrieve)": [[467, "pyart.retrieve.compute_qvp"], [1052, "pyart.retrieve.compute_qvp"]], "compute_radial_noise_hs() (in module pyart.retrieve)": [[468, "pyart.retrieve.compute_radial_noise_hs"], [1053, "pyart.retrieve.compute_radial_noise_hs"]], "compute_radial_noise_ivic() (in module pyart.retrieve)": [[469, "pyart.retrieve.compute_radial_noise_ivic"], [1054, "pyart.retrieve.compute_radial_noise_ivic"]], "compute_rcs() (in module pyart.retrieve)": [[470, "pyart.retrieve.compute_rcs"], [1055, "pyart.retrieve.compute_rcs"]], "compute_rcs_from_pr() (in module pyart.retrieve)": [[471, "pyart.retrieve.compute_rcs_from_pr"], [1056, "pyart.retrieve.compute_rcs_from_pr"]], "compute_reflectivity() (in module pyart.retrieve)": [[472, "pyart.retrieve.compute_reflectivity"], [1057, "pyart.retrieve.compute_reflectivity"]], "compute_reflectivity_iq() (in module pyart.retrieve)": [[473, "pyart.retrieve.compute_reflectivity_iq"], [1058, "pyart.retrieve.compute_reflectivity_iq"]], "compute_rhohv() (in module pyart.retrieve)": [[474, "pyart.retrieve.compute_rhohv"], [1059, "pyart.retrieve.compute_rhohv"]], "compute_rhohv_iq() (in module pyart.retrieve)": [[475, "pyart.retrieve.compute_rhohv_iq"], [1060, "pyart.retrieve.compute_rhohv_iq"]], "compute_rqvp() (in module pyart.retrieve)": [[476, "pyart.retrieve.compute_rqvp"], [1061, "pyart.retrieve.compute_rqvp"]], "compute_signal_power() (in module pyart.retrieve)": [[477, "pyart.retrieve.compute_signal_power"], [1062, "pyart.retrieve.compute_signal_power"]], "compute_snr() (in module pyart.retrieve)": [[478, "pyart.retrieve.compute_snr"], [1063, "pyart.retrieve.compute_snr"]], "compute_spectra() (in module pyart.retrieve)": [[479, "pyart.retrieve.compute_spectra"], [1064, "pyart.retrieve.compute_spectra"]], "compute_spectral_differential_phase() (in module pyart.retrieve)": [[480, "pyart.retrieve.compute_spectral_differential_phase"], [1065, "pyart.retrieve.compute_spectral_differential_phase"]], "compute_spectral_differential_reflectivity() (in module pyart.retrieve)": [[481, "pyart.retrieve.compute_spectral_differential_reflectivity"], [1066, "pyart.retrieve.compute_spectral_differential_reflectivity"]], "compute_spectral_noise() (in module pyart.retrieve)": [[482, "pyart.retrieve.compute_spectral_noise"], [1067, "pyart.retrieve.compute_spectral_noise"]], "compute_spectral_phase() (in module pyart.retrieve)": [[483, "pyart.retrieve.compute_spectral_phase"], [1068, "pyart.retrieve.compute_spectral_phase"]], "compute_spectral_power() (in module pyart.retrieve)": [[484, "pyart.retrieve.compute_spectral_power"], [1069, "pyart.retrieve.compute_spectral_power"]], "compute_spectral_reflectivity() (in module pyart.retrieve)": [[485, "pyart.retrieve.compute_spectral_reflectivity"], [1070, "pyart.retrieve.compute_spectral_reflectivity"]], "compute_spectral_rhohv() (in module pyart.retrieve)": [[486, "pyart.retrieve.compute_spectral_rhohv"], [1071, "pyart.retrieve.compute_spectral_rhohv"]], "compute_st1_iq() (in module pyart.retrieve)": [[487, "pyart.retrieve.compute_st1_iq"], [1072, "pyart.retrieve.compute_st1_iq"]], "compute_st2_iq() (in module pyart.retrieve)": [[488, "pyart.retrieve.compute_st2_iq"], [1073, "pyart.retrieve.compute_st2_iq"]], "compute_svp() (in module pyart.retrieve)": [[489, "pyart.retrieve.compute_svp"], [1074, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[490, "pyart.retrieve.compute_ts_along_coord"], [1075, "pyart.retrieve.compute_ts_along_coord"]], "compute_vol_refl() (in module pyart.retrieve)": [[491, "pyart.retrieve.compute_vol_refl"], [1076, "pyart.retrieve.compute_vol_refl"]], "compute_vp() (in module pyart.retrieve)": [[492, "pyart.retrieve.compute_vp"], [1077, "pyart.retrieve.compute_vp"]], "compute_wbn_iq() (in module pyart.retrieve)": [[493, "pyart.retrieve.compute_wbn_iq"], [1078, "pyart.retrieve.compute_wbn_iq"]], "conv_strat_yuter() (in module pyart.retrieve)": [[494, "pyart.retrieve.conv_strat_yuter"], [1079, "pyart.retrieve.conv_strat_yuter"]], "data_for_centroids() (in module pyart.retrieve)": [[495, "pyart.retrieve.data_for_centroids"], [1080, "pyart.retrieve.data_for_centroids"]], "dealias_spectra() (in module pyart.retrieve)": [[496, "pyart.retrieve.dealias_spectra"], [1081, "pyart.retrieve.dealias_spectra"]], "detect_ml() (in module pyart.retrieve)": [[497, "pyart.retrieve.detect_ml"], [1082, "pyart.retrieve.detect_ml"]], "determine_medoids() (in module pyart.retrieve)": [[498, "pyart.retrieve.determine_medoids"], [1083, "pyart.retrieve.determine_medoids"]], "est_rain_rate_a() (in module pyart.retrieve)": [[499, "pyart.retrieve.est_rain_rate_a"], [1084, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[500, "pyart.retrieve.est_rain_rate_hydro"], [1085, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[501, "pyart.retrieve.est_rain_rate_kdp"], [1086, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[502, "pyart.retrieve.est_rain_rate_z"], [1087, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[503, "pyart.retrieve.est_rain_rate_za"], [1088, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[504, "pyart.retrieve.est_rain_rate_zkdp"], [1089, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[505, "pyart.retrieve.est_rain_rate_zpoly"], [1090, "pyart.retrieve.est_rain_rate_zpoly"]], "est_vertical_windshear() (in module pyart.retrieve)": [[506, "pyart.retrieve.est_vertical_windshear"], [1091, "pyart.retrieve.est_vertical_windshear"]], "est_vertical_windshear_lidar() (in module pyart.retrieve)": [[507, "pyart.retrieve.est_vertical_windshear_lidar"], [1092, "pyart.retrieve.est_vertical_windshear_lidar"]], "est_wind_profile() (in module pyart.retrieve)": [[508, "pyart.retrieve.est_wind_profile"], [1093, "pyart.retrieve.est_wind_profile"]], "est_wind_vel() (in module pyart.retrieve)": [[509, "pyart.retrieve.est_wind_vel"], [1094, "pyart.retrieve.est_wind_vel"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[510, "pyart.retrieve.fetch_radar_time_profile"], [1095, "pyart.retrieve.fetch_radar_time_profile"]], "gecsx() (in module pyart.retrieve)": [[511, "pyart.retrieve.gecsx"], [1096, "pyart.retrieve.gecsx"]], "get_coeff_attg() (in module pyart.retrieve)": [[512, "pyart.retrieve.get_coeff_attg"], [1097, "pyart.retrieve.get_coeff_attg"]], "get_freq_band() (in module pyart.retrieve)": [[513, "pyart.retrieve.get_freq_band"], [1098, "pyart.retrieve.get_freq_band"]], "get_iso0_val() (in module pyart.retrieve)": [[514, "pyart.retrieve.get_iso0_val"], [1099, "pyart.retrieve.get_iso0_val"]], "get_ml_rng_limits() (in module pyart.retrieve)": [[515, "pyart.retrieve.get_ml_rng_limits"], [1100, "pyart.retrieve.get_ml_rng_limits"]], "grid_displacement_pc() (in module pyart.retrieve)": [[516, "pyart.retrieve.grid_displacement_pc"], [1101, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[517, "pyart.retrieve.grid_shift"], [1102, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[518, "pyart.retrieve.hydroclass_semisupervised"], [1103, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_leastsquare_double_window() (in module pyart.retrieve)": [[519, "pyart.retrieve.kdp_leastsquare_double_window"], [1104, "pyart.retrieve.kdp_leastsquare_double_window"]], "kdp_leastsquare_single_window() (in module pyart.retrieve)": [[520, "pyart.retrieve.kdp_leastsquare_single_window"], [1105, "pyart.retrieve.kdp_leastsquare_single_window"]], "kdp_maesaka() (in module pyart.retrieve)": [[521, "pyart.retrieve.kdp_maesaka"], [1106, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[522, "pyart.retrieve.kdp_schneebeli"], [1107, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[523, "pyart.retrieve.kdp_vulpiani"], [1108, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[524, "pyart.retrieve.map_profile_to_gates"], [1109, "pyart.retrieve.map_profile_to_gates"]], "melting_layer_giangrande() (in module pyart.retrieve)": [[525, "pyart.retrieve.melting_layer_giangrande"], [1110, "pyart.retrieve.melting_layer_giangrande"]], "melting_layer_hydroclass() (in module pyart.retrieve)": [[526, "pyart.retrieve.melting_layer_hydroclass"], [1111, "pyart.retrieve.melting_layer_hydroclass"]], "melting_layer_mf() (in module pyart.retrieve)": [[527, "pyart.retrieve.melting_layer_mf"], [1112, "pyart.retrieve.melting_layer_mf"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[528, "pyart.retrieve.quasi_vertical_profile"], [1113, "pyart.retrieve.quasi_vertical_profile"]], "select_samples() (in module pyart.retrieve)": [[529, "pyart.retrieve.select_samples"], [1114, "pyart.retrieve.select_samples"]], "steiner_conv_strat() (in module pyart.retrieve)": [[530, "pyart.retrieve.steiner_conv_strat"], [1115, "pyart.retrieve.steiner_conv_strat"]], "synthetic_obs_distribution() (in module pyart.retrieve)": [[531, "pyart.retrieve.synthetic_obs_distribution"], [1116, "pyart.retrieve.synthetic_obs_distribution"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[532, "pyart.retrieve.texture_of_complex_phase"], [1117, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[533, "pyart.retrieve.vad_browning"], [1118, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[534, "pyart.retrieve.vad_michelson"], [1119, "pyart.retrieve.vad_michelson"]], "_debug_info() (in module pyart)": [[535, "pyart._debug_info"]], "module": [[536, "module-pyart.aux_io"], [584, "module-pyart.bridge"], [586, "module-pyart.config"], [599, "module-pyart.core"], [681, "module-pyart.correct"], [752, "module-pyart.exceptions"], [753, "module-pyart.filters"], [790, "module-pyart.graph"], [966, "module-pyart.io"], [989, "module-pyart.lazydict"], [1013, "module-pyart.map"], [1026, "module-pyart.retrieve"], [1120, "module-pyart.testing"], [1205, "module-pyart.util"]], "pyart.aux_io": [[536, "module-pyart.aux_io"]], "convert_data() (in module pyart.aux_io)": [[537, "pyart.aux_io.convert_data"]], "get_library() (in module pyart.aux_io)": [[539, "pyart.aux_io.get_library"]], "read_edge_netcdf() (in module pyart.aux_io)": [[549, "pyart.aux_io.read_edge_netcdf"]], "read_file_c() (in module pyart.aux_io)": [[550, "pyart.aux_io.read_file_c"]], "read_file_py() (in module pyart.aux_io)": [[551, "pyart.aux_io.read_file_py"]], "read_knmi_grid_h5() (in module pyart.aux_io)": [[558, "pyart.aux_io.read_knmi_grid_h5"]], "read_mch_vad() (in module pyart.aux_io)": [[559, "pyart.aux_io.read_mch_vad"]], "read_product_c() (in module pyart.aux_io)": [[567, "pyart.aux_io.read_product_c"]], "read_product_py() (in module pyart.aux_io)": [[568, "pyart.aux_io.read_product_py"]], "read_psr_cpi_header() (in module pyart.aux_io)": [[569, "pyart.aux_io.read_psr_cpi_header"]], "read_psr_header() (in module pyart.aux_io)": [[570, "pyart.aux_io.read_psr_header"]], "read_psr_spectra() (in module pyart.aux_io)": [[571, "pyart.aux_io.read_psr_spectra"]], "read_sinarame_h5() (in module pyart.aux_io)": [[576, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[582, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[584, "module-pyart.bridge"]], "pyart.config": [[586, "module-pyart.config"]], "get_ke() (in module pyart.config)": [[591, "pyart.config.get_KE"]], "pyart.core": [[599, "module-pyart.core"]], "pyart.correct": [[681, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[682, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[683, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[684, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[685, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[686, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[687, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[688, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[689, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[690, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[691, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[692, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[693, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[694, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[695, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[696, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[697, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[698, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[699, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[700, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[701, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[702, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[703, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[704, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[705, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[706, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[707, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[708, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[709, "pyart.correct.GateFilter.include_valid"]], "gauss_fit() (in module pyart.correct)": [[730, "pyart.correct.gauss_fit"]], "moment_based_gate_filter() (in module pyart.correct)": [[735, "pyart.correct.moment_based_gate_filter"]], "retrieval_result() (in module pyart.correct)": [[739, "pyart.correct.retrieval_result"]], "pyart.exceptions": [[752, "module-pyart.exceptions"]], "pyart.filters": [[753, "module-pyart.filters"]], "pyart.graph": [[790, "module-pyart.graph"]], "plot_convstrat_scheme() (in module pyart.graph)": [[965, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[966, "module-pyart.io"]], "pyart.lazydict": [[989, "module-pyart.lazydict"]], "mutablemapping (class in pyart.lazydict)": [[1003, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[1004, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[1005, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[1006, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[1007, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[1008, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[1009, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[1010, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[1011, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[1012, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[1013, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[1014, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[1015, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[1016, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[1017, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[1018, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[1019, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[1020, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[1021, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[1022, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[1023, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[1024, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[1025, "pyart.map.map_to_grid"]], "pyart.retrieve": [[1026, "module-pyart.retrieve"]], "composite_reflectivity() (in module pyart.retrieve)": [[1030, "pyart.retrieve.composite_reflectivity"]], "pyart.testing": [[1120, "module-pyart.testing"]], "grid (class in pyart.testing)": [[1121, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[1122, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[1123, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[1124, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[1125, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[1126, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[1127, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[1128, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[1129, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[1130, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[1131, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[1132, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[1133, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[1134, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[1135, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[1136, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[1137, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[1138, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[1139, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[1140, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[1141, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[1142, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[1143, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[1144, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[1145, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[1146, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[1147, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[1148, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[1149, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[1150, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[1151, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[1152, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[1153, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[1154, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[1155, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[1156, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[1157, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[1158, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[1159, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[1160, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[1161, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[1162, "pyart.testing.RadarSpectra"]], "add_field() (pyart.testing.radarspectra method)": [[1163, "pyart.testing.RadarSpectra.add_field"]], "add_field_like() (pyart.testing.radarspectra method)": [[1164, "pyart.testing.RadarSpectra.add_field_like"]], "add_filter() (pyart.testing.radarspectra method)": [[1165, "pyart.testing.RadarSpectra.add_filter"]], "check_field_exists() (pyart.testing.radarspectra method)": [[1166, "pyart.testing.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.testing.radarspectra method)": [[1167, "pyart.testing.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.testing.radarspectra method)": [[1168, "pyart.testing.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.testing.radarspectra method)": [[1169, "pyart.testing.RadarSpectra.get_elevation"]], "get_end() (pyart.testing.radarspectra method)": [[1170, "pyart.testing.RadarSpectra.get_end"]], "get_field() (pyart.testing.radarspectra method)": [[1171, "pyart.testing.RadarSpectra.get_field"]], "get_gate_area() (pyart.testing.radarspectra method)": [[1172, "pyart.testing.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radarspectra method)": [[1173, "pyart.testing.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radarspectra method)": [[1174, "pyart.testing.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radarspectra method)": [[1175, "pyart.testing.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.testing.radarspectra method)": [[1176, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[1177, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[1178, "pyart.testing.RadarSpectra.get_start_end"]], "info() (pyart.testing.radarspectra method)": [[1179, "pyart.testing.RadarSpectra.info"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[1180, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[1181, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[1182, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[1183, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[1184, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[1185, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[1186, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[1187, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[1188, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[1189, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[1190, "pyart.testing.RadarSpectra.iter_start_end"]], "get_metadata() (in module pyart.testing)": [[1191, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[1192, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[1193, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[1194, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[1195, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[1196, "pyart.testing.make_empty_spectra_radar"]], "make_normal_storm() (in module pyart.testing)": [[1197, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[1198, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[1199, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[1200, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[1201, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[1202, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[1203, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[1204, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[1205, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[1206, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[1207, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[1208, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[1209, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[1210, "pyart.util.angular_texture_2d"]], "colocated_gates() (in module pyart.util)": [[1211, "pyart.util.colocated_gates"]], "colocated_gates2() (in module pyart.util)": [[1212, "pyart.util.colocated_gates2"]], "compute_azimuthal_average() (in module pyart.util)": [[1213, "pyart.util.compute_azimuthal_average"]], "compute_corr() (in module pyart.util)": [[1214, "pyart.util.compute_corr"]], "compute_directional_stats() (in module pyart.util)": [[1215, "pyart.util.compute_directional_stats"]], "compute_mse() (in module pyart.util)": [[1216, "pyart.util.compute_mse"]], "compute_nse() (in module pyart.util)": [[1217, "pyart.util.compute_nse"]], "cross_section_ppi() (in module pyart.util)": [[1218, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[1219, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[1220, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[1221, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[1222, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[1223, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[1224, "pyart.util.datetimes_from_radar"]], "estimate_noise_hs74() (in module pyart.util)": [[1225, "pyart.util.estimate_noise_hs74"]], "estimate_noise_ivic13() (in module pyart.util)": [[1226, "pyart.util.estimate_noise_ivic13"]], "find_neighbour_gates() (in module pyart.util)": [[1227, "pyart.util.find_neighbour_gates"]], "for_azimuth() (in module pyart.util)": [[1228, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[1229, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[1230, "pyart.util.get_field_location"]], "get_ivic_flat_reg_var_max() (in module pyart.util)": [[1231, "pyart.util.get_ivic_flat_reg_var_max"]], "get_ivic_pct() (in module pyart.util)": [[1232, "pyart.util.get_ivic_pct"]], "get_ivic_snr_thr() (in module pyart.util)": [[1233, "pyart.util.get_ivic_snr_thr"]], "get_target_elevations() (in module pyart.util)": [[1234, "pyart.util.get_target_elevations"]], "grid_texture_2d() (in module pyart.util)": [[1235, "pyart.util.grid_texture_2d"]], "image_mute_radar() (in module pyart.util)": [[1236, "pyart.util.image_mute_radar"]], "interpol_spectra() (in module pyart.util)": [[1237, "pyart.util.interpol_spectra"]], "intersection() (in module pyart.util)": [[1238, "pyart.util.intersection"]], "interval_mean() (in module pyart.util)": [[1239, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[1240, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[1241, "pyart.util.is_vpt"]], "ivic_flat_reg_var_max_table() (in module pyart.util)": [[1242, "pyart.util.ivic_flat_reg_var_max_table"]], "ivic_flat_reg_wind_len_table() (in module pyart.util)": [[1243, "pyart.util.ivic_flat_reg_wind_len_table"]], "ivic_pct_table() (in module pyart.util)": [[1244, "pyart.util.ivic_pct_table"]], "ivic_snr_thr_table() (in module pyart.util)": [[1245, "pyart.util.ivic_snr_thr_table"]], "join_radar() (in module pyart.util)": [[1246, "pyart.util.join_radar"]], "join_spectra() (in module pyart.util)": [[1247, "pyart.util.join_spectra"]], "ma_broadcast_to() (in module pyart.util)": [[1248, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[1249, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[1250, "pyart.util.mean_of_two_angles_deg"]], "radar_from_spectra() (in module pyart.util)": [[1251, "pyart.util.radar_from_spectra"]], "rolling_window() (in module pyart.util)": [[1252, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[1253, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[1254, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[1255, "pyart.util.subset_radar"]], "subset_radar_spectra() (in module pyart.util)": [[1256, "pyart.util.subset_radar_spectra"]], "texture() (in module pyart.util)": [[1257, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[1258, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[1259, "pyart.util.to_vpt"]]}})