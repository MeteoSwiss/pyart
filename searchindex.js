Search.setIndex({"docnames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/generated/pyart.aux_io.read_bin", "API/generated/generated/pyart.aux_io.read_bin_mf", "API/generated/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/generated/pyart.aux_io.read_cf1", "API/generated/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/generated/pyart.aux_io.read_dat_mf", "API/generated/generated/pyart.aux_io.read_gamic", "API/generated/generated/pyart.aux_io.read_gif", "API/generated/generated/pyart.aux_io.read_grib", "API/generated/generated/pyart.aux_io.read_hpl", "API/generated/generated/pyart.aux_io.read_iq", "API/generated/generated/pyart.aux_io.read_kazr", "API/generated/generated/pyart.aux_io.read_metranet", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/generated/pyart.aux_io.read_odim_h5", "API/generated/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/generated/pyart.aux_io.read_pattern", "API/generated/generated/pyart.aux_io.read_png", "API/generated/generated/pyart.aux_io.read_radx", "API/generated/generated/pyart.aux_io.read_rainbow_psr", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/generated/pyart.aux_io.read_skyecho", "API/generated/generated/pyart.aux_io.read_spectra", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/generated/pyart.aux_io.write_odim_h5", "API/generated/generated/pyart.aux_io.write_spectra", "API/generated/generated/pyart.bridge.texture_of_complex_phase", "API/generated/generated/pyart.config.FileMetadata", "API/generated/generated/pyart.config.FileMetadata.__call__", "API/generated/generated/pyart.config.FileMetadata.get_field_name", "API/generated/generated/pyart.config.FileMetadata.get_metadata", "API/generated/generated/pyart.config.get_field_colormap", "API/generated/generated/pyart.config.get_field_limits", "API/generated/generated/pyart.config.get_field_mapping", "API/generated/generated/pyart.config.get_field_name", "API/generated/generated/pyart.config.get_fillvalue", "API/generated/generated/pyart.config.get_metadata", "API/generated/generated/pyart.config.load_config", "API/generated/generated/pyart.core.Grid", "API/generated/generated/pyart.core.Grid.add_field", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.get_projparams", "API/generated/generated/pyart.core.Grid.init_point_altitude", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/generated/pyart.core.Grid.projection_proj", "API/generated/generated/pyart.core.Grid.to_xarray", "API/generated/generated/pyart.core.Grid.write", "API/generated/generated/pyart.core.HorizontalWindProfile", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/generated/pyart.core.Radar", "API/generated/generated/pyart.core.Radar.add_field", "API/generated/generated/pyart.core.Radar.add_field_like", "API/generated/generated/pyart.core.Radar.add_filter", "API/generated/generated/pyart.core.Radar.check_field_exists", "API/generated/generated/pyart.core.Radar.extract_sweeps", "API/generated/generated/pyart.core.Radar.get_azimuth", "API/generated/generated/pyart.core.Radar.get_elevation", "API/generated/generated/pyart.core.Radar.get_end", "API/generated/generated/pyart.core.Radar.get_field", "API/generated/generated/pyart.core.Radar.get_gate_area", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/generated/pyart.core.Radar.get_slice", "API/generated/generated/pyart.core.Radar.get_start", "API/generated/generated/pyart.core.Radar.get_start_end", "API/generated/generated/pyart.core.Radar.info", "API/generated/generated/pyart.core.Radar.init_gate_altitude", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/generated/pyart.core.Radar.iter_azimuth", "API/generated/generated/pyart.core.Radar.iter_elevation", "API/generated/generated/pyart.core.Radar.iter_end", "API/generated/generated/pyart.core.Radar.iter_field", "API/generated/generated/pyart.core.Radar.iter_slice", "API/generated/generated/pyart.core.Radar.iter_start", "API/generated/generated/pyart.core.Radar.iter_start_end", "API/generated/generated/pyart.core.RadarSpectra", "API/generated/generated/pyart.core.RadarSpectra.add_field", "API/generated/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/generated/pyart.core.RadarSpectra.add_filter", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/generated/pyart.core.RadarSpectra.get_end", "API/generated/generated/pyart.core.RadarSpectra.get_field", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/generated/pyart.core.RadarSpectra.get_slice", "API/generated/generated/pyart.core.RadarSpectra.get_start", "API/generated/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/generated/pyart.core.RadarSpectra.info", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/generated/pyart.core.RadarSpectra.iter_end", "API/generated/generated/pyart.core.RadarSpectra.iter_field", "API/generated/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/generated/pyart.core.RadarSpectra.iter_start", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/generated/pyart.core.antenna_to_cartesian", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/generated/pyart.core.cartesian_to_antenna", "API/generated/generated/pyart.core.cartesian_to_geographic", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/generated/pyart.core.geographic_to_cartesian", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/generated/pyart.correct.calculate_attenuation", "API/generated/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/generated/pyart.correct.compute_apparent_vpr", "API/generated/generated/pyart.correct.compute_theoretical_vpr", "API/generated/generated/pyart.correct.correct_bias", "API/generated/generated/pyart.correct.correct_noise_rhohv", "API/generated/generated/pyart.correct.correct_sys_phase", "API/generated/generated/pyart.correct.correct_visibility", "API/generated/generated/pyart.correct.correct_vpr", "API/generated/generated/pyart.correct.correct_vpr_spatialised", "API/generated/generated/pyart.correct.dealias_fourdd", "API/generated/generated/pyart.correct.dealias_region_based", "API/generated/generated/pyart.correct.dealias_unwrap_phase", "API/generated/generated/pyart.correct.despeckle_field", "API/generated/generated/pyart.correct.det_sys_phase_ray", "API/generated/generated/pyart.correct.est_rhohv_rain", "API/generated/generated/pyart.correct.est_zdr_precip", "API/generated/generated/pyart.correct.est_zdr_snow", "API/generated/generated/pyart.correct.find_objects", "API/generated/generated/pyart.correct.get_mask_fzl", "API/generated/generated/pyart.correct.get_sun_hits", "API/generated/generated/pyart.correct.get_sun_hits_ivic", "API/generated/generated/pyart.correct.get_sun_hits_psr", "API/generated/generated/pyart.correct.phase_proc_lp", "API/generated/generated/pyart.correct.phase_proc_lp_gf", "API/generated/generated/pyart.correct.ptoa_to_sf", "API/generated/generated/pyart.correct.scanning_losses", "API/generated/generated/pyart.correct.selfconsistency_bias", "API/generated/generated/pyart.correct.selfconsistency_bias2", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/generated/pyart.correct.smooth_masked", "API/generated/generated/pyart.correct.smooth_phidp_double_window", "API/generated/generated/pyart.correct.smooth_phidp_single_window", "API/generated/generated/pyart.correct.solar_flux_lookup", "API/generated/generated/pyart.correct.sun_position_mfr", "API/generated/generated/pyart.correct.sun_position_pysolar", "API/generated/generated/pyart.correct.sun_power", "API/generated/generated/pyart.correct.sun_retrieval", "API/generated/generated/pyart.exceptions.DeprecatedAttribute", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName", "API/generated/generated/pyart.exceptions.MissingOptionalDependency", "API/generated/generated/pyart.exceptions._deprecated_alias", "API/generated/generated/pyart.filters.GateFilter", "API/generated/generated/pyart.filters.GateFilter.copy", "API/generated/generated/pyart.filters.GateFilter.exclude_above", "API/generated/generated/pyart.filters.GateFilter.exclude_all", "API/generated/generated/pyart.filters.GateFilter.exclude_below", "API/generated/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/generated/pyart.filters.GateFilter.exclude_none", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/generated/pyart.filters.GateFilter.gate_included", "API/generated/generated/pyart.filters.GateFilter.include_above", "API/generated/generated/pyart.filters.GateFilter.include_all", "API/generated/generated/pyart.filters.GateFilter.include_below", "API/generated/generated/pyart.filters.GateFilter.include_equal", "API/generated/generated/pyart.filters.GateFilter.include_gates", "API/generated/generated/pyart.filters.GateFilter.include_inside", "API/generated/generated/pyart.filters.GateFilter.include_none", "API/generated/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/generated/pyart.filters.GateFilter.include_outside", "API/generated/generated/pyart.filters.GateFilter.include_valid", "API/generated/generated/pyart.filters.birds_gate_filter", "API/generated/generated/pyart.filters.class_based_gate_filter", "API/generated/generated/pyart.filters.iso0_based_gate_filter", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/generated/pyart.filters.moment_based_gate_filter", "API/generated/generated/pyart.filters.snr_based_gate_filter", "API/generated/generated/pyart.filters.temp_based_gate_filter", "API/generated/generated/pyart.filters.visibility_based_gate_filter", "API/generated/generated/pyart.graph.AirborneRadarDisplay", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/generated/pyart.graph.GridMapDisplay", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/generated/pyart.graph.RadarDisplay", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarDisplay.plot", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplay", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/generated/pyart.io.make_time_unit_str", "API/generated/generated/pyart.io.prepare_for_read", "API/generated/generated/pyart.io.read", "API/generated/generated/pyart.io.read_arm_sonde", "API/generated/generated/pyart.io.read_arm_sonde_vap", "API/generated/generated/pyart.io.read_cfradial", "API/generated/generated/pyart.io.read_cfradial2", "API/generated/generated/pyart.io.read_chl", "API/generated/generated/pyart.io.read_grid", "API/generated/generated/pyart.io.read_grid_mdv", "API/generated/generated/pyart.io.read_mdv", "API/generated/generated/pyart.io.read_nexrad_archive", "API/generated/generated/pyart.io.read_nexrad_cdm", "API/generated/generated/pyart.io.read_nexrad_level3", "API/generated/generated/pyart.io.read_rsl", "API/generated/generated/pyart.io.read_sigmet", "API/generated/generated/pyart.io.read_uf", "API/generated/generated/pyart.io.write_cfradial", "API/generated/generated/pyart.io.write_grid", "API/generated/generated/pyart.io.write_grid_geotiff", "API/generated/generated/pyart.io.write_grid_mdv", "API/generated/generated/pyart.io.write_uf", "API/generated/generated/pyart.lazydict.LazyLoadDict", "API/generated/generated/pyart.lazydict.LazyLoadDict.__class_getitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/generated/pyart.map.example_roi_func_constant", "API/generated/generated/pyart.map.example_roi_func_dist", "API/generated/generated/pyart.map.example_roi_func_dist_beam", "API/generated/generated/pyart.map.grid_from_radars", "API/generated/generated/pyart.map.map_gates_to_grid", "API/generated/generated/pyart.map.map_to_grid", "API/generated/generated/pyart.retrieve._destandardize", "API/generated/generated/pyart.retrieve._get_res_vol_sides", "API/generated/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/generated/pyart.retrieve.compute_Doppler_width", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/generated/pyart.retrieve.compute_apparent_profile", "API/generated/generated/pyart.retrieve.compute_bird_density", "API/generated/generated/pyart.retrieve.compute_ccor", "API/generated/generated/pyart.retrieve.compute_cdr", "API/generated/generated/pyart.retrieve.compute_centroids", "API/generated/generated/pyart.retrieve.compute_differential_phase", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_evp", "API/generated/generated/pyart.retrieve.compute_iq", "API/generated/generated/pyart.retrieve.compute_l", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/generated/pyart.retrieve.compute_noise_power", "API/generated/generated/pyart.retrieve.compute_noisedBZ", "API/generated/generated/pyart.retrieve.compute_pol_variables", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/generated/pyart.retrieve.compute_qvp", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/generated/pyart.retrieve.compute_rcs", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/generated/pyart.retrieve.compute_reflectivity", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_rhohv", "API/generated/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/generated/pyart.retrieve.compute_rqvp", "API/generated/generated/pyart.retrieve.compute_signal_power", "API/generated/generated/pyart.retrieve.compute_snr", "API/generated/generated/pyart.retrieve.compute_spectra", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_noise", "API/generated/generated/pyart.retrieve.compute_spectral_phase", "API/generated/generated/pyart.retrieve.compute_spectral_power", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/generated/pyart.retrieve.compute_st1_iq", "API/generated/generated/pyart.retrieve.compute_st2_iq", "API/generated/generated/pyart.retrieve.compute_svp", "API/generated/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/generated/pyart.retrieve.compute_vol_refl", "API/generated/generated/pyart.retrieve.compute_vp", "API/generated/generated/pyart.retrieve.compute_wbn_iq", "API/generated/generated/pyart.retrieve.conv_strat_yuter", "API/generated/generated/pyart.retrieve.data_for_centroids", "API/generated/generated/pyart.retrieve.dealias_spectra", "API/generated/generated/pyart.retrieve.detect_ml", "API/generated/generated/pyart.retrieve.determine_medoids", "API/generated/generated/pyart.retrieve.est_rain_rate_a", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/generated/pyart.retrieve.est_rain_rate_z", "API/generated/generated/pyart.retrieve.est_rain_rate_za", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/generated/pyart.retrieve.est_vertical_windshear", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/generated/pyart.retrieve.est_wind_profile", "API/generated/generated/pyart.retrieve.est_wind_vel", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/generated/pyart.retrieve.gecsx", "API/generated/generated/pyart.retrieve.get_coeff_attg", "API/generated/generated/pyart.retrieve.get_freq_band", "API/generated/generated/pyart.retrieve.get_iso0_val", "API/generated/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/generated/pyart.retrieve.grid_displacement_pc", "API/generated/generated/pyart.retrieve.grid_shift", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/generated/pyart.retrieve.kdp_maesaka", "API/generated/generated/pyart.retrieve.kdp_schneebeli", "API/generated/generated/pyart.retrieve.kdp_vulpiani", "API/generated/generated/pyart.retrieve.map_profile_to_gates", "API/generated/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/generated/pyart.retrieve.melting_layer_mf", "API/generated/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/generated/pyart.retrieve.select_samples", "API/generated/generated/pyart.retrieve.steiner_conv_strat", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/generated/pyart.retrieve.vad_browning", "API/generated/generated/pyart.retrieve.vad_michelson", "API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.convert_data", "API/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/pyart.aux_io.get_library", "API/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/pyart.aux_io.read_bin", "API/generated/pyart.aux_io.read_bin_mf", "API/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/pyart.aux_io.read_cf1", "API/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_dat_mf", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_file_c", "API/generated/pyart.aux_io.read_file_py", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_gif", "API/generated/pyart.aux_io.read_grib", "API/generated/pyart.aux_io.read_hpl", "API/generated/pyart.aux_io.read_iq", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_metranet", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_png", "API/generated/pyart.aux_io.read_product_c", "API/generated/pyart.aux_io.read_product_py", "API/generated/pyart.aux_io.read_psr_cpi_header", "API/generated/pyart.aux_io.read_psr_header", "API/generated/pyart.aux_io.read_psr_spectra", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_rainbow_psr", "API/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.read_skyecho", "API/generated/pyart.aux_io.read_spectra", "API/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/pyart.aux_io.write_odim_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.aux_io.write_spectra", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.add_field", "API/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/pyart.core.RadarSpectra.add_filter", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_field", "API/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.info", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.compute_apparent_vpr", "API/generated/pyart.correct.compute_theoretical_vpr", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.correct_sys_phase", "API/generated/pyart.correct.correct_visibility", "API/generated/pyart.correct.correct_vpr", "API/generated/pyart.correct.correct_vpr_spatialised", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.det_sys_phase_ray", "API/generated/pyart.correct.est_rhohv_rain", "API/generated/pyart.correct.est_zdr_precip", "API/generated/pyart.correct.est_zdr_snow", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.gauss_fit", "API/generated/pyart.correct.get_mask_fzl", "API/generated/pyart.correct.get_sun_hits", "API/generated/pyart.correct.get_sun_hits_ivic", "API/generated/pyart.correct.get_sun_hits_psr", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.ptoa_to_sf", "API/generated/pyart.correct.retrieval_result", "API/generated/pyart.correct.scanning_losses", "API/generated/pyart.correct.selfconsistency_bias", "API/generated/pyart.correct.selfconsistency_bias2", "API/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/pyart.correct.smooth_masked", "API/generated/pyart.correct.smooth_phidp_double_window", "API/generated/pyart.correct.smooth_phidp_single_window", "API/generated/pyart.correct.solar_flux_lookup", "API/generated/pyart.correct.sun_position_mfr", "API/generated/pyart.correct.sun_position_pysolar", "API/generated/pyart.correct.sun_power", "API/generated/pyart.correct.sun_retrieval", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.birds_gate_filter", "API/generated/pyart.filters.class_based_gate_filter", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.snr_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.filters.visibility_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.make_time_unit_str", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_cfradial2", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.get_earth_radius", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.map.polar_to_cartesian", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/pyart.retrieve.compute_Doppler_width", "API/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/pyart.retrieve.compute_apparent_profile", "API/generated/pyart.retrieve.compute_bird_density", "API/generated/pyart.retrieve.compute_ccor", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_centroids", "API/generated/pyart.retrieve.compute_differential_phase", "API/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_iq", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/pyart.retrieve.compute_noise_power", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_pol_variables", "API/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/pyart.retrieve.compute_rcs", "API/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/pyart.retrieve.compute_reflectivity", "API/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/pyart.retrieve.compute_rhohv", "API/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_signal_power", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_spectra", "API/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/pyart.retrieve.compute_spectral_noise", "API/generated/pyart.retrieve.compute_spectral_phase", "API/generated/pyart.retrieve.compute_spectral_power", "API/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/pyart.retrieve.compute_st1_iq", "API/generated/pyart.retrieve.compute_st2_iq", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vol_refl", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.compute_wbn_iq", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.data_for_centroids", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.detect_ml", "API/generated/pyart.retrieve.determine_medoids", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.est_vertical_windshear", "API/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/pyart.retrieve.est_wind_profile", "API/generated/pyart.retrieve.est_wind_vel", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.gecsx", "API/generated/pyart.retrieve.get_coeff_attg", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.get_iso0_val", "API/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/pyart.retrieve.melting_layer_mf", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.select_samples", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.add_field", "API/generated/pyart.testing.RadarSpectra.add_field_like", "API/generated/pyart.testing.RadarSpectra.add_filter", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.extract_sweeps", "API/generated/pyart.testing.RadarSpectra.get_azimuth", "API/generated/pyart.testing.RadarSpectra.get_elevation", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_field", "API/generated/pyart.testing.RadarSpectra.get_gate_area", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.info", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.colocated_gates", "API/generated/pyart.util.colocated_gates2", "API/generated/pyart.util.compute_azimuthal_average", "API/generated/pyart.util.compute_corr", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.compute_mse", "API/generated/pyart.util.compute_nse", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.estimate_noise_ivic13", "API/generated/pyart.util.find_neighbour_gates", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/pyart.util.get_ivic_pct", "API/generated/pyart.util.get_ivic_snr_thr", "API/generated/pyart.util.get_target_elevations", "API/generated/pyart.util.grid_texture_2d", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interpol_spectra", "API/generated/pyart.util.intersection", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/pyart.util.ivic_pct_table", "API/generated/pyart.util.ivic_snr_thr_table", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.join_spectra", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.radar_from_spectra", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.subset_radar_spectra", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "changelog", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/swiss_doppler", "notebooks/swiss_thunderstorm", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/generated/pyart.aux_io.read_bin.rst", "API/generated/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/generated/pyart.aux_io.read_cf1.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/generated/pyart.aux_io.read_gamic.rst", "API/generated/generated/pyart.aux_io.read_gif.rst", "API/generated/generated/pyart.aux_io.read_grib.rst", "API/generated/generated/pyart.aux_io.read_hpl.rst", "API/generated/generated/pyart.aux_io.read_iq.rst", "API/generated/generated/pyart.aux_io.read_kazr.rst", "API/generated/generated/pyart.aux_io.read_metranet.rst", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/generated/pyart.aux_io.read_pattern.rst", "API/generated/generated/pyart.aux_io.read_png.rst", "API/generated/generated/pyart.aux_io.read_radx.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/generated/pyart.aux_io.read_skyecho.rst", "API/generated/generated/pyart.aux_io.read_spectra.rst", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/generated/pyart.aux_io.write_spectra.rst", "API/generated/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/generated/pyart.config.FileMetadata.rst", "API/generated/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/generated/pyart.config.get_field_colormap.rst", "API/generated/generated/pyart.config.get_field_limits.rst", "API/generated/generated/pyart.config.get_field_mapping.rst", "API/generated/generated/pyart.config.get_field_name.rst", "API/generated/generated/pyart.config.get_fillvalue.rst", "API/generated/generated/pyart.config.get_metadata.rst", "API/generated/generated/pyart.config.load_config.rst", "API/generated/generated/pyart.core.Grid.rst", "API/generated/generated/pyart.core.Grid.add_field.rst", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.get_projparams.rst", "API/generated/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/generated/pyart.core.Grid.projection_proj.rst", "API/generated/generated/pyart.core.Grid.to_xarray.rst", "API/generated/generated/pyart.core.Grid.write.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/generated/pyart.core.Radar.rst", "API/generated/generated/pyart.core.Radar.add_field.rst", "API/generated/generated/pyart.core.Radar.add_field_like.rst", "API/generated/generated/pyart.core.Radar.add_filter.rst", "API/generated/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/generated/pyart.core.Radar.get_elevation.rst", "API/generated/generated/pyart.core.Radar.get_end.rst", "API/generated/generated/pyart.core.Radar.get_field.rst", "API/generated/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/generated/pyart.core.Radar.get_slice.rst", "API/generated/generated/pyart.core.Radar.get_start.rst", "API/generated/generated/pyart.core.Radar.get_start_end.rst", "API/generated/generated/pyart.core.Radar.info.rst", "API/generated/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/generated/pyart.core.Radar.iter_end.rst", "API/generated/generated/pyart.core.Radar.iter_field.rst", "API/generated/generated/pyart.core.Radar.iter_slice.rst", "API/generated/generated/pyart.core.Radar.iter_start.rst", "API/generated/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.info.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/generated/pyart.correct.calculate_attenuation.rst", "API/generated/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/generated/pyart.correct.correct_bias.rst", "API/generated/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/generated/pyart.correct.correct_sys_phase.rst", "API/generated/generated/pyart.correct.correct_visibility.rst", "API/generated/generated/pyart.correct.correct_vpr.rst", "API/generated/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/generated/pyart.correct.dealias_fourdd.rst", "API/generated/generated/pyart.correct.dealias_region_based.rst", "API/generated/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/generated/pyart.correct.despeckle_field.rst", "API/generated/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/generated/pyart.correct.est_zdr_precip.rst", "API/generated/generated/pyart.correct.est_zdr_snow.rst", "API/generated/generated/pyart.correct.find_objects.rst", "API/generated/generated/pyart.correct.get_mask_fzl.rst", "API/generated/generated/pyart.correct.get_sun_hits.rst", "API/generated/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/generated/pyart.correct.phase_proc_lp.rst", "API/generated/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/generated/pyart.correct.scanning_losses.rst", "API/generated/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/generated/pyart.correct.smooth_masked.rst", "API/generated/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/generated/pyart.correct.sun_position_mfr.rst", "API/generated/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/generated/pyart.correct.sun_power.rst", "API/generated/generated/pyart.correct.sun_retrieval.rst", "API/generated/generated/pyart.exceptions.DeprecatedAttribute.rst", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName.rst", "API/generated/generated/pyart.exceptions.MissingOptionalDependency.rst", "API/generated/generated/pyart.exceptions._deprecated_alias.rst", "API/generated/generated/pyart.filters.GateFilter.rst", "API/generated/generated/pyart.filters.GateFilter.copy.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/generated/pyart.filters.birds_gate_filter.rst", "API/generated/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.GridMapDisplay.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.RadarDisplay.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/generated/pyart.io.make_time_unit_str.rst", "API/generated/generated/pyart.io.prepare_for_read.rst", "API/generated/generated/pyart.io.read.rst", "API/generated/generated/pyart.io.read_arm_sonde.rst", "API/generated/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/generated/pyart.io.read_cfradial.rst", "API/generated/generated/pyart.io.read_cfradial2.rst", "API/generated/generated/pyart.io.read_chl.rst", "API/generated/generated/pyart.io.read_grid.rst", "API/generated/generated/pyart.io.read_grid_mdv.rst", "API/generated/generated/pyart.io.read_mdv.rst", "API/generated/generated/pyart.io.read_nexrad_archive.rst", "API/generated/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/generated/pyart.io.read_nexrad_level3.rst", "API/generated/generated/pyart.io.read_rsl.rst", "API/generated/generated/pyart.io.read_sigmet.rst", "API/generated/generated/pyart.io.read_uf.rst", "API/generated/generated/pyart.io.write_cfradial.rst", "API/generated/generated/pyart.io.write_grid.rst", "API/generated/generated/pyart.io.write_grid_geotiff.rst", "API/generated/generated/pyart.io.write_grid_mdv.rst", "API/generated/generated/pyart.io.write_uf.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__class_getitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/generated/pyart.map.example_roi_func_constant.rst", "API/generated/generated/pyart.map.example_roi_func_dist.rst", "API/generated/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/generated/pyart.map.grid_from_radars.rst", "API/generated/generated/pyart.map.map_gates_to_grid.rst", "API/generated/generated/pyart.map.map_to_grid.rst", "API/generated/generated/pyart.retrieve._destandardize.rst", "API/generated/generated/pyart.retrieve._get_res_vol_sides.rst", "API/generated/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/generated/pyart.retrieve.compute_ccor.rst", "API/generated/generated/pyart.retrieve.compute_cdr.rst", "API/generated/generated/pyart.retrieve.compute_centroids.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_evp.rst", "API/generated/generated/pyart.retrieve.compute_iq.rst", "API/generated/generated/pyart.retrieve.compute_l.rst", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/generated/pyart.retrieve.compute_qvp.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/generated/pyart.retrieve.compute_rcs.rst", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/generated/pyart.retrieve.compute_snr.rst", "API/generated/generated/pyart.retrieve.compute_spectra.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/generated/pyart.retrieve.compute_svp.rst", "API/generated/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/generated/pyart.retrieve.compute_vp.rst", "API/generated/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/generated/pyart.retrieve.detect_ml.rst", "API/generated/generated/pyart.retrieve.determine_medoids.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/generated/pyart.retrieve.gecsx.rst", "API/generated/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/generated/pyart.retrieve.get_freq_band.rst", "API/generated/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/generated/pyart.retrieve.grid_shift.rst", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/generated/pyart.retrieve.select_samples.rst", "API/generated/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/generated/pyart.retrieve.vad_browning.rst", "API/generated/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.convert_data.rst", "API/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/pyart.aux_io.get_library.rst", "API/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/pyart.aux_io.read_bin.rst", "API/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/pyart.aux_io.read_cf1.rst", "API/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_file_c.rst", "API/generated/pyart.aux_io.read_file_py.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_gif.rst", "API/generated/pyart.aux_io.read_grib.rst", "API/generated/pyart.aux_io.read_hpl.rst", "API/generated/pyart.aux_io.read_iq.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_metranet.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_png.rst", "API/generated/pyart.aux_io.read_product_c.rst", "API/generated/pyart.aux_io.read_product_py.rst", "API/generated/pyart.aux_io.read_psr_cpi_header.rst", "API/generated/pyart.aux_io.read_psr_header.rst", "API/generated/pyart.aux_io.read_psr_spectra.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.read_skyecho.rst", "API/generated/pyart.aux_io.read_spectra.rst", "API/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.aux_io.write_spectra.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.info.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.correct_sys_phase.rst", "API/generated/pyart.correct.correct_visibility.rst", "API/generated/pyart.correct.correct_vpr.rst", "API/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/pyart.correct.est_zdr_precip.rst", "API/generated/pyart.correct.est_zdr_snow.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.gauss_fit.rst", "API/generated/pyart.correct.get_mask_fzl.rst", "API/generated/pyart.correct.get_sun_hits.rst", "API/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/pyart.correct.retrieval_result.rst", "API/generated/pyart.correct.scanning_losses.rst", "API/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/pyart.correct.smooth_masked.rst", "API/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/pyart.correct.sun_position_mfr.rst", "API/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/pyart.correct.sun_power.rst", "API/generated/pyart.correct.sun_retrieval.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.birds_gate_filter.rst", "API/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.make_time_unit_str.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_cfradial2.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.get_earth_radius.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.map.polar_to_cartesian.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/pyart.retrieve.compute_ccor.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_centroids.rst", "API/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_iq.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/pyart.retrieve.compute_rcs.rst", "API/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_spectra.rst", "API/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.detect_ml.rst", "API/generated/pyart.retrieve.determine_medoids.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.gecsx.rst", "API/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.select_samples.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.add_field.rst", "API/generated/pyart.testing.RadarSpectra.add_field_like.rst", "API/generated/pyart.testing.RadarSpectra.add_filter.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.testing.RadarSpectra.get_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.get_elevation.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_field.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_area.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.info.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.colocated_gates.rst", "API/generated/pyart.util.colocated_gates2.rst", "API/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/pyart.util.compute_corr.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.compute_mse.rst", "API/generated/pyart.util.compute_nse.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/pyart.util.find_neighbour_gates.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/pyart.util.get_ivic_pct.rst", "API/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/pyart.util.get_target_elevations.rst", "API/generated/pyart.util.grid_texture_2d.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interpol_spectra.rst", "API/generated/pyart.util.intersection.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/pyart.util.ivic_pct_table.rst", "API/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.join_spectra.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.radar_from_spectra.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.subset_radar_spectra.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "changelog.md", "examples/correct/index.rst", "examples/correct/plot_attenuation.ipynb", "examples/correct/plot_dealias.ipynb", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.ipynb", "examples/io/plot_older_nexrad_data_aws.ipynb", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.ipynb", "examples/mapping/plot_map_one_radar_to_grid.ipynb", "examples/mapping/plot_map_two_radars_to_grid.ipynb", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.ipynb", "examples/plotting/plot_cross_section.ipynb", "examples/plotting/plot_modify_colorbar.ipynb", "examples/plotting/plot_nexrad_image_muted_reflectivity.ipynb", "examples/plotting/plot_nexrad_multiple_moments.ipynb", "examples/plotting/plot_nexrad_reflectivity.ipynb", "examples/plotting/plot_ppi_cfradial.ipynb", "examples/plotting/plot_ppi_mdv.ipynb", "examples/plotting/plot_ppi_with_rings.ipynb", "examples/plotting/plot_rhi_cfradial.ipynb", "examples/plotting/plot_rhi_cfradial_singlescan.ipynb", "examples/plotting/plot_rhi_contours_differential_reflectivity.ipynb", "examples/plotting/plot_rhi_data_overlay.ipynb", "examples/plotting/plot_rhi_mdv.ipynb", "examples/plotting/plot_rhi_two_panel.ipynb", "examples/plotting/plot_three_panel_gridmapdisplay.ipynb", "examples/plotting/plot_xsect.ipynb", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.ipynb", "examples/retrieve/plot_composite_reflectivity.ipynb", "examples/retrieve/plot_convective_stratiform.ipynb", "examples/retrieve/plot_hydrometeor.ipynb", "examples/retrieve/plot_vad.ipynb", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/swiss_doppler.ipynb", "notebooks/swiss_thunderstorm.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_spectra", "pyart.bridge.texture_of_complex_phase", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions.DeprecatedAttribute", "pyart.exceptions.DeprecatedFunctionName", "pyart.exceptions.MissingOptionalDependency", "pyart.exceptions._deprecated_alias", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.__class_getitem__", "pyart.lazydict.LazyLoadDict.__contains__", "pyart.lazydict.LazyLoadDict.__delattr__", "pyart.lazydict.LazyLoadDict.__delitem__", "pyart.lazydict.LazyLoadDict.__dir__", "pyart.lazydict.LazyLoadDict.__eq__", "pyart.lazydict.LazyLoadDict.__format__", "pyart.lazydict.LazyLoadDict.__ge__", "pyart.lazydict.LazyLoadDict.__getattribute__", "pyart.lazydict.LazyLoadDict.__getitem__", "pyart.lazydict.LazyLoadDict.__getstate__", "pyart.lazydict.LazyLoadDict.__gt__", "pyart.lazydict.LazyLoadDict.__init__", "pyart.lazydict.LazyLoadDict.__init_subclass__", "pyart.lazydict.LazyLoadDict.__iter__", "pyart.lazydict.LazyLoadDict.__le__", "pyart.lazydict.LazyLoadDict.__len__", "pyart.lazydict.LazyLoadDict.__lt__", "pyart.lazydict.LazyLoadDict.__ne__", "pyart.lazydict.LazyLoadDict.__new__", "pyart.lazydict.LazyLoadDict.__reduce__", "pyart.lazydict.LazyLoadDict.__reduce_ex__", "pyart.lazydict.LazyLoadDict.__repr__", "pyart.lazydict.LazyLoadDict.__setattr__", "pyart.lazydict.LazyLoadDict.__setitem__", "pyart.lazydict.LazyLoadDict.__sizeof__", "pyart.lazydict.LazyLoadDict.__str__", "pyart.lazydict.LazyLoadDict.__subclasshook__", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve._destandardize", "pyart.retrieve._get_res_vol_sides", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart._debug_info", "pyart.aux_io", "pyart.aux_io.convert_data", "pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_library", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_file_c", "pyart.aux_io.read_file_py", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_product_c", "pyart.aux_io.read_product_py", "pyart.aux_io.read_psr_cpi_header", "pyart.aux_io.read_psr_header", "pyart.aux_io.read_psr_spectra", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.gauss_fit", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.retrieval_result", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.get_earth_radius", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.map.polar_to_cartesian", "pyart.retrieve", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.add_field", "pyart.testing.RadarSpectra.add_field_like", "pyart.testing.RadarSpectra.add_filter", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.extract_sweeps", "pyart.testing.RadarSpectra.get_azimuth", "pyart.testing.RadarSpectra.get_elevation", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_field", "pyart.testing.RadarSpectra.get_gate_area", "pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "pyart.testing.RadarSpectra.get_gate_x_y_z", "pyart.testing.RadarSpectra.get_nyquist_vel", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.info", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Manual", "Changelog", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "About the MeteoSwiss fork of Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "Processing of Doppler wind data from a Swiss volumetric scan", "Filtering and retrievals on raw Swiss C-band data", "The Py-ART Radar object and indexing", "Computation times", "Installation", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"filenam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44, 54, 207, 243, 259, 274, 307, 333, 344, 370, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 602, 613, 797, 833, 849, 864, 897, 923, 934, 960, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 1134, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1320], "basepath": [0, 545], "none": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 45, 55, 59, 62, 70, 71, 88, 91, 99, 100, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 164, 197, 198, 199, 200, 201, 202, 203, 204, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 430, 432, 440, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 539, 540, 541, 542, 545, 548, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 590, 592, 594, 597, 602, 604, 614, 618, 621, 629, 630, 647, 650, 658, 659, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 745, 746, 747, 749, 750, 755, 786, 787, 788, 789, 790, 791, 792, 793, 799, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 854, 855, 856, 857, 858, 859, 860, 861, 862, 866, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 899, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 917, 918, 921, 922, 923, 925, 926, 927, 928, 929, 930, 931, 932, 936, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 955, 958, 959, 960, 962, 963, 964, 965, 966, 967, 968, 969, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 995, 997, 1005, 1008, 1009, 1015, 1018, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1125, 1135, 1137, 1140, 1148, 1149, 1166, 1169, 1177, 1178, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1231, 1240, 1242, 1257, 1259, 1260, 1283, 1292, 1302, 1316, 1317, 1320], "sweep_dir": [0, 545], "dir_timeformat": [0, 545], "y": [0, 3, 9, 22, 45, 51, 53, 71, 79, 100, 108, 117, 118, 119, 120, 121, 122, 123, 124, 205, 207, 219, 222, 224, 227, 229, 232, 233, 234, 235, 236, 238, 249, 251, 255, 257, 267, 269, 271, 272, 274, 286, 289, 291, 294, 296, 299, 300, 301, 302, 304, 305, 307, 319, 322, 324, 327, 330, 332, 336, 337, 338, 339, 341, 342, 344, 356, 359, 361, 364, 367, 369, 373, 374, 375, 376, 378, 442, 443, 444, 445, 446, 447, 501, 523, 524, 537, 545, 549, 555, 571, 604, 610, 612, 630, 638, 659, 667, 676, 677, 678, 679, 680, 681, 682, 683, 795, 797, 809, 812, 814, 817, 819, 822, 823, 824, 825, 826, 828, 839, 841, 845, 847, 857, 859, 861, 862, 864, 876, 879, 881, 884, 886, 889, 890, 891, 892, 894, 895, 897, 909, 912, 914, 917, 920, 922, 926, 927, 928, 929, 931, 932, 934, 946, 949, 951, 954, 957, 959, 963, 964, 965, 966, 968, 1018, 1022, 1023, 1024, 1026, 1027, 1028, 1083, 1105, 1106, 1119, 1125, 1131, 1133, 1149, 1157, 1178, 1186, 1197, 1239, 1276, 1282, 1283, 1292, 1293, 1300, 1302, 1315], "m": [0, 3, 9, 14, 16, 22, 24, 25, 69, 72, 98, 101, 119, 125, 129, 130, 135, 136, 139, 146, 147, 152, 154, 155, 156, 160, 163, 197, 199, 203, 207, 274, 307, 344, 445, 457, 466, 471, 474, 476, 483, 496, 497, 499, 506, 518, 522, 523, 525, 528, 529, 532, 534, 535, 537, 545, 546, 549, 555, 563, 565, 571, 578, 579, 628, 631, 657, 660, 678, 684, 717, 718, 723, 724, 727, 735, 736, 742, 745, 746, 747, 751, 754, 786, 788, 792, 797, 864, 897, 934, 1026, 1029, 1039, 1048, 1053, 1056, 1058, 1065, 1078, 1079, 1081, 1088, 1100, 1104, 1105, 1107, 1110, 1111, 1114, 1116, 1117, 1119, 1147, 1150, 1176, 1179, 1215, 1216, 1230, 1231, 1240, 1242, 1259, 1260, 1272, 1284, 1293, 1302, 1304, 1307, 1315, 1316, 1319, 1320], "d": [0, 3, 9, 22, 128, 139, 207, 274, 307, 344, 401, 430, 432, 434, 435, 436, 437, 439, 440, 441, 483, 496, 504, 530, 541, 545, 549, 555, 571, 716, 727, 797, 864, 897, 934, 994, 995, 997, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1065, 1078, 1086, 1112, 1123, 1300, 1320], "file_prefix": [0, 545], "sweep_start_tim": [0, 545], "sweep_end_tim": [0, 27, 545, 582], "field_nam": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36, 46, 60, 61, 63, 68, 84, 89, 90, 92, 97, 113, 131, 134, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 448, 466, 474, 483, 496, 497, 499, 545, 549, 551, 552, 553, 554, 555, 559, 561, 563, 564, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 582, 583, 584, 585, 586, 592, 594, 605, 619, 620, 622, 627, 643, 648, 649, 651, 656, 672, 719, 722, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 1029, 1048, 1056, 1065, 1078, 1079, 1081, 1126, 1138, 1139, 1141, 1146, 1162, 1167, 1168, 1170, 1175, 1191, 1217, 1259, 1260, 1276, 1313], "additional_metadata": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 34, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 545, 548, 549, 550, 551, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 582, 583, 584, 592, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987], "file_field_nam": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 36, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 545, 551, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 592, 594, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 992], "fals": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 30, 31, 32, 34, 46, 47, 54, 60, 61, 62, 65, 66, 68, 70, 71, 72, 89, 90, 91, 94, 95, 97, 99, 100, 101, 118, 122, 125, 126, 135, 137, 138, 139, 150, 151, 154, 155, 164, 169, 171, 173, 175, 181, 182, 185, 187, 189, 194, 195, 207, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 264, 267, 269, 271, 274, 289, 291, 296, 299, 300, 301, 302, 307, 322, 324, 332, 333, 336, 337, 338, 339, 344, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 429, 433, 446, 447, 452, 461, 465, 472, 473, 475, 476, 478, 480, 481, 482, 487, 488, 491, 492, 493, 501, 504, 505, 507, 516, 525, 526, 527, 528, 529, 530, 532, 533, 545, 546, 551, 552, 553, 554, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 572, 573, 578, 579, 580, 581, 582, 583, 585, 586, 588, 592, 605, 606, 613, 619, 620, 621, 624, 625, 627, 629, 630, 631, 648, 649, 650, 653, 654, 656, 658, 659, 660, 677, 681, 684, 686, 688, 690, 692, 698, 699, 702, 704, 706, 711, 712, 714, 723, 725, 726, 727, 740, 741, 745, 746, 755, 758, 760, 762, 764, 770, 771, 774, 776, 778, 783, 784, 797, 812, 814, 819, 822, 823, 824, 825, 826, 829, 839, 841, 842, 843, 845, 847, 848, 854, 857, 859, 861, 864, 879, 881, 886, 889, 890, 891, 892, 897, 912, 914, 922, 923, 926, 927, 928, 929, 934, 949, 951, 959, 960, 963, 964, 965, 966, 969, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 998, 1027, 1028, 1033, 1043, 1047, 1054, 1055, 1057, 1058, 1060, 1062, 1063, 1064, 1069, 1070, 1073, 1074, 1075, 1083, 1086, 1087, 1089, 1098, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1126, 1127, 1134, 1135, 1138, 1139, 1140, 1143, 1144, 1146, 1148, 1149, 1150, 1167, 1168, 1169, 1172, 1173, 1175, 1177, 1178, 1179, 1207, 1208, 1224, 1225, 1226, 1227, 1228, 1230, 1235, 1237, 1245, 1249, 1263, 1283, 1290, 1292, 1293, 1295, 1302, 1309, 1310, 1314, 1317, 1320], "exclude_field": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 545, 551, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 592, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 992], "include_field": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 62, 91, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 545, 551, 554, 559, 563, 564, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 592, 621, 650, 976, 977, 978, 979, 981, 982, 983, 984, 985, 986, 987, 988, 989, 1140, 1169], "kwarg": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 137, 138, 139, 221, 222, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 264, 267, 268, 269, 270, 271, 288, 289, 296, 300, 301, 302, 321, 322, 329, 330, 331, 332, 333, 334, 337, 338, 339, 358, 359, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 421, 445, 446, 447, 528, 545, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 563, 565, 566, 567, 568, 569, 570, 571, 577, 578, 579, 580, 581, 582, 583, 725, 726, 727, 811, 812, 819, 823, 824, 825, 826, 838, 839, 841, 842, 843, 844, 845, 846, 847, 854, 857, 858, 859, 860, 861, 878, 879, 886, 890, 891, 892, 911, 912, 919, 920, 921, 922, 923, 924, 927, 928, 929, 948, 949, 956, 957, 958, 959, 960, 961, 964, 965, 966, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 1026, 1027, 1028, 1110, 1224, 1225, 1226, 1227, 1228, 1315], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 105, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215, 219, 220, 221, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 329, 330, 331, 333, 334, 342, 366, 367, 368, 370, 371, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 411, 414, 416, 418, 426, 428, 431, 433, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 664, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 805, 809, 810, 811, 824, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 919, 920, 921, 923, 924, 932, 956, 957, 958, 960, 961, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 996, 998, 1003, 1018, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1171, 1183, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1270, 1276, 1307, 1309, 1310, 1311, 1313, 1314, 1317, 1320, 1322], "read": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 36, 169, 222, 233, 289, 300, 322, 337, 359, 374, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 592, 594, 686, 758, 812, 823, 879, 890, 912, 927, 949, 964, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 992, 1265, 1267, 1268, 1270, 1271, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1287, 1289, 1292, 1293, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1307, 1309, 1310, 1311, 1313, 1314, 1317], "skyecho": [0, 1, 27, 545, 547, 582], "netcdf": [0, 1, 5, 6, 7, 8, 13, 15, 17, 21, 27, 28, 32, 54, 382, 383, 384, 385, 387, 391, 396, 397, 517, 545, 547, 551, 552, 553, 554, 556, 562, 564, 566, 570, 582, 583, 588, 613, 974, 975, 976, 977, 979, 983, 988, 989, 1099, 1134, 1224, 1227, 1307, 1308], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 44, 54, 59, 76, 88, 105, 126, 127, 128, 133, 137, 138, 139, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 197, 198, 199, 200, 201, 202, 203, 204, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 451, 453, 454, 455, 456, 462, 463, 464, 465, 469, 470, 472, 473, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 500, 501, 502, 503, 504, 518, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 539, 542, 543, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 594, 596, 597, 598, 599, 602, 613, 618, 635, 647, 664, 714, 715, 716, 721, 725, 726, 727, 729, 730, 731, 732, 735, 739, 740, 741, 745, 746, 747, 749, 750, 786, 787, 788, 789, 790, 791, 792, 793, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 1032, 1035, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1051, 1052, 1054, 1055, 1061, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1086, 1100, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1121, 1124, 1134, 1137, 1154, 1166, 1183, 1196, 1257, 1265, 1267, 1269, 1270, 1272, 1273, 1274, 1277, 1279, 1280, 1281, 1284, 1286, 1289, 1295, 1296, 1297, 1298, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1314, 1315, 1316, 1317, 1318, 1319, 1322], "creat": [0, 30, 31, 32, 45, 56, 59, 61, 64, 88, 90, 93, 137, 138, 139, 140, 168, 197, 198, 199, 200, 201, 202, 203, 204, 205, 221, 235, 239, 258, 272, 288, 301, 305, 321, 333, 338, 342, 358, 370, 375, 391, 396, 397, 398, 399, 400, 446, 447, 466, 474, 483, 496, 497, 499, 515, 535, 540, 541, 545, 585, 586, 588, 604, 615, 618, 620, 623, 647, 649, 652, 725, 726, 727, 728, 739, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 811, 825, 829, 848, 862, 878, 891, 895, 911, 923, 928, 932, 948, 960, 965, 983, 988, 989, 990, 991, 992, 1027, 1028, 1048, 1056, 1065, 1078, 1079, 1081, 1097, 1117, 1122, 1123, 1125, 1135, 1137, 1139, 1142, 1166, 1168, 1171, 1256, 1257, 1267, 1268, 1270, 1273, 1276, 1277, 1278, 1280, 1281, 1283, 1297, 1302, 1307, 1308, 1310, 1313, 1315, 1316, 1320], "new": [0, 44, 61, 62, 64, 90, 91, 93, 140, 173, 175, 182, 189, 194, 466, 474, 483, 496, 497, 499, 524, 535, 540, 545, 602, 620, 621, 623, 649, 650, 652, 690, 692, 699, 706, 711, 728, 762, 764, 771, 778, 783, 1048, 1056, 1065, 1078, 1079, 1081, 1106, 1117, 1122, 1139, 1140, 1142, 1168, 1169, 1171, 1217, 1240, 1255, 1259, 1260, 1276, 1300, 1303, 1307, 1310, 1311, 1320, 1322], "cf": [0, 5, 6, 7, 13, 23, 28, 32, 59, 88, 384, 385, 396, 397, 517, 545, 551, 552, 553, 562, 577, 583, 588, 618, 647, 976, 977, 988, 989, 1099, 1137, 1166, 1270, 1280, 1307, 1317], "radial": [0, 5, 6, 7, 13, 23, 28, 32, 59, 88, 137, 138, 384, 385, 396, 452, 475, 476, 515, 516, 528, 540, 541, 545, 551, 552, 553, 562, 577, 583, 588, 618, 647, 725, 726, 976, 977, 988, 1033, 1057, 1058, 1097, 1098, 1110, 1122, 1123, 1137, 1166, 1214, 1230, 1257, 1266, 1270, 1272, 1280, 1307, 1311, 1315, 1317], "singl": [0, 31, 44, 138, 139, 140, 145, 154, 227, 228, 230, 232, 294, 295, 297, 299, 327, 328, 334, 336, 364, 365, 371, 373, 398, 447, 545, 586, 602, 726, 727, 728, 733, 745, 817, 818, 820, 822, 884, 885, 887, 889, 917, 918, 924, 926, 954, 955, 961, 963, 990, 1028, 1202, 1263, 1270, 1272, 1275, 1276, 1300, 1315, 1320], "sweep": [0, 1, 27, 31, 39, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 114, 115, 116, 137, 138, 139, 142, 145, 147, 148, 182, 194, 197, 200, 201, 207, 209, 221, 222, 224, 229, 233, 234, 235, 236, 274, 276, 288, 289, 291, 296, 300, 301, 302, 307, 309, 321, 322, 324, 332, 333, 337, 338, 339, 344, 346, 358, 359, 361, 369, 370, 374, 375, 376, 390, 391, 392, 394, 452, 474, 496, 540, 545, 547, 582, 586, 597, 618, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 640, 641, 642, 643, 644, 645, 646, 647, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 669, 670, 671, 672, 673, 674, 675, 699, 711, 725, 726, 727, 730, 733, 736, 737, 739, 771, 783, 786, 789, 790, 797, 799, 811, 812, 814, 819, 823, 824, 825, 826, 864, 866, 878, 879, 881, 886, 890, 891, 892, 897, 899, 911, 912, 914, 922, 923, 927, 928, 929, 934, 936, 948, 949, 951, 959, 960, 964, 965, 966, 982, 983, 984, 986, 1018, 1029, 1033, 1056, 1078, 1122, 1137, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1198, 1199, 1222, 1223, 1265, 1268, 1272, 1276, 1292, 1293, 1295, 1300, 1302, 1304, 1311, 1314, 1315, 1316, 1317], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 76, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 105, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 597, 598, 601, 602, 604, 605, 606, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 635, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 664, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 690, 692, 699, 706, 711, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 758, 762, 764, 771, 778, 783, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 1018, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1134, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1154, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1183, 1195, 1196, 1197, 1198, 1199, 1200, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1259, 1260, 1262, 1263, 1296, 1302, 1310, 1311, 1313, 1317, 1319, 1320], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 54, 59, 60, 61, 63, 68, 88, 89, 90, 92, 97, 120, 122, 123, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 168, 173, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 408, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 520, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 594, 595, 597, 598, 602, 604, 605, 613, 618, 619, 620, 622, 627, 647, 648, 649, 651, 656, 679, 681, 682, 690, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 745, 746, 747, 748, 749, 750, 762, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 878, 879, 880, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 900, 901, 911, 912, 913, 914, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 932, 933, 934, 935, 936, 937, 938, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 1020, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1120, 1121, 1125, 1126, 1134, 1137, 1138, 1139, 1141, 1146, 1166, 1167, 1168, 1170, 1175, 1196, 1217, 1219, 1240, 1257, 1259, 1260, 1262], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 38, 39, 40, 41, 44, 45, 46, 59, 60, 61, 63, 68, 76, 88, 89, 90, 92, 97, 105, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 168, 173, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 404, 410, 425, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 543, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 590, 592, 594, 596, 597, 598, 599, 602, 604, 605, 618, 619, 620, 622, 627, 635, 647, 648, 649, 651, 656, 664, 690, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 745, 746, 747, 749, 750, 762, 786, 787, 788, 789, 790, 791, 792, 793, 812, 814, 819, 822, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 990, 991, 992, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1102, 1103, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1120, 1121, 1125, 1126, 1137, 1138, 1139, 1141, 1146, 1154, 1166, 1167, 1168, 1170, 1175, 1183, 1196, 1209, 1215, 1216, 1217, 1240, 1257, 1262, 1265, 1272, 1310, 1316, 1317], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 45, 46, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 81, 82, 84, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 101, 110, 111, 113, 131, 132, 135, 136, 137, 138, 139, 143, 144, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 164, 173, 182, 194, 197, 205, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 267, 269, 271, 272, 289, 291, 296, 299, 300, 301, 302, 305, 322, 324, 332, 333, 336, 337, 338, 339, 342, 359, 361, 369, 370, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 445, 447, 448, 454, 456, 458, 461, 463, 465, 466, 467, 469, 470, 474, 480, 482, 483, 486, 489, 494, 495, 496, 497, 499, 500, 502, 503, 504, 514, 515, 517, 518, 521, 526, 527, 528, 529, 530, 532, 535, 536, 537, 538, 540, 541, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 597, 603, 604, 605, 618, 619, 620, 623, 624, 625, 627, 628, 629, 630, 631, 640, 641, 643, 647, 648, 649, 652, 653, 654, 656, 657, 658, 659, 660, 669, 670, 672, 690, 699, 711, 719, 720, 723, 724, 725, 726, 727, 731, 732, 734, 735, 736, 737, 738, 743, 745, 746, 747, 748, 749, 750, 755, 762, 771, 783, 786, 795, 812, 814, 819, 822, 823, 824, 825, 826, 829, 839, 841, 842, 843, 845, 847, 848, 857, 859, 861, 862, 879, 881, 886, 889, 890, 891, 892, 895, 912, 914, 922, 923, 926, 927, 928, 929, 932, 949, 951, 959, 960, 963, 964, 965, 966, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 992, 1017, 1018, 1026, 1028, 1029, 1034, 1036, 1038, 1040, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1056, 1062, 1064, 1065, 1068, 1071, 1076, 1077, 1078, 1079, 1081, 1082, 1084, 1085, 1086, 1096, 1097, 1099, 1100, 1103, 1108, 1109, 1110, 1111, 1112, 1114, 1117, 1118, 1119, 1120, 1122, 1123, 1125, 1126, 1137, 1138, 1139, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1159, 1160, 1162, 1166, 1167, 1168, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1188, 1189, 1191, 1196, 1202, 1215, 1216, 1240, 1259, 1260, 1263, 1265, 1267, 1268, 1270, 1271, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1295, 1297, 1299, 1300, 1302, 1304, 1307, 1308, 1309, 1310, 1311, 1317, 1320], "from": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 39, 40, 41, 44, 45, 48, 53, 56, 59, 61, 64, 68, 69, 70, 71, 88, 90, 93, 97, 98, 99, 100, 117, 118, 119, 121, 124, 125, 126, 127, 128, 132, 137, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 154, 155, 156, 164, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 222, 223, 224, 229, 232, 233, 234, 235, 236, 239, 247, 249, 251, 252, 253, 255, 257, 258, 264, 265, 267, 269, 271, 272, 289, 290, 291, 296, 299, 300, 301, 302, 305, 322, 323, 324, 330, 332, 333, 336, 337, 338, 339, 342, 359, 360, 361, 367, 369, 370, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 430, 438, 440, 442, 443, 444, 446, 447, 451, 452, 453, 454, 455, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 508, 509, 510, 511, 512, 515, 517, 518, 523, 524, 526, 527, 528, 530, 531, 532, 535, 537, 539, 540, 541, 542, 543, 545, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 596, 597, 598, 599, 602, 604, 607, 612, 615, 618, 620, 623, 627, 628, 629, 630, 647, 649, 652, 656, 657, 658, 659, 676, 677, 678, 680, 683, 684, 686, 690, 692, 699, 706, 711, 714, 715, 716, 720, 725, 726, 727, 730, 731, 735, 736, 737, 738, 739, 740, 741, 743, 745, 746, 747, 755, 757, 758, 762, 764, 771, 778, 783, 786, 787, 788, 789, 790, 791, 792, 793, 795, 812, 813, 814, 819, 822, 823, 824, 825, 826, 829, 837, 839, 841, 842, 843, 845, 847, 848, 854, 855, 857, 859, 861, 862, 879, 880, 881, 886, 889, 890, 891, 892, 895, 912, 913, 914, 920, 922, 923, 926, 927, 928, 929, 932, 949, 950, 951, 957, 959, 960, 963, 964, 965, 966, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 995, 1003, 1005, 1008, 1015, 1017, 1020, 1022, 1023, 1024, 1027, 1028, 1029, 1032, 1033, 1035, 1036, 1037, 1038, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1097, 1099, 1100, 1105, 1106, 1108, 1109, 1110, 1112, 1113, 1114, 1117, 1119, 1121, 1122, 1123, 1125, 1128, 1133, 1137, 1139, 1142, 1146, 1147, 1148, 1149, 1166, 1168, 1171, 1175, 1176, 1177, 1178, 1202, 1214, 1222, 1223, 1229, 1232, 1233, 1234, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1255, 1257, 1265, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1286, 1289, 1295, 1296, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1313, 1314, 1316, 1317, 1318, 1320, 1322], "base": [0, 59, 64, 65, 66, 68, 69, 70, 71, 72, 88, 93, 94, 95, 97, 98, 99, 100, 101, 138, 139, 169, 197, 198, 199, 200, 201, 202, 203, 204, 235, 301, 338, 375, 398, 444, 446, 447, 456, 476, 483, 501, 504, 528, 545, 618, 623, 624, 625, 627, 628, 629, 630, 631, 647, 652, 653, 654, 656, 657, 658, 659, 660, 686, 726, 727, 739, 758, 786, 787, 788, 789, 790, 791, 792, 793, 825, 891, 928, 965, 990, 1024, 1027, 1028, 1038, 1058, 1065, 1083, 1086, 1110, 1137, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1166, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1230, 1240, 1266, 1270, 1272, 1307, 1311, 1314, 1316, 1317, 1320], "path": [0, 23, 127, 128, 139, 545, 577, 587, 715, 716, 727, 1135, 1196, 1272, 1273, 1307, 1316, 1319, 1320], "where": [0, 5, 6, 7, 28, 70, 71, 99, 100, 117, 121, 124, 127, 128, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 151, 158, 159, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 200, 201, 222, 229, 232, 233, 234, 235, 236, 250, 266, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 384, 385, 466, 474, 475, 483, 496, 497, 499, 501, 516, 531, 532, 534, 541, 545, 551, 552, 553, 583, 587, 629, 630, 658, 659, 676, 680, 683, 688, 690, 691, 692, 693, 694, 695, 697, 698, 699, 702, 704, 705, 706, 707, 709, 710, 711, 712, 713, 715, 716, 721, 723, 724, 725, 726, 727, 729, 730, 731, 732, 735, 739, 741, 749, 750, 760, 762, 763, 764, 765, 766, 767, 769, 770, 771, 774, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 789, 790, 812, 819, 822, 823, 824, 825, 826, 840, 856, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 969, 976, 977, 1034, 1048, 1056, 1057, 1065, 1078, 1079, 1081, 1083, 1098, 1113, 1114, 1116, 1123, 1148, 1149, 1177, 1178, 1217, 1222, 1223, 1231, 1232, 1240, 1262, 1272, 1273, 1276, 1281, 1284, 1300, 1302, 1307, 1310, 1314, 1322], "store": [0, 3, 9, 14, 16, 22, 26, 30, 31, 32, 45, 59, 88, 137, 138, 139, 154, 155, 401, 426, 447, 466, 474, 483, 496, 497, 499, 534, 545, 549, 555, 563, 565, 571, 580, 585, 586, 588, 604, 618, 647, 725, 726, 727, 745, 746, 994, 1028, 1034, 1048, 1056, 1065, 1078, 1079, 1081, 1116, 1125, 1137, 1166, 1272, 1300, 1307, 1310, 1313, 1315, 1316, 1317, 1322], "extract": [0, 10, 222, 289, 322, 359, 394, 497, 517, 545, 559, 812, 879, 912, 949, 986, 1079, 1099, 1222, 1223, 1234, 1270, 1276, 1297, 1299, 1302, 1307], "If": [0, 6, 7, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 29, 30, 31, 44, 45, 46, 59, 61, 62, 63, 70, 88, 90, 91, 92, 99, 120, 122, 123, 125, 129, 131, 135, 136, 137, 140, 144, 145, 148, 154, 155, 156, 182, 194, 197, 200, 201, 207, 209, 222, 223, 228, 229, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 289, 290, 295, 296, 300, 301, 302, 307, 309, 322, 323, 328, 331, 332, 333, 337, 338, 339, 344, 346, 359, 360, 365, 368, 369, 370, 374, 375, 376, 381, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 429, 436, 440, 447, 450, 456, 461, 465, 466, 467, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 486, 487, 488, 491, 492, 493, 496, 497, 499, 501, 504, 505, 506, 507, 508, 510, 511, 515, 516, 517, 518, 525, 528, 529, 530, 531, 532, 533, 536, 537, 545, 546, 552, 553, 554, 557, 558, 563, 565, 566, 567, 568, 569, 572, 573, 578, 579, 580, 581, 582, 584, 585, 586, 602, 604, 605, 618, 620, 621, 622, 629, 647, 649, 650, 651, 658, 679, 681, 682, 684, 699, 711, 717, 719, 723, 724, 725, 728, 732, 733, 737, 739, 745, 746, 747, 771, 783, 786, 789, 790, 797, 799, 812, 813, 818, 819, 823, 824, 825, 826, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 854, 855, 856, 857, 858, 859, 860, 861, 864, 866, 879, 880, 885, 886, 890, 891, 892, 897, 899, 912, 913, 918, 921, 922, 923, 927, 928, 929, 934, 936, 949, 950, 955, 958, 959, 960, 964, 965, 966, 969, 973, 975, 978, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 991, 992, 994, 1001, 1005, 1012, 1015, 1028, 1031, 1038, 1043, 1047, 1048, 1049, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1068, 1069, 1070, 1073, 1074, 1075, 1078, 1079, 1081, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1097, 1098, 1099, 1100, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1125, 1126, 1137, 1139, 1140, 1141, 1148, 1166, 1168, 1169, 1170, 1177, 1217, 1222, 1223, 1229, 1230, 1248, 1249, 1250, 1259, 1260, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1316, 1317, 1319, 1320, 1322], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 44, 45, 46, 47, 52, 59, 61, 62, 69, 70, 71, 72, 76, 88, 90, 91, 98, 99, 100, 101, 105, 117, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 157, 158, 164, 167, 169, 171, 173, 174, 175, 176, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 194, 195, 197, 200, 201, 207, 209, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 289, 290, 291, 294, 295, 296, 299, 300, 301, 302, 305, 307, 309, 322, 323, 324, 327, 328, 332, 333, 336, 337, 338, 339, 342, 344, 346, 359, 360, 361, 364, 365, 369, 370, 373, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 408, 415, 429, 436, 437, 440, 445, 446, 447, 450, 452, 457, 459, 461, 465, 466, 467, 470, 474, 475, 476, 480, 483, 487, 489, 496, 497, 499, 501, 503, 505, 506, 507, 510, 511, 516, 517, 518, 521, 525, 526, 528, 529, 530, 532, 533, 534, 536, 537, 540, 545, 548, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 597, 602, 604, 605, 606, 611, 618, 620, 621, 628, 629, 630, 631, 635, 647, 649, 650, 657, 658, 659, 660, 664, 676, 679, 680, 681, 682, 683, 686, 688, 690, 691, 692, 693, 695, 697, 698, 699, 702, 704, 705, 706, 707, 709, 711, 712, 714, 715, 716, 717, 719, 723, 724, 725, 726, 727, 728, 729, 732, 733, 734, 735, 737, 739, 740, 741, 744, 745, 746, 747, 748, 749, 755, 758, 760, 762, 763, 764, 765, 767, 769, 770, 771, 774, 776, 777, 778, 779, 781, 783, 784, 786, 789, 790, 797, 799, 812, 813, 814, 817, 818, 819, 822, 823, 824, 825, 826, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 854, 855, 856, 857, 858, 859, 860, 861, 864, 866, 879, 880, 881, 884, 885, 886, 889, 890, 891, 892, 895, 897, 899, 912, 913, 914, 917, 918, 922, 923, 926, 927, 928, 929, 932, 934, 936, 949, 950, 951, 954, 955, 959, 960, 963, 964, 965, 966, 969, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 1001, 1002, 1005, 1007, 1012, 1013, 1015, 1018, 1026, 1027, 1028, 1029, 1031, 1033, 1034, 1039, 1041, 1043, 1047, 1048, 1049, 1052, 1056, 1057, 1058, 1062, 1065, 1069, 1071, 1078, 1079, 1081, 1083, 1085, 1087, 1088, 1089, 1092, 1093, 1098, 1099, 1100, 1103, 1107, 1108, 1110, 1111, 1112, 1114, 1115, 1116, 1118, 1119, 1122, 1125, 1126, 1127, 1132, 1137, 1139, 1140, 1147, 1148, 1149, 1150, 1154, 1166, 1168, 1169, 1176, 1177, 1178, 1179, 1183, 1202, 1214, 1215, 1216, 1222, 1223, 1229, 1230, 1232, 1239, 1240, 1242, 1245, 1248, 1249, 1250, 1252, 1258, 1259, 1260, 1262, 1263, 1264, 1267, 1272, 1273, 1276, 1281, 1282, 1283, 1284, 1287, 1292, 1293, 1300, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1322], "current": [0, 42, 47, 135, 136, 137, 173, 175, 182, 189, 194, 207, 209, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 247, 249, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 274, 276, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 309, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 344, 346, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 389, 449, 466, 474, 483, 496, 497, 499, 518, 528, 545, 600, 606, 690, 692, 699, 706, 711, 723, 724, 725, 762, 764, 771, 778, 783, 797, 799, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 837, 839, 840, 841, 842, 843, 845, 847, 854, 855, 856, 857, 859, 861, 864, 866, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 897, 899, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 927, 928, 929, 931, 934, 936, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 968, 981, 1019, 1021, 1048, 1056, 1065, 1078, 1079, 1081, 1100, 1110, 1127, 1265, 1320], "directori": [0, 44, 542, 545, 602, 1135, 1264, 1272, 1319, 1320], "time": [0, 1, 3, 9, 18, 22, 27, 30, 32, 45, 53, 54, 59, 88, 135, 136, 137, 161, 162, 207, 209, 222, 224, 229, 233, 234, 235, 236, 274, 276, 289, 291, 296, 300, 301, 302, 307, 309, 322, 324, 332, 333, 337, 338, 339, 344, 346, 359, 361, 369, 370, 374, 375, 376, 379, 382, 383, 394, 396, 397, 447, 456, 465, 466, 473, 474, 482, 483, 496, 497, 499, 517, 523, 532, 534, 545, 547, 549, 555, 567, 571, 582, 585, 588, 604, 612, 613, 618, 647, 723, 724, 725, 752, 753, 797, 799, 812, 814, 819, 823, 824, 825, 826, 864, 866, 879, 881, 886, 890, 891, 892, 897, 899, 912, 914, 922, 923, 927, 928, 929, 934, 936, 949, 951, 959, 960, 964, 965, 966, 971, 974, 975, 986, 988, 989, 1018, 1021, 1028, 1029, 1038, 1047, 1048, 1055, 1056, 1064, 1065, 1078, 1079, 1081, 1099, 1105, 1114, 1116, 1125, 1133, 1134, 1137, 1166, 1224, 1227, 1265, 1272, 1276, 1290, 1295, 1302, 1307, 1309, 1315, 1317, 1320, 1322], "format": [0, 3, 9, 22, 26, 32, 53, 54, 59, 88, 207, 209, 222, 224, 229, 232, 233, 234, 235, 236, 274, 276, 289, 291, 296, 299, 300, 301, 302, 307, 309, 322, 324, 332, 333, 336, 337, 338, 339, 344, 346, 359, 361, 369, 370, 373, 374, 375, 376, 381, 391, 393, 395, 396, 397, 399, 543, 544, 545, 549, 555, 571, 580, 588, 612, 613, 618, 647, 797, 799, 812, 814, 819, 822, 823, 824, 825, 826, 864, 866, 879, 881, 886, 889, 890, 891, 892, 897, 899, 912, 914, 922, 923, 926, 927, 928, 929, 934, 936, 949, 951, 959, 960, 963, 964, 965, 966, 970, 973, 983, 985, 987, 988, 989, 991, 1133, 1134, 1137, 1166, 1265, 1293, 1307, 1309], "prefix": [0, 62, 91, 545, 621, 650, 1135, 1140, 1169], "add": [0, 3, 9, 22, 46, 60, 61, 89, 90, 140, 151, 222, 224, 229, 232, 233, 234, 235, 236, 249, 250, 251, 252, 253, 255, 257, 264, 266, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 463, 466, 474, 483, 496, 499, 545, 549, 555, 571, 605, 619, 620, 648, 649, 728, 741, 812, 814, 819, 822, 823, 824, 825, 826, 839, 840, 841, 842, 843, 845, 847, 854, 856, 857, 859, 861, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 1045, 1048, 1056, 1065, 1078, 1081, 1126, 1138, 1139, 1167, 1168, 1276, 1281, 1282, 1283, 1292, 1293, 1295, 1300, 1302, 1303, 1311, 1316, 1319, 1320, 1322], "contain": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 33, 39, 44, 45, 46, 47, 59, 60, 64, 65, 66, 68, 69, 70, 71, 72, 88, 89, 93, 94, 95, 97, 98, 99, 100, 101, 126, 127, 128, 129, 135, 136, 137, 138, 139, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 197, 198, 199, 200, 201, 202, 203, 204, 211, 222, 229, 232, 233, 234, 235, 236, 238, 248, 278, 289, 296, 299, 300, 301, 302, 304, 311, 322, 332, 333, 336, 337, 338, 339, 341, 348, 359, 369, 370, 373, 374, 375, 376, 378, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 525, 528, 529, 530, 531, 532, 533, 534, 535, 537, 539, 541, 545, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 563, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 590, 597, 602, 604, 605, 606, 618, 619, 623, 624, 625, 627, 628, 629, 630, 631, 647, 648, 652, 653, 654, 656, 657, 658, 659, 660, 714, 715, 716, 717, 723, 724, 725, 726, 727, 733, 735, 736, 737, 738, 739, 740, 741, 745, 746, 747, 786, 787, 788, 789, 790, 791, 792, 793, 801, 812, 819, 822, 823, 824, 825, 826, 828, 838, 868, 879, 886, 889, 890, 891, 892, 894, 901, 912, 922, 923, 926, 927, 928, 929, 931, 938, 949, 959, 960, 963, 964, 965, 966, 968, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 994, 1007, 1026, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1123, 1125, 1126, 1127, 1137, 1138, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1166, 1167, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1214, 1215, 1216, 1222, 1223, 1230, 1234, 1257, 1259, 1260, 1263, 1273, 1285, 1286, 1307, 1309, 1310, 1313, 1315, 1316, 1317, 1319, 1320, 1322], "datetim": [0, 1, 27, 161, 162, 207, 209, 229, 233, 235, 274, 276, 296, 300, 301, 307, 309, 332, 337, 338, 344, 346, 369, 374, 375, 379, 382, 383, 400, 466, 474, 483, 496, 497, 499, 545, 547, 582, 752, 753, 797, 799, 819, 823, 825, 864, 866, 886, 890, 891, 897, 899, 922, 927, 928, 934, 936, 959, 964, 965, 971, 974, 975, 992, 1048, 1056, 1065, 1078, 1079, 1081, 1224, 1225, 1226, 1227, 1228], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 45, 46, 53, 54, 60, 61, 62, 64, 65, 66, 68, 76, 85, 88, 89, 90, 91, 93, 94, 95, 97, 105, 114, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 162, 169, 197, 198, 199, 200, 201, 202, 203, 204, 205, 223, 236, 239, 247, 251, 252, 258, 265, 272, 290, 302, 305, 323, 333, 339, 342, 360, 376, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 408, 427, 428, 434, 435, 438, 441, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 532, 533, 534, 535, 539, 540, 541, 542, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 590, 594, 604, 605, 612, 613, 619, 620, 621, 623, 624, 625, 627, 635, 644, 647, 648, 649, 650, 652, 653, 654, 656, 664, 673, 686, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 745, 746, 747, 749, 750, 752, 753, 758, 786, 787, 788, 789, 790, 791, 792, 793, 795, 813, 826, 829, 837, 841, 842, 848, 855, 862, 880, 892, 895, 913, 923, 929, 932, 950, 966, 971, 972, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 999, 1000, 1003, 1006, 1010, 1011, 1016, 1018, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1126, 1133, 1134, 1138, 1139, 1140, 1142, 1143, 1144, 1146, 1154, 1163, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1183, 1192, 1197, 1198, 1199, 1200, 1202, 1215, 1216, 1217, 1229, 1231, 1233, 1234, 1238, 1240, 1241, 1242, 1245, 1250, 1251, 1255, 1256, 1259, 1260, 1262, 1263, 1272, 1276, 1283, 1284, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1300, 1302, 1303, 1307, 1308, 1309, 1313, 1314, 1315, 1316, 1320], "The": [0, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 32, 44, 45, 59, 88, 117, 121, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 168, 198, 199, 203, 227, 252, 294, 327, 364, 370, 380, 381, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 415, 445, 446, 447, 448, 449, 452, 454, 457, 461, 466, 467, 470, 471, 473, 474, 483, 485, 486, 489, 491, 496, 497, 499, 501, 502, 503, 504, 516, 518, 521, 523, 525, 526, 527, 528, 529, 530, 532, 533, 536, 537, 538, 540, 544, 545, 549, 550, 554, 555, 562, 563, 565, 566, 567, 568, 569, 571, 576, 578, 579, 580, 581, 582, 584, 585, 586, 588, 589, 602, 604, 618, 647, 676, 680, 683, 684, 714, 715, 716, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 736, 737, 738, 744, 745, 746, 747, 748, 749, 750, 787, 788, 792, 817, 842, 884, 917, 954, 960, 972, 973, 978, 980, 981, 982, 983, 984, 985, 986, 988, 989, 990, 991, 992, 994, 1018, 1019, 1020, 1021, 1026, 1027, 1028, 1033, 1034, 1036, 1039, 1043, 1048, 1049, 1052, 1053, 1055, 1056, 1065, 1067, 1068, 1071, 1073, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1098, 1100, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1118, 1119, 1120, 1122, 1125, 1137, 1166, 1196, 1209, 1210, 1211, 1214, 1217, 1218, 1219, 1220, 1221, 1229, 1230, 1231, 1235, 1236, 1237, 1239, 1241, 1243, 1244, 1246, 1247, 1248, 1249, 1252, 1255, 1257, 1259, 1260, 1262, 1270, 1273, 1284, 1295, 1302, 1307, 1308, 1311, 1314, 1315, 1316, 1319], "start": [0, 1, 18, 30, 45, 59, 74, 75, 86, 87, 88, 103, 104, 115, 116, 248, 394, 400, 475, 497, 517, 532, 545, 547, 557, 567, 585, 604, 618, 633, 634, 645, 646, 647, 662, 663, 674, 675, 838, 986, 992, 1057, 1079, 1099, 1114, 1125, 1137, 1152, 1153, 1164, 1165, 1166, 1181, 1182, 1193, 1194, 1225, 1272, 1281, 1282, 1292, 1293, 1307, 1309, 1316, 1320, 1321], "end": [0, 1, 18, 27, 30, 44, 67, 75, 83, 87, 96, 104, 112, 116, 126, 127, 128, 138, 139, 142, 143, 146, 151, 154, 155, 156, 248, 532, 545, 547, 567, 582, 585, 602, 626, 634, 642, 646, 655, 663, 671, 675, 714, 715, 716, 726, 727, 730, 731, 735, 741, 745, 746, 747, 838, 1114, 1145, 1153, 1161, 1165, 1174, 1182, 1190, 1194, 1282, 1292, 1293, 1307, 1315], "period": [0, 145, 545, 733, 1311], "we": [0, 147, 516, 545, 736, 1098, 1265, 1272, 1273, 1276, 1281, 1300, 1302, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1321, 1322], "want": [0, 8, 545, 554, 1273, 1307, 1314, 1317, 1320, 1322], "dict": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 33, 34, 37, 40, 45, 46, 48, 53, 59, 60, 88, 89, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 205, 272, 305, 333, 342, 380, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 446, 447, 448, 452, 457, 458, 460, 461, 468, 471, 475, 476, 477, 478, 484, 485, 498, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 545, 548, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 574, 575, 578, 579, 580, 581, 582, 583, 584, 590, 592, 595, 598, 604, 605, 607, 612, 618, 619, 647, 648, 679, 681, 682, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 740, 741, 745, 746, 747, 749, 750, 795, 862, 895, 923, 932, 972, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 989, 991, 992, 994, 1027, 1028, 1029, 1033, 1039, 1040, 1042, 1043, 1050, 1053, 1057, 1058, 1059, 1060, 1066, 1067, 1080, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1120, 1121, 1125, 1126, 1128, 1133, 1137, 1138, 1166, 1167, 1215, 1216, 1217, 1242, 1257, 1309], "option": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 45, 46, 47, 54, 55, 59, 60, 61, 62, 65, 66, 68, 70, 71, 76, 88, 91, 94, 95, 97, 99, 100, 117, 118, 119, 121, 122, 124, 126, 127, 128, 131, 132, 137, 138, 139, 140, 145, 146, 150, 151, 167, 169, 173, 175, 182, 189, 194, 222, 229, 233, 234, 235, 236, 238, 249, 251, 253, 255, 257, 264, 267, 269, 271, 289, 296, 300, 301, 302, 304, 322, 330, 331, 332, 333, 337, 338, 339, 341, 359, 367, 368, 369, 370, 374, 375, 376, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 447, 448, 451, 452, 460, 468, 470, 471, 485, 489, 490, 491, 492, 501, 504, 506, 507, 508, 509, 510, 511, 512, 515, 517, 518, 523, 524, 525, 528, 529, 530, 531, 537, 539, 540, 541, 545, 548, 549, 550, 551, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 590, 597, 604, 605, 606, 613, 614, 618, 619, 620, 621, 624, 625, 627, 629, 630, 635, 647, 650, 653, 654, 656, 658, 659, 676, 677, 678, 680, 681, 683, 686, 690, 692, 699, 706, 711, 714, 715, 716, 719, 720, 725, 726, 727, 728, 733, 735, 740, 741, 758, 762, 764, 771, 778, 783, 812, 819, 823, 824, 825, 826, 828, 839, 841, 843, 845, 847, 854, 857, 859, 861, 879, 886, 890, 891, 892, 894, 912, 920, 921, 922, 923, 927, 928, 929, 931, 949, 957, 958, 959, 960, 964, 965, 966, 968, 969, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 1028, 1029, 1032, 1033, 1042, 1050, 1052, 1053, 1067, 1071, 1072, 1073, 1074, 1083, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1099, 1100, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1119, 1121, 1122, 1123, 1125, 1126, 1127, 1134, 1137, 1138, 1139, 1140, 1143, 1144, 1146, 1148, 1149, 1154, 1166, 1169, 1172, 1173, 1175, 1177, 1178, 1222, 1223, 1229, 1245, 1257, 1262, 1263, 1265, 1302, 1317], "dictionari": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 37, 40, 43, 45, 46, 59, 60, 61, 63, 88, 89, 90, 92, 120, 122, 123, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 145, 147, 148, 149, 150, 151, 154, 155, 156, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 405, 431, 433, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 469, 470, 475, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 525, 531, 532, 533, 534, 537, 538, 539, 545, 548, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 571, 574, 575, 578, 579, 580, 581, 582, 583, 584, 588, 590, 592, 594, 595, 598, 601, 604, 605, 618, 619, 620, 622, 647, 648, 649, 651, 679, 681, 682, 714, 715, 716, 717, 718, 723, 724, 725, 726, 727, 728, 733, 736, 737, 738, 740, 741, 745, 746, 747, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 992, 993, 994, 996, 998, 1026, 1027, 1028, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1041, 1043, 1044, 1045, 1046, 1047, 1051, 1052, 1057, 1061, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1107, 1113, 1114, 1115, 1116, 1119, 1120, 1121, 1125, 1126, 1137, 1138, 1139, 1141, 1166, 1167, 1168, 1170, 1195, 1215, 1216, 1217, 1257, 1273, 1310, 1317], "map": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 40, 45, 59, 88, 121, 124, 227, 251, 252, 253, 264, 294, 305, 327, 329, 330, 331, 333, 334, 342, 364, 366, 367, 368, 370, 371, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 440, 531, 545, 551, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 592, 598, 604, 618, 647, 680, 683, 817, 841, 842, 843, 854, 884, 895, 917, 919, 920, 921, 923, 924, 932, 954, 956, 957, 958, 960, 961, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 991, 992, 1005, 1015, 1034, 1113, 1125, 1137, 1166, 1276, 1279, 1280, 1282, 1283, 1300, 1302, 1307, 1308, 1315, 1316, 1318, 1320], "field": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 45, 46, 53, 59, 60, 61, 62, 63, 68, 71, 84, 88, 89, 90, 91, 92, 97, 100, 113, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 169, 171, 173, 174, 175, 176, 177, 178, 180, 181, 185, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 221, 222, 223, 224, 229, 232, 233, 234, 235, 236, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 288, 289, 290, 291, 296, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 317, 321, 322, 323, 324, 332, 333, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 354, 358, 359, 360, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 539, 540, 541, 545, 549, 551, 552, 553, 554, 555, 559, 561, 563, 564, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 594, 596, 597, 598, 599, 604, 605, 612, 618, 619, 620, 621, 622, 627, 630, 643, 647, 648, 649, 650, 651, 656, 659, 672, 685, 686, 688, 690, 691, 692, 693, 694, 695, 697, 698, 702, 704, 705, 706, 707, 709, 710, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 739, 740, 741, 745, 746, 747, 749, 750, 758, 760, 762, 763, 764, 765, 766, 767, 769, 770, 774, 776, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 807, 811, 812, 813, 814, 819, 822, 823, 824, 825, 826, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 855, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 874, 878, 879, 880, 881, 886, 889, 890, 891, 892, 895, 896, 897, 898, 899, 900, 901, 907, 911, 912, 913, 914, 922, 923, 926, 927, 928, 929, 932, 933, 934, 935, 936, 937, 938, 944, 948, 949, 950, 951, 959, 960, 963, 964, 965, 966, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 1020, 1026, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1125, 1126, 1133, 1137, 1138, 1139, 1140, 1141, 1146, 1149, 1162, 1166, 1167, 1168, 1169, 1170, 1175, 1178, 1191, 1197, 1198, 1199, 1200, 1202, 1205, 1206, 1207, 1208, 1214, 1215, 1216, 1217, 1219, 1234, 1239, 1240, 1242, 1257, 1259, 1260, 1261, 1262, 1265, 1267, 1270, 1272, 1276, 1277, 1278, 1281, 1282, 1284, 1295, 1299, 1300, 1301, 1302, 1303, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1320], "radar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 45, 53, 88, 90, 91, 93, 94, 95, 97, 100, 105, 117, 118, 119, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 169, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 221, 222, 227, 229, 233, 234, 235, 236, 249, 253, 255, 257, 267, 269, 271, 272, 288, 289, 294, 296, 300, 301, 302, 305, 321, 322, 327, 330, 332, 333, 337, 338, 339, 342, 358, 359, 364, 367, 369, 370, 374, 375, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 545, 548, 549, 551, 552, 553, 554, 555, 556, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 590, 592, 594, 597, 603, 604, 612, 647, 649, 650, 652, 653, 654, 656, 659, 664, 676, 677, 678, 686, 699, 711, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 749, 750, 751, 754, 755, 758, 771, 783, 786, 787, 788, 789, 790, 791, 792, 793, 795, 811, 812, 817, 819, 823, 824, 825, 826, 839, 843, 845, 847, 857, 859, 861, 862, 878, 879, 884, 886, 890, 891, 892, 895, 911, 912, 917, 920, 922, 923, 927, 928, 929, 932, 948, 949, 954, 957, 959, 960, 964, 965, 966, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 991, 992, 1017, 1018, 1020, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1125, 1133, 1166, 1168, 1169, 1171, 1172, 1173, 1175, 1178, 1183, 1198, 1199, 1200, 1202, 1205, 1206, 1207, 1208, 1215, 1216, 1217, 1219, 1222, 1223, 1226, 1228, 1230, 1231, 1232, 1233, 1234, 1238, 1240, 1242, 1245, 1250, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1275, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1316, 1321], "unlik": [0, 5, 10, 15, 27, 28, 384, 385, 545, 551, 559, 564, 582, 583, 976, 977], "other": [0, 5, 10, 15, 26, 27, 28, 45, 53, 55, 59, 88, 137, 138, 139, 140, 145, 197, 201, 222, 224, 229, 232, 233, 234, 235, 236, 251, 252, 253, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 387, 390, 392, 394, 398, 407, 447, 501, 518, 532, 534, 535, 540, 545, 551, 559, 564, 580, 582, 583, 604, 612, 614, 618, 647, 725, 726, 727, 728, 733, 739, 786, 790, 812, 814, 819, 822, 823, 824, 825, 826, 841, 842, 843, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 973, 976, 977, 979, 982, 984, 986, 990, 1018, 1028, 1083, 1100, 1114, 1116, 1117, 1122, 1125, 1133, 1137, 1166, 1198, 1199, 1200, 1265, 1302, 1307, 1309, 1315, 1319, 1320, 1322], "function": [0, 5, 10, 13, 15, 27, 28, 44, 70, 99, 145, 147, 148, 149, 166, 168, 197, 198, 199, 200, 201, 202, 203, 204, 221, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 288, 289, 296, 300, 301, 302, 305, 321, 322, 332, 337, 338, 339, 342, 358, 359, 369, 374, 375, 376, 381, 384, 385, 388, 389, 395, 398, 442, 443, 444, 446, 447, 448, 461, 467, 483, 486, 501, 528, 530, 536, 538, 540, 543, 545, 551, 559, 562, 564, 582, 583, 587, 591, 602, 603, 629, 658, 733, 736, 737, 738, 739, 757, 786, 787, 788, 789, 790, 791, 792, 793, 794, 811, 812, 819, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 878, 879, 886, 890, 891, 892, 895, 911, 912, 922, 927, 928, 929, 932, 948, 949, 959, 964, 965, 966, 969, 970, 973, 976, 977, 980, 981, 987, 990, 1017, 1018, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1034, 1043, 1049, 1065, 1068, 1083, 1110, 1112, 1118, 1120, 1122, 1124, 1148, 1177, 1209, 1234, 1240, 1245, 1246, 1247, 1256, 1257, 1263, 1264, 1265, 1281, 1300, 1302, 1307, 1311, 1313, 1315, 1316, 1317, 1319, 1320], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 44, 45, 47, 59, 61, 62, 65, 66, 68, 70, 71, 72, 88, 90, 91, 94, 95, 97, 99, 100, 101, 120, 122, 123, 126, 127, 128, 132, 137, 138, 139, 142, 143, 144, 145, 146, 148, 150, 151, 154, 155, 156, 169, 173, 182, 197, 198, 199, 200, 201, 202, 203, 204, 221, 253, 288, 305, 321, 333, 342, 358, 370, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 415, 429, 440, 446, 447, 450, 452, 461, 466, 474, 476, 483, 496, 497, 499, 501, 515, 516, 517, 518, 528, 529, 530, 534, 537, 540, 541, 542, 545, 548, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 597, 602, 604, 606, 618, 620, 621, 624, 625, 627, 629, 630, 631, 647, 649, 650, 653, 654, 656, 658, 659, 660, 679, 681, 682, 686, 690, 699, 714, 715, 716, 720, 725, 726, 727, 730, 731, 732, 733, 735, 737, 739, 740, 741, 745, 746, 747, 758, 762, 771, 786, 787, 788, 789, 790, 791, 792, 793, 811, 843, 878, 895, 911, 923, 932, 948, 960, 969, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 992, 994, 1005, 1007, 1015, 1018, 1020, 1027, 1028, 1031, 1033, 1034, 1043, 1048, 1056, 1058, 1065, 1078, 1079, 1081, 1083, 1097, 1098, 1099, 1100, 1110, 1111, 1112, 1116, 1119, 1122, 1123, 1125, 1127, 1137, 1139, 1140, 1143, 1144, 1146, 1148, 1149, 1150, 1166, 1168, 1169, 1172, 1173, 1175, 1177, 1178, 1179, 1202, 1214, 1229, 1239, 1240, 1245, 1248, 1249, 1250, 1263, 1264, 1267, 1268, 1272, 1273, 1276, 1277, 1281, 1282, 1283, 1284, 1287, 1293, 1300, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1322], "have": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 47, 59, 62, 70, 88, 91, 99, 126, 127, 128, 137, 173, 175, 182, 189, 194, 222, 233, 258, 289, 300, 322, 333, 337, 359, 374, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 450, 457, 497, 501, 518, 523, 532, 533, 545, 551, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 606, 618, 621, 629, 647, 650, 658, 690, 692, 699, 706, 711, 714, 715, 716, 725, 762, 764, 771, 778, 783, 812, 823, 848, 879, 890, 912, 923, 927, 949, 964, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 1031, 1039, 1079, 1083, 1100, 1105, 1114, 1115, 1127, 1137, 1140, 1148, 1166, 1169, 1177, 1217, 1230, 1250, 1272, 1273, 1300, 1302, 1307, 1313, 1315, 1316, 1319, 1320, 1321, 1322], "valu": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 42, 44, 45, 59, 62, 88, 91, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 164, 169, 171, 173, 174, 175, 177, 180, 182, 185, 187, 188, 189, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 289, 290, 291, 293, 296, 297, 298, 299, 300, 301, 302, 322, 323, 324, 326, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 359, 360, 361, 363, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 409, 411, 413, 417, 419, 420, 425, 426, 436, 437, 446, 447, 448, 450, 452, 457, 461, 466, 471, 474, 478, 483, 484, 496, 497, 499, 501, 502, 504, 507, 510, 511, 515, 518, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 537, 540, 541, 544, 545, 548, 549, 550, 551, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 597, 600, 602, 604, 618, 621, 647, 650, 679, 680, 681, 682, 683, 686, 688, 690, 691, 692, 694, 697, 699, 702, 704, 705, 706, 709, 711, 713, 714, 715, 716, 717, 718, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 739, 740, 741, 743, 745, 746, 747, 749, 750, 755, 758, 760, 762, 763, 764, 766, 769, 771, 774, 776, 777, 778, 781, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 812, 813, 814, 816, 819, 820, 821, 822, 823, 824, 825, 826, 837, 839, 841, 842, 843, 845, 847, 854, 855, 857, 859, 861, 879, 880, 881, 883, 886, 887, 888, 889, 890, 891, 892, 912, 913, 914, 916, 919, 920, 921, 922, 923, 925, 926, 927, 928, 929, 949, 950, 951, 953, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 969, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 1001, 1002, 1007, 1012, 1013, 1027, 1028, 1031, 1033, 1034, 1039, 1043, 1048, 1053, 1056, 1060, 1065, 1066, 1078, 1079, 1081, 1083, 1084, 1086, 1089, 1092, 1093, 1097, 1100, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1119, 1122, 1123, 1125, 1137, 1140, 1166, 1169, 1198, 1199, 1200, 1214, 1219, 1229, 1236, 1240, 1243, 1244, 1246, 1248, 1250, 1265, 1273, 1276, 1281, 1284, 1300, 1301, 1302, 1310, 1311, 1314, 1315, 1320], "ar": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44, 45, 59, 70, 72, 88, 99, 101, 121, 124, 125, 126, 127, 128, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 151, 154, 155, 156, 182, 194, 197, 199, 200, 201, 202, 203, 204, 222, 228, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 289, 295, 296, 300, 301, 302, 322, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 431, 444, 445, 446, 447, 452, 461, 467, 470, 475, 486, 487, 489, 491, 497, 501, 506, 507, 508, 510, 511, 515, 518, 525, 528, 530, 537, 540, 541, 543, 545, 551, 554, 558, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 602, 604, 618, 629, 631, 647, 658, 660, 680, 683, 684, 699, 711, 714, 715, 716, 723, 724, 725, 726, 727, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 741, 745, 746, 747, 757, 771, 783, 786, 788, 789, 790, 791, 792, 793, 812, 818, 819, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 854, 857, 859, 861, 879, 885, 886, 890, 891, 892, 912, 918, 919, 920, 921, 922, 923, 924, 927, 928, 929, 949, 955, 956, 957, 958, 959, 960, 961, 964, 965, 966, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 988, 989, 990, 991, 992, 994, 996, 1024, 1026, 1027, 1028, 1033, 1034, 1043, 1049, 1052, 1057, 1068, 1069, 1071, 1073, 1079, 1083, 1088, 1089, 1090, 1092, 1093, 1097, 1100, 1107, 1110, 1112, 1119, 1122, 1123, 1125, 1137, 1148, 1150, 1166, 1177, 1179, 1198, 1199, 1200, 1222, 1223, 1229, 1232, 1243, 1244, 1246, 1248, 1249, 1258, 1263, 1268, 1270, 1272, 1273, 1276, 1281, 1283, 1284, 1292, 1295, 1300, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1322], "still": [0, 5, 10, 15, 27, 28, 137, 305, 342, 384, 385, 400, 447, 545, 551, 559, 564, 582, 583, 725, 895, 932, 976, 977, 992, 1028, 1245, 1272, 1320], "includ": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 34, 36, 59, 64, 70, 71, 88, 93, 99, 100, 126, 127, 128, 137, 138, 139, 140, 142, 143, 145, 146, 154, 155, 156, 169, 173, 175, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 446, 447, 524, 540, 545, 548, 549, 550, 551, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 582, 583, 584, 587, 588, 592, 594, 618, 623, 629, 630, 647, 652, 658, 659, 686, 690, 692, 696, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 725, 726, 727, 728, 730, 731, 733, 735, 739, 745, 746, 747, 757, 758, 762, 764, 768, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 812, 819, 823, 824, 825, 826, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 1027, 1028, 1106, 1122, 1137, 1142, 1148, 1149, 1166, 1171, 1177, 1178, 1217, 1252, 1272, 1276, 1295, 1307, 1314, 1319, 1320], "exclud": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 62, 91, 126, 127, 128, 151, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 191, 194, 197, 199, 200, 201, 202, 203, 204, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 504, 528, 529, 530, 532, 535, 540, 541, 545, 551, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 592, 621, 650, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 706, 708, 711, 714, 715, 716, 739, 741, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 778, 780, 783, 786, 788, 789, 790, 791, 792, 793, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 991, 992, 1086, 1110, 1111, 1112, 1114, 1117, 1122, 1123, 1140, 1169, 1268, 1277, 1314], "them": [0, 5, 10, 15, 18, 19, 20, 27, 28, 70, 99, 137, 138, 139, 140, 239, 258, 333, 384, 385, 394, 447, 504, 515, 533, 543, 545, 551, 557, 559, 564, 567, 568, 569, 582, 583, 629, 658, 725, 726, 727, 728, 829, 848, 923, 976, 977, 986, 1028, 1086, 1097, 1115, 1148, 1177, 1230, 1265, 1281, 1307, 1315, 1322], "us": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 39, 44, 45, 47, 59, 61, 68, 70, 71, 88, 90, 97, 99, 100, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 169, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 309, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 344, 346, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 372, 373, 374, 375, 376, 378, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 429, 445, 446, 447, 448, 451, 453, 454, 455, 456, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 518, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 548, 549, 550, 551, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 590, 592, 597, 602, 604, 606, 618, 620, 627, 629, 630, 647, 649, 656, 658, 659, 679, 680, 681, 682, 683, 686, 699, 711, 714, 715, 716, 717, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 758, 771, 783, 786, 787, 788, 789, 790, 791, 792, 793, 795, 797, 799, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 866, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 897, 899, 911, 912, 913, 914, 915, 916, 917, 918, 921, 922, 923, 925, 926, 927, 928, 929, 931, 932, 934, 936, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 960, 962, 963, 964, 965, 966, 968, 969, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 991, 992, 994, 1018, 1026, 1027, 1028, 1029, 1032, 1034, 1035, 1036, 1037, 1038, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1100, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1127, 1137, 1139, 1146, 1148, 1149, 1166, 1168, 1175, 1177, 1178, 1202, 1209, 1214, 1216, 1217, 1219, 1222, 1223, 1229, 1230, 1245, 1246, 1250, 1252, 1257, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1270, 1271, 1272, 1273, 1275, 1280, 1281, 1282, 1284, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1300, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1322], "which": [0, 5, 10, 13, 15, 27, 28, 30, 31, 33, 45, 47, 55, 56, 59, 64, 68, 81, 82, 84, 85, 88, 93, 97, 110, 111, 113, 114, 129, 130, 133, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 150, 151, 154, 155, 156, 158, 159, 165, 166, 168, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 222, 223, 227, 228, 229, 232, 233, 234, 235, 236, 239, 247, 249, 251, 252, 255, 257, 258, 264, 265, 267, 269, 271, 289, 290, 294, 295, 296, 299, 300, 301, 302, 322, 323, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 380, 381, 383, 384, 385, 390, 391, 394, 395, 397, 398, 399, 400, 401, 426, 442, 443, 444, 445, 446, 447, 451, 452, 454, 456, 457, 461, 470, 472, 473, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 497, 502, 503, 505, 515, 516, 517, 518, 525, 526, 527, 528, 529, 530, 532, 534, 537, 539, 540, 541, 545, 551, 559, 562, 564, 582, 583, 585, 586, 590, 604, 606, 614, 615, 618, 623, 627, 640, 641, 643, 644, 647, 652, 656, 669, 670, 672, 673, 686, 690, 692, 699, 706, 711, 717, 718, 721, 725, 726, 727, 728, 729, 730, 731, 732, 735, 736, 739, 740, 741, 745, 746, 747, 749, 750, 758, 762, 764, 771, 778, 783, 786, 787, 788, 789, 790, 791, 792, 793, 812, 813, 817, 818, 819, 822, 823, 824, 825, 826, 829, 837, 839, 841, 842, 845, 847, 848, 854, 855, 857, 859, 861, 879, 880, 884, 885, 886, 889, 890, 891, 892, 912, 913, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 929, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 972, 973, 975, 976, 977, 982, 983, 986, 987, 989, 990, 991, 992, 994, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1032, 1033, 1036, 1038, 1039, 1043, 1052, 1054, 1055, 1063, 1064, 1065, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1079, 1084, 1085, 1087, 1097, 1098, 1099, 1100, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1116, 1119, 1121, 1122, 1123, 1125, 1127, 1137, 1142, 1146, 1159, 1160, 1162, 1163, 1166, 1171, 1175, 1188, 1189, 1191, 1192, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1229, 1230, 1233, 1234, 1239, 1240, 1243, 1244, 1257, 1262, 1265, 1268, 1272, 1273, 1276, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1300, 1307, 1311, 1313, 1315, 1316, 1317, 1319, 1320], "renam": [0, 5, 10, 15, 27, 28, 44, 165, 166, 168, 384, 385, 395, 545, 551, 559, 564, 582, 583, 602, 976, 977, 987], "kei": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 32, 45, 46, 59, 60, 61, 88, 89, 90, 120, 122, 123, 137, 138, 139, 333, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 401, 403, 405, 411, 416, 418, 426, 431, 433, 436, 437, 438, 440, 446, 447, 470, 489, 491, 492, 517, 518, 545, 551, 552, 553, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 588, 604, 605, 618, 619, 620, 647, 648, 649, 679, 681, 682, 725, 726, 727, 923, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 988, 989, 991, 992, 993, 994, 996, 998, 1001, 1002, 1003, 1005, 1007, 1012, 1013, 1015, 1027, 1028, 1052, 1071, 1073, 1074, 1099, 1100, 1125, 1126, 1137, 1138, 1139, 1166, 1167, 1168, 1202, 1309, 1310, 1314], "uniform": [0, 5, 10, 13, 15, 27, 28, 72, 101, 138, 139, 384, 385, 393, 452, 538, 545, 551, 559, 562, 564, 582, 583, 631, 660, 726, 727, 976, 977, 985, 1033, 1120, 1150, 1179, 1241, 1281, 1284, 1307, 1309], "bool": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 46, 47, 54, 60, 61, 62, 65, 66, 68, 70, 71, 72, 89, 90, 91, 94, 95, 97, 99, 100, 101, 118, 122, 125, 126, 135, 136, 137, 138, 139, 150, 151, 154, 155, 156, 169, 173, 175, 182, 189, 194, 207, 209, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 264, 267, 269, 271, 274, 276, 289, 291, 296, 299, 300, 301, 302, 307, 309, 322, 324, 332, 333, 336, 337, 338, 339, 344, 346, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 447, 452, 456, 461, 465, 472, 473, 475, 476, 478, 480, 481, 482, 487, 488, 491, 492, 493, 501, 504, 505, 507, 510, 511, 518, 525, 526, 527, 528, 529, 530, 532, 533, 534, 536, 537, 545, 551, 552, 553, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 592, 605, 606, 613, 619, 620, 621, 624, 625, 627, 629, 630, 631, 648, 649, 650, 653, 654, 656, 658, 659, 660, 677, 681, 684, 686, 690, 692, 699, 706, 711, 714, 723, 724, 725, 726, 727, 740, 741, 745, 746, 747, 758, 762, 764, 771, 778, 783, 797, 799, 812, 814, 819, 822, 823, 824, 825, 826, 829, 839, 841, 842, 843, 845, 847, 848, 854, 857, 859, 861, 864, 866, 879, 881, 886, 889, 890, 891, 892, 897, 899, 912, 914, 922, 923, 926, 927, 928, 929, 934, 936, 949, 951, 959, 960, 963, 964, 965, 966, 969, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 1028, 1033, 1038, 1043, 1047, 1054, 1055, 1057, 1058, 1060, 1062, 1063, 1064, 1069, 1070, 1073, 1074, 1075, 1083, 1086, 1087, 1089, 1092, 1093, 1100, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1118, 1119, 1126, 1127, 1134, 1138, 1139, 1140, 1143, 1144, 1146, 1148, 1149, 1150, 1167, 1168, 1169, 1172, 1173, 1175, 1177, 1178, 1179, 1230, 1245, 1263], "true": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 45, 46, 47, 54, 59, 60, 61, 62, 65, 66, 68, 70, 71, 72, 88, 89, 90, 91, 94, 95, 97, 99, 100, 101, 118, 122, 126, 135, 136, 137, 138, 139, 150, 151, 154, 155, 156, 161, 169, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 207, 209, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 264, 267, 269, 271, 274, 276, 289, 291, 296, 299, 300, 301, 302, 307, 309, 322, 324, 332, 333, 336, 337, 338, 339, 344, 346, 359, 361, 369, 370, 373, 374, 375, 376, 380, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 429, 433, 446, 447, 452, 456, 461, 465, 472, 473, 475, 476, 480, 481, 482, 487, 488, 491, 492, 493, 501, 504, 505, 507, 510, 511, 516, 518, 525, 528, 529, 530, 532, 533, 534, 536, 537, 545, 546, 551, 552, 553, 554, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 572, 573, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 592, 604, 605, 606, 613, 618, 619, 620, 621, 624, 625, 627, 629, 630, 631, 647, 648, 649, 650, 653, 654, 656, 658, 659, 660, 677, 681, 686, 688, 690, 691, 692, 693, 694, 695, 697, 698, 699, 702, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 723, 724, 725, 726, 727, 734, 740, 741, 745, 746, 747, 752, 758, 760, 762, 763, 764, 765, 766, 767, 769, 770, 771, 774, 776, 777, 778, 779, 781, 782, 783, 784, 785, 797, 799, 812, 814, 819, 822, 823, 824, 825, 826, 829, 839, 841, 842, 843, 845, 847, 848, 854, 857, 859, 861, 864, 866, 879, 881, 886, 889, 890, 891, 892, 897, 899, 912, 914, 922, 923, 926, 927, 928, 929, 934, 936, 949, 951, 959, 960, 963, 964, 965, 966, 969, 972, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 998, 1027, 1028, 1033, 1038, 1043, 1047, 1054, 1055, 1057, 1058, 1062, 1063, 1064, 1069, 1070, 1073, 1074, 1075, 1083, 1086, 1087, 1089, 1092, 1093, 1098, 1100, 1107, 1110, 1111, 1112, 1114, 1115, 1116, 1118, 1119, 1125, 1126, 1127, 1134, 1135, 1137, 1138, 1139, 1140, 1143, 1144, 1146, 1148, 1149, 1150, 1166, 1167, 1168, 1169, 1172, 1173, 1175, 1177, 1178, 1179, 1207, 1208, 1230, 1245, 1263, 1283, 1290, 1291, 1292, 1293, 1302, 1304, 1310, 1311, 1315, 1316, 1317, 1320], "forc": [0, 5, 10, 15, 18, 19, 20, 27, 28, 384, 385, 395, 452, 533, 545, 551, 559, 564, 567, 568, 569, 582, 583, 976, 977, 987, 1033, 1115, 1250], "case": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 39, 120, 122, 123, 137, 139, 182, 194, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 440, 518, 545, 551, 552, 553, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 585, 586, 597, 679, 681, 682, 699, 711, 725, 727, 771, 783, 970, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1005, 1015, 1100, 1265, 1272, 1273, 1276, 1293, 1320], "ignor": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 137, 138, 139, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 452, 545, 551, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 725, 726, 727, 812, 814, 819, 822, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1033, 1276, 1316], "list": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 34, 62, 91, 135, 136, 144, 198, 205, 224, 228, 231, 252, 258, 272, 291, 295, 298, 305, 324, 328, 335, 342, 361, 365, 372, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 447, 461, 466, 467, 472, 473, 474, 483, 486, 496, 497, 499, 503, 517, 524, 545, 551, 552, 553, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 585, 586, 592, 621, 650, 723, 724, 732, 787, 795, 814, 818, 821, 842, 848, 862, 881, 885, 888, 895, 914, 918, 925, 932, 951, 955, 962, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 1020, 1028, 1043, 1048, 1049, 1054, 1055, 1056, 1065, 1068, 1078, 1079, 1081, 1085, 1099, 1106, 1140, 1169, 1217, 1222, 1223, 1233, 1272, 1320, 1321], "appli": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 59, 62, 88, 91, 131, 134, 135, 136, 138, 139, 145, 150, 151, 152, 163, 197, 200, 201, 222, 223, 229, 232, 233, 234, 235, 236, 247, 265, 289, 290, 296, 299, 300, 301, 302, 322, 323, 332, 333, 336, 337, 338, 339, 359, 360, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 445, 447, 456, 470, 472, 475, 488, 489, 491, 492, 501, 507, 532, 534, 545, 551, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 618, 621, 647, 650, 719, 722, 723, 724, 726, 727, 733, 739, 740, 741, 742, 754, 786, 789, 790, 812, 813, 819, 822, 823, 824, 825, 826, 837, 855, 879, 880, 886, 889, 890, 891, 892, 912, 913, 922, 923, 926, 927, 928, 929, 949, 950, 959, 960, 963, 964, 965, 966, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 991, 1018, 1026, 1028, 1034, 1038, 1052, 1054, 1057, 1070, 1071, 1073, 1074, 1083, 1089, 1114, 1116, 1137, 1140, 1166, 1169, 1229, 1230, 1272, 1281, 1292, 1302, 1311], "after": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 137, 138, 168, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 401, 518, 528, 545, 551, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 725, 726, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 994, 1100, 1110, 1230, 1273, 1302, 1315, 1316, 1319, 1320, 1322], "set": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44, 45, 59, 70, 71, 72, 88, 99, 100, 101, 120, 121, 122, 123, 124, 125, 126, 127, 128, 137, 138, 139, 150, 151, 154, 155, 169, 173, 175, 182, 189, 194, 197, 199, 200, 201, 202, 203, 204, 222, 224, 229, 232, 233, 234, 235, 236, 237, 238, 251, 252, 253, 289, 291, 296, 299, 300, 301, 302, 303, 304, 322, 324, 332, 333, 336, 337, 338, 339, 340, 341, 359, 361, 369, 370, 373, 374, 375, 376, 377, 378, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 426, 434, 435, 438, 439, 447, 475, 483, 506, 507, 508, 510, 511, 518, 528, 529, 530, 545, 551, 554, 559, 563, 564, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 602, 604, 618, 629, 630, 631, 647, 658, 659, 660, 679, 680, 681, 682, 683, 684, 686, 690, 692, 699, 706, 711, 714, 715, 716, 725, 726, 727, 739, 740, 741, 745, 746, 758, 762, 764, 771, 778, 783, 786, 788, 789, 790, 791, 792, 793, 812, 814, 819, 822, 823, 824, 825, 826, 827, 828, 841, 842, 843, 879, 881, 886, 889, 890, 891, 892, 893, 894, 912, 914, 922, 923, 926, 927, 928, 929, 930, 931, 949, 951, 959, 960, 963, 964, 965, 966, 967, 968, 976, 977, 978, 979, 981, 982, 983, 984, 985, 986, 987, 988, 989, 992, 999, 1000, 1003, 1004, 1010, 1011, 1014, 1028, 1057, 1065, 1088, 1089, 1090, 1092, 1093, 1100, 1110, 1111, 1112, 1125, 1137, 1148, 1149, 1150, 1166, 1177, 1178, 1179, 1198, 1199, 1200, 1207, 1208, 1214, 1217, 1250, 1253, 1254, 1265, 1273, 1276, 1282, 1289, 1292, 1293, 1296, 1297, 1302, 1307, 1311, 1315, 1319, 1320, 1321], "all": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 45, 47, 59, 62, 70, 71, 88, 91, 99, 100, 118, 137, 138, 139, 143, 144, 145, 150, 151, 154, 155, 156, 169, 172, 179, 182, 186, 191, 194, 197, 201, 222, 228, 229, 232, 233, 234, 235, 236, 251, 252, 289, 295, 296, 299, 300, 301, 302, 322, 328, 332, 333, 336, 337, 338, 339, 359, 365, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 416, 430, 445, 446, 447, 452, 466, 474, 483, 496, 499, 501, 503, 517, 518, 524, 528, 530, 543, 545, 551, 552, 553, 554, 559, 563, 564, 565, 566, 567, 568, 569, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 604, 606, 618, 621, 629, 630, 647, 650, 658, 659, 677, 686, 689, 696, 699, 703, 708, 711, 725, 726, 727, 731, 732, 733, 739, 740, 741, 745, 746, 747, 758, 761, 768, 771, 775, 780, 783, 786, 790, 812, 818, 819, 822, 823, 824, 825, 826, 841, 842, 879, 885, 886, 889, 890, 891, 892, 912, 918, 922, 923, 926, 927, 928, 929, 949, 955, 959, 960, 963, 964, 965, 966, 969, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 995, 1007, 1008, 1026, 1027, 1028, 1033, 1048, 1056, 1065, 1078, 1081, 1083, 1085, 1099, 1100, 1106, 1110, 1112, 1125, 1127, 1137, 1140, 1148, 1149, 1166, 1169, 1177, 1178, 1217, 1229, 1264, 1270, 1281, 1300, 1301, 1302, 1304, 1307, 1315, 1316, 1317, 1318, 1320, 1322], "specifi": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 52, 59, 62, 70, 71, 88, 91, 99, 100, 120, 122, 123, 137, 138, 139, 173, 175, 189, 222, 224, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 264, 267, 268, 269, 270, 271, 289, 291, 296, 300, 301, 302, 322, 324, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 361, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 436, 446, 447, 504, 528, 529, 530, 545, 548, 549, 550, 551, 554, 555, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 604, 611, 618, 621, 629, 630, 647, 650, 658, 659, 679, 681, 682, 690, 692, 706, 725, 726, 727, 757, 762, 764, 778, 812, 814, 819, 823, 824, 825, 826, 838, 839, 841, 842, 843, 844, 845, 846, 847, 854, 857, 858, 859, 860, 861, 879, 881, 886, 890, 891, 892, 912, 914, 919, 920, 921, 922, 923, 924, 927, 928, 929, 949, 951, 956, 957, 958, 959, 960, 961, 964, 965, 966, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 990, 991, 992, 993, 994, 1001, 1012, 1018, 1027, 1028, 1086, 1110, 1111, 1112, 1125, 1132, 1137, 1140, 1148, 1149, 1166, 1169, 1177, 1178, 1217, 1257, 1262, 1265, 1268, 1272, 1313, 1314, 1315, 1319], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 183, 184, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 243, 244, 245, 246, 259, 260, 261, 262, 273, 274, 275, 276, 277, 278, 306, 307, 308, 309, 310, 311, 343, 344, 345, 346, 347, 348, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 407, 408, 409, 410, 413, 417, 418, 419, 420, 424, 428, 429, 431, 436, 437, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 590, 594, 595, 596, 597, 598, 599, 600, 601, 606, 607, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 640, 641, 642, 643, 644, 645, 646, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 700, 701, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 759, 772, 773, 786, 787, 788, 789, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 833, 834, 835, 836, 849, 850, 851, 852, 863, 864, 865, 866, 867, 868, 896, 897, 898, 899, 900, 901, 933, 934, 935, 936, 937, 938, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 996, 1001, 1002, 1012, 1013, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1127, 1128, 1135, 1140, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1262, 1300, 1302, 1310, 1313, 1317, 1320], "note": [0, 5, 13, 27, 28, 61, 90, 117, 137, 145, 173, 175, 182, 189, 194, 251, 252, 333, 384, 385, 388, 389, 399, 523, 528, 540, 545, 551, 562, 582, 583, 620, 649, 676, 690, 692, 699, 706, 711, 725, 733, 762, 764, 771, 778, 783, 841, 842, 923, 976, 977, 980, 981, 991, 1105, 1110, 1122, 1139, 1168, 1272, 1273, 1283, 1302, 1315, 1316, 1319, 1320], "ha": [0, 5, 8, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 59, 88, 132, 137, 165, 166, 168, 207, 243, 258, 259, 274, 307, 342, 344, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 433, 440, 505, 507, 510, 511, 545, 551, 554, 562, 563, 565, 566, 567, 568, 569, 572, 573, 578, 579, 580, 581, 582, 583, 584, 587, 618, 647, 720, 725, 797, 833, 848, 849, 864, 897, 932, 934, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 991, 998, 1005, 1015, 1017, 1087, 1089, 1092, 1093, 1137, 1166, 1202, 1229, 1241, 1262, 1265, 1272, 1281, 1302, 1307, 1313, 1315, 1317, 1319, 1320, 1322], "been": [0, 5, 13, 26, 27, 28, 132, 137, 165, 166, 168, 173, 175, 182, 189, 194, 258, 342, 384, 385, 387, 390, 391, 392, 394, 505, 545, 551, 562, 572, 573, 580, 582, 583, 690, 692, 699, 706, 711, 720, 725, 762, 764, 771, 778, 783, 848, 932, 976, 977, 979, 982, 983, 984, 986, 1087, 1217, 1229, 1272, 1302, 1307, 1313, 1316, 1319, 1320], "test": [0, 5, 13, 26, 27, 28, 137, 384, 385, 390, 392, 401, 461, 494, 495, 543, 545, 551, 562, 580, 582, 583, 725, 976, 977, 982, 984, 994, 1043, 1076, 1077, 1265, 1267, 1268, 1276, 1277, 1278, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1307, 1309], "stream": [0, 5, 13, 27, 28, 76, 105, 384, 385, 542, 545, 551, 562, 582, 583, 635, 664, 976, 977, 1154, 1183], "cfradial": [0, 5, 13, 27, 28, 384, 385, 545, 551, 562, 582, 583, 587, 976, 977, 1270, 1280, 1281, 1295, 1297, 1309, 1316], "get": [1, 25, 39, 147, 148, 149, 152, 163, 240, 241, 242, 263, 401, 411, 439, 519, 522, 532, 538, 547, 579, 597, 736, 737, 738, 742, 754, 830, 831, 832, 853, 994, 1004, 1014, 1018, 1029, 1101, 1104, 1114, 1120, 1235, 1236, 1237, 1238, 1246, 1247, 1248, 1249, 1265, 1273, 1292, 1293, 1302, 1309, 1311, 1314, 1315, 1317, 1319, 1320, 1321, 1322], "each": [1, 2, 3, 9, 11, 22, 45, 53, 55, 59, 69, 88, 98, 126, 127, 128, 130, 138, 139, 140, 141, 142, 143, 146, 154, 155, 156, 164, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 394, 398, 400, 445, 446, 447, 461, 497, 502, 504, 505, 515, 521, 522, 525, 532, 533, 534, 536, 538, 540, 547, 548, 549, 555, 560, 571, 587, 604, 612, 614, 618, 628, 647, 657, 714, 715, 716, 718, 726, 727, 728, 729, 730, 731, 735, 745, 746, 747, 755, 812, 819, 823, 824, 825, 839, 845, 847, 857, 859, 861, 879, 886, 890, 891, 912, 922, 923, 927, 928, 949, 959, 960, 964, 965, 986, 990, 992, 1018, 1026, 1027, 1028, 1043, 1079, 1084, 1086, 1087, 1097, 1103, 1104, 1107, 1114, 1115, 1116, 1118, 1120, 1122, 1125, 1133, 1137, 1147, 1166, 1176, 1198, 1199, 1200, 1235, 1236, 1237, 1239, 1246, 1247, 1248, 1249, 1272, 1277, 1292, 1295, 1302, 1314, 1317, 1320], "assum": [1, 3, 9, 59, 88, 117, 118, 137, 140, 141, 142, 143, 154, 155, 156, 477, 478, 503, 516, 518, 523, 528, 530, 531, 547, 549, 555, 618, 647, 676, 677, 725, 728, 729, 730, 731, 745, 746, 747, 1059, 1060, 1085, 1098, 1100, 1105, 1110, 1112, 1113, 1137, 1166, 1316], "clockwis": [1, 59, 88, 547, 618, 647, 1137, 1166], "rotat": [1, 59, 88, 205, 547, 618, 647, 795, 1137, 1166], "north": [1, 55, 59, 88, 251, 252, 264, 333, 370, 547, 614, 618, 647, 841, 842, 854, 923, 960, 1029, 1137, 1166, 1234, 1285, 1316, 1317], "tstart": [1, 547], "tend": [1, 547, 1315], "arrai": [1, 8, 14, 16, 26, 45, 47, 53, 55, 56, 61, 65, 66, 68, 69, 70, 71, 72, 90, 94, 95, 97, 98, 99, 100, 101, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 138, 139, 145, 146, 157, 160, 163, 164, 169, 173, 175, 182, 189, 194, 205, 211, 222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 272, 278, 289, 290, 291, 296, 300, 301, 302, 305, 311, 322, 323, 324, 329, 330, 332, 333, 337, 338, 339, 342, 348, 359, 360, 361, 366, 367, 369, 370, 374, 375, 376, 446, 447, 448, 449, 450, 461, 471, 501, 502, 505, 522, 525, 529, 530, 531, 536, 538, 540, 541, 544, 547, 554, 557, 558, 563, 565, 572, 573, 580, 604, 606, 612, 614, 615, 620, 624, 625, 627, 628, 629, 630, 631, 649, 653, 654, 656, 657, 658, 659, 660, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 690, 692, 699, 706, 711, 725, 726, 727, 733, 734, 735, 743, 748, 751, 754, 755, 758, 762, 764, 771, 778, 783, 795, 801, 812, 813, 814, 819, 823, 824, 825, 826, 837, 839, 841, 842, 843, 845, 847, 854, 855, 857, 859, 861, 862, 868, 879, 880, 881, 886, 890, 891, 892, 895, 901, 912, 913, 914, 919, 920, 922, 923, 927, 928, 929, 932, 938, 949, 950, 951, 956, 957, 959, 960, 964, 965, 966, 1018, 1027, 1028, 1029, 1031, 1043, 1053, 1083, 1084, 1087, 1104, 1107, 1111, 1112, 1113, 1118, 1120, 1122, 1123, 1125, 1127, 1133, 1139, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1168, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1210, 1211, 1212, 1213, 1214, 1218, 1220, 1221, 1227, 1228, 1229, 1230, 1235, 1236, 1237, 1238, 1239, 1243, 1244, 1246, 1247, 1248, 1249, 1252, 1253, 1254, 1256, 1276, 1289, 1302, 1304, 1309, 1310, 1311, 1313, 1314, 1316, 1317, 1320], "sweep_start": [1, 547], "sweep_end": [1, 547], "indic": [1, 36, 45, 59, 83, 86, 87, 88, 112, 115, 116, 151, 154, 155, 169, 173, 182, 194, 249, 394, 504, 528, 529, 530, 535, 540, 541, 547, 594, 604, 618, 642, 645, 646, 647, 671, 674, 675, 686, 690, 699, 711, 734, 741, 745, 746, 758, 762, 771, 783, 839, 986, 1086, 1110, 1111, 1112, 1117, 1122, 1123, 1125, 1137, 1161, 1164, 1165, 1166, 1190, 1193, 1194, 1230, 1231, 1233, 1272, 1289, 1315, 1316], "chy0": [2, 4, 6, 7, 11, 548, 550, 552, 553, 560], "255": [2, 4, 6, 11, 398, 548, 550, 552, 560, 990], "0": [2, 3, 4, 6, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 30, 31, 39, 47, 59, 64, 65, 66, 68, 69, 70, 71, 72, 88, 93, 94, 95, 97, 98, 99, 100, 101, 121, 124, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 162, 169, 194, 197, 199, 200, 201, 202, 203, 204, 205, 221, 222, 229, 232, 233, 234, 235, 236, 237, 251, 252, 253, 267, 272, 288, 289, 296, 299, 300, 301, 302, 303, 305, 321, 322, 331, 332, 333, 336, 337, 338, 339, 340, 342, 358, 359, 368, 369, 370, 373, 374, 375, 376, 377, 394, 398, 446, 447, 448, 451, 457, 461, 463, 465, 466, 470, 473, 474, 475, 477, 478, 482, 483, 484, 489, 496, 497, 498, 499, 501, 504, 505, 507, 509, 510, 511, 513, 514, 515, 518, 521, 524, 525, 526, 528, 529, 532, 533, 534, 535, 536, 537, 538, 541, 548, 549, 550, 552, 555, 560, 563, 565, 567, 568, 569, 571, 578, 579, 585, 586, 597, 606, 618, 623, 624, 625, 627, 628, 629, 630, 631, 647, 652, 653, 654, 656, 657, 658, 659, 660, 680, 683, 686, 711, 714, 715, 717, 718, 719, 721, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 745, 746, 747, 749, 750, 753, 758, 783, 786, 788, 789, 790, 791, 792, 793, 795, 811, 812, 819, 822, 823, 824, 825, 826, 827, 841, 842, 843, 857, 862, 878, 879, 886, 889, 890, 891, 892, 893, 895, 911, 912, 921, 922, 923, 926, 927, 928, 929, 930, 932, 948, 949, 958, 959, 960, 963, 964, 965, 966, 967, 986, 990, 1018, 1027, 1028, 1032, 1034, 1039, 1043, 1045, 1047, 1048, 1052, 1055, 1056, 1057, 1059, 1060, 1064, 1065, 1066, 1071, 1078, 1079, 1080, 1081, 1083, 1086, 1087, 1089, 1091, 1092, 1093, 1095, 1096, 1097, 1100, 1103, 1106, 1107, 1108, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1123, 1127, 1137, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1166, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1215, 1216, 1219, 1230, 1235, 1236, 1237, 1241, 1242, 1245, 1250, 1265, 1267, 1268, 1269, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320], "chx0": [2, 4, 6, 7, 11, 548, 550, 552, 553, 560], "160": [2, 4, 6, 11, 548, 550, 552, 560, 1313, 1315], "xre": [2, 3, 9, 11, 22, 548, 549, 555, 560, 571], "1": [2, 3, 5, 6, 7, 9, 11, 14, 18, 19, 20, 22, 26, 30, 31, 45, 59, 69, 88, 98, 117, 118, 121, 124, 129, 130, 135, 136, 137, 139, 147, 148, 149, 150, 151, 152, 163, 182, 197, 236, 252, 272, 302, 339, 376, 384, 390, 391, 392, 397, 446, 447, 450, 456, 457, 461, 466, 468, 470, 474, 475, 478, 483, 484, 489, 496, 497, 501, 505, 507, 515, 518, 519, 525, 528, 530, 532, 534, 536, 540, 541, 548, 549, 551, 552, 553, 555, 560, 563, 567, 568, 569, 571, 580, 585, 586, 604, 618, 628, 647, 657, 676, 677, 680, 683, 699, 717, 718, 723, 724, 725, 727, 736, 737, 738, 740, 741, 742, 754, 771, 786, 826, 842, 862, 892, 929, 966, 976, 982, 983, 984, 989, 1027, 1028, 1031, 1038, 1039, 1043, 1048, 1050, 1052, 1056, 1057, 1060, 1065, 1066, 1071, 1078, 1079, 1083, 1087, 1089, 1097, 1100, 1101, 1107, 1110, 1112, 1114, 1116, 1118, 1122, 1123, 1125, 1137, 1147, 1166, 1176, 1215, 1216, 1217, 1219, 1229, 1230, 1236, 1242, 1248, 1249, 1256, 1264, 1267, 1272, 1276, 1277, 1278, 1281, 1282, 1283, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1302, 1303, 1304, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1320], "yre": [2, 3, 9, 11, 22, 548, 549, 555, 560, 571], "nx": [2, 3, 9, 11, 22, 45, 548, 549, 555, 560, 571, 604, 1125, 1315], "710": [2, 11, 548, 560], "ny": [2, 3, 9, 11, 22, 45, 548, 549, 555, 560, 571, 604, 1125, 1315], "640": [2, 11, 548, 560, 1298, 1318], "nz": [2, 3, 9, 11, 22, 45, 548, 549, 555, 560, 571, 604, 1125, 1315], "meteoswiss": [2, 11, 30, 31, 548, 560, 585, 586, 1265, 1303, 1304, 1315, 1316, 1320], "oper": [2, 3, 9, 11, 135, 136, 173, 175, 182, 189, 194, 394, 445, 530, 537, 548, 549, 555, 560, 690, 692, 699, 706, 711, 723, 724, 762, 764, 771, 778, 783, 986, 1026, 1112, 1119, 1302, 1315, 1316, 1319], "binari": [2, 3, 9, 18, 19, 20, 30, 31, 32, 380, 548, 549, 555, 567, 568, 569, 585, 586, 588, 972], "retriev": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 35, 37, 45, 65, 66, 68, 69, 70, 71, 72, 94, 95, 97, 98, 99, 100, 101, 135, 136, 148, 164, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 593, 595, 604, 624, 625, 627, 628, 629, 630, 631, 653, 654, 656, 657, 658, 659, 660, 723, 724, 737, 743, 755, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1125, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1215, 1216, 1230, 1265, 1301, 1302, 1303, 1304, 1305, 1308, 1311, 1315, 1318, 1320], "metadata": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 43, 44, 45, 46, 59, 60, 61, 88, 89, 90, 126, 127, 128, 137, 138, 139, 141, 142, 143, 144, 150, 151, 154, 155, 156, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 451, 458, 477, 478, 484, 498, 504, 518, 526, 527, 528, 529, 530, 531, 532, 533, 534, 539, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 585, 586, 588, 590, 592, 593, 595, 601, 602, 604, 605, 618, 619, 620, 647, 648, 649, 714, 715, 716, 725, 726, 727, 729, 730, 731, 732, 740, 741, 745, 746, 747, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 991, 1029, 1032, 1034, 1040, 1059, 1060, 1066, 1080, 1086, 1100, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1121, 1125, 1126, 1137, 1138, 1139, 1166, 1167, 1168, 1195, 1197, 1202, 1257, 1273, 1290, 1291, 1295, 1317], "dure": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 132, 137, 138, 139, 182, 194, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 501, 528, 537, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 592, 699, 711, 720, 725, 726, 727, 771, 783, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1083, 1110, 1119, 1315, 1316, 1319, 1322], "ani": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 44, 60, 61, 89, 90, 126, 127, 128, 137, 138, 139, 140, 150, 151, 169, 173, 175, 182, 189, 194, 197, 200, 201, 305, 342, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 447, 502, 525, 532, 533, 548, 549, 550, 551, 552, 553, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 583, 584, 585, 586, 588, 602, 619, 620, 648, 649, 686, 690, 692, 699, 706, 711, 714, 715, 716, 725, 726, 727, 728, 739, 740, 741, 758, 762, 764, 771, 778, 783, 786, 789, 790, 895, 932, 973, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 992, 1028, 1034, 1084, 1107, 1114, 1115, 1138, 1139, 1167, 1168, 1197, 1263, 1309], "success": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987], "unless": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 72, 101, 120, 122, 123, 139, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 631, 660, 679, 681, 682, 727, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 991, 1150, 1179], "explicitli": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987], "A": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 33, 34, 45, 59, 61, 88, 90, 121, 124, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 168, 169, 197, 198, 199, 200, 201, 202, 203, 204, 205, 239, 252, 258, 272, 305, 331, 342, 368, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 401, 445, 446, 447, 452, 456, 457, 466, 474, 501, 502, 504, 506, 515, 518, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 537, 539, 540, 541, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 590, 592, 604, 618, 620, 647, 649, 680, 683, 686, 714, 715, 716, 717, 718, 721, 723, 724, 725, 726, 727, 729, 730, 731, 732, 735, 739, 740, 741, 745, 746, 747, 749, 750, 758, 786, 787, 788, 789, 790, 791, 792, 793, 795, 829, 842, 848, 862, 895, 921, 932, 958, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 989, 993, 994, 1007, 1026, 1027, 1028, 1033, 1034, 1038, 1039, 1048, 1056, 1083, 1084, 1086, 1088, 1097, 1100, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1125, 1137, 1139, 1166, 1168, 1240, 1284, 1302, 1306, 1307, 1316, 1320], "default": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 40, 44, 45, 59, 65, 66, 68, 70, 71, 76, 88, 94, 95, 97, 99, 100, 105, 120, 121, 122, 123, 124, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 154, 155, 156, 158, 159, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 229, 232, 233, 234, 235, 236, 238, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 296, 299, 300, 301, 302, 304, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 332, 333, 336, 337, 338, 339, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 369, 370, 373, 374, 375, 376, 378, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 406, 408, 415, 432, 447, 451, 453, 454, 455, 456, 462, 463, 464, 465, 469, 470, 472, 473, 476, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 500, 501, 502, 503, 504, 507, 510, 511, 517, 518, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 539, 540, 548, 549, 550, 554, 555, 559, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 585, 586, 588, 590, 598, 602, 604, 618, 624, 625, 627, 629, 630, 635, 647, 653, 654, 656, 658, 659, 664, 679, 680, 681, 682, 683, 686, 690, 692, 699, 706, 711, 714, 715, 716, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 737, 739, 740, 741, 745, 746, 747, 749, 750, 758, 762, 764, 771, 778, 783, 786, 787, 788, 789, 790, 791, 792, 793, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 819, 822, 823, 824, 825, 826, 828, 837, 839, 841, 842, 843, 845, 847, 854, 855, 857, 859, 861, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 880, 881, 886, 889, 890, 891, 892, 894, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 922, 923, 926, 927, 928, 929, 931, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 959, 960, 963, 964, 965, 966, 968, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 997, 1009, 1028, 1032, 1034, 1035, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1051, 1052, 1054, 1055, 1058, 1061, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1082, 1083, 1084, 1085, 1086, 1089, 1092, 1093, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1121, 1122, 1125, 1137, 1143, 1144, 1146, 1148, 1149, 1154, 1166, 1172, 1173, 1175, 1177, 1178, 1183, 1198, 1199, 1200, 1217, 1219, 1229, 1230, 1257, 1292, 1293, 1302, 1307, 1316, 1319, 1320, 1322], "introduct": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 581, 584, 973, 978, 980, 981, 982, 983, 984, 985, 986, 1320], "addit": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 137, 138, 139, 145, 221, 222, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 288, 289, 296, 300, 301, 302, 321, 322, 329, 330, 331, 332, 333, 334, 337, 338, 339, 358, 359, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 445, 447, 475, 476, 501, 543, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 592, 725, 726, 727, 733, 811, 812, 819, 823, 824, 825, 826, 838, 839, 841, 842, 843, 844, 845, 846, 847, 857, 858, 859, 860, 861, 878, 879, 886, 890, 891, 892, 911, 912, 919, 920, 921, 922, 923, 924, 927, 928, 929, 948, 949, 956, 957, 958, 959, 960, 961, 964, 965, 966, 969, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1018, 1026, 1028, 1057, 1058, 1083, 1240, 1270, 1272, 1299, 1302, 1307], "specif": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 126, 127, 128, 143, 144, 154, 155, 156, 182, 194, 342, 370, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 447, 502, 506, 507, 508, 510, 511, 517, 518, 525, 526, 527, 528, 529, 530, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 699, 711, 714, 715, 716, 731, 732, 745, 746, 747, 771, 783, 932, 960, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1028, 1084, 1088, 1089, 1090, 1092, 1093, 1099, 1100, 1107, 1108, 1109, 1110, 1111, 1112, 1240, 1267, 1281, 1302, 1307, 1316, 1320, 1322], "py": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 44, 45, 59, 88, 120, 122, 123, 126, 127, 128, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 169, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 305, 322, 324, 332, 333, 337, 338, 339, 342, 359, 361, 369, 370, 374, 375, 376, 386, 387, 388, 389, 393, 395, 398, 451, 452, 453, 454, 455, 456, 462, 463, 464, 465, 469, 470, 472, 473, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 500, 501, 502, 503, 504, 518, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 539, 542, 543, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 585, 586, 589, 590, 591, 602, 603, 604, 618, 647, 679, 681, 682, 686, 714, 715, 716, 721, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 739, 740, 741, 745, 746, 747, 749, 750, 756, 758, 786, 787, 788, 789, 790, 791, 792, 793, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 895, 912, 914, 922, 923, 927, 928, 929, 932, 949, 951, 959, 960, 964, 965, 966, 978, 979, 980, 981, 985, 987, 990, 1017, 1029, 1032, 1033, 1035, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1051, 1052, 1054, 1055, 1061, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1086, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1121, 1125, 1137, 1166, 1209, 1233, 1234, 1257, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1279, 1280, 1281, 1283, 1293, 1298, 1299, 1300, 1305, 1308, 1309, 1310, 1311, 1313, 1315, 1316, 1318, 1319, 1322], "art": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 44, 45, 59, 88, 120, 122, 123, 126, 127, 128, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 169, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 305, 322, 324, 332, 333, 337, 338, 339, 342, 359, 361, 369, 370, 374, 375, 376, 386, 387, 388, 389, 393, 395, 398, 451, 452, 453, 454, 455, 456, 462, 463, 464, 465, 469, 470, 472, 473, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 500, 501, 502, 503, 504, 518, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 539, 543, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 585, 586, 589, 590, 591, 602, 603, 604, 618, 647, 679, 681, 682, 686, 714, 715, 716, 721, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 739, 740, 741, 745, 746, 747, 749, 750, 756, 758, 786, 787, 788, 789, 790, 791, 792, 793, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 895, 912, 914, 922, 923, 927, 928, 929, 932, 949, 951, 959, 960, 964, 965, 966, 978, 979, 980, 981, 985, 987, 990, 1017, 1032, 1033, 1035, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1051, 1052, 1054, 1055, 1061, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1086, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1121, 1125, 1137, 1166, 1209, 1233, 1234, 1257, 1264, 1265, 1267, 1268, 1270, 1271, 1272, 1273, 1280, 1281, 1283, 1300, 1308, 1309, 1310, 1311, 1313, 1315, 1316, 1319, 1322], "configur": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 33, 38, 39, 41, 44, 126, 127, 128, 133, 137, 138, 139, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 451, 453, 454, 455, 456, 462, 463, 464, 465, 469, 470, 472, 473, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 500, 501, 502, 503, 504, 518, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 539, 548, 549, 550, 554, 555, 560, 561, 563, 565, 566, 567, 568, 569, 571, 578, 579, 580, 581, 584, 590, 591, 596, 597, 599, 602, 714, 715, 716, 721, 725, 726, 727, 729, 730, 731, 732, 735, 739, 740, 741, 745, 746, 747, 749, 750, 786, 787, 788, 789, 790, 791, 792, 793, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1032, 1035, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1051, 1052, 1054, 1055, 1061, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1086, 1100, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1121, 1257, 1276, 1301, 1316, 1320], "float": [2, 3, 4, 6, 7, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 39, 72, 101, 117, 118, 119, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 173, 197, 199, 200, 201, 202, 203, 204, 205, 206, 222, 224, 225, 229, 230, 232, 233, 234, 235, 236, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 266, 267, 268, 269, 270, 271, 272, 273, 289, 291, 292, 296, 297, 299, 300, 301, 302, 305, 306, 322, 324, 325, 331, 332, 333, 334, 336, 337, 338, 339, 342, 343, 359, 361, 362, 368, 369, 370, 371, 373, 374, 375, 376, 398, 442, 443, 444, 445, 447, 448, 450, 451, 452, 457, 458, 461, 463, 466, 471, 473, 474, 475, 477, 478, 483, 484, 496, 497, 498, 499, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 544, 548, 549, 550, 552, 553, 555, 560, 563, 565, 567, 568, 569, 571, 578, 579, 580, 584, 585, 586, 597, 631, 660, 676, 677, 678, 680, 683, 690, 714, 715, 716, 717, 718, 719, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 762, 786, 788, 789, 790, 791, 792, 793, 795, 796, 812, 814, 815, 819, 820, 822, 823, 824, 825, 826, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 854, 856, 857, 858, 859, 860, 861, 862, 863, 879, 881, 882, 886, 887, 889, 890, 891, 892, 895, 896, 912, 914, 915, 921, 922, 923, 924, 926, 927, 928, 929, 932, 933, 949, 951, 952, 958, 959, 960, 961, 963, 964, 965, 966, 969, 990, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1028, 1031, 1032, 1033, 1039, 1040, 1043, 1045, 1048, 1053, 1055, 1056, 1057, 1059, 1060, 1065, 1066, 1078, 1079, 1080, 1081, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1150, 1179, 1197, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1250, 1258, 1259, 1260, 1265, 1315], "swiss": [2, 4, 6, 7, 11, 125, 548, 550, 552, 553, 560, 684, 1308], "coordin": [2, 3, 4, 6, 7, 9, 11, 22, 45, 47, 53, 59, 70, 88, 99, 117, 118, 119, 120, 121, 122, 123, 124, 125, 162, 211, 222, 229, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 278, 289, 296, 300, 301, 302, 311, 322, 332, 333, 337, 338, 339, 348, 359, 369, 370, 374, 375, 376, 397, 445, 447, 497, 504, 518, 548, 549, 550, 552, 553, 555, 560, 571, 604, 606, 612, 618, 629, 647, 658, 676, 677, 678, 679, 680, 681, 682, 683, 684, 753, 801, 812, 819, 823, 824, 825, 826, 839, 845, 847, 857, 859, 861, 868, 879, 886, 890, 891, 892, 901, 912, 922, 923, 927, 928, 929, 938, 949, 959, 960, 964, 965, 966, 989, 1017, 1018, 1020, 1026, 1028, 1029, 1079, 1086, 1100, 1125, 1127, 1133, 1137, 1148, 1166, 1177, 1197, 1214, 1239, 1265, 1266, 1270, 1273, 1275, 1276, 1277, 1278, 1307, 1313, 1317], "posit": [2, 4, 6, 7, 11, 25, 26, 59, 88, 121, 124, 127, 128, 137, 147, 148, 149, 153, 161, 162, 164, 476, 478, 484, 504, 515, 528, 532, 533, 534, 540, 541, 548, 550, 552, 553, 560, 579, 580, 618, 647, 680, 683, 715, 716, 725, 736, 737, 738, 743, 744, 752, 753, 755, 1034, 1058, 1060, 1066, 1086, 1097, 1110, 1114, 1115, 1116, 1122, 1123, 1137, 1166, 1215, 1216, 1276, 1281, 1283, 1315, 1316, 1317], "south": [2, 4, 6, 7, 11, 548, 550, 552, 553, 560, 1029, 1285, 1315], "western": [2, 4, 6, 7, 11, 548, 550, 552, 553, 560], "point": [2, 3, 4, 6, 7, 9, 11, 22, 44, 45, 47, 61, 90, 122, 126, 127, 128, 142, 143, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 211, 225, 230, 236, 248, 249, 250, 266, 278, 292, 297, 302, 305, 311, 325, 330, 331, 334, 339, 348, 362, 367, 368, 371, 376, 388, 389, 392, 394, 398, 445, 446, 447, 449, 457, 466, 474, 477, 478, 483, 484, 496, 499, 501, 515, 532, 537, 548, 549, 550, 552, 553, 555, 560, 571, 602, 604, 606, 620, 649, 681, 714, 715, 716, 730, 731, 735, 736, 737, 738, 741, 744, 745, 746, 747, 748, 801, 815, 820, 826, 838, 839, 840, 856, 868, 882, 887, 892, 895, 901, 915, 920, 921, 924, 929, 938, 952, 957, 958, 961, 966, 980, 981, 984, 986, 990, 1026, 1027, 1028, 1039, 1048, 1056, 1059, 1060, 1065, 1066, 1078, 1081, 1083, 1097, 1114, 1119, 1125, 1127, 1139, 1168, 1197, 1217, 1219, 1229, 1230, 1234, 1236, 1245, 1248, 1263, 1265, 1270, 1282, 1289, 1299, 1302, 1307, 1311, 1313, 1315, 1316, 1317], "grid": [2, 3, 4, 6, 7, 9, 11, 12, 18, 22, 30, 39, 59, 88, 224, 226, 234, 236, 239, 243, 248, 250, 251, 252, 253, 254, 256, 258, 259, 264, 266, 267, 268, 270, 291, 293, 302, 324, 326, 339, 361, 363, 376, 387, 388, 397, 398, 399, 442, 443, 444, 445, 446, 447, 466, 474, 483, 496, 499, 501, 518, 523, 524, 537, 548, 549, 550, 552, 553, 555, 560, 561, 567, 571, 585, 597, 618, 647, 814, 816, 824, 826, 829, 833, 838, 840, 841, 842, 843, 844, 846, 848, 849, 854, 856, 857, 858, 860, 881, 883, 892, 914, 916, 929, 951, 953, 966, 979, 980, 989, 990, 991, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1048, 1056, 1065, 1078, 1081, 1083, 1100, 1105, 1106, 1119, 1137, 1166, 1197, 1201, 1203, 1204, 1225, 1239, 1241, 1259, 1260, 1265, 1270, 1275, 1280, 1283, 1293, 1296, 1302, 1307, 1308, 1315, 1316], "resolut": [2, 3, 9, 11, 22, 59, 88, 129, 130, 135, 136, 222, 224, 225, 229, 230, 233, 234, 235, 236, 252, 264, 289, 291, 292, 296, 297, 300, 301, 302, 322, 324, 325, 332, 333, 334, 337, 338, 339, 359, 361, 362, 369, 370, 371, 374, 375, 376, 390, 449, 457, 466, 474, 483, 496, 499, 501, 518, 522, 528, 534, 537, 548, 549, 555, 560, 571, 618, 647, 717, 718, 723, 724, 812, 814, 815, 819, 820, 823, 824, 825, 826, 842, 854, 879, 881, 882, 886, 887, 890, 891, 892, 912, 914, 915, 922, 923, 924, 927, 928, 929, 949, 951, 952, 959, 960, 961, 964, 965, 966, 982, 1029, 1039, 1048, 1056, 1065, 1078, 1081, 1083, 1100, 1104, 1110, 1116, 1119, 1137, 1166, 1230, 1273, 1286, 1289, 1311, 1313, 1314, 1315, 1316], "km": [2, 3, 9, 11, 22, 117, 121, 124, 205, 225, 230, 231, 238, 272, 292, 297, 298, 304, 305, 325, 334, 335, 341, 342, 362, 370, 371, 372, 378, 450, 458, 471, 498, 501, 502, 518, 521, 522, 525, 528, 548, 549, 555, 560, 571, 676, 680, 683, 795, 815, 820, 821, 828, 862, 882, 887, 888, 894, 895, 915, 924, 925, 931, 932, 952, 960, 961, 962, 968, 1031, 1040, 1053, 1080, 1083, 1084, 1100, 1103, 1104, 1107, 1110, 1230, 1232, 1258, 1285, 1290, 1291, 1293, 1313, 1315, 1316], "int": [2, 3, 9, 11, 14, 16, 22, 26, 39, 45, 47, 59, 65, 66, 68, 69, 70, 71, 72, 88, 94, 95, 97, 98, 99, 100, 101, 128, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 154, 155, 156, 158, 159, 164, 182, 194, 198, 200, 207, 208, 209, 221, 225, 229, 230, 232, 233, 234, 236, 243, 244, 245, 246, 251, 252, 253, 259, 260, 261, 262, 264, 267, 274, 275, 276, 288, 292, 296, 297, 299, 300, 302, 307, 308, 309, 321, 325, 332, 333, 334, 336, 337, 339, 344, 345, 346, 358, 362, 369, 370, 371, 373, 374, 376, 398, 402, 447, 452, 456, 457, 461, 465, 466, 470, 471, 472, 473, 474, 475, 476, 482, 483, 488, 489, 491, 492, 496, 501, 502, 505, 515, 518, 526, 527, 528, 530, 532, 534, 536, 538, 540, 541, 544, 548, 549, 555, 560, 563, 565, 571, 580, 597, 604, 606, 618, 624, 625, 627, 628, 629, 630, 631, 647, 653, 654, 656, 657, 658, 659, 660, 699, 711, 716, 721, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 736, 737, 740, 741, 743, 745, 746, 747, 749, 750, 755, 771, 783, 787, 789, 797, 798, 799, 811, 815, 819, 820, 822, 823, 824, 826, 833, 834, 835, 836, 841, 842, 843, 849, 850, 851, 852, 854, 857, 864, 865, 866, 878, 882, 886, 887, 889, 890, 892, 897, 898, 899, 911, 915, 922, 923, 924, 926, 927, 929, 934, 935, 936, 948, 952, 959, 960, 961, 963, 964, 966, 990, 1028, 1029, 1033, 1038, 1039, 1043, 1047, 1048, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1064, 1065, 1070, 1071, 1073, 1074, 1078, 1083, 1084, 1087, 1097, 1100, 1108, 1109, 1110, 1112, 1114, 1116, 1118, 1120, 1122, 1123, 1125, 1127, 1137, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1166, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1198, 1199, 1200, 1214, 1217, 1219, 1229, 1230, 1231, 1233, 1235, 1239, 1262, 1315, 1320], "dimens": [2, 3, 9, 11, 22, 45, 88, 137, 388, 447, 501, 517, 523, 528, 530, 537, 548, 549, 555, 560, 571, 604, 647, 725, 980, 1028, 1034, 1083, 1099, 1105, 1110, 1112, 1119, 1125, 1166, 1239, 1259, 1260, 1302, 1309, 1313, 1315, 1317], "1536": [3, 9, 549, 555], "dtype": [3, 8, 169, 447, 549, 554, 686, 758, 1028, 1309, 1311, 1317], "float32": [3, 16, 26, 399, 549, 565, 580, 991, 1265, 1309, 1311, 1317], "date_format": [3, 9, 22, 549, 555, 571], "added_tim": [3, 9, 22, 549, 555, 571], "86400": [3, 549], "x_offset": [3, 9, 22, 549, 555, 571], "619652": [3, 9, 549, 555], "074056": [3, 9, 549, 555], "y_offset": [3, 9, 22, 549, 555, 571], "3526818": [3, 9, 549, 555], "337932": [3, 9, 549, 555], "lat_0": [3, 9, 22, 45, 59, 88, 121, 124, 333, 370, 549, 555, 571, 604, 618, 647, 680, 683, 923, 960, 1125, 1137, 1166, 1289, 1316], "90": [3, 9, 516, 549, 555, 1098, 1245, 1320], "lon_0": [3, 9, 22, 45, 59, 88, 121, 124, 333, 370, 549, 555, 571, 604, 618, 647, 680, 683, 923, 960, 1125, 1137, 1166, 1289, 1316], "proj": [3, 22, 45, 52, 59, 88, 120, 122, 123, 264, 342, 549, 571, 604, 611, 618, 647, 679, 681, 682, 854, 932, 1125, 1132, 1137, 1166], "gnom": [3, 549], "rainfall_accumul": [3, 549], "meteofr": [3, 9, 12, 22, 549, 555, 561, 571, 1307], "stereopolar": [3, 9, 549, 555], "project": [3, 9, 21, 22, 45, 48, 52, 59, 88, 120, 121, 122, 123, 124, 227, 239, 251, 252, 253, 264, 294, 305, 327, 333, 364, 370, 388, 397, 398, 447, 466, 474, 483, 496, 499, 516, 549, 555, 570, 571, 589, 604, 607, 611, 618, 647, 679, 680, 681, 682, 683, 817, 829, 841, 842, 843, 854, 884, 895, 917, 923, 954, 960, 980, 989, 990, 1028, 1029, 1048, 1056, 1065, 1078, 1081, 1098, 1125, 1128, 1132, 1137, 1166, 1272, 1273, 1276, 1282, 1283, 1289, 1296, 1300, 1302, 1307, 1310, 1311, 1313, 1314, 1315, 1316, 1319], "type": [3, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 34, 40, 59, 88, 138, 139, 154, 155, 156, 157, 205, 272, 305, 342, 381, 386, 388, 389, 390, 391, 393, 394, 395, 399, 400, 402, 448, 461, 466, 474, 483, 496, 499, 505, 507, 525, 528, 538, 549, 554, 563, 565, 566, 567, 568, 569, 578, 579, 580, 581, 584, 585, 586, 592, 598, 618, 647, 726, 727, 745, 746, 747, 748, 795, 862, 895, 932, 973, 978, 980, 981, 982, 983, 985, 986, 987, 991, 992, 1043, 1048, 1056, 1065, 1078, 1081, 1087, 1089, 1107, 1110, 1120, 1137, 1166, 1217, 1219, 1316, 1317, 1320], "date": [3, 9, 22, 382, 383, 549, 555, 571, 974, 975, 1264, 1272, 1273], "second": [3, 9, 22, 55, 56, 57, 58, 61, 72, 90, 101, 117, 137, 394, 401, 515, 530, 540, 549, 555, 571, 614, 615, 616, 617, 620, 631, 649, 660, 676, 725, 986, 994, 1018, 1097, 1112, 1122, 1139, 1150, 1168, 1179, 1253, 1254, 1272, 1273, 1276, 1289, 1296, 1314, 1317, 1320], "nomin": [3, 9, 14, 22, 24, 25, 549, 555, 563, 571, 578, 579], "24h": [3, 9, 549, 555], "accumul": [3, 9, 532, 549, 555, 1114, 1265, 1302], "mf": [3, 9, 147, 148, 149, 549, 555, 736, 737, 738], "x": [3, 9, 21, 22, 45, 51, 53, 71, 79, 88, 100, 108, 117, 118, 119, 120, 121, 122, 123, 124, 205, 211, 215, 222, 224, 227, 229, 232, 233, 234, 235, 236, 238, 249, 251, 255, 257, 267, 269, 271, 272, 278, 282, 289, 291, 294, 296, 299, 300, 301, 302, 304, 305, 311, 315, 322, 324, 327, 330, 332, 336, 337, 338, 339, 341, 342, 348, 352, 359, 361, 364, 367, 369, 373, 374, 375, 376, 378, 442, 443, 444, 445, 446, 447, 461, 501, 506, 520, 523, 524, 528, 529, 530, 537, 538, 549, 555, 570, 571, 604, 610, 612, 630, 638, 647, 659, 667, 676, 677, 678, 679, 680, 681, 682, 683, 795, 801, 805, 812, 814, 817, 819, 822, 823, 824, 825, 826, 828, 839, 841, 845, 847, 857, 859, 861, 862, 868, 872, 879, 881, 884, 886, 889, 890, 891, 892, 894, 895, 901, 905, 912, 914, 917, 920, 922, 926, 927, 928, 929, 931, 932, 938, 942, 949, 951, 954, 957, 959, 963, 964, 965, 966, 968, 1018, 1022, 1023, 1024, 1026, 1027, 1028, 1043, 1083, 1088, 1102, 1105, 1106, 1110, 1111, 1112, 1119, 1120, 1125, 1131, 1133, 1149, 1157, 1166, 1178, 1186, 1197, 1239, 1276, 1282, 1283, 1292, 1293, 1302, 1313, 1314, 1315, 1316, 1317, 1319], "offset": [3, 9, 18, 19, 20, 22, 30, 31, 32, 126, 133, 150, 151, 158, 159, 205, 272, 305, 331, 342, 368, 463, 473, 501, 549, 555, 567, 568, 569, 571, 585, 586, 588, 714, 721, 740, 741, 749, 750, 795, 862, 895, 921, 932, 958, 1045, 1055, 1083, 1245], "origin": [3, 9, 22, 45, 53, 137, 138, 139, 205, 272, 305, 342, 394, 396, 397, 401, 431, 447, 549, 555, 571, 604, 612, 725, 726, 727, 795, 862, 895, 932, 986, 988, 989, 994, 996, 1028, 1125, 1133, 1222, 1223, 1241, 1276, 1277, 1278, 1301, 1302, 1307, 1320], "stereo": [3, 9, 549, 555], "polar": [3, 9, 26, 142, 143, 144, 147, 148, 149, 152, 154, 155, 156, 197, 388, 389, 504, 518, 530, 549, 555, 572, 580, 730, 731, 732, 736, 737, 738, 742, 745, 746, 747, 786, 980, 981, 1029, 1086, 1100, 1112, 1265, 1316], "correspond": [3, 9, 13, 22, 121, 124, 169, 221, 251, 252, 253, 267, 288, 321, 358, 382, 436, 447, 467, 486, 538, 544, 549, 555, 562, 571, 680, 683, 686, 758, 811, 841, 842, 843, 857, 878, 911, 948, 974, 1001, 1012, 1028, 1049, 1068, 1120, 1229, 1233, 1235, 1236, 1237, 1246, 1247, 1248, 1249, 1272, 1284, 1311, 1316, 1317, 1320], "northwest": [3, 9, 22, 549, 555, 571], "corner": [3, 9, 22, 224, 291, 324, 331, 361, 368, 549, 555, 571, 814, 881, 914, 921, 951, 958, 1315], "metropolitan": [3, 9, 22, 549, 555, 571], "french": [3, 9, 22, 549, 555, 571], "composit": [3, 9, 22, 398, 549, 555, 571, 990, 1034, 1270, 1299], "9": [3, 9, 22, 30, 31, 129, 135, 136, 197, 236, 302, 339, 376, 388, 525, 532, 534, 549, 555, 571, 585, 586, 717, 723, 724, 786, 826, 892, 929, 966, 980, 1107, 1114, 1116, 1229, 1284, 1293, 1301, 1302, 1309, 1314, 1316, 1317], "965": [3, 9, 22, 549, 555, 571, 1274, 1318], "53": [3, 9, 22, 150, 151, 549, 555, 571, 740, 741], "670": [3, 9, 22, 549, 555, 571], "deg": [3, 9, 14, 22, 24, 25, 125, 140, 145, 153, 163, 197, 199, 203, 450, 466, 496, 497, 499, 502, 516, 518, 521, 525, 528, 549, 555, 563, 571, 578, 579, 684, 728, 733, 744, 754, 786, 788, 792, 1031, 1048, 1078, 1079, 1081, 1084, 1098, 1100, 1103, 1107, 1110, 1215, 1231, 1242, 1259, 1260, 1304, 1315], "latitud": [3, 9, 22, 29, 45, 47, 50, 53, 55, 59, 70, 88, 99, 120, 121, 122, 124, 125, 161, 162, 205, 227, 228, 248, 250, 251, 252, 254, 255, 256, 264, 266, 268, 269, 270, 272, 294, 295, 305, 327, 328, 329, 331, 333, 342, 364, 365, 366, 368, 370, 447, 466, 496, 499, 549, 555, 571, 584, 604, 606, 609, 612, 614, 618, 629, 647, 658, 679, 680, 681, 683, 684, 752, 753, 795, 817, 818, 838, 840, 841, 842, 844, 845, 846, 854, 856, 858, 859, 860, 862, 884, 885, 895, 917, 918, 919, 921, 923, 932, 954, 955, 956, 958, 960, 1025, 1028, 1048, 1078, 1081, 1125, 1127, 1130, 1133, 1137, 1148, 1166, 1177, 1215, 1232, 1233, 1234, 1242, 1258, 1265, 1270, 1271, 1282, 1289, 1296, 1300, 1302, 1309, 1310, 1315, 1316, 1317], "longitud": [3, 9, 22, 29, 45, 47, 50, 53, 55, 59, 70, 88, 99, 120, 121, 122, 124, 125, 161, 162, 205, 227, 228, 248, 250, 251, 252, 254, 256, 257, 264, 266, 268, 270, 271, 272, 294, 295, 305, 327, 328, 329, 331, 333, 342, 364, 365, 366, 368, 370, 447, 466, 496, 499, 549, 555, 571, 584, 604, 606, 609, 612, 614, 618, 629, 647, 658, 679, 680, 681, 683, 684, 752, 753, 795, 817, 818, 838, 840, 841, 842, 844, 846, 847, 854, 856, 858, 860, 861, 862, 884, 885, 895, 917, 918, 919, 921, 923, 932, 954, 955, 956, 958, 960, 1028, 1048, 1078, 1081, 1125, 1127, 1130, 1133, 1137, 1148, 1166, 1177, 1215, 1232, 1233, 1234, 1242, 1258, 1270, 1271, 1282, 1289, 1296, 1300, 1302, 1309, 1310, 1315, 1316, 1317], "stereograph": [3, 9, 549, 555], "can": [3, 4, 13, 14, 16, 18, 22, 24, 25, 26, 30, 31, 32, 44, 59, 68, 71, 88, 97, 100, 120, 122, 123, 127, 128, 135, 136, 137, 140, 142, 143, 146, 147, 148, 149, 154, 155, 156, 157, 169, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 221, 288, 321, 358, 380, 388, 389, 391, 394, 398, 399, 400, 429, 446, 447, 454, 457, 461, 466, 470, 473, 474, 483, 489, 491, 496, 497, 499, 502, 504, 518, 521, 525, 528, 529, 530, 532, 534, 535, 538, 541, 542, 549, 550, 562, 563, 565, 567, 571, 578, 579, 580, 585, 586, 588, 589, 602, 618, 627, 630, 647, 656, 659, 679, 681, 682, 686, 699, 711, 715, 716, 723, 724, 725, 728, 730, 731, 735, 736, 737, 738, 739, 745, 746, 747, 748, 758, 771, 783, 786, 787, 788, 789, 790, 791, 792, 793, 811, 878, 911, 948, 972, 980, 981, 983, 986, 990, 991, 992, 1027, 1028, 1029, 1036, 1039, 1043, 1048, 1052, 1055, 1056, 1065, 1071, 1073, 1078, 1079, 1081, 1084, 1086, 1100, 1103, 1107, 1110, 1111, 1112, 1114, 1116, 1117, 1120, 1123, 1137, 1146, 1149, 1166, 1175, 1178, 1217, 1246, 1252, 1265, 1272, 1273, 1276, 1281, 1300, 1302, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1322], "webmerc": [3, 22, 549, 571], "stere": [3, 22, 370, 549, 571, 960], "reader": [4, 14, 16, 550, 563, 565, 1265, 1273, 1307], "c": [4, 14, 16, 76, 105, 117, 121, 124, 126, 128, 132, 137, 139, 264, 370, 429, 456, 461, 466, 474, 476, 506, 520, 528, 529, 530, 535, 538, 541, 546, 550, 563, 565, 635, 664, 676, 680, 683, 714, 716, 720, 725, 727, 854, 960, 1038, 1043, 1048, 1056, 1058, 1088, 1102, 1110, 1111, 1112, 1117, 1120, 1123, 1154, 1183, 1202, 1230, 1276, 1307, 1308, 1310, 1313, 1315, 1319, 1320, 1322], "metranet": [4, 6, 7, 14, 16, 546, 550, 552, 553, 557, 558, 563, 565, 572, 573, 1265], "product": [4, 392, 394, 518, 541, 550, 984, 986, 1034, 1100, 1123], "librari": [4, 14, 16, 162, 381, 391, 394, 397, 398, 546, 550, 563, 565, 753, 973, 983, 986, 989, 990, 1307, 1309, 1310, 1311, 1313, 1314, 1317, 1319, 1320], "either": [4, 14, 16, 18, 30, 31, 127, 128, 137, 138, 139, 142, 143, 146, 154, 155, 156, 164, 222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 299, 300, 301, 302, 322, 323, 324, 332, 336, 337, 338, 339, 359, 360, 361, 369, 373, 374, 375, 376, 383, 440, 466, 474, 483, 496, 502, 503, 507, 510, 511, 518, 525, 550, 563, 565, 567, 585, 586, 715, 716, 725, 726, 727, 730, 731, 735, 745, 746, 747, 755, 812, 813, 814, 819, 822, 823, 824, 825, 826, 837, 839, 841, 842, 843, 845, 847, 855, 857, 859, 861, 879, 880, 881, 886, 889, 890, 891, 892, 912, 913, 914, 922, 926, 927, 928, 929, 949, 950, 951, 959, 963, 964, 965, 966, 975, 1005, 1015, 1048, 1056, 1065, 1078, 1084, 1085, 1089, 1092, 1093, 1100, 1107, 1302, 1307, 1315, 1316, 1319, 1320], "python": [4, 14, 16, 44, 398, 542, 550, 563, 565, 602, 990, 1265, 1270, 1307, 1309, 1310, 1311, 1313, 1314, 1316, 1317, 1319, 1322], "delay_field_load": [5, 6, 7, 28, 381, 384, 385, 388, 389, 390, 393, 395, 551, 552, 553, 583, 973, 976, 977, 980, 981, 982, 985, 987], "delai": [5, 6, 7, 28, 381, 384, 385, 388, 389, 390, 393, 551, 552, 553, 583, 973, 976, 977, 980, 981, 982, 985, 1230], "load": [5, 6, 7, 28, 44, 381, 384, 385, 388, 389, 390, 393, 401, 438, 546, 551, 552, 553, 583, 602, 973, 976, 977, 980, 981, 982, 985, 993, 994, 1003, 1315, 1316, 1317], "until": [5, 6, 7, 28, 44, 138, 381, 384, 385, 388, 389, 390, 393, 551, 552, 553, 583, 602, 726, 973, 976, 977, 980, 981, 982, 985, 1315], "particular": [5, 6, 7, 28, 381, 384, 385, 388, 389, 390, 393, 447, 497, 519, 532, 551, 552, 553, 583, 973, 976, 977, 980, 981, 982, 985, 1028, 1079, 1101, 1114, 1307], "access": [5, 6, 7, 28, 34, 45, 59, 70, 71, 88, 99, 100, 169, 381, 384, 385, 388, 389, 390, 393, 401, 551, 552, 553, 583, 592, 604, 618, 629, 630, 647, 658, 659, 686, 758, 973, 976, 977, 980, 981, 982, 985, 994, 1125, 1137, 1148, 1149, 1166, 1177, 1178, 1196, 1272, 1273, 1313, 1317], "In": [5, 6, 7, 28, 30, 31, 120, 122, 123, 139, 145, 381, 384, 385, 388, 389, 390, 392, 393, 440, 497, 528, 541, 551, 552, 553, 583, 585, 586, 679, 681, 682, 727, 733, 970, 973, 976, 977, 980, 981, 982, 984, 985, 1005, 1015, 1018, 1034, 1079, 1110, 1123, 1214, 1267, 1268, 1273, 1302, 1307, 1310, 1311, 1313, 1314, 1315, 1316, 1319, 1320], "attribut": [5, 6, 7, 18, 19, 20, 28, 30, 31, 32, 45, 48, 49, 50, 51, 52, 59, 70, 71, 77, 78, 79, 80, 88, 99, 100, 106, 107, 108, 109, 137, 165, 169, 182, 194, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 393, 396, 397, 400, 478, 551, 552, 553, 567, 568, 569, 583, 585, 586, 588, 604, 607, 608, 609, 610, 611, 618, 629, 630, 636, 637, 638, 639, 647, 658, 659, 665, 666, 667, 668, 686, 699, 711, 725, 758, 771, 783, 812, 819, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 973, 976, 977, 978, 980, 981, 982, 985, 988, 989, 992, 1060, 1125, 1128, 1129, 1130, 1131, 1132, 1137, 1148, 1149, 1155, 1156, 1157, 1158, 1166, 1177, 1178, 1184, 1185, 1186, 1187, 1309, 1317], "lazyloaddict": [5, 6, 7, 28, 45, 59, 88, 381, 384, 385, 388, 389, 390, 393, 551, 552, 553, 583, 604, 618, 647, 973, 976, 977, 980, 981, 982, 985, 1125, 1137, 1166], "provid": [5, 6, 7, 8, 13, 28, 59, 62, 88, 91, 137, 228, 252, 295, 328, 333, 365, 383, 384, 385, 386, 391, 394, 398, 399, 400, 401, 434, 435, 441, 518, 525, 551, 552, 553, 554, 562, 583, 618, 621, 647, 650, 725, 818, 842, 885, 918, 923, 955, 975, 976, 977, 978, 983, 986, 990, 991, 992, 994, 999, 1000, 1006, 1007, 1010, 1011, 1016, 1018, 1100, 1107, 1137, 1140, 1166, 1169, 1240, 1257, 1264, 1273, 1300, 1302, 1307, 1314, 1316, 1319, 1320], "speedup": [5, 6, 7, 28, 251, 252, 333, 370, 384, 385, 551, 552, 553, 583, 841, 842, 923, 960, 976, 977], "number": [5, 6, 7, 14, 16, 26, 28, 32, 44, 45, 59, 65, 66, 68, 69, 70, 71, 72, 88, 94, 95, 97, 98, 99, 100, 101, 126, 127, 128, 133, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 158, 159, 164, 221, 225, 229, 230, 232, 233, 234, 235, 252, 288, 292, 296, 297, 299, 300, 301, 321, 325, 332, 333, 334, 336, 337, 338, 358, 362, 369, 370, 371, 373, 374, 375, 384, 385, 392, 398, 399, 418, 445, 446, 447, 457, 461, 466, 470, 471, 474, 475, 476, 483, 489, 496, 502, 504, 505, 515, 524, 526, 527, 528, 530, 532, 534, 536, 538, 543, 551, 552, 553, 563, 565, 580, 583, 588, 602, 604, 618, 624, 625, 627, 628, 629, 630, 631, 647, 653, 654, 656, 657, 658, 659, 660, 714, 715, 716, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 737, 740, 741, 743, 745, 746, 747, 748, 749, 750, 755, 811, 815, 819, 820, 822, 823, 824, 825, 842, 878, 882, 886, 887, 889, 890, 891, 911, 915, 922, 923, 924, 926, 927, 928, 948, 952, 959, 960, 961, 963, 964, 965, 970, 976, 977, 984, 990, 991, 1026, 1027, 1028, 1029, 1039, 1043, 1048, 1052, 1053, 1056, 1057, 1058, 1065, 1071, 1078, 1084, 1086, 1087, 1097, 1106, 1108, 1109, 1110, 1112, 1114, 1116, 1118, 1120, 1125, 1137, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1166, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1197, 1198, 1199, 1200, 1217, 1219, 1229, 1230, 1235, 1236, 1237, 1246, 1247, 1248, 1249, 1263, 1281, 1283, 1307, 1315, 1317, 1320], "gate": [5, 6, 7, 28, 59, 69, 70, 71, 88, 98, 99, 100, 117, 118, 119, 126, 127, 128, 133, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 150, 151, 154, 155, 156, 158, 159, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 272, 289, 296, 300, 301, 305, 322, 332, 333, 337, 338, 342, 359, 369, 370, 374, 375, 384, 385, 390, 391, 392, 393, 445, 446, 447, 475, 476, 503, 504, 513, 514, 515, 528, 529, 530, 531, 532, 533, 534, 535, 540, 541, 551, 552, 553, 583, 618, 628, 629, 630, 647, 657, 658, 659, 676, 677, 678, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 721, 725, 726, 727, 728, 729, 730, 731, 733, 735, 737, 739, 740, 741, 745, 746, 747, 749, 750, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 812, 819, 823, 824, 825, 839, 845, 847, 857, 859, 861, 862, 879, 886, 890, 891, 895, 912, 922, 923, 927, 928, 932, 949, 959, 960, 964, 965, 976, 977, 982, 983, 984, 985, 1018, 1026, 1027, 1028, 1029, 1057, 1058, 1085, 1086, 1095, 1096, 1097, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1123, 1137, 1147, 1148, 1149, 1166, 1176, 1177, 1178, 1198, 1199, 1200, 1214, 1215, 1216, 1230, 1231, 1233, 1234, 1239, 1242, 1268, 1276, 1277, 1278, 1282, 1309, 1311, 1313, 1314, 1316, 1317], "vari": [5, 6, 7, 28, 384, 385, 388, 551, 552, 553, 583, 976, 977, 980, 1250, 1302], "between": [5, 6, 7, 14, 24, 25, 28, 30, 31, 47, 59, 70, 71, 88, 99, 100, 118, 121, 122, 135, 136, 137, 138, 140, 145, 147, 148, 149, 156, 182, 194, 197, 200, 201, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 384, 385, 390, 393, 399, 400, 459, 461, 501, 507, 515, 518, 533, 534, 551, 552, 553, 563, 578, 579, 583, 585, 586, 606, 618, 629, 630, 647, 658, 659, 677, 680, 681, 699, 711, 723, 724, 725, 726, 728, 733, 736, 737, 738, 739, 747, 771, 783, 786, 789, 790, 812, 819, 823, 824, 825, 826, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 969, 976, 977, 982, 985, 991, 992, 1018, 1041, 1043, 1083, 1089, 1097, 1100, 1115, 1116, 1127, 1137, 1148, 1149, 1166, 1177, 1178, 1209, 1216, 1218, 1220, 1221, 1248, 1249, 1258, 1265, 1276, 1282, 1292, 1302, 1311, 1313, 1315, 1316, 1320, 1322], "rai": [5, 6, 7, 28, 31, 59, 67, 70, 71, 72, 73, 74, 75, 88, 96, 99, 100, 101, 102, 103, 104, 118, 126, 127, 128, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 151, 154, 155, 156, 182, 194, 200, 206, 208, 211, 213, 214, 222, 229, 232, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 273, 275, 278, 280, 281, 289, 296, 299, 300, 301, 302, 306, 308, 311, 313, 314, 322, 332, 333, 336, 337, 338, 339, 343, 345, 348, 350, 351, 359, 369, 370, 373, 374, 375, 376, 383, 384, 385, 390, 393, 394, 449, 452, 471, 476, 504, 532, 533, 534, 540, 551, 552, 553, 583, 586, 618, 626, 629, 630, 631, 632, 633, 634, 647, 655, 658, 659, 660, 661, 662, 663, 677, 699, 711, 714, 715, 716, 723, 724, 725, 726, 727, 729, 730, 731, 733, 735, 736, 737, 741, 745, 746, 747, 771, 783, 789, 796, 798, 801, 803, 804, 812, 819, 822, 823, 824, 825, 826, 839, 845, 847, 857, 859, 861, 863, 865, 868, 870, 871, 879, 886, 889, 890, 891, 892, 896, 898, 901, 903, 904, 912, 922, 923, 926, 927, 928, 929, 933, 935, 938, 940, 941, 949, 959, 960, 963, 964, 965, 966, 975, 976, 977, 982, 985, 986, 1018, 1033, 1053, 1058, 1086, 1114, 1115, 1116, 1122, 1137, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1166, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1198, 1199, 1200, 1202, 1219, 1226, 1228, 1230, 1231, 1233, 1235, 1236, 1237, 1246, 1247, 1248, 1249, 1262, 1263, 1265, 1277, 1309, 1317, 1320], "ngates_vari": [5, 6, 7, 28, 384, 385, 551, 552, 553, 583, 976, 977], "recommend": [5, 6, 7, 28, 44, 59, 88, 137, 139, 370, 384, 385, 394, 447, 501, 528, 551, 552, 553, 583, 602, 618, 647, 725, 727, 960, 976, 977, 986, 1028, 1083, 1110, 1137, 1166, 1214, 1281, 1307, 1319, 1320, 1321, 1322], "read_altitude_from_nc": [8, 554], "d3r": [8, 554], "gcpex": [8, 554], "odim_h5": [8, 18, 19, 20, 30, 31, 554, 567, 568, 569, 585, 586, 1265], "found": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 44, 135, 136, 140, 141, 167, 381, 386, 388, 389, 390, 391, 393, 394, 395, 436, 446, 447, 505, 517, 554, 563, 565, 566, 567, 568, 569, 578, 579, 580, 581, 584, 602, 723, 724, 728, 729, 973, 978, 980, 981, 982, 983, 985, 986, 987, 1001, 1012, 1027, 1028, 1034, 1087, 1099, 1246, 1273, 1307, 1319, 1320, 1322], "doe": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 63, 92, 120, 122, 123, 137, 138, 139, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 415, 440, 554, 563, 565, 566, 567, 568, 569, 578, 579, 580, 581, 584, 622, 651, 679, 681, 682, 725, 726, 727, 812, 814, 819, 822, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1005, 1015, 1141, 1170, 1263, 1293, 1307, 1309, 1319, 1320, 1322], "appear": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 554, 563, 565, 566, 567, 568, 569, 578, 579, 580, 581, 584, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 1245], "place": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 146, 223, 227, 228, 247, 250, 265, 266, 290, 294, 295, 323, 327, 328, 360, 364, 365, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 457, 534, 554, 563, 565, 566, 567, 568, 569, 578, 579, 580, 581, 584, 735, 813, 817, 818, 837, 840, 855, 856, 880, 884, 885, 913, 917, 918, 950, 954, 955, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 991, 992, 1039, 1116, 1263, 1313, 1319], "defin": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 45, 59, 88, 120, 122, 123, 126, 127, 128, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 197, 198, 199, 200, 201, 202, 203, 204, 227, 228, 232, 294, 295, 299, 327, 328, 336, 364, 365, 373, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 400, 446, 447, 452, 483, 497, 502, 518, 525, 526, 527, 528, 532, 533, 534, 537, 554, 563, 565, 566, 567, 568, 569, 578, 579, 580, 581, 584, 585, 586, 604, 618, 647, 679, 681, 682, 714, 715, 716, 721, 723, 724, 725, 728, 729, 730, 731, 732, 735, 739, 740, 741, 745, 746, 747, 749, 750, 786, 787, 788, 789, 790, 791, 792, 793, 817, 818, 822, 884, 885, 889, 917, 918, 926, 954, 955, 963, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 992, 1027, 1028, 1033, 1065, 1079, 1084, 1100, 1107, 1108, 1109, 1110, 1114, 1115, 1116, 1119, 1125, 1137, 1166, 1214, 1282, 1283, 1300, 1302, 1316], "mdv": [8, 14, 16, 18, 19, 20, 24, 25, 26, 29, 388, 389, 399, 554, 563, 565, 567, 568, 569, 578, 579, 580, 581, 584, 980, 981, 991, 1268, 1270, 1277, 1280, 1307, 1311, 1313], "like": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 39, 55, 56, 76, 105, 120, 121, 123, 124, 125, 138, 139, 380, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 434, 435, 504, 532, 533, 534, 542, 554, 563, 565, 566, 567, 568, 569, 578, 579, 580, 581, 584, 597, 614, 615, 635, 664, 679, 680, 682, 683, 684, 726, 727, 972, 973, 978, 980, 981, 982, 983, 984, 985, 986, 987, 990, 991, 992, 993, 994, 999, 1000, 1010, 1011, 1034, 1086, 1114, 1115, 1116, 1154, 1183, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1229, 1230, 1243, 1272, 1273, 1276, 1307, 1309, 1311, 1313, 1316, 1320], "onli": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 64, 70, 71, 93, 99, 100, 126, 127, 128, 132, 137, 139, 141, 146, 150, 151, 154, 155, 156, 169, 222, 233, 251, 252, 289, 300, 322, 333, 337, 359, 370, 374, 381, 386, 388, 389, 390, 391, 392, 393, 394, 447, 504, 518, 528, 554, 563, 565, 566, 567, 568, 569, 578, 579, 580, 581, 584, 587, 623, 629, 630, 652, 658, 659, 686, 714, 715, 716, 720, 725, 727, 729, 735, 740, 741, 745, 746, 747, 758, 812, 823, 841, 842, 879, 890, 912, 923, 927, 949, 960, 964, 973, 978, 980, 981, 982, 983, 984, 985, 986, 1028, 1086, 1100, 1110, 1142, 1148, 1149, 1171, 1177, 1178, 1222, 1223, 1235, 1245, 1252, 1259, 1260, 1276, 1283, 1293, 1302, 1310, 1311, 1313, 1315, 1316, 1320], "you": [8, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 504, 554, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1086, 1272, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1316, 1317, 1319, 1320, 1322], "altitud": [8, 29, 45, 59, 70, 88, 99, 125, 129, 130, 135, 136, 147, 150, 151, 205, 236, 302, 339, 376, 447, 457, 518, 521, 522, 534, 537, 554, 584, 604, 618, 629, 647, 658, 684, 717, 718, 723, 724, 736, 740, 741, 795, 826, 892, 929, 966, 1028, 1029, 1034, 1039, 1100, 1103, 1104, 1116, 1119, 1125, 1137, 1148, 1166, 1177, 1215, 1232, 1242, 1258, 1265, 1293, 1304, 1309, 1313, 1315, 1317], "np": [8, 14, 16, 26, 471, 541, 554, 563, 565, 580, 1018, 1053, 1123, 1256, 1265, 1276, 1277, 1281, 1284, 1289, 1292, 1293, 1295, 1300, 1302, 1303, 1304, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1320], "295": [8, 554], "float64": [8, 446, 447, 554, 1027, 1028, 1317], "nd": [9, 555], "65535": [9, 555], "h": [9, 14, 139, 147, 148, 149, 207, 264, 274, 307, 344, 370, 456, 463, 469, 470, 474, 475, 489, 494, 495, 500, 511, 535, 555, 563, 727, 736, 737, 738, 797, 854, 864, 897, 934, 960, 1038, 1045, 1051, 1052, 1056, 1057, 1071, 1076, 1077, 1082, 1093, 1117, 1229, 1276, 1283, 1316], "": [9, 44, 45, 59, 72, 76, 88, 101, 105, 117, 118, 121, 124, 138, 139, 150, 151, 152, 163, 207, 209, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 274, 276, 289, 296, 300, 301, 302, 307, 309, 322, 332, 337, 338, 339, 344, 346, 359, 369, 374, 375, 376, 434, 435, 441, 445, 461, 470, 474, 475, 476, 477, 489, 501, 506, 507, 520, 523, 528, 529, 530, 532, 535, 537, 538, 541, 555, 602, 604, 618, 631, 635, 647, 660, 664, 676, 677, 680, 683, 726, 727, 740, 741, 742, 754, 797, 799, 812, 819, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 864, 866, 879, 886, 890, 891, 892, 897, 899, 912, 922, 927, 928, 929, 934, 936, 949, 959, 964, 965, 966, 999, 1000, 1006, 1010, 1011, 1016, 1018, 1020, 1026, 1043, 1052, 1056, 1057, 1058, 1059, 1071, 1083, 1088, 1089, 1102, 1105, 1110, 1111, 1112, 1114, 1117, 1119, 1120, 1123, 1125, 1137, 1150, 1154, 1166, 1179, 1183, 1229, 1230, 1240, 1272, 1273, 1276, 1281, 1283, 1284, 1293, 1300, 1302, 1304, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1321], "radar_estimated_rain_r": [9, 555, 1316], "integ": [9, 222, 289, 322, 359, 400, 523, 524, 555, 812, 879, 912, 949, 992, 1105, 1106], "repres": [9, 59, 88, 133, 137, 141, 142, 143, 144, 154, 155, 156, 158, 159, 402, 502, 515, 518, 525, 526, 527, 532, 534, 540, 541, 555, 618, 647, 721, 725, 729, 730, 731, 732, 745, 746, 747, 749, 750, 1084, 1097, 1100, 1107, 1108, 1109, 1114, 1116, 1122, 1123, 1137, 1166, 1198, 1199, 1263], "No": [9, 70, 71, 99, 100, 139, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 398, 447, 456, 518, 555, 629, 630, 658, 659, 727, 812, 819, 823, 824, 825, 826, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 990, 1028, 1038, 1100, 1148, 1149, 1177, 1178, 1316], "valid_range_from_fil": [10, 559], "units_from_fil": [10, 559], "pulse_width": [10, 152, 163, 400, 477, 559, 742, 754, 992, 1059], "gamic": [10, 559], "hdf5": [10, 19, 30, 31, 559, 568, 585, 586, 1307], "valid": [10, 45, 59, 88, 126, 135, 136, 137, 141, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 196, 223, 247, 265, 290, 323, 360, 390, 399, 400, 447, 450, 461, 466, 470, 474, 475, 476, 483, 489, 496, 502, 504, 515, 526, 527, 532, 534, 559, 604, 618, 647, 713, 714, 723, 724, 725, 729, 735, 736, 737, 738, 745, 746, 747, 748, 749, 750, 785, 813, 837, 855, 880, 913, 950, 982, 991, 992, 1028, 1031, 1043, 1048, 1052, 1056, 1057, 1058, 1065, 1071, 1078, 1084, 1086, 1097, 1108, 1109, 1114, 1116, 1125, 1137, 1166, 1217, 1219, 1222, 1223, 1229, 1230, 1320], "rang": [10, 14, 16, 24, 25, 26, 59, 69, 71, 88, 98, 100, 117, 118, 119, 128, 133, 135, 136, 141, 142, 143, 144, 147, 158, 159, 197, 205, 222, 224, 229, 230, 231, 233, 234, 235, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 272, 289, 291, 296, 297, 298, 300, 301, 305, 322, 324, 332, 333, 334, 335, 337, 338, 342, 359, 361, 369, 370, 371, 372, 374, 375, 393, 449, 450, 457, 466, 470, 471, 483, 489, 496, 497, 503, 504, 515, 518, 522, 528, 530, 532, 533, 534, 559, 563, 565, 578, 579, 580, 618, 628, 630, 647, 657, 659, 676, 677, 678, 716, 721, 723, 724, 729, 730, 731, 732, 736, 749, 750, 786, 795, 812, 814, 819, 820, 821, 823, 824, 825, 839, 841, 842, 843, 845, 847, 854, 857, 859, 861, 862, 879, 881, 886, 887, 888, 890, 891, 895, 912, 914, 922, 923, 924, 925, 927, 928, 932, 949, 951, 959, 960, 961, 962, 964, 965, 985, 1029, 1031, 1039, 1048, 1052, 1053, 1065, 1071, 1078, 1079, 1085, 1086, 1097, 1100, 1104, 1110, 1112, 1114, 1115, 1116, 1137, 1147, 1149, 1166, 1176, 1178, 1219, 1231, 1242, 1248, 1249, 1259, 1260, 1265, 1281, 1286, 1289, 1295, 1304, 1309, 1315, 1317], "valid_min": [10, 137, 138, 139, 386, 559, 725, 726, 727, 978, 1302, 1317], "valid_max": [10, 137, 138, 139, 386, 559, 725, 726, 727, 978, 1302, 1317], "when": [10, 18, 19, 20, 32, 34, 45, 59, 60, 61, 65, 66, 68, 70, 71, 88, 89, 90, 94, 95, 97, 99, 100, 135, 136, 137, 138, 139, 150, 151, 154, 161, 162, 167, 168, 169, 173, 175, 182, 189, 194, 222, 229, 233, 234, 235, 236, 251, 252, 258, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 342, 359, 369, 370, 374, 375, 376, 390, 391, 393, 394, 396, 400, 401, 415, 447, 452, 461, 466, 474, 483, 496, 499, 507, 510, 511, 515, 518, 521, 526, 528, 529, 530, 534, 540, 541, 559, 567, 568, 569, 588, 592, 604, 618, 619, 620, 624, 625, 627, 629, 630, 647, 648, 649, 653, 654, 656, 658, 659, 686, 690, 692, 699, 706, 711, 723, 724, 725, 726, 727, 740, 741, 745, 752, 753, 758, 762, 764, 771, 778, 783, 812, 819, 823, 824, 825, 826, 841, 842, 848, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 932, 949, 959, 960, 964, 965, 966, 982, 983, 985, 986, 988, 992, 994, 1018, 1028, 1029, 1033, 1043, 1048, 1056, 1065, 1078, 1081, 1089, 1092, 1093, 1097, 1100, 1103, 1108, 1110, 1111, 1112, 1116, 1122, 1123, 1124, 1125, 1137, 1138, 1139, 1143, 1144, 1146, 1148, 1149, 1166, 1167, 1168, 1172, 1173, 1175, 1177, 1178, 1229, 1250, 1265, 1281, 1302, 1307, 1310, 1311, 1314, 1315, 1319, 1320, 1322], "thei": [10, 72, 101, 137, 138, 139, 145, 154, 155, 156, 173, 175, 182, 370, 386, 394, 400, 461, 497, 528, 543, 557, 559, 631, 660, 690, 692, 699, 725, 726, 727, 733, 745, 746, 747, 762, 764, 771, 960, 978, 986, 992, 1043, 1079, 1110, 1150, 1179, 1302, 1320], "present": [10, 44, 45, 59, 88, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 399, 400, 440, 447, 559, 602, 604, 618, 647, 812, 819, 823, 824, 825, 826, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 991, 992, 1005, 1015, 1028, 1125, 1137, 1166, 1309, 1314], "unit": [10, 18, 19, 20, 69, 98, 120, 121, 122, 123, 124, 135, 136, 138, 139, 212, 215, 216, 217, 218, 219, 220, 227, 279, 282, 283, 284, 285, 286, 287, 294, 312, 315, 316, 317, 318, 319, 320, 327, 349, 352, 353, 354, 355, 356, 357, 364, 379, 386, 388, 470, 489, 491, 523, 559, 567, 568, 569, 628, 657, 679, 680, 681, 682, 683, 723, 724, 726, 727, 802, 805, 806, 807, 808, 809, 810, 817, 869, 872, 873, 874, 875, 876, 877, 884, 902, 905, 906, 907, 908, 909, 910, 917, 939, 942, 943, 944, 945, 946, 947, 954, 971, 978, 980, 1052, 1071, 1073, 1105, 1124, 1147, 1176, 1202, 1217, 1229, 1230, 1290, 1295, 1302, 1307, 1310, 1317, 1320], "avail": [10, 18, 19, 20, 59, 70, 71, 72, 88, 99, 100, 101, 126, 127, 128, 145, 146, 154, 155, 156, 182, 194, 249, 251, 252, 253, 255, 257, 267, 269, 271, 388, 398, 518, 559, 567, 568, 569, 589, 618, 629, 630, 631, 647, 658, 659, 660, 699, 711, 714, 715, 716, 733, 735, 745, 746, 747, 771, 783, 839, 841, 842, 843, 845, 847, 857, 859, 861, 980, 990, 1100, 1137, 1148, 1149, 1150, 1166, 1177, 1178, 1179, 1217, 1252, 1270, 1272, 1281, 1307], "mandatori": [10, 559], "processor": [10, 559], "pulsewidth": [10, 518, 559, 1100], "enum": [10, 559], "should": [10, 26, 36, 45, 59, 61, 68, 88, 90, 97, 132, 137, 138, 139, 146, 151, 169, 173, 205, 250, 266, 333, 370, 380, 394, 397, 399, 400, 429, 446, 447, 501, 504, 515, 518, 526, 527, 528, 529, 530, 535, 537, 540, 541, 543, 559, 580, 594, 604, 618, 620, 627, 647, 649, 656, 686, 690, 720, 725, 726, 727, 735, 741, 758, 762, 795, 840, 856, 923, 960, 969, 970, 972, 986, 989, 991, 992, 1027, 1028, 1083, 1086, 1097, 1100, 1108, 1109, 1110, 1111, 1112, 1117, 1119, 1122, 1123, 1125, 1137, 1139, 1146, 1166, 1168, 1175, 1229, 1230, 1281, 1302, 1307, 1319, 1320, 1322], "u": [10, 55, 56, 57, 121, 124, 525, 540, 541, 559, 614, 615, 616, 680, 683, 1107, 1122, 1123, 1273, 1304, 1307, 1309, 1310, 1311, 1313, 1314, 1316, 1317, 1320], "gif": [11, 560, 1265], "precipitation_typ": [12, 22, 561, 571], "grib": [12, 561], "locat": [13, 45, 47, 59, 69, 70, 71, 88, 98, 99, 100, 205, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 272, 289, 290, 291, 294, 295, 296, 297, 298, 300, 301, 302, 305, 322, 323, 324, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 342, 359, 360, 361, 364, 365, 367, 369, 370, 371, 372, 374, 375, 376, 390, 391, 393, 399, 445, 446, 447, 562, 604, 606, 618, 628, 629, 630, 647, 657, 658, 659, 795, 812, 813, 814, 817, 818, 819, 820, 821, 823, 824, 825, 826, 837, 839, 841, 842, 843, 845, 847, 854, 855, 857, 859, 861, 862, 879, 880, 881, 884, 885, 886, 887, 888, 890, 891, 892, 895, 912, 913, 914, 917, 918, 920, 922, 923, 924, 925, 927, 928, 929, 932, 949, 950, 951, 954, 955, 957, 959, 960, 961, 962, 964, 965, 966, 982, 983, 985, 991, 1018, 1026, 1027, 1028, 1125, 1127, 1137, 1147, 1148, 1149, 1166, 1176, 1177, 1178, 1197, 1209, 1216, 1232, 1233, 1234, 1287, 1289, 1300, 1307, 1313, 1315, 1319, 1320], "hpl": [13, 562], "ascii": [13, 562], "halo": [13, 562], "photono": [13, 562], "steamlin": [13, 562], "lidar": [13, 514, 562, 1096, 1265, 1307], "come": [13, 532, 562, 1114, 1302], "assign": [13, 137, 154, 525, 562, 725, 745, 1107, 1302], "lat": [13, 54, 70, 99, 120, 121, 122, 123, 124, 125, 161, 162, 211, 236, 249, 250, 251, 252, 254, 255, 256, 257, 266, 268, 269, 270, 271, 278, 302, 311, 329, 331, 333, 339, 348, 366, 368, 376, 397, 398, 466, 496, 499, 562, 613, 629, 658, 679, 680, 681, 682, 683, 684, 752, 753, 801, 826, 839, 840, 841, 842, 844, 845, 846, 847, 856, 858, 859, 860, 861, 868, 892, 901, 919, 921, 923, 929, 938, 956, 958, 966, 989, 990, 1048, 1078, 1081, 1134, 1148, 1177, 1282, 1283, 1296, 1313, 1315], "lon": [13, 54, 70, 99, 120, 121, 122, 123, 124, 125, 161, 162, 211, 236, 249, 250, 251, 252, 254, 255, 256, 257, 266, 268, 269, 270, 271, 278, 302, 311, 329, 331, 333, 339, 348, 366, 368, 376, 397, 398, 466, 496, 499, 562, 613, 629, 658, 679, 680, 681, 682, 683, 684, 752, 753, 801, 826, 839, 840, 841, 842, 844, 845, 846, 847, 856, 858, 859, 860, 861, 868, 892, 901, 919, 921, 923, 929, 938, 956, 958, 966, 989, 990, 1048, 1078, 1081, 1134, 1148, 1177, 1283, 1296, 1315], "alt": [13, 54, 70, 99, 125, 397, 562, 613, 629, 658, 684, 989, 1134, 1148, 1177, 1315], "ad": [13, 45, 59, 61, 88, 90, 145, 150, 151, 258, 331, 368, 446, 501, 518, 562, 604, 618, 620, 647, 649, 733, 740, 741, 848, 921, 958, 1027, 1083, 1100, 1125, 1137, 1139, 1166, 1168, 1265, 1292, 1293, 1309, 1310, 1319, 1320], "global": [13, 59, 88, 562, 618, 647, 1137, 1166, 1317, 1319], "variabl": [13, 32, 44, 45, 53, 54, 55, 59, 69, 88, 98, 169, 205, 239, 258, 272, 305, 342, 396, 397, 461, 472, 473, 505, 507, 517, 525, 528, 531, 535, 536, 538, 562, 588, 602, 604, 612, 613, 614, 618, 628, 647, 657, 686, 758, 795, 829, 848, 862, 895, 932, 988, 989, 1018, 1029, 1043, 1054, 1055, 1087, 1089, 1099, 1107, 1110, 1113, 1117, 1118, 1120, 1125, 1133, 1134, 1137, 1147, 1166, 1176, 1229, 1265, 1272, 1276, 1302, 1307, 1309, 1310, 1316, 1317, 1319], "location_campaign": [13, 562], "script": [13, 44, 542, 562, 602], "filenames_iq": [14, 563], "nbyte": [14, 16, 26, 563, 565, 580], "4": [14, 16, 26, 30, 31, 59, 88, 117, 118, 125, 135, 136, 154, 155, 384, 388, 445, 452, 531, 532, 563, 565, 580, 585, 586, 618, 647, 676, 677, 684, 723, 724, 745, 746, 976, 980, 1026, 1033, 1113, 1114, 1137, 1166, 1248, 1264, 1272, 1281, 1290, 1291, 1292, 1293, 1295, 1296, 1302, 1307, 1314, 1315, 1316, 1320], "prf": [14, 563, 1315], "ang_tol": [14, 24, 25, 474, 496, 497, 563, 578, 579, 1056, 1078, 1079], "noise_h": [14, 563], "noise_v": [14, 563], "rconst_h": [14, 563], "rconst_v": [14, 563], "radconst_h": [14, 563], "radconst_v": [14, 563], "mfloss_h": [14, 563], "mfloss_v": [14, 563], "azi_min": [14, 24, 25, 563, 578, 579, 1259, 1260], "azi_max": [14, 24, 25, 563, 578, 579, 1259, 1260], "ele_min": [14, 24, 25, 563, 578, 579, 1259, 1260], "ele_max": [14, 24, 25, 563, 578, 579, 1259, 1260], "rng_min": [14, 24, 25, 522, 563, 578, 579, 1104, 1259, 1260], "rng_max": [14, 24, 25, 522, 563, 578, 579, 1104, 1259, 1260], "rad4alp": [14, 563, 1265], "iq": [14, 454, 456, 463, 465, 467, 469, 473, 480, 482, 486, 494, 495, 500, 563, 1036, 1038, 1045, 1047, 1049, 1051, 1055, 1062, 1064, 1068, 1076, 1077, 1082, 1307], "refer": [14, 18, 24, 25, 30, 33, 45, 59, 61, 88, 90, 117, 121, 124, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 142, 143, 146, 150, 151, 152, 153, 154, 155, 156, 160, 163, 211, 236, 278, 302, 311, 339, 348, 376, 390, 391, 392, 445, 456, 457, 461, 466, 470, 471, 474, 475, 476, 478, 483, 484, 489, 496, 497, 499, 501, 502, 504, 506, 518, 521, 525, 528, 529, 530, 532, 534, 535, 537, 539, 540, 541, 563, 567, 578, 579, 585, 590, 604, 618, 620, 647, 649, 676, 680, 683, 714, 715, 716, 717, 718, 720, 723, 724, 725, 726, 727, 730, 731, 735, 740, 741, 742, 744, 745, 746, 747, 751, 754, 801, 826, 868, 892, 901, 929, 938, 966, 982, 983, 984, 1026, 1034, 1038, 1039, 1043, 1048, 1052, 1053, 1056, 1057, 1058, 1060, 1065, 1066, 1071, 1078, 1079, 1081, 1083, 1084, 1086, 1088, 1100, 1103, 1107, 1110, 1111, 1112, 1114, 1116, 1117, 1119, 1121, 1122, 1123, 1125, 1137, 1139, 1166, 1168, 1229, 1230, 1240, 1255, 1307, 1317, 1320], "rainbow": [14, 24, 25, 26, 563, 578, 579, 580], "byte": [14, 16, 26, 398, 427, 563, 565, 580, 990], "numpi": [14, 16, 26, 61, 90, 175, 189, 557, 558, 563, 565, 572, 573, 580, 620, 649, 692, 706, 764, 778, 1139, 1168, 1252, 1265, 1276, 1277, 1281, 1284, 1289, 1292, 1293, 1295, 1300, 1302, 1303, 1304, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1322], "e": [14, 16, 26, 31, 139, 145, 150, 151, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 382, 398, 402, 440, 459, 497, 501, 528, 532, 534, 537, 563, 565, 580, 586, 727, 733, 740, 741, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 974, 990, 1005, 1015, 1041, 1079, 1083, 1110, 1114, 1116, 1119, 1215, 1216, 1240, 1242, 1272, 1284, 1302, 1315, 1319, 1320], "g": [14, 16, 26, 31, 145, 398, 402, 445, 496, 518, 528, 530, 541, 563, 565, 580, 586, 733, 990, 1026, 1078, 1100, 1110, 1112, 1123], "go": [14, 16, 26, 146, 154, 155, 156, 461, 487, 506, 507, 508, 510, 511, 525, 534, 563, 565, 580, 735, 745, 746, 747, 1043, 1069, 1088, 1089, 1090, 1092, 1093, 1107, 1116, 1215, 1216, 1242, 1259, 1260, 1310], "float6432": [14, 563], "scan": [14, 18, 30, 31, 59, 88, 137, 138, 139, 140, 143, 153, 205, 221, 222, 224, 235, 272, 288, 289, 291, 301, 305, 321, 322, 324, 338, 342, 358, 359, 361, 375, 390, 504, 532, 534, 563, 567, 585, 586, 618, 647, 725, 726, 727, 728, 731, 744, 795, 811, 812, 814, 825, 862, 878, 879, 881, 891, 895, 911, 912, 914, 928, 932, 948, 949, 951, 965, 982, 1029, 1034, 1086, 1114, 1116, 1137, 1166, 1198, 1199, 1232, 1245, 1250, 1257, 1263, 1265, 1276, 1286, 1287, 1297, 1308, 1316], "toler": [14, 24, 25, 466, 474, 496, 497, 499, 513, 514, 563, 578, 579, 1018, 1019, 1021, 1048, 1056, 1078, 1079, 1081, 1095, 1096, 1215, 1222, 1223, 1238, 1242], "angl": [14, 24, 25, 59, 65, 66, 88, 94, 95, 117, 118, 119, 135, 136, 147, 148, 149, 152, 153, 160, 161, 162, 163, 205, 222, 234, 272, 289, 305, 322, 342, 359, 450, 474, 496, 497, 516, 518, 522, 530, 532, 534, 535, 558, 563, 578, 579, 618, 624, 625, 647, 653, 654, 676, 677, 678, 723, 724, 736, 737, 738, 742, 744, 751, 752, 753, 754, 795, 812, 824, 862, 879, 895, 912, 932, 949, 1031, 1056, 1078, 1079, 1098, 1100, 1104, 1112, 1114, 1116, 1117, 1137, 1143, 1144, 1166, 1172, 1173, 1210, 1211, 1212, 1213, 1217, 1222, 1223, 1232, 1233, 1238, 1242, 1250, 1253, 1254, 1263, 1265, 1295, 1297, 1304, 1309, 1317], "distanc": [14, 24, 25, 45, 53, 71, 100, 117, 118, 119, 222, 233, 289, 300, 322, 337, 359, 374, 442, 443, 444, 446, 447, 466, 471, 496, 504, 523, 525, 530, 532, 533, 534, 563, 578, 579, 604, 612, 630, 659, 676, 677, 678, 812, 823, 879, 890, 912, 927, 949, 964, 1018, 1019, 1022, 1023, 1024, 1027, 1028, 1029, 1048, 1053, 1078, 1086, 1105, 1107, 1112, 1114, 1115, 1116, 1125, 1133, 1149, 1178, 1216, 1222, 1223, 1230, 1232, 1233, 1234, 1258, 1276, 1285, 1290, 1291, 1292, 1315], "psr": [14, 24, 25, 149, 563, 574, 575, 576, 578, 579, 738, 1241, 1255], "estim": [14, 128, 141, 142, 143, 144, 147, 148, 154, 155, 156, 164, 199, 203, 224, 291, 324, 361, 458, 470, 471, 473, 475, 476, 478, 489, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 528, 529, 530, 533, 535, 563, 716, 729, 730, 731, 732, 734, 736, 737, 745, 746, 747, 755, 788, 792, 814, 881, 914, 951, 1040, 1052, 1053, 1055, 1057, 1058, 1060, 1071, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1110, 1111, 1112, 1115, 1117, 1229, 1230, 1302, 1315], "v": [14, 26, 55, 56, 58, 147, 148, 149, 436, 437, 440, 463, 469, 494, 495, 500, 516, 532, 540, 541, 563, 580, 614, 615, 617, 736, 737, 738, 1001, 1002, 1005, 1012, 1013, 1015, 1045, 1051, 1076, 1077, 1082, 1098, 1114, 1122, 1123, 1292, 1293, 1304, 1320], "nois": [14, 24, 25, 132, 144, 147, 148, 149, 202, 451, 456, 465, 470, 471, 472, 473, 475, 476, 480, 481, 482, 485, 488, 489, 491, 492, 493, 500, 503, 563, 578, 579, 720, 732, 736, 737, 738, 791, 1032, 1038, 1047, 1052, 1053, 1054, 1055, 1057, 1058, 1062, 1063, 1064, 1067, 1070, 1071, 1073, 1074, 1075, 1082, 1085, 1229, 1230, 1235, 1246, 1311], "power": [14, 24, 25, 126, 128, 147, 148, 149, 150, 151, 152, 163, 164, 201, 465, 470, 472, 475, 476, 478, 480, 481, 483, 484, 488, 489, 491, 492, 503, 506, 507, 508, 509, 510, 511, 518, 563, 578, 579, 714, 716, 736, 737, 738, 739, 740, 741, 742, 754, 755, 790, 1047, 1052, 1054, 1057, 1058, 1060, 1062, 1063, 1065, 1066, 1070, 1071, 1073, 1074, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1100, 1230, 1235], "adu": [14, 470, 472, 473, 487, 488, 489, 490, 491, 492, 493, 563, 1052, 1054, 1055, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "dynam": [14, 138, 563, 726], "factor": [14, 117, 118, 119, 129, 150, 151, 400, 457, 498, 506, 507, 508, 509, 510, 511, 518, 534, 536, 563, 676, 677, 678, 717, 740, 741, 992, 1034, 1039, 1080, 1088, 1089, 1090, 1091, 1092, 1093, 1100, 1116, 1118, 1214, 1283, 1291, 1297, 1313], "convers": [14, 30, 31, 474, 496, 563, 585, 586, 1056, 1078, 1214], "dbadu": [14, 470, 489, 491, 563, 1052, 1071, 1073], "dbm": [14, 147, 148, 149, 152, 163, 164, 470, 475, 476, 478, 484, 489, 491, 563, 736, 737, 738, 742, 754, 755, 1052, 1057, 1058, 1060, 1066, 1071, 1073], "dbz": [14, 26, 126, 132, 150, 151, 448, 457, 461, 471, 485, 501, 525, 532, 537, 563, 580, 714, 720, 740, 741, 1039, 1043, 1053, 1067, 1083, 1107, 1114, 1119, 1272, 1276, 1283, 1290, 1291, 1297, 1302, 1316, 1317], "constant": [14, 136, 390, 442, 446, 447, 477, 478, 484, 498, 523, 528, 563, 724, 982, 1022, 1027, 1028, 1059, 1060, 1066, 1080, 1105, 1110, 1315], "match": [14, 137, 140, 145, 205, 272, 305, 342, 394, 478, 484, 515, 540, 541, 563, 725, 728, 733, 795, 862, 895, 932, 986, 1018, 1060, 1066, 1097, 1122, 1123, 1276, 1283, 1315], "filter": [14, 62, 91, 135, 136, 137, 138, 139, 140, 143, 144, 145, 154, 155, 156, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 446, 447, 459, 478, 484, 526, 527, 528, 529, 530, 563, 621, 650, 686, 690, 692, 699, 706, 711, 723, 724, 725, 726, 727, 728, 731, 732, 733, 739, 745, 746, 747, 812, 819, 823, 824, 825, 826, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 1018, 1027, 1028, 1041, 1060, 1066, 1108, 1109, 1110, 1111, 1112, 1140, 1169, 1268, 1276, 1277, 1278, 1282, 1301, 1308, 1311, 1314, 1315], "loss": [14, 153, 478, 484, 518, 563, 744, 1060, 1066, 1100], "receiv": [14, 152, 153, 160, 163, 478, 484, 563, 742, 744, 751, 754, 1060, 1066, 1311], "db": [14, 146, 147, 148, 152, 153, 163, 164, 199, 203, 450, 451, 478, 484, 518, 532, 563, 735, 736, 737, 742, 744, 754, 755, 788, 792, 1031, 1032, 1060, 1066, 1100, 1114, 1235, 1292, 1316, 1317], "minimum": [14, 24, 25, 126, 133, 135, 136, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 197, 200, 201, 202, 203, 204, 222, 224, 229, 232, 233, 234, 235, 236, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 445, 447, 461, 466, 470, 474, 476, 483, 489, 496, 497, 501, 505, 515, 518, 522, 526, 527, 532, 534, 563, 578, 579, 714, 721, 723, 724, 729, 730, 731, 732, 735, 736, 737, 738, 739, 740, 741, 745, 746, 747, 748, 749, 750, 786, 789, 790, 791, 792, 793, 812, 814, 819, 822, 823, 824, 825, 826, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 990, 1026, 1028, 1043, 1048, 1052, 1056, 1058, 1065, 1071, 1078, 1079, 1083, 1087, 1097, 1100, 1104, 1108, 1109, 1114, 1116, 1197, 1217, 1219, 1229, 1230, 1242, 1302, 1313], "maximum": [14, 16, 24, 25, 88, 129, 130, 133, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 197, 199, 200, 201, 202, 222, 224, 229, 232, 233, 234, 235, 236, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 445, 447, 457, 461, 466, 474, 483, 496, 497, 499, 501, 502, 504, 507, 510, 511, 515, 522, 528, 532, 533, 534, 563, 565, 578, 579, 647, 717, 718, 721, 723, 724, 725, 726, 729, 730, 731, 732, 735, 736, 737, 738, 739, 740, 741, 745, 746, 747, 749, 750, 786, 788, 789, 790, 791, 812, 814, 819, 822, 823, 824, 825, 826, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 969, 990, 1026, 1028, 1034, 1039, 1043, 1048, 1056, 1065, 1078, 1079, 1081, 1083, 1084, 1086, 1089, 1092, 1093, 1097, 1104, 1110, 1114, 1115, 1116, 1166, 1197, 1214, 1230, 1235, 1245, 1246, 1247, 1301, 1302, 1317], "keep": [14, 24, 25, 34, 137, 144, 198, 394, 502, 557, 563, 578, 579, 592, 725, 732, 787, 986, 1084, 1259, 1260, 1276, 1302, 1320, 1322], "k": [15, 124, 226, 227, 228, 230, 231, 232, 252, 293, 294, 295, 297, 298, 299, 326, 327, 328, 334, 335, 336, 363, 364, 365, 371, 372, 373, 432, 436, 437, 439, 440, 461, 518, 528, 540, 564, 683, 816, 817, 818, 820, 821, 822, 842, 883, 884, 885, 887, 888, 889, 916, 917, 918, 924, 925, 926, 953, 954, 955, 961, 962, 963, 997, 1001, 1002, 1004, 1005, 1009, 1012, 1013, 1014, 1015, 1043, 1100, 1110, 1122, 1282, 1289, 1292, 1293, 1320], "band": [15, 21, 126, 128, 132, 398, 461, 466, 500, 506, 520, 528, 529, 530, 537, 538, 564, 570, 714, 716, 720, 990, 1043, 1048, 1082, 1088, 1102, 1110, 1111, 1112, 1119, 1120, 1308, 1315], "arm": [15, 32, 54, 382, 383, 396, 397, 517, 564, 588, 613, 974, 975, 988, 989, 1099, 1134, 1197, 1202, 1265, 1278, 1293, 1307, 1309, 1310, 1311, 1313, 1314, 1317, 1319, 1322], "zenith": [15, 564], "kazr": [15, 564], "ingest": [15, 564, 1307, 1308], "rmax": [16, 197, 483, 565, 786, 1065, 1242], "noxp": [17, 566], "iphex": [17, 566], "gain": [18, 19, 20, 30, 31, 32, 152, 163, 478, 518, 567, 568, 569, 585, 586, 588, 742, 754, 1060, 1100], "nodata": [18, 19, 20, 30, 31, 567, 568, 569, 585, 586, 1265], "nan": [18, 19, 20, 137, 177, 196, 197, 201, 530, 557, 558, 567, 568, 569, 572, 573, 694, 713, 725, 739, 766, 785, 786, 790, 1112, 1315], "undetect": [18, 19, 20, 30, 31, 567, 568, 569, 585, 586, 1265], "use_file_convers": [18, 19, 20, 567, 568, 569], "time_ref": [18, 30, 567, 585], "convert": [18, 19, 20, 23, 30, 31, 53, 125, 152, 501, 544, 567, 568, 569, 577, 585, 586, 612, 684, 742, 1083, 1133, 1245, 1263, 1302, 1315], "what": [18, 19, 20, 30, 137, 447, 567, 568, 569, 585, 725, 757, 1028, 1272, 1281, 1309, 1311, 1314, 1320, 1322], "user": [18, 19, 20, 26, 44, 62, 91, 127, 128, 140, 370, 398, 488, 492, 567, 568, 569, 580, 602, 621, 650, 715, 716, 728, 960, 990, 1070, 1074, 1140, 1169, 1262, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1322], "physic": [18, 19, 20, 30, 31, 32, 501, 557, 558, 567, 568, 569, 572, 573, 585, 586, 588, 743, 1018, 1034, 1083, 1302, 1316], "otherwis": [18, 19, 20, 137, 154, 155, 408, 429, 436, 461, 466, 472, 474, 481, 483, 487, 488, 492, 496, 497, 499, 505, 507, 510, 511, 516, 518, 523, 557, 558, 567, 568, 569, 572, 573, 725, 745, 746, 1001, 1012, 1043, 1048, 1054, 1056, 1063, 1065, 1069, 1070, 1074, 1078, 1079, 1081, 1087, 1089, 1092, 1093, 1098, 1100, 1105, 1221, 1252], "pass": [18, 19, 20, 120, 122, 123, 137, 138, 139, 221, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 288, 289, 296, 300, 301, 302, 321, 322, 329, 330, 331, 332, 333, 334, 337, 338, 339, 358, 359, 366, 367, 368, 369, 370, 371, 374, 375, 376, 380, 381, 390, 392, 445, 447, 515, 528, 567, 568, 569, 679, 681, 682, 725, 726, 727, 811, 812, 819, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 854, 857, 859, 861, 878, 879, 886, 890, 891, 892, 911, 912, 919, 920, 921, 922, 923, 924, 927, 928, 929, 948, 949, 956, 957, 958, 959, 960, 961, 964, 965, 966, 972, 973, 982, 984, 1026, 1028, 1097, 1110, 1272, 1273, 1310, 1313, 1315], "mid": [18, 30, 567, 585], "expect": [18, 30, 236, 302, 339, 376, 530, 567, 585, 826, 892, 929, 966, 1112, 1316, 1320], "starttim": [18, 30, 567, 585], "middl": [18, 25, 30, 567, 579, 585], "endtim": [18, 30, 567, 585], "include_dataset": [19, 568], "exclude_dataset": [19, 568], "dataset": [19, 30, 31, 253, 333, 370, 390, 392, 473, 517, 568, 585, 586, 843, 923, 960, 982, 984, 1055, 1099, 1224, 1227, 1234, 1265, 1272, 1300, 1303, 1304, 1307, 1309], "given": [19, 36, 39, 40, 41, 43, 45, 47, 59, 65, 66, 67, 68, 71, 72, 73, 74, 75, 88, 94, 95, 96, 97, 100, 101, 102, 103, 104, 135, 136, 137, 153, 160, 161, 163, 171, 173, 174, 175, 176, 178, 180, 181, 185, 187, 188, 189, 190, 192, 193, 195, 197, 200, 201, 222, 227, 228, 248, 249, 250, 254, 255, 256, 257, 266, 268, 269, 270, 271, 289, 294, 295, 322, 327, 328, 329, 330, 359, 364, 365, 366, 367, 436, 446, 447, 461, 483, 488, 492, 516, 518, 525, 531, 568, 594, 597, 598, 599, 601, 604, 606, 618, 624, 625, 626, 627, 630, 631, 632, 633, 634, 647, 653, 654, 655, 656, 659, 660, 661, 662, 663, 688, 690, 691, 692, 693, 695, 697, 698, 702, 704, 705, 706, 707, 709, 710, 712, 723, 724, 725, 739, 744, 751, 752, 754, 760, 762, 763, 764, 765, 767, 769, 770, 774, 776, 777, 778, 779, 781, 782, 784, 786, 789, 790, 812, 817, 818, 838, 839, 840, 844, 845, 846, 847, 856, 858, 859, 860, 861, 879, 884, 885, 912, 917, 918, 919, 920, 949, 954, 955, 956, 957, 1001, 1012, 1018, 1025, 1027, 1028, 1043, 1065, 1070, 1074, 1098, 1100, 1107, 1113, 1125, 1127, 1137, 1143, 1144, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1166, 1172, 1173, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1195, 1233, 1234, 1243, 1244, 1257, 1300, 1302, 1307, 1315], "dataset1": [19, 568], "dataset2": [19, 568], "vertic": [20, 59, 88, 130, 132, 137, 143, 222, 223, 224, 229, 233, 234, 235, 236, 244, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 337, 338, 339, 359, 360, 361, 369, 374, 375, 376, 398, 457, 463, 464, 465, 466, 469, 474, 481, 482, 483, 494, 495, 496, 499, 500, 502, 513, 514, 515, 516, 521, 523, 525, 534, 535, 569, 618, 647, 718, 720, 725, 731, 812, 813, 814, 819, 823, 824, 825, 826, 834, 837, 839, 841, 843, 845, 847, 855, 857, 859, 861, 879, 880, 881, 886, 890, 891, 892, 912, 913, 914, 922, 927, 928, 929, 949, 950, 951, 959, 964, 965, 966, 990, 1039, 1045, 1046, 1047, 1048, 1051, 1056, 1063, 1064, 1065, 1076, 1077, 1078, 1081, 1082, 1084, 1095, 1096, 1097, 1098, 1103, 1105, 1107, 1116, 1117, 1137, 1166, 1245, 1263, 1293, 1303, 1304, 1307, 1315, 1316], "profil": [20, 31, 55, 129, 130, 135, 136, 137, 382, 383, 457, 466, 474, 483, 496, 499, 515, 517, 529, 530, 531, 534, 535, 569, 586, 614, 717, 718, 723, 724, 725, 974, 975, 1039, 1048, 1056, 1065, 1078, 1081, 1097, 1099, 1111, 1112, 1113, 1116, 1117, 1221, 1257, 1268, 1270, 1299, 1307, 1315, 1320], "those": [20, 62, 69, 91, 98, 138, 139, 169, 394, 446, 475, 543, 569, 621, 628, 650, 657, 686, 726, 727, 758, 986, 1027, 1057, 1140, 1147, 1169, 1176, 1248, 1264, 1322], "vol2bird": [20, 569], "pattern": [21, 135, 136, 534, 570, 723, 724, 1116, 1292], "25": [22, 154, 155, 571, 745, 746, 1272, 1276, 1292, 1293, 1296, 1309, 1314, 1315, 1316], "889375": [22, 571], "418": [22, 571], "4794775": [22, 571], "243": [22, 571], "png": [22, 207, 243, 259, 274, 307, 344, 571, 797, 833, 849, 864, 897, 934], "web": [22, 380, 390, 398, 571, 972, 982, 990, 1272, 1273], "mercat": [22, 264, 571, 854], "radx_dir": [23, 577], "first": [23, 27, 32, 59, 72, 88, 101, 137, 139, 141, 146, 382, 383, 393, 396, 447, 478, 501, 528, 529, 530, 537, 577, 582, 588, 618, 631, 647, 660, 725, 727, 729, 735, 974, 975, 985, 988, 1018, 1028, 1060, 1083, 1110, 1111, 1112, 1119, 1137, 1150, 1166, 1179, 1224, 1226, 1253, 1254, 1268, 1272, 1273, 1286, 1295, 1300, 1302, 1311, 1313, 1314, 1315, 1317, 1320], "radxconvert": [23, 577], "radx": [23, 577], "instal": [23, 120, 122, 123, 140, 145, 398, 543, 577, 679, 681, 682, 728, 733, 990, 1321, 1322], "filenames_psr": [24, 25, 578, 579], "undo_txcorr": [24, 25, 578, 579], "cpi": [24, 25, 574, 578, 579], "mean": [24, 29, 117, 157, 454, 456, 466, 469, 473, 474, 483, 496, 503, 540, 578, 584, 676, 748, 1036, 1038, 1048, 1051, 1055, 1056, 1065, 1078, 1085, 1122, 1210, 1211, 1217, 1219, 1220, 1229, 1230, 1235, 1243, 1253, 1254, 1272, 1273, 1314, 1315, 1317, 1320], "5": [24, 25, 26, 45, 126, 128, 135, 136, 137, 140, 145, 147, 148, 149, 150, 154, 155, 156, 164, 201, 222, 229, 232, 233, 234, 235, 236, 252, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 397, 446, 447, 461, 501, 502, 505, 507, 513, 514, 521, 525, 532, 534, 536, 578, 579, 580, 604, 714, 716, 723, 724, 725, 728, 733, 736, 737, 738, 739, 740, 745, 746, 747, 755, 790, 812, 819, 822, 823, 824, 825, 826, 842, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 989, 1027, 1028, 1043, 1083, 1084, 1087, 1089, 1095, 1096, 1103, 1107, 1114, 1116, 1118, 1125, 1245, 1267, 1268, 1281, 1284, 1286, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1302, 1303, 1305, 1309, 1311, 1314, 1315, 1316, 1317, 1320], "correct": [24, 25, 68, 71, 97, 100, 169, 197, 198, 199, 200, 201, 202, 203, 204, 388, 459, 517, 518, 528, 578, 579, 627, 630, 656, 659, 758, 786, 787, 788, 789, 790, 791, 792, 793, 980, 1041, 1099, 1100, 1110, 1146, 1149, 1175, 1178, 1202, 1265, 1268, 1269, 1273, 1283, 1303, 1307, 1311, 1315, 1318, 1320], "transmit": [24, 25, 478, 578, 579, 1060, 1311], "remov": [24, 25, 45, 59, 70, 71, 88, 99, 100, 126, 127, 128, 137, 142, 143, 146, 154, 155, 156, 197, 198, 199, 200, 201, 202, 203, 204, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 405, 430, 436, 437, 473, 501, 515, 578, 579, 604, 618, 629, 630, 647, 658, 659, 714, 715, 716, 725, 730, 731, 735, 739, 745, 746, 747, 786, 787, 788, 789, 790, 791, 792, 793, 812, 819, 823, 824, 825, 826, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 995, 1001, 1002, 1008, 1012, 1013, 1055, 1083, 1097, 1125, 1137, 1148, 1149, 1166, 1177, 1178, 1230, 1267, 1277, 1283, 1292, 1302, 1311, 1314, 1320], "signal": [24, 25, 26, 132, 144, 147, 148, 149, 164, 201, 202, 451, 454, 456, 459, 465, 467, 470, 472, 473, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 503, 518, 578, 579, 580, 720, 732, 736, 737, 738, 739, 755, 790, 791, 1032, 1036, 1038, 1041, 1047, 1049, 1052, 1054, 1055, 1057, 1058, 1062, 1063, 1064, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1085, 1100, 1229, 1230, 1235], "low_prf": [24, 25, 578, 579], "intermediate_prf": [24, 25, 578, 579], "high_prf": [24, 25, 578, 579], "within": [24, 44, 61, 62, 90, 91, 133, 137, 138, 139, 140, 141, 142, 143, 144, 151, 154, 155, 156, 158, 159, 169, 197, 236, 302, 339, 376, 445, 446, 447, 452, 466, 474, 483, 496, 499, 502, 525, 526, 527, 532, 578, 602, 620, 621, 649, 650, 686, 721, 725, 726, 727, 728, 729, 730, 731, 732, 741, 745, 746, 747, 749, 750, 758, 786, 826, 892, 929, 966, 1026, 1027, 1028, 1033, 1048, 1056, 1065, 1078, 1081, 1084, 1107, 1108, 1109, 1114, 1139, 1140, 1168, 1169, 1209, 1222, 1223, 1231, 1232, 1234, 1243, 1244, 1264, 1272, 1273, 1283, 1284, 1307, 1311, 1313, 1316, 1320, 1322], "step": [24, 135, 136, 148, 236, 302, 339, 376, 398, 466, 474, 476, 483, 496, 497, 499, 532, 534, 578, 723, 724, 737, 826, 892, 929, 966, 990, 1048, 1056, 1058, 1065, 1078, 1079, 1081, 1114, 1116, 1230, 1237, 1249, 1272, 1292, 1293, 1302, 1322], "taken": [24, 117, 125, 150, 151, 222, 289, 322, 359, 578, 676, 684, 740, 741, 812, 879, 912, 949, 1202, 1222, 1223, 1229, 1243, 1244, 1285], "fold": [25, 137, 138, 503, 579, 725, 726, 1085, 1272, 1315], "positive_awai": [25, 579], "complex": [25, 33, 470, 472, 481, 487, 488, 489, 490, 491, 492, 493, 539, 576, 579, 590, 1052, 1054, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1121], "spectra": [25, 28, 29, 32, 88, 453, 455, 456, 462, 464, 467, 470, 472, 475, 479, 481, 486, 487, 488, 489, 490, 491, 492, 493, 503, 576, 579, 583, 584, 588, 647, 1035, 1037, 1038, 1044, 1046, 1049, 1052, 1054, 1057, 1061, 1063, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1085, 1166, 1200, 1206, 1229, 1241, 1251, 1260], "so": [25, 138, 222, 233, 289, 300, 322, 337, 359, 374, 394, 447, 450, 579, 726, 734, 812, 823, 879, 890, 912, 927, 949, 964, 986, 1028, 1031, 1241, 1265, 1272, 1273, 1302, 1315, 1316, 1320, 1322], "doppler": [25, 88, 117, 137, 138, 139, 197, 453, 454, 455, 456, 459, 470, 473, 475, 489, 503, 515, 540, 579, 647, 676, 725, 726, 727, 786, 1035, 1036, 1037, 1038, 1041, 1052, 1055, 1057, 1071, 1085, 1097, 1122, 1166, 1229, 1230, 1266, 1270, 1285, 1295, 1307, 1308, 1317, 1320], "revers": [25, 222, 233, 289, 300, 322, 337, 359, 374, 394, 528, 579, 812, 823, 879, 890, 912, 927, 949, 964, 986, 1110], "veloc": [25, 26, 39, 72, 88, 101, 137, 138, 139, 197, 452, 453, 454, 503, 513, 514, 515, 516, 523, 540, 541, 579, 580, 597, 631, 647, 660, 725, 726, 727, 786, 1033, 1035, 1036, 1085, 1095, 1096, 1097, 1098, 1105, 1122, 1123, 1150, 1166, 1179, 1214, 1257, 1266, 1270, 1272, 1281, 1285, 1293, 1295, 1307, 1308, 1314, 1317, 1320], "awai": [25, 579, 1315], "routin": [26, 30, 31, 32, 396, 446, 543, 580, 585, 586, 588, 757, 988, 1027, 1307, 1316], "rainbow5": [26, 580], "version": [26, 45, 136, 168, 525, 526, 527, 540, 542, 580, 604, 724, 1020, 1107, 1108, 1109, 1122, 1125, 1209, 1265, 1307, 1317, 1319, 1320, 1322], "22": [26, 143, 152, 160, 163, 580, 731, 742, 751, 754, 1272, 1281], "3": [26, 59, 88, 117, 118, 129, 130, 137, 138, 146, 153, 163, 197, 199, 200, 203, 234, 388, 392, 398, 445, 447, 458, 498, 501, 515, 532, 534, 580, 618, 647, 676, 677, 717, 718, 725, 726, 735, 744, 754, 786, 788, 789, 792, 824, 980, 984, 990, 1026, 1028, 1040, 1080, 1083, 1097, 1114, 1116, 1137, 1166, 1197, 1230, 1237, 1249, 1267, 1268, 1270, 1273, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1297, 1300, 1301, 1302, 1303, 1304, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1322], "34": [26, 537, 580, 1119, 1302, 1316], "16": [26, 154, 158, 506, 526, 540, 580, 745, 749, 1088, 1108, 1122, 1267, 1268, 1276, 1288, 1294, 1301, 1311, 1316, 1317, 1320], "35": [26, 139, 150, 151, 461, 580, 727, 740, 741, 1043, 1281, 1290, 1292, 1293, 1314], "sinc": [26, 516, 528, 580, 1034, 1098, 1110, 1302, 1310, 1313, 1315, 1316, 1317], "evolv": [26, 580], "constantli": [26, 580], "guaranti": [26, 580], "work": [26, 121, 124, 251, 252, 305, 333, 342, 370, 390, 392, 503, 537, 580, 680, 683, 841, 842, 895, 923, 932, 960, 982, 984, 1085, 1119, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1322], "necessari": [26, 580], "adapt": [26, 117, 152, 153, 160, 163, 580, 676, 742, 744, 751, 754, 1265, 1322], "code": [26, 44, 137, 523, 540, 580, 602, 725, 1105, 1122, 1265, 1270, 1307, 1316, 1319, 1322], "accord": [26, 132, 134, 394, 447, 450, 461, 468, 475, 476, 506, 507, 508, 510, 511, 580, 720, 722, 986, 1028, 1031, 1043, 1050, 1057, 1058, 1088, 1089, 1090, 1092, 1093, 1237, 1249], "its": [26, 164, 249, 528, 580, 743, 755, 839, 1110, 1252, 1307, 1315, 1319, 1320, 1322], "own": [26, 543, 580, 1281, 1307, 1316, 1319], "rais": [26, 45, 46, 52, 60, 61, 63, 72, 89, 90, 92, 101, 167, 381, 393, 408, 436, 437, 580, 604, 605, 611, 619, 620, 622, 631, 648, 649, 651, 660, 973, 985, 1001, 1002, 1012, 1013, 1125, 1126, 1132, 1138, 1139, 1141, 1150, 1167, 1168, 1170, 1179], "an": [26, 30, 31, 39, 43, 44, 45, 53, 59, 61, 62, 65, 66, 72, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 95, 101, 110, 111, 112, 113, 114, 115, 116, 130, 137, 138, 139, 140, 150, 151, 165, 168, 177, 197, 199, 200, 201, 202, 203, 204, 205, 227, 294, 327, 364, 370, 394, 397, 398, 441, 445, 446, 447, 467, 474, 475, 476, 496, 505, 517, 544, 557, 558, 572, 573, 580, 585, 586, 597, 601, 602, 604, 612, 618, 620, 621, 624, 625, 631, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 653, 654, 660, 669, 670, 671, 672, 673, 674, 675, 694, 718, 725, 726, 727, 728, 739, 740, 741, 766, 786, 788, 789, 790, 791, 792, 793, 795, 817, 884, 917, 954, 960, 986, 989, 990, 1006, 1016, 1018, 1026, 1027, 1028, 1049, 1056, 1057, 1058, 1078, 1087, 1099, 1125, 1133, 1137, 1139, 1140, 1143, 1144, 1150, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1168, 1169, 1172, 1173, 1179, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1214, 1223, 1227, 1228, 1243, 1244, 1248, 1249, 1261, 1263, 1265, 1270, 1273, 1276, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1300, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1317, 1319, 1320, 1321], "issu": [26, 44, 168, 305, 342, 394, 397, 580, 602, 895, 932, 986, 989, 1265, 1270, 1271, 1307, 1319, 1320, 1322], "upstream": [26, 580, 1320], "reflect": [26, 61, 90, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 140, 141, 142, 143, 144, 147, 148, 150, 151, 154, 155, 156, 158, 159, 169, 197, 200, 201, 224, 291, 324, 361, 451, 453, 455, 457, 458, 462, 464, 465, 471, 477, 478, 479, 480, 481, 484, 485, 487, 488, 492, 498, 501, 502, 504, 507, 509, 510, 511, 512, 518, 525, 526, 528, 532, 534, 536, 537, 580, 620, 649, 686, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 728, 729, 730, 731, 732, 736, 737, 739, 740, 741, 745, 746, 747, 749, 750, 758, 786, 789, 790, 814, 881, 914, 951, 969, 1018, 1032, 1034, 1035, 1037, 1039, 1040, 1044, 1046, 1047, 1053, 1059, 1060, 1061, 1062, 1063, 1066, 1067, 1069, 1070, 1074, 1080, 1083, 1084, 1086, 1089, 1091, 1092, 1093, 1094, 1100, 1107, 1108, 1110, 1114, 1116, 1118, 1119, 1139, 1168, 1205, 1207, 1208, 1240, 1266, 1268, 1270, 1272, 1273, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1285, 1288, 1291, 1294, 1295, 1297, 1299, 1300, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317], "dbuz": [26, 580], "dbzv": [26, 580], "dbuzv": [26, 580], "vu": [26, 580], "vv": [26, 580], "vvu": [26, 580], "spectrum": [26, 29, 455, 456, 503, 580, 584, 1037, 1038, 1085, 1229, 1230, 1317], "width": [26, 129, 152, 153, 163, 164, 250, 252, 266, 333, 370, 447, 455, 456, 457, 477, 580, 717, 742, 743, 744, 754, 755, 840, 842, 856, 923, 960, 1028, 1037, 1038, 1039, 1059, 1317], "w": [26, 76, 105, 139, 152, 160, 163, 461, 504, 518, 525, 532, 534, 580, 635, 664, 727, 742, 751, 754, 1043, 1086, 1100, 1107, 1114, 1116, 1154, 1183, 1303, 1315, 1316], "wu": [26, 445, 580, 1026, 1313], "wv": [26, 580], "wvu": [26, 580], "differenti": [26, 33, 126, 127, 128, 133, 141, 143, 144, 147, 148, 150, 151, 154, 155, 156, 158, 159, 197, 200, 462, 463, 464, 465, 469, 473, 487, 488, 502, 504, 508, 511, 525, 526, 527, 528, 529, 530, 532, 535, 539, 580, 590, 714, 715, 716, 721, 729, 731, 732, 736, 737, 740, 741, 745, 746, 747, 749, 750, 786, 789, 1044, 1045, 1046, 1047, 1051, 1055, 1069, 1070, 1084, 1086, 1090, 1093, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1117, 1121, 1285, 1307, 1316], "zdr": [26, 127, 128, 132, 143, 144, 147, 148, 154, 155, 156, 164, 200, 448, 460, 461, 525, 580, 715, 716, 720, 731, 732, 736, 737, 745, 746, 747, 755, 789, 1042, 1043, 1107, 1316], "zdru": [26, 580], "co": [26, 117, 121, 124, 142, 143, 144, 154, 155, 156, 197, 501, 516, 580, 676, 680, 683, 730, 731, 732, 745, 746, 747, 786, 1083, 1098, 1216, 1302], "correl": [26, 142, 143, 144, 154, 155, 156, 197, 200, 201, 502, 504, 523, 525, 532, 534, 580, 730, 731, 732, 739, 745, 746, 747, 786, 789, 790, 1084, 1086, 1105, 1107, 1114, 1116, 1218, 1220, 1240, 1284, 1285, 1301, 1302], "coeffici": [26, 126, 127, 128, 147, 148, 149, 150, 151, 152, 163, 197, 461, 502, 504, 505, 525, 532, 580, 714, 715, 716, 736, 737, 738, 740, 741, 742, 754, 786, 1043, 1084, 1086, 1087, 1107, 1114, 1218, 1220, 1221, 1240, 1284, 1285, 1301], "rhohv": [26, 132, 142, 143, 144, 154, 155, 156, 200, 201, 448, 457, 460, 461, 468, 472, 481, 482, 493, 525, 532, 534, 580, 720, 730, 731, 732, 739, 745, 746, 747, 789, 790, 1039, 1042, 1043, 1050, 1054, 1063, 1064, 1075, 1107, 1114, 1116, 1284, 1316, 1317], "rhohvu": [26, 580], "phase": [26, 33, 126, 127, 128, 133, 139, 141, 143, 144, 150, 151, 154, 155, 156, 158, 159, 200, 462, 463, 469, 473, 487, 490, 496, 502, 504, 508, 511, 523, 525, 526, 527, 528, 529, 530, 535, 539, 580, 590, 714, 715, 716, 721, 727, 729, 731, 732, 740, 741, 745, 746, 747, 749, 750, 789, 1044, 1045, 1051, 1055, 1069, 1072, 1078, 1084, 1086, 1090, 1093, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1117, 1121, 1285, 1307, 1311, 1316], "phidp": [26, 127, 128, 133, 141, 143, 144, 150, 151, 154, 155, 156, 158, 159, 200, 526, 527, 528, 580, 715, 716, 721, 729, 731, 732, 740, 741, 745, 746, 747, 749, 750, 789, 1108, 1109, 1110, 1307, 1316], "uphidp": [26, 580], "uphidpu": [26, 580], "kdp": [26, 144, 150, 151, 154, 155, 156, 448, 461, 508, 511, 525, 526, 527, 528, 529, 530, 580, 732, 740, 741, 745, 746, 747, 1043, 1090, 1093, 1107, 1108, 1109, 1110, 1111, 1112, 1303, 1307], "ukdp": [26, 580], "ukdpu": [26, 580], "qualiti": [26, 132, 152, 153, 160, 163, 201, 529, 530, 580, 720, 739, 742, 744, 751, 754, 790, 1111, 1112, 1272], "sqi": [26, 580], "sqiu": [26, 580], "sqiv": [26, 580], "sqivu": [26, 580], "temperatur": [26, 127, 128, 135, 136, 142, 143, 144, 146, 154, 155, 156, 203, 502, 521, 525, 532, 534, 580, 715, 716, 723, 724, 730, 731, 732, 735, 745, 746, 747, 792, 1084, 1103, 1107, 1114, 1116, 1303, 1316], "temp": [26, 580, 1316], "bin": [26, 59, 88, 117, 118, 119, 128, 141, 142, 143, 144, 147, 158, 159, 393, 466, 474, 483, 496, 499, 503, 522, 526, 527, 536, 580, 618, 647, 676, 677, 678, 716, 729, 730, 731, 732, 736, 749, 750, 985, 1048, 1056, 1065, 1078, 1081, 1085, 1104, 1108, 1109, 1118, 1137, 1166, 1229, 1235, 1246, 1276, 1311, 1317], "respect": [26, 59, 88, 161, 162, 164, 450, 501, 502, 504, 525, 532, 533, 534, 536, 537, 580, 618, 647, 743, 752, 753, 755, 1031, 1083, 1084, 1086, 1107, 1114, 1115, 1116, 1118, 1119, 1137, 1166], "iso0": [26, 127, 135, 136, 142, 143, 146, 154, 155, 156, 199, 461, 502, 504, 521, 525, 532, 533, 534, 538, 580, 715, 723, 724, 730, 731, 735, 745, 746, 747, 788, 1043, 1084, 1086, 1103, 1107, 1114, 1115, 1116, 1120], "visibl": [26, 134, 204, 518, 580, 722, 793, 1100, 1242, 1307], "digit": [26, 236, 302, 339, 376, 518, 557, 558, 572, 573, 580, 826, 892, 929, 966, 1100, 1265], "elev": [26, 31, 59, 66, 71, 82, 88, 95, 100, 111, 117, 118, 119, 135, 136, 143, 144, 147, 148, 149, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 197, 205, 222, 224, 229, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 272, 289, 291, 296, 300, 301, 302, 305, 322, 324, 332, 333, 337, 338, 339, 342, 359, 361, 369, 370, 374, 375, 376, 394, 450, 474, 496, 497, 516, 518, 522, 530, 532, 580, 586, 618, 625, 630, 641, 647, 654, 659, 670, 676, 677, 678, 723, 724, 731, 732, 734, 736, 737, 738, 742, 743, 744, 745, 746, 747, 751, 752, 753, 754, 755, 786, 795, 812, 814, 819, 823, 824, 825, 826, 839, 845, 847, 857, 859, 861, 862, 879, 881, 886, 890, 891, 892, 895, 912, 914, 922, 923, 927, 928, 929, 932, 949, 951, 959, 960, 964, 965, 966, 986, 1031, 1056, 1078, 1079, 1098, 1100, 1104, 1112, 1114, 1137, 1144, 1149, 1160, 1166, 1173, 1178, 1189, 1223, 1238, 1242, 1245, 1250, 1265, 1276, 1301, 1309, 1315, 1316, 1317], "model": [26, 30, 31, 59, 88, 117, 118, 135, 136, 138, 236, 302, 339, 376, 391, 397, 518, 532, 534, 580, 585, 586, 618, 647, 676, 677, 723, 724, 726, 826, 892, 929, 966, 983, 989, 1100, 1114, 1116, 1137, 1166, 1221, 1303, 1316], "dem": [26, 236, 302, 339, 376, 518, 580, 826, 892, 929, 966, 1100, 1307], "vi": [26, 461, 525, 580, 1043, 1107, 1303, 1316], "introduc": [26, 395, 530, 532, 580, 987, 1112, 1114], "swissbirdradar": [29, 584], "degre": [29, 47, 55, 69, 70, 98, 99, 117, 118, 119, 120, 121, 122, 123, 124, 125, 146, 150, 151, 161, 162, 203, 205, 222, 227, 228, 236, 248, 250, 254, 256, 264, 266, 268, 270, 272, 289, 294, 295, 302, 305, 322, 327, 328, 331, 333, 339, 342, 359, 364, 365, 368, 370, 376, 466, 477, 496, 532, 540, 584, 606, 614, 628, 629, 657, 658, 676, 677, 678, 679, 680, 681, 682, 683, 684, 734, 735, 740, 741, 752, 753, 792, 795, 812, 817, 818, 826, 838, 840, 844, 846, 854, 856, 858, 860, 862, 879, 884, 885, 892, 895, 912, 917, 918, 921, 923, 929, 932, 949, 954, 955, 958, 960, 966, 1025, 1048, 1059, 1078, 1114, 1122, 1127, 1147, 1148, 1176, 1177, 1211, 1213, 1222, 1223, 1232, 1233, 1234, 1245, 1254, 1258, 1297, 1300, 1317, 1320], "abov": [29, 55, 56, 59, 61, 88, 90, 126, 127, 128, 129, 130, 135, 136, 137, 140, 142, 143, 145, 146, 150, 151, 154, 155, 156, 158, 171, 185, 197, 199, 200, 201, 203, 227, 228, 294, 295, 327, 328, 364, 365, 447, 450, 451, 461, 501, 505, 526, 532, 534, 540, 584, 614, 615, 618, 620, 647, 649, 688, 702, 714, 715, 716, 717, 718, 723, 724, 725, 728, 730, 731, 733, 735, 739, 740, 741, 745, 746, 747, 749, 760, 774, 786, 788, 789, 790, 792, 817, 818, 884, 885, 917, 918, 954, 955, 969, 1028, 1031, 1032, 1043, 1083, 1087, 1108, 1114, 1116, 1122, 1137, 1139, 1166, 1168, 1229, 1230, 1233, 1234, 1270, 1276, 1291, 1293, 1299, 1304, 1307, 1309, 1311, 1315, 1320, 1322], "sea": [29, 55, 56, 59, 88, 540, 584, 614, 615, 618, 647, 1122, 1137, 1166, 1320], "level": [29, 30, 31, 47, 53, 55, 56, 59, 76, 88, 105, 127, 128, 243, 244, 245, 246, 251, 252, 253, 255, 257, 259, 260, 261, 262, 267, 269, 271, 390, 391, 392, 398, 399, 470, 475, 489, 504, 523, 532, 533, 534, 537, 540, 584, 585, 586, 606, 612, 614, 615, 618, 635, 647, 664, 715, 716, 833, 834, 835, 836, 841, 842, 843, 845, 847, 849, 850, 851, 852, 857, 859, 861, 982, 983, 984, 990, 991, 1052, 1057, 1071, 1086, 1105, 1114, 1115, 1116, 1119, 1122, 1127, 1133, 1137, 1154, 1166, 1183, 1229, 1230, 1292, 1293, 1296, 1301, 1307, 1313, 1316, 1317, 1320], "meter": [29, 55, 56, 57, 58, 70, 71, 72, 99, 100, 101, 117, 118, 119, 120, 121, 122, 123, 124, 125, 146, 205, 236, 272, 302, 305, 330, 333, 339, 342, 367, 370, 376, 442, 443, 444, 445, 446, 447, 451, 501, 523, 528, 531, 537, 540, 584, 614, 615, 616, 617, 629, 630, 631, 658, 659, 660, 676, 677, 678, 679, 680, 681, 682, 683, 684, 735, 795, 826, 862, 892, 895, 920, 923, 929, 932, 957, 960, 966, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1032, 1083, 1105, 1110, 1113, 1119, 1122, 1148, 1149, 1150, 1177, 1178, 1179, 1197, 1232, 1258, 1276, 1313, 1315, 1317, 1320], "compress": [30, 31, 380, 388, 389, 585, 586, 972, 980, 981], "gzip": [30, 31, 380, 388, 389, 585, 586, 972, 980, 981], "compression_opt": [30, 31, 585, 586], "6": [30, 31, 132, 135, 136, 157, 158, 159, 200, 502, 507, 515, 518, 521, 525, 526, 527, 534, 585, 586, 720, 723, 724, 748, 749, 750, 789, 1084, 1089, 1097, 1100, 1103, 1107, 1108, 1109, 1116, 1230, 1237, 1249, 1273, 1276, 1281, 1282, 1286, 1289, 1301, 1303, 1307, 1309, 1311, 1314, 1315, 1316, 1317, 1319, 1322], "undefined_valu": [30, 31, 585, 586], "odim_convent": [30, 31, 585, 586], "v2_2": [30, 31, 585, 586], "write": [30, 31, 32, 396, 397, 398, 399, 400, 585, 586, 587, 588, 988, 989, 990, 991, 992, 1124, 1135, 1270, 1271, 1310], "eumetnet": [30, 31, 585, 586], "opera": [30, 31, 585, 586, 1265, 1307], "compliant": [30, 31, 396, 585, 586, 988], "produc": [30, 31, 32, 140, 387, 396, 398, 401, 475, 476, 535, 541, 585, 586, 588, 728, 979, 988, 990, 994, 1057, 1058, 1117, 1123, 1307, 1320], "follow": [30, 31, 32, 139, 197, 200, 201, 396, 397, 399, 400, 440, 446, 447, 503, 518, 525, 528, 532, 534, 585, 586, 588, 727, 739, 786, 789, 790, 988, 989, 991, 992, 1005, 1015, 1027, 1028, 1085, 1100, 1107, 1110, 1114, 1116, 1272, 1300, 1307, 1315, 1316, 1319, 1320], "inform": [30, 31, 39, 45, 59, 76, 88, 105, 126, 137, 147, 148, 149, 150, 151, 182, 194, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 386, 394, 397, 528, 537, 542, 546, 557, 558, 572, 573, 585, 586, 597, 604, 618, 635, 647, 664, 699, 711, 714, 725, 736, 737, 738, 740, 741, 771, 783, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 978, 986, 989, 1110, 1119, 1125, 1137, 1154, 1166, 1183, 1273, 1293, 1307, 1320], "http": [30, 31, 125, 390, 391, 392, 501, 523, 585, 586, 684, 982, 983, 984, 1034, 1083, 1105, 1240, 1265, 1284, 1293, 1302, 1307, 1319, 1320, 1322], "www": [30, 31, 125, 390, 391, 392, 523, 585, 586, 684, 982, 983, 984, 1105, 1320], "eu": [30, 31, 585, 586], "wp": [30, 31, 585, 586], "content": [30, 31, 585, 586], "upload": [30, 31, 585, 586], "2021": [30, 31, 585, 586, 1302, 1307, 1315], "07": [30, 31, 585, 586, 1273, 1284, 1302, 1317], "odim_h5_v2": [30, 31, 585, 586], "pdf": [30, 31, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 585, 586, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966], "process": [30, 31, 138, 150, 151, 252, 461, 518, 585, 586, 726, 740, 741, 842, 1043, 1100, 1265, 1272, 1307, 1308, 1316, 1320], "save": [30, 31, 54, 207, 222, 224, 229, 233, 234, 235, 236, 243, 259, 274, 289, 291, 296, 300, 301, 302, 307, 322, 324, 332, 333, 337, 338, 339, 344, 359, 361, 369, 370, 374, 375, 376, 397, 399, 585, 586, 613, 797, 812, 814, 819, 823, 824, 825, 826, 833, 849, 864, 879, 881, 886, 890, 891, 892, 897, 912, 914, 922, 923, 927, 928, 929, 934, 949, 951, 959, 960, 964, 965, 966, 989, 991, 1029, 1134, 1307, 1308], "equal": [30, 31, 62, 91, 120, 122, 123, 138, 174, 175, 180, 188, 189, 192, 370, 388, 399, 537, 540, 585, 586, 621, 650, 679, 681, 682, 691, 692, 697, 705, 706, 709, 726, 763, 764, 769, 777, 778, 781, 960, 980, 991, 1119, 1122, 1140, 1169, 1250, 1284, 1302, 1303, 1314, 1315, 1316], "_fillvalu": [30, 31, 32, 396, 397, 585, 586, 588, 988, 989, 1310, 1317], "fill": [30, 31, 42, 126, 127, 128, 537, 585, 586, 600, 714, 715, 716, 1119, 1309, 1310], "linear": [30, 31, 127, 135, 136, 150, 151, 390, 501, 530, 585, 586, 715, 723, 724, 740, 741, 982, 1083, 1112, 1217, 1229, 1230, 1241, 1257, 1302, 1307], "keyword": [30, 31, 32, 221, 288, 321, 333, 358, 370, 390, 392, 473, 518, 585, 586, 588, 811, 878, 911, 923, 948, 960, 982, 984, 1055, 1100, 1310, 1313], "scale_factor": [30, 31, 32, 399, 585, 586, 588, 991], "add_offset": [30, 31, 32, 399, 585, 586, 588, 991], "calcul": [30, 31, 32, 33, 45, 47, 59, 70, 71, 88, 99, 100, 117, 118, 122, 126, 127, 128, 142, 143, 146, 150, 151, 154, 155, 156, 161, 169, 197, 199, 200, 201, 202, 203, 204, 205, 236, 272, 302, 305, 339, 342, 376, 446, 447, 451, 452, 458, 477, 478, 484, 498, 501, 518, 523, 535, 539, 540, 541, 585, 586, 588, 590, 604, 606, 618, 629, 630, 647, 658, 659, 676, 677, 681, 686, 714, 715, 716, 730, 731, 735, 739, 740, 741, 745, 746, 747, 752, 758, 786, 788, 789, 790, 791, 792, 793, 795, 826, 862, 892, 895, 929, 932, 966, 1027, 1028, 1032, 1033, 1040, 1059, 1060, 1066, 1080, 1083, 1100, 1105, 1117, 1121, 1122, 1123, 1125, 1127, 1137, 1148, 1149, 1166, 1177, 1178, 1214, 1216, 1229, 1232, 1233, 1234, 1239, 1258, 1267, 1270, 1276, 1292, 1293, 1299, 1302, 1307, 1311, 1314, 1320], "fly": [30, 31, 32, 585, 586, 588], "_write_as_dtyp": [30, 31, 32, 399, 585, 586, 588, 991], "datatyp": [30, 31, 585, 586, 1265], "It": [30, 31, 146, 152, 415, 429, 447, 516, 530, 532, 540, 585, 586, 735, 742, 1028, 1098, 1112, 1114, 1122, 1214, 1229, 1276, 1316, 1320, 1322], "uint8": [30, 31, 399, 585, 586, 991], "uint16": [30, 31, 399, 585, 586, 991], "typic": [30, 31, 121, 124, 138, 169, 173, 175, 182, 189, 194, 398, 445, 446, 585, 586, 680, 683, 686, 690, 692, 699, 706, 711, 726, 758, 762, 764, 771, 778, 783, 990, 1026, 1027, 1322], "lzf": [30, 31, 585, 586], "recomend": [30, 31, 585, 586], "replac": [30, 31, 46, 60, 61, 62, 89, 90, 91, 138, 139, 173, 175, 182, 189, 194, 585, 586, 605, 619, 620, 621, 648, 649, 650, 690, 692, 699, 706, 711, 726, 727, 762, 764, 771, 778, 783, 1126, 1138, 1139, 1140, 1167, 1168, 1169, 1265], "exampl": [30, 31, 44, 61, 90, 169, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 401, 442, 443, 444, 446, 447, 585, 586, 602, 620, 649, 686, 758, 812, 819, 822, 823, 824, 825, 826, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 994, 1018, 1022, 1023, 1024, 1027, 1028, 1135, 1139, 1168, 1267, 1268, 1269, 1272, 1273, 1274, 1276, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1305, 1306, 1307, 1309, 1311, 1314, 1315, 1316, 1317, 1318, 1320, 1322], "NOT": [30, 31, 169, 585, 586, 686, 758], "written": [30, 31, 397, 399, 400, 585, 586, 989, 991, 992, 1265, 1307], "odim": [30, 31, 585, 586, 1265], "convent": [30, 31, 59, 88, 137, 454, 473, 515, 540, 541, 585, 586, 618, 647, 725, 1036, 1055, 1097, 1122, 1123, 1137, 1166, 1265, 1272, 1307, 1315, 1317], "v2_3": [30, 31, 585, 586], "support": [31, 251, 252, 333, 370, 381, 389, 390, 391, 392, 393, 401, 528, 543, 586, 841, 842, 923, 960, 973, 981, 982, 983, 984, 985, 993, 994, 1018, 1110, 1265, 1292, 1307, 1309, 1310, 1311, 1313, 1314, 1317, 1319], "featur": [31, 461, 586, 1043, 1284, 1302, 1307, 1316], "ppi": [31, 59, 88, 138, 139, 140, 145, 221, 225, 229, 288, 292, 296, 321, 325, 332, 333, 358, 362, 369, 370, 474, 496, 518, 530, 586, 618, 647, 726, 727, 728, 733, 811, 815, 819, 878, 882, 886, 911, 915, 922, 923, 948, 952, 959, 960, 1029, 1056, 1078, 1100, 1112, 1137, 1166, 1198, 1199, 1202, 1205, 1207, 1222, 1223, 1270, 1280, 1283, 1284, 1296, 1307, 1315, 1316, 1317], "pvol": [31, 586], "differ": [31, 120, 122, 123, 135, 136, 137, 147, 148, 149, 154, 155, 156, 501, 503, 507, 515, 528, 534, 586, 679, 681, 682, 723, 724, 725, 734, 736, 737, 738, 745, 746, 747, 969, 1018, 1083, 1085, 1089, 1097, 1110, 1116, 1248, 1250, 1265, 1272, 1276, 1302, 1313, 1315, 1316, 1319, 1320], "group": [31, 586, 1320], "sector": [31, 59, 88, 586, 618, 647, 1137, 1166, 1317], "azim": [31, 586], "rhi": [31, 59, 88, 221, 222, 233, 288, 289, 300, 321, 322, 337, 358, 359, 374, 474, 496, 504, 530, 532, 586, 618, 647, 811, 812, 823, 878, 879, 890, 911, 912, 927, 948, 949, 964, 1029, 1056, 1078, 1086, 1112, 1114, 1137, 1166, 1199, 1208, 1222, 1223, 1238, 1250, 1270, 1280, 1307, 1315, 1317], "Not": [31, 381, 389, 586, 973, 981], "yet": [31, 394, 586, 986, 1272, 1307], "fix": [31, 497, 543, 586, 1079, 1265, 1270, 1271, 1295, 1309, 1316, 1319, 1320, 1322], "stare": [31, 586], "mode": [31, 59, 76, 88, 105, 380, 497, 532, 586, 618, 635, 647, 664, 972, 1079, 1114, 1137, 1154, 1166, 1183, 1317, 1319, 1320], "netcdf4": [32, 54, 391, 396, 397, 588, 613, 983, 988, 989, 1134, 1290, 1307, 1309, 1319, 1322], "time_refer": [32, 396, 588, 988, 1309], "arm_time_vari": [32, 54, 396, 397, 588, 613, 988, 989, 1134], "standard": [32, 54, 59, 76, 88, 105, 117, 118, 137, 147, 148, 164, 396, 397, 398, 475, 502, 515, 529, 543, 588, 613, 618, 635, 647, 664, 676, 677, 725, 736, 737, 743, 755, 988, 989, 990, 1034, 1057, 1084, 1097, 1111, 1134, 1137, 1154, 1166, 1183, 1212, 1213, 1239, 1244, 1309, 1310, 1311, 1316, 1320], "attempt": [32, 138, 139, 396, 397, 588, 726, 727, 988, 989], "also": [32, 44, 59, 88, 173, 223, 247, 265, 290, 323, 360, 391, 392, 396, 398, 400, 439, 501, 588, 602, 618, 647, 690, 762, 813, 837, 855, 880, 913, 950, 983, 984, 988, 990, 992, 1004, 1014, 1018, 1083, 1137, 1166, 1272, 1276, 1302, 1307, 1309, 1313, 1315, 1316, 1317, 1319, 1320, 1321, 1322], "made": [32, 61, 90, 396, 452, 588, 620, 649, 988, 1033, 1139, 1168, 1263, 1320], "meet": [32, 173, 175, 182, 189, 194, 396, 588, 690, 692, 699, 706, 711, 762, 764, 771, 778, 783, 988], "mani": [32, 396, 461, 588, 988, 1043, 1307, 1313, 1315, 1320, 1322], "outlin": [32, 396, 528, 588, 988, 1110, 1229, 1230, 1320], "To": [32, 45, 61, 90, 197, 199, 200, 201, 202, 203, 204, 396, 397, 399, 588, 604, 620, 649, 739, 786, 788, 789, 790, 791, 792, 793, 988, 989, 991, 1125, 1139, 1168, 1263, 1307, 1310, 1313, 1315, 1319, 1320, 1322], "control": [32, 44, 137, 152, 153, 160, 163, 394, 396, 397, 447, 525, 528, 532, 588, 602, 725, 742, 744, 751, 754, 986, 988, 989, 1028, 1107, 1110, 1114, 1313], "how": [32, 61, 90, 394, 396, 397, 461, 504, 588, 620, 649, 986, 988, 989, 1043, 1086, 1139, 1168, 1272, 1273, 1281, 1282, 1283, 1307, 1310, 1313, 1314, 1322], "_zlib": [32, 396, 397, 588, 988, 989], "_deflatelevel": [32, 396, 397, 588, 988, 989], "_shuffl": [32, 396, 397, 588, 988, 989], "_fletcher32": [32, 396, 397, 588, 988, 989], "_contingu": [32, 396, 397, 588, 988, 989], "_chunksiz": [32, 396, 397, 588, 988, 989], "_endian": [32, 396, 397, 588, 988, 989], "_least_significant_digit": [32, 396, 397, 588, 988, 989], "see": [32, 61, 90, 118, 137, 169, 221, 235, 248, 252, 254, 256, 264, 268, 270, 288, 301, 321, 333, 338, 358, 370, 375, 388, 396, 397, 447, 501, 504, 523, 537, 588, 620, 649, 677, 686, 725, 758, 811, 825, 838, 842, 844, 846, 854, 858, 860, 878, 891, 911, 923, 928, 948, 960, 965, 980, 988, 989, 1028, 1029, 1083, 1086, 1105, 1119, 1139, 1168, 1272, 1273, 1281, 1302, 1309, 1311, 1313, 1314, 1315, 1320], "document": [32, 137, 248, 252, 254, 256, 264, 268, 270, 333, 370, 391, 396, 397, 588, 725, 838, 842, 844, 846, 854, 858, 860, 923, 960, 983, 988, 989, 1257, 1264, 1307, 1313, 1320], "detail": [32, 118, 137, 169, 252, 264, 333, 370, 396, 397, 445, 447, 501, 588, 677, 686, 725, 758, 842, 854, 923, 960, 988, 989, 1026, 1028, 1083, 1302, 1307, 1317, 1320], "one": [32, 40, 45, 53, 54, 59, 61, 88, 90, 135, 136, 145, 159, 173, 175, 182, 189, 194, 197, 201, 396, 397, 399, 445, 446, 447, 450, 494, 503, 504, 513, 514, 528, 529, 530, 532, 533, 534, 587, 588, 598, 604, 612, 613, 618, 620, 647, 649, 690, 692, 699, 706, 711, 723, 724, 733, 739, 750, 762, 764, 771, 778, 783, 786, 790, 988, 989, 991, 1018, 1026, 1027, 1028, 1031, 1034, 1076, 1085, 1086, 1095, 1096, 1110, 1111, 1112, 1114, 1115, 1116, 1125, 1133, 1134, 1137, 1139, 1166, 1168, 1219, 1222, 1223, 1240, 1250, 1251, 1257, 1265, 1270, 1275, 1276, 1281, 1307, 1310, 1315, 1316, 1317, 1320, 1322], "netcdf4_class": [32, 54, 396, 397, 588, 613, 988, 989, 1134], "netcdf3_class": [32, 54, 396, 397, 588, 613, 988, 989, 1134], "netcdf3_64bit": [32, 54, 396, 397, 588, 613, 988, 989, 1134], "non": [32, 120, 122, 123, 139, 394, 396, 501, 528, 530, 543, 588, 679, 681, 682, 727, 986, 988, 1083, 1110, 1112, 1302], "zero": [32, 396, 501, 518, 524, 528, 557, 588, 969, 988, 1083, 1100, 1106, 1110, 1250, 1257, 1265, 1302, 1310, 1314], "base_tim": [32, 54, 396, 397, 588, 613, 988, 989, 1134], "time_offset": [32, 54, 396, 397, 588, 613, 988, 989, 1134], "phidp_field": [33, 126, 127, 128, 133, 141, 143, 144, 150, 151, 154, 155, 156, 158, 159, 526, 527, 528, 529, 530, 539, 590, 714, 715, 716, 721, 729, 731, 732, 740, 741, 745, 746, 747, 749, 750, 1108, 1109, 1110, 1111, 1112, 1121, 1267, 1303, 1316], "phidp_texture_field": [33, 539, 590, 1121], "textur": [33, 200, 452, 539, 590, 789, 1033, 1121, 1214, 1239, 1262, 1307, 1311, 1316], "real": [33, 137, 539, 590, 725, 1121, 1270, 1280, 1302, 1307, 1320, 1322], "part": [33, 506, 539, 590, 1088, 1121, 1272, 1307, 1309, 1310, 1311, 1313, 1314, 1317], "shift": [33, 133, 141, 150, 151, 154, 158, 159, 205, 272, 305, 342, 503, 524, 526, 527, 529, 539, 590, 721, 729, 740, 741, 745, 749, 750, 795, 862, 895, 932, 1085, 1106, 1108, 1109, 1111, 1121, 1311, 1316], "texture_field": [33, 539, 590, 1121], "gourlei": [33, 132, 154, 155, 156, 539, 590, 720, 745, 746, 747, 1121], "j": [33, 121, 124, 139, 150, 151, 152, 153, 160, 163, 501, 504, 525, 529, 530, 532, 535, 537, 539, 540, 541, 590, 680, 683, 727, 740, 741, 742, 744, 751, 754, 1034, 1083, 1086, 1107, 1111, 1112, 1114, 1117, 1119, 1121, 1122, 1123, 1267, 1268, 1277, 1278, 1285, 1286, 1288, 1290, 1294, 1297, 1302, 1307, 1320], "p": [33, 35, 37, 43, 117, 121, 124, 152, 153, 160, 163, 445, 456, 461, 470, 474, 475, 483, 489, 496, 506, 535, 539, 590, 593, 595, 601, 676, 680, 683, 742, 744, 751, 754, 1026, 1038, 1043, 1052, 1056, 1057, 1065, 1071, 1078, 1088, 1117, 1121, 1195, 1229, 1307, 1320], "tabari": [33, 539, 590, 1121], "parent": [33, 539, 590, 1121], "du": [33, 539, 590, 1121], "chatelet": [33, 539, 590, 1121], "fuzzi": [33, 539, 590, 1121], "logic": [33, 173, 175, 182, 189, 194, 539, 590, 690, 692, 699, 706, 711, 762, 764, 771, 778, 783, 1121], "algorithm": [33, 135, 136, 137, 138, 139, 148, 154, 155, 169, 429, 445, 447, 456, 461, 475, 476, 501, 504, 505, 528, 532, 537, 539, 590, 686, 723, 724, 725, 726, 727, 737, 745, 746, 758, 1026, 1028, 1038, 1043, 1057, 1058, 1083, 1086, 1087, 1110, 1114, 1119, 1121, 1266, 1270, 1307, 1315, 1316, 1320], "separ": [33, 149, 518, 523, 537, 539, 540, 590, 738, 1100, 1105, 1119, 1121, 1122, 1229, 1240, 1272, 1284, 1315, 1322], "precipit": [33, 133, 136, 141, 158, 159, 483, 496, 525, 539, 590, 721, 724, 729, 749, 750, 1065, 1078, 1107, 1121, 1240, 1276, 1284, 1302, 1315, 1316, 1320], "nonprecipit": [33, 539, 590, 1121], "echo": [33, 501, 518, 525, 539, 590, 1083, 1100, 1107, 1121, 1302, 1314, 1315], "polarimetr": [33, 126, 127, 128, 132, 150, 151, 466, 472, 473, 474, 483, 496, 504, 507, 525, 532, 535, 536, 539, 590, 714, 715, 716, 720, 740, 741, 1048, 1054, 1055, 1056, 1065, 1078, 1086, 1089, 1107, 1114, 1117, 1118, 1121, 1267, 1316], "observ": [33, 117, 135, 136, 152, 153, 155, 160, 163, 461, 483, 496, 501, 528, 534, 539, 590, 676, 723, 724, 742, 744, 746, 751, 754, 1043, 1065, 1078, 1083, 1110, 1116, 1121, 1221, 1302, 1316], "journal": [33, 137, 139, 445, 456, 470, 475, 476, 489, 506, 518, 539, 590, 725, 727, 1026, 1038, 1052, 1057, 1058, 1071, 1088, 1100, 1121, 1229, 1230, 1307, 1320], "atmospher": [33, 59, 88, 117, 118, 137, 138, 152, 163, 447, 450, 476, 506, 518, 531, 539, 590, 618, 647, 676, 677, 725, 726, 742, 754, 1028, 1031, 1058, 1088, 1100, 1113, 1121, 1137, 1166, 1230, 1272, 1309, 1310, 1311, 1313, 1314, 1317, 1320], "ocean": [33, 137, 150, 151, 476, 501, 506, 518, 535, 539, 590, 725, 740, 741, 1058, 1083, 1088, 1100, 1117, 1121, 1230, 1272, 1302], "technologi": [33, 137, 476, 506, 518, 539, 590, 725, 1058, 1088, 1100, 1121, 1230], "24": [33, 539, 590, 1121, 1273, 1315], "8": [33, 76, 105, 125, 126, 137, 150, 154, 155, 200, 249, 251, 252, 253, 255, 257, 267, 269, 271, 539, 590, 635, 664, 684, 714, 725, 740, 745, 746, 789, 839, 841, 842, 843, 845, 847, 857, 859, 861, 1121, 1154, 1183, 1230, 1264, 1276, 1282, 1292, 1296, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1320], "1439": [33, 539, 590, 1121], "1451": [33, 539, 590, 1121], "class": [34, 45, 55, 59, 88, 169, 198, 205, 239, 251, 252, 258, 272, 305, 333, 342, 401, 415, 429, 446, 461, 504, 505, 518, 525, 543, 591, 592, 604, 614, 618, 647, 685, 686, 757, 758, 787, 794, 795, 829, 841, 842, 848, 862, 895, 923, 932, 993, 994, 1007, 1017, 1018, 1019, 1021, 1027, 1043, 1086, 1087, 1100, 1107, 1124, 1125, 1135, 1137, 1166, 1264, 1265, 1307, 1313, 1314, 1316, 1320], "filetyp": [34, 40, 592, 598], "need": [34, 59, 68, 70, 71, 88, 97, 99, 100, 135, 136, 167, 398, 411, 501, 592, 618, 627, 629, 630, 647, 656, 658, 659, 723, 724, 990, 1083, 1137, 1146, 1148, 1149, 1166, 1175, 1177, 1178, 1232, 1258, 1272, 1276, 1281, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1316, 1317, 1319, 1320, 1322], "being": [34, 36, 137, 197, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 447, 530, 592, 594, 725, 786, 812, 814, 819, 822, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 1028, 1034, 1112, 1243, 1244, 1265, 1293, 1319], "string": [34, 45, 59, 88, 224, 227, 228, 232, 235, 250, 252, 266, 291, 294, 295, 299, 301, 324, 327, 328, 329, 330, 331, 334, 336, 338, 361, 364, 365, 366, 367, 368, 371, 373, 375, 379, 428, 446, 447, 467, 486, 517, 518, 523, 529, 530, 535, 540, 541, 544, 592, 604, 618, 647, 814, 817, 818, 822, 825, 840, 842, 856, 881, 884, 885, 889, 891, 914, 917, 918, 919, 920, 921, 924, 926, 928, 951, 954, 955, 956, 957, 958, 961, 963, 965, 971, 1027, 1028, 1049, 1068, 1099, 1100, 1105, 1111, 1112, 1117, 1122, 1123, 1125, 1137, 1166, 1215, 1216, 1281, 1320], "initi": [34, 49, 50, 51, 55, 77, 78, 79, 80, 106, 107, 108, 109, 137, 138, 169, 205, 272, 305, 342, 401, 536, 592, 608, 609, 610, 614, 636, 637, 638, 639, 665, 666, 667, 668, 686, 725, 726, 758, 795, 862, 895, 932, 994, 1118, 1129, 1130, 1131, 1155, 1156, 1157, 1158, 1184, 1185, 1186, 1187, 1283], "dic": [37, 45, 59, 60, 88, 89, 401, 414, 447, 595, 604, 618, 619, 647, 648, 994, 1028, 1125, 1137, 1138, 1166, 1167], "colormap": [38, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 596, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 990, 1270, 1280, 1284, 1303, 1316], "select": [39, 64, 73, 93, 102, 139, 466, 474, 483, 496, 499, 513, 514, 532, 534, 536, 597, 623, 632, 652, 661, 727, 1048, 1056, 1065, 1078, 1081, 1095, 1096, 1114, 1116, 1118, 1142, 1151, 1171, 1180], "limit": [39, 137, 138, 150, 151, 197, 199, 200, 201, 202, 203, 204, 224, 238, 264, 291, 304, 324, 341, 361, 378, 388, 399, 448, 522, 528, 532, 597, 725, 726, 739, 740, 741, 786, 788, 789, 790, 791, 792, 793, 814, 828, 854, 881, 894, 914, 931, 951, 968, 980, 991, 1104, 1110, 1114, 1259, 1260, 1277, 1278, 1282, 1307, 1313, 1316], "relat": [39, 128, 154, 155, 156, 399, 501, 507, 510, 511, 512, 529, 537, 597, 716, 745, 746, 747, 991, 1083, 1089, 1092, 1093, 1094, 1111, 1119, 1302, 1307, 1316, 1319, 1320], "instac": [39, 597], "nyquist": [39, 72, 101, 137, 138, 139, 452, 597, 631, 660, 725, 726, 727, 1033, 1150, 1179, 1214, 1311, 1315, 1317], "consid": [39, 126, 133, 135, 136, 140, 141, 142, 143, 144, 145, 147, 148, 154, 155, 156, 158, 159, 470, 475, 476, 489, 501, 513, 514, 522, 526, 527, 532, 533, 534, 597, 714, 721, 723, 724, 728, 729, 730, 731, 732, 733, 736, 737, 745, 746, 747, 749, 750, 969, 1052, 1057, 1058, 1071, 1083, 1095, 1096, 1104, 1108, 1109, 1114, 1115, 1116, 1219, 1222, 1223, 1229, 1230, 1245, 1302], "vmin": [39, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 597, 812, 814, 819, 822, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 990, 1267, 1268, 1272, 1273, 1276, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1310, 1311, 1313, 1314, 1315, 1316], "vmax": [39, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 597, 812, 814, 819, 822, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 990, 1267, 1268, 1272, 1273, 1276, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1310, 1311, 1313, 1314, 1315, 1316], "2": [39, 117, 121, 125, 139, 140, 144, 145, 147, 148, 149, 152, 154, 155, 163, 200, 211, 222, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 249, 250, 251, 255, 257, 266, 267, 269, 271, 278, 289, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 311, 322, 324, 327, 328, 332, 335, 336, 337, 338, 339, 341, 348, 359, 361, 364, 365, 369, 370, 372, 373, 374, 375, 376, 378, 390, 391, 392, 394, 437, 445, 447, 456, 457, 475, 483, 498, 501, 518, 528, 534, 540, 597, 676, 680, 684, 727, 728, 732, 733, 736, 737, 738, 742, 745, 746, 754, 789, 801, 812, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 839, 840, 841, 845, 847, 856, 857, 859, 861, 868, 879, 881, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 901, 912, 914, 917, 918, 922, 925, 926, 927, 928, 929, 931, 938, 949, 951, 954, 955, 959, 960, 962, 963, 964, 965, 966, 968, 982, 983, 984, 986, 1002, 1013, 1018, 1026, 1028, 1029, 1038, 1039, 1057, 1065, 1080, 1083, 1100, 1110, 1116, 1122, 1197, 1215, 1216, 1230, 1240, 1242, 1269, 1274, 1276, 1282, 1283, 1289, 1292, 1293, 1296, 1300, 1302, 1304, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1320], "tuplet": [39, 597], "minimun": [39, 597], "maximun": [39, 597], "teoric": [39, 597], "copi": [40, 44, 45, 61, 62, 64, 65, 66, 68, 90, 91, 93, 94, 95, 97, 183, 184, 401, 447, 598, 602, 604, 620, 621, 623, 624, 625, 627, 649, 650, 652, 653, 654, 656, 700, 701, 772, 773, 994, 1028, 1125, 1139, 1140, 1142, 1143, 1144, 1146, 1168, 1169, 1171, 1172, 1173, 1175, 1263, 1310], "field_map": [40, 598], "anoth": [40, 466, 474, 483, 496, 499, 598, 1018, 1048, 1056, 1065, 1078, 1081, 1240, 1276, 1309, 1314, 1316, 1319, 1322], "empti": [43, 408, 437, 529, 530, 601, 1002, 1013, 1111, 1112, 1195, 1197, 1200, 1265, 1309, 1315, 1316], "exist": [43, 46, 60, 61, 63, 89, 90, 92, 145, 173, 175, 182, 189, 194, 197, 200, 201, 394, 528, 601, 605, 619, 620, 622, 648, 649, 651, 690, 692, 699, 706, 711, 733, 739, 762, 764, 771, 778, 783, 786, 789, 790, 986, 1110, 1126, 1135, 1138, 1139, 1141, 1167, 1168, 1170, 1195, 1263, 1267, 1307, 1309], "self": [44, 150, 151, 154, 155, 156, 404, 407, 408, 409, 410, 413, 417, 419, 420, 424, 425, 602, 740, 741, 745, 746, 747, 1310, 1313, 1320], "descrip": [44, 602], "default_config": [44, 602], "These": [44, 137, 169, 264, 398, 447, 543, 602, 686, 725, 758, 854, 990, 1028, 1246, 1272, 1281, 1302, 1307, 1314, 1319, 1320], "modifi": [44, 59, 88, 140, 602, 618, 647, 728, 1137, 1166, 1270, 1280, 1320], "environment": [44, 602, 1307, 1319], "pyart_config": [44, 602, 1316], "execut": [44, 602, 1269, 1274, 1279, 1298, 1305, 1306, 1318], "full": [44, 76, 105, 140, 145, 394, 602, 635, 664, 728, 733, 986, 1154, 1183, 1284, 1302, 1307], "permiss": [44, 602], "mai": [44, 137, 138, 173, 175, 182, 189, 194, 305, 342, 390, 392, 398, 401, 415, 447, 530, 532, 543, 602, 690, 692, 699, 706, 711, 725, 726, 762, 764, 771, 778, 783, 895, 932, 982, 984, 990, 994, 1028, 1112, 1114, 1209, 1302, 1307], "secur": [44, 602], "do": [44, 59, 88, 125, 137, 197, 200, 201, 398, 399, 516, 602, 618, 647, 684, 725, 739, 786, 789, 790, 990, 991, 1098, 1137, 1166, 1273, 1302, 1309, 1310, 1311, 1313, 1314, 1315, 1319, 1320, 1322], "un": [44, 602], "trust": [44, 602], "method": [44, 45, 61, 68, 70, 71, 90, 97, 99, 100, 126, 128, 133, 141, 150, 151, 154, 156, 169, 173, 175, 182, 189, 194, 234, 399, 400, 401, 415, 440, 446, 470, 489, 503, 517, 518, 526, 527, 528, 529, 530, 540, 602, 604, 620, 627, 629, 630, 649, 656, 658, 659, 686, 690, 692, 699, 706, 711, 714, 716, 721, 729, 740, 741, 745, 747, 758, 762, 764, 771, 778, 783, 824, 991, 992, 994, 1005, 1007, 1015, 1027, 1052, 1071, 1085, 1099, 1100, 1108, 1109, 1110, 1111, 1112, 1122, 1125, 1139, 1146, 1148, 1149, 1168, 1175, 1177, 1178, 1229, 1230, 1264, 1267, 1287, 1307, 1314, 1315, 1316, 1320], "chang": [44, 45, 59, 61, 65, 66, 68, 70, 88, 90, 94, 95, 97, 99, 137, 168, 169, 393, 401, 602, 604, 618, 620, 624, 625, 627, 629, 647, 649, 653, 654, 656, 658, 686, 725, 758, 985, 994, 1125, 1135, 1137, 1139, 1143, 1144, 1146, 1148, 1166, 1168, 1172, 1173, 1175, 1177, 1209, 1265, 1302, 1310, 1313, 1317, 1319, 1320], "home": [44, 602, 1320, 1322], "make": [44, 45, 504, 536, 602, 604, 1086, 1118, 1125, 1197, 1201, 1203, 1204, 1265, 1276, 1283, 1292, 1302, 1309, 1310, 1315, 1319, 1320, 1322], "adjust": [44, 121, 238, 304, 341, 378, 602, 680, 828, 894, 931, 968, 1281, 1284, 1292], "login": [44, 602], "shell": [44, 602], "session": [44, 602], "modif": [44, 61, 90, 602, 620, 649, 1139, 1168], "last": [44, 59, 88, 137, 146, 222, 223, 229, 233, 234, 235, 247, 249, 255, 257, 258, 265, 267, 269, 271, 289, 290, 296, 300, 301, 322, 323, 332, 333, 337, 338, 342, 359, 360, 369, 370, 374, 375, 602, 618, 647, 725, 735, 812, 813, 819, 823, 824, 825, 837, 839, 845, 847, 848, 855, 857, 859, 861, 879, 880, 886, 890, 891, 912, 913, 922, 923, 927, 928, 932, 949, 950, 959, 960, 964, 965, 1137, 1166, 1230, 1277, 1317], "origin_latitud": [45, 604, 1125], "origin_longitud": [45, 604, 1125], "origin_altitud": [45, 604, 1125], "z": [45, 51, 53, 59, 71, 79, 88, 100, 108, 117, 118, 119, 126, 128, 150, 151, 220, 287, 320, 357, 388, 398, 399, 442, 443, 444, 445, 446, 447, 501, 507, 510, 511, 512, 523, 604, 610, 612, 618, 630, 638, 647, 659, 667, 676, 677, 678, 714, 716, 740, 741, 810, 877, 910, 947, 980, 990, 991, 1022, 1023, 1024, 1026, 1027, 1028, 1034, 1083, 1089, 1092, 1093, 1094, 1105, 1125, 1131, 1133, 1137, 1149, 1157, 1166, 1178, 1186, 1197, 1236, 1267, 1290, 1292, 1293, 1302, 1307, 1310, 1316, 1320], "radar_latitud": [45, 604, 1125, 1232, 1258], "radar_longitud": [45, 604, 1125, 1232, 1258], "radar_altitud": [45, 522, 604, 1104, 1125], "radar_tim": [45, 604, 1125], "radar_nam": [45, 604, 1125], "rectilinear": [45, 604, 1125], "cartesian": [45, 47, 53, 59, 88, 117, 118, 119, 120, 121, 122, 123, 124, 388, 445, 446, 447, 504, 518, 573, 604, 606, 612, 618, 647, 676, 677, 678, 679, 680, 681, 682, 683, 980, 1017, 1018, 1026, 1027, 1028, 1029, 1086, 1100, 1125, 1127, 1133, 1137, 1166, 1265, 1270, 1275, 1282, 1307, 1308, 1315], "section": [45, 59, 61, 88, 90, 216, 218, 222, 236, 283, 285, 289, 302, 316, 318, 322, 339, 353, 355, 359, 376, 447, 458, 477, 478, 518, 604, 618, 620, 647, 649, 806, 808, 812, 826, 873, 875, 879, 892, 906, 908, 912, 929, 943, 945, 949, 966, 1028, 1040, 1059, 1060, 1100, 1125, 1137, 1139, 1166, 1168, 1222, 1223, 1235, 1265, 1270, 1280, 1302, 1307, 1315], "legaci": [45, 604, 1034, 1125], "befor": [45, 70, 99, 137, 145, 151, 168, 461, 466, 474, 483, 496, 499, 501, 532, 542, 604, 629, 658, 725, 733, 741, 1018, 1043, 1048, 1056, 1065, 1078, 1081, 1083, 1114, 1125, 1148, 1177, 1276, 1302, 1307, 1311, 1316, 1317, 1320], "from_legacy_paramet": [45, 604, 1125], "ax": [45, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 249, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 369, 370, 372, 373, 374, 375, 376, 377, 378, 442, 443, 444, 501, 524, 537, 604, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 839, 840, 841, 842, 843, 845, 847, 854, 855, 856, 857, 859, 861, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 955, 959, 960, 962, 963, 964, 965, 966, 967, 968, 1022, 1023, 1024, 1083, 1106, 1119, 1125, 1267, 1268, 1272, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1296, 1300, 1301, 1302, 1303, 1304, 1311, 1315, 1316], "moment": [45, 53, 59, 88, 132, 137, 138, 139, 200, 201, 390, 391, 392, 447, 557, 558, 604, 612, 618, 647, 720, 725, 726, 727, 739, 789, 790, 982, 983, 984, 1028, 1125, 1133, 1137, 1166, 1229, 1280, 1307, 1314, 1316], "describ": [45, 59, 88, 129, 197, 198, 199, 200, 201, 202, 203, 204, 250, 266, 470, 476, 489, 604, 618, 647, 717, 739, 786, 787, 788, 789, 790, 791, 792, 793, 840, 856, 1052, 1058, 1071, 1125, 1137, 1166, 1302], "geograph": [45, 59, 70, 88, 99, 120, 121, 122, 123, 124, 125, 305, 333, 342, 370, 397, 447, 604, 618, 629, 647, 658, 679, 680, 681, 682, 683, 684, 895, 923, 932, 960, 989, 1028, 1125, 1137, 1148, 1166, 1177, 1307], "axi": [45, 53, 59, 88, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 247, 249, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 322, 323, 324, 325, 326, 327, 328, 332, 333, 335, 336, 337, 338, 339, 341, 359, 360, 361, 362, 363, 364, 365, 369, 370, 372, 373, 374, 375, 376, 378, 388, 398, 604, 612, 618, 647, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 837, 839, 840, 841, 842, 843, 845, 847, 854, 855, 856, 857, 859, 861, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 912, 913, 914, 915, 916, 917, 918, 922, 923, 925, 926, 927, 928, 929, 931, 949, 950, 951, 952, 953, 954, 955, 959, 960, 962, 963, 964, 965, 966, 968, 980, 990, 1125, 1133, 1137, 1166, 1219, 1282, 1293, 1302, 1304, 1315, 1316, 1317], "dimension": [45, 53, 137, 139, 445, 537, 604, 612, 725, 727, 1026, 1119, 1125, 1133, 1276, 1302], "space": [45, 59, 88, 122, 224, 291, 324, 361, 399, 447, 501, 515, 523, 604, 618, 647, 681, 814, 881, 914, 951, 991, 1028, 1083, 1097, 1105, 1125, 1137, 1166, 1302, 1309], "along": [45, 138, 145, 236, 248, 249, 254, 255, 256, 257, 268, 269, 270, 271, 302, 339, 376, 497, 604, 726, 733, 826, 838, 839, 844, 845, 846, 847, 858, 859, 860, 861, 892, 929, 966, 1079, 1125, 1219, 1222, 1223, 1233, 1234, 1262, 1302, 1315], "three": [45, 139, 197, 201, 398, 537, 604, 727, 739, 786, 790, 990, 1119, 1125, 1302, 1316], "repeat": [45, 518, 604, 1100, 1125], "throughout": [45, 604, 1125], "transform": [45, 59, 88, 120, 121, 122, 123, 124, 125, 227, 234, 294, 305, 327, 342, 364, 370, 397, 447, 448, 461, 467, 486, 525, 538, 604, 618, 647, 679, 680, 681, 682, 683, 684, 817, 824, 884, 895, 917, 932, 954, 960, 989, 1028, 1043, 1049, 1068, 1107, 1120, 1125, 1137, 1166, 1281, 1302], "pyart_aeqd": [45, 52, 59, 88, 120, 122, 123, 604, 611, 618, 647, 679, 681, 682, 1125, 1132, 1137, 1166], "nativ": [45, 59, 88, 120, 122, 123, 381, 447, 604, 618, 647, 679, 681, 682, 973, 1028, 1034, 1125, 1137, 1166], "azimuth": [45, 59, 65, 66, 69, 71, 81, 88, 94, 95, 98, 100, 110, 117, 118, 119, 120, 121, 122, 123, 124, 135, 136, 147, 148, 149, 161, 162, 164, 205, 206, 222, 224, 227, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 272, 273, 289, 291, 294, 296, 300, 301, 305, 306, 322, 324, 327, 332, 333, 337, 338, 342, 343, 359, 361, 364, 369, 370, 374, 375, 394, 398, 466, 496, 497, 513, 514, 516, 518, 530, 532, 540, 541, 557, 604, 618, 624, 625, 628, 630, 640, 647, 653, 654, 657, 659, 669, 676, 677, 678, 679, 680, 681, 682, 683, 723, 724, 734, 736, 737, 738, 743, 752, 753, 755, 795, 796, 812, 814, 817, 819, 823, 824, 825, 839, 845, 847, 857, 859, 861, 862, 863, 879, 881, 884, 886, 890, 891, 895, 896, 912, 914, 917, 922, 923, 927, 928, 932, 933, 949, 951, 954, 959, 960, 964, 965, 986, 990, 1034, 1048, 1078, 1079, 1095, 1096, 1098, 1100, 1112, 1114, 1122, 1123, 1125, 1137, 1143, 1144, 1147, 1149, 1159, 1166, 1172, 1173, 1176, 1178, 1188, 1217, 1222, 1223, 1231, 1232, 1233, 1238, 1242, 1250, 1263, 1295, 1297, 1309, 1317, 1320], "equidist": [45, 59, 88, 120, 121, 122, 123, 124, 227, 294, 327, 364, 370, 398, 447, 604, 618, 647, 679, 680, 681, 682, 683, 817, 884, 917, 954, 960, 990, 1028, 1125, 1137, 1166], "pyproj": [45, 59, 88, 120, 122, 123, 604, 618, 647, 679, 681, 682, 1125, 1137, 1166, 1319], "projparam": [45, 48, 59, 88, 120, 122, 123, 604, 607, 618, 647, 679, 681, 682, 1125, 1128, 1137, 1166], "special": [45, 59, 88, 604, 618, 647, 1125, 1137, 1166, 1265], "_include_lon_0_lat_0": [45, 59, 88, 604, 618, 647, 1125, 1137, 1166], "interpret": [45, 59, 88, 138, 139, 397, 604, 618, 647, 726, 727, 989, 1125, 1137, 1166, 1243, 1244], "requir": [45, 59, 88, 120, 122, 123, 137, 140, 145, 394, 398, 447, 453, 454, 455, 456, 462, 463, 464, 465, 469, 470, 472, 473, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 500, 503, 540, 543, 604, 618, 647, 679, 681, 682, 725, 728, 733, 986, 990, 1028, 1035, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1051, 1052, 1054, 1055, 1061, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1082, 1085, 1122, 1125, 1137, 1166, 1229, 1273, 1307, 1315, 1316, 1320, 1322], "get_projparam": [45, 604, 1125], "evalu": [45, 401, 411, 426, 431, 604, 994, 996, 1125], "up": [45, 59, 88, 127, 128, 135, 136, 154, 155, 156, 173, 175, 182, 189, 194, 483, 507, 510, 511, 531, 534, 604, 618, 647, 690, 692, 699, 706, 711, 715, 716, 723, 724, 745, 746, 747, 762, 764, 771, 778, 783, 1034, 1065, 1089, 1092, 1093, 1113, 1116, 1125, 1137, 1166, 1214, 1246, 1248, 1249, 1302, 1311, 1317, 1321], "collect": [45, 182, 194, 383, 390, 391, 392, 394, 446, 447, 604, 699, 711, 771, 783, 975, 982, 983, 984, 986, 1017, 1027, 1028, 1125, 1272, 1286, 1320, 1321, 1322], "nradar": [45, 604, 1125], "whose": [45, 393, 444, 604, 985, 1024, 1125], "wa": [45, 70, 71, 99, 100, 138, 139, 168, 182, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 604, 629, 630, 658, 659, 699, 726, 727, 771, 812, 819, 823, 824, 825, 826, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 1125, 1148, 1149, 1177, 1178, 1240, 1265, 1307, 1316, 1320, 1322], "projection_proj": [45, 604, 1125], "instanc": [45, 52, 56, 62, 91, 137, 138, 139, 222, 229, 232, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 399, 400, 504, 604, 611, 615, 621, 650, 725, 726, 727, 812, 819, 822, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 991, 992, 1029, 1034, 1086, 1125, 1132, 1140, 1169, 1240, 1250, 1251, 1257], "valueerror": [45, 46, 52, 60, 61, 89, 90, 604, 605, 611, 619, 620, 648, 649, 1125, 1126, 1132, 1138, 1139, 1167, 1168], "point_z": [45, 397, 604, 989, 1125], "point_x": [45, 397, 604, 989, 1125], "point_i": [45, 397, 604, 989, 1125], "func": [45, 168, 604, 1125], "init_point_x_y_z": [45, 604, 1125], "reset": [45, 50, 51, 59, 70, 78, 79, 80, 88, 99, 107, 108, 109, 604, 609, 610, 618, 629, 637, 638, 639, 647, 658, 666, 667, 668, 1125, 1130, 1131, 1137, 1148, 1156, 1157, 1158, 1166, 1177, 1185, 1186, 1187, 1314], "point_latitud": [45, 397, 604, 989, 1125], "point_longitud": [45, 397, 604, 989, 1125], "perform": [45, 59, 70, 71, 72, 88, 99, 100, 101, 132, 137, 138, 139, 145, 173, 175, 182, 189, 194, 222, 227, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 294, 296, 299, 300, 301, 302, 322, 327, 332, 333, 336, 337, 338, 339, 342, 359, 364, 369, 370, 373, 374, 375, 376, 390, 393, 398, 461, 466, 474, 483, 496, 503, 528, 604, 618, 629, 630, 631, 647, 658, 659, 660, 690, 692, 699, 706, 711, 720, 725, 726, 727, 733, 762, 764, 771, 778, 783, 812, 817, 819, 822, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 884, 886, 889, 890, 891, 892, 912, 917, 922, 923, 926, 927, 928, 929, 932, 949, 954, 959, 960, 963, 964, 965, 966, 982, 985, 990, 1043, 1048, 1056, 1065, 1078, 1085, 1110, 1125, 1137, 1148, 1149, 1150, 1166, 1177, 1178, 1179, 1263, 1266, 1267, 1268, 1270, 1277, 1278, 1282, 1307, 1315], "invers": [45, 59, 88, 152, 163, 467, 540, 604, 618, 647, 742, 754, 1049, 1122, 1125, 1137, 1166], "rel": [45, 59, 88, 127, 143, 146, 154, 155, 156, 199, 234, 331, 368, 448, 461, 536, 538, 604, 618, 647, 715, 731, 735, 745, 746, 747, 788, 824, 921, 958, 1043, 1118, 1120, 1125, 1137, 1166, 1317, 1320], "init_point_longitude_latitud": [45, 604, 1125], "point_altitud": [45, 49, 397, 604, 608, 989, 1125, 1129], "init_point_altitud": [45, 604, 1125], "init": [45, 239, 258, 401, 414, 604, 829, 848, 994, 1125, 1232], "field_dict": [46, 605, 1126], "replace_exist": [46, 60, 61, 62, 89, 90, 91, 605, 619, 620, 621, 648, 649, 650, 1126, 1138, 1139, 1140, 1167, 1168, 1169, 1302, 1310, 1311, 1320], "overwrit": [46, 605, 1126], "alreadi": [46, 60, 61, 89, 90, 152, 526, 527, 605, 619, 620, 648, 649, 742, 1108, 1109, 1126, 1138, 1139, 1167, 1168], "edg": [47, 71, 100, 118, 122, 137, 138, 139, 140, 145, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 524, 530, 556, 606, 630, 659, 677, 681, 725, 726, 727, 728, 733, 812, 819, 823, 824, 825, 839, 845, 847, 857, 859, 861, 879, 886, 890, 891, 912, 922, 923, 927, 928, 949, 959, 960, 964, 965, 1106, 1112, 1127, 1149, 1178, 1292, 1293, 1302, 1307], "height": [47, 53, 55, 56, 127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 199, 251, 252, 253, 267, 333, 370, 447, 448, 449, 451, 461, 466, 474, 483, 496, 499, 501, 502, 504, 517, 518, 521, 525, 531, 532, 533, 534, 536, 537, 538, 540, 541, 606, 612, 614, 615, 715, 716, 723, 724, 730, 731, 735, 745, 746, 747, 788, 841, 842, 843, 857, 923, 960, 1028, 1032, 1043, 1048, 1056, 1065, 1078, 1081, 1083, 1084, 1086, 1099, 1100, 1103, 1107, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1122, 1123, 1127, 1133, 1257, 1281, 1290, 1300, 1304, 1314, 1315, 1316, 1320], "determin": [47, 59, 88, 133, 137, 138, 139, 141, 158, 159, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 333, 370, 381, 390, 391, 394, 399, 400, 452, 461, 470, 475, 489, 501, 504, 506, 507, 508, 510, 511, 536, 537, 540, 606, 618, 647, 721, 725, 726, 727, 729, 749, 750, 839, 841, 842, 843, 845, 847, 854, 857, 859, 861, 923, 960, 969, 973, 982, 983, 986, 991, 992, 1033, 1043, 1052, 1057, 1071, 1083, 1086, 1088, 1089, 1090, 1092, 1093, 1118, 1119, 1122, 1127, 1137, 1166, 1229, 1245, 1257, 1261, 1302, 1320], "same": [47, 59, 61, 69, 70, 71, 88, 90, 98, 99, 100, 121, 124, 137, 175, 189, 234, 333, 388, 394, 398, 399, 400, 447, 450, 461, 501, 523, 531, 606, 618, 620, 628, 629, 630, 647, 649, 657, 658, 659, 680, 683, 692, 706, 725, 764, 778, 824, 923, 980, 986, 990, 991, 992, 1028, 1029, 1031, 1043, 1083, 1105, 1113, 1127, 1137, 1139, 1147, 1148, 1149, 1166, 1168, 1176, 1177, 1178, 1232, 1242, 1258, 1263, 1272, 1292, 1293, 1302, 1309, 1314, 1315, 1320, 1322], "layout": [47, 387, 606, 979, 1127], "interpol": [47, 71, 100, 118, 122, 222, 229, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 383, 390, 446, 447, 466, 474, 483, 496, 499, 504, 517, 530, 531, 532, 540, 606, 630, 659, 677, 681, 812, 819, 823, 824, 825, 826, 839, 845, 847, 857, 859, 861, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 975, 982, 1027, 1028, 1029, 1048, 1056, 1065, 1078, 1081, 1086, 1099, 1112, 1113, 1114, 1122, 1127, 1149, 1178, 1241, 1257, 1265, 1302, 1313, 1315, 1316, 1320], "extrapol": [47, 118, 122, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 606, 677, 681, 812, 819, 823, 824, 825, 839, 845, 847, 857, 859, 861, 879, 886, 890, 891, 912, 922, 923, 927, 928, 949, 959, 960, 964, 965, 1127], "boundari": [47, 118, 122, 145, 241, 242, 264, 370, 530, 606, 677, 681, 733, 831, 832, 854, 960, 1112, 1127, 1303, 1316], "center": [47, 59, 71, 88, 100, 117, 118, 119, 121, 122, 124, 138, 222, 227, 229, 233, 234, 235, 249, 250, 254, 255, 256, 257, 266, 267, 268, 269, 270, 271, 289, 294, 296, 300, 301, 305, 322, 327, 332, 333, 337, 338, 359, 364, 369, 370, 374, 375, 390, 392, 442, 443, 444, 466, 474, 483, 496, 499, 522, 606, 618, 630, 647, 659, 676, 677, 678, 680, 681, 683, 726, 812, 817, 819, 823, 824, 825, 839, 840, 844, 845, 846, 847, 856, 857, 858, 859, 860, 861, 879, 884, 886, 890, 891, 895, 912, 917, 922, 923, 927, 928, 949, 954, 959, 960, 964, 965, 982, 984, 1022, 1023, 1024, 1048, 1056, 1065, 1078, 1081, 1104, 1127, 1137, 1149, 1166, 1178, 1197, 1214, 1217, 1239, 1281, 1311, 1315, 1316, 1317], "2d": [47, 69, 70, 71, 98, 99, 100, 118, 146, 388, 398, 449, 461, 525, 530, 536, 606, 628, 629, 630, 657, 658, 659, 677, 734, 735, 743, 980, 990, 1029, 1043, 1107, 1112, 1118, 1127, 1147, 1148, 1149, 1176, 1177, 1178, 1214, 1239, 1276, 1317], "point_": [50, 51, 609, 610, 1130, 1131], "properti": [52, 57, 58, 183, 184, 540, 611, 616, 617, 700, 701, 772, 773, 1019, 1021, 1122, 1132, 1320], "xarrai": [53, 239, 251, 252, 253, 612, 829, 841, 842, 843, 1133, 1234, 1296, 1300, 1307, 1319], "arm_alt_lat_lon_vari": [54, 397, 613, 989, 1134], "speed": [55, 56, 252, 447, 518, 540, 541, 614, 615, 842, 1028, 1100, 1122, 1123, 1214, 1304, 1315, 1320], "direct": [55, 76, 105, 394, 454, 473, 503, 516, 518, 528, 540, 541, 614, 635, 664, 986, 1036, 1055, 1085, 1098, 1100, 1110, 1122, 1123, 1154, 1183, 1304, 1315, 1320], "horizont": [55, 56, 57, 58, 59, 88, 126, 131, 132, 134, 137, 222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 337, 338, 339, 359, 360, 361, 369, 374, 375, 376, 382, 383, 457, 463, 464, 465, 469, 481, 482, 494, 495, 500, 513, 514, 516, 534, 540, 614, 615, 616, 617, 618, 647, 714, 719, 720, 722, 725, 812, 813, 814, 819, 823, 824, 825, 826, 837, 839, 841, 843, 845, 847, 855, 857, 859, 861, 879, 880, 881, 886, 890, 891, 892, 912, 913, 914, 922, 927, 928, 929, 949, 950, 951, 959, 964, 965, 966, 974, 975, 1039, 1045, 1046, 1047, 1051, 1063, 1064, 1076, 1077, 1082, 1095, 1096, 1098, 1116, 1122, 1137, 1166, 1257, 1283, 1293, 1315, 1317, 1320], "wind": [55, 56, 57, 58, 137, 138, 382, 383, 513, 514, 515, 516, 540, 541, 614, 615, 616, 617, 725, 726, 974, 975, 1095, 1096, 1097, 1098, 1122, 1123, 1257, 1304, 1308, 1320], "1d": [55, 56, 118, 122, 146, 461, 502, 505, 525, 538, 544, 614, 615, 677, 681, 734, 735, 743, 1043, 1084, 1087, 1107, 1120, 1219, 1230, 1235, 1236, 1237, 1238, 1246, 1247, 1248, 1249, 1317], "were": [55, 56, 173, 175, 182, 540, 614, 615, 690, 692, 699, 762, 764, 771, 1122, 1248, 1265, 1316, 1320], "sampl": [55, 56, 149, 461, 470, 489, 502, 536, 538, 540, 541, 614, 615, 738, 1043, 1052, 1071, 1084, 1118, 1120, 1122, 1123, 1124, 1201, 1203, 1204, 1229, 1272, 1273, 1281, 1301, 1303, 1304, 1307, 1320], "per": [55, 56, 57, 58, 72, 88, 101, 137, 155, 447, 540, 614, 615, 616, 617, 631, 647, 660, 725, 746, 1028, 1122, 1150, 1166, 1179, 1198, 1199, 1200, 1320], "east": [55, 222, 233, 289, 300, 322, 337, 359, 374, 614, 812, 823, 879, 890, 912, 927, 949, 964, 1029, 1234, 1285, 1316], "u_wind": [55, 56, 540, 541, 614, 615, 1122, 1123, 1304, 1315, 1320], "compon": [55, 56, 57, 58, 515, 516, 614, 615, 616, 617, 1097, 1098, 1320], "v_wind": [55, 56, 540, 541, 614, 615, 1122, 1123, 1304, 1315, 1320], "classmethod": [56, 402, 429, 615], "_rang": [59, 88, 471, 618, 647, 1053, 1137, 1166], "scan_typ": [59, 88, 205, 221, 272, 288, 305, 321, 342, 358, 618, 647, 795, 811, 862, 878, 895, 911, 932, 948, 1137, 1166, 1317], "sweep_numb": [59, 88, 618, 647, 1137, 1166, 1290, 1309, 1317], "sweep_mod": [59, 88, 618, 647, 1137, 1166, 1309, 1317], "fixed_angl": [59, 88, 205, 272, 305, 342, 618, 647, 795, 862, 895, 932, 1137, 1166, 1250, 1290, 1291, 1295, 1309, 1317], "sweep_start_ray_index": [59, 88, 618, 647, 1137, 1166, 1309, 1317], "sweep_end_ray_index": [59, 88, 618, 647, 1137, 1166, 1309, 1317], "altitude_agl": [59, 88, 618, 647, 1137, 1166, 1317], "target_scan_r": [59, 88, 618, 647, 1137, 1166, 1317], "rays_are_index": [59, 88, 618, 647, 1137, 1166], "ray_angle_r": [59, 88, 618, 647, 1137, 1166], "scan_rat": [59, 88, 400, 618, 647, 992, 1137, 1166, 1317], "antenna_transit": [59, 70, 71, 88, 99, 100, 182, 194, 222, 229, 233, 234, 235, 236, 272, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 618, 629, 630, 647, 658, 659, 699, 711, 771, 783, 812, 819, 823, 824, 825, 826, 862, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 1137, 1148, 1149, 1166, 1177, 1178, 1317], "instrument_paramet": [59, 88, 137, 148, 400, 476, 478, 618, 647, 725, 737, 992, 1058, 1060, 1137, 1166, 1311, 1317], "radar_calibr": [59, 88, 470, 478, 489, 491, 492, 618, 647, 1052, 1060, 1071, 1073, 1074, 1137, 1166, 1317], "tilt": [59, 88, 205, 234, 333, 370, 535, 618, 647, 795, 824, 923, 960, 1117, 1137, 1166, 1273, 1289, 1296], "roll": [59, 88, 157, 205, 394, 618, 647, 748, 795, 986, 1137, 1166, 1256, 1262], "drift": [59, 88, 205, 618, 647, 795, 1137, 1166], "head": [59, 88, 205, 618, 647, 795, 1137, 1166], "pitch": [59, 88, 205, 618, 647, 795, 1137, 1166], "georefs_appli": [59, 88, 618, 647, 1137, 1166], "antenna": [59, 70, 71, 88, 99, 100, 117, 118, 119, 129, 135, 136, 146, 147, 148, 149, 152, 153, 160, 162, 163, 164, 182, 194, 199, 203, 222, 229, 233, 234, 235, 236, 272, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 457, 478, 484, 497, 518, 534, 618, 629, 630, 647, 658, 659, 676, 677, 678, 699, 711, 717, 723, 724, 735, 736, 737, 738, 742, 743, 744, 751, 753, 754, 755, 771, 783, 788, 792, 812, 819, 823, 824, 825, 826, 862, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 1034, 1039, 1060, 1066, 1079, 1100, 1116, 1137, 1148, 1149, 1166, 1177, 1178, 1250, 1265, 1266, 1270, 1275, 1276, 1277, 1278, 1307, 1313, 1317], "structur": [59, 88, 400, 537, 618, 647, 992, 1119, 1137, 1166, 1272, 1302, 1314], "under": [59, 88, 137, 138, 139, 447, 618, 647, 725, 726, 727, 1028, 1137, 1166, 1302, 1307, 1319, 1320], "sub": [59, 88, 618, 647, 1137, 1166], "meta_group": [59, 88, 618, 647, 1137, 1166, 1317], "instrument": [59, 88, 182, 194, 197, 200, 201, 400, 618, 647, 699, 711, 739, 771, 783, 786, 789, 790, 992, 1137, 1166, 1311, 1317], "volum": [59, 88, 137, 139, 140, 333, 370, 390, 391, 392, 400, 449, 466, 474, 483, 496, 497, 499, 502, 504, 515, 517, 522, 532, 534, 540, 541, 587, 618, 647, 725, 727, 728, 923, 960, 982, 983, 984, 992, 1018, 1048, 1056, 1065, 1078, 1079, 1081, 1084, 1086, 1097, 1099, 1104, 1114, 1116, 1122, 1123, 1137, 1166, 1222, 1223, 1225, 1242, 1259, 1260, 1263, 1270, 1280], "multipl": [59, 88, 152, 163, 461, 534, 536, 618, 647, 742, 754, 1043, 1116, 1118, 1137, 1166, 1265, 1270, 1275, 1280, 1292, 1314, 1322], "ground": [59, 88, 483, 518, 618, 647, 1029, 1034, 1065, 1100, 1137, 1166, 1272, 1315], "target": [59, 88, 153, 398, 477, 478, 618, 647, 744, 990, 1059, 1060, 1137, 1166, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1230, 1232, 1233, 1234, 1238, 1258, 1317], "thr": [59, 88, 618, 647, 1137, 1166], "index": [59, 74, 88, 103, 133, 141, 142, 143, 144, 146, 158, 159, 201, 235, 251, 252, 253, 255, 257, 267, 269, 271, 301, 338, 375, 398, 461, 475, 535, 618, 633, 647, 662, 721, 729, 730, 731, 732, 735, 739, 749, 750, 790, 825, 841, 842, 843, 845, 847, 857, 859, 861, 891, 928, 965, 990, 1018, 1029, 1034, 1043, 1057, 1117, 1137, 1152, 1166, 1181, 1308, 1320], "rays_per_sweep": [59, 80, 88, 109, 618, 639, 647, 668, 1137, 1158, 1166, 1187, 1198, 1199], "upon": [59, 88, 197, 198, 199, 200, 201, 202, 203, 204, 618, 647, 739, 786, 787, 788, 789, 790, 791, 792, 793, 1137, 1166], "prior": [59, 61, 88, 90, 145, 150, 151, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 394, 618, 620, 647, 649, 733, 740, 741, 812, 819, 822, 823, 824, 825, 826, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 986, 1137, 1139, 1166, 1168, 1273, 1307], "init_rays_per_sweep": [59, 88, 618, 647, 1137, 1166], "intend": [59, 88, 483, 618, 647, 1065, 1137, 1166], "rate": [59, 88, 501, 506, 507, 508, 509, 510, 511, 512, 525, 618, 647, 1083, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1107, 1137, 1166, 1302], "whether": [59, 88, 154, 155, 161, 173, 478, 526, 527, 532, 534, 618, 647, 690, 734, 745, 746, 752, 762, 1060, 1108, 1109, 1114, 1116, 1137, 1166, 1314], "regular": [59, 88, 399, 466, 474, 483, 496, 499, 557, 558, 572, 573, 618, 647, 991, 1029, 1048, 1056, 1065, 1078, 1081, 1137, 1166, 1281, 1307], "angular": [59, 88, 618, 647, 1137, 1166, 1214, 1253, 1254], "express": [59, 88, 618, 647, 1137, 1166], "360": [59, 88, 140, 145, 334, 371, 618, 647, 728, 733, 924, 961, 1137, 1166, 1304, 1309, 1315, 1317], "represent": [59, 88, 428, 618, 647, 1137, 1166], "forbidden": [59, 88, 618, 647, 1137, 1166], "plane": [59, 88, 398, 516, 618, 647, 990, 1098, 1137, 1166, 1317], "180": [59, 88, 119, 121, 154, 155, 534, 618, 647, 678, 680, 745, 746, 1116, 1137, 1166, 1309, 1320], "gate_z": [59, 71, 88, 100, 618, 630, 647, 659, 1137, 1149, 1166, 1178], "gate_x": [59, 71, 88, 100, 618, 630, 647, 659, 1137, 1149, 1166, 1178], "gate_i": [59, 71, 88, 100, 618, 630, 647, 659, 1137, 1149, 1166, 1178], "system": [59, 88, 120, 121, 122, 133, 141, 150, 151, 158, 159, 380, 390, 398, 445, 463, 473, 518, 618, 647, 679, 680, 681, 721, 729, 740, 741, 749, 750, 972, 982, 990, 1020, 1026, 1045, 1055, 1100, 1137, 1166, 1319], "earth": [59, 88, 117, 118, 121, 124, 518, 618, 647, 676, 677, 680, 683, 1025, 1100, 1137, 1166, 1232, 1258], "radiu": [59, 88, 117, 118, 119, 121, 124, 442, 443, 444, 445, 446, 447, 501, 518, 537, 618, 647, 676, 677, 678, 680, 683, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1083, 1100, 1119, 1137, 1166, 1232, 1258, 1302, 1313], "init_gate_x_y_z": [59, 88, 618, 647, 1137, 1166], "gate_latitud": [59, 70, 78, 88, 99, 107, 618, 629, 637, 647, 658, 666, 1137, 1148, 1156, 1166, 1177, 1185], "gate_longitud": [59, 70, 78, 88, 99, 107, 618, 629, 637, 647, 658, 666, 1137, 1148, 1156, 1166, 1177, 1185, 1309], "init_gate_longitude_latitud": [59, 88, 618, 647, 1137, 1166, 1309], "gate_altitud": [59, 70, 77, 88, 99, 106, 618, 629, 636, 647, 658, 665, 1137, 1148, 1155, 1166, 1177, 1184], "init_gate_altitud": [59, 88, 618, 647, 1137, 1166, 1309], "actual": [59, 88, 147, 394, 398, 445, 618, 647, 736, 986, 990, 1026, 1137, 1166, 1322], "flag": [59, 88, 137, 272, 394, 504, 529, 530, 533, 537, 618, 647, 725, 862, 986, 1086, 1111, 1112, 1115, 1119, 1137, 1166, 1215, 1216, 1242, 1245, 1322], "transit": [59, 70, 71, 88, 99, 100, 182, 194, 197, 200, 201, 222, 229, 233, 234, 235, 236, 272, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 483, 496, 529, 618, 629, 630, 647, 658, 659, 699, 711, 739, 771, 783, 786, 789, 790, 812, 819, 823, 824, 825, 826, 862, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 1065, 1078, 1111, 1137, 1148, 1149, 1166, 1177, 1178], "ye": [59, 88, 137, 618, 647, 725, 1137, 1166], "about": [59, 88, 518, 618, 647, 1100, 1137, 1166], "aircraft": [59, 88, 234, 394, 618, 647, 824, 986, 1137, 1166], "longitudin": [59, 88, 234, 246, 257, 261, 262, 271, 618, 647, 824, 836, 847, 851, 852, 861, 1137, 1166], "orthogon": [59, 88, 516, 618, 647, 1098, 1137, 1166], "platform": [59, 88, 618, 647, 1137, 1166], "right": [59, 88, 449, 503, 522, 618, 647, 1085, 1104, 1137, 1166, 1281, 1282, 1316], "wing": [59, 88, 618, 647, 1137, 1166], "down": [59, 88, 618, 647, 1137, 1166, 1264], "track": [59, 88, 618, 647, 1137, 1166], "compass": [59, 88, 618, 647, 1137, 1166], "nose": [59, 88, 618, 647, 1137, 1166], "had": [59, 88, 399, 618, 647, 991, 1137, 1166, 1272, 1322], "georefer": [59, 88, 618, 647, 1137, 1166], "lead": [59, 88, 618, 647, 1137, 1166, 1265, 1276], "centric": [59, 88, 618, 647, 1137, 1166], "avaiabl": [59, 88, 618, 647, 1137, 1166], "radar_paramet": [59, 88, 618, 647, 1137, 1166], "subconvent": [59, 88, 618, 647, 1137, 1166], "calibr": [59, 88, 152, 153, 160, 163, 506, 618, 647, 742, 744, 751, 754, 1088, 1137, 1166], "ngate": [59, 69, 88, 98, 618, 628, 647, 657, 1137, 1147, 1166, 1176, 1198, 1199, 1200, 1309, 1317], "nrai": [59, 69, 88, 98, 471, 618, 628, 647, 657, 1053, 1137, 1147, 1166, 1176, 1200, 1233, 1265, 1309, 1317], "nsweep": [59, 88, 618, 647, 1137, 1166, 1198, 1199, 1290, 1291, 1304, 1317], "loos": [60, 61, 89, 90, 619, 620, 648, 649, 1138, 1139, 1167, 1168, 1252], "existing_field_nam": [61, 90, 620, 649, 1139, 1168], "done": [61, 90, 135, 137, 145, 518, 537, 620, 649, 723, 725, 733, 1100, 1119, 1139, 1168, 1309, 1319, 1320, 1322], "both": [61, 90, 137, 197, 201, 381, 523, 524, 620, 649, 725, 739, 786, 790, 973, 1105, 1106, 1139, 1168, 1273, 1276, 1278, 1282, 1297, 1307, 1313, 1314, 1319, 1320], "reflectivity_copi": [61, 90, 620, 649, 1139, 1168], "take": [61, 90, 138, 152, 233, 300, 337, 374, 446, 447, 451, 528, 587, 620, 649, 726, 742, 823, 890, 927, 964, 1027, 1028, 1032, 1110, 1139, 1168, 1272, 1273, 1276, 1283, 1302, 1316, 1320], "gatefilt": [62, 91, 126, 127, 128, 137, 138, 139, 140, 145, 151, 197, 198, 199, 200, 201, 202, 203, 204, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 446, 447, 504, 528, 529, 530, 535, 540, 541, 621, 650, 714, 715, 716, 725, 726, 727, 728, 733, 739, 741, 786, 787, 788, 789, 790, 791, 792, 793, 812, 819, 822, 823, 824, 825, 826, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 1018, 1027, 1028, 1034, 1086, 1110, 1111, 1112, 1117, 1122, 1123, 1140, 1169, 1268, 1276, 1277, 1278, 1282, 1301, 1308, 1311, 1316, 1320], "updat": [62, 91, 503, 621, 650, 1085, 1140, 1169, 1265, 1283, 1302, 1307, 1320], "mask": [62, 91, 137, 138, 139, 140, 146, 157, 173, 175, 178, 182, 189, 193, 194, 197, 199, 200, 201, 202, 203, 204, 222, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 390, 391, 392, 447, 466, 474, 483, 496, 499, 531, 557, 558, 572, 573, 621, 650, 690, 692, 695, 699, 706, 710, 711, 725, 726, 727, 728, 735, 739, 748, 762, 764, 767, 771, 778, 782, 783, 786, 788, 789, 790, 791, 792, 793, 812, 819, 822, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 982, 983, 984, 1028, 1034, 1048, 1056, 1065, 1078, 1081, 1113, 1140, 1169, 1240, 1252, 1265, 1276, 1277, 1302, 1308, 1309, 1310, 1315, 1316, 1317], "condit": [62, 91, 137, 169, 173, 175, 182, 189, 194, 399, 621, 650, 686, 690, 692, 699, 706, 711, 725, 758, 762, 764, 771, 778, 783, 991, 1140, 1169, 1268, 1310, 1314], "append": [62, 91, 621, 650, 1140, 1169, 1304], "filtered_": [62, 91, 621, 650, 1140, 1169], "check": [63, 72, 92, 101, 138, 139, 140, 145, 154, 155, 393, 452, 503, 531, 622, 631, 651, 660, 726, 727, 728, 733, 745, 746, 985, 1033, 1085, 1113, 1141, 1150, 1170, 1179, 1232, 1242, 1258, 1263, 1307, 1319, 1320, 1321], "keyerror": [63, 92, 436, 437, 622, 651, 1001, 1002, 1012, 1013, 1141, 1170, 1319], "array_lik": [64, 93, 623, 652, 1142, 1171, 1244], "view": [65, 66, 68, 94, 95, 97, 401, 434, 435, 441, 624, 625, 627, 653, 654, 656, 994, 999, 1000, 1006, 1010, 1011, 1016, 1143, 1144, 1146, 1172, 1173, 1175, 1282, 1311, 1313, 1317], "possibl": [65, 66, 68, 94, 95, 97, 394, 461, 532, 624, 625, 627, 653, 654, 656, 986, 1043, 1114, 1143, 1144, 1146, 1172, 1173, 1175, 1229, 1236, 1265, 1281, 1302, 1311, 1313, 1315], "underli": [65, 66, 68, 94, 95, 97, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 381, 624, 625, 627, 653, 654, 656, 812, 819, 823, 824, 825, 826, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 973, 1143, 1144, 1146, 1172, 1173, 1175, 1307], "get_gate_x_y_z": [68, 97, 627, 656, 1146, 1175, 1292, 1293], "obtain": [68, 71, 97, 100, 129, 154, 162, 457, 467, 477, 478, 486, 503, 532, 627, 630, 656, 659, 717, 745, 753, 1039, 1049, 1059, 1060, 1068, 1085, 1114, 1146, 1149, 1175, 1178, 1255, 1304, 1309, 1315, 1316, 1320], "plot": [68, 71, 97, 100, 205, 206, 207, 208, 209, 210, 211, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 466, 474, 483, 496, 499, 535, 541, 627, 630, 656, 659, 795, 796, 797, 798, 799, 800, 801, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 932, 933, 934, 935, 936, 937, 938, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 1048, 1056, 1065, 1078, 1081, 1117, 1123, 1146, 1149, 1175, 1178, 1265, 1267, 1268, 1272, 1273, 1276, 1277, 1278, 1298, 1299, 1300, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1316, 1318], "spatial": [68, 71, 97, 100, 137, 627, 630, 656, 659, 725, 1146, 1149, 1175, 1178, 1265, 1313, 1316], "context": [68, 71, 97, 100, 627, 630, 656, 659, 1146, 1149, 1175, 1178, 1300, 1307, 1320], "request": [68, 97, 122, 390, 446, 447, 524, 627, 656, 681, 982, 1027, 1028, 1106, 1146, 1175, 1265, 1307, 1320], "area": [69, 98, 136, 222, 224, 229, 233, 234, 235, 236, 237, 289, 291, 296, 300, 301, 302, 303, 322, 324, 332, 333, 337, 338, 339, 340, 359, 361, 369, 370, 374, 375, 376, 377, 518, 530, 537, 628, 657, 724, 812, 814, 819, 823, 824, 825, 826, 827, 879, 881, 886, 890, 891, 892, 893, 912, 914, 922, 923, 927, 928, 929, 930, 949, 951, 959, 960, 964, 965, 966, 967, 1100, 1112, 1119, 1147, 1176, 1240], "squar": [69, 98, 154, 452, 523, 526, 527, 528, 540, 628, 657, 745, 1033, 1105, 1108, 1109, 1110, 1122, 1147, 1176, 1220], "assumpt": [69, 98, 516, 528, 628, 657, 1098, 1110, 1147, 1176], "size": [69, 98, 128, 137, 138, 140, 145, 200, 225, 292, 325, 362, 427, 444, 446, 447, 450, 452, 461, 472, 488, 491, 492, 501, 504, 528, 530, 532, 628, 657, 716, 725, 726, 728, 733, 789, 815, 882, 915, 952, 1024, 1027, 1028, 1031, 1033, 1043, 1054, 1070, 1073, 1074, 1083, 1086, 1110, 1112, 1114, 1147, 1176, 1214, 1230, 1239, 1247, 1262, 1283, 1296, 1302], "reset_gate_coord": [70, 99, 629, 658, 1148, 1177], "filter_transit": [70, 71, 99, 100, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 629, 630, 658, 659, 812, 819, 823, 824, 825, 826, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 1148, 1149, 1177, 1178], "With": [70, 71, 99, 100, 629, 630, 658, 659, 1148, 1149, 1177, 1178, 1307, 1308, 1309], "therefor": [70, 71, 99, 100, 528, 629, 630, 658, 659, 1110, 1148, 1149, 1177, 1178, 1311, 1316, 1317], "more": [70, 71, 76, 99, 100, 105, 138, 145, 154, 252, 398, 445, 446, 447, 501, 504, 537, 629, 630, 635, 658, 659, 664, 726, 733, 745, 842, 990, 1026, 1027, 1028, 1034, 1083, 1086, 1119, 1148, 1149, 1154, 1177, 1178, 1183, 1222, 1223, 1276, 1281, 1292, 1293, 1307, 1311, 1315, 1316, 1317, 1320], "effici": [70, 71, 99, 100, 446, 629, 630, 658, 659, 1027, 1148, 1149, 1177, 1178, 1221, 1307, 1311], "than": [70, 71, 99, 100, 138, 147, 151, 157, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 501, 518, 528, 629, 630, 658, 659, 726, 736, 741, 748, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1083, 1100, 1110, 1148, 1149, 1177, 1178, 1240, 1250, 1302, 1315, 1316, 1322], "through": [70, 71, 99, 100, 236, 302, 339, 376, 467, 486, 525, 629, 630, 658, 659, 826, 892, 929, 966, 1049, 1068, 1107, 1148, 1149, 1177, 1178, 1276, 1281, 1315, 1320], "pleas": [70, 99, 305, 342, 543, 629, 658, 895, 932, 1148, 1177, 1307, 1309, 1310, 1311, 1313, 1314, 1317, 1320], "get_field": [71, 100, 630, 659, 1149, 1178, 1292, 1293], "check_uniform": [72, 101, 631, 660, 1150, 1179], "lookuperror": [72, 101, 631, 660, 1150, 1179], "except": [72, 101, 398, 631, 660, 990, 1007, 1150, 1179, 1313], "skip": [72, 101, 138, 139, 393, 452, 631, 660, 726, 727, 985, 1033, 1150, 1179, 1315, 1320], "nyquist_veloc": [72, 101, 138, 139, 400, 631, 660, 726, 727, 992, 1150, 1179, 1311, 1317], "slice": [73, 85, 102, 114, 248, 249, 254, 255, 256, 257, 268, 269, 270, 271, 632, 644, 661, 673, 838, 839, 844, 845, 846, 847, 858, 859, 860, 861, 1151, 1163, 1180, 1192, 1296, 1313, 1315, 1317], "out": [76, 105, 140, 143, 144, 151, 154, 155, 156, 199, 203, 396, 397, 398, 399, 400, 517, 526, 527, 542, 546, 557, 558, 572, 573, 635, 664, 728, 731, 732, 741, 745, 746, 747, 788, 792, 988, 989, 990, 991, 992, 1034, 1099, 1108, 1109, 1154, 1183, 1277, 1278, 1282, 1293, 1301, 1303, 1307, 1313, 1316, 1319, 1320, 1321], "_io": [76, 105, 635, 664, 1154, 1183], "textiowrapp": [76, 105, 635, 664, 1154, 1183], "stdout": [76, 105, 542, 635, 664, 1154, 1183], "encod": [76, 105, 399, 635, 664, 991, 1154, 1183], "utf": [76, 105, 635, 664, 1154, 1183], "print": [76, 105, 126, 150, 151, 239, 258, 394, 528, 542, 546, 557, 558, 572, 573, 635, 664, 714, 740, 741, 829, 848, 986, 1110, 1154, 1183, 1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1302, 1310, 1314, 1317], "compact": [76, 105, 635, 664, 1154, 1183], "f": [76, 105, 264, 370, 440, 635, 664, 854, 960, 1005, 1015, 1154, 1183, 1281, 1295, 1302, 1307, 1315, 1322], "minim": [76, 105, 503, 528, 537, 635, 664, 1085, 1110, 1119, 1154, 1183], "everyth": [76, 105, 635, 664, 1154, 1183, 1273, 1320], "output": [76, 105, 132, 398, 467, 486, 503, 504, 518, 525, 532, 534, 635, 664, 720, 990, 1034, 1049, 1068, 1085, 1086, 1100, 1107, 1114, 1116, 1154, 1183, 1232, 1307, 1316], "screen": [76, 105, 635, 664, 1154, 1183], "gate_": [79, 108, 638, 667, 1157, 1186], "iter": [81, 82, 83, 84, 85, 86, 87, 110, 111, 112, 113, 114, 115, 116, 148, 416, 440, 461, 476, 505, 528, 530, 640, 641, 642, 643, 644, 645, 646, 669, 670, 671, 672, 673, 674, 675, 737, 1005, 1015, 1043, 1058, 1087, 1110, 1112, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1230, 1317], "over": [83, 86, 87, 112, 115, 116, 135, 136, 137, 138, 142, 146, 154, 155, 199, 222, 224, 229, 233, 234, 235, 236, 253, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 416, 501, 518, 521, 534, 536, 642, 645, 646, 671, 674, 675, 723, 724, 725, 726, 730, 735, 745, 746, 788, 812, 814, 819, 823, 824, 825, 826, 843, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1083, 1100, 1103, 1116, 1118, 1161, 1164, 1165, 1190, 1193, 1194, 1229, 1239, 1276, 1302, 1304, 1307, 1310, 1315, 1317], "npuls": [88, 647, 1166, 1230, 1235, 1236, 1237, 1246, 1247, 1248, 1249], "doppler_veloc": [88, 503, 647, 1085, 1166], "doppler_frequ": [88, 647, 1166], "puls": [88, 148, 152, 163, 476, 477, 518, 647, 737, 742, 754, 1058, 1059, 1100, 1166, 1200, 1230, 1235, 1236, 1237, 1242, 1246, 1247, 1248, 1249, 1311], "npulses_max": [88, 647, 1166, 1200], "frequenc": [88, 127, 128, 400, 450, 461, 477, 478, 498, 506, 507, 508, 510, 511, 518, 519, 520, 528, 529, 530, 538, 647, 715, 716, 992, 1031, 1043, 1059, 1060, 1080, 1088, 1089, 1090, 1092, 1093, 1100, 1101, 1102, 1110, 1111, 1112, 1120, 1166, 1316], "ke": [117, 118, 119, 518, 676, 677, 678, 1100], "3333333333333333": [117, 118, 518, 676, 677, 1100], "kilomet": [117, 501, 676, 1083], "effect": [117, 118, 119, 152, 163, 173, 175, 182, 189, 194, 234, 446, 447, 498, 518, 676, 677, 678, 690, 692, 699, 706, 711, 742, 754, 762, 764, 771, 778, 783, 824, 1027, 1028, 1080, 1100, 1292, 1315], "scale": [117, 118, 119, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 399, 400, 446, 447, 468, 528, 529, 676, 677, 678, 812, 819, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 991, 992, 1027, 1028, 1050, 1110, 1111, 1284, 1316], "equat": [117, 528, 676, 1110, 1229], "28": [117, 676, 1302, 1307, 1315, 1320], "b": [117, 501, 529, 541, 676, 969, 1083, 1111, 1123, 1320], "doviak": [117, 450, 676, 1031], "zrnic": [117, 450, 496, 676, 1031, 1078], "sqrt": [117, 121, 518, 676, 680, 1100, 1292, 1293, 1304, 1315], "r": [117, 120, 121, 122, 123, 124, 137, 139, 150, 151, 212, 227, 228, 250, 266, 279, 294, 295, 312, 327, 328, 329, 330, 349, 364, 365, 366, 367, 456, 466, 470, 475, 476, 483, 489, 501, 504, 507, 510, 511, 512, 532, 534, 537, 540, 676, 679, 680, 681, 682, 683, 725, 727, 740, 741, 802, 817, 818, 840, 856, 869, 884, 885, 902, 917, 918, 919, 920, 939, 954, 955, 956, 957, 1038, 1048, 1052, 1057, 1058, 1065, 1071, 1083, 1086, 1089, 1092, 1093, 1094, 1114, 1116, 1119, 1122, 1229, 1230, 1240, 1272, 1284, 1292, 1293, 1302, 1320], "sin": [117, 121, 124, 516, 676, 680, 683, 1098], "theta_": [117, 676], "arcsin": [117, 121, 676, 680], "frac": [117, 676], "theta_a": [117, 676], "arc": [117, 676, 1232], "length": [117, 150, 151, 154, 155, 156, 157, 158, 159, 504, 518, 528, 532, 676, 740, 741, 745, 746, 747, 748, 749, 750, 1086, 1100, 1110, 1114, 1235, 1246, 1247], "6371": [117, 121, 124, 676, 680, 683, 1232, 1258], "weather": [117, 137, 152, 153, 160, 163, 445, 466, 476, 483, 518, 528, 603, 676, 725, 742, 744, 751, 754, 1026, 1048, 1058, 1065, 1100, 1110, 1230, 1272, 1281, 1307, 1309, 1310, 1311, 1313, 1314, 1317, 1320], "edit": [117, 676, 1320], "1993": [117, 450, 676, 1031], "21": [117, 676, 1265], "vector": [118, 122, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 471, 523, 525, 526, 527, 677, 681, 734, 743, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1053, 1105, 1107, 1108, 1109, 1218, 1220, 1221, 1315], "util": [118, 128, 137, 138, 234, 506, 677, 716, 725, 726, 824, 1088, 1124, 1273, 1284, 1297, 1300, 1302, 1315, 1316, 1320], "antenna_to_cartesian": [118, 677], "cartograph": [120, 121, 122, 123, 124, 342, 679, 680, 681, 682, 683, 932], "build": [120, 122, 123, 169, 173, 175, 182, 189, 194, 400, 542, 679, 681, 682, 686, 690, 692, 699, 706, 711, 758, 762, 764, 771, 778, 783, 992, 1307, 1319, 1320], "desir": [120, 122, 123, 173, 175, 182, 189, 194, 401, 483, 501, 540, 679, 681, 682, 690, 692, 699, 706, 711, 762, 764, 771, 778, 783, 994, 1065, 1083, 1122, 1196, 1236, 1237, 1249, 1259, 1260, 1300, 1314], "6370997": [121, 124, 680, 683], "rho": [121, 680], "arctan2": [121, 680, 1304, 1315], "snyder": [121, 124, 680, 683], "manual": [121, 124, 680, 683], "geolog": [121, 124, 680, 683], "survei": [121, 124, 680, 683], "profession": [121, 124, 680, 683], "paper": [121, 124, 504, 680, 683, 1086, 1307, 1320], "1395": [121, 124, 680, 683], "1987": [121, 124, 680, 683], "pp": [121, 124, 450, 466, 474, 483, 496, 680, 683, 1031, 1048, 1056, 1065, 1078], "191": [121, 124, 680, 683], "202": [121, 124, 680, 683], "find": [122, 138, 145, 154, 155, 445, 446, 447, 517, 534, 681, 726, 733, 745, 746, 1018, 1026, 1027, 1028, 1099, 1116, 1231, 1273, 1315, 1322], "arcco": [124, 683], "no_altitude_transform": [125, 684], "wgs84": [125, 236, 302, 339, 376, 398, 684, 826, 892, 929, 966, 990, 1025], "ch1903": [125, 684], "lv03": [125, 684], "formula": [125, 450, 684, 1031], "formeln": [125, 684], "und": [125, 684], "konstanten": [125, 684], "f\u00fcr": [125, 684], "die": [125, 684], "berechnung": [125, 684], "der": [125, 684], "schweizerischen": [125, 684], "schiefachsigen": [125, 684], "zylinderprojekt": [125, 684], "zwischen": [125, 684], "koordinatensystemen": [125, 684], "chapter": [125, 684], "n\u00e4herungsl\u00f6sungen": [125, 684], "bundesamt": [125, 684], "landestopografi": [125, 684], "swisstopo": [125, 684], "admin": [125, 684, 1320], "ch": [125, 684, 1303, 1304], "oktob": [125, 684], "2008": [125, 532, 684, 1114, 1273], "input": [125, 150, 151, 398, 467, 475, 476, 486, 502, 503, 518, 524, 525, 530, 532, 684, 740, 741, 990, 1029, 1049, 1057, 1058, 1068, 1084, 1085, 1100, 1106, 1107, 1112, 1114, 1217, 1240, 1302, 1314, 1316], "46": [125, 236, 302, 339, 376, 684, 826, 892, 929, 966, 1316], "38": [125, 684, 1273, 1279, 1318], "87": [125, 445, 684, 1026], "43": [125, 684], "49": [125, 684], "79": [125, 684], "650": [125, 684], "60": [125, 684, 1018, 1267, 1272, 1276, 1278, 1283, 1309, 1311, 1313, 1316], "result": [125, 135, 136, 137, 138, 139, 173, 175, 182, 189, 194, 222, 229, 232, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 380, 397, 401, 447, 526, 527, 532, 533, 535, 540, 541, 684, 690, 692, 699, 706, 711, 723, 724, 725, 726, 727, 743, 762, 764, 771, 778, 783, 812, 819, 822, 823, 824, 825, 826, 839, 845, 847, 857, 859, 861, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 972, 989, 994, 1028, 1034, 1108, 1109, 1114, 1115, 1117, 1122, 1123, 1219, 1230, 1256, 1273, 1303, 1307, 1313, 1315, 1320], "chy": [125, 684], "699": [125, 684], "999": [125, 137, 401, 684, 725, 994], "76": [125, 684], "700000": [125, 684], "chx": [125, 684], "99": [125, 457, 534, 684, 1039, 1116, 1281], "97": [125, 143, 144, 684, 731, 732, 1276, 1278, 1282, 1284, 1296, 1300, 1302, 1309], "100000": [125, 684, 1313, 1315], "chh": [125, 684], "600": [125, 684, 1309], "05": [125, 137, 446, 447, 538, 684, 725, 1027, 1028, 1120, 1296], "z_offset": [126, 714], "debug": [126, 137, 150, 151, 239, 258, 394, 528, 542, 714, 725, 740, 741, 829, 848, 986, 1110], "doc": [126, 127, 128, 142, 143, 146, 151, 154, 155, 156, 714, 715, 716, 730, 731, 735, 741, 745, 746, 747, 1307, 1319, 1320, 1322], "15": [126, 518, 528, 714, 1100, 1110, 1240, 1267, 1268, 1281, 1284, 1290, 1291, 1292, 1293, 1296, 1297, 1311, 1315, 1317], "fzl": [126, 127, 128, 142, 143, 146, 150, 151, 154, 155, 156, 714, 715, 716, 730, 731, 735, 740, 741, 745, 746, 747, 1316], "4000": [126, 150, 151, 714, 740, 741, 1313], "rhv_min": [126, 714], "ncp_min": [126, 714], "a_coef": [126, 128, 714, 716], "06": [126, 714, 1264, 1279, 1298, 1318], "beta": [126, 128, 506, 507, 508, 509, 510, 511, 714, 716, 734, 743, 1088, 1089, 1090, 1091, 1092, 1093], "refl_field": [126, 127, 128, 129, 133, 135, 136, 141, 142, 143, 144, 150, 151, 154, 155, 156, 158, 159, 197, 200, 201, 447, 451, 477, 478, 484, 485, 498, 501, 502, 504, 507, 509, 510, 511, 512, 525, 526, 532, 537, 714, 715, 716, 717, 721, 723, 724, 729, 730, 731, 732, 739, 740, 741, 745, 746, 747, 749, 750, 786, 789, 790, 1028, 1032, 1059, 1060, 1066, 1067, 1080, 1083, 1084, 1086, 1089, 1091, 1092, 1093, 1094, 1107, 1108, 1114, 1119, 1267, 1302, 1303, 1316], "ncp_field": [126, 150, 151, 201, 714, 739, 740, 741, 790, 1267], "rhv_field": [126, 150, 151, 197, 200, 201, 502, 525, 532, 714, 739, 740, 741, 786, 789, 790, 1084, 1107, 1114, 1267, 1303, 1316], "spec_at_field": [126, 127, 128, 714, 715, 716], "corr_refl_field": [126, 127, 128, 135, 136, 714, 715, 716, 723, 724], "attenu": [126, 127, 128, 147, 148, 149, 163, 450, 478, 484, 506, 507, 510, 519, 714, 715, 716, 736, 737, 738, 754, 1031, 1060, 1066, 1088, 1089, 1092, 1101, 1266, 1270, 1303, 1307], "phi": [126, 128, 150, 714, 716, 740, 1267, 1316], "must": [126, 127, 128, 137, 333, 383, 387, 388, 393, 399, 450, 504, 518, 523, 528, 529, 530, 533, 714, 715, 716, 725, 923, 975, 979, 980, 985, 991, 1031, 1086, 1100, 1105, 1110, 1111, 1112, 1115, 1257, 1302, 1307, 1319, 1320], "copol_coeff": [126, 714, 1202, 1267, 1301, 1309], "norm_coherent_pow": [126, 714, 1202, 1267, 1309], "proc_dp_phase_shift": [126, 714, 1267, 1309], "reflectivity_horizont": [126, 137, 714, 725, 1202, 1267, 1276, 1281, 1283, 1287, 1289, 1290, 1291, 1295, 1297, 1300, 1301, 1302, 1309, 1310], "supress": [126, 239, 251, 252, 258, 333, 370, 714, 829, 841, 842, 848, 923, 960], "freez": [126, 127, 128, 142, 143, 146, 154, 155, 156, 466, 483, 504, 532, 533, 534, 714, 715, 716, 730, 731, 735, 745, 746, 747, 1048, 1065, 1086, 1114, 1115, 1116, 1316], "layer": [126, 127, 128, 129, 130, 135, 136, 142, 143, 146, 154, 155, 156, 199, 203, 398, 457, 504, 507, 522, 528, 532, 533, 534, 535, 714, 715, 716, 717, 718, 723, 724, 730, 731, 735, 745, 746, 747, 788, 792, 990, 1039, 1086, 1089, 1104, 1110, 1114, 1115, 1116, 1117, 1265, 1316], "combin": [126, 127, 128, 714, 715, 716, 1250, 1251, 1320], "normal": [126, 129, 135, 136, 150, 151, 201, 222, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 429, 525, 714, 717, 723, 724, 739, 740, 741, 790, 812, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 886, 890, 891, 892, 912, 922, 923, 927, 928, 929, 949, 959, 960, 964, 965, 966, 1107, 1252, 1292], "coher": [126, 150, 151, 201, 714, 739, 740, 741, 790], "zdr_field": [126, 127, 128, 132, 143, 144, 147, 148, 154, 155, 156, 197, 200, 460, 502, 525, 532, 714, 715, 716, 720, 731, 732, 736, 737, 745, 746, 747, 786, 789, 1042, 1084, 1107, 1114, 1303, 1316], "spec_at": [126, 127, 128, 714, 715, 716, 1267, 1303, 1316], "cor_z": [126, 127, 128, 714, 715, 716, 1267, 1303, 1316], "gu": [126, 128, 714, 716], "et": [126, 128, 132, 148, 476, 501, 525, 528, 532, 533, 537, 714, 716, 720, 737, 1058, 1083, 1107, 1110, 1114, 1115, 1119, 1302, 1316], "al": [126, 128, 132, 148, 476, 501, 525, 528, 529, 532, 533, 537, 714, 716, 720, 737, 1058, 1083, 1107, 1110, 1111, 1114, 1115, 1119, 1302, 1316], "heavi": [126, 128, 714, 716, 1240, 1284, 1292], "rain": [126, 128, 133, 141, 142, 143, 154, 155, 156, 158, 159, 457, 466, 483, 506, 507, 508, 509, 512, 537, 714, 716, 721, 729, 730, 731, 745, 746, 747, 749, 750, 1039, 1048, 1065, 1088, 1089, 1090, 1091, 1094, 1119, 1284, 1292, 1302, 1303, 1315, 1316], "jamc": [126, 128, 530, 714, 716, 1112], "2011": [126, 128, 714, 716], "50": [126, 128, 144, 461, 474, 497, 499, 525, 532, 714, 716, 732, 1043, 1056, 1079, 1081, 1107, 1114, 1214, 1278, 1296, 1303, 1313, 1315, 1316, 1317], "39": [126, 128, 714, 716], "58": [126, 128, 714, 716, 1318], "pia_coef": [127, 715], "pida_coef": [127, 715], "temp_field": [127, 128, 135, 136, 142, 143, 144, 146, 154, 155, 156, 203, 502, 525, 532, 534, 715, 716, 723, 724, 730, 731, 732, 735, 745, 746, 747, 792, 1084, 1107, 1114, 1116, 1303, 1316], "iso0_field": [127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 199, 502, 504, 525, 532, 533, 534, 715, 716, 723, 724, 730, 731, 735, 745, 746, 747, 788, 1084, 1086, 1107, 1114, 1115, 1116], "pia_field": [127, 128, 715, 716], "spec_diff_at_field": [127, 128, 715, 716], "pida_field": [127, 128, 715, 716], "corr_zdr_field": [127, 128, 715, 716], "temp_ref": [127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 502, 521, 525, 532, 534, 715, 716, 723, 724, 730, 731, 735, 745, 746, 747, 1084, 1103, 1107, 1114, 1116, 1303, 1316], "dependec": [127, 715], "comput": [127, 128, 129, 130, 132, 135, 136, 147, 148, 149, 153, 154, 155, 163, 200, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 518, 521, 525, 526, 527, 528, 529, 530, 532, 534, 536, 540, 715, 716, 717, 718, 720, 723, 724, 736, 737, 738, 743, 744, 745, 746, 754, 789, 1025, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1100, 1103, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1116, 1118, 1122, 1210, 1211, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1230, 1239, 1243, 1244, 1246, 1248, 1249, 1253, 1254, 1262, 1303, 1304, 1307, 1315], "depend": [127, 128, 167, 447, 507, 518, 532, 543, 715, 716, 1028, 1089, 1100, 1114, 1246, 1320], "refl": [127, 128, 715, 716, 1290], "integr": [127, 128, 153, 163, 715, 716, 744, 754, 1316], "pida_coeff": [127, 715], "0c": [127, 128, 146, 715, 716, 735], "isotherm": [127, 128, 146, 715, 716, 735], "height_over_iso0": [127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 502, 525, 532, 534, 715, 716, 723, 724, 730, 731, 735, 745, 746, 747, 1084, 1107, 1114, 1116, 1314], "fixed_fzl": [127, 128, 143, 146, 154, 155, 156, 715, 716, 731, 735, 745, 746, 747], "pia_dict": [127, 128, 715, 716], "spec_diff_at": [127, 128, 715, 716, 1303, 1316], "pida_dict": [127, 128, 715, 716], "cor_zdr": [127, 128, 715, 716, 1303, 1316], "smooth_window_len": [128, 716], "smooth": [128, 145, 154, 155, 156, 157, 158, 159, 472, 488, 491, 492, 526, 527, 528, 716, 733, 745, 746, 747, 748, 749, 750, 1054, 1070, 1073, 1074, 1108, 1109, 1110, 1232, 1258, 1292, 1293, 1313], "window": [128, 137, 150, 151, 154, 155, 156, 157, 158, 159, 200, 452, 467, 472, 486, 488, 491, 492, 526, 527, 530, 532, 540, 716, 725, 740, 741, 745, 746, 747, 748, 749, 750, 789, 1033, 1049, 1054, 1068, 1070, 1073, 1074, 1108, 1109, 1112, 1114, 1122, 1214, 1235, 1239, 1246, 1247, 1256, 1262, 1307, 1320], "expon": [128, 150, 151, 506, 507, 508, 509, 510, 511, 716, 740, 741, 1088, 1089, 1090, 1091, 1092, 1093], "law": [128, 506, 507, 508, 509, 510, 511, 716, 1088, 1089, 1090, 1091, 1092, 1093], "ryzhkov": [128, 466, 474, 506, 532, 535, 716, 1048, 1056, 1088, 1114, 1117], "potenti": [128, 147, 506, 532, 716, 736, 1088, 1114], "rainfal": [128, 506, 507, 508, 509, 510, 511, 512, 528, 530, 716, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1110, 1112, 1316], "mitig": [128, 506, 716, 1088], "partial": [128, 506, 716, 1088], "beam": [128, 129, 153, 444, 446, 447, 457, 506, 518, 716, 717, 744, 1024, 1027, 1028, 1039, 1088, 1100], "blockag": [128, 506, 716, 1088], "network": [128, 138, 392, 506, 716, 726, 984, 1088, 1315], "jaot": [128, 132, 716, 720], "2014": [128, 506, 529, 535, 716, 1088, 1111, 1117], "31": [128, 158, 390, 506, 526, 716, 749, 982, 1088, 1108, 1273], "599": [128, 506, 716, 1088], "619": [128, 506, 716, 1088], "ml_top": [129, 130, 457, 522, 717, 718, 1039, 1104], "3000": [129, 130, 457, 521, 537, 717, 718, 1039, 1103, 1119, 1309, 1313], "ml_thick": [129, 130, 457, 717, 718, 1039], "200": [129, 130, 135, 136, 450, 457, 534, 717, 718, 723, 724, 1031, 1039, 1116, 1230, 1248, 1249, 1320], "val_ml": [129, 130, 717, 718], "val_dr": [129, 130, 717, 718], "h_max": [129, 130, 135, 136, 457, 534, 717, 718, 723, 724, 1039, 1116], "6000": [129, 130, 135, 136, 457, 532, 534, 717, 718, 723, 724, 1039, 1114, 1116, 1309, 1313], "h_re": [129, 130, 135, 136, 457, 534, 717, 718, 723, 724, 1039, 1116], "max_weight": [129, 135, 136, 717, 723, 724], "vpr_theo_dict": [129, 717], "normalized_reflect": [129, 717], "appar": [129, 457, 717, 1039], "vpr": [129, 135, 136, 717, 723, 724, 1265, 1307], "melt": [129, 130, 135, 136, 142, 143, 154, 155, 156, 199, 203, 457, 504, 507, 522, 528, 532, 533, 534, 535, 717, 718, 723, 724, 730, 731, 745, 746, 747, 788, 792, 1039, 1086, 1089, 1104, 1110, 1114, 1115, 1116, 1117, 1240, 1265, 1284, 1302, 1303, 1316], "top": [129, 130, 135, 136, 152, 163, 258, 447, 457, 504, 513, 514, 522, 531, 532, 533, 534, 717, 718, 723, 724, 742, 754, 848, 1028, 1039, 1086, 1095, 1096, 1104, 1113, 1114, 1115, 1116, 1281, 1300, 1313, 1320], "asl": [129, 130, 457, 717, 718, 1039], "thick": [129, 130, 135, 136, 142, 143, 146, 154, 155, 156, 199, 203, 457, 534, 717, 718, 723, 724, 730, 731, 735, 745, 746, 747, 788, 792, 1039, 1116], "peak": [129, 130, 135, 136, 457, 532, 534, 717, 718, 723, 724, 1039, 1114, 1116, 1229, 1265, 1311], "decreas": [129, 130, 135, 136, 502, 521, 525, 717, 718, 723, 724, 1084, 1103, 1107], "ratio": [129, 130, 135, 136, 144, 200, 201, 202, 237, 303, 340, 377, 451, 459, 460, 518, 717, 718, 723, 724, 732, 739, 789, 790, 791, 827, 893, 930, 967, 1032, 1041, 1042, 1100, 1316, 1317], "theoret": [129, 135, 136, 163, 445, 457, 538, 717, 723, 724, 754, 1026, 1039, 1120], "multipli": [129, 457, 467, 501, 534, 717, 969, 1039, 1049, 1083, 1116, 1302, 1309], "radar_out": [129, 457, 717, 1039], "conta": [129, 130, 457, 504, 532, 533, 534, 544, 717, 718, 1039, 1086, 1114, 1115, 1116], "ideal": [130, 718], "val_theo_dict": [130, 718], "bottom": [130, 331, 368, 457, 504, 522, 532, 533, 534, 718, 921, 958, 1039, 1086, 1104, 1114, 1115, 1116, 1281, 1283], "bia": [131, 136, 143, 144, 154, 155, 164, 719, 724, 731, 732, 743, 745, 746, 755], "magnitud": [131, 528, 719, 1110, 1304, 1317], "corrected_field": [131, 134, 719, 722], "urhohv_field": [132, 720], "snr_field": [132, 144, 202, 451, 485, 720, 732, 791, 1032, 1067], "nh_field": [132, 720], "nv_field": [132, 720], "rhohv_field": [132, 142, 143, 144, 154, 155, 156, 457, 460, 468, 504, 720, 730, 731, 732, 745, 746, 747, 1039, 1042, 1050, 1086], "eq": [132, 720, 1290], "2006": [132, 720, 1273], "subtract": [132, 456, 465, 472, 473, 480, 481, 482, 488, 491, 492, 493, 501, 720, 1038, 1047, 1054, 1055, 1062, 1063, 1064, 1070, 1073, 1074, 1075, 1083], "uncorrect": [132, 720], "snr": [132, 144, 202, 451, 485, 720, 732, 791, 1032, 1067, 1237, 1249, 1316], "channel": [132, 164, 398, 463, 469, 482, 494, 495, 500, 720, 755, 990, 1045, 1051, 1064, 1076, 1077, 1082], "meteo": [132, 135, 136, 532, 534, 720, 723, 724, 1114, 1116], "franc": [132, 135, 136, 534, 720, 723, 724, 1116], "23": [132, 720, 1274], "1340": [132, 720], "1356": [132, 720], "ind_rmin": [133, 141, 142, 143, 144, 158, 159, 475, 721, 729, 730, 731, 732, 749, 750, 1057], "10": [133, 140, 141, 142, 143, 144, 148, 150, 151, 158, 159, 160, 163, 169, 202, 204, 236, 302, 339, 376, 445, 447, 450, 461, 466, 476, 496, 501, 504, 515, 525, 529, 530, 532, 534, 686, 721, 728, 729, 730, 731, 732, 737, 740, 741, 749, 750, 751, 754, 758, 791, 793, 826, 892, 929, 966, 1026, 1028, 1031, 1043, 1048, 1058, 1078, 1083, 1086, 1097, 1107, 1111, 1112, 1114, 1116, 1230, 1240, 1268, 1276, 1277, 1281, 1284, 1285, 1287, 1289, 1292, 1293, 1296, 1298, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1320], "ind_rmax": [133, 141, 142, 143, 144, 158, 159, 721, 729, 730, 731, 732, 749, 750], "500": [133, 141, 142, 143, 144, 158, 159, 446, 447, 532, 721, 729, 730, 731, 732, 749, 750, 1018, 1027, 1028, 1114, 1276, 1282, 1286, 1315], "min_rcon": [133, 141, 154, 155, 158, 159, 721, 729, 745, 746, 749, 750], "11": [133, 141, 157, 158, 159, 236, 302, 339, 376, 458, 501, 526, 527, 721, 729, 748, 749, 750, 826, 892, 929, 966, 1040, 1083, 1108, 1109, 1256, 1269, 1279, 1314, 1317, 1318], "zmin": [133, 141, 142, 143, 144, 158, 159, 721, 729, 730, 731, 732, 749, 750, 1315], "20": [133, 135, 136, 141, 142, 143, 147, 154, 155, 156, 158, 159, 197, 200, 201, 457, 532, 534, 535, 721, 723, 724, 729, 730, 731, 736, 739, 745, 746, 747, 749, 750, 786, 789, 790, 1039, 1114, 1116, 1117, 1272, 1273, 1276, 1282, 1283, 1284, 1287, 1289, 1290, 1291, 1292, 1293, 1295, 1301, 1302, 1305, 1309, 1313, 1315, 1317, 1318], "zmax": [133, 141, 142, 143, 144, 158, 159, 721, 729, 730, 731, 732, 749, 750, 1315], "40": [133, 139, 141, 142, 158, 159, 264, 461, 526, 721, 727, 729, 730, 749, 750, 854, 1043, 1108, 1235, 1268, 1278, 1283, 1287, 1289, 1292, 1302, 1315, 1316], "psidp_field": [133, 158, 159, 528, 529, 530, 721, 749, 750, 1110, 1111, 1112, 1303, 1316], "public": [133, 141, 721, 729, 1264, 1309, 1310, 1311, 1313, 1314, 1317], "min": [133, 135, 136, 141, 142, 143, 144, 147, 158, 159, 197, 224, 291, 324, 361, 475, 532, 721, 723, 724, 729, 730, 731, 732, 736, 749, 750, 786, 814, 881, 914, 951, 1057, 1114, 1242, 1315], "max": [133, 135, 136, 141, 142, 143, 144, 154, 155, 158, 159, 197, 224, 291, 324, 361, 398, 475, 504, 532, 721, 723, 724, 729, 730, 731, 732, 745, 746, 749, 750, 786, 814, 881, 914, 951, 990, 1057, 1086, 1114, 1242, 1272, 1276, 1281, 1282, 1287, 1295, 1315], "look": [133, 141, 142, 143, 144, 147, 154, 155, 156, 158, 159, 161, 162, 474, 475, 532, 535, 721, 729, 730, 731, 732, 736, 745, 746, 747, 749, 750, 752, 753, 1034, 1056, 1057, 1114, 1117, 1231, 1246, 1248, 1249, 1272, 1273, 1276, 1283, 1307, 1309, 1311, 1313, 1315, 1316, 1317], "continu": [133, 137, 139, 141, 158, 159, 533, 721, 725, 727, 729, 749, 750, 1115], "consecut": [133, 141, 154, 155, 158, 159, 532, 721, 729, 745, 746, 749, 750, 1114, 1230], "cell": [133, 141, 158, 159, 721, 729, 749, 750, 1292], "phidp_dict": [133, 158, 159, 462, 463, 721, 749, 750, 1044, 1045], "vis_field": [134, 204, 722, 793], "nvalid_min": [135, 136, 466, 474, 483, 496, 534, 723, 724, 1048, 1056, 1065, 1078, 1116, 1217, 1219], "angle_min": [135, 136, 723, 724], "angle_max": [135, 136, 723, 724], "ml_thickness_min": [135, 136, 534, 723, 724, 1116], "ml_thickness_max": [135, 136, 534, 723, 724, 1116], "800": [135, 136, 148, 476, 723, 724, 737, 1058, 1230], "ml_thickness_step": [135, 136, 534, 723, 724, 1116], "iso0_max": [135, 136, 534, 723, 724, 1116], "5000": [135, 136, 723, 724, 1304, 1313, 1315], "ml_top_diff_max": [135, 136, 534, 723, 724, 1116], "ml_top_step": [135, 136, 534, 723, 724, 1116], "ml_peak_min": [135, 136, 723, 724], "ml_peak_max": [135, 136, 723, 724], "ml_peak_step": [135, 136, 723, 724], "dr_min": [135, 136, 723, 724], "dr_max": [135, 136, 723, 724], "dr_step": [135, 136, 723, 724], "dr_default": [135, 136, 723, 724], "dr_alt": [135, 136, 723, 724], "h_corr_max": [135, 136, 723, 724], "15000": [135, 136, 466, 496, 723, 724, 1048, 1078, 1309, 1313], "rmin_ob": [135, 136, 723, 724], "rmax_ob": [135, 136, 723, 724], "150000": [135, 136, 723, 724], "filter_param": [135, 723], "weight_mem": [135, 136, 723, 724], "75": [135, 136, 169, 237, 303, 340, 377, 398, 461, 501, 525, 532, 536, 686, 723, 724, 758, 827, 893, 930, 967, 990, 1029, 1043, 1083, 1107, 1114, 1118, 1276, 1292, 1302, 1309, 1313, 1314], "vpr_theo_dict_mem": [135, 136, 723, 724], "radar_mem_list": [135, 136, 723, 724], "lin_refl_field": [135, 136, 723, 724], "norm_refl_field": [135, 136, 723, 724], "corr_field": [135, 136, 723, 724], "averag": [135, 136, 138, 154, 155, 466, 470, 474, 483, 489, 496, 501, 518, 534, 540, 723, 724, 726, 745, 746, 969, 1048, 1052, 1056, 1065, 1071, 1078, 1083, 1100, 1116, 1122, 1217, 1219, 1229, 1243, 1265, 1302, 1304, 1315], "explor": [135, 136, 466, 534, 723, 724, 1048, 1116], "iso": [135, 136, 521, 534, 536, 723, 724, 1103, 1116, 1118], "proper": [135, 136, 723, 724, 1319], "could": [135, 136, 457, 723, 724, 1039, 1221, 1273, 1320], "abl": [135, 136, 143, 144, 723, 724, 731, 732, 1307, 1319], "dr": [135, 136, 518, 528, 723, 724, 1100, 1110], "masl": [135, 136, 522, 534, 723, 724, 1104, 1116], "weight": [135, 136, 154, 446, 447, 461, 483, 525, 528, 534, 540, 723, 724, 745, 1027, 1028, 1043, 1065, 1107, 1110, 1116, 1122, 1313, 1315], "compar": [135, 136, 137, 173, 461, 504, 534, 690, 723, 724, 725, 762, 1034, 1043, 1086, 1116, 1214, 1230, 1270, 1275, 1281, 1302, 1315, 1316, 1320], "previou": [135, 136, 137, 333, 370, 503, 532, 723, 724, 725, 923, 960, 1085, 1114], "shape": [135, 175, 189, 388, 531, 692, 706, 723, 764, 778, 980, 1113, 1252, 1302, 1309, 1313, 1314, 1317, 1320], "past": [135, 136, 534, 723, 724, 1116, 1320], "refl_corr_dict": [135, 136, 723, 724], "corr_field_dict": [135, 136, 723, 724], "vpr_theo_dict_filt": [135, 136, 723, 724], "radar_rhi": [135, 136, 723, 724, 1217, 1222], "correct_iso0": [136, 724], "spatialis": [136, 724], "last_radar": [137, 725], "sonde_profil": [137, 725], "filt": [137, 725], "rsl_badval": [137, 725], "131072": [137, 725], "keep_origin": [137, 138, 139, 725, 726, 727], "set_limit": [137, 138, 139, 725, 726, 727, 1284, 1285, 1286, 1288, 1290, 1291, 1292, 1293, 1295], "vel_field": [137, 138, 139, 197, 452, 516, 541, 725, 726, 727, 786, 1033, 1098, 1123, 1311], "corr_vel_field": [137, 138, 139, 725, 726, 727], "last_vel_field": [137, 725], "max_shear": [137, 725], "sign": [137, 515, 540, 541, 725, 1097, 1122, 1123, 1265, 1292, 1293, 1315], "dealia": [137, 138, 139, 503, 725, 726, 727, 1085, 1266, 1270, 1311, 1315], "4dd": [137, 725, 1265], "univers": [137, 395, 512, 725, 987, 1094, 1307], "washington": [137, 725], "sound": [137, 515, 540, 541, 725, 1097, 1122, 1123], "For": [137, 248, 254, 256, 268, 270, 388, 398, 446, 526, 527, 528, 725, 838, 844, 846, 858, 860, 980, 990, 1027, 1108, 1109, 1110, 1272, 1276, 1303, 1314, 1317, 1320, 1322], "best": [137, 725], "argument": [137, 138, 139, 222, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 289, 296, 300, 301, 302, 322, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 366, 367, 368, 369, 370, 371, 374, 375, 376, 390, 392, 400, 401, 445, 447, 529, 530, 725, 726, 727, 812, 819, 823, 824, 825, 826, 838, 839, 841, 842, 843, 844, 845, 846, 847, 857, 858, 859, 860, 861, 879, 886, 890, 891, 892, 912, 919, 920, 921, 922, 923, 924, 927, 928, 929, 949, 956, 957, 958, 959, 960, 961, 964, 965, 966, 982, 984, 992, 994, 1026, 1028, 1111, 1112, 1320], "_fourdd_interfac": [137, 725], "fourdd_dealia": [137, 725], "fine": [137, 725], "tune": [137, 725, 1302], "behavior": [137, 333, 388, 401, 725, 923, 980, 994], "fourdd": [137, 725], "dealias": [137, 138, 139, 503, 725, 726, 727, 1085, 1268, 1272, 1307, 1308, 1320], "mean_doppler_veloc": [137, 725, 1295, 1309], "successfulli": [137, 725], "greatli": [137, 725], "improv": [137, 529, 530, 725, 1111, 1112, 1240, 1265, 1284], "final": [137, 461, 505, 529, 530, 725, 1043, 1087, 1111, 1112, 1302, 1315], "horizontalwindprofil": [137, 382, 383, 541, 725, 974, 975, 1123, 1257, 1320], "sond": [137, 138, 382, 383, 517, 725, 726, 974, 975, 1099, 1268], "moment_based_gate_filt": [137, 138, 139, 447, 725, 726, 727, 1028], "bergen": [137, 725], "alber": [137, 725], "bad": [137, 504, 528, 529, 530, 537, 725, 1086, 1110, 1111, 1112, 1119, 1315], "rsl": [137, 381, 393, 394, 725, 973, 985, 986, 1265, 1307, 1319], "procedur": [137, 138, 139, 725, 726, 727], "fail": [137, 138, 139, 388, 398, 725, 726, 727, 980, 990, 1320], "element": [137, 138, 139, 140, 145, 169, 400, 446, 447, 531, 686, 725, 726, 727, 728, 733, 758, 992, 1027, 1028, 1113, 1243, 1244, 1253, 1254, 1315], "maxshear": [137, 725], "shear": [137, 513, 514, 725, 1095, 1096], "incorpor": [137, 725, 1302], "toward": [137, 515, 540, 541, 725, 1097, 1122, 1123], "neg": [137, 222, 233, 289, 300, 322, 337, 359, 374, 515, 528, 540, 541, 725, 812, 823, 879, 890, 912, 927, 949, 964, 1097, 1110, 1122, 1123, 1281, 1315], "compthresh": [137, 725], "fraction": [137, 725, 1302, 1317], "threshold": [137, 140, 145, 149, 197, 199, 200, 201, 202, 203, 204, 461, 501, 504, 505, 507, 510, 511, 515, 725, 728, 733, 738, 739, 786, 788, 789, 790, 791, 792, 793, 969, 1043, 1083, 1086, 1087, 1089, 1092, 1093, 1097, 1229, 1230, 1235, 1236, 1237, 1240, 1246, 1247, 1248, 1249, 1302, 1311, 1314], "mark": [137, 169, 173, 182, 194, 686, 690, 699, 711, 725, 758, 762, 771, 783], "begin": [137, 138, 139, 150, 151, 169, 207, 209, 229, 233, 274, 276, 296, 300, 307, 309, 332, 337, 344, 346, 369, 374, 388, 389, 392, 394, 686, 725, 726, 727, 740, 741, 758, 797, 799, 819, 823, 864, 866, 886, 890, 897, 899, 922, 927, 934, 936, 959, 964, 980, 981, 984, 986], "unfold": [137, 138, 150, 151, 528, 725, 726, 740, 741, 1110, 1315], "compthresh2": [137, 725], "thresh": [137, 507, 510, 511, 725, 1089, 1092, 1093, 1316], "adjac": [137, 725], "count": [137, 725, 1276, 1311, 1317], "against": [137, 173, 690, 725, 762, 1292], "question": [137, 447, 725, 970, 1028], "ckval": [137, 725], "absolut": [137, 233, 300, 337, 374, 725, 823, 890, 927, 964, 1214, 1250], "below": [137, 140, 146, 150, 151, 173, 187, 197, 199, 200, 201, 202, 203, 204, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 446, 447, 501, 507, 510, 511, 528, 534, 690, 704, 725, 728, 735, 739, 740, 741, 762, 776, 786, 788, 789, 790, 791, 792, 793, 812, 819, 822, 823, 824, 825, 826, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 1027, 1028, 1029, 1083, 1089, 1092, 1093, 1110, 1116, 1229, 1281, 1302, 1309, 1311, 1314, 1316, 1321], "stdthresh": [137, 725], "deviat": [137, 147, 148, 164, 475, 515, 725, 736, 737, 743, 755, 1057, 1097, 1212, 1213, 1239, 1244, 1311], "portion": [137, 725, 1313], "epsilon": [137, 725], "miss": [137, 504, 528, 529, 530, 537, 725, 1086, 1110, 1111, 1112, 1119, 1273], "maxcount": [137, 725], "allow": [137, 140, 145, 221, 288, 321, 358, 461, 504, 515, 532, 725, 728, 733, 811, 878, 911, 948, 1018, 1029, 1043, 1086, 1097, 1114, 1276, 1317, 1322], "pass2": [137, 725], "retain": [137, 138, 139, 197, 199, 200, 201, 202, 203, 204, 725, 726, 727, 739, 786, 788, 789, 790, 791, 792, 793, 1263], "rm": [137, 725], "left": [137, 331, 368, 449, 503, 522, 725, 921, 958, 1085, 1104, 1230, 1281, 1283, 1316], "proxim": [137, 725], "side": [137, 725], "doubl": [137, 398, 725, 990, 1302], "captur": [137, 725], "suffici": [137, 504, 725, 1086], "good": [137, 138, 725, 726, 1316], "mingood": [137, 725], "ba_mincount": [137, 725], "neighbor": [137, 390, 447, 725, 982, 1028, 1313], "ba_edgecount": [137, 725], "usuccess": [137, 725], "radialvelvolum": [137, 725], "lastvelvolum": [137, 725], "unfoldedvolum": [137, 725], "sondvolum": [137, 725], "vr_corr": [137, 725], "due": [137, 153, 478, 484, 725, 744, 1034, 1060, 1066, 1250, 1276, 1311, 1316, 1319, 1322], "call": [137, 140, 168, 221, 222, 224, 229, 233, 234, 235, 236, 251, 252, 288, 289, 291, 296, 300, 301, 302, 321, 322, 324, 332, 333, 337, 338, 339, 358, 359, 361, 369, 370, 374, 375, 376, 393, 398, 401, 415, 725, 728, 811, 812, 814, 819, 823, 824, 825, 826, 841, 842, 878, 879, 881, 886, 890, 891, 892, 911, 912, 914, 922, 923, 927, 928, 929, 948, 949, 951, 959, 960, 964, 965, 966, 985, 990, 994, 1234, 1311, 1317, 1320, 1322], "long": [137, 158, 504, 526, 725, 749, 1086, 1108, 1310, 1317], "n": [137, 157, 211, 236, 278, 302, 311, 339, 348, 376, 518, 525, 725, 748, 801, 826, 868, 892, 901, 929, 938, 966, 1100, 1107, 1214, 1235, 1272, 1276, 1284, 1295, 1297, 1302, 1306, 1307, 1320, 1322], "jame": [137, 725], "houz": [137, 501, 537, 725, 969, 1083, 1119, 1302], "jr": [137, 501, 537, 725, 1083, 1119, 1302], "four": [137, 390, 391, 393, 725, 982, 983, 985, 1315], "dealis": [137, 725], "scheme": [137, 445, 501, 528, 725, 969, 1026, 1083, 1110, 1302], "2001": [137, 725], "18": [137, 456, 725, 1038, 1282, 1293, 1315], "1674": [137, 725], "ref_vel_field": [138, 726], "interval_split": [138, 726], "interval_limit": [138, 726], "skip_between_rai": [138, 726], "100": [138, 140, 201, 225, 230, 236, 292, 297, 302, 325, 339, 362, 376, 400, 461, 505, 518, 534, 541, 726, 728, 739, 790, 815, 820, 826, 882, 887, 892, 915, 929, 952, 966, 992, 1043, 1087, 1100, 1116, 1123, 1278, 1282, 1292, 1293, 1304, 1315], "skip_along_rai": [138, 726], "nyquist_vel": [138, 139, 726, 727, 1311], "check_nyquist_uniform": [138, 139, 452, 726, 727, 1033], "rays_wrap_around": [138, 139, 726, 727], "region": [138, 151, 264, 333, 370, 726, 741, 854, 923, 960, 1034, 1230, 1235, 1240, 1242, 1246, 1247, 1266, 1270, 1272, 1284, 1302, 1314, 1315, 1320], "similar": [138, 461, 726, 1043, 1276, 1313, 1315], "merg": [138, 173, 175, 182, 189, 194, 383, 690, 692, 699, 706, 711, 726, 762, 764, 771, 778, 783, 975, 1265, 1315, 1320], "pair": [138, 390, 401, 437, 726, 982, 994, 1002, 1007, 1013, 1309, 1315], "accomplish": [138, 394, 726, 986], "problem": [138, 150, 151, 305, 342, 447, 726, 740, 741, 895, 932, 1028, 1273], "reduct": [138, 726], "anchor": [138, 726], "onc": [138, 726, 1302, 1319, 1322], "complet": [138, 726], "simul": [138, 518, 726, 1100, 1257, 1307], "simulated_vel_from_profil": [138, 726, 1320], "segment": [138, 154, 155, 329, 330, 366, 367, 726, 745, 746, 919, 920, 956, 957], "split": [138, 726, 1240], "interv": [138, 176, 181, 190, 195, 197, 201, 693, 698, 707, 712, 726, 739, 765, 770, 779, 784, 786, 790, 1214, 1243, 1244], "larger": [138, 518, 726, 1100, 1250, 1302], "longer": [138, 154, 726, 745, 1307, 1319], "better": [138, 225, 230, 292, 297, 325, 334, 362, 371, 518, 726, 815, 820, 882, 887, 915, 924, 952, 961, 1100, 1265, 1311, 1315], "seem": [138, 726], "compromis": [138, 726], "artifact": [138, 726, 1311, 1313], "free": [138, 726, 1307], "cover": [138, 726], "entir": [138, 139, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 447, 726, 727, 812, 819, 823, 824, 825, 839, 845, 847, 857, 859, 861, 879, 886, 890, 891, 912, 922, 923, 927, 928, 949, 959, 960, 964, 965, 1028, 1259, 1260], "join": [138, 726, 1135], "gap": [138, 140, 145, 726, 728, 733, 1313], "connect": [138, 139, 726, 727], "disabl": [138, 139, 197, 199, 200, 201, 202, 203, 204, 726, 727, 739, 786, 788, 789, 790, 791, 792, 793], "across": [138, 726, 1301], "individu": [138, 139, 447, 726, 727, 1028], "ident": [138, 139, 387, 446, 726, 727, 979, 1027], "de": [138, 139, 368, 726, 727, 958, 1207, 1208], "alias": [138, 139, 503, 726, 727, 1085, 1207, 1208, 1311, 1315, 1317], "corr_vel": [138, 139, 726, 727, 1315], "unwrap_unit": [139, 727], "skip_check": [139, 727], "multi": [139, 540, 727, 1122, 1265], "unwrap": [139, 150, 151, 727, 740, 741], "independ": [139, 727], "often": [139, 727, 1034], "give": [139, 154, 398, 727, 745, 990, 1230, 1307, 1311, 1314], "superior": [139, 727], "lower": [139, 249, 251, 252, 253, 255, 257, 267, 269, 271, 449, 504, 727, 839, 841, 842, 843, 845, 847, 857, 859, 861, 1086, 1277, 1278, 1315], "contamin": [139, 532, 537, 727, 1114, 1119, 1235], "clutter": [139, 459, 518, 526, 527, 727, 1041, 1100, 1108, 1109, 1230, 1236, 1248, 1311, 1314], "poor": [139, 727], "verif": [139, 727], "appropi": [139, 221, 288, 321, 358, 727, 811, 878, 911, 948, 1229], "offer": [139, 727], "extrem": [139, 248, 727, 838, 1316], "miguel": [139, 727], "arevallilo": [139, 727], "herraez": [139, 727], "david": [139, 727], "burton": [139, 727], "michael": [139, 727], "lalor": [139, 727], "munther": [139, 727], "gdeisat": [139, 727], "fast": [139, 727, 1316], "two": [139, 158, 248, 249, 400, 445, 495, 497, 501, 523, 524, 537, 727, 749, 838, 839, 992, 1026, 1077, 1079, 1083, 1105, 1106, 1119, 1218, 1220, 1250, 1251, 1253, 1254, 1270, 1275, 1280, 1282, 1297, 1310, 1313, 1315, 1320], "sort": [139, 557, 727, 1315], "reliabl": [139, 727, 1315], "noncontinu": [139, 727], "optic": [139, 518, 727, 1100], "vol": [139, 456, 466, 474, 483, 496, 727, 1038, 1048, 1056, 1065, 1078], "41": [139, 727, 1300, 1313, 1315], "2002": [139, 727], "7437": [139, 727], "abdul": [139, 727], "rahman": [139, 727], "osten": [139, 727], "gorecki": [139, 727], "l": [139, 150, 151, 226, 230, 231, 264, 293, 297, 298, 326, 335, 363, 370, 372, 727, 740, 741, 816, 820, 821, 854, 883, 887, 888, 916, 925, 953, 960, 962, 1240, 1284], "novak": [139, 727], "ed": [139, 727], "metrologi": [139, 727], "2005": [139, 501, 727, 1083, 1302], "32": [139, 483, 727, 1065, 1230, 1281, 1285, 1286, 1287, 1297, 1300, 1305, 1315, 1316, 1317], "intern": [139, 461, 504, 727, 1043, 1086], "societi": [139, 727, 1034], "photon": [139, 727], "label_dict": [140, 145, 728, 733], "delta": [140, 145, 529, 728, 733, 1111], "despeckl": [140, 728], "identifi": [140, 145, 501, 503, 728, 733, 969, 1083, 1085, 1229, 1230, 1284, 1302, 1314], "small": [140, 145, 501, 504, 516, 537, 728, 733, 1083, 1086, 1098, 1119, 1248, 1276, 1292], "investig": [140, 145, 535, 728, 733, 1117, 1272], "well": [140, 197, 199, 200, 201, 202, 203, 204, 370, 390, 392, 447, 503, 543, 728, 739, 786, 788, 789, 790, 791, 792, 793, 960, 982, 984, 1028, 1029, 1085, 1273, 1282, 1307, 1313, 1314, 1315, 1316], "variou": [140, 169, 197, 198, 199, 200, 201, 202, 203, 204, 686, 728, 739, 758, 786, 787, 788, 789, 790, 791, 792, 793, 1234, 1265, 1270, 1299, 1307], "scipi": [140, 145, 467, 486, 528, 728, 733, 1049, 1068, 1110, 1257, 1265, 1292, 1293, 1307, 1319, 1320, 1322], "core": [140, 145, 398, 447, 501, 529, 530, 728, 733, 969, 990, 1018, 1028, 1083, 1111, 1112, 1234, 1302, 1316, 1320], "queri": [140, 145, 447, 728, 733, 1028], "speckl": [140, 728, 1302], "find_object": [140, 728], "tupl": [140, 145, 222, 224, 227, 228, 229, 232, 233, 234, 235, 236, 238, 249, 251, 255, 257, 267, 269, 271, 289, 291, 294, 295, 296, 299, 300, 301, 302, 304, 322, 324, 327, 328, 332, 333, 336, 337, 338, 339, 341, 359, 361, 364, 365, 369, 370, 373, 374, 375, 376, 378, 437, 445, 447, 461, 523, 524, 728, 733, 812, 814, 817, 818, 819, 822, 823, 824, 825, 826, 828, 839, 841, 845, 847, 857, 859, 861, 879, 881, 884, 885, 886, 889, 890, 891, 892, 894, 912, 914, 917, 918, 922, 923, 926, 927, 928, 929, 931, 949, 951, 954, 955, 959, 960, 963, 964, 965, 966, 968, 1002, 1013, 1026, 1028, 1029, 1043, 1105, 1106, 1197, 1252], "contigu": [140, 145, 728, 733], "perman": [140, 728], "altern": [141, 447, 729, 1028, 1034, 1302, 1315], "suitabl": [141, 142, 143, 144, 207, 243, 259, 274, 307, 344, 534, 729, 730, 731, 732, 797, 833, 849, 864, 897, 934, 1116], "phidp0_dict": [141, 729], "first_gates_dict": [141, 729], "700": [142, 143, 154, 155, 156, 534, 730, 731, 745, 746, 747, 1116], "quantil": [142, 461, 505, 730, 1043, 1087], "rhohv_rain_dict": [142, 730], "rhohvmin": [143, 144, 731, 732], "phidpmax": [143, 144, 731, 732], "elmax": [143, 144, 197, 532, 731, 732, 786, 1114, 1242], "undesir": [143, 144, 198, 199, 200, 201, 202, 203, 204, 447, 731, 732, 739, 787, 788, 789, 790, 791, 792, 793, 1028], "moder": [143, 731], "zdr_prec_dict": [143, 731], "compli": [143, 144, 731, 732, 1242], "30": [144, 148, 150, 151, 461, 474, 476, 483, 501, 532, 732, 737, 740, 741, 1043, 1056, 1058, 1065, 1083, 1114, 1230, 1276, 1283, 1287, 1289, 1302, 1311, 1315], "snrmin": [144, 732], "snrmax": [144, 732], "kept_valu": [144, 198, 732, 787], "kdpmax": [144, 732], "tempmin": [144, 732], "tempmax": [144, 732], "hydro_field": [144, 154, 155, 156, 507, 525, 533, 732, 745, 746, 747, 1089, 1107, 1115, 1316], "kdp_field": [144, 150, 151, 155, 502, 507, 508, 510, 511, 525, 526, 527, 528, 529, 530, 732, 740, 741, 746, 1084, 1089, 1090, 1092, 1093, 1107, 1108, 1109, 1110, 1111, 1112, 1303, 1316], "snow": [144, 457, 501, 507, 732, 1039, 1083, 1089, 1240, 1284, 1302, 1303, 1316], "hydrometeor": [144, 154, 155, 156, 198, 398, 461, 502, 505, 507, 525, 533, 538, 732, 745, 746, 747, 787, 990, 1043, 1084, 1087, 1089, 1107, 1115, 1120, 1270, 1299, 1311], "classif": [144, 154, 155, 156, 198, 501, 502, 507, 525, 533, 537, 732, 745, 746, 747, 787, 969, 1083, 1084, 1089, 1107, 1115, 1119, 1270, 1299], "differneti": [144, 732], "zdr_snow_dict": [144, 732], "label": [145, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 294, 295, 296, 299, 300, 301, 302, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 327, 328, 331, 332, 333, 336, 337, 338, 339, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 368, 369, 370, 373, 374, 375, 376, 461, 733, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 817, 818, 819, 822, 823, 824, 825, 826, 837, 839, 841, 842, 843, 845, 847, 855, 857, 859, 861, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 880, 881, 884, 885, 886, 889, 890, 891, 892, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 917, 918, 921, 922, 923, 926, 927, 928, 929, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 954, 955, 958, 959, 960, 963, 964, 965, 966, 1043, 1263, 1265, 1276, 1282, 1283, 1292, 1293, 1297, 1303, 1316], "account": [145, 152, 733, 742, 1265], "examin": [145, 380, 394, 397, 733, 972, 986, 989, 1320], "box": [145, 398, 733, 990, 1303, 1315, 1316], "alwai": [145, 381, 394, 501, 528, 532, 733, 973, 986, 1083, 1110, 1114, 1265, 1307], "occur": [145, 177, 196, 390, 391, 694, 713, 733, 766, 785, 982, 983, 1311, 1315, 1317], "readi": [145, 733], "min_temp": [146, 203, 735, 792], "max_h_iso0": [146, 199, 735, 788], "beamwidth": [146, 153, 163, 199, 203, 236, 302, 339, 376, 477, 518, 534, 735, 744, 754, 788, 792, 826, 892, 929, 966, 1059, 1100, 1116], "construct": [146, 182, 194, 447, 534, 699, 711, 735, 771, 783, 1028, 1116], "beyond": [146, 197, 543, 735, 786, 1248, 1249, 1319], "extent": [146, 518, 735, 1100, 1278], "reach": [146, 735], "mask_fzl": [146, 735], "end_gate_arr": [146, 735], "delev_max": [147, 148, 149, 736, 737, 738], "dazim_max": [147, 148, 149, 736, 737, 738], "elmin": [147, 148, 149, 197, 532, 736, 737, 738, 786, 1114, 1242], "rmin": [147, 197, 470, 489, 532, 736, 786, 1052, 1071, 1114, 1242], "50000": [147, 483, 736, 1065, 1278, 1282, 1302, 1313], "hmin": [147, 736, 1242], "10000": [147, 236, 264, 302, 339, 370, 376, 461, 466, 474, 483, 496, 499, 536, 541, 736, 826, 854, 892, 929, 960, 966, 1043, 1048, 1056, 1065, 1078, 1081, 1118, 1123, 1282, 1302, 1313], "nbins_min": [147, 148, 475, 736, 737, 1057], "attg": [147, 148, 149, 478, 484, 519, 736, 737, 738, 1060, 1066, 1101], "max_std_pwr": [147, 475, 736, 1057], "max_std_zdr": [147, 148, 736, 737], "sun_posit": [147, 148, 149, 736, 737, 738], "pwrh_field": [147, 148, 149, 736, 737, 738], "pwrv_field": [147, 148, 149, 736, 737, 738], "suspect": [147, 148, 149, 197, 736, 737, 738, 786], "sun": [147, 148, 149, 152, 153, 160, 161, 162, 163, 164, 734, 736, 737, 738, 742, 743, 744, 751, 752, 753, 754, 755], "hit": [147, 148, 149, 164, 734, 736, 737, 738, 743, 755, 1320], "detect": [147, 148, 149, 163, 503, 504, 532, 534, 736, 737, 738, 754, 1085, 1086, 1114, 1116, 1235, 1287, 1302, 1311, 1316], "hildebrand": [147, 456, 470, 475, 489, 736, 1038, 1052, 1057, 1071, 1229], "sekhon": [147, 470, 475, 489, 736, 1052, 1057, 1071, 1229], "higher": [147, 225, 230, 292, 297, 325, 334, 362, 371, 736, 815, 820, 882, 887, 915, 924, 952, 961, 1311, 1313], "ga": [147, 148, 149, 450, 478, 484, 519, 736, 737, 738, 1031, 1060, 1066, 1101], "wai": [147, 148, 149, 450, 474, 478, 484, 503, 518, 519, 535, 736, 737, 738, 1031, 1056, 1060, 1066, 1085, 1100, 1101, 1117, 1276, 1309, 1315, 1320, 1322], "pysolar": [147, 148, 149, 162, 736, 737, 738, 753], "sun_hit": [147, 148, 149, 164, 736, 737, 738, 755], "new_radar": [147, 148, 736, 737, 1310], "npulses_rai": [148, 476, 737, 1058], "ivic": [148, 476, 737, 1058, 1230, 1237, 1246, 1248, 1249], "2003": [148, 737, 1302], "instead": [148, 251, 398, 476, 737, 841, 990, 1058, 1273, 1302, 1307, 1313, 1319, 1320, 1322], "7": [148, 160, 163, 200, 388, 476, 540, 737, 751, 754, 789, 980, 1058, 1122, 1230, 1239, 1262, 1282, 1284, 1296, 1307, 1314, 1316, 1317, 1319, 1320], "noise_thr": [149, 738], "simpl": [149, 503, 738, 1018, 1085, 1310, 1311], "self_const": [150, 151, 740, 741], "60000": [150, 151, 740, 741, 1278, 1282, 1313], "low_z": [150, 151, 740, 741], "high_z": [150, 151, 740, 741], "min_phidp": [150, 151, 740, 741], "01": [150, 151, 331, 368, 461, 528, 740, 741, 921, 958, 1043, 1110, 1235, 1250, 1269, 1281, 1298, 1318], "min_ncp": [150, 201, 739, 740, 790], "min_rhv": [150, 200, 201, 739, 740, 789, 790], "sys_phas": [150, 740], "overide_sys_phas": [150, 740], "nowrap": [150, 151, 740, 741], "really_verbos": [150, 151, 740, 741], "lp_solver": [150, 151, 740, 741], "cylp": [150, 151, 740, 741, 1307, 1319, 1322], "unf_field": [150, 151, 740, 741], "window_len": [150, 151, 157, 740, 741, 748], "proc": [150, 151, 528, 740, 741, 1110], "coef": [150, 151, 740, 741], "914": [150, 151, 740, 741], "lp": [150, 151, 740, 741, 1307], "consist": [150, 151, 154, 155, 156, 740, 741, 745, 746, 747, 1265, 1313], "low": [150, 151, 152, 153, 160, 163, 390, 528, 740, 741, 742, 744, 751, 754, 982, 1110, 1284, 1315], "high": [150, 151, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 528, 740, 741, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1110, 1303, 1316], "copolar": [150, 151, 502, 504, 525, 532, 740, 741, 1084, 1086, 1107, 1114, 1301], "automat": [150, 394, 399, 400, 447, 452, 518, 532, 537, 740, 986, 991, 992, 1028, 1033, 1100, 1114, 1119, 1287, 1307, 1320], "lpx": [150, 151, 740, 741], "messag": [150, 151, 239, 258, 390, 740, 741, 829, 848, 982, 1273], "suppress": [150, 151, 528, 740, 741, 1110], "pyglpk": [150, 151, 740, 741, 1307, 1319], "cvxopt": [150, 151, 740, 741, 1307, 1319], "cylp_mp": [150, 151, 740, 741], "modul": [150, 151, 740, 741, 1202, 1264, 1272, 1273, 1307, 1310, 1311, 1313, 1314, 1317, 1319, 1320], "solv": [150, 151, 740, 741], "horizon": [150, 151, 502, 525, 532, 740, 741, 1084, 1107, 1114], "sobel": [150, 151, 740, 741], "worker": [150, 151, 740, 741], "link": [150, 151, 546, 740, 741, 1316], "1z": [150, 151, 740, 741], "reproc_phas": [150, 151, 740, 741], "sob_kdp": [150, 151, 740, 741], "recalcul": [150, 151, 518, 740, 741, 1100, 1309], "giangrand": [150, 151, 532, 740, 741, 1114], "mcgraw": [150, 151, 740, 741], "lei": [150, 151, 740, 741], "applic": [150, 151, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 501, 740, 741, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 990, 1083, 1256, 1320], "program": [150, 151, 518, 740, 741, 1100, 1307, 1320], "atmo": [150, 151, 525, 535, 740, 741, 1107, 1117, 1240, 1284, 1320], "tech": [150, 151, 525, 740, 741, 1107, 1240, 1284], "2013": [150, 151, 476, 529, 535, 740, 741, 1058, 1111, 1117, 1230, 1317], "1716": [150, 151, 740, 741], "system_phas": [151, 741], "ncpt": [151, 741], "first_gate_sysp": [151, 741], "carri": [151, 741], "smaller": [151, 370, 518, 741, 960, 1100, 1250, 1302, 1320], "off": [151, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 524, 741, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1106, 1281, 1302], "ptoa": [152, 742], "wavelen": [152, 160, 163, 742, 751, 754], "antenna_gain": [152, 163, 478, 742, 754, 1060], "coeff_band": [152, 163, 742, 754], "solar": [152, 160, 163, 742, 751, 754], "flux": [152, 160, 163, 742, 751, 754], "amospher": [152, 742], "wavelength": [152, 160, 163, 518, 742, 751, 754, 1100], "bandwidth": [152, 163, 742, 754], "s0": [152, 160, 742, 751], "10e": [152, 160, 163, 742, 751, 754], "m2": [152, 160, 163, 742, 751, 754], "hz": [152, 160, 163, 450, 477, 478, 519, 520, 742, 751, 754, 1031, 1059, 1060, 1101, 1102, 1290], "altub": [152, 153, 160, 163, 742, 744, 751, 754], "bech": [152, 153, 160, 163, 742, 744, 751, 754], "o": [152, 153, 160, 163, 398, 742, 744, 751, 754, 990, 1135, 1283, 1307, 1319, 1320], "argemi": [152, 153, 160, 163, 742, 744, 751, 754], "t": [152, 153, 160, 163, 398, 402, 474, 501, 504, 528, 529, 532, 534, 535, 541, 742, 744, 751, 754, 990, 1056, 1083, 1086, 1110, 1111, 1114, 1116, 1117, 1123, 1276, 1302, 1307, 1309, 1316], "rigo": [152, 153, 160, 163, 742, 744, 751, 754], "2015": [152, 153, 160, 163, 506, 535, 742, 744, 751, 754, 1088, 1117], "align": [152, 153, 160, 163, 742, 744, 751, 754], "midrang": [152, 153, 160, 163, 742, 744, 751, 754], "angle_step": [153, 163, 744, 754], "fact": [153, 528, 530, 744, 1110, 1112], "la": [153, 744], "zdr_kdpzh_dict": [154, 155, 156, 745, 746, 747], "min_rhohv": [154, 155, 156, 745, 746, 747], "92": [154, 155, 156, 264, 745, 746, 747, 854, 1290], "filter_rain": [154, 155, 156, 745, 746, 747], "max_phidp": [154, 155, 156, 745, 746, 747], "smooth_wind_len": [154, 155, 156, 745, 746, 747], "dphidp_min": [154, 745], "dphidp_max": [154, 745], "parametr": [154, 155, 156, 745, 746, 747], "check_wet_radom": [154, 155, 745, 746], "wet_radome_refl": [154, 155, 745, 746], "wet_radome_len_min": [154, 155, 745, 746], "wet_radome_len_max": [154, 155, 745, 746], "wet_radome_ngates_min": [154, 155, 745, 746], "valid_gates_onli": [154, 745], "keep_point": [154, 155, 745, 746], "kdp_wind_len": [154, 745], "12": [154, 745, 1272, 1283, 1290, 1310, 1314, 1315, 1317], "tabl": [154, 155, 156, 398, 745, 746, 747, 990, 1246, 1248, 1249], "zh": [154, 155, 156, 557, 558, 745, 746, 747, 1316], "curv": [154, 155, 156, 745, 746, 747, 1302], "wolfensberg": [154, 155, 156, 504, 745, 746, 747, 1086, 1303, 1304], "louf": [154, 155, 156, 745, 746, 747], "gorgucci": [154, 155, 156, 745, 746, 747], "vaccarono": [154, 155, 156, 745, 746, 747], "kdpsim_field": [154, 155, 156, 745, 746, 747], "phidpsim_field": [154, 155, 156, 745, 746, 747], "closest": [154, 155, 383, 466, 474, 483, 496, 499, 745, 746, 975, 1018, 1048, 1056, 1065, 1078, 1081], "radom": [154, 155, 478, 484, 745, 746, 1060, 1066], "close": [154, 155, 380, 516, 528, 745, 746, 972, 1098, 1110, 1316], "wet": [154, 155, 745, 746, 1303, 1316], "mim": [154, 155, 745, 746], "disk": [154, 155, 745, 746], "around": [154, 155, 446, 497, 501, 504, 745, 746, 1027, 1079, 1083, 1086, 1214, 1239, 1277, 1292, 1295, 1302, 1309, 1311, 1315, 1316], "decid": [154, 155, 534, 745, 746, 1116], "That": [154, 745], "total": [154, 518, 528, 529, 530, 745, 1100, 1110, 1111, 1112, 1269, 1274, 1279, 1298, 1305, 1306, 1318], "further": [154, 155, 745, 746, 1234], "analysi": [154, 155, 445, 745, 746, 1026, 1234], "least": [154, 501, 526, 527, 745, 1083, 1108, 1109, 1302], "refl_bias_dict": [154, 155, 745, 746], "selfconsistency_dict": [154, 155, 745, 746], "keep_poinst": [154, 155, 745, 746], "measur": [154, 155, 160, 163, 451, 501, 506, 515, 516, 525, 528, 529, 530, 745, 746, 751, 754, 1029, 1032, 1083, 1088, 1097, 1098, 1107, 1110, 1111, 1112, 1302, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1320], "min_zdr": [155, 746], "bias_per_g": [155, 746], "kdp_data_dict": [155, 746], "selfconsist": [156, 747], "privat": [156, 401, 747, 1320], "kdp_sim_dict": [156, 747], "phidp_sim_dict": [156, 747], "raw_data": [157, 748], "wind_len": [157, 159, 527, 748, 750, 1109], "min_valid": [157, 159, 527, 748, 750, 1109], "wind_typ": [157, 748], "median": [157, 461, 466, 474, 483, 496, 505, 748, 1043, 1048, 1056, 1065, 1078, 1087, 1217, 1219, 1230], "less": [157, 447, 501, 530, 748, 1028, 1083, 1112, 1240, 1302, 1315, 1316], "move": [157, 158, 159, 165, 166, 168, 200, 472, 488, 491, 492, 518, 526, 527, 748, 749, 750, 789, 1054, 1070, 1073, 1074, 1100, 1108, 1109, 1229, 1276, 1315, 1320], "data_smooth": [157, 748], "swind_len": [158, 526, 749, 1108], "smin_valid": [158, 526, 749, 1108], "lwind_len": [158, 526, 749, 1108], "lmin_valid": [158, 526, 749, 1108], "zthr": [158, 526, 749, 1108], "short": [158, 526, 749, 1108, 1320], "solar_flux": [160, 163, 751, 754], "cm": [160, 163, 498, 751, 754, 1080, 1293], "dt": [161, 162, 752, 753, 1268], "lat_deg": [161, 752], "lon_deg": [161, 752], "refract": [161, 518, 752, 1100], "boolean": [161, 164, 169, 175, 189, 501, 516, 546, 557, 558, 572, 573, 686, 692, 706, 734, 752, 755, 758, 764, 778, 969, 1083, 1098, 1314], "elev_sun": [161, 752], "azim_sun": [161, 752], "sensor": [161, 162, 752, 753], "el": [162, 516, 753, 1098, 1215, 1216, 1315], "az": [162, 398, 753, 990, 1290, 1291], "would": [163, 754, 1034, 1230, 1272, 1273, 1311, 1313, 1320], "without": [163, 233, 300, 337, 374, 459, 475, 754, 823, 890, 927, 964, 1041, 1057, 1197, 1209, 1252, 1319], "characterist": [163, 754, 1313], "pwr_det": [163, 754], "az_rad": [164, 755], "az_sun": [164, 755], "el_rad": [164, 755], "el_sun": [164, 755], "sun_hit_std": [164, 755], "az_width_co": [164, 755], "el_width_co": [164, 755], "az_width_cross": [164, 755], "el_width_cross": [164, 755], "is_zdr": [164, 755], "val": [164, 743, 755], "val_std": [164, 743, 755], "az_bia": [164, 743, 755], "el_bia": [164, 743, 755], "az_width": [164, 743, 755], "el_width": [164, 743, 755], "nhit": [164, 755], "par": [164, 734, 743, 755], "gaussian": [164, 472, 488, 491, 492, 536, 734, 743, 755, 1054, 1070, 1073, 1074, 1118, 1201, 1292], "fit": [164, 734, 743, 755], "warn": [165, 166, 168, 394, 397, 986, 989, 1248, 1265, 1276, 1313, 1315, 1316], "categori": [165, 166, 1316], "old_nam": 168, "new_nam": 168, "alia": [168, 1207, 1208], "namespac": [168, 589], "wrapper": [168, 1307], "deprecatedfunctionnam": 168, "exclude_bas": [169, 686, 758], "exclude_below": [169, 686, 758, 1276, 1301, 1314, 1316], "suggest": [169, 686, 758], "gate_exclud": [169, 686, 758, 1314], "gate_includ": [169, 686, 758, 1314], "lost": [169, 530, 686, 758, 1112, 1263, 1313], "again": [169, 686, 758, 1265, 1273, 1283, 1319], "import": [169, 535, 540, 541, 686, 758, 1117, 1122, 1123, 1135, 1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319], "io": [169, 445, 543, 686, 758, 1026, 1267, 1268, 1272, 1273, 1274, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1307, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1322], "radar_fil": [169, 573, 686, 758, 1268, 1281, 1283], "nc": [169, 686, 758, 1267, 1276, 1278, 1281, 1282, 1283, 1287, 1289, 1290, 1291, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1309, 1310, 1314, 1316], "normalized_coherent_pow": [169, 686, 758, 1314], "exclude_mask": [171, 173, 174, 175, 176, 177, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 688, 690, 691, 692, 693, 694, 697, 698, 699, 702, 704, 705, 706, 707, 709, 710, 711, 712, 713, 760, 762, 763, 764, 765, 766, 769, 770, 771, 774, 776, 777, 778, 779, 781, 782, 783, 784, 785, 1277], "op": [171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 688, 690, 691, 692, 693, 694, 695, 697, 698, 699, 702, 704, 705, 706, 707, 709, 710, 711, 712, 713, 760, 762, 763, 764, 765, 766, 767, 769, 770, 771, 774, 776, 777, 778, 779, 781, 782, 783, 784, 785], "inclus": [171, 173, 176, 181, 185, 187, 190, 195, 445, 447, 688, 690, 693, 698, 702, 704, 707, 712, 760, 762, 765, 770, 774, 776, 779, 784, 1026, 1028, 1197, 1281], "exclus": [173, 690, 762], "AND": [173, 175, 182, 189, 194, 690, 692, 699, 706, 711, 762, 764, 771, 778, 783], "OR": [173, 175, 182, 189, 194, 690, 692, 699, 706, 711, 762, 764, 771, 778, 783], "gener": [173, 175, 182, 189, 194, 206, 207, 208, 209, 210, 211, 222, 224, 229, 232, 233, 234, 235, 236, 243, 244, 245, 246, 249, 251, 252, 253, 255, 257, 259, 260, 261, 262, 267, 269, 271, 273, 274, 275, 276, 277, 278, 289, 291, 296, 299, 300, 301, 302, 306, 307, 308, 309, 310, 311, 322, 324, 332, 333, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 359, 361, 369, 370, 373, 374, 375, 376, 397, 400, 402, 446, 447, 517, 518, 528, 536, 538, 690, 692, 699, 706, 711, 762, 764, 771, 778, 783, 796, 797, 798, 799, 800, 801, 812, 814, 819, 822, 823, 824, 825, 826, 833, 834, 835, 836, 839, 841, 842, 843, 845, 847, 849, 850, 851, 852, 857, 859, 861, 863, 864, 865, 866, 867, 868, 879, 881, 886, 889, 890, 891, 892, 896, 897, 898, 899, 900, 901, 912, 914, 922, 923, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 949, 951, 959, 960, 963, 964, 965, 966, 989, 992, 1007, 1018, 1027, 1028, 1029, 1099, 1100, 1110, 1118, 1120, 1270, 1272, 1281, 1307], "here": [173, 175, 182, 189, 194, 264, 690, 692, 699, 706, 711, 762, 764, 771, 778, 783, 854, 1276, 1302, 1307, 1309, 1314, 1315, 1316, 1319, 1322], "previous": [173, 175, 182, 189, 194, 690, 692, 699, 706, 711, 762, 764, 771, 778, 783, 1272, 1302, 1316], "becaus": [173, 175, 182, 528, 690, 692, 699, 762, 764, 771, 1110, 1302, 1315, 1316, 1322], "invalid": [173, 175, 177, 182, 197, 199, 200, 201, 202, 203, 204, 690, 692, 694, 699, 734, 739, 762, 764, 766, 771, 786, 788, 789, 790, 791, 792, 793], "v1": [176, 181, 190, 195, 693, 698, 707, 712, 765, 770, 779, 784, 1319], "v2": [176, 181, 190, 195, 693, 698, 707, 712, 765, 770, 779, 784, 1320], "insid": [176, 190, 533, 693, 707, 765, 779, 1115, 1310], "inf": [177, 196, 197, 201, 694, 713, 739, 766, 785, 786, 790], "outsid": [181, 195, 197, 201, 229, 232, 234, 235, 249, 251, 252, 253, 255, 257, 267, 269, 271, 296, 299, 301, 332, 333, 336, 338, 369, 370, 373, 375, 483, 484, 698, 712, 739, 770, 784, 786, 790, 819, 822, 824, 825, 839, 841, 842, 843, 845, 847, 857, 859, 861, 886, 889, 891, 922, 923, 926, 928, 959, 960, 963, 965, 1065, 1066, 1320], "trans_valu": [182, 194, 699, 711, 771, 783], "max_zdr": [197, 786], "max_rhv": [197, 786], "min_refl": [197, 201, 739, 786, 790], "max_refl": [197, 201, 739, 786, 790], "vel_lim": [197, 786], "2000": [197, 541, 786, 1123, 1277, 1313], "25000": [197, 451, 786, 1032, 1313], "85": [197, 200, 786, 789, 1315], "bird": [197, 458, 786, 1040], "criteria": [197, 198, 199, 200, 201, 202, 203, 204, 447, 528, 537, 739, 786, 787, 788, 789, 790, 791, 792, 793, 1028, 1110, 1119, 1242], "built": [197, 198, 199, 200, 201, 202, 203, 204, 446, 447, 739, 786, 787, 788, 789, 790, 791, 792, 793, 1027, 1028], "highest": [197, 200, 252, 786, 789, 842], "lowest": [197, 199, 200, 201, 202, 203, 204, 531, 739, 786, 788, 789, 790, 791, 792, 793, 1034, 1113, 1272, 1276, 1300, 1302], "greatest": [197, 201, 739, 786, 790], "400": [199, 203, 788, 792, 1309], "primarili": [199, 203, 788, 792], "phi_field": [200, 789], "textzdr_field": [200, 789], "textrhv_field": [200, 789], "textphi_field": [200, 789], "textrefl_field": [200, 789], "wind_siz": [200, 452, 789, 1033, 1262, 1311], "max_textphi": [200, 789], "max_textrhv": [200, 789], "max_textzdr": [200, 789], "max_textrefl": [200, 789], "cross": [200, 201, 216, 218, 222, 225, 236, 248, 249, 283, 285, 289, 292, 302, 316, 318, 322, 325, 339, 353, 355, 359, 362, 376, 458, 477, 478, 518, 739, 789, 790, 806, 808, 812, 815, 826, 838, 839, 873, 875, 879, 882, 892, 906, 908, 912, 915, 929, 943, 945, 949, 952, 966, 1040, 1059, 1060, 1100, 1222, 1223, 1265, 1270, 1280, 1289, 1302, 1315, 1317], "min_rhi": [201, 739, 790], "min_snr": [202, 791], "max_snr": [202, 791], "min_vi": [204, 793], "displai": [205, 222, 224, 229, 233, 234, 235, 236, 238, 272, 289, 291, 296, 300, 301, 302, 304, 305, 322, 324, 332, 333, 337, 338, 339, 341, 342, 359, 361, 369, 370, 374, 375, 376, 378, 398, 518, 540, 541, 795, 812, 814, 819, 823, 824, 825, 826, 828, 862, 879, 881, 886, 890, 891, 892, 894, 895, 912, 914, 922, 923, 927, 928, 929, 931, 932, 949, 951, 959, 960, 964, 965, 966, 968, 990, 1034, 1100, 1122, 1123, 1265, 1267, 1268, 1272, 1273, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1309, 1310, 1311, 1313, 1314, 1316, 1320], "airborn": [205, 795], "plot_var": [205, 272, 305, 342, 795, 862, 895, 932], "order": [205, 272, 305, 342, 394, 399, 400, 501, 525, 528, 532, 534, 795, 862, 895, 932, 969, 986, 991, 992, 1018, 1083, 1107, 1110, 1114, 1116, 1214, 1302, 1307, 1316, 1320], "cb": [205, 272, 305, 342, 795, 862, 895, 932, 1283], "colorbar": [205, 222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 258, 265, 267, 269, 271, 272, 289, 290, 291, 296, 299, 300, 301, 302, 305, 322, 323, 324, 332, 333, 336, 337, 338, 339, 342, 359, 360, 361, 369, 370, 373, 374, 375, 376, 795, 812, 813, 814, 819, 822, 823, 824, 825, 826, 837, 839, 841, 842, 843, 845, 847, 848, 855, 857, 859, 861, 862, 879, 880, 881, 886, 889, 890, 891, 892, 895, 912, 913, 914, 922, 923, 926, 927, 928, 929, 932, 949, 950, 951, 959, 960, 963, 964, 965, 966, 1270, 1276, 1280, 1281, 1297], "loc": [205, 272, 305, 342, 795, 862, 895, 932, 1282], "titl": [206, 208, 209, 210, 211, 222, 224, 229, 232, 233, 234, 235, 236, 244, 245, 246, 249, 251, 252, 253, 255, 257, 260, 261, 262, 267, 269, 271, 273, 275, 276, 277, 278, 289, 291, 296, 299, 300, 301, 302, 306, 308, 309, 310, 311, 322, 324, 332, 333, 336, 337, 338, 339, 343, 345, 346, 347, 348, 359, 361, 369, 370, 373, 374, 375, 376, 796, 798, 799, 800, 801, 812, 814, 819, 822, 823, 824, 825, 826, 834, 835, 836, 839, 841, 842, 843, 845, 847, 850, 851, 852, 857, 859, 861, 863, 865, 866, 867, 868, 879, 881, 886, 889, 890, 891, 892, 896, 898, 899, 900, 901, 912, 914, 922, 923, 926, 927, 928, 929, 933, 935, 936, 937, 938, 949, 951, 959, 960, 963, 964, 965, 966, 1267, 1268, 1276, 1283, 1285, 1286, 1288, 1290, 1291, 1295, 1315, 1316, 1317], "ext": [207, 243, 259, 274, 307, 344, 797, 833, 849, 864, 897, 934], "datetime_format": [207, 209, 274, 276, 307, 309, 344, 346, 797, 799, 864, 866, 897, 899, 934, 936], "use_sweep_tim": [207, 209, 274, 276, 307, 309, 344, 346, 797, 799, 864, 866, 897, 899, 934, 936], "form": [207, 224, 243, 259, 274, 291, 307, 324, 344, 361, 797, 814, 833, 849, 864, 881, 897, 914, 934, 951], "radar_name_field_sweep_tim": [207, 274, 307, 344, 797, 864, 897, 934], "extens": [207, 243, 259, 274, 307, 344, 398, 797, 833, 849, 864, 897, 934, 990, 1319], "strftime": [207, 209, 229, 233, 274, 276, 296, 300, 307, 309, 332, 337, 344, 346, 369, 374, 797, 799, 819, 823, 864, 866, 886, 890, 897, 899, 922, 927, 934, 936, 959, 964], "vpt": [210, 221, 235, 277, 288, 301, 310, 321, 338, 347, 358, 375, 800, 811, 825, 867, 878, 891, 900, 911, 928, 937, 948, 965, 1245], "ndarrai": [211, 236, 278, 302, 311, 339, 348, 376, 525, 576, 801, 826, 868, 892, 901, 929, 938, 966, 1107, 1219, 1239, 1317], "xaxi": [212, 215, 216, 279, 282, 283, 312, 315, 316, 349, 352, 353, 802, 805, 806, 869, 872, 873, 902, 905, 906, 939, 942, 943, 1283], "static": [213, 214, 225, 226, 230, 237, 238, 280, 281, 292, 293, 297, 303, 304, 313, 314, 325, 326, 340, 341, 350, 351, 362, 363, 377, 378, 803, 804, 815, 816, 820, 827, 828, 870, 871, 882, 883, 887, 893, 894, 903, 904, 915, 916, 930, 931, 940, 941, 952, 953, 967, 968, 1307], "yaxi": [213, 214, 217, 218, 219, 220, 280, 281, 284, 285, 286, 287, 313, 314, 317, 318, 319, 320, 350, 351, 354, 355, 356, 357, 803, 804, 807, 808, 809, 810, 870, 871, 874, 875, 876, 877, 903, 904, 907, 908, 909, 910, 940, 941, 944, 945, 946, 947], "custom": [221, 222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 288, 289, 290, 291, 296, 300, 301, 302, 321, 322, 323, 324, 332, 333, 337, 338, 339, 358, 359, 360, 361, 369, 370, 374, 375, 376, 429, 446, 756, 811, 812, 813, 814, 819, 823, 824, 825, 826, 837, 839, 841, 843, 845, 847, 855, 857, 859, 861, 878, 879, 880, 881, 886, 890, 891, 892, 911, 912, 913, 914, 922, 923, 927, 928, 929, 948, 949, 950, 951, 959, 960, 964, 965, 966, 1027, 1313], "plot_ppi": [221, 288, 321, 358, 811, 878, 911, 948, 1268, 1303, 1309, 1315, 1316], "plot_sweep_grid": [221, 811], "target_azimuth": [222, 289, 322, 359, 812, 879, 912, 949, 1222], "mask_tupl": [222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 812, 819, 822, 823, 824, 825, 826, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966], "norm": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 528, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1110, 1283, 1303, 1316], "cmap": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 990, 1276, 1281, 1282, 1283, 1284, 1288, 1291, 1293, 1295, 1296, 1301, 1302, 1310, 1311], "mask_outsid": [222, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 812, 819, 822, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966, 1290, 1291, 1316], "title_flag": [222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 812, 814, 819, 822, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 923, 926, 927, 928, 929, 949, 951, 959, 960, 963, 964, 965, 966, 1295], "axislabel": [222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 336, 337, 338, 339, 359, 361, 369, 373, 374, 375, 376, 812, 814, 819, 822, 823, 824, 825, 826, 839, 841, 845, 847, 857, 859, 861, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 926, 927, 928, 929, 949, 951, 959, 963, 964, 965, 966, 1285, 1290, 1291], "axislabels_flag": [222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 336, 337, 338, 339, 359, 361, 369, 373, 374, 375, 376, 812, 814, 819, 822, 823, 824, 825, 826, 839, 841, 845, 847, 857, 859, 861, 879, 881, 886, 889, 890, 891, 892, 912, 914, 922, 926, 927, 928, 929, 949, 951, 959, 963, 964, 965, 966, 1302], "colorbar_flag": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966], "colorbar_label": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1267, 1268, 1272, 1285, 1286, 1290, 1291, 1292, 1293, 1297, 1315, 1316], "colorbar_ori": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 337, 338, 339, 359, 361, 369, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 927, 928, 929, 949, 951, 959, 964, 965, 966], "reverse_xaxi": [222, 233, 289, 300, 322, 337, 359, 374, 812, 823, 879, 890, 912, 927, 949, 964], "fig": [222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 299, 300, 301, 302, 322, 323, 324, 332, 333, 336, 337, 338, 339, 359, 360, 361, 369, 370, 373, 374, 375, 376, 812, 813, 814, 819, 822, 823, 824, 825, 826, 837, 839, 841, 842, 843, 845, 847, 855, 857, 859, 861, 879, 880, 881, 886, 889, 890, 891, 892, 912, 913, 914, 922, 923, 926, 927, 928, 929, 949, 950, 951, 959, 960, 963, 964, 965, 966, 1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1301, 1303, 1304, 1311, 1313, 1314, 1315, 1316], "tick": [222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 333, 337, 338, 339, 359, 360, 361, 369, 370, 374, 375, 376, 812, 813, 814, 819, 823, 824, 825, 826, 837, 839, 841, 843, 845, 847, 855, 857, 859, 861, 879, 880, 881, 886, 890, 891, 892, 912, 913, 914, 922, 923, 927, 928, 929, 949, 950, 951, 959, 960, 964, 965, 966, 1281, 1283, 1302, 1303, 1316], "ticklab": [222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 333, 337, 338, 339, 359, 360, 361, 369, 370, 374, 375, 376, 812, 813, 814, 819, 823, 824, 825, 826, 837, 839, 841, 843, 845, 847, 855, 857, 859, 861, 879, 880, 881, 886, 890, 891, 892, 912, 913, 914, 922, 923, 927, 928, 929, 949, 950, 951, 959, 960, 964, 965, 966, 1302, 1303, 1316], "raster": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 518, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 990, 1100, 1265], "pseudo": [222, 289, 322, 359, 532, 812, 879, 912, 949, 1114, 1315], "associ": [222, 289, 322, 359, 812, 879, 912, 949, 1007], "matplotlib": [222, 224, 227, 228, 229, 233, 234, 235, 236, 249, 250, 251, 253, 255, 257, 266, 267, 269, 271, 289, 291, 294, 295, 296, 300, 301, 302, 322, 324, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 398, 812, 814, 817, 818, 819, 823, 824, 825, 826, 839, 840, 841, 843, 845, 847, 856, 857, 859, 861, 879, 881, 884, 885, 886, 890, 891, 892, 912, 914, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 929, 949, 951, 954, 955, 956, 957, 958, 959, 960, 961, 964, 965, 966, 990, 1265, 1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1319, 1322], "pcolormesh": [222, 224, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1276, 1292, 1302, 1315], "ncp": [222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 812, 819, 822, 823, 824, 825, 826, 879, 886, 889, 890, 891, 892, 912, 922, 923, 926, 927, 928, 929, 949, 959, 960, 963, 964, 965, 966], "lumin": [222, 224, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 839, 841, 842, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966], "west": [222, 233, 289, 300, 322, 337, 359, 374, 812, 823, 879, 890, 912, 927, 949, 964, 1029, 1285, 1315, 1316], "leav": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 839, 841, 843, 845, 847, 857, 859, 861, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966], "orient": [222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 337, 338, 339, 359, 360, 361, 369, 374, 375, 376, 812, 813, 814, 819, 823, 824, 825, 826, 837, 839, 841, 843, 845, 847, 855, 857, 859, 861, 879, 880, 881, 886, 890, 891, 892, 912, 913, 914, 922, 927, 928, 929, 949, 950, 951, 959, 964, 965, 966, 1303, 1304, 1315, 1316], "treat": [222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 812, 819, 823, 824, 825, 839, 845, 847, 857, 859, 861, 879, 886, 890, 891, 912, 922, 923, 927, 928, 949, 959, 960, 964, 965], "themselv": [222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 812, 819, 823, 824, 825, 839, 845, 847, 857, 859, 861, 879, 886, 890, 891, 912, 922, 923, 927, 928, 949, 959, 960, 964, 965], "figur": [222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 299, 300, 301, 302, 322, 323, 324, 332, 333, 336, 337, 338, 339, 359, 360, 361, 369, 370, 373, 374, 375, 376, 812, 813, 814, 819, 822, 823, 824, 825, 826, 837, 839, 841, 842, 843, 845, 847, 855, 857, 859, 861, 879, 880, 881, 886, 889, 890, 891, 892, 912, 913, 914, 922, 923, 926, 927, 928, 929, 949, 950, 951, 959, 960, 963, 964, 965, 966, 1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1301, 1302, 1310, 1311, 1313, 1314, 1315, 1316], "render": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966], "rather": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966], "larg": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 528, 537, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1110, 1119, 1316], "Be": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966], "sure": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1276, 1283, 1302, 1319, 1320, 1322], "dpi": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966], "your": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 543, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966, 1270, 1280, 1282, 1302, 1307, 1316, 1319, 1320, 1322], "ep": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966], "svg": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 812, 814, 819, 823, 824, 825, 826, 879, 881, 886, 890, 891, 892, 912, 914, 922, 923, 927, 928, 929, 949, 951, 959, 960, 964, 965, 966], "mappabl": [223, 247, 258, 265, 290, 323, 360, 813, 837, 848, 855, 880, 913, 950], "cax": [223, 247, 265, 290, 323, 360, 813, 837, 855, 880, 913, 950, 1303, 1316], "imag": [223, 247, 252, 265, 290, 323, 360, 524, 813, 837, 842, 855, 880, 913, 950, 1106, 1214, 1240, 1270, 1280, 1300, 1302], "contourset": [223, 247, 258, 265, 290, 323, 360, 813, 837, 848, 855, 880, 913, 950], "etc": [223, 247, 251, 252, 258, 265, 290, 323, 333, 360, 370, 397, 466, 474, 483, 496, 499, 813, 837, 841, 842, 848, 855, 880, 913, 923, 950, 960, 989, 1048, 1056, 1065, 1078, 1081], "onto": [223, 247, 265, 267, 290, 323, 333, 360, 370, 445, 447, 531, 813, 837, 855, 857, 880, 913, 923, 950, 960, 1018, 1026, 1028, 1113], "drawn": [223, 247, 265, 290, 323, 360, 813, 837, 855, 880, 913, 950], "target_rang": [224, 291, 324, 361, 814, 881, 914, 951], "delta_x": [224, 291, 324, 361, 814, 881, 914, 951], "delta_i": [224, 291, 324, 361, 814, 881, 914, 951], "az_limit": [224, 291, 324, 361, 814, 881, 914, 951], "el_limit": [224, 291, 324, 361, 814, 881, 914, 951], "reflector": [224, 291, 324, 361, 814, 881, 914, 951], "griddata": [224, 291, 324, 361, 814, 881, 914, 951], "npt": [225, 230, 292, 297, 325, 334, 362, 371, 815, 820, 882, 887, 915, 924, 952, 961], "hair": [225, 292, 325, 362, 815, 882, 915, 952, 1289], "col": [226, 230, 231, 293, 297, 298, 326, 335, 363, 372, 816, 820, 821, 883, 887, 888, 916, 925, 953, 962], "line": [226, 232, 250, 251, 252, 264, 266, 293, 299, 326, 329, 330, 333, 334, 336, 363, 366, 367, 370, 371, 373, 398, 528, 816, 822, 840, 841, 842, 854, 856, 883, 889, 916, 919, 920, 923, 924, 926, 953, 956, 957, 960, 961, 963, 990, 1110, 1270, 1280, 1282, 1300, 1319, 1320, 1322], "color": [226, 227, 228, 230, 231, 250, 252, 293, 294, 295, 297, 298, 326, 327, 328, 333, 335, 363, 364, 365, 372, 398, 816, 817, 818, 820, 821, 840, 842, 883, 884, 885, 887, 888, 916, 917, 918, 923, 925, 953, 954, 955, 962, 990, 1282, 1283, 1284, 1292, 1293, 1300, 1302, 1303, 1316], "linestyl": [226, 230, 231, 250, 293, 297, 298, 326, 335, 363, 372, 816, 820, 821, 840, 883, 887, 888, 916, 925, 953, 962, 1282, 1283, 1293], "symbol": [227, 228, 294, 295, 327, 328, 331, 364, 365, 368, 817, 818, 884, 885, 917, 918, 921, 954, 955, 958], "text_color": [227, 228, 294, 295, 327, 328, 364, 365, 817, 818, 884, 885, 917, 918, 954, 955], "text": [227, 228, 294, 295, 327, 328, 331, 364, 365, 368, 817, 818, 884, 885, 917, 918, 921, 954, 955, 958, 1135, 1281, 1290, 1311, 1315], "just": [227, 228, 294, 295, 327, 328, 364, 365, 388, 817, 818, 884, 885, 917, 918, 954, 955, 980, 1281, 1284, 1309, 1317, 1320, 1322], "marker": [227, 228, 232, 250, 266, 294, 295, 299, 327, 328, 336, 364, 365, 373, 817, 818, 822, 840, 856, 884, 885, 889, 917, 918, 926, 954, 955, 963], "title_datetime_format": [229, 233, 296, 300, 332, 337, 369, 374, 819, 823, 886, 890, 922, 927, 959, 964], "title_use_sweep_tim": [229, 233, 296, 300, 332, 337, 369, 374, 819, 823, 886, 890, 922, 927, 959, 964], "range_ring_location_km": [230, 297, 334, 371, 820, 887, 924, 961], "lw": [230, 231, 297, 298, 335, 372, 820, 821, 887, 888, 925, 962], "ring": [230, 231, 297, 298, 334, 335, 371, 372, 820, 821, 887, 888, 924, 925, 961, 962, 1277, 1289], "range_r": [231, 298, 335, 372, 821, 888, 925, 962], "seri": [231, 298, 335, 372, 497, 821, 888, 925, 962, 1079], "draw": [231, 251, 252, 264, 298, 333, 335, 370, 372, 821, 841, 842, 854, 888, 923, 925, 960, 962], "format_str": [232, 299, 336, 373, 822, 889, 926, 963], "ray_min": [232, 299, 336, 373, 822, 889, 926, 963], "ray_max": [232, 299, 336, 373, 822, 889, 926, 963], "style": [232, 250, 266, 299, 329, 330, 334, 336, 366, 367, 371, 373, 398, 822, 840, 856, 889, 919, 920, 924, 926, 956, 957, 961, 963, 990], "consider": [233, 300, 337, 374, 528, 823, 890, 927, 964, 1110, 1302], "ignoretilt": [234, 824], "run": [234, 501, 542, 824, 1083, 1124, 1265, 1276, 1302, 1307, 1319, 1320, 1322], "antenna_to_cartesian_track_rel": [234, 824], "slant": [234, 496, 824, 1078], "ncar": [234, 824], "soloii": [234, 824], "softwar": [234, 391, 398, 589, 824, 983, 990, 1307, 1309, 1310, 1311, 1313, 1314, 1317, 1319, 1320], "time_axis_flag": [235, 301, 338, 375, 825, 891, 928, 965], "date_time_form": [235, 301, 338, 375, 825, 891, 928, 965], "tz": [235, 301, 338, 375, 825, 891, 928, 965], "zone": [235, 301, 338, 375, 825, 891, 928, 965], "info": [235, 301, 333, 338, 370, 375, 518, 825, 891, 923, 928, 960, 965, 1100, 1303, 1317], "ref_point": [236, 302, 339, 376, 826, 892, 929, 966], "1000": [236, 302, 339, 376, 532, 826, 892, 929, 966, 1114, 1216, 1278, 1286, 1292, 1293, 1313, 1320], "vert_r": [236, 302, 339, 376, 826, 892, 929, 966], "alt_max": [236, 302, 339, 376, 826, 892, 929, 966], "dem_field": [236, 302, 339, 376, 826, 892, 929, 966], "terrain_altitud": [236, 302, 339, 376, 826, 892, 929, 966], "arbitrari": [236, 302, 339, 376, 528, 826, 892, 929, 966, 1110, 1265, 1315], "trajectori": [236, 302, 339, 376, 826, 892, 929, 966], "45": [236, 302, 339, 376, 515, 826, 892, 929, 966, 1097, 1284, 1293, 1302, 1316, 1320], "47": [236, 302, 339, 376, 532, 826, 892, 929, 966, 1114, 1315], "3db": [236, 302, 339, 376, 518, 826, 892, 929, 966, 1100], "ist": [236, 302, 339, 376, 826, 892, 929, 966], "aspect_ratio": [237, 303, 340, 377, 827, 893, 930, 967], "aspect": [237, 303, 340, 377, 518, 827, 893, 930, 967, 1100, 1281], "xlim": [238, 304, 341, 378, 828, 894, 931, 968, 1286, 1288, 1292, 1293, 1313], "ylim": [238, 304, 341, 378, 828, 894, 931, 968, 1286, 1288, 1290, 1291, 1292, 1293, 1295, 1297], "cartopi": [239, 240, 241, 242, 251, 252, 253, 305, 333, 829, 830, 831, 832, 841, 842, 843, 895, 923, 1270, 1272, 1273, 1276, 1280, 1282, 1283, 1296, 1300, 1302, 1307, 1310, 1311, 1313, 1314, 1315, 1316, 1319, 1320, 1322], "coastlin": [240, 251, 252, 333, 370, 830, 841, 842, 923, 960], "polit": [241, 831], "state": [242, 529, 832, 1111], "grid_name_field_level_tim": [243, 259, 833, 849], "latitudin": [245, 255, 269, 835, 845, 859], "plot_longitudinal_level": [248, 256, 270, 838, 846, 860], "tuppl": [248, 461, 467, 486, 838, 1043, 1049, 1068], "ind_1": [249, 839], "ind_2": [249, 839], "basemap": [249, 255, 257, 258, 263, 264, 267, 269, 271, 342, 366, 367, 368, 370, 371, 839, 845, 847, 848, 853, 854, 857, 859, 861, 932, 956, 957, 958, 960, 961, 1307, 1319], "upper": [249, 251, 252, 253, 255, 257, 267, 269, 271, 449, 839, 841, 842, 843, 845, 847, 857, 859, 861, 1216, 1282], "colormesh": [249, 251, 252, 253, 255, 257, 267, 269, 271, 839, 841, 842, 843, 845, 847, 857, 859, 861], "64": [249, 251, 252, 253, 255, 257, 267, 269, 271, 839, 841, 842, 843, 845, 847, 857, 859, 861, 1281, 1286, 1287, 1288, 1292, 1294, 1296, 1297, 1300, 1314, 1319], "linewidth": [250, 252, 266, 840, 842, 856, 1283, 1292, 1293], "crosshair": [250, 266, 840, 856], "lat_lin": [251, 252, 264, 333, 370, 841, 842, 854, 923, 960, 1276, 1289, 1300, 1316], "lon_lin": [251, 252, 264, 333, 370, 841, 842, 854, 923, 960, 1276, 1289, 1300, 1316], "embellish": [251, 252, 333, 841, 842, 923, 1283, 1316], "add_grid_lin": [251, 333, 841, 923], "imshow": [251, 841, 1277, 1278, 1281], "reason": [251, 264, 841, 854], "america": [251, 252, 264, 333, 370, 841, 842, 854, 923, 960], "cr": [251, 252, 305, 333, 461, 525, 841, 842, 895, 923, 1043, 1107, 1272, 1273, 1276, 1282, 1283, 1289, 1296, 1300, 1302, 1303, 1310, 1311, 1314, 1315, 1316], "subsequ": [251, 252, 333, 841, 842, 923], "geoax": [251, 252, 333, 841, 842, 923, 1310, 1313, 1315], "platecarre": [251, 252, 333, 841, 842, 923, 1272, 1276, 1282, 1283, 1296, 1300, 1302, 1311, 1314, 1315], "drawinf": [251, 252, 841, 842], "shapefil": [251, 252, 333, 370, 841, 842, 923, 960], "certain": [251, 252, 333, 524, 841, 842, 923, 970, 1106, 1240, 1302, 1314], "contour_valu": [252, 842], "maps_list": [252, 842], "countri": [252, 842], "110m": [252, 333, 842, 923], "background_zoom": [252, 842], "contour": [252, 842, 1270, 1280], "reson": [252, 333, 370, 842, 923, 960], "sequenc": [252, 842], "colour": [252, 842], "embelish": [252, 370, 842, 960], "10m": [252, 333, 842, 923, 1273, 1289, 1316], "50m": [252, 333, 842, 923, 1311, 1314], "naturalearthfeatur": [252, 333, 842, 923, 1316], "zoom": [252, 842], "background": [252, 370, 501, 537, 842, 960, 969, 1083, 1119, 1289, 1296, 1302], "cost": [252, 528, 842, 1110], "alpha": [253, 333, 370, 461, 506, 507, 508, 509, 510, 511, 734, 743, 843, 923, 960, 1043, 1088, 1089, 1090, 1091, 1092, 1093, 1283, 1292, 1316], "transpar": [253, 380, 843, 972, 1292], "overplot": [253, 333, 370, 843, 923, 960], "plot_latitudinal_level": [254, 268, 844, 858], "y_index": [255, 269, 845, 859], "x_index": [257, 271, 847, 861], "veric": [260, 850], "area_thresh": [264, 370, 854, 960], "auto_rang": [264, 854], "min_lon": [264, 333, 370, 854, 923, 960, 1276, 1289, 1314, 1316], "max_lon": [264, 333, 370, 854, 923, 960, 1276, 1289, 1314, 1316], "86": [264, 854], "min_lat": [264, 333, 370, 854, 923, 960, 1276, 1289, 1314, 1316], "max_lat": [264, 333, 370, 854, 923, 960, 1276, 1289, 1314, 1316], "44": [264, 450, 501, 854, 1031, 1083, 1302, 1319], "databas": [264, 370, 854, 960], "merc": [264, 370, 854, 960], "line_styl": [266, 329, 330, 334, 366, 367, 371, 856, 919, 920, 924, 956, 957, 961, 1289], "plot_rhi": [288, 321, 358, 878, 911, 948, 1315], "plot_vpt": [288, 321, 358, 878, 911, 948], "grid_project": [305, 446, 447, 895, 1027, 1028], "progress": [305, 342, 518, 895, 932, 1100], "some": [305, 342, 437, 530, 532, 895, 932, 1002, 1013, 1029, 1112, 1114, 1135, 1265, 1273, 1281, 1282, 1300, 1302, 1307, 1311, 1313, 1315, 1316, 1319], "correctli": [305, 342, 895, 932], "report": [305, 342, 393, 541, 542, 543, 895, 932, 985, 1123, 1307, 1320], "github": [305, 342, 895, 932, 1265, 1293, 1307, 1319, 1322], "tracker": [305, 342, 895, 932, 1307, 1320], "azimuthalequidist": [305, 895], "line_lon": [329, 366, 919, 956], "line_lat": [329, 366, 919, 956], "compat": [329, 330, 331, 334, 366, 367, 368, 371, 395, 919, 920, 921, 924, 956, 957, 958, 961, 987, 1322], "line_x": [330, 367, 920, 957], "line_i": [330, 367, 920, 957], "ro": [331, 368, 921, 958], "label_text": [331, 368, 921, 958], "label_offset": [331, 368, 921, 958], "shapefile_kwarg": [333, 923], "edgecolor": [333, 923, 1292, 1316], "face": [333, 923], "lambertconform": [333, 923, 1273, 1289, 1310], "domain": [333, 370, 456, 518, 923, 960, 1038, 1100, 1276], "neither": [333, 370, 401, 923, 960, 994], "extend": [333, 370, 394, 415, 923, 960, 986, 1231, 1316], "word": [333, 923], "tranpar": [333, 370, 923, 960], "pixel": [333, 523, 524, 532, 923, 1105, 1106, 1114, 1315, 1316], "lcc": [370, 960], "cylindr": [370, 960], "mill": [370, 960], "exhibit": [370, 960], "distort": [370, 960], "aea": [370, 960], "laea": [370, 960], "conform": [370, 960, 1307, 1309, 1316], "tmerc": [370, 960], "aeqd": [370, 960], "cass": [370, 960], "even": [370, 530, 960, 1112, 1292, 1307, 1313, 1316, 1322], "cyl": [370, 960], "cannot": [370, 381, 960, 973], "lake": [370, 960, 1316], "esri": [370, 960], "untest": [370, 960], "dtobj": [379, 971], "storage_opt": [380, 390, 392, 972, 982, 984], "anon": [380, 390, 392, 972, 982, 984], "open": [380, 390, 392, 972, 982, 984, 1135, 1286, 1307, 1309, 1310, 1311, 1313, 1314, 1316, 1317, 1320, 1322], "decompress": [380, 972], "bzip2": [380, 972], "backend": [380, 390, 972, 982], "googl": [380, 390, 972, 982, 1320], "cloud": [380, 390, 528, 972, 982, 1110, 1270, 1271, 1316, 1320, 1322], "storag": [380, 390, 972, 982, 1196], "amazon": [380, 390, 972, 982, 1272, 1273], "servic": [380, 390, 972, 982, 1272, 1273, 1281], "s3": [380, 390, 972, 982, 1272, 1273, 1284, 1302], "file_lik": [380, 972], "use_rsl": [381, 973], "read_": [381, 973], "trmm": [381, 394, 973, 986, 1307, 1319], "choos": [381, 973, 1270, 1280, 1302, 1322], "typeerror": [381, 408, 973], "launch_datetim": [382, 974], "radiosond": [382, 974], "launch": [382, 974], "record": [382, 974, 1315, 1317], "target_datetim": [383, 975], "profile_datetim": [383, 975], "cfradial2": [385, 977], "use_file_field_attribut": [386, 978], "csu": [386, 978], "chill": [386, 978], "chl": [386, 978], "field_file_nam": [386, 978], "long_nam": [386, 978, 1302, 1310, 1317], "write_grid": [387, 979], "zlib": [388, 389, 980, 981], "read_mdv": [388, 980, 1268, 1277, 1288, 1292, 1293, 1294], "fulli": [388, 543, 980, 1319], "interchang": [388, 980], "vlevel": [388, 980], "proj_polar_radar": [388, 980], "proj_rhi_radar": [388, 980], "13": [388, 470, 475, 489, 980, 1052, 1057, 1071, 1229, 1295, 1314, 1316, 1317], "vlevel_typ": [388, 980], "vert_type_z": [388, 980], "vert_type_elev": [388, 980], "vert_type_az": [388, 980], "17": [388, 980, 1290, 1295, 1298], "vert_type_pressur": [388, 980], "vert_type_theta": [388, 980], "unknown": [388, 980], "most": [388, 503, 970, 980, 1085, 1281, 1311, 1313, 1316, 1322], "station": [390, 391, 982, 983, 1273], "linear_interp": [390, 982], "nexrad": [390, 391, 392, 393, 982, 983, 984, 985, 1270, 1271, 1280, 1284, 1302, 1307, 1317], "archiv": [390, 982, 1285, 1307], "host": [390, 392, 982, 984], "noaa": [390, 392, 394, 982, 984, 986, 1272, 1273, 1284, 1302], "nation": [390, 392, 982, 984, 1272, 1281], "climat": [390, 392, 982, 984, 1309, 1310, 1311, 1313, 1314, 1317, 1320], "ucar": [390, 391, 982, 983], "thredd": [390, 391, 397, 982, 983, 989], "server": [390, 391, 982, 983], "letter": [390, 391, 393, 982, 983, 985], "icao": [390, 391, 982, 983], "older": [390, 391, 982, 983, 1265, 1270, 1271, 1307, 1320], "mix": [390, 982, 1240, 1284, 1302], "nearest": [390, 447, 466, 474, 475, 483, 496, 499, 517, 982, 1028, 1048, 1056, 1057, 1065, 1078, 1081, 1099, 1216, 1222, 1223, 1257, 1313, 1315], "fsspec": [390, 392, 982, 984], "cut": [390, 391, 392, 524, 982, 983, 984, 1106, 1259, 1260], "ncdc": [390, 392, 982, 984], "gov": [390, 392, 982, 984, 1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1290, 1292, 1293, 1294, 1295, 1297, 1300, 1301], "edu": [390, 391, 523, 982, 983, 1105, 1284, 1302], "catalog": [390, 391, 982, 983], "html": [390, 391, 523, 982, 983, 1105, 1307, 1319, 1320], "common": [391, 983, 1307, 1319], "cdm": [391, 397, 983, 989], "url": [391, 983], "java": [391, 397, 983, 989], "tool": [391, 397, 983, 989, 1307, 1319, 1320], "opendap": [391, 983], "accept": [391, 461, 466, 474, 483, 496, 505, 529, 530, 983, 1043, 1048, 1056, 1065, 1078, 1087, 1111, 1112, 1320], "compil": [391, 529, 983, 1111, 1307, 1319], "unidata": [391, 983, 1272], "htm": [391, 983], "nw": [392, 984], "wsr": [392, 532, 984, 1114], "88d": [392, 532, 984, 1114], "iii": [392, 984], "distribut": [392, 501, 536, 538, 540, 984, 1083, 1118, 1120, 1122, 1210, 1211, 1212, 1213, 1243, 1244, 1302, 1307, 1320], "roc": [392, 984], "wsr88d": [392, 393, 984, 985], "level_iii": [392, 984], "level3info": [392, 984], "asp": [392, 984], "radar_format": [393, 985], "callid": [393, 985], "skip_range_check": [393, 985], "rsl_radar": [393, 985], "id": [393, 398, 985, 990], "verifi": [393, 985, 1245, 1263], "ioerror": [393, 985], "time_ord": [394, 986], "full_xhdr": [394, 986], "noaa_hh_hdr": [394, 986], "ignore_xhdr": [394, 986], "ignore_sweep_start_m": [394, 986], "sigmet": [394, 986, 1307], "iri": [394, 986, 1307, 1319], "sequenti": [394, 986, 1029, 1281], "re": [394, 986], "manner": [394, 986], "determind": [394, 986], "maintain": [394, 986], "reverse_and_rol": [394, 986], "strictli": [394, 986], "increas": [394, 447, 504, 518, 528, 531, 986, 1028, 1086, 1100, 1110, 1113, 1281, 1313, 1320], "becom": [394, 986, 1302, 1310, 1313, 1315], "thisopt": [394, 986], "strict": [394, 986], "header": [394, 574, 575, 986], "decod": [394, 986], "hurrican": [394, 986, 1302], "hunter": [394, 986], "millisecond": [394, 986], "precis": [394, 986, 1265], "explic": [394, 986], "read_rsl": [394, 986, 1319], "error": [394, 398, 529, 530, 986, 990, 1111, 1112, 1220, 1248, 1249, 1315, 1319], "uf": [395, 400, 987, 992, 1307], "implement": [395, 401, 404, 406, 415, 425, 446, 523, 534, 987, 994, 1007, 1027, 1105, 1116, 1267], "write_proj_coord_si": [397, 989], "proj_coord_si": [397, 989], "write_point_x_y_z": [397, 989], "write_point_lon_lat_alt": [397, 989], "projectioncoordinatesystem": [397, 989], "toolsui": [397, 989], "appropri": [397, 989], "understood": [397, 989], "rgb": [398, 990], "viridi": [398, 990, 1302], "color_level": [398, 990], "warp": [398, 990], "sld": [398, 990], "use_doublequot": [398, 990], "geotiff": [398, 990, 1307], "sphere": [398, 990, 1232, 1258], "latter": [398, 990], "usabl": [398, 990], "former": [398, 990], "gi": [398, 990], "while": [398, 990, 1311, 1322], "show": [398, 990, 1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1302, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1320], "lack": [398, 440, 990, 1005, 1015], "gdal": [398, 990, 1307], "via": [398, 990], "conda": [398, 990, 1307, 1319, 1320, 1322], "rbg": [398, 990], "column": [398, 990, 1233, 1234, 1270, 1299], "categor": [398, 990, 1303, 1316], "gdalwarp": [398, 990], "command": [398, 990, 1307, 1310, 1316, 1320, 1322], "descriptor": [398, 990], "tiff": [398, 990], "don": [398, 990, 1276], "quot": [398, 990], "help": [398, 990, 1124, 1276, 1281, 1302, 1320, 1322], "translat": [398, 990], "sr": [398, 990], "mdv_field_nam": [399, 991], "field_write_ord": [399, 400, 991, 992], "sentinel": [399, 400, 991, 992], "writabl": [399, 991], "satisfi": [399, 991], "xy": [399, 447, 991, 1028], "irregular": [399, 991], "exce": [399, 991, 1302], "122": [399, 991, 1272, 1276, 1282, 1301], "uncompress": [399, 991], "sai": [399, 991, 1320], "uf_field_nam": [400, 992], "radar_field_nam": [400, 992], "volume_start": [400, 992], "templates_extra": [400, 992], "radar_beam_width_h": [400, 992], "radar_beam_width_v": [400, 992], "radar_receiver_bandwidth": [400, 992], "prt": [400, 992], "polarization_mod": [400, 992], "round": [400, 992, 1265], "_uf_scale_factor": [400, 992], "charact": [400, 992], "advanc": [400, 992], "usag": [400, 992], "templat": [400, 992, 1320], "mandatory_head": [400, 992], "optional_head": [400, 992], "field_head": [400, 992], "lazi": [401, 405, 411, 416, 418, 431, 438, 993, 994, 996, 1003], "set_lazi": [401, 994], "callabl": [401, 438, 994, 1003], "cach": [401, 429, 994], "tradit": [401, 405, 416, 418, 994], "supplement": [401, 994], "syntax": [401, 994], "prevent": [401, 447, 994, 1028, 1320], "comparison": [401, 461, 534, 994, 1043, 1116, 1276], "__cmp__": [401, 994], "__ge__": [401, 994], "__gt__": [401, 994], "__le__": [401, 994], "__lt__": [401, 994], "__ne__": [401, 994], "nor": [401, 994], "viewitem": [401, 994], "viewkei": [401, 994], "viewvalu": [401, 994], "fromkei": [401, 994], "tradition": [401, 426, 994], "referenc": [401, 994], "lazyloaddictionari": [401, 994], "henc": [401, 994], "key1": [401, 994], "value1": [401, 994], "key2": [401, 994], "value2": [401, 994], "lazy_func": [401, 994], "lambda": [401, 994], "lazykey1": [401, 994], "pep": [402, 1320], "585": 402, "__origin__": 402, "__args__": 402, "delattr": 404, "dir": [406, 1135], "format_spec": 408, "formatt": 408, "getattr": 410, "helper": [412, 422, 423, 1281], "pickl": [412, 422, 423], "subclass": 415, "noth": 415, "overridden": 415, "protocol": 423, "repr": 424, "setattr": 425, "memori": [427, 447, 534, 1028, 1116, 1315], "abstract": 429, "overrid": [429, 1293, 1316], "issubclass": 429, "invok": 429, "earli": 429, "abc": 429, "abcmeta": 429, "__subclasscheck__": 429, "notimpl": 429, "outcom": 429, "item": [430, 440, 995, 1005, 1008, 1015], "els": [432, 433, 997, 998, 1009, 1315], "value_cal": [438, 1003], "zg": [442, 443, 444, 1022, 1023, 1024], "yg": [442, 443, 444, 1022, 1023, 1024], "xg": [442, 443, 444, 1022, 1023, 1024], "roi": [442, 443, 444, 447, 1022, 1023, 1024, 1028], "influenc": [442, 445, 446, 447, 518, 1022, 1026, 1027, 1028, 1100, 1313], "grow": [443, 444, 446, 447, 1023, 1024, 1027, 1028, 1320], "virtual": [444, 446, 447, 1024, 1027, 1028], "grid_shap": [445, 446, 447, 1026, 1027, 1028, 1197, 1277, 1278, 1282, 1302, 1313, 1315], "grid_limit": [445, 446, 447, 1026, 1027, 1028, 1197, 1277, 1278, 1282, 1302, 1313, 1315], "gridding_algo": [445, 1026], "map_gates_to_grid": [445, 1026], "map_to_grid": [445, 446, 1026, 1027], "significantli": [445, 447, 1026, 1028], "faster": [445, 447, 1026, 1028], "barn": [445, 447, 1026, 1028, 1313], "1964": [445, 1026], "techniqu": [445, 515, 1026, 1097, 1315], "maxim": [445, 1026, 1029], "numer": [445, 1026, 1316], "meteorologi": [445, 456, 470, 475, 489, 528, 541, 1026, 1034, 1038, 1052, 1057, 1071, 1110, 1123, 1229], "climatologi": [445, 541, 1026, 1123], "396": [445, 1026], "409": [445, 1026], "cressman": [445, 447, 1026, 1028, 1313], "1959": [445, 1026], "monthli": [445, 1026], "review": [445, 1026], "367": [445, 1026], "374": [445, 1026], "paulei": [445, 1026, 1313], "1990": [445, 1026, 1313], "discret": [445, 518, 1026, 1100], "respons": [445, 1026], "118": [445, 1026], "1145": [445, 1026], "1164": [445, 1026], "grid_origin": [446, 447, 1027, 1028, 1278, 1282], "grid_origin_alt": [446, 447, 1027, 1028], "map_roi": [446, 447, 1027, 1028], "weighting_funct": [446, 447, 1027, 1028, 1313], "barnes2": [446, 447, 1027, 1028], "toa": [446, 447, 451, 531, 1027, 1028, 1032, 1113], "17000": [446, 447, 1027, 1028, 1313], "roi_func": [446, 447, 1027, 1028, 1313], "dist_beam": [446, 447, 1027, 1028, 1313], "constant_roi": [446, 447, 1027, 1028], "z_factor": [446, 447, 1027, 1028], "xy_factor": [446, 447, 1027, 1028], "02": [446, 447, 504, 1027, 1028, 1086, 1284, 1298, 1302, 1305, 1318], "min_radiu": [446, 447, 1027, 1028, 1313], "h_factor": [446, 447, 1027, 1028], "nb": [446, 447, 1027, 1028], "bsp": [446, 447, 1027, 1028], "linearli": [446, 1027], "roifunct": [446, 1027], "dist": [446, 447, 1027, 1028, 1243, 1244], "get_roi": [446, 1027], "cython": [446, 1027, 1265], "grid_siz": [446, 447, 1027, 1028], "grid_from_radar": [446, 447, 1027, 1028, 1277, 1278, 1282, 1302, 1313, 1315], "copy_field_data": [447, 1028], "kd_tree": [447, 1028], "leafsiz": [447, 1028], "nearbi": [447, 1028, 1278], "coodin": [447, 1028], "azimut": [447, 1028], "similarili": [447, 1028], "example_roi_func_const": [447, 1028], "example_roi_func_dist": [447, 1028], "example_roi_func_dist_beam": [447, 1028], "foreach": [447, 1028], "metet": [447, 1028], "dist_mean": [447, 1028], "preserv": [447, 1028, 1311], "slower": [447, 518, 528, 1028, 1100, 1110], "leaf": [447, 1028], "lookup": [447, 1028, 1265], "tree": [447, 1018, 1028], "affect": [447, 504, 522, 1028, 1086, 1104], "optim": [447, 526, 527, 528, 1028, 1108, 1109, 1110], "natur": [447, 1028], "mx": 448, "mn": 448, "relh_slop": [448, 461, 538, 1043, 1120], "005": 448, "destandard": 448, "h_iso0": [448, 461, 525, 1043, 1107], "slope": [448, 461, 518, 529, 538, 1043, 1100, 1111, 1120], "sigmoid": [448, 461, 538, 1043, 1120], "field_std": 448, "hlowerleft": 449, "hupperright": 449, "matrix": [449, 461, 529, 734, 743, 1043, 1111], "freq": [450, 477, 478, 498, 519, 520, 1031, 1059, 1060, 1080, 1101, 1102], "rng": [450, 522, 1031, 1104, 1215, 1216, 1231], "empir": [450, 1031], "satur": [450, 1031], "latm": [450, 1031], "floor": [451, 1032], "nyq": [452, 1033, 1311], "check_nyq_uniform": [452, 1033], "deriv": [452, 528, 530, 1033, 1110, 1112], "try": [452, 528, 534, 1033, 1110, 1116, 1313, 1314, 1316], "vel_dict": [452, 453, 454, 1033, 1035, 1036], "entri": [452, 1033, 1317], "sdbz_field": [453, 455, 462, 464, 479, 1035, 1037, 1044, 1046, 1061], "spectral": [453, 455, 462, 464, 472, 479, 481, 487, 488, 489, 490, 491, 492, 493, 503, 576, 1035, 1037, 1044, 1046, 1054, 1061, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1085, 1229], "signal_field": [454, 456, 469, 470, 480, 489, 490, 491, 492, 494, 495, 500, 1036, 1038, 1051, 1052, 1062, 1071, 1072, 1073, 1074, 1076, 1077, 1082], "negative_awai": [454, 473, 1036, 1055], "negative_toward": [454, 473, 1036, 1055], "width_dict": [455, 456, 1037, 1038], "subtract_nois": [456, 465, 472, 473, 480, 481, 482, 488, 491, 492, 493, 1038, 1047, 1054, 1055, 1062, 1063, 1064, 1070, 1073, 1074, 1075], "noise_field": [456, 471, 475, 476, 480, 485, 491, 492, 1038, 1053, 1057, 1058, 1062, 1067, 1073, 1074], "lag": [456, 465, 473, 482, 494, 495, 1038, 1047, 1055, 1064, 1076, 1077], "denomin": [456, 1038], "varianc": [456, 1038, 1229, 1230, 1235, 1246, 1247], "srivastava": [456, 1038], "jameson": [456, 1038], "februari": [456, 1038], "1979": [456, 1038], "rhohv_snow": [457, 534, 1039, 1116], "rhohv_rain": [457, 534, 1039, 1116], "rhohv_ml": [457, 534, 1039, 1116], "93": [457, 477, 498, 518, 534, 1039, 1059, 1080, 1100, 1116], "zh_snow": [457, 534, 1039, 1116], "zh_rain": [457, 534, 1039, 1116], "zh_ml": [457, 534, 1039, 1116], "27": [457, 534, 1039, 1116], "zv_snow": [457, 534, 1039, 1116], "zv_rain": [457, 534, 1039, 1116], "zv_ml": [457, 534, 1039, 1116], "26": [457, 466, 534, 1039, 1048, 1116], "beam_factor": [457, 534, 1039, 1116], "npts_diagram": [457, 534, 1039, 1116], "81": [457, 534, 1039, 1116, 1317], "rng_bottom_max": [457, 534, 1039, 1116], "200000": [457, 534, 1039, 1116, 1289, 1302], "theoretical_cross_correlation_ratio": [457, 1039], "diagram": [457, 1039], "rhohv_theo_dict": [457, 1039], "sigma_bird": [458, 1040], "vol_refl_field": [458, 498, 1040, 1080], "bird_density_field": [458, 1040], "densiti": [458, 538, 1040, 1120, 1303, 1316], "volumetr": [458, 498, 1040, 1080, 1308], "bird_density_dict": [458, 1040], "filt_field": [459, 1041], "unfilt_field": [459, 1041], "ccor_field": [459, 1041], "ccor": [459, 1041], "unfilt": [459, 1041, 1316], "ccor_dict": [459, 1041], "cdr_field": [460, 1042], "circular": [460, 1042, 1243, 1244, 1302], "depolar": [460, 1042], "cdr": [460, 1042], "features_matrix": [461, 1043], "var_nam": [461, 505, 525, 538, 1043, 1087, 1107, 1120], "hydro_nam": [461, 505, 525, 538, 1043, 1087, 1107, 1120], "ag": [461, 525, 534, 1043, 1107, 1116, 1303, 1316], "lr": [461, 525, 1043, 1107, 1303, 1316], "rp": [461, 525, 1043, 1107, 1303, 1316], "rn": [461, 525, 1043, 1107, 1303, 1316], "mh": [461, 525, 1043, 1107, 1303, 1316], "ih": [461, 525, 1043, 1107, 1303, 1316], "hdg": [461, 525, 1043, 1107, 1303, 1316], "nsamples_it": [461, 1043], "20000": [461, 502, 504, 536, 1043, 1084, 1086, 1118, 1289, 1313], "external_iter": [461, 1043], "internal_iter": [461, 1043], "cv_approach": [461, 1043], "num_samples_arr": [461, 1043], "n_samples_syn": [461, 1043], "nmedoids_min": [461, 505, 1043, 1087], "acceptance_threshold": [461, 505, 1043, 1087], "001": [461, 538, 1043, 1120, 1237, 1292], "parallel": [461, 528, 529, 530, 1043, 1110, 1111, 1112], "sample_data": [461, 1043], "kmax_it": [461, 505, 1043, 1087], "nsamples_smal": [461, 1043], "40000": [461, 1043, 1278, 1282, 1289, 1313], "sampling_size_clara": [461, 1043], "niter_clara": [461, 1043], "keep_labeled_data": [461, 1043], "use_median": [461, 505, 1043, 1087], "allow_label_dupl": [461, 1043], "centroid": [461, 502, 525, 536, 1043, 1084, 1107, 1118, 1316], "nsampl": [461, 536, 538, 1043, 1118, 1120], "nvariabl": [461, 525, 1043, 1107], "extern": [461, 1043], "loop": [461, 1043, 1304], "medoid": [461, 505, 1043, 1087], "inter": [461, 505, 1043, 1087], "dispers": [461, 505, 1043, 1087], "cluster": [461, 525, 1043, 1107, 1316], "critic": [461, 1043], "approach": [461, 518, 525, 532, 534, 1043, 1100, 1107, 1114, 1116], "reject": [461, 1043], "intermedi": [461, 505, 1043, 1087], "kmedoid": [461, 505, 1043, 1087], "clara": [461, 1043], "exceed": [461, 515, 1043, 1097], "kept": [461, 504, 1043, 1086], "labeled_data": [461, 1043], "medoids_dict": [461, 505, 1043, 1087], "final_medoids_dict": [461, 505, 1043, 1087], "sphidp_field": [462, 1044], "phase_offset": [463, 473, 1045, 1055], "signal_h_field": [463, 465, 472, 473, 481, 482, 487, 488, 493, 1045, 1047, 1054, 1055, 1063, 1064, 1069, 1070, 1075], "signal_v_field": [463, 465, 472, 473, 481, 482, 487, 488, 493, 1045, 1047, 1054, 1055, 1063, 1064, 1069, 1070, 1075], "sdbzv_field": [464, 1046], "zdr_dict": [464, 465, 1046, 1047], "noise_h_field": [465, 472, 473, 481, 482, 488, 493, 1047, 1054, 1055, 1063, 1064, 1070, 1075], "noise_v_field": [465, 472, 473, 481, 482, 488, 493, 1047, 1054, 1055, 1063, 1064, 1070, 1075], "ref_tim": [466, 474, 483, 496, 497, 499, 1048, 1056, 1065, 1078, 1079, 1081], "latlon_tol": [466, 496, 499, 1048, 1078, 1081, 1215, 1242], "0005": [466, 496, 499, 1048, 1078, 1081], "delta_rng": [466, 496, 1048, 1078, 1231], "delta_azi": [466, 496, 1048, 1078, 1217, 1231], "hmax": [466, 474, 483, 496, 499, 1048, 1056, 1065, 1078, 1081, 1242], "hre": [466, 474, 483, 496, 499, 532, 1048, 1056, 1065, 1078, 1081, 1114], "250": [466, 496, 504, 1048, 1078, 1086, 1317], "avg_typ": [466, 474, 483, 496, 1048, 1056, 1065, 1078, 1217, 1219], "interp_kind": [466, 474, 483, 496, 499, 1048, 1056, 1065, 1078, 1081, 1257], "qvp": [466, 474, 483, 496, 499, 535, 1048, 1056, 1065, 1078, 1081, 1117], "enhanc": [466, 1048, 1322], "interest": [466, 496, 499, 1048, 1078, 1081, 1276, 1302, 1316], "central": [466, 496, 1048, 1078, 1231], "evp": [466, 496, 1048, 1078], "regardless": [466, 474, 483, 496, 499, 515, 1048, 1056, 1065, 1078, 1081, 1097], "elimin": [466, 474, 483, 496, 499, 1048, 1056, 1065, 1078, 1081, 1311, 1313], "kaltenboeck": [466, 1048], "2016": [466, 474, 504, 525, 1048, 1056, 1086, 1107, 1307, 1309, 1310, 1311, 1313, 1314, 1316, 1317, 1320], "storm": [466, 537, 1048, 1119, 1201, 1203, 1284, 1302, 1313, 1315], "methodologi": [466, 541, 1048, 1123, 1311], "meteorologisch": [466, 1048], "zeitschrift": [466, 1048], "207": [466, 1048], "222": [466, 1048, 1268, 1285, 1315], "fields_in_list": [467, 486, 1049, 1068], "fields_out_list": [467, 486, 503, 1049, 1068, 1085], "fourier": [467, 486, 1049, 1068], "ones": [467, 486, 1049, 1068, 1281], "get_window": [467, 486, 1049, 1068], "ifft": [467, 1049], "l_field": [468, 1050], "logarithm": [468, 1050], "ll": [468, 1050], "log10": [468, 1050, 1276], "mph_dict": [469, 1051], "navg": [470, 489, 1052, 1071, 1229], "nnoise_min": [470, 489, 1052, 1071, 1229], "dbadu_to_dbm_hh": [470, 489, 491, 492, 1052, 1071, 1073, 1074], "dbadu_to_dbm_vv": [470, 489, 491, 492, 1052, 1071, 1073, 1074], "sehkon": [470, 489, 1052, 1071, 1229], "1974": [470, 475, 489, 1052, 1057, 1071, 1229], "noise_dict": [470, 475, 476, 489, 1052, 1057, 1058, 1071], "808": [470, 475, 489, 1052, 1057, 1071, 1229], "811": [470, 475, 489, 1052, 1057, 1071, 1229], "noisedbz_v": [471, 1053], "ref_dist": [471, 1053], "noisedbz": [471, 1053], "fields_list": [472, 473, 1054, 1055], "use_pwr": [472, 1054], "smooth_window": [472, 488, 491, 492, 1054, 1070, 1073, 1074], "srhohv_field": [472, 481, 487, 1054, 1063, 1069], "pwr_h_field": [472, 481, 488, 1054, 1063, 1070], "pwr_v_field": [472, 481, 488, 1054, 1063, 1070], "quasi": [474, 483, 535, 1056, 1065, 1117], "zhang": [474, 496, 506, 535, 1056, 1078, 1088, 1117], "reev": [474, 535, 1056, 1117], "kumjian": [474, 483, 535, 1056, 1065, 1117], "tschallen": [474, 535, 1056, 1117], "tr\u00f6mel": [474, 1056], "simmer": [474, 506, 535, 1056, 1088, 1117], "jtech": [474, 496, 1056, 1078], "33": [474, 1056, 1317], "551": [474, 1056], "562": [474, 1056], "pwr_field": [475, 476, 484, 492, 503, 1057, 1058, 1066, 1074, 1085], "get_noise_po": [475, 476, 1057, 1058, 1230], "noisi": [475, 476, 1057, 1058], "noise_pos_dict": [475, 476, 1057, 1058], "reserv": [475, 1057, 1215, 1216, 1242], "ngates_min": [476, 1058, 1230], "curti": [476, 1058, 1230], "torr": [476, 1058, 1230], "2737": [476, 1058, 1230], "2753": [476, 1058, 1230], "kw2": [477, 1059], "rcs_field": [477, 478, 1059, 1060], "water": [477, 498, 518, 1059, 1080, 1100], "rc": [477, 478, 518, 1059, 1060, 1100], "rcs_dict": [477, 478, 1059, 1060], "lmf": [478, 484, 1060, 1066], "radconst": [478, 484, 1060, 1066], "tx_pwr": [478, 1060], "lrx": [478, 484, 1060, 1066], "ltx": [478, 1060], "lradom": [478, 484, 1060, 1066], "neglect_gas_att": [478, 1060], "feed": [478, 484, 1060, 1066], "neglect": [478, 1060], "dbz_dict": [479, 480, 1061, 1062], "use_rhohv": [481, 487, 1063, 1069], "srhohv": [481, 487, 1063, 1069], "srho_hv": [481, 1063], "rhohv_dict": [481, 482, 1063, 1064], "weight_pow": [483, 1065], "ab": [483, 1065], "grng": [483, 1065], "tobin": [483, 1065], "2017": [483, 496, 1065, 1078], "surfac": [483, 501, 1065, 1083, 1302], "ic": [483, 496, 1065, 1078, 1292, 1303, 1316], "pellet": [483, 1065], "forecast": [483, 1065], "2065": [483, 1065], "2082": [483, 1065], "THE": [484, 1066], "s_pwr_dict": [484, 1066], "sphidp_dict": [487, 1069], "compute_pow": [488, 492, 1070, 1074], "szdr_dict": [488, 1070], "phase_dict": [490, 1072], "pwr_dict": [491, 1073], "sdbz_dict": [492, 1074], "srhohv_dict": [493, 1075], "statist": [494, 495, 525, 1076, 1077, 1107, 1219], "fluctuat": [494, 495, 1076, 1077], "st1_dict": [494, 1076], "st1": [494, 1076], "st2_dict": [495, 1077], "st2": [495, 1077], "bukovc": [496, 1078], "winter": [496, 1078, 1284, 1302], "liquid": [496, 1078, 1316], "reveal": [496, 1078, 1316], "2dvd": [496, 1078], "oklahoma": [496, 1078, 1197], "56": [496, 1078, 1279, 1315], "1345": [496, 1078], "1363": [496, 1078], "along_azi": [497, 1079], "fixed_rang": [497, 1079], "fixed_azimuth": [497, 1079], "fixed_elev": [497, 1079], "rng_tol": [497, 1079], "value_start": [497, 1079], "value_stop": [497, 1079], "acoord": [497, 1079], "along_el": [497, 1079], "along_rng": [497, 1079], "stop": [497, 1079], "kw": [498, 1080], "vol_refl_dict": [498, 1080], "10log10": [498, 1080], "wide": [500, 1082], "wbn_dict": [500, 1082], "dx": [501, 518, 537, 1083, 1100, 1119, 1302], "dy": [501, 537, 1083, 1119, 1302], "level_m": [501, 1083], "always_core_thr": [501, 969, 1083, 1302], "42": [501, 537, 1083, 1119, 1302], "bkg_rad_km": [501, 1083, 1302], "use_cosin": [501, 969, 1083, 1302], "max_diff": [501, 969, 1083, 1302], "zero_diff_cos_v": [501, 969, 1083, 1302], "55": [501, 1083, 1296, 1302, 1316], "scalar_diff": [501, 969, 1083, 1302], "use_addit": [501, 969, 1083, 1302], "calc_thr": [501, 1083, 1302], "weak_echo_thr": [501, 1083, 1302], "min_dbz_us": [501, 1083, 1302], "db_averag": [501, 1083, 1302], "remove_small_object": [501, 1083, 1302], "min_km2_siz": [501, 1083, 1302], "val_for_max_conv_rad": [501, 1083, 1302], "max_conv_rad_km": [501, 1083, 1302], "cs_core": [501, 1083], "nosfcecho": [501, 1083, 1302], "weakecho": [501, 1083, 1302], "sf": [501, 1083, 1302], "conv": [501, 1083, 1302], "estimate_flag": [501, 1083, 1302], "estimate_offset": [501, 1083, 1302], "partit": [501, 537, 1083, 1119, 1316], "convect": [501, 537, 969, 1083, 1119, 1270, 1299], "stratiform": [501, 537, 969, 1083, 1119, 1270, 1299, 1315], "yuter": [501, 537, 969, 1083, 1119, 1240, 1284, 1302], "1997": [501, 969, 1083, 1302], "pars": [501, 1083], "classifi": [501, 525, 969, 1083, 1107, 1302, 1303, 1316], "cosin": [501, 969, 1083, 1302], "simpler": [501, 1083, 1302], "scalar": [501, 969, 1083, 1302], "eqn": [501, 969, 1083], "b1": [501, 969, 1083], "percentag": [501, 1083, 1242], "weak": [501, 1083, 1302], "underestim": [501, 1083, 1302], "wih": [501, 1083], "convsf_dict": [501, 1083, 1302], "raindrop": [501, 1083, 1302], "pacif": [501, 1083, 1302], "warm": [501, 528, 1083, 1110, 1302, 1316], "pool": [501, 1083, 1302], "implic": [501, 1083, 1302], "appl": [501, 530, 535, 537, 540, 1083, 1112, 1117, 1119, 1122, 1302, 1320], "meteor": [501, 530, 535, 537, 540, 1083, 1112, 1117, 1119, 1122, 1302, 1320], "36": [501, 1083, 1276, 1278, 1282, 1296, 1300, 1302, 1313], "847": [501, 1083, 1302], "867": [501, 1083, 1302], "doi": [501, 504, 525, 529, 530, 532, 1083, 1086, 1107, 1111, 1112, 1114, 1240, 1284, 1302, 1307, 1309, 1310, 1311, 1313, 1314, 1317, 1320], "org": [501, 523, 1034, 1083, 1105, 1240, 1284, 1302, 1307, 1320], "1175": [501, 530, 532, 1083, 1112, 1114, 1302], "1520": [501, 1083, 1302], "0450": [501, 1083, 1302], "036": [501, 1083, 1302], "3c0847": [501, 1083, 1302], "morsdo": [501, 1083, 1302], "3e2": [501, 1083, 1302], "smith": [501, 1083, 1302], "wilheit": [501, 1083, 1302], "zipser": [501, 1083, 1302], "character": [501, 504, 537, 1083, 1086, 1119, 1302], "tropic": [501, 1083, 1302], "kwajex": [501, 1083, 1302], "385": [501, 1083, 1302], "415": [501, 1083, 1302], "jam2206": [501, 1083, 1302], "lapse_r": [502, 521, 525, 1084, 1103, 1107], "nsamples_max": [502, 1084], "prepar": [502, 1084, 1309, 1310, 1311, 1313, 1314, 1317], "refl_std": [502, 1084], "zdr_std": [502, 1084], "kdp_std": [502, 1084], "rhohv_std": [502, 1084], "relh_std": [502, 1084], "quit": [503, 1085, 1316], "everi": [503, 529, 530, 540, 587, 1085, 1111, 1112, 1122, 1307, 1315], "tail": [503, 1085], "fill_valu": [504, 518, 528, 529, 530, 537, 1086, 1100, 1110, 1111, 1112, 1119, 1241, 1309, 1310, 1317], "ml_field": [504, 532, 533, 534, 1086, 1114, 1115, 1116], "ml_pos_field": [504, 532, 533, 534, 1086, 1114, 1115, 1116], "max_rang": [504, 1029, 1086], "detect_threshold": [504, 1086], "interp_hol": [504, 1086], "max_length_hol": [504, 1086], "check_min_length": [504, 1086], "get_iso0": [504, 532, 533, 534, 1086, 1114, 1115, 1116], "ml": [504, 532, 1086, 1114, 1265], "plai": [504, 1086, 1319], "sensit": [504, 1086], "erron": [504, 1086, 1311], "hole": [504, 1086], "ml_obj": [504, 532, 533, 534, 1086, 1114, 1115, 1116], "ml_dict": [504, 532, 533, 534, 1086, 1114, 1115, 1116], "iso0_dict": [504, 532, 533, 534, 1086, 1114, 1115, 1116], "all_ml": [504, 1086], "scipion": [504, 1086], "bern": [504, 525, 529, 1086, 1107, 1111], "q": [504, 1086], "meteorol": [504, 535, 1086, 1117, 1302], "soc": [504, 1086], "142": [504, 1086], "108": [504, 1086], "124": [504, 1086, 1315], "1002": [504, 1086], "qj": [504, 1086], "2672": [504, 1086], "niter": [505, 1087], "nvar": [505, 517, 1087, 1099], "medoids_arr": [505, 1087], "a_field": [506, 507, 510, 1088, 1089, 1092, 1316], "rr_field": [506, 507, 508, 509, 510, 511, 512, 1088, 1089, 1090, 1091, 1092, 1093, 1094], "diederich": [506, 1088], "tromel": [506, 535, 1088, 1117], "wavelenght": [506, 1088], "hydrometeorologi": [506, 1088], "487": [506, 1088], "502": [506, 1088], "alphazr": [507, 1089], "0376": [507, 509, 510, 511, 1089, 1091, 1092, 1093], "betazr": [507, 1089], "6112": [507, 509, 510, 511, 1089, 1091, 1092, 1093], "alphaz": [507, 510, 511, 1089, 1092, 1093], "betaz": [507, 510, 511, 1089, 1092, 1093], "alphaa": [507, 510, 1089, 1092], "betaa": [507, 510, 1089, 1092], "mp_factor": [507, 1089], "master_field": [507, 510, 511, 1089, 1092, 1093], "thresh_max": [507, 510, 511, 1089, 1092, 1093], "act": [507, 510, 511, 589, 1089, 1092, 1093, 1302, 1309], "master": [507, 510, 511, 1089, 1092, 1093, 1293, 1320], "slave": [507, 510, 511, 1089, 1092, 1093], "blend": [510, 511, 1092, 1093, 1292], "rain_mast": [510, 511, 1092, 1093], "alphakdp": [511, 1093], "betakdp": [511, 1093], "mm": [511, 1093, 1302, 1316], "polynomi": [512, 1094], "develop": [512, 1094, 1307, 1319, 1320], "mcgill": [512, 1094, 1307], "az_tol": [513, 514, 1095, 1096, 1222], "wind_field": [513, 514, 516, 1095, 1096, 1098], "windshear_field": [513, 514, 1095, 1096], "windshear": [513, 514, 1095, 1096, 1265], "npoints_min": [515, 1097], "azi_spacing_max": [515, 1097], "vel_diff_max": [515, 1097], "rad_vel_field": [515, 1097], "u_vel_field": [515, 1097], "v_vel_field": [515, 1097], "w_vel_field": [515, 1097], "vel_est_field": [515, 1097], "vel_std_field": [515, 1097], "vel_diff_field": [515, 1097], "vad": [515, 540, 541, 1097, 1122, 1123, 1265, 1270, 1299, 1320], "recomput": [515, 1097], "difer": [515, 1097], "vert_proj": [516, 1098], "neglig": [516, 1098], "v_r": [516, 1098], "v_el": [516, 1098], "v_az": [516, 1098], "perpendicular": [516, 1098], "v_h": [516, 1098], "know": [516, 1098, 1322], "hold": [516, 1098], "sonde_dset": [517, 1099], "time_kei": [517, 1099], "height_kei": [517, 1099], "vap": [517, 1099], "startard": [517, 1099], "ncvar": [517, 1099], "return_d": [517, 1099], "radar_spec": [518, 1100], "dem_grid": [518, 1100], "terrain_altitude_field": [518, 1100], "bent_terrain_altitude_field": [518, 1100], "terrain_slope_field": [518, 1100], "terrain_aspect_field": [518, 1100], "elevation_angle_field": [518, 1100], "visibility_field": [518, 1100], "min_vis_elevation_field": [518, 1100], "min_vis_altitude_field": [518, 1100], "incident_angle_field": [518, 1100], "effective_area_field": [518, 1100], "sigma_0_field": [518, 1100], "rcs_clutter_field": [518, 1100], "dbm_clutter_field": [518, 1100], "dbz_clutter_field": [518, 1100], "visibility_polar_field": [518, 1100], "az_conv": [518, 1100], "daz": [518, 1100], "012": [518, 1100], "atm_att": [518, 1100], "mosotti_kw": [518, 1100], "9644": [518, 1100], "raster_oversampl": [518, 1100], "sigma0_method": [518, 1100], "gabella": [518, 525, 1100, 1107], "clip": [518, 1100], "return_pyart_object": [518, 1100], "verbos": [518, 528, 546, 557, 558, 572, 573, 1100, 1110, 1320], "frequenti": [518, 1100], "ghz": [518, 1100], "tau": [518, 1100], "terrain": [518, 1100, 1281], "backscatt": [518, 528, 535, 1100, 1110, 1117], "incid": [518, 1100], "topographi": [518, 1100], "rx": [518, 1100], "equival": [518, 534, 1018, 1100, 1116, 1272, 1283, 1291, 1297], "One": [518, 1100, 1309, 1317, 1320, 1322], "clausiu": [518, 1100], "mosotti": [518, 1100], "materi": [518, 1100, 1307], "sigma": [518, 536, 1100, 1118, 1201, 1292, 1293], "naught": [518, 1100], "undefin": [518, 1100], "oversampl": [518, 1100, 1265], "delrieu": [518, 1100], "lot": [518, 1100, 1315], "directli": [518, 1100, 1281, 1316], "bent_terrain_altitude_d": [518, 1100], "terrain_slope_d": [518, 1100], "terrain_aspect_d": [518, 1100], "elevation_d": [518, 1100], "min_vis_elevation_d": [518, 1100], "min_vis_altitude_d": [518, 1100], "visibility_d": [518, 1100], "incident_angle_d": [518, 1100], "effective_area_d": [518, 1100], "sigma_0_d": [518, 1100], "rcs_clutter_d": [518, 1100], "dbm_clutter_d": [518, 1100], "dbz_clutter_d": [518, 1100], "visibility_polar_d": [518, 1100], "perona": [518, 1100], "1998": [518, 1100], "orograph": [518, 1100], "geometr": [518, 1100], "1485": [518, 1100], "1494": [518, 1100], "freq_band": [520, 1102], "temp_ref_field": [521, 1103], "heigh_over_iso0": [521, 1103], "iso0_ref": [521, 1103], "insuffici": [521, 1103], "rng_left_km": [522, 1104], "rng_right_km": [522, 1104], "ang": [522, 1104, 1292, 1293], "ang_r": [522, 1104], "ml_bottom": [522, 1104], "msl": [522, 532, 1104, 1114, 1242], "grid1": [523, 1105], "grid2": [523, 1105], "return_valu": [523, 1105], "displac": [523, 1105], "en": [523, 1105, 1307, 1319, 1320], "wikipedia": [523, 1105], "wiki": [523, 1034, 1105], "phase_correl": [523, 1105], "inspir": [523, 1105], "christoph": [523, 1105], "gohlk": [523, 1105], "lfd": [523, 1105], "uci": [523, 1105], "imreg": [523, 1105], "advect": [523, 524, 1105, 1106], "trim_edg": [524, 1106], "field_list": [524, 1020, 1106], "shifted_grid": [524, 1106], "subset": [524, 1106, 1270, 1299, 1300], "mass_cent": [525, 1107, 1316], "entropy_field": [525, 1107], "compute_entropi": [525, 1107], "output_dist": [525, 1107], "besic": [525, 533, 1107, 1115, 1316], "nclass": [525, 1107], "decai": [525, 1107], "entropi": [525, 1107], "fields_dict": [525, 1107], "figuera": [525, 1107, 1307, 1320], "ventura": [525, 1107, 1307, 1320], "grazioli": [525, 529, 1107, 1111, 1307, 1320], "germann": [525, 1107, 1307, 1320], "semi": [525, 1107], "supervis": [525, 1107], "mea": [525, 1107, 1240, 1284], "4425": [525, 1107], "4445": [525, 1107], "5194": [525, 1107, 1240, 1284], "amt": [525, 1107, 1240, 1284], "piecewis": [526, 527, 1108, 1109], "lenght": [526, 527, 1108, 1109], "kdp_dict": [526, 527, 528, 529, 530, 1108, 1109, 1110, 1111, 1112], "cg": [528, 1110], "clpf": [528, 1110], "length_scal": [528, 1110], "first_guess": [528, 1110], "finite_ord": [528, 1110], "variat": [528, 1110], "maesaka": [528, 1110, 1316], "2012": [528, 530, 1110, 1112, 1316], "monoton": [528, 531, 1110, 1113, 1281], "propag": [528, 529, 530, 1110, 1111, 1112], "notat": [528, 1110], "primari": [528, 1110], "proport": [528, 1110], "analys": [528, 529, 530, 1110, 1111, 1112], "nonlinear": [528, 1110], "conjug": [528, 1110], "gradient": [528, 1110, 1281], "broyden": [528, 1110], "fletcher": [528, 1110], "goldfarb": [528, 1110], "shanno": [528, 1110], "bfg": [528, 1110], "howev": [528, 1110, 1311, 1315, 1316], "100k": [528, 1110], "parameter": [528, 1110], "attentu": [528, 1110], "constraint": [528, 1110], "bring": [528, 1110], "guess": [528, 1110], "root": [528, 1110, 1319, 1322], "signifi": [528, 537, 1110, 1119], "everywher": [528, 1110], "exactli": [528, 1110, 1276], "avoid": [528, 1110, 1265, 1315, 1322], "converg": [528, 1110], "closer": [528, 1110], "finit": [528, 1110], "accuraci": [528, 1110], "maxit": [528, 1110], "met": [528, 1110], "achiev": [528, 1110], "somewhat": [528, 1110], "thread": [528, 1110], "cpu": [528, 1110], "multiprocess": [528, 1110], "capabl": [528, 1110, 1311, 1317], "relev": [528, 1110], "phidpf_dict": [528, 1110], "phidpr_dict": [528, 529, 530, 1110, 1111, 1112], "forward": [528, 1110, 1232, 1233], "iwanami": [528, 1110], "maki": [528, 1110], "seventh": [528, 1110], "european": [528, 1110], "confer": [528, 1110, 1307], "hydrologi": [528, 1110], "rcov": [529, 1111], "pcov": [529, 1111], "prefilter_psidp": [529, 530, 1111, 1112], "filter_opt": [529, 530, 1111, 1112], "kalman": [529, 1111], "schneeb": [529, 1111], "psidp": [529, 530, 1111, 1112], "char": [529, 530, 1111, 1112], "capit": [529, 530, 1111, 1112], "intercept": [529, 1111], "3x3": [529, 1111], "covari": [529, 1111], "4x4": [529, 1111], "filter_psidp": [529, 530, 1111, 1112], "enabl": [529, 530, 1111, 1112], "kdp_std_dict": [529, 1111], "dev": [529, 1111, 1313, 1320], "ensembl": [529, 1111], "ieee": [529, 1111], "geosci": [529, 1111], "remot": [529, 1111, 1272, 1320], "sen": [529, 1111], "52": [529, 535, 1111, 1117, 1316], "5137": [529, 1111], "5149": [529, 1111], "1109": [529, 1111], "tgr": [529, 1111], "2287017": [529, 1111], "windsiz": [530, 1112], "n_iter": [530, 1112], "interp": [530, 1112], "vulpiani": [530, 1112], "pre": [530, 1112, 1315, 1316], "ex": [530, 1112, 1281, 1320], "advantag": [530, 1112], "eat": [530, 1112], "gianfranco": [530, 1112], "mario": [530, 1112], "montopoli": [530, 1112], "luca": [530, 1112], "delli": [530, 1112], "passeri": [530, 1112], "antonio": [530, 1112], "gioia": [530, 1112], "pietro": [530, 1112], "giordano": [530, 1112], "frank": [530, 1112], "marzano": [530, 1112], "On": [530, 1112], "dual": [530, 1112], "mountain": [530, 1112], "climatol": [530, 1112, 1302], "51": [530, 1112], "405": [530, 1112], "425": [530, 1112], "05024": [530, 1112], "profile_field": [531, 1113], "height_field": [531, 1113], "3re": [531, 1113], "whole": [531, 1113], "height_dict": [531, 1113], "profile_dict": [531, 1113], "nvol": [532, 1114], "maxh": [532, 1114], "rhomin": [532, 1114], "rhomax": [532, 1114], "94": [532, 1114, 1317], "zhmin": [532, 1114], "hwindow": [532, 1114], "mlzhmin": [532, 1114], "mlzhmax": [532, 1114], "mlzdrmin": [532, 1114], "mlzdrmax": [532, 1114], "htol": [532, 1114], "ml_bottom_diff_max": [532, 1114], "time_accu_max": [532, 1114], "1800": [532, 1114, 1309], "nml_points_min": [532, 1114], "wlength": [532, 1114], "percentile_bottom": [532, 1114], "percentile_top": [532, 1114], "time_nodata_allow": [532, 1114], "3600": [532, 1114, 1309], "ml_global": [532, 1114], "aggreg": [532, 534, 1114, 1116, 1303, 1316], "ml_bottom_dif_max": [532, 1114], "percentil": [532, 1114], "stack": [532, 1114, 1319, 1320], "Its": [532, 1114], "kraus": [532, 1114], "design": [532, 1114, 1240, 1292, 1302, 1320], "prototyp": [532, 1114], "clim": [532, 535, 1114, 1117], "1354": [532, 1114], "1364": [532, 1114], "2007jamc1634": [532, 1114], "force_continu": [533, 1115], "dist_max": [533, 1115], "350": [533, 1115], "heightand": [533, 1115], "1400": [534, 1116], "4500": [534, 1116, 1309], "ns_factor": [534, 1116], "rhohv_corr_min": [534, 1116], "rhohv_nash_min": [534, 1116], "ang_iso0": [534, 1116], "age_iso0": [534, 1116], "ml_thickness_iso0": [534, 1116], "ml_memori": [534, 1116], "rhohv_field_ob": [534, 1116], "rhohv_field_theo": [534, 1116], "nse": [534, 1116], "hour": [534, 1116, 1272, 1273], "ml_found_obj": [534, 1116], "instantan": [534, 1116], "desired_angl": [535, 1117], "wanted_angl": [535, 1117], "dictonari": [535, 1117], "troemel": [535, 1117], "2529": [535, 1117], "2548": [535, 1117], "54": [535, 1117, 1273, 1298, 1315], "2344": [535, 1117], "2359": [535, 1117], "submit": [535, 1117, 1307], "technol": [535, 1117], "fm": [536, 1118], "rg": [536, 538, 1118, 1120], "nbin": [536, 1118], "110": [536, 1118], "pdf_zh_max": [536, 1118], "pdf_relh_max": [536, 1118], "sigma_zh": [536, 1118], "sigma_relh": [536, 1118], "random": [536, 538, 1118, 1120], "platykurtic_dbz": [536, 1118], "platykurtic_h_iso0": [536, 1118], "nfeatur": [536, 1118], "histogram": [536, 1118, 1276, 1311], "platykurtik": [536, 1118], "guassian": [536, 1118], "quantiz": [536, 1118], "platykurt": [536, 1118], "fm_sampl": [536, 1118], "intens": [537, 1119, 1316], "work_level": [537, 1119], "peak_rel": [537, 1119], "area_rel": [537, 1119], "medium": [537, 1119], "bkg_rad": [537, 1119], "11000": [537, 1119, 1313], "use_intens": [537, 1119], "steiner": [537, 1119, 1302], "1995": [537, 1119, 1302], "greater": [537, 1119, 1302], "bright": [537, 1119], "sgp": [537, 1119, 1197], "peaked": [537, 1119], "eclass": [537, 1119], "climatolog": [537, 1119, 1302], "gaug": [537, 1119, 1302], "1978": [537, 1119, 1302, 1316], "2007": [537, 1119, 1302], "par_var": [538, 1120], "probabl": [538, 1120, 1235, 1236, 1237, 1249], "membership": [538, 1120], "synthetic_ob": [538, 1120], "z_want": [540, 541, 1122, 1123, 1304, 1315, 1320], "valid_ray_min": [540, 1122, 1320], "brown": [540, 1122, 1265, 1320], "amount": [540, 1122, 1313, 1320], "_averag1d": [540, 1122, 1320], "idw": [540, 1122], "wexler": [540, 1122, 1320], "1968": [540, 1122, 1320], "kinemat": [540, 1122, 1320], "105": [540, 1122, 1315, 1320], "113": [540, 1122, 1320], "linespac": [541, 1123], "michelson": [541, 1123], "andersson": [541, 1123], "koistinen": [541, 1123], "collier": [541, 1123], "riedl": [541, 1123], "szturc": [541, 1123], "gjertsen": [541, 1123], "nielsen": [541, 1123], "overgaard": [541, 1123], "baltex": [541, 1123], "centr": [541, 1123], "smhi": [541, 1123], "swedish": [541, 1123], "meteorolog": [541, 1034, 1123], "hydrolog": [541, 1123], "institut": [541, 1123, 1317], "norrkop": [541, 1123], "statu": [542, 1320], "dependeci": 542, "sy": 542, "descript": [543, 589, 591, 603, 685, 756, 757, 794, 970, 993, 1017, 1030, 1124, 1209, 1257, 1307, 1320], "polish": 543, "risk": 543, "bug": [543, 1265, 1307, 1319, 1320], "prioriti": [543, 1322], "momentpm": 546, "momentm": 546, "share": 546, "extra": [546, 557, 558, 572, 573], "momentspm": 546, "momentsm": 546, "metranet_lib": 546, "keep_all_rai": 557, "physic_valu": [557, 558, 572, 573], "masked_arrai": [557, 558, 572, 573, 1309, 1317], "duplic": [557, 1265], "ret_data": [557, 558, 572, 573], "radardata": [557, 558, 572, 573], "reorder_angl": 558, "reorder": [558, 1265], "properli": [572, 573, 1263, 1273], "cpi_head": 574, "3d": [576, 1315], "sinarame_h5": [581, 587], "folder": [587, 1320], "commun": [589, 1320, 1322], "interact": 603, "az_data": 734, "az_ref": 734, "el_data": 734, "el_ref": 734, "sunhit": [734, 743], "npar": [734, 743], "do_elcorr": 734, "radian": [734, 1210, 1212, 1253], "concret": 1007, "__getitem__": 1007, "__setitem__": 1007, "__delitem__": 1007, "__iter__": 1007, "__len__": 1007, "robust": [1017, 1316], "src_radar": 1018, "dest_radar": 1018, "distance_toler": [1018, 1276], "gatefilter_src": [1018, 1276], "time_toler": [1018, 1276], "kd": 1018, "easi": [1018, 1034, 1307], "src_radar_i": 1018, "src_radar_x": 1018, "destin": [1018, 1020, 1276], "src_radar_tim": 1018, "dest_radar_tim": 1018, "gate_mapp": 1018, "src": [1018, 1315, 1316], "dest": 1018, "dest_index": 1018, "radar_map": 1018, "mapped_radar": [1018, 1276], "adequ": [1018, 1276], "getter": [1019, 1021], "earth_radiu": 1025, "radar_sweep": 1029, "cart_r": 1029, "dictionnari": 1029, "sever": [1029, 1316], "signific": [1029, 1316], "coord": [1029, 1283], "cart_data": 1029, "am": [1034, 1307, 1320], "glossari": 1034, "dry": [1034, 1303], "world": [1034, 1270, 1280], "aloft": [1034, 1315, 1316], "oppos": [1034, 1284], "nwp": [1034, 1303, 1316], "why": [1034, 1320], "think": 1034, "turn": [1034, 1281, 1302, 1307], "spin": 1034, "author": [1034, 1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304], "randi": 1034, "chase": 1034, "dopplerchas": 1034, "american": 1034, "2022": [1034, 1240, 1272, 1284, 1302, 1307, 1320], "ametsoc": 1034, "suffix": 1135, "tmp": 1135, "temporari": 1135, "my_cwd": 1135, "getcwd": 1135, "tmpdir": 1135, "_": [1135, 1272, 1273, 1303, 1316], "txt": [1135, 1319], "wt": 1135, "assert": [1135, 1320], "isfil": 1135, "path_to_fil": 1196, "local": [1196, 1230, 1235, 1239, 1307, 1319, 1320], "site": [1197, 1300, 1310, 1313, 1315, 1316, 1319], "radarspectra": [1200, 1241, 1255], "mu": 1201, "sapr": 1202, "dp_phase_shift": [1202, 1309], "diff_phas": [1202, 1309], "differential_reflect": [1202, 1285, 1292, 1314, 1317], "rectangular": [1203, 1204], "miscellan": 1209, "depreci": 1209, "caution": 1209, "std": [1212, 1213, 1244, 1256], "convolut": 1214, "ndimag": [1214, 1292, 1293], "generic_filt": 1214, "pi": [1214, 1311], "std_dev": 1214, "radar1": [1215, 1216, 1242, 1250], "radar2": [1215, 1216, 1242, 1250], "h_tol": [1215, 1242], "coloc_gates_field": [1215, 1216], "coloc": [1215, 1216], "coloc_dict": [1215, 1216], "azi": [1215, 1216, 1231], "coloc_rad1": [1215, 1216], "distance_upper_bound": 1216, "neighbour": [1216, 1231], "ckdtree": 1216, "bound": 1216, "lin_tran": 1217, "span": 1217, "consdier": 1217, "vec1": [1218, 1220], "vec2": [1218, 1220], "pearson": 1218, "corr": [1218, 1220, 1315], "stat": 1219, "nvalid": 1219, "arr1": 1220, "arr2": 1220, "obs_data": 1221, "mod_data": 1221, "nash": 1221, "sutcliff": 1221, "nash_coeff": 1221, "target_elev": [1223, 1238], "el_tol": [1223, 1238], "radar_ppi": 1223, "epoch": [1224, 1225, 1226, 1227, 1228], "articl": 1229, "var": [1229, 1230, 1261, 1262], "nnois": [1229, 1230], "pwr_w_rai": 1230, "pct": [1230, 1236, 1248], "270436": 1230, "flat_reg_wlen": [1230, 1235, 1246], "flat_reg_var_max": [1230, 1246, 1247], "439551": 1230, "snr_thr": [1230, 1237], "769572": 1230, "ngates_final_min": 1230, "ngates_median": 1230, "83": [1230, 1316], "decibel": 1230, "flat": [1230, 1235, 1246, 1247, 1272, 1315], "inds_rai": 1230, "inds_ray_aux": 1231, "ind_rng_aux": 1231, "target_latitud": [1232, 1258], "target_longitud": [1232, 1258], "bear": 1232, "alongitudeg": 1232, "great": [1232, 1258], "circl": [1232, 1258, 1302], "known": [1232, 1317, 1320], "6371000": [1232, 1258], "calculatitude": 1232, "degress": [1232, 1258], "sphere_dist": 1234, "for_azimuth": 1234, "get_column_rai": 1234, "xarari": 1234, "prob_thr": [1235, 1236], "var_thr": 1235, "0001": 1236, "pct_out": 1236, "pfa_thr": 1237, "alarm": [1237, 1249], "xwind": 1239, "ywind": 1239, "win_std": 1239, "mute_field": [1240, 1284], "mute_threshold": [1240, 1284], "field_threshold": [1240, 1284], "discern": 1240, "mute": [1240, 1270, 1280, 1302], "tomkin": [1240, 1284, 1302], "miller": [1240, 1284], "allen": [1240, 1284], "identif": [1240, 1284], "5515": [1240, 1284], "5525": [1240, 1284], "kind": [1241, 1257, 1316], "psr_interp": 1241, "vol_d_tol": 1242, "vismin": 1242, "azmin": 1242, "azmax": 1242, "visib_field": 1242, "intersec_field": 1242, "regard": 1242, "decim": 1242, "diamet": 1242, "intersec_rad1_dict": 1242, "interval_min": [1243, 1244], "interval_max": [1243, 1244], "endpoint": [1243, 1244], "to_vpt": 1245, "verticl": 1245, "prescrib": 1246, "ivic_flat_reg_wind_len": 1246, "throw": [1248, 1249], "pfa": [1248, 1249], "1e": [1248, 1249, 1309, 1317], "matlab": 1248, "get_ivic_pct": 1248, "particularli": 1248, "pct_tabl": 1248, "snr_thr_out": 1249, "coerce_angl": [1250, 1265], "slightli": [1250, 1283, 1316], "slight": 1250, "misposit": [1250, 1265], "spectra1": 1251, "spectra2": 1251, "tup": 1252, "guarante": 1252, "broadcast": 1252, "broadcasted_arrai": 1252, "angles1": 1253, "angles2": 1253, "angle1": 1254, "angle2": 1254, "eg": 1256, "ma": [1256, 1276, 1277, 1302, 1310, 1314, 1320], "sim_vel_field": 1257, "slinear": 1257, "quadrat": 1257, "cubic": 1257, "interp1d": [1257, 1320], "sim_vel": [1257, 1320], "coverag": [1259, 1260, 1315], "11pt": 1261, "stdev": 1261, "texarrai": 1261, "pyradarobj": 1261, "tex": 1262, "single_scan": 1263, "is_vpt": 1263, "mislabel": 1263, "releas": [1264, 1307, 1310, 1313, 1315, 1319, 1320], "dec": 1264, "2023": 1264, "guid": [1264, 1307], "broken": 1264, "h5": 1265, "writer": [1265, 1307], "latlon": 1265, "cross_sect": 1265, "gridmapdisplai": [1265, 1270, 1280, 1282, 1302, 1313, 1315], "_rsl_interfac": 1265, "pyx": 1265, "pyart": [1265, 1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1322], "read_product": 1265, "behaviour": 1265, "deprec": [1265, 1310, 1313, 1315], "conv_strat_yut": [1265, 1302], "pull": [1265, 1273, 1307, 1320], "com": [1265, 1293, 1319, 1320, 1322], "juhi24": 1265, "patch": [1265, 1292], "radar_util": 1265, "register_cmap": 1265, "gecsx": [1265, 1307], "join_radar": [1265, 1315], "colobar": [1265, 1283], "graph": [1265, 1267, 1268, 1272, 1273, 1276, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1309, 1310, 1311, 1313, 1314, 1315, 1316], "_label_axes_latlon": 1265, "minor": [1265, 1310, 1313, 1315], "rad4alp_gif_read": 1265, "imageio": 1265, "nrow": [1265, 1281], "ncol": 1265, "flip": [1265, 1315], "agre": 1265, "cpc": 1265, "plot_xsect": [1265, 1298, 1318], "radardisplai": [1265, 1267, 1268, 1281, 1284, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1301, 1303, 1315, 1316], "rainforest": 1265, "compute_refl_time_avg": 1265, "crash": 1265, "radar_": 1265, "care": 1265, "read_odim_h5": 1265, "guidelin": 1265, "prohibit": 1265, "write_odim_grid": 1265, "interfac": 1265, "setuptool": 1265, "interpol_field": 1265, "northernmost": 1265, "sphx_glr_examples_correct_plot_attenu": [1266, 1269, 1270, 1318], "sphx_glr_examples_correct_plot_dealia": [1266, 1269, 1270, 1318], "__doc__": [1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1302], "jonathan": [1267, 1268, 1277, 1278, 1285, 1286, 1288, 1290, 1294, 1297, 1322], "helmu": [1267, 1268, 1277, 1278, 1285, 1286, 1288, 1290, 1294, 1297, 1307, 1309, 1310, 1311, 1313, 1314, 1317, 1320, 1322], "jhelmu": [1267, 1268, 1277, 1278, 1285, 1286, 1288, 1290, 1294, 1297], "anl": [1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1290, 1292, 1293, 1294, 1295, 1297, 1300, 1301], "licens": [1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1307, 1320], "bsd": [1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1307, 1320], "claus": [1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1320], "pyplot": [1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1309, 1310, 1311, 1313, 1314, 1315, 1316], "plt": [1267, 1268, 1272, 1273, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302, 1303, 1304, 1309, 1310, 1311, 1313, 1314, 1315, 1316], "get_test_data": [1267, 1268, 1276, 1277, 1278, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1302], "sgpcsaprsurcmaci7": [1267, 1310], "c0": [1267, 1290, 1291, 1295, 1310], "20110520": [1267, 1310], "095101": [1267, 1310], "read_cfradi": [1267, 1276, 1278, 1282, 1290, 1291, 1295, 1303, 1304, 1315, 1316], "pop": 1267, "specific_attenu": [1267, 1303, 1309, 1314, 1316], "corrected_reflectivity_horizont": [1267, 1278, 1282, 1300, 1309], "calculate_attenu": 1267, "add_field": [1267, 1268, 1302, 1303, 1310, 1311, 1315, 1316, 1320], "figsiz": [1267, 1268, 1272, 1273, 1276, 1281, 1282, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1301, 1302, 1303, 1310, 1311, 1313, 1314, 1315, 1316], "ax1": [1267, 1268, 1282, 1296, 1297, 1302], "add_subplot": [1267, 1268, 1277, 1278, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1297], "131": [1267, 1302], "raw": [1267, 1268, 1307, 1308, 1315], "ax2": [1267, 1268, 1276, 1282, 1296, 1297, 1301, 1302, 1311], "132": [1267, 1302], "ax3": [1267, 1268, 1296, 1302], "133": [1267, 1302], "suptitl": [1267, 1268, 1295, 1304, 1315], "fontsiz": [1267, 1268, 1281, 1283, 1292, 1293], "ial": 1268, "095636": [1268, 1311], "sonde_fil": 1268, "sgpinterpolatedsondec1": 1268, "c1": [1268, 1314], "20110510": 1268, "000000": 1268, "cdf": 1268, "read_arm_sonde_vap": 1268, "exclude_transit": [1268, 1277, 1278, 1282, 1301], "exclude_invalid": 1268, "exclude_outsid": 1268, "80": [1268, 1296, 1301], "dealias_data": 1268, "dealias_region_bas": [1268, 1311, 1315], "corrected_veloc": [1268, 1304, 1311, 1314, 1315], "sixth": 1268, "221": [1268, 1285, 1315], "223": [1268, 1285, 1315], "ax4": 1268, "224": [1268, 1285, 1315], "173": 1269, "mem": [1269, 1274, 1279, 1298, 1305, 1306, 1318], "mb": [1269, 1274, 1279, 1298, 1305, 1306, 1318], "plot_dealia": [1269, 1318], "761": [1269, 1318], "plot_attenu": [1269, 1318], "00": [1269, 1274, 1279, 1298, 1305, 1306, 1318], "09": [1269, 1302, 1318], "413": [1269, 1318], "download": [1270, 1307, 1320, 1322], "varieti": [1270, 1271, 1320], "sphx_glr_examples_io_plot_older_nexrad_data_aw": [1270, 1271, 1274, 1318], "sphx_glr_examples_io_plot_nexrad_data_aw": [1270, 1271, 1274, 1318], "aw": [1270, 1271, 1273], "sphx_glr_examples_mapping_plot_map_one_radar_to_grid": [1270, 1275, 1279, 1318], "sphx_glr_examples_mapping_plot_map_two_radars_to_grid": [1270, 1275, 1279, 1318], "sphx_glr_examples_mapping_plot_compare_two_radars_gatemapp": [1270, 1275, 1279, 1318], "gatemapp": [1270, 1275], "sphx_glr_examples_plotting_plot_rhi_mdv": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_ppi_mdv": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_ppi_cfradi": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_nexrad_reflect": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_xsect": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_rhi_cfradial_singlescan": [1270, 1280, 1298, 1318], "panel": [1270, 1280], "sphx_glr_examples_plotting_plot_rhi_two_panel": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_nexrad_multiple_mo": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_rhi_cfradi": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_three_panel_gridmapdisplai": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_ppi_with_r": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_nexrad_image_muted_reflect": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_cross_sect": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_rhi_data_overlai": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_modify_colorbar": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_rhi_contours_differential_reflect": [1270, 1280, 1298, 1318], "sphx_glr_examples_plotting_plot_choose_a_colormap": [1270, 1280, 1298, 1318], "sphx_glr_examples_retrieve_plot_column_subset": [1270, 1299, 1305, 1318], "sphx_glr_examples_retrieve_plot_composite_reflect": [1270, 1299, 1305, 1318], "sphx_glr_examples_retrieve_plot_vad": [1270, 1299, 1305, 1318], "sphx_glr_examples_retrieve_plot_hydrometeor": [1270, 1299, 1305, 1318], "sphx_glr_examples_retrieve_plot_convective_stratiform": [1270, 1299, 1305, 1318], "examples_python": 1270, "zip": [1270, 1281, 1307], "jupyt": [1270, 1322], "notebook": [1270, 1310, 1313, 1314, 1320, 1322], "examples_jupyt": 1270, "sphinx": 1270, "next": 1272, "quick": 1272, "grover": [1272, 1276, 1281, 1282, 1287, 1295, 1300, 1301], "mgrover": [1272, 1276, 1281, 1282, 1287, 1295, 1300, 1301], "ccr": [1272, 1273, 1276, 1282, 1283, 1289, 1296, 1300, 1302, 1310, 1311, 1314, 1315, 1316], "let": [1272, 1273, 1276, 1281, 1283, 1300, 1302, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1320, 1322], "administr": 1272, "level2": [1272, 1273, 1284, 1302], "bucket": 1272, "organ": 1272, "year": [1272, 1273, 1320], "month": [1272, 1273], "radarsit": [1272, 1273], "minut": [1272, 1273, 1276, 1315], "_v06": 1272, "houston": 1272, "texa": 1272, "khgx": 1272, "march": 1272, "1201": 1272, "utc": [1272, 1273, 1295], "aws_nexrad_level2_fil": [1272, 1273], "03": [1272, 1298, 1305, 1318], "khgx20220322_120125_v06": 1272, "read_nexrad_arch": [1272, 1273, 1284, 1285, 1286, 1302], "summari": 1272, "radarmapdisplai": [1272, 1273, 1276, 1283, 1289, 1300, 1309, 1310, 1311, 1313, 1314, 1316], "subplot": [1272, 1276, 1281, 1282, 1283, 1295, 1300, 1301, 1302, 1303, 1304, 1311, 1315, 1316], "121": [1272, 1276, 1282, 1301], "plot_ppi_map": [1272, 1273, 1276, 1283, 1289, 1300, 1310, 1311, 1314, 1316], "relect": 1272, "z_": [1272, 1276, 1283], "v_": 1272, "70": [1272, 1276, 1282], "n0u": 1272, "noq": 1272, "level3": 1272, "aws_nexrad_level3_velocity_fil": 1272, "hgx_n0u_2022_03_22_12_01_25": 1272, "aws_nexrad_level3_reflectivity_fil": 1272, "hgx_n0q_2022_03_22_12_01_25": 1272, "read_nexrad_level3": 1272, "radar_level3_veloc": 1272, "radar_level3_reflect": 1272, "confirm": [1272, 1309], "setup": [1272, 1276, 1281, 1282, 1287, 1300, 1307, 1319], "reflectivity_displai": 1272, "velocity_displai": 1272, "zachari": 1273, "sherman": 1273, "zsherman": [1273, 1322], "our": [1273, 1276, 1281, 1282, 1300, 1302, 1316], "packag": [1273, 1307, 1310, 1313, 1315, 1316, 1319, 1320, 1322], "tendenc": 1273, "usual": [1273, 1320], "gz": 1273, "handford": 1273, "ca": 1273, "khnx": 1273, "juli": [1273, 1315], "0203": 1273, "v06": 1273, "khnx20060724_020338": 1273, "filepath": 1273, "now": [1273, 1276, 1281, 1283, 1300, 1302, 1309, 1311, 1315, 1316, 1319], "clearli": [1273, 1315, 1316], "lucki": 1273, "plote": [1273, 1289], "central_latitud": [1273, 1289, 1302, 1310], "central_longitud": [1273, 1289, 1302, 1310], "902": 1274, "plot_nexrad_data_aw": [1274, 1318], "14": [1274, 1281, 1283, 1315, 1317, 1318], "938": [1274, 1318], "plot_older_nexrad_data_aw": [1274, 1318], "08": [1274, 1298, 1318], "bobbi": 1276, "jackson": 1276, "rjackson": 1276, "filterwarn": 1276, "xsapr": [1276, 1278, 1282], "xsapr_sw_fil": [1276, 1278, 1282], "swx_20120520_0641": [1276, 1278, 1281, 1282, 1283, 1287, 1297, 1300, 1301, 1302], "xsapr_se_fil": [1276, 1278, 1282], "sex_20120520_0641": [1276, 1278, 1282], "radar_sw": [1276, 1278, 1282], "radar_s": [1276, 1278, 1282], "southwestern": 1276, "southeastern": 1276, "gmapper": 1276, "radar_sw_mapped_to_radar_s": 1276, "notic": [1276, 1283], "disp1": 1276, "37": [1276, 1300, 1314, 1315], "98": [1276, 1300, 1314, 1315], "arang": [1276, 1289, 1292, 1293, 1300, 1303, 1304, 1315, 1316, 1320], "96": [1276, 1314], "disp2": 1276, "remap": 1276, "difficult": 1276, "eyebal": 1276, "fortun": 1276, "mind": [1276, 1320], "cours": [1276, 1320], "reflectivity_se_radar": 1276, "reflectivity_sw_radar": 1276, "reflectivity_differ": 1276, "add_field_lik": 1276, "reflectivity_bia": 1276, "111": [1276, 1277, 1278, 1283, 1286, 1287, 1288, 1292, 1293, 1294, 1300], "pyart_bal": [1276, 1295, 1311], "southwest": 1276, "xspar": 1276, "southeast": 1276, "neccessarili": 1276, "incl_gat": 1276, "argwher": 1276, "refl_s": 1276, "refl_sw": 1276, "values_without_mask": 1276, "logical_and": 1276, "flatten": 1276, "hist": [1276, 1311], "histogram2d": 1276, "masked_wher": [1276, 1314], "meshgrid": 1276, "pyart_homeyerrainbow": [1276, 1281, 1282, 1283, 1288, 1291, 1295, 1296, 1301], "log_": 1276, "xlabel": [1276, 1290, 1291, 1311], "ylabel": [1276, 1290, 1291, 1311], "110635": [1277, 1288, 1313], "241": 1277, "123000": 1277, "xsarp": [1278, 1290, 1291], "gatefilter_s": [1278, 1282], "exclude_abov": [1278, 1282, 1311], "gatefilter_sw": [1278, 1282], "201": [1278, 1302, 1313], "57861": [1278, 1282], "363611": [1278, 1282], "48": 1278, "923": 1279, "plot_compare_two_radars_gatemapp": [1279, 1318], "439": [1279, 1318], "plot_map_two_radars_to_grid": [1279, 1318], "626": [1279, 1318], "plot_map_one_radar_to_grid": [1279, 1318], "857": [1279, 1318], "visual": [1281, 1284, 1292, 1300, 1316], "linspac": [1281, 1284, 1302, 1309, 1320], "256": [1281, 1303, 1316], "vstack": 1281, "def": [1281, 1320], "plot_color_gradi": 1281, "cmap_categori": 1281, "cmap_list": 1281, "len": [1281, 1295, 1303, 1309, 1316], "figh": 1281, "subplots_adjust": [1281, 1290, 1291], "set_titl": [1281, 1302], "cmap_nam": 1281, "auto": [1281, 1315], "pyart_": 1281, "va": 1281, "transax": 1281, "spine": 1281, "set_axis_off": 1281, "colorblind": 1281, "friendli": 1281, "langrainbow12": 1281, "homeyerrainbow": 1281, "balanc": 1281, "chasespectr": 1281, "spectralextend": 1281, "perceptu": [1281, 1284], "light": [1281, 1303, 1316], "bu10": 1281, "bu7": 1281, "gray5": 1281, "gray9": 1281, "diverg": 1281, "meaning": 1281, "bluebrown11": 1281, "brbu10": 1281, "brbu12": 1281, "budor12": 1281, "budor18": 1281, "budrd12": 1281, "budrd18": 1281, "bugr14": 1281, "bugy8": 1281, "buor10": 1281, "buor12": 1281, "buor8": 1281, "buorr14": 1281, "grmg16": 1281, "rdylbu11b": 1281, "There": [1281, 1316, 1319, 1322], "bluebrown10": 1281, "nwsref": 1281, "carbone11": 1281, "carbone17": 1281, "carbone42": 1281, "cat12": 1281, "ewilson17": 1281, "nwsvel": 1281, "nws_spw": 1281, "pd17": 1281, "rrate11": 1281, "refdiff": 1281, "scook18": 1281, "stepseq25": 1281, "symgray12": 1281, "theodore16": 1281, "wild25": 1281, "spectral_r": 1281, "rememb": 1281, "front": [1281, 1315], "shown": 1281, "181": 1282, "plot_grid": [1282, 1296, 1302, 1313, 1315], "scatter": [1282, 1300], "tab": 1282, "blue": [1282, 1292, 1293, 1316], "black": [1282, 1300], "legend": 1282, "plot_cross_sect": [1282, 1298, 1318], "joe": 1283, "brien": 1283, "obrienj": 1283, "perfect": 1283, "overlap": [1283, 1292], "gridlin": 1283, "gl": 1283, "draw_label": 1283, "grai": [1283, 1284, 1316], "gca": 1283, "set_major_loc": 1283, "nullloc": 1283, "top_label": 1283, "right_label": 1283, "xlabel_styl": 1283, "ylabel_styl": 1283, "delet": [1283, 1320], "del": 1283, "manipul": [1283, 1308], "axsb": 1283, "ppi_map": 1283, "cbar": 1283, "set_label": 1283, "set_tick": 1283, "reduc": [1284, 1319], "promin": 1284, "deemphas": 1284, "depict": 1284, "ultim": [1284, 1316], "misinterpret": 1284, "laura": [1284, 1302], "lmtomkin": [1284, 1302], "ncsu": [1284, 1302], "citat": 1284, "mcolor": [1284, 1302], "nexrad_fil": [1284, 1302], "2020": [1284, 1307, 1319, 1320], "kbgm": 1284, "kbgm20200207_132642_v06": 1284, "image_mute_radar": [1284, 1302], "cross_correlation_ratio": [1284, 1285, 1302, 1314, 1317], "magma_cmap": 1284, "get_cmap": [1284, 1302], "magma_r": [1284, 1302], "grays_cmap": 1284, "gray_r": 1284, "nonmuted_cmap": 1284, "linearsegmentedcolormap": [1284, 1302], "from_list": [1284, 1302], "muted_cmap": 1284, "nonmuted_reflect": [1284, 1302], "muted_reflect": 1284, "300": [1284, 1285, 1309], "set_aspect": [1284, 1302, 1303, 1315, 1316], "katx20130717_195021_v06": [1285, 1317], "differential_phas": [1285, 1314, 1317], "level2_katx_20130717_1950": 1286, "ar2v": 1286, "super": [1286, 1310, 1313, 1315], "plot_range_r": [1286, 1287, 1289], "main": [1287, 1320], "plot_cross_hair": 1287, "150": [1288, 1311], "jason": [1289, 1296], "hemeding": [1289, 1296], "nsaxsaprppic1": 1289, "a1": 1289, "20140201": 1289, "184802": 1289, "157": [1289, 1298, 1318], "156": 1289, "71": 1289, "158": 1289, "154": 1289, "69": [1289, 1315], "72": 1289, "40km": 1289, "plot_line_xi": 1289, "plot_point": 1289, "sgpxsaprrhicmaci5": [1290, 1291, 1295], "20110524": [1290, 1291, 1295], "015604_nc4": [1290, 1291, 1295], "instrument_nam": [1290, 1291, 1317], "hspace": [1290, 1291], "agl": 1290, "fac": 1290, "nplot": [1290, 1291, 1295], "snum": 1290, "hsrhi": [1290, 1291], "3f": [1290, 1291], "time_start": 1290, "num2dat": 1290, "only_use_cftime_datetim": 1290, "only_use_python_datetim": 1290, "figure_titl": 1290, "isoformat": 1290, "differnenti": 1292, "cori": [1292, 1293], "weber": [1292, 1293], "cweber": [1292, 1293], "220629": 1292, "white": 1292, "matplolib": 1292, "visabl": 1292, "border": [1292, 1316], "flow": 1292, "paramt": 1292, "compens": 1292, "nearli": 1292, "00015": 1292, "veri": [1292, 1302, 1315, 1316], "antialias": [1292, 1293], "moir": 1292, "get_start": [1292, 1293], "get_end": [1292, 1293], "blur": 1292, "nice": [1292, 1319], "arbirarli": 1292, "impact": 1292, "gaussian_filt": [1292, 1293], "levels_rain": 1292, "levels_ic": 1292, "contours_ic": 1292, "contours_rain": 1292, "red": [1292, 1293], "fmt": [1292, 1293], "0000": [1292, 1293], "clabel": [1292, 1293], "inlin": [1292, 1293], "spyi": 1293, "034142": 1293, "ramp": 1293, "blob": 1293, "pyart_budrd18": 1293, "comment": [1293, 1317], "coutour": 1293, "solid": 1293, "dot": 1293, "major": [1293, 1315], "axhlin": 1293, "dash": 1293, "axvlin": 1293, "00b4ff": 1293, "ff6800": 1293, "set_ylabel": [1293, 1304, 1315], "cp": 1293, "110041": 1294, "fields_to_plot": 1295, "plot_num": 1295, "grab": 1295, "u00b0": 1295, "20110520100000_nexrad_grid": 1296, "read_grid": 1296, "map_panel_ax": 1296, "x_cut_panel_ax": 1296, "y_cut_panel_ax": 1296, "add_ax": [1296, 1315], "ref": 1296, "plot_crosshair": 1296, "plot_longitude_slic": 1296, "set_ylim": [1296, 1303, 1315, 1316], "set_xlim": [1296, 1303, 1315, 1316], "plot_latitude_slic": [1296, 1313, 1315], "225": 1297, "270": [1297, 1298, 1315, 1318, 1320], "xsect": 1297, "cross_section_ppi": [1297, 1315], "211": 1297, "212": 1297, "tight_layout": 1297, "486": 1298, "842": [1298, 1318], "plot_three_panel_gridmapdisplai": [1298, 1318], "806": [1298, 1318], "plot_ppi_with_r": [1298, 1318], "956": [1298, 1318], "plot_nexrad_image_muted_reflect": [1298, 1318], "04": [1298, 1318], "341": [1298, 1318], "plot_nexrad_multiple_mo": [1298, 1318], "715": [1298, 1318], "plot_modify_colorbar": [1298, 1318], "136": [1298, 1318], "plot_ppi_mdv": [1298, 1318], "plot_choose_a_colormap": [1298, 1318], "143": [1298, 1315, 1318], "plot_nexrad_reflect": [1298, 1318], "859": [1298, 1318], "plot_rhi_cfradi": [1298, 1318], "816": [1298, 1318], "plot_rhi_contours_differential_reflect": [1298, 1318], "387": [1298, 1318], "plot_ppi_cfradi": [1298, 1318], "365": [1298, 1318], "plot_rhi_data_overlai": [1298, 1318], "335": [1298, 1318], "plot_rhi_cfradial_singlescan": [1298, 1318], "plot_rhi_mdv": [1298, 1318], "891": [1298, 1318], "plot_rhi_two_panel": [1298, 1318], "828": [1298, 1318], "maxwel": [1300, 1301], "site_lon": 1300, "73": 1300, "site_lat": 1300, "latitdu": 1300, "columnsect": 1300, "get_field_loc": 1300, "compz": 1301, "composite_reflect": 1301, "composite_displai": 1301, "classifc": 1302, "summer": 1302, "ian": 1302, "footprint": 1302, "yield": 1302, "smoother": 1302, "rescal": 1302, "simpli": [1302, 1311, 1313, 1319, 1320, 1322], "plot_convstrat_schem": 1302, "pick": 1302, "radii": 1302, "dilat": 1302, "event": [1302, 1315, 1316], "extract_sweep": [1302, 1304], "convsf_mask": 1302, "masked_equ": 1302, "convsf": 1302, "magma_r_cmap": 1302, "ref_cmap": 1302, "albersequalarea": 1302, "convsf_und": 1302, "overestim": 1302, "convsf_ov": 1302, "uncertainti": 1302, "underest": 1302, "overest": 1302, "ktbw": 1302, "ktbw20220928_190142_v06": 1302, "rasumussen": 1302, "reflecit": 1302, "kokx": 1302, "kokx20210207_161413_v06": 1302, "nonmuted_ref": 1302, "masked_invalid": 1302, "nonmuted_ref_linear": 1302, "mm6": 1302, "m3": 1302, "snow_rat": 1302, "57": 1302, "67": 1302, "snow_rate_dict": 1302, "standard_nam": [1302, 1310, 1317], "hr": 1302, "40500": 1302, "purpos": 1302, "034": 1302, "ccotd": 1302, "rasmussen": 1302, "dixon": 1302, "vasiloff": 1302, "hage": 1302, "knight": 1302, "vivekanandan": 1302, "xu": 1302, "nowcast": 1302, "042": 1302, "3c0020": 1302, "snuart": 1302, "daniel": [1303, 1304], "mpl": [1303, 1310, 1313, 1315, 1316], "open_radar_data": [1303, 1304], "fetch": [1303, 1304, 1320], "mll2217907250u": 1303, "003": [1303, 1316], "preinterpol": 1303, "20220628072500_savevol_cosmo_lookup_temp": 1303, "nwp_temp": 1303, "calculate_attenuation_zphi": [1303, 1316], "uncorrected_differential_phas": [1303, 1316], "pia": [1303, 1316], "pida": [1303, 1316], "corrected_reflect": [1303, 1314, 1316], "corrected_differential_reflect": [1303, 1314, 1316], "kdp_maesaka": [1303, 1316], "specific_differential_phas": [1303, 1314, 1316], "hydro": [1303, 1316], "hydroclass_semisupervis": [1303, 1316], "uncorrected_cross_correlation_ratio": [1303, 1316], "radar_echo_classif": [1303, 1316], "boundarynorm": [1303, 1316], "crystal": [1303, 1316], "rime": [1303, 1316], "particl": [1303, 1316], "hail": [1303, 1316], "graupel": [1303, 1316], "mla2119412050u": 1304, "zlevel": [1304, 1315], "u_allsweep": 1304, "v_allsweep": 1304, "idx": 1304, "radar_1sweep": 1304, "vad_brown": [1304, 1315], "u_avg": 1304, "nanmean": [1304, 1315], "v_avg": 1304, "rad2deg": [1304, 1315], "sharei": [1304, 1315, 1316], "set_xlabel": [1304, 1315], "216": 1305, "plot_convective_stratiform": [1305, 1318], "897": [1305, 1318], "plot_composite_reflect": [1305, 1318], "258": [1305, 1318], "plot_vad": [1305, 1318], "990": [1305, 1318], "plot_hydrometeor": [1305, 1318], "855": [1305, 1318], "plot_column_subset": [1305, 1318], "217": [1305, 1318], "000": 1306, "cookbook": [1307, 1321], "depth": [1307, 1317, 1320], "conceptu": 1307, "understand": 1307, "search": [1307, 1319], "galleri": [1307, 1318], "demonstr": 1307, "toolkit": [1307, 1309, 1310, 1311, 1313, 1314, 1317], "basi": 1307, "pyrad": [1307, 1315, 1316, 1320], "exploit": 1307, "prefer": [1307, 1319], "submodul": [1307, 1313], "superproject": 1307, "propos": 1307, "bleed": 1307, "among": 1307, "europ": 1307, "fmi": 1307, "windcub": 1307, "leospher": 1307, "research": [1307, 1309, 1310, 1311, 1313, 1314, 1317, 1320], "facil": [1307, 1309, 1310, 1311, 1313, 1314, 1317, 1320], "colli": [1307, 1309, 1310, 1311, 1313, 1314, 1317, 1320], "languag": [1307, 1320], "e25": [1307, 1320], "5334": [1307, 1309, 1310, 1311, 1313, 1314, 1317, 1320], "jor": [1307, 1309, 1310, 1311, 1313, 1314, 1317, 1320], "119": [1307, 1309, 1310, 1311, 1313, 1314, 1317, 1320], "lainer": [1307, 1320], "schauweck": [1307, 1320], "framework": [1307, 1320], "330": [1307, 1320], "abil": [1307, 1322], "ii": [1307, 1317], "sophist": 1307, "tutori": 1307, "erad": 1307, "easiest": [1307, 1320], "latest": [1307, 1320], "januari": 1307, "1st": 1307, "anaconda": [1307, 1319, 1320], "miniconda": [1307, 1320], "environ": [1307, 1316, 1319, 1321], "yml": [1307, 1322], "env": [1307, 1310, 1313, 1315, 1316, 1322], "Or": 1307, "basic": [1307, 1308, 1310], "pyart_env": [1307, 1310, 1313, 1322], "forg": [1307, 1319, 1320, 1322], "pyart_mch": [1307, 1319, 1320, 1322], "termin": [1307, 1320, 1322], "prompt": [1307, 1320], "wish": 1307, "unreleas": 1307, "clone": [1307, 1319], "git": [1307, 1319, 1320, 1322], "repositori": [1307, 1319, 1320, 1322], "Then": [1307, 1319, 1320], "scientif": [1307, 1320], "linux": [1307, 1320, 1322], "mac": 1307, "charg": 1307, "resourc": [1307, 1319], "lassen": 1307, "radtec": 1307, "rsl_path": [1307, 1319], "usr": 1307, "anaconda3": [1307, 1310, 1313, 1315, 1316, 1319, 1322], "h5py": 1307, "solver": 1307, "fastest": 1307, "cbc": 1307, "glpk": 1307, "coincbc": [1307, 1319, 1322], "coin_install_dir": [1307, 1319, 1322], "wradlib": 1307, "pytest": [1307, 1319, 1320], "discuss": 1307, "appreci": 1307, "sometim": 1309, "might": [1309, 1322], "hypothet": 1309, "doesn": 1309, "partli": [1309, 1310, 1311, 1313, 1314, 1317], "depart": [1309, 1310, 1311, 1313, 1314, 1317], "energi": [1309, 1310, 1311, 1313, 1314, 1317], "radiat": [1309, 1310, 1311, 1313, 1314, 1317, 1320], "offic": [1309, 1310, 1311, 1313, 1314, 1317], "scienc": [1309, 1310, 1311, 1313, 1314, 1317], "cite": [1309, 1310, 1311, 1313, 1314, 1317], "jj": [1309, 1310, 1311, 1313, 1314, 1317], "sm": [1309, 1310, 1311, 1313, 1314, 1317], "test_radar": [1309, 1320], "idea": [1309, 1311, 1315, 1316], "dict_kei": [1309, 1314], "recalculated_diff_phas": 1309, "unf_dp_phase_shift": 1309, "rain_rate_a": [1309, 1314], "diff_reflect": 1309, "time_coverage_start": [1309, 1317], "time_coverage_end": 1309, "volume_numb": 1309, "platform_typ": 1309, "instrument_typ": 1309, "primary_axi": 1309, "667": 1309, "make_empty_ppi_radar": 1309, "59416667": 1309, "As": [1309, 1311, 1313, 1314, 1320], "isn": 1309, "120": [1309, 1316], "240": 1309, "420": 1309, "480": 1309, "540": 1309, "660": 1309, "720": 1309, "780": 1309, "840": 1309, "900": 1309, "960": 1309, "1020": 1309, "1080": 1309, "1140": 1309, "1200": 1309, "1260": 1309, "1320": 1309, "1380": [1309, 1316], "1440": 1309, "1500": 1309, "1560": 1309, "1620": 1309, "1680": 1309, "1740": 1309, "1860": 1309, "1920": 1309, "1980": 1309, "2040": 1309, "2100": 1309, "2160": 1309, "2220": 1309, "2280": 1309, "2340": 1309, "2400": 1309, "2460": 1309, "2520": 1309, "2580": 1309, "2640": [1309, 1316], "2700": 1309, "2760": 1309, "2820": 1309, "2880": 1309, "2940": 1309, "3060": 1309, "3120": 1309, "3180": 1309, "3240": 1309, "3300": 1309, "3360": 1309, "3420": 1309, "3480": 1309, "3540": 1309, "3660": 1309, "3720": 1309, "3780": 1309, "3840": 1309, "3900": 1309, "3960": 1309, "4020": 1309, "4080": 1309, "4140": 1309, "4200": [1309, 1316], "4260": 1309, "4320": 1309, "4380": 1309, "4440": 1309, "4560": 1309, "4620": 1309, "4680": 1309, "4740": 1309, "4800": 1309, "4860": 1309, "4920": 1309, "4980": 1309, "5040": 1309, "5100": 1309, "5160": 1309, "5220": 1309, "5280": 1309, "5340": 1309, "5400": 1309, "5460": 1309, "5520": 1309, "5580": 1309, "5640": 1309, "5700": 1309, "5760": 1309, "5820": 1309, "5880": 1309, "5940": 1309, "6060": 1309, "6120": 1309, "6180": 1309, "6240": 1309, "6300": 1309, "6360": 1309, "6420": 1309, "6480": 1309, "6540": 1309, "6600": 1309, "6660": 1309, "6720": 1309, "6780": 1309, "6840": 1309, "6900": 1309, "6960": 1309, "7020": 1309, "7080": 1309, "7140": 1309, "7200": [1309, 1317], "7260": 1309, "7320": 1309, "7380": 1309, "7440": 1309, "7500": 1309, "7560": 1309, "7620": 1309, "7680": 1309, "7740": 1309, "7800": 1309, "7860": 1309, "7920": 1309, "7980": 1309, "8040": 1309, "8100": 1309, "8160": 1309, "8220": 1309, "8280": 1309, "8340": 1309, "8400": 1309, "8460": 1309, "8520": 1309, "8580": 1309, "8640": 1309, "8700": 1309, "8760": 1309, "8820": 1309, "8880": 1309, "8940": 1309, "9000": [1309, 1313], "9060": 1309, "9120": 1309, "9180": 1309, "9240": 1309, "9300": 1309, "9360": 1309, "9420": 1309, "9480": 1309, "9540": 1309, "9600": 1309, "9660": 1309, "9720": 1309, "9780": 1309, "9840": 1309, "9900": 1309, "9960": 1309, "10020": 1309, "10080": 1309, "10140": 1309, "10200": 1309, "10260": 1309, "10320": 1309, "10380": 1309, "10440": 1309, "10500": 1309, "10560": 1309, "10620": 1309, "10680": 1309, "10740": 1309, "10800": 1309, "10860": 1309, "10920": 1309, "10980": 1309, "11040": 1309, "11100": 1309, "11160": 1309, "11220": 1309, "11280": 1309, "11340": 1309, "11400": 1309, "11460": 1309, "11520": 1309, "11580": 1309, "11640": 1309, "11700": 1309, "11760": 1309, "11820": 1309, "11880": 1309, "11940": 1309, "12000": [1309, 1313], "12060": 1309, "12120": 1309, "12180": 1309, "12240": 1309, "12300": 1309, "12360": 1309, "12420": 1309, "12480": 1309, "12540": 1309, "12600": 1309, "12660": 1309, "12720": 1309, "12780": 1309, "12840": 1309, "12900": 1309, "12960": 1309, "13020": 1309, "13080": 1309, "13140": 1309, "13200": 1309, "13260": 1309, "13320": 1309, "13380": 1309, "13440": 1309, "13500": 1309, "13560": 1309, "13620": 1309, "13680": 1309, "13740": 1309, "13800": 1309, "13860": 1309, "13920": 1309, "13980": 1309, "14040": 1309, "14100": 1309, "14160": 1309, "14220": 1309, "14280": 1309, "14340": 1309, "14400": 1309, "14460": 1309, "14520": 1309, "14580": 1309, "14640": 1309, "14700": 1309, "14760": 1309, "14820": 1309, "14880": 1309, "14940": 1309, "15060": 1309, "15120": 1309, "15180": 1309, "15240": 1309, "15300": 1309, "15360": 1309, "15420": 1309, "15480": 1309, "15540": 1309, "15600": 1309, "15660": 1309, "15720": 1309, "15780": 1309, "15840": 1309, "15900": 1309, "15960": 1309, "16020": 1309, "16080": 1309, "16140": 1309, "16200": 1309, "16260": 1309, "16320": 1309, "16380": 1309, "16440": 1309, "16500": 1309, "16560": 1309, "16620": 1309, "16680": 1309, "16740": 1309, "16800": 1309, "16860": 1309, "16920": 1309, "16980": 1309, "17040": 1309, "17100": 1309, "17160": 1309, "17220": 1309, "17280": 1309, "17340": 1309, "17400": 1309, "17460": 1309, "17520": 1309, "17580": 1309, "17640": 1309, "17700": 1309, "17760": 1309, "17820": 1309, "17880": 1309, "17940": 1309, "18000": [1309, 1313], "18060": 1309, "18120": 1309, "18180": 1309, "18240": 1309, "18300": 1309, "18360": 1309, "18420": 1309, "18480": 1309, "18540": 1309, "18600": 1309, "18660": 1309, "18720": 1309, "18780": 1309, "18840": 1309, "18900": 1309, "18960": 1309, "19020": 1309, "19080": 1309, "19140": 1309, "19200": 1309, "19260": 1309, "19320": 1309, "19380": 1309, "19440": 1309, "19500": 1309, "19560": 1309, "19620": 1309, "19680": 1309, "19740": 1309, "19800": 1309, "19860": 1309, "19920": 1309, "19980": 1309, "20040": 1309, "20100": 1309, "20160": 1309, "20220": 1309, "20280": 1309, "20340": 1309, "20400": 1309, "20460": 1309, "20520": 1309, "20580": 1309, "20640": 1309, "20700": 1309, "20760": 1309, "20820": 1309, "20880": 1309, "20940": 1309, "21000": [1309, 1313], "21060": 1309, "21120": 1309, "21180": 1309, "21240": 1309, "21300": 1309, "21360": 1309, "21420": 1309, "21480": 1309, "21540": 1309, "21600": 1309, "21660": 1309, "21720": 1309, "21780": 1309, "21840": 1309, "21900": 1309, "21960": 1309, "22020": 1309, "22080": 1309, "22140": 1309, "22200": 1309, "22260": 1309, "22320": 1309, "22380": 1309, "22440": 1309, "22500": 1309, "22560": 1309, "22620": 1309, "22680": 1309, "22740": 1309, "22800": [1309, 1315], "22860": 1309, "22920": 1309, "22980": 1309, "23040": 1309, "23100": 1309, "23160": 1309, "23220": 1309, "23280": 1309, "23340": 1309, "23400": 1309, "23460": 1309, "23520": 1309, "23580": 1309, "23640": 1309, "23700": 1309, "23760": 1309, "23820": 1309, "23880": 1309, "23940": 1309, "24000": [1309, 1313], "24060": 1309, "24120": 1309, "24180": 1309, "24240": 1309, "24300": 1309, "24360": 1309, "24420": 1309, "24480": 1309, "24540": 1309, "24600": 1309, "24660": 1309, "24720": 1309, "24780": 1309, "24840": 1309, "24900": 1309, "24960": 1309, "25020": 1309, "25080": 1309, "25140": 1309, "25200": 1309, "25260": 1309, "25320": 1309, "25380": 1309, "25440": 1309, "25500": 1309, "25560": 1309, "25620": 1309, "25680": 1309, "25740": 1309, "25800": 1309, "25860": 1309, "25920": 1309, "25980": 1309, "26040": 1309, "26100": 1309, "26160": 1309, "26220": 1309, "26280": 1309, "26340": 1309, "26400": 1309, "26460": 1309, "26520": 1309, "26580": 1309, "26640": 1309, "26700": 1309, "26760": 1309, "26820": 1309, "26880": 1309, "26940": 1309, "27000": [1309, 1313], "27060": [1309, 1315], "27120": 1309, "27180": 1309, "27240": 1309, "27300": 1309, "27360": 1309, "27420": 1309, "27480": 1309, "27540": 1309, "27600": 1309, "27660": 1309, "27720": 1309, "27780": 1309, "27840": 1309, "27900": 1309, "27960": 1309, "28020": 1309, "28080": 1309, "28140": 1309, "28200": 1309, "28260": 1309, "28320": 1309, "28380": 1309, "28440": 1309, "28500": 1309, "28560": 1309, "28620": 1309, "28680": 1309, "28740": 1309, "28800": 1309, "28860": 1309, "28920": 1309, "28980": 1309, "29040": 1309, "29100": 1309, "29160": 1309, "29220": 1309, "29280": 1309, "29340": 1309, "29400": 1309, "29460": 1309, "29520": 1309, "29580": 1309, "29640": 1309, "29700": 1309, "29760": 1309, "29820": 1309, "29880": 1309, "29940": 1309, "30000": [1309, 1313], "30060": 1309, "30120": 1309, "30180": 1309, "30240": 1309, "30300": 1309, "30360": 1309, "30420": 1309, "30480": 1309, "30540": 1309, "30600": 1309, "30660": 1309, "30720": 1309, "30780": 1309, "30840": 1309, "30900": 1309, "30960": 1309, "31020": 1309, "31080": 1309, "31140": 1309, "31200": 1309, "31260": 1309, "31320": 1309, "31380": 1309, "31440": 1309, "31500": 1309, "31560": 1309, "31620": 1309, "31680": 1309, "31740": 1309, "31800": 1309, "31860": 1309, "31920": 1309, "31980": 1309, "32040": 1309, "32100": 1309, "32160": 1309, "32220": 1309, "32280": 1309, "32340": 1309, "32400": 1309, "32460": 1309, "32520": 1309, "32580": 1309, "32640": 1309, "32700": 1309, "32760": 1309, "32820": 1309, "32880": 1309, "32940": 1309, "33000": [1309, 1313], "33060": 1309, "33120": 1309, "33180": 1309, "33240": 1309, "33300": 1309, "33360": 1309, "33420": 1309, "33480": 1309, "33540": 1309, "33600": 1309, "33660": 1309, "33720": 1309, "33780": 1309, "33840": 1309, "33900": 1309, "33960": 1309, "34020": 1309, "34080": 1309, "34140": 1309, "34200": 1309, "34260": 1309, "34320": 1309, "34380": 1309, "34440": 1309, "34500": 1309, "34560": 1309, "34620": 1309, "34680": 1309, "34740": 1309, "34800": 1309, "34860": 1309, "34920": 1309, "34980": 1309, "35040": 1309, "35100": 1309, "35160": 1309, "35220": 1309, "35280": 1309, "35340": 1309, "35400": 1309, "35460": 1309, "35520": 1309, "35580": 1309, "35640": 1309, "35700": 1309, "35760": 1309, "35820": 1309, "35880": 1309, "35940": 1309, "36000": [1309, 1313], "36060": 1309, "36120": 1309, "36180": 1309, "36240": 1309, "36300": 1309, "36360": 1309, "36420": 1309, "36480": 1309, "36540": 1309, "36600": 1309, "36660": 1309, "36720": 1309, "36780": 1309, "36840": 1309, "36900": 1309, "36960": 1309, "37020": 1309, "37080": 1309, "37140": 1309, "37200": 1309, "37260": 1309, "37320": 1309, "37380": 1309, "37440": 1309, "37500": 1309, "37560": 1309, "37620": 1309, "37680": 1309, "37740": 1309, "37800": 1309, "37860": 1309, "37920": 1309, "37980": 1309, "38040": 1309, "38100": 1309, "38160": 1309, "38220": 1309, "38280": 1309, "38340": 1309, "38400": 1309, "38460": 1309, "38520": 1309, "38580": 1309, "38640": 1309, "38700": 1309, "38760": 1309, "38820": 1309, "38880": 1309, "38940": 1309, "39000": [1309, 1313], "39060": 1309, "39120": 1309, "39180": 1309, "39240": 1309, "39300": 1309, "39360": 1309, "39420": 1309, "39480": 1309, "39540": 1309, "39600": 1309, "39660": 1309, "39720": 1309, "39780": 1309, "39840": 1309, "39900": 1309, "39960": 1309, "squeez": 1309, "59416776": 1309, "59416886": 1309, "59489769": 1309, "59489879": 1309, "5948999": 1309, "59415662": 1309, "59414657": 1309, "5874659": 1309, "58745576": 1309, "58744563": 1309, "59414621": 1309, "59412575": 1309, "5805231": 1309, "58050246": 1309, "58048182": 1309, "59419881": 1309, "59423095": 1309, "61560159": 1309, "61563401": 1309, "61566644": 1309, "59418877": 1309, "59421087": 1309, "6089062": 1309, "6089285": 1309, "60895079": 1309, "59417836": 1309, "59419005": 1309, "60196382": 1309, "60197561": 1309, "60198741": 1309, "config": [1309, 1315, 1316, 1322], "get_metadata": 1309, "ref_dict": 1309, "reflecitivity_horizont": 1309, "21875": 1309, "34375": 1309, "0078125": 1309, "2109375": 1309, "1171875": 1309, "59375": 1309, "421875": 1309, "5625": 1309, "7109375": 1309, "609375": 1309, "5078125": 1309, "3828125": 1309, "6875": 1309, "328125": 1309, "3203125": 1309, "859375": 1309, "6484375": 1309, "8515625": 1309, "9375": [1309, 1317], "0234375": 1309, "6328125": 1309, "2890625": 1309, "546875": 1309, "578125": 1309, "6796875": 1309, "ref_field": 1310, "ref_gt_0": 1310, "mask_dict": 1310, "reflectivity_mask": 1310, "coolwarm": 1310, "sherm": [1310, 1313], "lib": [1310, 1313, 1315, 1316, 1319], "782": [1310, 1313], "matplotlibdeprecationwarn": [1310, 1313, 1315], "set_xtick": [1310, 1313], "position": [1310, 1313], "later": [1310, 1313, 1315, 1316], "xtick": [1310, 1313], "829": [1310, 1313], "set_ytick": [1310, 1313], "ytick": [1310, 1313], "write_cfradi": 1310, "2pi": 1311, "wave": 1311, "3pi": 1311, "incorrect": 1311, "phenomena": [1311, 1317], "maximium": 1311, "unambi": 1311, "preprocess": 1311, "thankfulli": [1311, 1313], "calculate_velocity_textur": 1311, "surround": [1311, 1313, 1315, 1316], "presenc": [1311, 1315, 1316], "524973": 1311, "vel_textur": 1311, "velocity_textur": [1311, 1314], "vleociti": 1311, "At": [1311, 1315], "velocity_dealias": 1311, "much": [1311, 1313, 1314, 1315, 1316], "realist": 1311, "gates_to_grid": 1313, "deprecationwarn": 1313, "99000": 1313, "98000": 1313, "97000": 1313, "96000": 1313, "95000": 1313, "94000": 1313, "93000": 1313, "92000": 1313, "91000": 1313, "90000": 1313, "89000": 1313, "88000": 1313, "87000": 1313, "86000": 1313, "85000": 1313, "84000": 1313, "83000": 1313, "82000": 1313, "81000": 1313, "80000": 1313, "79000": 1313, "78000": 1313, "77000": 1313, "76000": 1313, "75000": 1313, "74000": 1313, "73000": 1313, "72000": 1313, "71000": 1313, "70000": 1313, "69000": 1313, "68000": 1313, "67000": 1313, "66000": 1313, "65000": 1313, "64000": 1313, "63000": 1313, "62000": 1313, "61000": 1313, "59000": 1313, "58000": 1313, "57000": 1313, "56000": 1313, "55000": 1313, "54000": 1313, "53000": 1313, "52000": 1313, "51000": 1313, "49000": 1313, "48000": 1313, "47000": 1313, "46000": 1313, "45000": 1313, "44000": 1313, "43000": 1313, "42000": 1313, "41000": 1313, "38000": 1313, "37000": 1313, "35000": 1313, "34000": 1313, "32000": 1313, "31000": 1313, "29000": 1313, "28000": 1313, "26000": 1313, "23000": 1313, "22000": 1313, "19000": 1313, "16000": 1313, "14000": 1313, "13000": 1313, "8000": [1313, 1315], "7000": 1313, "suit": [1313, 1316, 1320], "longitudn": 1313, "latitudn": 1313, "suffer": 1313, "artifici": 1313, "feather": 1313, "grid_bett": 1313, "1750": 1313, "sgpxsaprcmacsuri5": 1314, "20171004": 1314, "203018": 1314, "total_pow": 1314, "spectrum_width": [1314, 1317], "xsapr_clutt": 1314, "sounding_temperatur": 1314, "signal_to_noise_ratio": [1314, 1316], "gate_id": 1314, "simulated_veloc": 1314, "unfolded_differential_phas": 1314, "corrected_differential_phas": 1314, "filtered_corrected_differential_phas": 1314, "corrected_specific_diff_phas": 1314, "filtered_corrected_specific_diff_phas": 1314, "path_integrated_attenu": 1314, "specific_differential_attenu": 1314, "path_integrated_differential_attenu": 1314, "trip": 1314, "nonhydrometeor": 1314, "analyz": [1314, 1320], "exclude_equ": 1314, "cleaner": 1314, "tell": 1314, "refl_arrai": 1314, "reflectivity_w_mask": 1314, "iter_slic": [1314, 1317], "9344453454202706": 1314, "620691732853737": 1314, "3756584054113996": 1314, "597935968662154": 1314, "696735014111216": 1314, "061894569912447": 1314, "721673265240488": 1314, "086695918593689": 1314, "33930700509078": 1314, "599363169483158": 1314, "836875745223637": 1314, "051601529570966": 1314, "22435547210836": 1314, "378109469982695": 1314, "553820234067336": 1314, "648943841665002": 1314, "837593740986444": 1314, "049614721040282": 1314, "331202567459613": 1314, "585432697375357": 1314, "87002341270722": 1314, "993012637722325": 1314, "061966001642219": 1314, "122799449619672": 1314, "861035552720102": 1314, "74608994279257": 1314, "148801770281325": 1314, "70860719727862": 1314, "989513966551444": 1314, "188644935344827": 1314, "89301878240611": 1314, "172644371021923": 1314, "79879842243138": 1314, "912806090219976": 1314, "766281467013889": 1314, "920522471877334": 1314, "898600907318164": 1314, "971026055481874": 1314, "110503947133682": 1314, "094456418731509": 1314, "0822160050675675": 1314, "036430544969512": 1314, "259332430219459": 1314, "2438254054588604": 1314, "473482666015625": 1314, "574283685503023": 1314, "866719139946832": 1314, "771468742643597": 1314, "exercic": [1315, 1316], "topic": [1315, 1316], "tackl": [1315, 1316], "pseudorhi": 1315, "glob": [1315, 1320], "load_config": [1315, 1316], "mch_config": [1315, 1316], "thu": 1315, "timestep": 1315, "too": [1315, 1316], "inde": [1315, 1316], "especi": 1315, "strong": [1315, 1316], "simplest": 1315, "files_radar": 1315, "exercice2_swiss_doppl": 1315, "mll221790725": 1315, "enumer": 1315, "radar_merg": 1315, "sharex": [1315, 1316], "ravel": 1315, "discontinu": 1315, "difficulti": 1315, "isol": [1315, 1316], "seen": [1315, 1320], "ymin": 1315, "xmin": 1315, "ymax": 1315, "xmax": 1315, "cappi_res_h": 1315, "cappi_res_v": 1315, "cappi_zh": 1315, "throught": 1315, "thunderstorm": [1315, 1316], "msrad": [1315, 1316], "wolfensb": [1315, 1316], "rainforest_test": [1315, 1316], "python3": [1315, 1316], "1785": 1315, "shade": 1315, "quadrilater": 1315, "gouraud": 1315, "rcparam": 1315, "pcolor": 1315, "arg": 1315, "altitudin": 1315, "downdraft": 1315, "updraft": 1315, "wider": 1315, "cold": 1315, "13th": 1315, "albi": 1315, "z\u00fcrich": 1315, "widespread": 1315, "unfortun": 1315, "prone": 1315, "question_pyart_meteoswiss": 1315, "mla211941205": 1315, "corrected_velocity_neg": 1315, "2682": 1315, "5272": 1315, "7815": 1315, "464": 1315, "runtimewarn": 1315, "mean_velocity_per_g": 1315, "reshap": 1315, "549": 1315, "userwarn": [1315, 1316], "y_new": 1315, "y_in_window": 1315, "10403": 1315, "14259": 1315, "18533": 1315, "19": [1315, 1317], "31310": 1315, "35549": 1315, "39777": 1315, "43991": 1315, "50263": 1315, "58621": 1315, "71002": 1315, "87118": 1315, "106740": 1315, "125476": 1315, "143293": 1315, "160000": 1315, "radiosound": 1315, "payern": 1315, "130": 1315, "though": [1315, 1322], "discrep": 1315, "startup": 1316, "third": [1316, 1320], "cosmo": 1316, "file_radar": 1316, "exercice1_swiss_thunderstorm": 1316, "mhl2217907250u": 1316, "20220628073500_savevol_cosmo_lookup_temp": 1316, "problemat": 1316, "gtfilter": 1316, "moment_and_texture_based_gate_filt": 1316, "clear": 1316, "mostli": 1316, "behind": 1316, "knowledg": 1316, "insight": 1316, "oblat": 1316, "drop": 1316, "fromnumer": 1316, "784": 1316, "maskedarrai": 1316, "kth": 1316, "mont": 1316, "lema": 1316, "8231": 1316, "2514": 1316, "0644": 1316, "9861": 1316, "0239": 1316, "1971": 1316, "9661": 1316, "1464": 1316, "9447": 1316, "1142": 1316, "9787": 1316, "974": 1316, "2450": 1316, "5540": 1316, "1459": 1316, "9937": 1316, "945": 1316, "9432": 1316, "0110": 1316, "5141": 1316, "9928": 1316, "993": 1316, "5202": 1316, "3498": 1316, "9746": 1316, "843": 1316, "5287": 1316, "9751": 1316, "9804": 1316, "6547": 1316, "7054": 1316, "5101": 1316, "9765": 1316, "1114": 1316, "4998": 1316, "6431": 1316, "9845": 1316, "1010": 1316, "complic": 1316, "few": [1316, 1322], "dai": 1316, "refin": 1316, "reli": 1316, "est_rain_rate_hydro": 1316, "land": 1316, "lon_bnd": 1316, "lat_bnd": 1316, "states_provinc": 1316, "cultur": 1316, "admin_0_countri": 1316, "facecolor": 1316, "river": 1316, "add_featur": 1316, "287": 1316, "lambert": 1316, "feature_artist": 1316, "featureartist": 1316, "0x2b9150c92f80": 1316, "didn": 1316, "uncertain": 1316, "beam_azimuth_angl": 1317, "azimuth_angle_from_true_north": 1317, "radial_azimuth_coordin": 1317, "beam_elevation_angl": 1317, "elevation_angle_from_horizontal_plan": 1317, "radial_elevation_coordin": 1317, "1832": 1317, "log_differential_reflectivity_hv": 1317, "875": 1317, "9999": 1317, "differential_phase_hv": 1317, "equivalent_reflectivity_factor": 1317, "cross_correlation_ratio_hv": 1317, "correlation_ratio": 1317, "meters_per_second": 1317, "doppler_spectrum_width": 1317, "63": 1317, "radial_velocity_of_scatterers_away_from_instru": 1317, "95": 1317, "target_fixed_angl": 1317, "unambiguous_rang": 1317, "unambigu": 1317, "degrees_north": 1317, "degrees_east": 1317, "projection_range_coordin": 1317, "range_to_measurement_volum": 1317, "radial_range_coordin": 1317, "spacing_is_const": 1317, "meters_to_center_of_first_g": 1317, "2125": 1317, "meters_between_g": 1317, "int32": 1317, "s20": 1317, "unitless": 1317, "coplan": 1317, "vertical_point": 1317, "idl": 1317, "azimuth_surveil": 1317, "elevation_surveil": 1317, "sunscan": 1317, "manual_ppi": 1317, "manual_rhi": 1317, "17t19": 1317, "21z": 1317, "time_in_seconds_since_volume_start": 1317, "calendar": 1317, "gregorian": 1317, "histori": 1317, "katx": 1317, "original_contain": 1317, "vcp_pattern": 1317, "7470703": 1317, "7196045": 1317, "6893921": 1317, "511719": 1317, "get_slic": 1317, "sweep_1": 1317, "52734375": 1317, "itself": 1317, "indici": 1317, "slice_indic": 1317, "9066728410400056": 1317, "478547577741713": 1317, "587792083929423": 1317, "871031288639269": 1317, "971692217963673": 1317, "830616390843327": 1317, "108188248095756": 1317, "483419908190385": 1317, "88976917057903": 1317, "852766685681688": 1317, "410455582269897": 1317, "66444787446138": 1317, "997862391449566": 1317, "172098402018502": 1317, "489752513534416": 1317, "712565619531706": 1317, "commonli": 1317, "701": 1318, "29": 1318, "8x": 1319, "But": 1319, "bash": 1319, "export": [1319, 1322], "pythonpath": 1319, "pth": 1319, "build_ext": 1319, "pip": [1319, 1320, 1322], "segfault": 1319, "newer": 1319, "Theres": 1319, "reinstal": 1319, "remedi": 1319, "fno": 1319, "protector": 1319, "d_fortify_sourc": 1319, "cflag": 1319, "makefil": 1319, "troubl": 1319, "my": 1319, "bit": 1319, "define_macro": 1319, "macro": 1319, "extra_compile_arg": 1319, "m32": 1319, "extra_link_arg": 1319, "m64": 1319, "readm": 1319, "proj_lib": 1319, "xx": 1319, "usernam": 1319, "xxx": 1319, "mpl_toolkit": 1319, "offici": 1320, "mail": 1320, "openradar": 1320, "ev": 1320, "pyart_short_cours": 1320, "youtub": 1320, "watch": 1320, "diip": 1320, "q3bkzw": 1320, "auto_exampl": 1320, "scm": 1320, "book": 1320, "pep8": 1320, "popular": 1320, "pycodestyl": 1320, "pylint": 1320, "0008": 1320, "highli": 1320, "tast": 1320, "readthedoc": 1320, "brief": 1320, "parti": 1320, "explain": 1320, "velocity_azimuth_displai": 1320, "_inverse_dist_squar": 1320, "_average1d": 1320, "explan": 1320, "mention": [1320, 1322], "statement": 1320, "__init__": 1320, "futur": 1320, "ran": 1320, "rerun": 1320, "test_vad": 1320, "make_target_radar": 1320, "ones_lik": 1320, "z_start": 1320, "z_end": 1320, "z_count": 1320, "vad_height": 1320, "vad_spe": 1320, "98665725": 1320, "94020686": 1320, "88107152": 1320, "81939374": 1320, "75851962": 1320, "vad_direct": 1320, "359": 1320, "84659496": 1320, "30240553": 1320, "358": 1320, "58658589": 1320, "357": 1320, "81073051": 1320, "01353486": 1320, "01335138": 1320, "06014712": 1320, "12039762": 1320, "18410404": 1320, "24791911": 1320, "98663937": 1320, "9398407": 1320, "87958641": 1320, "81587601": 1320, "75205693": 1320, "assert_almost_equ": 1320, "pyarg": 1320, "test_cfradi": 1320, "cd": 1320, "contribut": [1320, 1321], "branch": [1320, 1322], "fork": 1320, "cartopy_map": 1320, "push": 1320, "branch_nam": 1320, "checkout": 1320, "task": 1320, "untrack": 1320, "switch": 1320, "commit": 1320, "acronym": 1320, "maint": 1320, "finish": [1320, 1322], "quotat": 1320, "enter": 1320, "acronymn": 1320, "gitwash": 1320, "development_workflow": 1320, "editor": [1320, 1322], "sty": 1320, "whitespac": 1320, "vim": 1320, "thing": 1320, "ff": 1320, "checker": 1320, "appveyor": 1320, "travisci": 1320, "sit": 1320, "blog_post": 1320, "instruct": 1321, "contributor": 1321, "conflict": 1322, "panda": 1322, "ask": 1322, "exit": 1322, "led": 1322, "recent": 1322, "manag": 1322, "activ": 1322, "deactiv": 1322, "enviro": 1322, "scratch": 1322, "ipython": 1322, "spyder": 1322, "yourusernam": 1322, "youranacondadir": 1322, "machin": 1322, "jjhelmu": 1322, "py3": 1322, "gitter": 1322, "im": 1322}, "objects": {"pyart": [[542, 0, 1, "", "_debug_info"], [543, 1, 0, "-", "aux_io"], [589, 1, 0, "-", "bridge"], [591, 1, 0, "-", "config"], [603, 1, 0, "-", "core"], [685, 1, 0, "-", "correct"], [756, 1, 0, "-", "exceptions"], [757, 1, 0, "-", "filters"], [794, 1, 0, "-", "graph"], [970, 1, 0, "-", "io"], [993, 1, 0, "-", "lazydict"], [1017, 1, 0, "-", "map"], [1030, 1, 0, "-", "retrieve"], [1124, 1, 0, "-", "testing"], [1209, 1, 0, "-", "util"]], "pyart.aux_io": [[544, 0, 1, "", "convert_data"], [545, 0, 1, "", "extract_sweeps_skyecho"], [546, 0, 1, "", "get_library"], [547, 0, 1, "", "get_sweep_time_coverage"], [548, 0, 1, "", "read_bin"], [549, 0, 1, "", "read_bin_mf"], [550, 0, 1, "", "read_cartesian_metranet"], [551, 0, 1, "", "read_cf1"], [552, 0, 1, "", "read_cf1_cartesian"], [553, 0, 1, "", "read_cf1_cartesian_mf"], [554, 0, 1, "", "read_d3r_gcpex_nc"], [555, 0, 1, "", "read_dat_mf"], [556, 0, 1, "", "read_edge_netcdf"], [557, 0, 1, "", "read_file_c"], [558, 0, 1, "", "read_file_py"], [559, 0, 1, "", "read_gamic"], [560, 0, 1, "", "read_gif"], [561, 0, 1, "", "read_grib"], [562, 0, 1, "", "read_hpl"], [563, 0, 1, "", "read_iq"], [564, 0, 1, "", "read_kazr"], [565, 0, 1, "", "read_metranet"], [566, 0, 1, "", "read_noxp_iphex_nc"], [567, 0, 1, "", "read_odim_grid_h5"], [568, 0, 1, "", "read_odim_h5"], [569, 0, 1, "", "read_odim_vp_h5"], [570, 0, 1, "", "read_pattern"], [571, 0, 1, "", "read_png"], [572, 0, 1, "", "read_product_c"], [573, 0, 1, "", "read_product_py"], [574, 0, 1, "", "read_psr_cpi_header"], [575, 0, 1, "", "read_psr_header"], [576, 0, 1, "", "read_psr_spectra"], [577, 0, 1, "", "read_radx"], [578, 0, 1, "", "read_rainbow_psr"], [579, 0, 1, "", "read_rainbow_psr_spectra"], [580, 0, 1, "", "read_rainbow_wrl"], [581, 0, 1, "", "read_sinarame_h5"], [582, 0, 1, "", "read_skyecho"], [583, 0, 1, "", "read_spectra"], [584, 0, 1, "", "read_swissbirdradar_spectra"], [585, 0, 1, "", "write_odim_grid_h5"], [586, 0, 1, "", "write_odim_h5"], [587, 0, 1, "", "write_sinarame_cfradial"], [588, 0, 1, "", "write_spectra"]], "pyart.bridge": [[590, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[592, 2, 1, "", "FileMetadata"], [596, 0, 1, "", "get_field_colormap"], [597, 0, 1, "", "get_field_limits"], [598, 0, 1, "", "get_field_mapping"], [599, 0, 1, "", "get_field_name"], [600, 0, 1, "", "get_fillvalue"], [601, 0, 1, "", "get_metadata"], [602, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[593, 3, 1, "", "__call__"], [594, 3, 1, "", "get_field_name"], [595, 3, 1, "", "get_metadata"]], "pyart.core": [[604, 2, 1, "", "Grid"], [614, 2, 1, "", "HorizontalWindProfile"], [618, 2, 1, "", "Radar"], [647, 2, 1, "", "RadarSpectra"], [676, 0, 1, "", "antenna_to_cartesian"], [677, 0, 1, "", "antenna_vectors_to_cartesian"], [678, 0, 1, "", "cartesian_to_antenna"], [679, 0, 1, "", "cartesian_to_geographic"], [680, 0, 1, "", "cartesian_to_geographic_aeqd"], [681, 0, 1, "", "cartesian_vectors_to_geographic"], [682, 0, 1, "", "geographic_to_cartesian"], [683, 0, 1, "", "geographic_to_cartesian_aeqd"], [684, 0, 1, "", "wgs84_to_swissCH1903"]], "pyart.core.Grid": [[605, 3, 1, "", "add_field"], [606, 3, 1, "", "get_point_longitude_latitude"], [607, 3, 1, "", "get_projparams"], [608, 3, 1, "", "init_point_altitude"], [609, 3, 1, "", "init_point_longitude_latitude"], [610, 3, 1, "", "init_point_x_y_z"], [611, 4, 1, "", "projection_proj"], [612, 3, 1, "", "to_xarray"], [613, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[615, 3, 1, "", "from_u_and_v"], [616, 4, 1, "", "u_wind"], [617, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[619, 3, 1, "", "add_field"], [620, 3, 1, "", "add_field_like"], [621, 3, 1, "", "add_filter"], [622, 3, 1, "", "check_field_exists"], [623, 3, 1, "", "extract_sweeps"], [624, 3, 1, "", "get_azimuth"], [625, 3, 1, "", "get_elevation"], [626, 3, 1, "", "get_end"], [627, 3, 1, "", "get_field"], [628, 3, 1, "", "get_gate_area"], [629, 3, 1, "", "get_gate_lat_lon_alt"], [630, 3, 1, "", "get_gate_x_y_z"], [631, 3, 1, "", "get_nyquist_vel"], [632, 3, 1, "", "get_slice"], [633, 3, 1, "", "get_start"], [634, 3, 1, "", "get_start_end"], [635, 3, 1, "", "info"], [636, 3, 1, "", "init_gate_altitude"], [637, 3, 1, "", "init_gate_longitude_latitude"], [638, 3, 1, "", "init_gate_x_y_z"], [639, 3, 1, "", "init_rays_per_sweep"], [640, 3, 1, "", "iter_azimuth"], [641, 3, 1, "", "iter_elevation"], [642, 3, 1, "", "iter_end"], [643, 3, 1, "", "iter_field"], [644, 3, 1, "", "iter_slice"], [645, 3, 1, "", "iter_start"], [646, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[648, 3, 1, "", "add_field"], [649, 3, 1, "", "add_field_like"], [650, 3, 1, "", "add_filter"], [651, 3, 1, "", "check_field_exists"], [652, 3, 1, "", "extract_sweeps"], [653, 3, 1, "", "get_azimuth"], [654, 3, 1, "", "get_elevation"], [655, 3, 1, "", "get_end"], [656, 3, 1, "", "get_field"], [657, 3, 1, "", "get_gate_area"], [658, 3, 1, "", "get_gate_lat_lon_alt"], [659, 3, 1, "", "get_gate_x_y_z"], [660, 3, 1, "", "get_nyquist_vel"], [661, 3, 1, "", "get_slice"], [662, 3, 1, "", "get_start"], [663, 3, 1, "", "get_start_end"], [664, 3, 1, "", "info"], [665, 3, 1, "", "init_gate_altitude"], [666, 3, 1, "", "init_gate_longitude_latitude"], [667, 3, 1, "", "init_gate_x_y_z"], [668, 3, 1, "", "init_rays_per_sweep"], [669, 3, 1, "", "iter_azimuth"], [670, 3, 1, "", "iter_elevation"], [671, 3, 1, "", "iter_end"], [672, 3, 1, "", "iter_field"], [673, 3, 1, "", "iter_slice"], [674, 3, 1, "", "iter_start"], [675, 3, 1, "", "iter_start_end"]], "pyart.correct": [[686, 2, 1, "", "GateFilter"], [714, 0, 1, "", "calculate_attenuation"], [715, 0, 1, "", "calculate_attenuation_philinear"], [716, 0, 1, "", "calculate_attenuation_zphi"], [717, 0, 1, "", "compute_apparent_vpr"], [718, 0, 1, "", "compute_theoretical_vpr"], [719, 0, 1, "", "correct_bias"], [720, 0, 1, "", "correct_noise_rhohv"], [721, 0, 1, "", "correct_sys_phase"], [722, 0, 1, "", "correct_visibility"], [723, 0, 1, "", "correct_vpr"], [724, 0, 1, "", "correct_vpr_spatialised"], [725, 0, 1, "", "dealias_fourdd"], [726, 0, 1, "", "dealias_region_based"], [727, 0, 1, "", "dealias_unwrap_phase"], [728, 0, 1, "", "despeckle_field"], [729, 0, 1, "", "det_sys_phase_ray"], [730, 0, 1, "", "est_rhohv_rain"], [731, 0, 1, "", "est_zdr_precip"], [732, 0, 1, "", "est_zdr_snow"], [733, 0, 1, "", "find_objects"], [734, 0, 1, "", "gauss_fit"], [735, 0, 1, "", "get_mask_fzl"], [736, 0, 1, "", "get_sun_hits"], [737, 0, 1, "", "get_sun_hits_ivic"], [738, 0, 1, "", "get_sun_hits_psr"], [739, 0, 1, "", "moment_based_gate_filter"], [740, 0, 1, "", "phase_proc_lp"], [741, 0, 1, "", "phase_proc_lp_gf"], [742, 0, 1, "", "ptoa_to_sf"], [743, 0, 1, "", "retrieval_result"], [744, 0, 1, "", "scanning_losses"], [745, 0, 1, "", "selfconsistency_bias"], [746, 0, 1, "", "selfconsistency_bias2"], [747, 0, 1, "", "selfconsistency_kdp_phidp"], [748, 0, 1, "", "smooth_masked"], [749, 0, 1, "", "smooth_phidp_double_window"], [750, 0, 1, "", "smooth_phidp_single_window"], [751, 0, 1, "", "solar_flux_lookup"], [752, 0, 1, "", "sun_position_mfr"], [753, 0, 1, "", "sun_position_pysolar"], [754, 0, 1, "", "sun_power"], [755, 0, 1, "", "sun_retrieval"]], "pyart.correct.GateFilter": [[687, 3, 1, "", "copy"], [688, 3, 1, "", "exclude_above"], [689, 3, 1, "", "exclude_all"], [690, 3, 1, "", "exclude_below"], [691, 3, 1, "", "exclude_equal"], [692, 3, 1, "", "exclude_gates"], [693, 3, 1, "", "exclude_inside"], [694, 3, 1, "", "exclude_invalid"], [695, 3, 1, "", "exclude_masked"], [696, 3, 1, "", "exclude_none"], [697, 3, 1, "", "exclude_not_equal"], [698, 3, 1, "", "exclude_outside"], [699, 3, 1, "", "exclude_transition"], [700, 4, 1, "", "gate_excluded"], [701, 4, 1, "", "gate_included"], [702, 3, 1, "", "include_above"], [703, 3, 1, "", "include_all"], [704, 3, 1, "", "include_below"], [705, 3, 1, "", "include_equal"], [706, 3, 1, "", "include_gates"], [707, 3, 1, "", "include_inside"], [708, 3, 1, "", "include_none"], [709, 3, 1, "", "include_not_equal"], [710, 3, 1, "", "include_not_masked"], [711, 3, 1, "", "include_not_transition"], [712, 3, 1, "", "include_outside"], [713, 3, 1, "", "include_valid"]], "pyart.exceptions": [[165, 5, 1, "", "DeprecatedAttribute"], [166, 5, 1, "", "DeprecatedFunctionName"], [167, 5, 1, "", "MissingOptionalDependency"], [168, 0, 1, "", "_deprecated_alias"]], "pyart.filters": [[758, 2, 1, "", "GateFilter"], [786, 0, 1, "", "birds_gate_filter"], [787, 0, 1, "", "class_based_gate_filter"], [788, 0, 1, "", "iso0_based_gate_filter"], [789, 0, 1, "", "moment_and_texture_based_gate_filter"], [790, 0, 1, "", "moment_based_gate_filter"], [791, 0, 1, "", "snr_based_gate_filter"], [792, 0, 1, "", "temp_based_gate_filter"], [793, 0, 1, "", "visibility_based_gate_filter"]], "pyart.filters.GateFilter": [[759, 3, 1, "", "copy"], [760, 3, 1, "", "exclude_above"], [761, 3, 1, "", "exclude_all"], [762, 3, 1, "", "exclude_below"], [763, 3, 1, "", "exclude_equal"], [764, 3, 1, "", "exclude_gates"], [765, 3, 1, "", "exclude_inside"], [766, 3, 1, "", "exclude_invalid"], [767, 3, 1, "", "exclude_masked"], [768, 3, 1, "", "exclude_none"], [769, 3, 1, "", "exclude_not_equal"], [770, 3, 1, "", "exclude_outside"], [771, 3, 1, "", "exclude_transition"], [772, 4, 1, "", "gate_excluded"], [773, 4, 1, "", "gate_included"], [774, 3, 1, "", "include_above"], [775, 3, 1, "", "include_all"], [776, 3, 1, "", "include_below"], [777, 3, 1, "", "include_equal"], [778, 3, 1, "", "include_gates"], [779, 3, 1, "", "include_inside"], [780, 3, 1, "", "include_none"], [781, 3, 1, "", "include_not_equal"], [782, 3, 1, "", "include_not_masked"], [783, 3, 1, "", "include_not_transition"], [784, 3, 1, "", "include_outside"], [785, 3, 1, "", "include_valid"]], "pyart.graph": [[795, 2, 1, "", "AirborneRadarDisplay"], [829, 2, 1, "", "GridMapDisplay"], [848, 2, 1, "", "GridMapDisplayBasemap"], [862, 2, 1, "", "RadarDisplay"], [895, 2, 1, "", "RadarMapDisplay"], [932, 2, 1, "", "RadarMapDisplayBasemap"], [969, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[796, 3, 1, "", "generate_az_rhi_title"], [797, 3, 1, "", "generate_filename"], [798, 3, 1, "", "generate_ray_title"], [799, 3, 1, "", "generate_title"], [800, 3, 1, "", "generate_vpt_title"], [801, 3, 1, "", "generate_xsection_title"], [802, 3, 1, "", "label_xaxis_r"], [803, 3, 1, "", "label_xaxis_rays"], [804, 3, 1, "", "label_xaxis_time"], [805, 3, 1, "", "label_xaxis_x"], [806, 3, 1, "", "label_xaxis_xsection"], [807, 3, 1, "", "label_yaxis_field"], [808, 3, 1, "", "label_yaxis_xsection"], [809, 3, 1, "", "label_yaxis_y"], [810, 3, 1, "", "label_yaxis_z"], [811, 3, 1, "", "plot"], [812, 3, 1, "", "plot_azimuth_to_rhi"], [813, 3, 1, "", "plot_colorbar"], [814, 3, 1, "", "plot_cr_raster"], [815, 3, 1, "", "plot_cross_hair"], [816, 3, 1, "", "plot_grid_lines"], [817, 3, 1, "", "plot_label"], [818, 3, 1, "", "plot_labels"], [819, 3, 1, "", "plot_ppi"], [820, 3, 1, "", "plot_range_ring"], [821, 3, 1, "", "plot_range_rings"], [822, 3, 1, "", "plot_ray"], [823, 3, 1, "", "plot_rhi"], [824, 3, 1, "", "plot_sweep_grid"], [825, 3, 1, "", "plot_vpt"], [826, 3, 1, "", "plot_xsection"], [827, 3, 1, "", "set_aspect_ratio"], [828, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[830, 3, 1, "", "cartopy_coastlines"], [831, 3, 1, "", "cartopy_political_boundaries"], [832, 3, 1, "", "cartopy_states"], [833, 3, 1, "", "generate_filename"], [834, 3, 1, "", "generate_grid_title"], [835, 3, 1, "", "generate_latitudinal_level_title"], [836, 3, 1, "", "generate_longitudinal_level_title"], [837, 3, 1, "", "plot_colorbar"], [838, 3, 1, "", "plot_cross_section"], [839, 3, 1, "", "plot_cross_section_level"], [840, 3, 1, "", "plot_crosshairs"], [841, 3, 1, "", "plot_grid"], [842, 3, 1, "", "plot_grid_contour"], [843, 3, 1, "", "plot_grid_raw"], [844, 3, 1, "", "plot_latitude_slice"], [845, 3, 1, "", "plot_latitudinal_level"], [846, 3, 1, "", "plot_longitude_slice"], [847, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[849, 3, 1, "", "generate_filename"], [850, 3, 1, "", "generate_grid_title"], [851, 3, 1, "", "generate_latitudinal_level_title"], [852, 3, 1, "", "generate_longitudinal_level_title"], [853, 3, 1, "", "get_basemap"], [854, 3, 1, "", "plot_basemap"], [855, 3, 1, "", "plot_colorbar"], [856, 3, 1, "", "plot_crosshairs"], [857, 3, 1, "", "plot_grid"], [858, 3, 1, "", "plot_latitude_slice"], [859, 3, 1, "", "plot_latitudinal_level"], [860, 3, 1, "", "plot_longitude_slice"], [861, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[863, 3, 1, "", "generate_az_rhi_title"], [864, 3, 1, "", "generate_filename"], [865, 3, 1, "", "generate_ray_title"], [866, 3, 1, "", "generate_title"], [867, 3, 1, "", "generate_vpt_title"], [868, 3, 1, "", "generate_xsection_title"], [869, 3, 1, "", "label_xaxis_r"], [870, 3, 1, "", "label_xaxis_rays"], [871, 3, 1, "", "label_xaxis_time"], [872, 3, 1, "", "label_xaxis_x"], [873, 3, 1, "", "label_xaxis_xsection"], [874, 3, 1, "", "label_yaxis_field"], [875, 3, 1, "", "label_yaxis_xsection"], [876, 3, 1, "", "label_yaxis_y"], [877, 3, 1, "", "label_yaxis_z"], [878, 3, 1, "", "plot"], [879, 3, 1, "", "plot_azimuth_to_rhi"], [880, 3, 1, "", "plot_colorbar"], [881, 3, 1, "", "plot_cr_raster"], [882, 3, 1, "", "plot_cross_hair"], [883, 3, 1, "", "plot_grid_lines"], [884, 3, 1, "", "plot_label"], [885, 3, 1, "", "plot_labels"], [886, 3, 1, "", "plot_ppi"], [887, 3, 1, "", "plot_range_ring"], [888, 3, 1, "", "plot_range_rings"], [889, 3, 1, "", "plot_ray"], [890, 3, 1, "", "plot_rhi"], [891, 3, 1, "", "plot_vpt"], [892, 3, 1, "", "plot_xsection"], [893, 3, 1, "", "set_aspect_ratio"], [894, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[896, 3, 1, "", "generate_az_rhi_title"], [897, 3, 1, "", "generate_filename"], [898, 3, 1, "", "generate_ray_title"], [899, 3, 1, "", "generate_title"], [900, 3, 1, "", "generate_vpt_title"], [901, 3, 1, "", "generate_xsection_title"], [902, 3, 1, "", "label_xaxis_r"], [903, 3, 1, "", "label_xaxis_rays"], [904, 3, 1, "", "label_xaxis_time"], [905, 3, 1, "", "label_xaxis_x"], [906, 3, 1, "", "label_xaxis_xsection"], [907, 3, 1, "", "label_yaxis_field"], [908, 3, 1, "", "label_yaxis_xsection"], [909, 3, 1, "", "label_yaxis_y"], [910, 3, 1, "", "label_yaxis_z"], [911, 3, 1, "", "plot"], [912, 3, 1, "", "plot_azimuth_to_rhi"], [913, 3, 1, "", "plot_colorbar"], [914, 3, 1, "", "plot_cr_raster"], [915, 3, 1, "", "plot_cross_hair"], [916, 3, 1, "", "plot_grid_lines"], [917, 3, 1, "", "plot_label"], [918, 3, 1, "", "plot_labels"], [919, 3, 1, "", "plot_line_geo"], [920, 3, 1, "", "plot_line_xy"], [921, 3, 1, "", "plot_point"], [922, 3, 1, "", "plot_ppi"], [923, 3, 1, "", "plot_ppi_map"], [924, 3, 1, "", "plot_range_ring"], [925, 3, 1, "", "plot_range_rings"], [926, 3, 1, "", "plot_ray"], [927, 3, 1, "", "plot_rhi"], [928, 3, 1, "", "plot_vpt"], [929, 3, 1, "", "plot_xsection"], [930, 3, 1, "", "set_aspect_ratio"], [931, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[933, 3, 1, "", "generate_az_rhi_title"], [934, 3, 1, "", "generate_filename"], [935, 3, 1, "", "generate_ray_title"], [936, 3, 1, "", "generate_title"], [937, 3, 1, "", "generate_vpt_title"], [938, 3, 1, "", "generate_xsection_title"], [939, 3, 1, "", "label_xaxis_r"], [940, 3, 1, "", "label_xaxis_rays"], [941, 3, 1, "", "label_xaxis_time"], [942, 3, 1, "", "label_xaxis_x"], [943, 3, 1, "", "label_xaxis_xsection"], [944, 3, 1, "", "label_yaxis_field"], [945, 3, 1, "", "label_yaxis_xsection"], [946, 3, 1, "", "label_yaxis_y"], [947, 3, 1, "", "label_yaxis_z"], [948, 3, 1, "", "plot"], [949, 3, 1, "", "plot_azimuth_to_rhi"], [950, 3, 1, "", "plot_colorbar"], [951, 3, 1, "", "plot_cr_raster"], [952, 3, 1, "", "plot_cross_hair"], [953, 3, 1, "", "plot_grid_lines"], [954, 3, 1, "", "plot_label"], [955, 3, 1, "", "plot_labels"], [956, 3, 1, "", "plot_line_geo"], [957, 3, 1, "", "plot_line_xy"], [958, 3, 1, "", "plot_point"], [959, 3, 1, "", "plot_ppi"], [960, 3, 1, "", "plot_ppi_map"], [961, 3, 1, "", "plot_range_ring"], [962, 3, 1, "", "plot_range_rings"], [963, 3, 1, "", "plot_ray"], [964, 3, 1, "", "plot_rhi"], [965, 3, 1, "", "plot_vpt"], [966, 3, 1, "", "plot_xsection"], [967, 3, 1, "", "set_aspect_ratio"], [968, 3, 1, "", "set_limits"]], "pyart.io": [[971, 0, 1, "", "make_time_unit_str"], [972, 0, 1, "", "prepare_for_read"], [973, 0, 1, "", "read"], [974, 0, 1, "", "read_arm_sonde"], [975, 0, 1, "", "read_arm_sonde_vap"], [976, 0, 1, "", "read_cfradial"], [977, 0, 1, "", "read_cfradial2"], [978, 0, 1, "", "read_chl"], [979, 0, 1, "", "read_grid"], [980, 0, 1, "", "read_grid_mdv"], [981, 0, 1, "", "read_mdv"], [982, 0, 1, "", "read_nexrad_archive"], [983, 0, 1, "", "read_nexrad_cdm"], [984, 0, 1, "", "read_nexrad_level3"], [985, 0, 1, "", "read_rsl"], [986, 0, 1, "", "read_sigmet"], [987, 0, 1, "", "read_uf"], [988, 0, 1, "", "write_cfradial"], [989, 0, 1, "", "write_grid"], [990, 0, 1, "", "write_grid_geotiff"], [991, 0, 1, "", "write_grid_mdv"], [992, 0, 1, "", "write_uf"]], "pyart.lazydict": [[994, 2, 1, "", "LazyLoadDict"], [1007, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[402, 3, 1, "", "__class_getitem__"], [403, 3, 1, "", "__contains__"], [404, 3, 1, "", "__delattr__"], [405, 3, 1, "", "__delitem__"], [406, 3, 1, "", "__dir__"], [407, 3, 1, "", "__eq__"], [408, 3, 1, "", "__format__"], [409, 3, 1, "", "__ge__"], [410, 3, 1, "", "__getattribute__"], [411, 3, 1, "", "__getitem__"], [412, 3, 1, "", "__getstate__"], [413, 3, 1, "", "__gt__"], [414, 3, 1, "", "__init__"], [415, 3, 1, "", "__init_subclass__"], [416, 3, 1, "", "__iter__"], [417, 3, 1, "", "__le__"], [418, 3, 1, "", "__len__"], [419, 3, 1, "", "__lt__"], [420, 3, 1, "", "__ne__"], [421, 3, 1, "", "__new__"], [422, 3, 1, "", "__reduce__"], [423, 3, 1, "", "__reduce_ex__"], [424, 3, 1, "", "__repr__"], [425, 3, 1, "", "__setattr__"], [426, 3, 1, "", "__setitem__"], [427, 3, 1, "", "__sizeof__"], [428, 3, 1, "", "__str__"], [429, 3, 1, "", "__subclasshook__"], [995, 3, 1, "", "clear"], [996, 3, 1, "", "copy"], [997, 3, 1, "", "get"], [998, 3, 1, "", "has_key"], [999, 3, 1, "", "items"], [1000, 3, 1, "", "keys"], [1001, 3, 1, "", "pop"], [1002, 3, 1, "", "popitem"], [1003, 3, 1, "", "set_lazy"], [1004, 3, 1, "", "setdefault"], [1005, 3, 1, "", "update"], [1006, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[1008, 3, 1, "", "clear"], [1009, 3, 1, "", "get"], [1010, 3, 1, "", "items"], [1011, 3, 1, "", "keys"], [1012, 3, 1, "", "pop"], [1013, 3, 1, "", "popitem"], [1014, 3, 1, "", "setdefault"], [1015, 3, 1, "", "update"], [1016, 3, 1, "", "values"]], "pyart.map": [[1018, 2, 1, "", "GateMapper"], [1022, 0, 1, "", "example_roi_func_constant"], [1023, 0, 1, "", "example_roi_func_dist"], [1024, 0, 1, "", "example_roi_func_dist_beam"], [1025, 0, 1, "", "get_earth_radius"], [1026, 0, 1, "", "grid_from_radars"], [1027, 0, 1, "", "map_gates_to_grid"], [1028, 0, 1, "", "map_to_grid"], [1029, 0, 1, "", "polar_to_cartesian"]], "pyart.map.GateMapper": [[1019, 4, 1, "", "distance_tolerance"], [1020, 3, 1, "", "mapped_radar"], [1021, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[448, 0, 1, "", "_destandardize"], [449, 0, 1, "", "_get_res_vol_sides"], [1031, 0, 1, "", "atmospheric_gas_att"], [1032, 0, 1, "", "calculate_snr_from_reflectivity"], [1033, 0, 1, "", "calculate_velocity_texture"], [1034, 0, 1, "", "composite_reflectivity"], [1035, 0, 1, "", "compute_Doppler_velocity"], [1036, 0, 1, "", "compute_Doppler_velocity_iq"], [1037, 0, 1, "", "compute_Doppler_width"], [1038, 0, 1, "", "compute_Doppler_width_iq"], [1039, 0, 1, "", "compute_apparent_profile"], [1040, 0, 1, "", "compute_bird_density"], [1041, 0, 1, "", "compute_ccor"], [1042, 0, 1, "", "compute_cdr"], [1043, 0, 1, "", "compute_centroids"], [1044, 0, 1, "", "compute_differential_phase"], [1045, 0, 1, "", "compute_differential_phase_iq"], [1046, 0, 1, "", "compute_differential_reflectivity"], [1047, 0, 1, "", "compute_differential_reflectivity_iq"], [1048, 0, 1, "", "compute_evp"], [1049, 0, 1, "", "compute_iq"], [1050, 0, 1, "", "compute_l"], [1051, 0, 1, "", "compute_mean_phase_iq"], [1052, 0, 1, "", "compute_noise_power"], [1053, 0, 1, "", "compute_noisedBZ"], [1054, 0, 1, "", "compute_pol_variables"], [1055, 0, 1, "", "compute_pol_variables_iq"], [1056, 0, 1, "", "compute_qvp"], [1057, 0, 1, "", "compute_radial_noise_hs"], [1058, 0, 1, "", "compute_radial_noise_ivic"], [1059, 0, 1, "", "compute_rcs"], [1060, 0, 1, "", "compute_rcs_from_pr"], [1061, 0, 1, "", "compute_reflectivity"], [1062, 0, 1, "", "compute_reflectivity_iq"], [1063, 0, 1, "", "compute_rhohv"], [1064, 0, 1, "", "compute_rhohv_iq"], [1065, 0, 1, "", "compute_rqvp"], [1066, 0, 1, "", "compute_signal_power"], [1067, 0, 1, "", "compute_snr"], [1068, 0, 1, "", "compute_spectra"], [1069, 0, 1, "", "compute_spectral_differential_phase"], [1070, 0, 1, "", "compute_spectral_differential_reflectivity"], [1071, 0, 1, "", "compute_spectral_noise"], [1072, 0, 1, "", "compute_spectral_phase"], [1073, 0, 1, "", "compute_spectral_power"], [1074, 0, 1, "", "compute_spectral_reflectivity"], [1075, 0, 1, "", "compute_spectral_rhohv"], [1076, 0, 1, "", "compute_st1_iq"], [1077, 0, 1, "", "compute_st2_iq"], [1078, 0, 1, "", "compute_svp"], [1079, 0, 1, "", "compute_ts_along_coord"], [1080, 0, 1, "", "compute_vol_refl"], [1081, 0, 1, "", "compute_vp"], [1082, 0, 1, "", "compute_wbn_iq"], [1083, 0, 1, "", "conv_strat_yuter"], [1084, 0, 1, "", "data_for_centroids"], [1085, 0, 1, "", "dealias_spectra"], [1086, 0, 1, "", "detect_ml"], [1087, 0, 1, "", "determine_medoids"], [1088, 0, 1, "", "est_rain_rate_a"], [1089, 0, 1, "", "est_rain_rate_hydro"], [1090, 0, 1, "", "est_rain_rate_kdp"], [1091, 0, 1, "", "est_rain_rate_z"], [1092, 0, 1, "", "est_rain_rate_za"], [1093, 0, 1, "", "est_rain_rate_zkdp"], [1094, 0, 1, "", "est_rain_rate_zpoly"], [1095, 0, 1, "", "est_vertical_windshear"], [1096, 0, 1, "", "est_vertical_windshear_lidar"], [1097, 0, 1, "", "est_wind_profile"], [1098, 0, 1, "", "est_wind_vel"], [1099, 0, 1, "", "fetch_radar_time_profile"], [1100, 0, 1, "", "gecsx"], [1101, 0, 1, "", "get_coeff_attg"], [1102, 0, 1, "", "get_freq_band"], [1103, 0, 1, "", "get_iso0_val"], [1104, 0, 1, "", "get_ml_rng_limits"], [1105, 0, 1, "", "grid_displacement_pc"], [1106, 0, 1, "", "grid_shift"], [1107, 0, 1, "", "hydroclass_semisupervised"], [1108, 0, 1, "", "kdp_leastsquare_double_window"], [1109, 0, 1, "", "kdp_leastsquare_single_window"], [1110, 0, 1, "", "kdp_maesaka"], [1111, 0, 1, "", "kdp_schneebeli"], [1112, 0, 1, "", "kdp_vulpiani"], [1113, 0, 1, "", "map_profile_to_gates"], [1114, 0, 1, "", "melting_layer_giangrande"], [1115, 0, 1, "", "melting_layer_hydroclass"], [1116, 0, 1, "", "melting_layer_mf"], [1117, 0, 1, "", "quasi_vertical_profile"], [1118, 0, 1, "", "select_samples"], [1119, 0, 1, "", "steiner_conv_strat"], [1120, 0, 1, "", "synthetic_obs_distribution"], [1121, 0, 1, "", "texture_of_complex_phase"], [1122, 0, 1, "", "vad_browning"], [1123, 0, 1, "", "vad_michelson"]], "pyart.testing": [[1125, 2, 1, "", "Grid"], [1135, 2, 1, "", "InTemporaryDirectory"], [1137, 2, 1, "", "Radar"], [1166, 2, 1, "", "RadarSpectra"], [1195, 0, 1, "", "get_metadata"], [1196, 0, 1, "", "get_test_data"], [1197, 0, 1, "", "make_empty_grid"], [1198, 0, 1, "", "make_empty_ppi_radar"], [1199, 0, 1, "", "make_empty_rhi_radar"], [1200, 0, 1, "", "make_empty_spectra_radar"], [1201, 0, 1, "", "make_normal_storm"], [1202, 0, 1, "", "make_single_ray_radar"], [1203, 0, 1, "", "make_storm_grid"], [1204, 0, 1, "", "make_target_grid"], [1205, 0, 1, "", "make_target_radar"], [1206, 0, 1, "", "make_target_spectra_radar"], [1207, 0, 1, "", "make_velocity_aliased_radar"], [1208, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[1126, 3, 1, "", "add_field"], [1127, 3, 1, "", "get_point_longitude_latitude"], [1128, 3, 1, "", "get_projparams"], [1129, 3, 1, "", "init_point_altitude"], [1130, 3, 1, "", "init_point_longitude_latitude"], [1131, 3, 1, "", "init_point_x_y_z"], [1132, 4, 1, "", "projection_proj"], [1133, 3, 1, "", "to_xarray"], [1134, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[1136, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[1138, 3, 1, "", "add_field"], [1139, 3, 1, "", "add_field_like"], [1140, 3, 1, "", "add_filter"], [1141, 3, 1, "", "check_field_exists"], [1142, 3, 1, "", "extract_sweeps"], [1143, 3, 1, "", "get_azimuth"], [1144, 3, 1, "", "get_elevation"], [1145, 3, 1, "", "get_end"], [1146, 3, 1, "", "get_field"], [1147, 3, 1, "", "get_gate_area"], [1148, 3, 1, "", "get_gate_lat_lon_alt"], [1149, 3, 1, "", "get_gate_x_y_z"], [1150, 3, 1, "", "get_nyquist_vel"], [1151, 3, 1, "", "get_slice"], [1152, 3, 1, "", "get_start"], [1153, 3, 1, "", "get_start_end"], [1154, 3, 1, "", "info"], [1155, 3, 1, "", "init_gate_altitude"], [1156, 3, 1, "", "init_gate_longitude_latitude"], [1157, 3, 1, "", "init_gate_x_y_z"], [1158, 3, 1, "", "init_rays_per_sweep"], [1159, 3, 1, "", "iter_azimuth"], [1160, 3, 1, "", "iter_elevation"], [1161, 3, 1, "", "iter_end"], [1162, 3, 1, "", "iter_field"], [1163, 3, 1, "", "iter_slice"], [1164, 3, 1, "", "iter_start"], [1165, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[1167, 3, 1, "", "add_field"], [1168, 3, 1, "", "add_field_like"], [1169, 3, 1, "", "add_filter"], [1170, 3, 1, "", "check_field_exists"], [1171, 3, 1, "", "extract_sweeps"], [1172, 3, 1, "", "get_azimuth"], [1173, 3, 1, "", "get_elevation"], [1174, 3, 1, "", "get_end"], [1175, 3, 1, "", "get_field"], [1176, 3, 1, "", "get_gate_area"], [1177, 3, 1, "", "get_gate_lat_lon_alt"], [1178, 3, 1, "", "get_gate_x_y_z"], [1179, 3, 1, "", "get_nyquist_vel"], [1180, 3, 1, "", "get_slice"], [1181, 3, 1, "", "get_start"], [1182, 3, 1, "", "get_start_end"], [1183, 3, 1, "", "info"], [1184, 3, 1, "", "init_gate_altitude"], [1185, 3, 1, "", "init_gate_longitude_latitude"], [1186, 3, 1, "", "init_gate_x_y_z"], [1187, 3, 1, "", "init_rays_per_sweep"], [1188, 3, 1, "", "iter_azimuth"], [1189, 3, 1, "", "iter_elevation"], [1190, 3, 1, "", "iter_end"], [1191, 3, 1, "", "iter_field"], [1192, 3, 1, "", "iter_slice"], [1193, 3, 1, "", "iter_start"], [1194, 3, 1, "", "iter_start_end"]], "pyart.util": [[1210, 0, 1, "", "angular_mean"], [1211, 0, 1, "", "angular_mean_deg"], [1212, 0, 1, "", "angular_std"], [1213, 0, 1, "", "angular_std_deg"], [1214, 0, 1, "", "angular_texture_2d"], [1215, 0, 1, "", "colocated_gates"], [1216, 0, 1, "", "colocated_gates2"], [1217, 0, 1, "", "compute_azimuthal_average"], [1218, 0, 1, "", "compute_corr"], [1219, 0, 1, "", "compute_directional_stats"], [1220, 0, 1, "", "compute_mse"], [1221, 0, 1, "", "compute_nse"], [1222, 0, 1, "", "cross_section_ppi"], [1223, 0, 1, "", "cross_section_rhi"], [1224, 0, 1, "", "datetime_from_dataset"], [1225, 0, 1, "", "datetime_from_grid"], [1226, 0, 1, "", "datetime_from_radar"], [1227, 0, 1, "", "datetimes_from_dataset"], [1228, 0, 1, "", "datetimes_from_radar"], [1229, 0, 1, "", "estimate_noise_hs74"], [1230, 0, 1, "", "estimate_noise_ivic13"], [1231, 0, 1, "", "find_neighbour_gates"], [1232, 0, 1, "", "for_azimuth"], [1233, 0, 1, "", "get_column_rays"], [1234, 0, 1, "", "get_field_location"], [1235, 0, 1, "", "get_ivic_flat_reg_var_max"], [1236, 0, 1, "", "get_ivic_pct"], [1237, 0, 1, "", "get_ivic_snr_thr"], [1238, 0, 1, "", "get_target_elevations"], [1239, 0, 1, "", "grid_texture_2d"], [1240, 0, 1, "", "image_mute_radar"], [1241, 0, 1, "", "interpol_spectra"], [1242, 0, 1, "", "intersection"], [1243, 0, 1, "", "interval_mean"], [1244, 0, 1, "", "interval_std"], [1245, 0, 1, "", "is_vpt"], [1246, 0, 1, "", "ivic_flat_reg_var_max_table"], [1247, 0, 1, "", "ivic_flat_reg_wind_len_table"], [1248, 0, 1, "", "ivic_pct_table"], [1249, 0, 1, "", "ivic_snr_thr_table"], [1250, 0, 1, "", "join_radar"], [1251, 0, 1, "", "join_spectra"], [1252, 0, 1, "", "ma_broadcast_to"], [1253, 0, 1, "", "mean_of_two_angles"], [1254, 0, 1, "", "mean_of_two_angles_deg"], [1255, 0, 1, "", "radar_from_spectra"], [1256, 0, 1, "", "rolling_window"], [1257, 0, 1, "", "simulated_vel_from_profile"], [1258, 0, 1, "", "sphere_distance"], [1259, 0, 1, "", "subset_radar"], [1260, 0, 1, "", "subset_radar_spectra"], [1261, 0, 1, "", "texture"], [1262, 0, 1, "", "texture_along_ray"], [1263, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263], "aux_io": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "extract_sweeps_skyecho": [0, 545], "get_sweep_time_coverag": [1, 547], "read_bin": [2, 548], "read_bin_mf": [3, 549], "read_cartesian_metranet": [4, 550], "read_cf1": [5, 551], "read_cf1_cartesian": [6, 552], "read_cf1_cartesian_mf": [7, 553], "read_d3r_gcpex_nc": [8, 554], "read_dat_mf": [9, 555], "read_gam": [10, 559], "read_gif": [11, 560], "read_grib": [12, 561], "read_hpl": [13, 562], "read_iq": [14, 563], "read_kazr": [15, 564], "read_metranet": [16, 565], "read_noxp_iphex_nc": [17, 566], "read_odim_grid_h5": [18, 567], "read_odim_h5": [19, 568], "read_odim_vp_h5": [20, 569], "read_pattern": [21, 570], "read_png": [22, 571], "read_radx": [23, 577], "read_rainbow_psr": [24, 578], "read_rainbow_psr_spectra": [25, 579], "read_rainbow_wrl": [26, 580], "read_skyecho": [27, 582], "read_spectra": [28, 583], "read_swissbirdradar_spectra": [29, 584], "write_odim_grid_h5": [30, 585], "write_odim_h5": [31, 586], "write_spectra": [32, 588], "bridg": [33, 589, 590], "texture_of_complex_phas": [33, 539, 590, 1121], "config": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602], "filemetadata": [34, 35, 36, 37, 592, 593, 594, 595], "__call__": [35, 593], "get_field_nam": [36, 41, 594, 599], "get_metadata": [37, 43, 595, 601, 1195], "get_field_colormap": [38, 596], "get_field_limit": [39, 597], "get_field_map": [40, 598], "get_fillvalu": [42, 600], "load_config": [44, 602], "core": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684], "grid": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 794, 970, 1017, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1277, 1278, 1282, 1313], "add_field": [46, 60, 89, 605, 619, 648, 1126, 1138, 1167], "get_point_longitude_latitud": [47, 606, 1127], "get_projparam": [48, 607, 1128], "init_point_altitud": [49, 608, 1129], "init_point_longitude_latitud": [50, 609, 1130], "init_point_x_y_z": [51, 610, 1131], "projection_proj": [52, 611, 1132], "to_xarrai": [53, 612, 1133], "write": [54, 543, 613, 970, 1134], "horizontalwindprofil": [55, 56, 57, 58, 614, 615, 616, 617], "from_u_and_v": [56, 615], "u_wind": [57, 616], "v_wind": [58, 617], "radar": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 543, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 685, 757, 794, 970, 1030, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1276, 1277, 1278, 1300, 1310, 1317, 1320], "add_field_lik": [61, 90, 620, 649, 1139, 1168], "add_filt": [62, 91, 621, 650, 1140, 1169], "check_field_exist": [63, 92, 622, 651, 1141, 1170], "extract_sweep": [64, 93, 623, 652, 1142, 1171], "get_azimuth": [65, 94, 624, 653, 1143, 1172], "get_elev": [66, 95, 625, 654, 1144, 1173], "get_end": [67, 96, 626, 655, 1145, 1174], "get_field": [68, 97, 627, 656, 1146, 1175], "get_gate_area": [69, 98, 628, 657, 1147, 1176], "get_gate_lat_lon_alt": [70, 99, 629, 658, 1148, 1177], "get_gate_x_y_z": [71, 100, 630, 659, 1149, 1178], "get_nyquist_vel": [72, 101, 631, 660, 1150, 1179], "get_slic": [73, 102, 632, 661, 1151, 1180], "get_start": [74, 103, 633, 662, 1152, 1181], "get_start_end": [75, 104, 634, 663, 1153, 1182], "info": [76, 105, 635, 664, 1154, 1183], "init_gate_altitud": [77, 106, 636, 665, 1155, 1184], "init_gate_longitude_latitud": [78, 107, 637, 666, 1156, 1185], "init_gate_x_y_z": [79, 108, 638, 667, 1157, 1186], "init_rays_per_sweep": [80, 109, 639, 668, 1158, 1187], "iter_azimuth": [81, 110, 640, 669, 1159, 1188], "iter_elev": [82, 111, 641, 670, 1160, 1189], "iter_end": [83, 112, 642, 671, 1161, 1190], "iter_field": [84, 113, 643, 672, 1162, 1191], "iter_slic": [85, 114, 644, 673, 1163, 1192], "iter_start": [86, 115, 645, 674, 1164, 1193], "iter_start_end": [87, 116, 646, 675, 1165, 1194], "radarspectra": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "antenna_to_cartesian": [117, 676], "antenna_vectors_to_cartesian": [118, 677], "cartesian_to_antenna": [119, 678], "cartesian_to_geograph": [120, 679], "cartesian_to_geographic_aeqd": [121, 680], "cartesian_vectors_to_geograph": [122, 681], "geographic_to_cartesian": [123, 682], "geographic_to_cartesian_aeqd": [124, 683], "wgs84_to_swissch1903": [125, 684], "test": [125, 684, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1320], "exampl": [125, 684, 1017, 1266, 1270, 1271, 1275, 1280, 1299, 1302], "correct": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 1266, 1267, 1270, 1316], "calculate_attenu": [126, 714], "calculate_attenuation_philinear": [127, 715], "calculate_attenuation_zphi": [128, 716], "compute_apparent_vpr": [129, 717], "compute_theoretical_vpr": [130, 718], "correct_bia": [131, 719], "correct_noise_rhohv": [132, 720], "correct_sys_phas": [133, 721], "correct_vis": [134, 722], "correct_vpr": [135, 723], "correct_vpr_spatialis": [136, 724], "dealias_fourdd": [137, 725], "dealias_region_bas": [138, 726], "dealias_unwrap_phas": [139, 727], "despeckle_field": [140, 728], "det_sys_phase_rai": [141, 729], "est_rhohv_rain": [142, 730], "est_zdr_precip": [143, 731], "est_zdr_snow": [144, 732], "find_object": [145, 733], "get_mask_fzl": [146, 735], "get_sun_hit": [147, 736], "get_sun_hits_iv": [148, 737], "get_sun_hits_psr": [149, 738], "phase_proc_lp": [150, 740], "phase_proc_lp_gf": [151, 741], "ptoa_to_sf": [152, 742], "scanning_loss": [153, 744], "selfconsistency_bia": [154, 745], "selfconsistency_bias2": [155, 746], "selfconsistency_kdp_phidp": [156, 747], "smooth_mask": [157, 748], "smooth_phidp_double_window": [158, 749], "smooth_phidp_single_window": [159, 750], "solar_flux_lookup": [160, 751], "sun_position_mfr": [161, 752], "sun_position_pysolar": [162, 753], "sun_pow": [163, 754], "sun_retriev": [164, 755], "except": [165, 166, 167, 168, 756], "deprecatedattribut": 165, "deprecatedfunctionnam": 166, "missingoptionaldepend": 167, "_deprecated_alia": 168, "filter": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 1316], "gatefilt": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 1314], "copi": [170, 431, 687, 759, 996], "exclude_abov": [171, 688, 760], "exclude_al": [172, 689, 761], "exclude_below": [173, 690, 762], "exclude_equ": [174, 691, 763], "exclude_g": [175, 692, 764], "exclude_insid": [176, 693, 765], "exclude_invalid": [177, 694, 766], "exclude_mask": [178, 695, 767], "exclude_non": [179, 696, 768], "exclude_not_equ": [180, 697, 769], "exclude_outsid": [181, 698, 770], "exclude_transit": [182, 699, 771], "gate_exclud": [183, 700, 772], "gate_includ": [184, 701, 773], "include_abov": [185, 702, 774], "include_al": [186, 703, 775], "include_below": [187, 704, 776], "include_equ": [188, 705, 777], "include_g": [189, 706, 778], "include_insid": [190, 707, 779], "include_non": [191, 708, 780], "include_not_equ": [192, 709, 781], "include_not_mask": [193, 710, 782], "include_not_transit": [194, 711, 783], "include_outsid": [195, 712, 784], "include_valid": [196, 713, 785], "birds_gate_filt": [197, 786], "class_based_gate_filt": [198, 787], "iso0_based_gate_filt": [199, 788], "moment_and_texture_based_gate_filt": [200, 789], "moment_based_gate_filt": [201, 739, 790], "snr_based_gate_filt": [202, 791], "temp_based_gate_filt": [203, 792], "visibility_based_gate_filt": [204, 793], "graph": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969], "airborneradardisplai": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828], "generate_az_rhi_titl": [206, 273, 306, 343, 796, 863, 896, 933], "generate_filenam": [207, 243, 259, 274, 307, 344, 797, 833, 849, 864, 897, 934], "generate_ray_titl": [208, 275, 308, 345, 798, 865, 898, 935], "generate_titl": [209, 276, 309, 346, 799, 866, 899, 936], "generate_vpt_titl": [210, 277, 310, 347, 800, 867, 900, 937], "generate_xsection_titl": [211, 278, 311, 348, 801, 868, 901, 938], "label_xaxis_r": [212, 279, 312, 349, 802, 869, 902, 939], "label_xaxis_rai": [213, 280, 313, 350, 803, 870, 903, 940], "label_xaxis_tim": [214, 281, 314, 351, 804, 871, 904, 941], "label_xaxis_x": [215, 282, 315, 352, 805, 872, 905, 942], "label_xaxis_xsect": [216, 283, 316, 353, 806, 873, 906, 943], "label_yaxis_field": [217, 284, 317, 354, 807, 874, 907, 944], "label_yaxis_xsect": [218, 285, 318, 355, 808, 875, 908, 945], "label_yaxis_i": [219, 286, 319, 356, 809, 876, 909, 946], "label_yaxis_z": [220, 287, 320, 357, 810, 877, 910, 947], "plot": [221, 288, 321, 358, 794, 811, 878, 911, 948, 1270, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1301, 1303, 1304, 1315], "plot_azimuth_to_rhi": [222, 289, 322, 359, 812, 879, 912, 949], "plot_colorbar": [223, 247, 265, 290, 323, 360, 813, 837, 855, 880, 913, 950], "plot_cr_rast": [224, 291, 324, 361, 814, 881, 914, 951], "plot_cross_hair": [225, 292, 325, 362, 815, 882, 915, 952], "plot_grid_lin": [226, 293, 326, 363, 816, 883, 916, 953], "plot_label": [227, 228, 294, 295, 327, 328, 364, 365, 817, 818, 884, 885, 917, 918, 954, 955], "plot_ppi": [229, 296, 332, 369, 819, 886, 922, 959], "plot_range_r": [230, 231, 297, 298, 334, 335, 371, 372, 820, 821, 887, 888, 924, 925, 961, 962], "plot_rai": [232, 299, 336, 373, 822, 889, 926, 963], "plot_rhi": [233, 300, 337, 374, 823, 890, 927, 964], "plot_sweep_grid": [234, 824], "plot_vpt": [235, 301, 338, 375, 825, 891, 928, 965], "plot_xsect": [236, 302, 339, 376, 826, 892, 929, 966], "set_aspect_ratio": [237, 303, 340, 377, 827, 893, 930, 967], "set_limit": [238, 304, 341, 378, 828, 894, 931, 968], "gridmapdisplai": [239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 1296], "cartopy_coastlin": [240, 830], "cartopy_political_boundari": [241, 831], "cartopy_st": [242, 832], "generate_grid_titl": [244, 260, 834, 850], "generate_latitudinal_level_titl": [245, 261, 835, 851], "generate_longitudinal_level_titl": [246, 262, 836, 852], "plot_cross_sect": [248, 838], "plot_cross_section_level": [249, 839], "plot_crosshair": [250, 266, 840, 856], "plot_grid": [251, 267, 841, 857], "plot_grid_contour": [252, 842], "plot_grid_raw": [253, 843], "plot_latitude_slic": [254, 268, 844, 858], "plot_latitudinal_level": [255, 269, 845, 859], "plot_longitude_slic": [256, 270, 846, 860], "plot_longitudinal_level": [257, 271, 847, 861], "gridmapdisplaybasemap": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861], "get_basemap": [263, 853], "plot_basemap": [264, 854], "radardisplai": [272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894], "radarmapdisplai": [305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931], "plot_line_geo": [329, 366, 919, 956], "plot_line_xi": [330, 367, 920, 957], "plot_point": [331, 368, 921, 958], "plot_ppi_map": [333, 370, 923, 960], "radarmapdisplaybasemap": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968], "io": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992], "make_time_unit_str": [379, 971], "prepare_for_read": [380, 972], "read": [381, 543, 970, 973, 1272, 1273, 1315, 1316], "read_arm_sond": [382, 974], "read_arm_sonde_vap": [383, 975], "read_cfradi": [384, 976], "read_cfradial2": [385, 977], "read_chl": [386, 978], "read_grid": [387, 979], "read_grid_mdv": [388, 980], "read_mdv": [389, 981], "read_nexrad_arch": [390, 982], "read_nexrad_cdm": [391, 983], "read_nexrad_level3": [392, 984], "read_rsl": [393, 985], "read_sigmet": [394, 986], "read_uf": [395, 987], "write_cfradi": [396, 988], "write_grid": [397, 989], "write_grid_geotiff": [398, 990], "write_grid_mdv": [399, 991], "write_uf": [400, 992], "lazydict": [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "lazyloaddict": [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006], "__class_getitem__": 402, "__contains__": 403, "__delattr__": 404, "__delitem__": 405, "__dir__": 406, "__eq__": 407, "__format__": 408, "__ge__": 409, "__getattribute__": 410, "__getitem__": 411, "__getstate__": 412, "__gt__": 413, "__init__": 414, "__init_subclass__": 415, "__iter__": 416, "__le__": 417, "__len__": 418, "__lt__": 419, "__ne__": 420, "__new__": 421, "__reduce__": 422, "__reduce_ex__": 423, "__repr__": 424, "__setattr__": 425, "__setitem__": 426, "__sizeof__": 427, "__str__": 428, "__subclasshook__": 429, "clear": [430, 995, 1008], "get": [432, 997, 1009, 1307], "has_kei": [433, 998], "item": [434, 999, 1010], "kei": [435, 1000, 1011], "pop": [436, 1001, 1012], "popitem": [437, 1002, 1013], "set_lazi": [438, 1003], "setdefault": [439, 1004, 1014], "updat": [440, 1005, 1015], "valu": [441, 1006, 1016], "map": [442, 443, 444, 445, 446, 447, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1270, 1275, 1277, 1278, 1289, 1313], "example_roi_func_const": [442, 1022], "example_roi_func_dist": [443, 1023], "example_roi_func_dist_beam": [444, 1024], "grid_from_radar": [445, 1026], "map_gates_to_grid": [446, 1027], "map_to_grid": [447, 1028], "retriev": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1270, 1299, 1316], "_destandard": 448, "_get_res_vol_sid": 449, "atmospheric_gas_att": [450, 1031], "calculate_snr_from_reflect": [451, 1032], "calculate_velocity_textur": [452, 1033], "compute_doppler_veloc": [453, 1035], "compute_doppler_velocity_iq": [454, 1036], "compute_doppler_width": [455, 1037], "compute_doppler_width_iq": [456, 1038], "compute_apparent_profil": [457, 1039], "compute_bird_dens": [458, 1040], "compute_ccor": [459, 1041], "compute_cdr": [460, 1042], "compute_centroid": [461, 1043], "compute_differential_phas": [462, 1044], "compute_differential_phase_iq": [463, 1045], "compute_differential_reflect": [464, 1046], "compute_differential_reflectivity_iq": [465, 1047], "compute_evp": [466, 1048], "compute_iq": [467, 1049], "compute_l": [468, 1050], "compute_mean_phase_iq": [469, 1051], "compute_noise_pow": [470, 1052], "compute_noisedbz": [471, 1053], "compute_pol_vari": [472, 1054], "compute_pol_variables_iq": [473, 1055], "compute_qvp": [474, 1056], "compute_radial_noise_h": [475, 1057], "compute_radial_noise_iv": [476, 1058], "compute_rc": [477, 1059], "compute_rcs_from_pr": [478, 1060], "compute_reflect": [479, 1061], "compute_reflectivity_iq": [480, 1062], "compute_rhohv": [481, 1063], "compute_rhohv_iq": [482, 1064], "compute_rqvp": [483, 1065], "compute_signal_pow": [484, 1066], "compute_snr": [485, 1067], "compute_spectra": [486, 1068], "compute_spectral_differential_phas": [487, 1069], "compute_spectral_differential_reflect": [488, 1070], "compute_spectral_nois": [489, 1071], "compute_spectral_phas": [490, 1072], "compute_spectral_pow": [491, 1073], "compute_spectral_reflect": [492, 1074], "compute_spectral_rhohv": [493, 1075], "compute_st1_iq": [494, 1076], "compute_st2_iq": [495, 1077], "compute_svp": [496, 1078], "compute_ts_along_coord": [497, 1079], "compute_vol_refl": [498, 1080], "compute_vp": [499, 1081], "compute_wbn_iq": [500, 1082], "conv_strat_yut": [501, 1083], "data_for_centroid": [502, 1084], "dealias_spectra": [503, 1085], "detect_ml": [504, 1086], "paremet": [504, 1086], "determine_medoid": [505, 1087], "est_rain_rate_a": [506, 1088], "est_rain_rate_hydro": [507, 1089], "est_rain_rate_kdp": [508, 1090], "est_rain_rate_z": [509, 1091], "est_rain_rate_za": [510, 1092], "est_rain_rate_zkdp": [511, 1093], "est_rain_rate_zpoli": [512, 1094], "est_vertical_windshear": [513, 1095], "est_vertical_windshear_lidar": [514, 1096], "est_wind_profil": [515, 1097], "est_wind_vel": [516, 1098], "fetch_radar_time_profil": [517, 1099], "gecsx": [518, 1100], "get_coeff_attg": [519, 1101], "get_freq_band": [520, 1102], "get_iso0_v": [521, 1103], "get_ml_rng_limit": [522, 1104], "grid_displacement_pc": [523, 1105], "grid_shift": [524, 1106], "hydroclass_semisupervis": [525, 1107], "kdp_leastsquare_double_window": [526, 1108], "kdp_leastsquare_single_window": [527, 1109], "kdp_maesaka": [528, 1110], "kdp_schneeb": [529, 1111], "kdp_vulpiani": [530, 1112], "map_profile_to_g": [531, 1113], "melting_layer_giangrand": [532, 1114], "melting_layer_hydroclass": [533, 1115], "melting_layer_mf": [534, 1116], "quasi_vertical_profil": [535, 1117], "select_sampl": [536, 1118], "steiner_conv_strat": [537, 1119], "synthetic_obs_distribut": [538, 1120], "vad_brown": [540, 1122], "vad_michelson": [541, 1123], "_debug_info": 542, "auxiliari": 543, "input": [543, 970, 1270, 1271], "output": [543, 970, 1270, 1271], "data": [543, 757, 794, 970, 1272, 1273, 1313, 1314, 1315, 1316], "convert_data": 544, "get_librari": 546, "read_edge_netcdf": 556, "read_file_c": 557, "read_file_pi": 558, "read_product_c": 572, "read_product_pi": 573, "read_psr_cpi_head": 574, "read_psr_head": 575, "read_psr_spectra": 576, "read_sinarame_h5": 581, "write_sinarame_cfradi": 587, "other": [589, 685], "toolkit": [589, 1320], "phase": 589, "function": [589, 685], "class": 603, "coordin": 603, "transform": 603, "veloc": [685, 1268, 1311, 1315], "unfold": 685, "helper": 685, "gauss_fit": 734, "retrieval_result": 743, "plot_convstrat_schem": 969, "sond": 970, "special": 970, "us": [970, 1268, 1276, 1296], "mutablemap": [1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "roi": 1017, "region": [1017, 1268], "interest": 1017, "gatemapp": [1018, 1019, 1020, 1021, 1276], "distance_toler": 1019, "mapped_radar": 1020, "time_toler": 1021, "get_earth_radiu": 1025, "polar_to_cartesian": 1029, "composite_reflect": 1034, "intemporarydirectori": [1135, 1136], "cleanup": 1136, "get_test_data": 1196, "make_empty_grid": 1197, "make_empty_ppi_radar": 1198, "make_empty_rhi_radar": 1199, "make_empty_spectra_radar": 1200, "make_normal_storm": 1201, "make_single_ray_radar": 1202, "make_storm_grid": 1203, "make_target_grid": 1204, "make_target_radar": 1205, "make_target_spectra_radar": 1206, "make_velocity_aliased_radar": 1207, "make_velocity_aliased_rhi_radar": 1208, "util": [1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263], "angular_mean": 1210, "angular_mean_deg": 1211, "angular_std": 1212, "angular_std_deg": 1213, "angular_texture_2d": 1214, "colocated_g": 1215, "colocated_gates2": 1216, "compute_azimuthal_averag": 1217, "compute_corr": 1218, "compute_directional_stat": 1219, "compute_ms": 1220, "compute_ns": 1221, "cross_section_ppi": 1222, "cross_section_rhi": 1223, "datetime_from_dataset": 1224, "datetime_from_grid": 1225, "datetime_from_radar": 1226, "datetimes_from_dataset": 1227, "datetimes_from_radar": 1228, "estimate_noise_hs74": 1229, "estimate_noise_ivic13": 1230, "find_neighbour_g": 1231, "for_azimuth": 1232, "assumpt": [1232, 1258], "get_column_rai": 1233, "get_field_loc": 1234, "get_ivic_flat_reg_var_max": 1235, "get_ivic_pct": 1236, "get_ivic_snr_thr": 1237, "get_target_elev": 1238, "grid_texture_2d": 1239, "image_mute_radar": 1240, "interpol_spectra": 1241, "intersect": 1242, "interval_mean": 1243, "interval_std": 1244, "is_vpt": 1245, "ivic_flat_reg_var_max_t": 1246, "ivic_flat_reg_wind_len_t": 1247, "ivic_pct_t": 1248, "ivic_snr_thr_t": 1249, "join_radar": 1250, "join_spectra": 1251, "ma_broadcast_to": 1252, "mean_of_two_angl": 1253, "mean_of_two_angles_deg": 1254, "radar_from_spectra": 1255, "rolling_window": 1256, "simulated_vel_from_profil": 1257, "sphere_dist": 1258, "paramet": 1258, "subset_radar": 1259, "subset_radar_spectra": 1260, "textur": 1261, "texture_along_rai": 1262, "to_vpt": 1263, "api": 1264, "manual": 1264, "changelog": 1265, "v1": 1265, "8": 1265, "4": 1265, "3": [1265, 1272, 1296], "2": [1265, 1272, 1273], "1": 1265, "7": 1265, "6": 1265, "new": 1265, "addit": 1265, "moment": [1266, 1270, 1285], "reflect": [1267, 1284, 1286, 1292, 1293, 1301], "attenu": [1267, 1316], "dealia": 1268, "doppler": [1268, 1315], "base": 1268, "algorithm": [1268, 1302], "comput": [1269, 1274, 1279, 1298, 1305, 1306, 1318], "time": [1269, 1274, 1279, 1298, 1305, 1306, 1318], "galleri": [1270, 1308], "nexrad": [1272, 1273, 1285, 1286], "from": [1272, 1282, 1285, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1297, 1315, 1319], "aw": 1272, "cloud": 1272, "level": [1272, 1273], "configur": 1272, "our": 1272, "filepath": 1272, "older": 1273, "fix": 1273, "latitud": 1273, "longitud": 1273, "issu": 1273, "compar": 1276, "two": [1276, 1278, 1295], "singl": 1277, "cartesian": [1277, 1278, 1313], "choos": 1281, "colormap": 1281, "your": [1281, 1283], "cross": [1282, 1297], "section": [1282, 1297], "modifi": 1283, "colorbar": 1283, "creat": [1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1309, 1322], "an": [1284, 1292, 1293, 1322], "imag": 1284, "mute": 1284, "multipl": [1285, 1290, 1291], "file": [1285, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1309, 1310, 1320], "ppi": [1287, 1288, 1289, 1297], "cfradial": 1287, "mdv": [1288, 1292, 1293, 1294], "cartopi": 1289, "panel": [1290, 1291, 1295, 1296], "rhi": [1290, 1291, 1292, 1293, 1294, 1295], "cf": [1290, 1291], "radial": [1290, 1291], "contour": [1292, 1293], "line": [1292, 1293], "volum": 1297, "extract": 1300, "column": 1300, "abov": 1300, "point": 1300, "calcul": [1301, 1303, 1304], "composit": 1301, "convect": 1302, "stratiform": 1302, "classif": [1302, 1303, 1316], "how": 1302, "work": 1302, "summari": 1302, "recommend": 1302, "best": 1302, "practic": 1302, "refer": 1302, "hydrometeor": [1303, 1316], "vad": [1304, 1315], "profil": 1304, "about": 1307, "meteoswiss": 1307, "fork": 1307, "py": [1307, 1314, 1317, 1320], "art": [1307, 1314, 1317, 1320], "cite": [1307, 1320], "what": 1307, "can": 1307, "do": 1307, "short": 1307, "cours": 1307, "instal": [1307, 1319, 1320], "depend": [1307, 1319, 1322], "option": [1307, 1319, 1322], "help": 1307, "contribut": 1307, "notebook": 1308, "basic": 1309, "ingest": 1309, "netcdf": 1309, "field": 1310, "manipul": 1310, "save": 1310, "object": [1310, 1317], "dealias": [1311, 1315], "mask": 1314, "With": 1314, "process": 1315, "wind": 1315, "swiss": [1315, 1316], "volumetr": 1315, "scan": 1315, "cappi": 1315, "azimuth": 1315, "displai": 1315, "raw": 1316, "c": 1316, "band": 1316, "ground": 1316, "clutter": 1316, "nois": 1316, "remov": 1316, "kdp": 1316, "estim": 1316, "qpe": 1316, "The": [1317, 1320], "index": 1317, "requir": 1319, "obtain": 1319, "latest": 1319, "sourc": 1319, "frequent": 1319, "ask": 1319, "question": 1319, "contributor": 1320, "": 1320, "guid": [1320, 1321], "python": 1320, "arm": 1320, "import": 1320, "link": 1320, "resourc": 1320, "code": 1320, "style": 1320, "setup": 1320, "github": 1320, "blog": 1320, "post": 1320, "user": 1321, "set": 1322, "up": 1322, "environ": 1322, "anaconda": 1322, "channel": 1322, "ad": 1322, "path": 1322, "more": 1322, "inform": 1322}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"pyart.aux_io.extract_sweeps_skyecho": [[0, "pyart-aux-io-extract-sweeps-skyecho"], [545, "pyart-aux-io-extract-sweeps-skyecho"]], "pyart.aux_io.get_sweep_time_coverage": [[1, "pyart-aux-io-get-sweep-time-coverage"], [547, "pyart-aux-io-get-sweep-time-coverage"]], "pyart.aux_io.read_bin": [[2, "pyart-aux-io-read-bin"], [548, "pyart-aux-io-read-bin"]], "pyart.aux_io.read_bin_mf": [[3, "pyart-aux-io-read-bin-mf"], [549, "pyart-aux-io-read-bin-mf"]], "pyart.aux_io.read_cartesian_metranet": [[4, "pyart-aux-io-read-cartesian-metranet"], [550, "pyart-aux-io-read-cartesian-metranet"]], "pyart.aux_io.read_cf1": [[5, "pyart-aux-io-read-cf1"], [551, "pyart-aux-io-read-cf1"]], "pyart.aux_io.read_cf1_cartesian": [[6, "pyart-aux-io-read-cf1-cartesian"], [552, "pyart-aux-io-read-cf1-cartesian"]], "pyart.aux_io.read_cf1_cartesian_mf": [[7, "pyart-aux-io-read-cf1-cartesian-mf"], [553, "pyart-aux-io-read-cf1-cartesian-mf"]], "pyart.aux_io.read_d3r_gcpex_nc": [[8, "pyart-aux-io-read-d3r-gcpex-nc"], [554, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_dat_mf": [[9, "pyart-aux-io-read-dat-mf"], [555, "pyart-aux-io-read-dat-mf"]], "pyart.aux_io.read_gamic": [[10, "pyart-aux-io-read-gamic"], [559, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_gif": [[11, "pyart-aux-io-read-gif"], [560, "pyart-aux-io-read-gif"]], "pyart.aux_io.read_grib": [[12, "pyart-aux-io-read-grib"], [561, "pyart-aux-io-read-grib"]], "pyart.aux_io.read_hpl": [[13, "pyart-aux-io-read-hpl"], [562, "pyart-aux-io-read-hpl"]], "pyart.aux_io.read_iq": [[14, "pyart-aux-io-read-iq"], [563, "pyart-aux-io-read-iq"]], "pyart.aux_io.read_kazr": [[15, "pyart-aux-io-read-kazr"], [564, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_metranet": [[16, "pyart-aux-io-read-metranet"], [565, "pyart-aux-io-read-metranet"]], "pyart.aux_io.read_noxp_iphex_nc": [[17, "pyart-aux-io-read-noxp-iphex-nc"], [566, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_grid_h5": [[18, "pyart-aux-io-read-odim-grid-h5"], [567, "pyart-aux-io-read-odim-grid-h5"]], "pyart.aux_io.read_odim_h5": [[19, "pyart-aux-io-read-odim-h5"], [568, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_odim_vp_h5": [[20, "pyart-aux-io-read-odim-vp-h5"], [569, "pyart-aux-io-read-odim-vp-h5"]], "pyart.aux_io.read_pattern": [[21, "pyart-aux-io-read-pattern"], [570, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_png": [[22, "pyart-aux-io-read-png"], [571, "pyart-aux-io-read-png"]], "pyart.aux_io.read_radx": [[23, "pyart-aux-io-read-radx"], [577, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_rainbow_psr": [[24, "pyart-aux-io-read-rainbow-psr"], [578, "pyart-aux-io-read-rainbow-psr"]], "pyart.aux_io.read_rainbow_psr_spectra": [[25, "pyart-aux-io-read-rainbow-psr-spectra"], [579, "pyart-aux-io-read-rainbow-psr-spectra"]], "pyart.aux_io.read_rainbow_wrl": [[26, "pyart-aux-io-read-rainbow-wrl"], [580, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_skyecho": [[27, "pyart-aux-io-read-skyecho"], [582, "pyart-aux-io-read-skyecho"]], "pyart.aux_io.read_spectra": [[28, "pyart-aux-io-read-spectra"], [583, "pyart-aux-io-read-spectra"]], "pyart.aux_io.read_swissbirdradar_spectra": [[29, "pyart-aux-io-read-swissbirdradar-spectra"], [584, "pyart-aux-io-read-swissbirdradar-spectra"]], "pyart.aux_io.write_odim_grid_h5": [[30, "pyart-aux-io-write-odim-grid-h5"], [585, "pyart-aux-io-write-odim-grid-h5"]], "pyart.aux_io.write_odim_h5": [[31, "pyart-aux-io-write-odim-h5"], [586, "pyart-aux-io-write-odim-h5"]], "pyart.aux_io.write_spectra": [[32, "pyart-aux-io-write-spectra"], [588, "pyart-aux-io-write-spectra"]], "pyart.bridge.texture_of_complex_phase": [[33, "pyart-bridge-texture-of-complex-phase"], [590, "pyart-bridge-texture-of-complex-phase"]], "pyart.config.FileMetadata": [[34, "pyart-config-filemetadata"], [592, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[35, "pyart-config-filemetadata-call"], [593, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[36, "pyart-config-filemetadata-get-field-name"], [594, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[37, "pyart-config-filemetadata-get-metadata"], [595, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[38, "pyart-config-get-field-colormap"], [596, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[39, "pyart-config-get-field-limits"], [597, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[40, "pyart-config-get-field-mapping"], [598, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[41, "pyart-config-get-field-name"], [599, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[42, "pyart-config-get-fillvalue"], [600, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[43, "pyart-config-get-metadata"], [601, "pyart-config-get-metadata"]], "pyart.config.load_config": [[44, "pyart-config-load-config"], [602, "pyart-config-load-config"]], "pyart.core.Grid": [[45, "pyart-core-grid"], [604, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[46, "pyart-core-grid-add-field"], [605, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[47, "pyart-core-grid-get-point-longitude-latitude"], [606, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[48, "pyart-core-grid-get-projparams"], [607, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[49, "pyart-core-grid-init-point-altitude"], [608, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[50, "pyart-core-grid-init-point-longitude-latitude"], [609, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[51, "pyart-core-grid-init-point-x-y-z"], [610, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[52, "pyart-core-grid-projection-proj"], [611, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[53, "pyart-core-grid-to-xarray"], [612, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[54, "pyart-core-grid-write"], [613, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[55, "pyart-core-horizontalwindprofile"], [614, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[56, "pyart-core-horizontalwindprofile-from-u-and-v"], [615, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[57, "pyart-core-horizontalwindprofile-u-wind"], [616, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[58, "pyart-core-horizontalwindprofile-v-wind"], [617, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[59, "pyart-core-radar"], [618, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[60, "pyart-core-radar-add-field"], [619, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[61, "pyart-core-radar-add-field-like"], [620, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[62, "pyart-core-radar-add-filter"], [621, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[63, "pyart-core-radar-check-field-exists"], [622, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[64, "pyart-core-radar-extract-sweeps"], [623, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[65, "pyart-core-radar-get-azimuth"], [624, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[66, "pyart-core-radar-get-elevation"], [625, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[67, "pyart-core-radar-get-end"], [626, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[68, "pyart-core-radar-get-field"], [627, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[69, "pyart-core-radar-get-gate-area"], [628, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[70, "pyart-core-radar-get-gate-lat-lon-alt"], [629, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[71, "pyart-core-radar-get-gate-x-y-z"], [630, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[72, "pyart-core-radar-get-nyquist-vel"], [631, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[73, "pyart-core-radar-get-slice"], [632, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[74, "pyart-core-radar-get-start"], [633, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[75, "pyart-core-radar-get-start-end"], [634, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[76, "pyart-core-radar-info"], [635, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[77, "pyart-core-radar-init-gate-altitude"], [636, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[78, "pyart-core-radar-init-gate-longitude-latitude"], [637, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[79, "pyart-core-radar-init-gate-x-y-z"], [638, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[80, "pyart-core-radar-init-rays-per-sweep"], [639, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[81, "pyart-core-radar-iter-azimuth"], [640, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[82, "pyart-core-radar-iter-elevation"], [641, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[83, "pyart-core-radar-iter-end"], [642, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[84, "pyart-core-radar-iter-field"], [643, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[85, "pyart-core-radar-iter-slice"], [644, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[86, "pyart-core-radar-iter-start"], [645, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[87, "pyart-core-radar-iter-start-end"], [646, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[88, "pyart-core-radarspectra"], [647, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.add_field": [[89, "pyart-core-radarspectra-add-field"], [648, "pyart-core-radarspectra-add-field"]], "pyart.core.RadarSpectra.add_field_like": [[90, "pyart-core-radarspectra-add-field-like"], [649, "pyart-core-radarspectra-add-field-like"]], "pyart.core.RadarSpectra.add_filter": [[91, "pyart-core-radarspectra-add-filter"], [650, "pyart-core-radarspectra-add-filter"]], "pyart.core.RadarSpectra.check_field_exists": [[92, "pyart-core-radarspectra-check-field-exists"], [651, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.extract_sweeps": [[93, "pyart-core-radarspectra-extract-sweeps"], [652, "pyart-core-radarspectra-extract-sweeps"]], "pyart.core.RadarSpectra.get_azimuth": [[94, "pyart-core-radarspectra-get-azimuth"], [653, "pyart-core-radarspectra-get-azimuth"]], "pyart.core.RadarSpectra.get_elevation": [[95, "pyart-core-radarspectra-get-elevation"], [654, "pyart-core-radarspectra-get-elevation"]], "pyart.core.RadarSpectra.get_end": [[96, "pyart-core-radarspectra-get-end"], [655, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_field": [[97, "pyart-core-radarspectra-get-field"], [656, "pyart-core-radarspectra-get-field"]], "pyart.core.RadarSpectra.get_gate_area": [[98, "pyart-core-radarspectra-get-gate-area"], [657, "pyart-core-radarspectra-get-gate-area"]], "pyart.core.RadarSpectra.get_gate_lat_lon_alt": [[99, "pyart-core-radarspectra-get-gate-lat-lon-alt"], [658, "pyart-core-radarspectra-get-gate-lat-lon-alt"]], "pyart.core.RadarSpectra.get_gate_x_y_z": [[100, "pyart-core-radarspectra-get-gate-x-y-z"], [659, "pyart-core-radarspectra-get-gate-x-y-z"]], "pyart.core.RadarSpectra.get_nyquist_vel": [[101, "pyart-core-radarspectra-get-nyquist-vel"], [660, "pyart-core-radarspectra-get-nyquist-vel"]], "pyart.core.RadarSpectra.get_slice": [[102, "pyart-core-radarspectra-get-slice"], [661, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[103, "pyart-core-radarspectra-get-start"], [662, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[104, "pyart-core-radarspectra-get-start-end"], [663, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.info": [[105, "pyart-core-radarspectra-info"], [664, "pyart-core-radarspectra-info"]], "pyart.core.RadarSpectra.init_gate_altitude": [[106, "pyart-core-radarspectra-init-gate-altitude"], [665, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[107, "pyart-core-radarspectra-init-gate-longitude-latitude"], [666, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[108, "pyart-core-radarspectra-init-gate-x-y-z"], [667, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[109, "pyart-core-radarspectra-init-rays-per-sweep"], [668, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[110, "pyart-core-radarspectra-iter-azimuth"], [669, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[111, "pyart-core-radarspectra-iter-elevation"], [670, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[112, "pyart-core-radarspectra-iter-end"], [671, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[113, "pyart-core-radarspectra-iter-field"], [672, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[114, "pyart-core-radarspectra-iter-slice"], [673, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[115, "pyart-core-radarspectra-iter-start"], [674, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[116, "pyart-core-radarspectra-iter-start-end"], [675, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.antenna_to_cartesian": [[117, "pyart-core-antenna-to-cartesian"], [676, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[118, "pyart-core-antenna-vectors-to-cartesian"], [677, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[119, "pyart-core-cartesian-to-antenna"], [678, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[120, "pyart-core-cartesian-to-geographic"], [679, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[121, "pyart-core-cartesian-to-geographic-aeqd"], [680, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[122, "pyart-core-cartesian-vectors-to-geographic"], [681, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[123, "pyart-core-geographic-to-cartesian"], [682, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[124, "pyart-core-geographic-to-cartesian-aeqd"], [683, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.core.wgs84_to_swissCH1903": [[125, "pyart-core-wgs84-to-swissch1903"], [684, "pyart-core-wgs84-to-swissch1903"]], "Test example": [[125, "test-example"], [684, "test-example"]], "pyart.correct.calculate_attenuation": [[126, "pyart-correct-calculate-attenuation"], [714, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[127, "pyart-correct-calculate-attenuation-philinear"], [715, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[128, "pyart-correct-calculate-attenuation-zphi"], [716, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.compute_apparent_vpr": [[129, "pyart-correct-compute-apparent-vpr"], [717, "pyart-correct-compute-apparent-vpr"]], "pyart.correct.compute_theoretical_vpr": [[130, "pyart-correct-compute-theoretical-vpr"], [718, "pyart-correct-compute-theoretical-vpr"]], "pyart.correct.correct_bias": [[131, "pyart-correct-correct-bias"], [719, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[132, "pyart-correct-correct-noise-rhohv"], [720, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.correct_sys_phase": [[133, "pyart-correct-correct-sys-phase"], [721, "pyart-correct-correct-sys-phase"]], "pyart.correct.correct_visibility": [[134, "pyart-correct-correct-visibility"], [722, "pyart-correct-correct-visibility"]], "pyart.correct.correct_vpr": [[135, "pyart-correct-correct-vpr"], [723, "pyart-correct-correct-vpr"]], "pyart.correct.correct_vpr_spatialised": [[136, "pyart-correct-correct-vpr-spatialised"], [724, "pyart-correct-correct-vpr-spatialised"]], "pyart.correct.dealias_fourdd": [[137, "pyart-correct-dealias-fourdd"], [725, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[138, "pyart-correct-dealias-region-based"], [726, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[139, "pyart-correct-dealias-unwrap-phase"], [727, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[140, "pyart-correct-despeckle-field"], [728, "pyart-correct-despeckle-field"]], "pyart.correct.det_sys_phase_ray": [[141, "pyart-correct-det-sys-phase-ray"], [729, "pyart-correct-det-sys-phase-ray"]], "pyart.correct.est_rhohv_rain": [[142, "pyart-correct-est-rhohv-rain"], [730, "pyart-correct-est-rhohv-rain"]], "pyart.correct.est_zdr_precip": [[143, "pyart-correct-est-zdr-precip"], [731, "pyart-correct-est-zdr-precip"]], "pyart.correct.est_zdr_snow": [[144, "pyart-correct-est-zdr-snow"], [732, "pyart-correct-est-zdr-snow"]], "pyart.correct.find_objects": [[145, "pyart-correct-find-objects"], [733, "pyart-correct-find-objects"]], "pyart.correct.get_mask_fzl": [[146, "pyart-correct-get-mask-fzl"], [735, "pyart-correct-get-mask-fzl"]], "pyart.correct.get_sun_hits": [[147, "pyart-correct-get-sun-hits"], [736, "pyart-correct-get-sun-hits"]], "pyart.correct.get_sun_hits_ivic": [[148, "pyart-correct-get-sun-hits-ivic"], [737, "pyart-correct-get-sun-hits-ivic"]], "pyart.correct.get_sun_hits_psr": [[149, "pyart-correct-get-sun-hits-psr"], [738, "pyart-correct-get-sun-hits-psr"]], "pyart.correct.phase_proc_lp": [[150, "pyart-correct-phase-proc-lp"], [740, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[151, "pyart-correct-phase-proc-lp-gf"], [741, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.ptoa_to_sf": [[152, "pyart-correct-ptoa-to-sf"], [742, "pyart-correct-ptoa-to-sf"]], "pyart.correct.scanning_losses": [[153, "pyart-correct-scanning-losses"], [744, "pyart-correct-scanning-losses"]], "pyart.correct.selfconsistency_bias": [[154, "pyart-correct-selfconsistency-bias"], [745, "pyart-correct-selfconsistency-bias"]], "pyart.correct.selfconsistency_bias2": [[155, "pyart-correct-selfconsistency-bias2"], [746, "pyart-correct-selfconsistency-bias2"]], "pyart.correct.selfconsistency_kdp_phidp": [[156, "pyart-correct-selfconsistency-kdp-phidp"], [747, "pyart-correct-selfconsistency-kdp-phidp"]], "pyart.correct.smooth_masked": [[157, "pyart-correct-smooth-masked"], [748, "pyart-correct-smooth-masked"]], "pyart.correct.smooth_phidp_double_window": [[158, "pyart-correct-smooth-phidp-double-window"], [749, "pyart-correct-smooth-phidp-double-window"]], "pyart.correct.smooth_phidp_single_window": [[159, "pyart-correct-smooth-phidp-single-window"], [750, "pyart-correct-smooth-phidp-single-window"]], "pyart.correct.solar_flux_lookup": [[160, "pyart-correct-solar-flux-lookup"], [751, "pyart-correct-solar-flux-lookup"]], "pyart.correct.sun_position_mfr": [[161, "pyart-correct-sun-position-mfr"], [752, "pyart-correct-sun-position-mfr"]], "pyart.correct.sun_position_pysolar": [[162, "pyart-correct-sun-position-pysolar"], [753, "pyart-correct-sun-position-pysolar"]], "pyart.correct.sun_power": [[163, "pyart-correct-sun-power"], [754, "pyart-correct-sun-power"]], "pyart.correct.sun_retrieval": [[164, "pyart-correct-sun-retrieval"], [755, "pyart-correct-sun-retrieval"]], "pyart.exceptions.DeprecatedAttribute": [[165, "pyart-exceptions-deprecatedattribute"]], "pyart.exceptions.DeprecatedFunctionName": [[166, "pyart-exceptions-deprecatedfunctionname"]], "pyart.exceptions.MissingOptionalDependency": [[167, "pyart-exceptions-missingoptionaldependency"]], "pyart.exceptions._deprecated_alias": [[168, "pyart-exceptions-deprecated-alias"]], "pyart.filters.GateFilter": [[169, "pyart-filters-gatefilter"], [758, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[170, "pyart-filters-gatefilter-copy"], [759, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[171, "pyart-filters-gatefilter-exclude-above"], [760, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[172, "pyart-filters-gatefilter-exclude-all"], [761, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[173, "pyart-filters-gatefilter-exclude-below"], [762, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[174, "pyart-filters-gatefilter-exclude-equal"], [763, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[175, "pyart-filters-gatefilter-exclude-gates"], [764, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[176, "pyart-filters-gatefilter-exclude-inside"], [765, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[177, "pyart-filters-gatefilter-exclude-invalid"], [766, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[178, "pyart-filters-gatefilter-exclude-masked"], [767, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[179, "pyart-filters-gatefilter-exclude-none"], [768, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[180, "pyart-filters-gatefilter-exclude-not-equal"], [769, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[181, "pyart-filters-gatefilter-exclude-outside"], [770, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[182, "pyart-filters-gatefilter-exclude-transition"], [771, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[183, "pyart-filters-gatefilter-gate-excluded"], [772, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[184, "pyart-filters-gatefilter-gate-included"], [773, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[185, "pyart-filters-gatefilter-include-above"], [774, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[186, "pyart-filters-gatefilter-include-all"], [775, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[187, "pyart-filters-gatefilter-include-below"], [776, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[188, "pyart-filters-gatefilter-include-equal"], [777, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[189, "pyart-filters-gatefilter-include-gates"], [778, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[190, "pyart-filters-gatefilter-include-inside"], [779, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[191, "pyart-filters-gatefilter-include-none"], [780, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[192, "pyart-filters-gatefilter-include-not-equal"], [781, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[193, "pyart-filters-gatefilter-include-not-masked"], [782, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[194, "pyart-filters-gatefilter-include-not-transition"], [783, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[195, "pyart-filters-gatefilter-include-outside"], [784, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[196, "pyart-filters-gatefilter-include-valid"], [785, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.birds_gate_filter": [[197, "pyart-filters-birds-gate-filter"], [786, "pyart-filters-birds-gate-filter"]], "pyart.filters.class_based_gate_filter": [[198, "pyart-filters-class-based-gate-filter"], [787, "pyart-filters-class-based-gate-filter"]], "pyart.filters.iso0_based_gate_filter": [[199, "pyart-filters-iso0-based-gate-filter"], [788, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[200, "pyart-filters-moment-and-texture-based-gate-filter"], [789, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[201, "pyart-filters-moment-based-gate-filter"], [790, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.snr_based_gate_filter": [[202, "pyart-filters-snr-based-gate-filter"], [791, "pyart-filters-snr-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[203, "pyart-filters-temp-based-gate-filter"], [792, "pyart-filters-temp-based-gate-filter"]], "pyart.filters.visibility_based_gate_filter": [[204, "pyart-filters-visibility-based-gate-filter"], [793, "pyart-filters-visibility-based-gate-filter"]], "pyart.graph.AirborneRadarDisplay": [[205, "pyart-graph-airborneradardisplay"], [795, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[206, "pyart-graph-airborneradardisplay-generate-az-rhi-title"], [796, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[207, "pyart-graph-airborneradardisplay-generate-filename"], [797, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[208, "pyart-graph-airborneradardisplay-generate-ray-title"], [798, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[209, "pyart-graph-airborneradardisplay-generate-title"], [799, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[210, "pyart-graph-airborneradardisplay-generate-vpt-title"], [800, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.generate_xsection_title": [[211, "pyart-graph-airborneradardisplay-generate-xsection-title"], [801, "pyart-graph-airborneradardisplay-generate-xsection-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[212, "pyart-graph-airborneradardisplay-label-xaxis-r"], [802, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[213, "pyart-graph-airborneradardisplay-label-xaxis-rays"], [803, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[214, "pyart-graph-airborneradardisplay-label-xaxis-time"], [804, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[215, "pyart-graph-airborneradardisplay-label-xaxis-x"], [805, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection": [[216, "pyart-graph-airborneradardisplay-label-xaxis-xsection"], [806, "pyart-graph-airborneradardisplay-label-xaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[217, "pyart-graph-airborneradardisplay-label-yaxis-field"], [807, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection": [[218, "pyart-graph-airborneradardisplay-label-yaxis-xsection"], [808, "pyart-graph-airborneradardisplay-label-yaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[219, "pyart-graph-airborneradardisplay-label-yaxis-y"], [809, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[220, "pyart-graph-airborneradardisplay-label-yaxis-z"], [810, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[221, "pyart-graph-airborneradardisplay-plot"], [811, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[222, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"], [812, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[223, "pyart-graph-airborneradardisplay-plot-colorbar"], [813, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[224, "pyart-graph-airborneradardisplay-plot-cr-raster"], [814, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[225, "pyart-graph-airborneradardisplay-plot-cross-hair"], [815, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[226, "pyart-graph-airborneradardisplay-plot-grid-lines"], [816, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[227, "pyart-graph-airborneradardisplay-plot-label"], [817, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[228, "pyart-graph-airborneradardisplay-plot-labels"], [818, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[229, "pyart-graph-airborneradardisplay-plot-ppi"], [819, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[230, "pyart-graph-airborneradardisplay-plot-range-ring"], [820, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[231, "pyart-graph-airborneradardisplay-plot-range-rings"], [821, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[232, "pyart-graph-airborneradardisplay-plot-ray"], [822, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[233, "pyart-graph-airborneradardisplay-plot-rhi"], [823, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[234, "pyart-graph-airborneradardisplay-plot-sweep-grid"], [824, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[235, "pyart-graph-airborneradardisplay-plot-vpt"], [825, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.plot_xsection": [[236, "pyart-graph-airborneradardisplay-plot-xsection"], [826, "pyart-graph-airborneradardisplay-plot-xsection"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[237, "pyart-graph-airborneradardisplay-set-aspect-ratio"], [827, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[238, "pyart-graph-airborneradardisplay-set-limits"], [828, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[239, "pyart-graph-gridmapdisplay"], [829, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[240, "pyart-graph-gridmapdisplay-cartopy-coastlines"], [830, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[241, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"], [831, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[242, "pyart-graph-gridmapdisplay-cartopy-states"], [832, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[243, "pyart-graph-gridmapdisplay-generate-filename"], [833, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[244, "pyart-graph-gridmapdisplay-generate-grid-title"], [834, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[245, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"], [835, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[246, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"], [836, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[247, "pyart-graph-gridmapdisplay-plot-colorbar"], [837, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[248, "pyart-graph-gridmapdisplay-plot-cross-section"], [838, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_cross_section_level": [[249, "pyart-graph-gridmapdisplay-plot-cross-section-level"], [839, "pyart-graph-gridmapdisplay-plot-cross-section-level"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[250, "pyart-graph-gridmapdisplay-plot-crosshairs"], [840, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[251, "pyart-graph-gridmapdisplay-plot-grid"], [841, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_grid_contour": [[252, "pyart-graph-gridmapdisplay-plot-grid-contour"], [842, "pyart-graph-gridmapdisplay-plot-grid-contour"]], "pyart.graph.GridMapDisplay.plot_grid_raw": [[253, "pyart-graph-gridmapdisplay-plot-grid-raw"], [843, "pyart-graph-gridmapdisplay-plot-grid-raw"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[254, "pyart-graph-gridmapdisplay-plot-latitude-slice"], [844, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[255, "pyart-graph-gridmapdisplay-plot-latitudinal-level"], [845, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[256, "pyart-graph-gridmapdisplay-plot-longitude-slice"], [846, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[257, "pyart-graph-gridmapdisplay-plot-longitudinal-level"], [847, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[258, "pyart-graph-gridmapdisplaybasemap"], [848, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[259, "pyart-graph-gridmapdisplaybasemap-generate-filename"], [849, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[260, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"], [850, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[261, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"], [851, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[262, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"], [852, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[263, "pyart-graph-gridmapdisplaybasemap-get-basemap"], [853, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[264, "pyart-graph-gridmapdisplaybasemap-plot-basemap"], [854, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[265, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"], [855, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[266, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"], [856, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[267, "pyart-graph-gridmapdisplaybasemap-plot-grid"], [857, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[268, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"], [858, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[269, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"], [859, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[270, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"], [860, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[271, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"], [861, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[272, "pyart-graph-radardisplay"], [862, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[273, "pyart-graph-radardisplay-generate-az-rhi-title"], [863, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[274, "pyart-graph-radardisplay-generate-filename"], [864, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[275, "pyart-graph-radardisplay-generate-ray-title"], [865, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[276, "pyart-graph-radardisplay-generate-title"], [866, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[277, "pyart-graph-radardisplay-generate-vpt-title"], [867, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.generate_xsection_title": [[278, "pyart-graph-radardisplay-generate-xsection-title"], [868, "pyart-graph-radardisplay-generate-xsection-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[279, "pyart-graph-radardisplay-label-xaxis-r"], [869, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[280, "pyart-graph-radardisplay-label-xaxis-rays"], [870, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[281, "pyart-graph-radardisplay-label-xaxis-time"], [871, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[282, "pyart-graph-radardisplay-label-xaxis-x"], [872, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_xaxis_xsection": [[283, "pyart-graph-radardisplay-label-xaxis-xsection"], [873, "pyart-graph-radardisplay-label-xaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[284, "pyart-graph-radardisplay-label-yaxis-field"], [874, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_xsection": [[285, "pyart-graph-radardisplay-label-yaxis-xsection"], [875, "pyart-graph-radardisplay-label-yaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[286, "pyart-graph-radardisplay-label-yaxis-y"], [876, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[287, "pyart-graph-radardisplay-label-yaxis-z"], [877, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[288, "pyart-graph-radardisplay-plot"], [878, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[289, "pyart-graph-radardisplay-plot-azimuth-to-rhi"], [879, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[290, "pyart-graph-radardisplay-plot-colorbar"], [880, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[291, "pyart-graph-radardisplay-plot-cr-raster"], [881, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[292, "pyart-graph-radardisplay-plot-cross-hair"], [882, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[293, "pyart-graph-radardisplay-plot-grid-lines"], [883, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[294, "pyart-graph-radardisplay-plot-label"], [884, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[295, "pyart-graph-radardisplay-plot-labels"], [885, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[296, "pyart-graph-radardisplay-plot-ppi"], [886, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[297, "pyart-graph-radardisplay-plot-range-ring"], [887, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[298, "pyart-graph-radardisplay-plot-range-rings"], [888, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[299, "pyart-graph-radardisplay-plot-ray"], [889, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[300, "pyart-graph-radardisplay-plot-rhi"], [890, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[301, "pyart-graph-radardisplay-plot-vpt"], [891, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.plot_xsection": [[302, "pyart-graph-radardisplay-plot-xsection"], [892, "pyart-graph-radardisplay-plot-xsection"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[303, "pyart-graph-radardisplay-set-aspect-ratio"], [893, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[304, "pyart-graph-radardisplay-set-limits"], [894, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[305, "pyart-graph-radarmapdisplay"], [895, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[306, "pyart-graph-radarmapdisplay-generate-az-rhi-title"], [896, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[307, "pyart-graph-radarmapdisplay-generate-filename"], [897, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[308, "pyart-graph-radarmapdisplay-generate-ray-title"], [898, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[309, "pyart-graph-radarmapdisplay-generate-title"], [899, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[310, "pyart-graph-radarmapdisplay-generate-vpt-title"], [900, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.generate_xsection_title": [[311, "pyart-graph-radarmapdisplay-generate-xsection-title"], [901, "pyart-graph-radarmapdisplay-generate-xsection-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[312, "pyart-graph-radarmapdisplay-label-xaxis-r"], [902, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[313, "pyart-graph-radarmapdisplay-label-xaxis-rays"], [903, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[314, "pyart-graph-radarmapdisplay-label-xaxis-time"], [904, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[315, "pyart-graph-radarmapdisplay-label-xaxis-x"], [905, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_xaxis_xsection": [[316, "pyart-graph-radarmapdisplay-label-xaxis-xsection"], [906, "pyart-graph-radarmapdisplay-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[317, "pyart-graph-radarmapdisplay-label-yaxis-field"], [907, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_xsection": [[318, "pyart-graph-radarmapdisplay-label-yaxis-xsection"], [908, "pyart-graph-radarmapdisplay-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[319, "pyart-graph-radarmapdisplay-label-yaxis-y"], [909, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[320, "pyart-graph-radarmapdisplay-label-yaxis-z"], [910, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[321, "pyart-graph-radarmapdisplay-plot"], [911, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[322, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"], [912, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[323, "pyart-graph-radarmapdisplay-plot-colorbar"], [913, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[324, "pyart-graph-radarmapdisplay-plot-cr-raster"], [914, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[325, "pyart-graph-radarmapdisplay-plot-cross-hair"], [915, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[326, "pyart-graph-radarmapdisplay-plot-grid-lines"], [916, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[327, "pyart-graph-radarmapdisplay-plot-label"], [917, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[328, "pyart-graph-radarmapdisplay-plot-labels"], [918, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[329, "pyart-graph-radarmapdisplay-plot-line-geo"], [919, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[330, "pyart-graph-radarmapdisplay-plot-line-xy"], [920, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[331, "pyart-graph-radarmapdisplay-plot-point"], [921, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[332, "pyart-graph-radarmapdisplay-plot-ppi"], [922, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[333, "pyart-graph-radarmapdisplay-plot-ppi-map"], [923, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[334, "pyart-graph-radarmapdisplay-plot-range-ring"], [924, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[335, "pyart-graph-radarmapdisplay-plot-range-rings"], [925, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[336, "pyart-graph-radarmapdisplay-plot-ray"], [926, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[337, "pyart-graph-radarmapdisplay-plot-rhi"], [927, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[338, "pyart-graph-radarmapdisplay-plot-vpt"], [928, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.plot_xsection": [[339, "pyart-graph-radarmapdisplay-plot-xsection"], [929, "pyart-graph-radarmapdisplay-plot-xsection"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[340, "pyart-graph-radarmapdisplay-set-aspect-ratio"], [930, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[341, "pyart-graph-radarmapdisplay-set-limits"], [931, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[342, "pyart-graph-radarmapdisplaybasemap"], [932, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[343, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"], [933, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[344, "pyart-graph-radarmapdisplaybasemap-generate-filename"], [934, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[345, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"], [935, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[346, "pyart-graph-radarmapdisplaybasemap-generate-title"], [936, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[347, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"], [937, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title": [[348, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"], [938, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[349, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"], [939, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[350, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"], [940, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[351, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"], [941, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[352, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"], [942, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection": [[353, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"], [943, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[354, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"], [944, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection": [[355, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"], [945, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[356, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"], [946, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[357, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"], [947, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[358, "pyart-graph-radarmapdisplaybasemap-plot"], [948, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[359, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"], [949, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[360, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"], [950, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[361, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"], [951, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[362, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"], [952, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[363, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"], [953, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[364, "pyart-graph-radarmapdisplaybasemap-plot-label"], [954, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[365, "pyart-graph-radarmapdisplaybasemap-plot-labels"], [955, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[366, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"], [956, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[367, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"], [957, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[368, "pyart-graph-radarmapdisplaybasemap-plot-point"], [958, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[369, "pyart-graph-radarmapdisplaybasemap-plot-ppi"], [959, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[370, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"], [960, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[371, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"], [961, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[372, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"], [962, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[373, "pyart-graph-radarmapdisplaybasemap-plot-ray"], [963, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[374, "pyart-graph-radarmapdisplaybasemap-plot-rhi"], [964, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[375, "pyart-graph-radarmapdisplaybasemap-plot-vpt"], [965, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.plot_xsection": [[376, "pyart-graph-radarmapdisplaybasemap-plot-xsection"], [966, "pyart-graph-radarmapdisplaybasemap-plot-xsection"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[377, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"], [967, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[378, "pyart-graph-radarmapdisplaybasemap-set-limits"], [968, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.io.make_time_unit_str": [[379, "pyart-io-make-time-unit-str"], [971, "pyart-io-make-time-unit-str"]], "pyart.io.prepare_for_read": [[380, "pyart-io-prepare-for-read"], [972, "pyart-io-prepare-for-read"]], "pyart.io.read": [[381, "pyart-io-read"], [973, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[382, "pyart-io-read-arm-sonde"], [974, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[383, "pyart-io-read-arm-sonde-vap"], [975, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[384, "pyart-io-read-cfradial"], [976, "pyart-io-read-cfradial"]], "pyart.io.read_cfradial2": [[385, "pyart-io-read-cfradial2"], [977, "pyart-io-read-cfradial2"]], "pyart.io.read_chl": [[386, "pyart-io-read-chl"], [978, "pyart-io-read-chl"]], "pyart.io.read_grid": [[387, "pyart-io-read-grid"], [979, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[388, "pyart-io-read-grid-mdv"], [980, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[389, "pyart-io-read-mdv"], [981, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[390, "pyart-io-read-nexrad-archive"], [982, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[391, "pyart-io-read-nexrad-cdm"], [983, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[392, "pyart-io-read-nexrad-level3"], [984, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[393, "pyart-io-read-rsl"], [985, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[394, "pyart-io-read-sigmet"], [986, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[395, "pyart-io-read-uf"], [987, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[396, "pyart-io-write-cfradial"], [988, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[397, "pyart-io-write-grid"], [989, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[398, "pyart-io-write-grid-geotiff"], [990, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[399, "pyart-io-write-grid-mdv"], [991, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[400, "pyart-io-write-uf"], [992, "pyart-io-write-uf"]], "pyart.lazydict.LazyLoadDict": [[401, "pyart-lazydict-lazyloaddict"], [994, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.__class_getitem__": [[402, "pyart-lazydict-lazyloaddict-class-getitem"]], "pyart.lazydict.LazyLoadDict.__contains__": [[403, "pyart-lazydict-lazyloaddict-contains"]], "pyart.lazydict.LazyLoadDict.__delattr__": [[404, "pyart-lazydict-lazyloaddict-delattr"]], "pyart.lazydict.LazyLoadDict.__delitem__": [[405, "pyart-lazydict-lazyloaddict-delitem"]], "pyart.lazydict.LazyLoadDict.__dir__": [[406, "pyart-lazydict-lazyloaddict-dir"]], "pyart.lazydict.LazyLoadDict.__eq__": [[407, "pyart-lazydict-lazyloaddict-eq"]], "pyart.lazydict.LazyLoadDict.__format__": [[408, "pyart-lazydict-lazyloaddict-format"]], "pyart.lazydict.LazyLoadDict.__ge__": [[409, "pyart-lazydict-lazyloaddict-ge"]], "pyart.lazydict.LazyLoadDict.__getattribute__": [[410, "pyart-lazydict-lazyloaddict-getattribute"]], "pyart.lazydict.LazyLoadDict.__getitem__": [[411, "pyart-lazydict-lazyloaddict-getitem"]], "pyart.lazydict.LazyLoadDict.__getstate__": [[412, "pyart-lazydict-lazyloaddict-getstate"]], "pyart.lazydict.LazyLoadDict.__gt__": [[413, "pyart-lazydict-lazyloaddict-gt"]], "pyart.lazydict.LazyLoadDict.__init__": [[414, "pyart-lazydict-lazyloaddict-init"]], "pyart.lazydict.LazyLoadDict.__init_subclass__": [[415, "pyart-lazydict-lazyloaddict-init-subclass"]], "pyart.lazydict.LazyLoadDict.__iter__": [[416, "pyart-lazydict-lazyloaddict-iter"]], "pyart.lazydict.LazyLoadDict.__le__": [[417, "pyart-lazydict-lazyloaddict-le"]], "pyart.lazydict.LazyLoadDict.__len__": [[418, "pyart-lazydict-lazyloaddict-len"]], "pyart.lazydict.LazyLoadDict.__lt__": [[419, "pyart-lazydict-lazyloaddict-lt"]], "pyart.lazydict.LazyLoadDict.__ne__": [[420, "pyart-lazydict-lazyloaddict-ne"]], "pyart.lazydict.LazyLoadDict.__new__": [[421, "pyart-lazydict-lazyloaddict-new"]], "pyart.lazydict.LazyLoadDict.__reduce__": [[422, "pyart-lazydict-lazyloaddict-reduce"]], "pyart.lazydict.LazyLoadDict.__reduce_ex__": [[423, "pyart-lazydict-lazyloaddict-reduce-ex"]], "pyart.lazydict.LazyLoadDict.__repr__": [[424, "pyart-lazydict-lazyloaddict-repr"]], "pyart.lazydict.LazyLoadDict.__setattr__": [[425, "pyart-lazydict-lazyloaddict-setattr"]], "pyart.lazydict.LazyLoadDict.__setitem__": [[426, "pyart-lazydict-lazyloaddict-setitem"]], "pyart.lazydict.LazyLoadDict.__sizeof__": [[427, "pyart-lazydict-lazyloaddict-sizeof"]], "pyart.lazydict.LazyLoadDict.__str__": [[428, "pyart-lazydict-lazyloaddict-str"]], "pyart.lazydict.LazyLoadDict.__subclasshook__": [[429, "pyart-lazydict-lazyloaddict-subclasshook"]], "pyart.lazydict.LazyLoadDict.clear": [[430, "pyart-lazydict-lazyloaddict-clear"], [995, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[431, "pyart-lazydict-lazyloaddict-copy"], [996, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[432, "pyart-lazydict-lazyloaddict-get"], [997, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[433, "pyart-lazydict-lazyloaddict-has-key"], [998, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[434, "pyart-lazydict-lazyloaddict-items"], [999, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[435, "pyart-lazydict-lazyloaddict-keys"], [1000, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[436, "pyart-lazydict-lazyloaddict-pop"], [1001, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[437, "pyart-lazydict-lazyloaddict-popitem"], [1002, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[438, "pyart-lazydict-lazyloaddict-set-lazy"], [1003, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[439, "pyart-lazydict-lazyloaddict-setdefault"], [1004, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[440, "pyart-lazydict-lazyloaddict-update"], [1005, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[441, "pyart-lazydict-lazyloaddict-values"], [1006, "pyart-lazydict-lazyloaddict-values"]], "pyart.map.example_roi_func_constant": [[442, "pyart-map-example-roi-func-constant"], [1022, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[443, "pyart-map-example-roi-func-dist"], [1023, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[444, "pyart-map-example-roi-func-dist-beam"], [1024, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[445, "pyart-map-grid-from-radars"], [1026, "pyart-map-grid-from-radars"]], "pyart.map.map_gates_to_grid": [[446, "pyart-map-map-gates-to-grid"], [1027, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[447, "pyart-map-map-to-grid"], [1028, "pyart-map-map-to-grid"]], "pyart.retrieve._destandardize": [[448, "pyart-retrieve-destandardize"]], "pyart.retrieve._get_res_vol_sides": [[449, "pyart-retrieve-get-res-vol-sides"]], "pyart.retrieve.atmospheric_gas_att": [[450, "pyart-retrieve-atmospheric-gas-att"], [1031, "pyart-retrieve-atmospheric-gas-att"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[451, "pyart-retrieve-calculate-snr-from-reflectivity"], [1032, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[452, "pyart-retrieve-calculate-velocity-texture"], [1033, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.compute_Doppler_velocity": [[453, "pyart-retrieve-compute-doppler-velocity"], [1035, "pyart-retrieve-compute-doppler-velocity"]], "pyart.retrieve.compute_Doppler_velocity_iq": [[454, "pyart-retrieve-compute-doppler-velocity-iq"], [1036, "pyart-retrieve-compute-doppler-velocity-iq"]], "pyart.retrieve.compute_Doppler_width": [[455, "pyart-retrieve-compute-doppler-width"], [1037, "pyart-retrieve-compute-doppler-width"]], "pyart.retrieve.compute_Doppler_width_iq": [[456, "pyart-retrieve-compute-doppler-width-iq"], [1038, "pyart-retrieve-compute-doppler-width-iq"]], "pyart.retrieve.compute_apparent_profile": [[457, "pyart-retrieve-compute-apparent-profile"], [1039, "pyart-retrieve-compute-apparent-profile"]], "pyart.retrieve.compute_bird_density": [[458, "pyart-retrieve-compute-bird-density"], [1040, "pyart-retrieve-compute-bird-density"]], "pyart.retrieve.compute_ccor": [[459, "pyart-retrieve-compute-ccor"], [1041, "pyart-retrieve-compute-ccor"]], "pyart.retrieve.compute_cdr": [[460, "pyart-retrieve-compute-cdr"], [1042, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_centroids": [[461, "pyart-retrieve-compute-centroids"], [1043, "pyart-retrieve-compute-centroids"]], "pyart.retrieve.compute_differential_phase": [[462, "pyart-retrieve-compute-differential-phase"], [1044, "pyart-retrieve-compute-differential-phase"]], "pyart.retrieve.compute_differential_phase_iq": [[463, "pyart-retrieve-compute-differential-phase-iq"], [1045, "pyart-retrieve-compute-differential-phase-iq"]], "pyart.retrieve.compute_differential_reflectivity": [[464, "pyart-retrieve-compute-differential-reflectivity"], [1046, "pyart-retrieve-compute-differential-reflectivity"]], "pyart.retrieve.compute_differential_reflectivity_iq": [[465, "pyart-retrieve-compute-differential-reflectivity-iq"], [1047, "pyart-retrieve-compute-differential-reflectivity-iq"]], "pyart.retrieve.compute_evp": [[466, "pyart-retrieve-compute-evp"], [1048, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_iq": [[467, "pyart-retrieve-compute-iq"], [1049, "pyart-retrieve-compute-iq"]], "pyart.retrieve.compute_l": [[468, "pyart-retrieve-compute-l"], [1050, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_mean_phase_iq": [[469, "pyart-retrieve-compute-mean-phase-iq"], [1051, "pyart-retrieve-compute-mean-phase-iq"]], "pyart.retrieve.compute_noise_power": [[470, "pyart-retrieve-compute-noise-power"], [1052, "pyart-retrieve-compute-noise-power"]], "pyart.retrieve.compute_noisedBZ": [[471, "pyart-retrieve-compute-noisedbz"], [1053, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_pol_variables": [[472, "pyart-retrieve-compute-pol-variables"], [1054, "pyart-retrieve-compute-pol-variables"]], "pyart.retrieve.compute_pol_variables_iq": [[473, "pyart-retrieve-compute-pol-variables-iq"], [1055, "pyart-retrieve-compute-pol-variables-iq"]], "pyart.retrieve.compute_qvp": [[474, "pyart-retrieve-compute-qvp"], [1056, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_radial_noise_hs": [[475, "pyart-retrieve-compute-radial-noise-hs"], [1057, "pyart-retrieve-compute-radial-noise-hs"]], "pyart.retrieve.compute_radial_noise_ivic": [[476, "pyart-retrieve-compute-radial-noise-ivic"], [1058, "pyart-retrieve-compute-radial-noise-ivic"]], "pyart.retrieve.compute_rcs": [[477, "pyart-retrieve-compute-rcs"], [1059, "pyart-retrieve-compute-rcs"]], "pyart.retrieve.compute_rcs_from_pr": [[478, "pyart-retrieve-compute-rcs-from-pr"], [1060, "pyart-retrieve-compute-rcs-from-pr"]], "pyart.retrieve.compute_reflectivity": [[479, "pyart-retrieve-compute-reflectivity"], [1061, "pyart-retrieve-compute-reflectivity"]], "pyart.retrieve.compute_reflectivity_iq": [[480, "pyart-retrieve-compute-reflectivity-iq"], [1062, "pyart-retrieve-compute-reflectivity-iq"]], "pyart.retrieve.compute_rhohv": [[481, "pyart-retrieve-compute-rhohv"], [1063, "pyart-retrieve-compute-rhohv"]], "pyart.retrieve.compute_rhohv_iq": [[482, "pyart-retrieve-compute-rhohv-iq"], [1064, "pyart-retrieve-compute-rhohv-iq"]], "pyart.retrieve.compute_rqvp": [[483, "pyart-retrieve-compute-rqvp"], [1065, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_signal_power": [[484, "pyart-retrieve-compute-signal-power"], [1066, "pyart-retrieve-compute-signal-power"]], "pyart.retrieve.compute_snr": [[485, "pyart-retrieve-compute-snr"], [1067, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_spectra": [[486, "pyart-retrieve-compute-spectra"], [1068, "pyart-retrieve-compute-spectra"]], "pyart.retrieve.compute_spectral_differential_phase": [[487, "pyart-retrieve-compute-spectral-differential-phase"], [1069, "pyart-retrieve-compute-spectral-differential-phase"]], "pyart.retrieve.compute_spectral_differential_reflectivity": [[488, "pyart-retrieve-compute-spectral-differential-reflectivity"], [1070, "pyart-retrieve-compute-spectral-differential-reflectivity"]], "pyart.retrieve.compute_spectral_noise": [[489, "pyart-retrieve-compute-spectral-noise"], [1071, "pyart-retrieve-compute-spectral-noise"]], "pyart.retrieve.compute_spectral_phase": [[490, "pyart-retrieve-compute-spectral-phase"], [1072, "pyart-retrieve-compute-spectral-phase"]], "pyart.retrieve.compute_spectral_power": [[491, "pyart-retrieve-compute-spectral-power"], [1073, "pyart-retrieve-compute-spectral-power"]], "pyart.retrieve.compute_spectral_reflectivity": [[492, "pyart-retrieve-compute-spectral-reflectivity"], [1074, "pyart-retrieve-compute-spectral-reflectivity"]], "pyart.retrieve.compute_spectral_rhohv": [[493, "pyart-retrieve-compute-spectral-rhohv"], [1075, "pyart-retrieve-compute-spectral-rhohv"]], "pyart.retrieve.compute_st1_iq": [[494, "pyart-retrieve-compute-st1-iq"], [1076, "pyart-retrieve-compute-st1-iq"]], "pyart.retrieve.compute_st2_iq": [[495, "pyart-retrieve-compute-st2-iq"], [1077, "pyart-retrieve-compute-st2-iq"]], "pyart.retrieve.compute_svp": [[496, "pyart-retrieve-compute-svp"], [1078, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[497, "pyart-retrieve-compute-ts-along-coord"], [1079, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vol_refl": [[498, "pyart-retrieve-compute-vol-refl"], [1080, "pyart-retrieve-compute-vol-refl"]], "pyart.retrieve.compute_vp": [[499, "pyart-retrieve-compute-vp"], [1081, "pyart-retrieve-compute-vp"]], "pyart.retrieve.compute_wbn_iq": [[500, "pyart-retrieve-compute-wbn-iq"], [1082, "pyart-retrieve-compute-wbn-iq"]], "pyart.retrieve.conv_strat_yuter": [[501, "pyart-retrieve-conv-strat-yuter"], [1083, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.data_for_centroids": [[502, "pyart-retrieve-data-for-centroids"], [1084, "pyart-retrieve-data-for-centroids"]], "pyart.retrieve.dealias_spectra": [[503, "pyart-retrieve-dealias-spectra"], [1085, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.detect_ml": [[504, "pyart-retrieve-detect-ml"], [1086, "pyart-retrieve-detect-ml"]], "Paremeters": [[504, "paremeters"], [1086, "paremeters"]], "pyart.retrieve.determine_medoids": [[505, "pyart-retrieve-determine-medoids"], [1087, "pyart-retrieve-determine-medoids"]], "pyart.retrieve.est_rain_rate_a": [[506, "pyart-retrieve-est-rain-rate-a"], [1088, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[507, "pyart-retrieve-est-rain-rate-hydro"], [1089, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[508, "pyart-retrieve-est-rain-rate-kdp"], [1090, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[509, "pyart-retrieve-est-rain-rate-z"], [1091, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[510, "pyart-retrieve-est-rain-rate-za"], [1092, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[511, "pyart-retrieve-est-rain-rate-zkdp"], [1093, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[512, "pyart-retrieve-est-rain-rate-zpoly"], [1094, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.est_vertical_windshear": [[513, "pyart-retrieve-est-vertical-windshear"], [1095, "pyart-retrieve-est-vertical-windshear"]], "pyart.retrieve.est_vertical_windshear_lidar": [[514, "pyart-retrieve-est-vertical-windshear-lidar"], [1096, "pyart-retrieve-est-vertical-windshear-lidar"]], "pyart.retrieve.est_wind_profile": [[515, "pyart-retrieve-est-wind-profile"], [1097, "pyart-retrieve-est-wind-profile"]], "pyart.retrieve.est_wind_vel": [[516, "pyart-retrieve-est-wind-vel"], [1098, "pyart-retrieve-est-wind-vel"]], "pyart.retrieve.fetch_radar_time_profile": [[517, "pyart-retrieve-fetch-radar-time-profile"], [1099, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.gecsx": [[518, "pyart-retrieve-gecsx"], [1100, "pyart-retrieve-gecsx"]], "pyart.retrieve.get_coeff_attg": [[519, "pyart-retrieve-get-coeff-attg"], [1101, "pyart-retrieve-get-coeff-attg"]], "pyart.retrieve.get_freq_band": [[520, "pyart-retrieve-get-freq-band"], [1102, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.get_iso0_val": [[521, "pyart-retrieve-get-iso0-val"], [1103, "pyart-retrieve-get-iso0-val"]], "pyart.retrieve.get_ml_rng_limits": [[522, "pyart-retrieve-get-ml-rng-limits"], [1104, "pyart-retrieve-get-ml-rng-limits"]], "pyart.retrieve.grid_displacement_pc": [[523, "pyart-retrieve-grid-displacement-pc"], [1105, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[524, "pyart-retrieve-grid-shift"], [1106, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[525, "pyart-retrieve-hydroclass-semisupervised"], [1107, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_leastsquare_double_window": [[526, "pyart-retrieve-kdp-leastsquare-double-window"], [1108, "pyart-retrieve-kdp-leastsquare-double-window"]], "pyart.retrieve.kdp_leastsquare_single_window": [[527, "pyart-retrieve-kdp-leastsquare-single-window"], [1109, "pyart-retrieve-kdp-leastsquare-single-window"]], "pyart.retrieve.kdp_maesaka": [[528, "pyart-retrieve-kdp-maesaka"], [1110, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[529, "pyart-retrieve-kdp-schneebeli"], [1111, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[530, "pyart-retrieve-kdp-vulpiani"], [1112, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[531, "pyart-retrieve-map-profile-to-gates"], [1113, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.melting_layer_giangrande": [[532, "pyart-retrieve-melting-layer-giangrande"], [1114, "pyart-retrieve-melting-layer-giangrande"]], "pyart.retrieve.melting_layer_hydroclass": [[533, "pyart-retrieve-melting-layer-hydroclass"], [1115, "pyart-retrieve-melting-layer-hydroclass"]], "pyart.retrieve.melting_layer_mf": [[534, "pyart-retrieve-melting-layer-mf"], [1116, "pyart-retrieve-melting-layer-mf"]], "pyart.retrieve.quasi_vertical_profile": [[535, "pyart-retrieve-quasi-vertical-profile"], [1117, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.select_samples": [[536, "pyart-retrieve-select-samples"], [1118, "pyart-retrieve-select-samples"]], "pyart.retrieve.steiner_conv_strat": [[537, "pyart-retrieve-steiner-conv-strat"], [1119, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.synthetic_obs_distribution": [[538, "pyart-retrieve-synthetic-obs-distribution"], [1120, "pyart-retrieve-synthetic-obs-distribution"]], "pyart.retrieve.texture_of_complex_phase": [[539, "pyart-retrieve-texture-of-complex-phase"], [1121, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[540, "pyart-retrieve-vad-browning"], [1122, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[541, "pyart-retrieve-vad-michelson"], [1123, "pyart-retrieve-vad-michelson"]], "pyart._debug_info": [[542, "pyart-debug-info"]], "pyart.aux_io": [[543, "pyart-aux-io"]], "Auxiliary input and output (pyart.aux_io)": [[543, "auxiliary-input-and-output-pyart-aux-io"]], "Reading radar data": [[543, "reading-radar-data"], [970, "reading-radar-data"]], "Writing radar data": [[543, "writing-radar-data"], [970, "writing-radar-data"]], "pyart.aux_io.convert_data": [[544, "pyart-aux-io-convert-data"]], "pyart.aux_io.get_library": [[546, "pyart-aux-io-get-library"]], "pyart.aux_io.read_edge_netcdf": [[556, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_file_c": [[557, "pyart-aux-io-read-file-c"]], "pyart.aux_io.read_file_py": [[558, "pyart-aux-io-read-file-py"]], "pyart.aux_io.read_product_c": [[572, "pyart-aux-io-read-product-c"]], "pyart.aux_io.read_product_py": [[573, "pyart-aux-io-read-product-py"]], "pyart.aux_io.read_psr_cpi_header": [[574, "pyart-aux-io-read-psr-cpi-header"]], "pyart.aux_io.read_psr_header": [[575, "pyart-aux-io-read-psr-header"]], "pyart.aux_io.read_psr_spectra": [[576, "pyart-aux-io-read-psr-spectra"]], "pyart.aux_io.read_sinarame_h5": [[581, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[587, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[589, "pyart-bridge"]], "Bridging to other toolkits (pyart.bridge)": [[589, "bridging-to-other-toolkits-pyart-bridge"]], "Phase functions": [[589, "phase-functions"]], "pyart.config": [[591, "pyart-config"], [591, "module-pyart.config"]], "pyart.core": [[603, "pyart-core"]], "Core (pyart.core)": [[603, "core-pyart-core"]], "Core classes": [[603, "core-classes"]], "Coordinate transformations": [[603, "coordinate-transformations"]], "pyart.correct": [[685, "pyart-correct"]], "Radar Corrections (pyart.correct)": [[685, "radar-corrections-pyart-correct"]], "Velocity unfolding": [[685, "velocity-unfolding"]], "Other corrections": [[685, "other-corrections"]], "Helper functions": [[685, "helper-functions"]], "pyart.correct.GateFilter": [[686, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[687, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[688, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[689, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[690, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[691, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[692, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[693, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[694, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[695, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[696, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[697, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[698, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[699, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[700, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[701, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[702, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[703, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[704, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[705, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[706, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[707, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[708, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[709, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[710, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[711, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[712, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[713, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.gauss_fit": [[734, "pyart-correct-gauss-fit"]], "pyart.correct.moment_based_gate_filter": [[739, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.retrieval_result": [[743, "pyart-correct-retrieval-result"]], "pyart.exceptions": [[756, "pyart-exceptions"], [756, "module-pyart.exceptions"]], "pyart.filters": [[757, "pyart-filters"]], "Filters (pyart.filters)": [[757, "filters-pyart-filters"]], "Filtering radar data": [[757, "filtering-radar-data"]], "pyart.graph": [[794, "pyart-graph"]], "Graphing (pyart.graph)": [[794, "graphing-pyart-graph"]], "Plotting radar data": [[794, "plotting-radar-data"]], "Plotting grid data": [[794, "plotting-grid-data"]], "pyart.graph.plot_convstrat_scheme": [[969, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[970, "pyart-io"]], "Input and output (pyart.io)": [[970, "input-and-output-pyart-io"]], "Reading grid data": [[970, "reading-grid-data"]], "Writing grid data": [[970, "writing-grid-data"]], "Reading Sonde data": [[970, "reading-sonde-data"]], "Special use": [[970, "special-use"]], "pyart.lazydict": [[993, "pyart-lazydict"], [993, "module-pyart.lazydict"]], "pyart.lazydict.MutableMapping": [[1007, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[1008, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[1009, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[1010, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[1011, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[1012, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[1013, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[1014, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[1015, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[1016, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[1017, "pyart-map"]], "Mapping (pyart.map)": [[1017, "mapping-pyart-map"]], "Mapping to grid": [[1017, "mapping-to-grid"]], "Examples of ROI (region of interest)": [[1017, "examples-of-roi-region-of-interest"]], "pyart.map.GateMapper": [[1018, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[1019, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[1020, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[1021, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.get_earth_radius": [[1025, "pyart-map-get-earth-radius"]], "pyart.map.polar_to_cartesian": [[1029, "pyart-map-polar-to-cartesian"]], "pyart.retrieve": [[1030, "pyart-retrieve"]], "Radar Retrievals (pyart.retrieve)": [[1030, "radar-retrievals-pyart-retrieve"]], "Radar retrievals": [[1030, "radar-retrievals"]], "pyart.retrieve.composite_reflectivity": [[1034, "pyart-retrieve-composite-reflectivity"]], "pyart.testing": [[1124, "pyart-testing"]], "pyart.testing.Grid": [[1125, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[1126, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[1127, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[1128, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[1129, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[1130, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[1131, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[1132, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[1133, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[1134, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[1135, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[1136, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[1137, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[1138, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[1139, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[1140, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[1141, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[1142, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[1143, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[1144, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[1145, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[1146, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[1147, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[1148, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[1149, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[1150, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[1151, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[1152, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[1153, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[1154, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[1155, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[1156, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[1157, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[1158, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[1159, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[1160, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[1161, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[1162, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[1163, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[1164, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[1165, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[1166, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.add_field": [[1167, "pyart-testing-radarspectra-add-field"]], "pyart.testing.RadarSpectra.add_field_like": [[1168, "pyart-testing-radarspectra-add-field-like"]], "pyart.testing.RadarSpectra.add_filter": [[1169, "pyart-testing-radarspectra-add-filter"]], "pyart.testing.RadarSpectra.check_field_exists": [[1170, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.extract_sweeps": [[1171, "pyart-testing-radarspectra-extract-sweeps"]], "pyart.testing.RadarSpectra.get_azimuth": [[1172, "pyart-testing-radarspectra-get-azimuth"]], "pyart.testing.RadarSpectra.get_elevation": [[1173, "pyart-testing-radarspectra-get-elevation"]], "pyart.testing.RadarSpectra.get_end": [[1174, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_field": [[1175, "pyart-testing-radarspectra-get-field"]], "pyart.testing.RadarSpectra.get_gate_area": [[1176, "pyart-testing-radarspectra-get-gate-area"]], "pyart.testing.RadarSpectra.get_gate_lat_lon_alt": [[1177, "pyart-testing-radarspectra-get-gate-lat-lon-alt"]], "pyart.testing.RadarSpectra.get_gate_x_y_z": [[1178, "pyart-testing-radarspectra-get-gate-x-y-z"]], "pyart.testing.RadarSpectra.get_nyquist_vel": [[1179, "pyart-testing-radarspectra-get-nyquist-vel"]], "pyart.testing.RadarSpectra.get_slice": [[1180, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[1181, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[1182, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.info": [[1183, "pyart-testing-radarspectra-info"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[1184, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[1185, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[1186, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[1187, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[1188, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[1189, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[1190, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[1191, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[1192, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[1193, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[1194, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.get_metadata": [[1195, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[1196, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[1197, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[1198, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[1199, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[1200, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_normal_storm": [[1201, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[1202, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[1203, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[1204, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[1205, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[1206, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[1207, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[1208, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[1209, "pyart-util"]], "pyart.util.angular_mean": [[1210, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[1211, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[1212, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[1213, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[1214, "pyart-util-angular-texture-2d"]], "pyart.util.colocated_gates": [[1215, "pyart-util-colocated-gates"]], "pyart.util.colocated_gates2": [[1216, "pyart-util-colocated-gates2"]], "pyart.util.compute_azimuthal_average": [[1217, "pyart-util-compute-azimuthal-average"]], "pyart.util.compute_corr": [[1218, "pyart-util-compute-corr"]], "pyart.util.compute_directional_stats": [[1219, "pyart-util-compute-directional-stats"]], "pyart.util.compute_mse": [[1220, "pyart-util-compute-mse"]], "pyart.util.compute_nse": [[1221, "pyart-util-compute-nse"]], "pyart.util.cross_section_ppi": [[1222, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[1223, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[1224, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[1225, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[1226, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[1227, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[1228, "pyart-util-datetimes-from-radar"]], "pyart.util.estimate_noise_hs74": [[1229, "pyart-util-estimate-noise-hs74"]], "pyart.util.estimate_noise_ivic13": [[1230, "pyart-util-estimate-noise-ivic13"]], "pyart.util.find_neighbour_gates": [[1231, "pyart-util-find-neighbour-gates"]], "pyart.util.for_azimuth": [[1232, "pyart-util-for-azimuth"]], "Assumptions": [[1232, "assumptions"], [1258, "assumptions"]], "pyart.util.get_column_rays": [[1233, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[1234, "pyart-util-get-field-location"]], "pyart.util.get_ivic_flat_reg_var_max": [[1235, "pyart-util-get-ivic-flat-reg-var-max"]], "pyart.util.get_ivic_pct": [[1236, "pyart-util-get-ivic-pct"]], "pyart.util.get_ivic_snr_thr": [[1237, "pyart-util-get-ivic-snr-thr"]], "pyart.util.get_target_elevations": [[1238, "pyart-util-get-target-elevations"]], "pyart.util.grid_texture_2d": [[1239, "pyart-util-grid-texture-2d"]], "pyart.util.image_mute_radar": [[1240, "pyart-util-image-mute-radar"]], "pyart.util.interpol_spectra": [[1241, "pyart-util-interpol-spectra"]], "pyart.util.intersection": [[1242, "pyart-util-intersection"]], "pyart.util.interval_mean": [[1243, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[1244, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[1245, "pyart-util-is-vpt"]], "pyart.util.ivic_flat_reg_var_max_table": [[1246, "pyart-util-ivic-flat-reg-var-max-table"]], "pyart.util.ivic_flat_reg_wind_len_table": [[1247, "pyart-util-ivic-flat-reg-wind-len-table"]], "pyart.util.ivic_pct_table": [[1248, "pyart-util-ivic-pct-table"]], "pyart.util.ivic_snr_thr_table": [[1249, "pyart-util-ivic-snr-thr-table"]], "pyart.util.join_radar": [[1250, "pyart-util-join-radar"]], "pyart.util.join_spectra": [[1251, "pyart-util-join-spectra"]], "pyart.util.ma_broadcast_to": [[1252, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[1253, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[1254, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.radar_from_spectra": [[1255, "pyart-util-radar-from-spectra"]], "pyart.util.rolling_window": [[1256, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[1257, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[1258, "pyart-util-sphere-distance"]], "Parameter": [[1258, "parameter"]], "pyart.util.subset_radar": [[1259, "pyart-util-subset-radar"]], "pyart.util.subset_radar_spectra": [[1260, "pyart-util-subset-radar-spectra"]], "pyart.util.texture": [[1261, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[1262, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[1263, "pyart-util-to-vpt"]], "API Manual": [[1264, "api-manual"]], "Changelog": [[1265, "changelog"]], "v1.8.4": [[1265, "v1-8-4"]], "v1.8.3": [[1265, "v1-8-3"]], "v1.8.2": [[1265, "v1-8-2"]], "v1.8.1": [[1265, "v1-8-1"]], "v1.8": [[1265, "v1-8"]], "v1.7.1": [[1265, "v1-7-1"]], "v1.7": [[1265, "v1-7"]], "v1.6.4": [[1265, "v1-6-4"]], "New additions": [[1265, "new-additions"]], "v1.6.3": [[1265, "v1-6-3"]], "v1.6.2": [[1265, "v1-6-2"]], "v1.6.1": [[1265, "v1-6-1"]], "v1.6": [[1265, "v1-6"]], "Moment correction examples": [[1266, "moment-correction-examples"], [1270, "moment-correction-examples"]], "Correct reflectivity attenuation": [[1267, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[1268, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[1269, "computation-times"], [1274, "computation-times"], [1279, "computation-times"], [1298, "computation-times"], [1305, "computation-times"], [1306, "computation-times"], [1318, "computation-times"]], "Example Gallery": [[1270, "example-gallery"]], "Input/Output Examples": [[1270, "input-output-examples"], [1271, "input-output-examples"]], "Mapping examples": [[1270, "mapping-examples"], [1275, "mapping-examples"]], "Plotting examples": [[1270, "plotting-examples"], [1280, "plotting-examples"]], "Retrieval Examples": [[1270, "retrieval-examples"], [1299, "retrieval-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[1272, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[1272, "read-nexrad-level-2-data"]], "Configure our Filepath for NEXRAD Level 2 Data": [[1272, "configure-our-filepath-for-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[1272, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[1273, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[1273, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[1276, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[1277, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[1278, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[1281, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[1282, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[1283, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[1284, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[1285, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[1286, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[1287, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[1288, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[1289, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[1290, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [1291, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[1292, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [1293, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[1294, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[1295, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[1296, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[1297, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[1300, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[1301, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[1302, "convective-stratiform-classification"]], "How the algorithm works": [[1302, "how-the-algorithm-works"]], "Examples": [[1302, "examples"]], "Summary of recommendations and best practices": [[1302, "summary-of-recommendations-and-best-practices"]], "References": [[1302, "references"]], "Calculate and Plot hydrometeor classification": [[1303, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[1304, "calculate-and-plot-vad-profile"]], "About the MeteoSwiss fork of Py-ART": [[1307, "about-the-meteoswiss-fork-of-py-art"]], "Citing Py-ART": [[1307, "citing-py-art"]], "What can Py-ART do?": [[1307, "what-can-py-art-do"]], "Short Courses": [[1307, "short-courses"]], "Install": [[1307, "install"], [1320, "install"]], "Dependencies": [[1307, "dependencies"]], "Optional Dependences": [[1307, "optional-dependences"]], "Getting help": [[1307, "getting-help"]], "Contributing": [[1307, "contributing"]], "Notebook Gallery": [[1308, "notebook-gallery"]], "Notebooks": [[1308, null]], "Creating a basic ingest of a NetCDF file": [[1309, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[1310, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[1311, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[1313, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[1314, "masking-data-with-py-art-gatefilters"]], "Processing of Doppler wind data from a Swiss volumetric scan": [[1315, "processing-of-doppler-wind-data-from-a-swiss-volumetric-scan"]], "Reading and dealiasing the data": [[1315, "reading-and-dealiasing-the-data"]], "CAPPI plots": [[1315, "cappi-plots"]], "Velocity azimuth display (VAD)": [[1315, "velocity-azimuth-display-vad"]], "Filtering and retrievals on raw Swiss C-band data": [[1316, "filtering-and-retrievals-on-raw-swiss-c-band-data"]], "Reading the data": [[1316, "reading-the-data"]], "Ground-clutter and noise removal": [[1316, "ground-clutter-and-noise-removal"]], "Attenuation correction": [[1316, "attenuation-correction"]], "KDP estimation": [[1316, "kdp-estimation"]], "Hydrometeor classification": [[1316, "hydrometeor-classification"]], "QPE": [[1316, "qpe"]], "The Py-ART Radar object and indexing": [[1317, "the-py-art-radar-object-and-indexing"]], "Installation": [[1319, "installation"]], "Required Dependencies": [[1319, "required-dependencies"]], "Optional Dependencies": [[1319, "optional-dependencies"]], "Obtaining the latest source": [[1319, "obtaining-the-latest-source"]], "Installing from Source": [[1319, "installing-from-source"]], "Frequently asked questions": [[1319, "frequently-asked-questions"]], "Contributor\u2019s Guide": [[1320, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[1320, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[1320, "important-links"]], "Citing": [[1320, "citing"]], "Resources": [[1320, "resources"]], "Code Style": [[1320, "code-style"]], "Python File Setup": [[1320, "python-file-setup"]], "Testing": [[1320, "testing"]], "GitHub": [[1320, "github"]], "Blog Posts": [[1320, "blog-posts"]], "User Guide": [[1321, "user-guide"]], "Setting up an Environment": [[1322, "setting-up-an-environment"]], "Anaconda": [[1322, "anaconda"]], "Setting a Channel": [[1322, "setting-a-channel"]], "Creating an Environment": [[1322, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[1322, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[1322, "more-information"]]}, "indexentries": {"extract_sweeps_skyecho() (in module pyart.aux_io)": [[0, "pyart.aux_io.extract_sweeps_skyecho"], [545, "pyart.aux_io.extract_sweeps_skyecho"]], "get_sweep_time_coverage() (in module pyart.aux_io)": [[1, "pyart.aux_io.get_sweep_time_coverage"], [547, "pyart.aux_io.get_sweep_time_coverage"]], "read_bin() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_bin"], [548, "pyart.aux_io.read_bin"]], "read_bin_mf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_bin_mf"], [549, "pyart.aux_io.read_bin_mf"]], "read_cartesian_metranet() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_cartesian_metranet"], [550, "pyart.aux_io.read_cartesian_metranet"]], "read_cf1() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_cf1"], [551, "pyart.aux_io.read_cf1"]], "read_cf1_cartesian() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_cf1_cartesian"], [552, "pyart.aux_io.read_cf1_cartesian"]], "read_cf1_cartesian_mf() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_cf1_cartesian_mf"], [553, "pyart.aux_io.read_cf1_cartesian_mf"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_d3r_gcpex_nc"], [554, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_dat_mf() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_dat_mf"], [555, "pyart.aux_io.read_dat_mf"]], "read_gamic() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_gamic"], [559, "pyart.aux_io.read_gamic"]], "read_gif() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_gif"], [560, "pyart.aux_io.read_gif"]], "read_grib() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_grib"], [561, "pyart.aux_io.read_grib"]], "read_hpl() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_hpl"], [562, "pyart.aux_io.read_hpl"]], "read_iq() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_iq"], [563, "pyart.aux_io.read_iq"]], "read_kazr() (in module pyart.aux_io)": [[15, "pyart.aux_io.read_kazr"], [564, "pyart.aux_io.read_kazr"]], "read_metranet() (in module pyart.aux_io)": [[16, "pyart.aux_io.read_metranet"], [565, "pyart.aux_io.read_metranet"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[17, "pyart.aux_io.read_noxp_iphex_nc"], [566, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_grid_h5() (in module pyart.aux_io)": [[18, "pyart.aux_io.read_odim_grid_h5"], [567, "pyart.aux_io.read_odim_grid_h5"]], "read_odim_h5() (in module pyart.aux_io)": [[19, "pyart.aux_io.read_odim_h5"], [568, "pyart.aux_io.read_odim_h5"]], "read_odim_vp_h5() (in module pyart.aux_io)": [[20, "pyart.aux_io.read_odim_vp_h5"], [569, "pyart.aux_io.read_odim_vp_h5"]], "read_pattern() (in module pyart.aux_io)": [[21, "pyart.aux_io.read_pattern"], [570, "pyart.aux_io.read_pattern"]], "read_png() (in module pyart.aux_io)": [[22, "pyart.aux_io.read_png"], [571, "pyart.aux_io.read_png"]], "read_radx() (in module pyart.aux_io)": [[23, "pyart.aux_io.read_radx"], [577, "pyart.aux_io.read_radx"]], "read_rainbow_psr() (in module pyart.aux_io)": [[24, "pyart.aux_io.read_rainbow_psr"], [578, "pyart.aux_io.read_rainbow_psr"]], "read_rainbow_psr_spectra() (in module pyart.aux_io)": [[25, "pyart.aux_io.read_rainbow_psr_spectra"], [579, "pyart.aux_io.read_rainbow_psr_spectra"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[26, "pyart.aux_io.read_rainbow_wrl"], [580, "pyart.aux_io.read_rainbow_wrl"]], "read_skyecho() (in module pyart.aux_io)": [[27, "pyart.aux_io.read_skyecho"], [582, "pyart.aux_io.read_skyecho"]], "read_spectra() (in module pyart.aux_io)": [[28, "pyart.aux_io.read_spectra"], [583, "pyart.aux_io.read_spectra"]], "read_swissbirdradar_spectra() (in module pyart.aux_io)": [[29, "pyart.aux_io.read_swissbirdradar_spectra"], [584, "pyart.aux_io.read_swissbirdradar_spectra"]], "write_odim_grid_h5() (in module pyart.aux_io)": [[30, "pyart.aux_io.write_odim_grid_h5"], [585, "pyart.aux_io.write_odim_grid_h5"]], "write_odim_h5() (in module pyart.aux_io)": [[31, "pyart.aux_io.write_odim_h5"], [586, "pyart.aux_io.write_odim_h5"]], "write_spectra() (in module pyart.aux_io)": [[32, "pyart.aux_io.write_spectra"], [588, "pyart.aux_io.write_spectra"]], "texture_of_complex_phase() (in module pyart.bridge)": [[33, "pyart.bridge.texture_of_complex_phase"], [590, "pyart.bridge.texture_of_complex_phase"]], "filemetadata (class in pyart.config)": [[34, "pyart.config.FileMetadata"], [592, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[35, "pyart.config.FileMetadata.__call__"], [593, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[36, "pyart.config.FileMetadata.get_field_name"], [594, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[37, "pyart.config.FileMetadata.get_metadata"], [595, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[38, "pyart.config.get_field_colormap"], [596, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[39, "pyart.config.get_field_limits"], [597, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[40, "pyart.config.get_field_mapping"], [598, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[41, "pyart.config.get_field_name"], [599, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[42, "pyart.config.get_fillvalue"], [600, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[43, "pyart.config.get_metadata"], [601, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[44, "pyart.config.load_config"], [602, "pyart.config.load_config"]], "grid (class in pyart.core)": [[45, "pyart.core.Grid"], [604, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[46, "pyart.core.Grid.add_field"], [605, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[47, "pyart.core.Grid.get_point_longitude_latitude"], [606, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[48, "pyart.core.Grid.get_projparams"], [607, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[49, "pyart.core.Grid.init_point_altitude"], [608, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[50, "pyart.core.Grid.init_point_longitude_latitude"], [609, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[51, "pyart.core.Grid.init_point_x_y_z"], [610, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[52, "pyart.core.Grid.projection_proj"], [611, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[53, "pyart.core.Grid.to_xarray"], [612, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[54, "pyart.core.Grid.write"], [613, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[55, "pyart.core.HorizontalWindProfile"], [614, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[56, "pyart.core.HorizontalWindProfile.from_u_and_v"], [615, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[57, "pyart.core.HorizontalWindProfile.u_wind"], [616, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[58, "pyart.core.HorizontalWindProfile.v_wind"], [617, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[59, "pyart.core.Radar"], [618, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[60, "pyart.core.Radar.add_field"], [619, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[61, "pyart.core.Radar.add_field_like"], [620, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[62, "pyart.core.Radar.add_filter"], [621, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[63, "pyart.core.Radar.check_field_exists"], [622, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[64, "pyart.core.Radar.extract_sweeps"], [623, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[65, "pyart.core.Radar.get_azimuth"], [624, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[66, "pyart.core.Radar.get_elevation"], [625, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[67, "pyart.core.Radar.get_end"], [626, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[68, "pyart.core.Radar.get_field"], [627, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[69, "pyart.core.Radar.get_gate_area"], [628, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[70, "pyart.core.Radar.get_gate_lat_lon_alt"], [629, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[71, "pyart.core.Radar.get_gate_x_y_z"], [630, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[72, "pyart.core.Radar.get_nyquist_vel"], [631, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[73, "pyart.core.Radar.get_slice"], [632, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[74, "pyart.core.Radar.get_start"], [633, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[75, "pyart.core.Radar.get_start_end"], [634, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[76, "pyart.core.Radar.info"], [635, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[77, "pyart.core.Radar.init_gate_altitude"], [636, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[78, "pyart.core.Radar.init_gate_longitude_latitude"], [637, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[79, "pyart.core.Radar.init_gate_x_y_z"], [638, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[80, "pyart.core.Radar.init_rays_per_sweep"], [639, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[81, "pyart.core.Radar.iter_azimuth"], [640, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[82, "pyart.core.Radar.iter_elevation"], [641, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[83, "pyart.core.Radar.iter_end"], [642, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[84, "pyart.core.Radar.iter_field"], [643, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[85, "pyart.core.Radar.iter_slice"], [644, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[86, "pyart.core.Radar.iter_start"], [645, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[87, "pyart.core.Radar.iter_start_end"], [646, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[88, "pyart.core.RadarSpectra"], [647, "pyart.core.RadarSpectra"]], "add_field() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.add_field"], [648, "pyart.core.RadarSpectra.add_field"]], "add_field_like() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.add_field_like"], [649, "pyart.core.RadarSpectra.add_field_like"]], "add_filter() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.add_filter"], [650, "pyart.core.RadarSpectra.add_filter"]], "check_field_exists() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.check_field_exists"], [651, "pyart.core.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.extract_sweeps"], [652, "pyart.core.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.get_azimuth"], [653, "pyart.core.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.get_elevation"], [654, "pyart.core.RadarSpectra.get_elevation"]], "get_end() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.get_end"], [655, "pyart.core.RadarSpectra.get_end"]], "get_field() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.get_field"], [656, "pyart.core.RadarSpectra.get_field"]], "get_gate_area() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.get_gate_area"], [657, "pyart.core.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"], [658, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.get_gate_x_y_z"], [659, "pyart.core.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.get_nyquist_vel"], [660, "pyart.core.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.core.radarspectra method)": [[102, "pyart.core.RadarSpectra.get_slice"], [661, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[103, "pyart.core.RadarSpectra.get_start"], [662, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[104, "pyart.core.RadarSpectra.get_start_end"], [663, "pyart.core.RadarSpectra.get_start_end"]], "info() (pyart.core.radarspectra method)": [[105, "pyart.core.RadarSpectra.info"], [664, "pyart.core.RadarSpectra.info"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[106, "pyart.core.RadarSpectra.init_gate_altitude"], [665, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[107, "pyart.core.RadarSpectra.init_gate_longitude_latitude"], [666, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[108, "pyart.core.RadarSpectra.init_gate_x_y_z"], [667, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[109, "pyart.core.RadarSpectra.init_rays_per_sweep"], [668, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[110, "pyart.core.RadarSpectra.iter_azimuth"], [669, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[111, "pyart.core.RadarSpectra.iter_elevation"], [670, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[112, "pyart.core.RadarSpectra.iter_end"], [671, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[113, "pyart.core.RadarSpectra.iter_field"], [672, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[114, "pyart.core.RadarSpectra.iter_slice"], [673, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[115, "pyart.core.RadarSpectra.iter_start"], [674, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[116, "pyart.core.RadarSpectra.iter_start_end"], [675, "pyart.core.RadarSpectra.iter_start_end"]], "antenna_to_cartesian() (in module pyart.core)": [[117, "pyart.core.antenna_to_cartesian"], [676, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[118, "pyart.core.antenna_vectors_to_cartesian"], [677, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[119, "pyart.core.cartesian_to_antenna"], [678, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[120, "pyart.core.cartesian_to_geographic"], [679, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic_aeqd"], [680, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[122, "pyart.core.cartesian_vectors_to_geographic"], [681, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[123, "pyart.core.geographic_to_cartesian"], [682, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian_aeqd"], [683, "pyart.core.geographic_to_cartesian_aeqd"]], "wgs84_to_swissch1903() (in module pyart.core)": [[125, "pyart.core.wgs84_to_swissCH1903"], [684, "pyart.core.wgs84_to_swissCH1903"]], "calculate_attenuation() (in module pyart.correct)": [[126, "pyart.correct.calculate_attenuation"], [714, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[127, "pyart.correct.calculate_attenuation_philinear"], [715, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[128, "pyart.correct.calculate_attenuation_zphi"], [716, "pyart.correct.calculate_attenuation_zphi"]], "compute_apparent_vpr() (in module pyart.correct)": [[129, "pyart.correct.compute_apparent_vpr"], [717, "pyart.correct.compute_apparent_vpr"]], "compute_theoretical_vpr() (in module pyart.correct)": [[130, "pyart.correct.compute_theoretical_vpr"], [718, "pyart.correct.compute_theoretical_vpr"]], "correct_bias() (in module pyart.correct)": [[131, "pyart.correct.correct_bias"], [719, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[132, "pyart.correct.correct_noise_rhohv"], [720, "pyart.correct.correct_noise_rhohv"]], "correct_sys_phase() (in module pyart.correct)": [[133, "pyart.correct.correct_sys_phase"], [721, "pyart.correct.correct_sys_phase"]], "correct_visibility() (in module pyart.correct)": [[134, "pyart.correct.correct_visibility"], [722, "pyart.correct.correct_visibility"]], "correct_vpr() (in module pyart.correct)": [[135, "pyart.correct.correct_vpr"], [723, "pyart.correct.correct_vpr"]], "correct_vpr_spatialised() (in module pyart.correct)": [[136, "pyart.correct.correct_vpr_spatialised"], [724, "pyart.correct.correct_vpr_spatialised"]], "dealias_fourdd() (in module pyart.correct)": [[137, "pyart.correct.dealias_fourdd"], [725, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[138, "pyart.correct.dealias_region_based"], [726, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[139, "pyart.correct.dealias_unwrap_phase"], [727, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[140, "pyart.correct.despeckle_field"], [728, "pyart.correct.despeckle_field"]], "det_sys_phase_ray() (in module pyart.correct)": [[141, "pyart.correct.det_sys_phase_ray"], [729, "pyart.correct.det_sys_phase_ray"]], "est_rhohv_rain() (in module pyart.correct)": [[142, "pyart.correct.est_rhohv_rain"], [730, "pyart.correct.est_rhohv_rain"]], "est_zdr_precip() (in module pyart.correct)": [[143, "pyart.correct.est_zdr_precip"], [731, "pyart.correct.est_zdr_precip"]], "est_zdr_snow() (in module pyart.correct)": [[144, "pyart.correct.est_zdr_snow"], [732, "pyart.correct.est_zdr_snow"]], "find_objects() (in module pyart.correct)": [[145, "pyart.correct.find_objects"], [733, "pyart.correct.find_objects"]], "get_mask_fzl() (in module pyart.correct)": [[146, "pyart.correct.get_mask_fzl"], [735, "pyart.correct.get_mask_fzl"]], "get_sun_hits() (in module pyart.correct)": [[147, "pyart.correct.get_sun_hits"], [736, "pyart.correct.get_sun_hits"]], "get_sun_hits_ivic() (in module pyart.correct)": [[148, "pyart.correct.get_sun_hits_ivic"], [737, "pyart.correct.get_sun_hits_ivic"]], "get_sun_hits_psr() (in module pyart.correct)": [[149, "pyart.correct.get_sun_hits_psr"], [738, "pyart.correct.get_sun_hits_psr"]], "phase_proc_lp() (in module pyart.correct)": [[150, "pyart.correct.phase_proc_lp"], [740, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[151, "pyart.correct.phase_proc_lp_gf"], [741, "pyart.correct.phase_proc_lp_gf"]], "ptoa_to_sf() (in module pyart.correct)": [[152, "pyart.correct.ptoa_to_sf"], [742, "pyart.correct.ptoa_to_sf"]], "scanning_losses() (in module pyart.correct)": [[153, "pyart.correct.scanning_losses"], [744, "pyart.correct.scanning_losses"]], "selfconsistency_bias() (in module pyart.correct)": [[154, "pyart.correct.selfconsistency_bias"], [745, "pyart.correct.selfconsistency_bias"]], "selfconsistency_bias2() (in module pyart.correct)": [[155, "pyart.correct.selfconsistency_bias2"], [746, "pyart.correct.selfconsistency_bias2"]], "selfconsistency_kdp_phidp() (in module pyart.correct)": [[156, "pyart.correct.selfconsistency_kdp_phidp"], [747, "pyart.correct.selfconsistency_kdp_phidp"]], "smooth_masked() (in module pyart.correct)": [[157, "pyart.correct.smooth_masked"], [748, "pyart.correct.smooth_masked"]], "smooth_phidp_double_window() (in module pyart.correct)": [[158, "pyart.correct.smooth_phidp_double_window"], [749, "pyart.correct.smooth_phidp_double_window"]], "smooth_phidp_single_window() (in module pyart.correct)": [[159, "pyart.correct.smooth_phidp_single_window"], [750, "pyart.correct.smooth_phidp_single_window"]], "solar_flux_lookup() (in module pyart.correct)": [[160, "pyart.correct.solar_flux_lookup"], [751, "pyart.correct.solar_flux_lookup"]], "sun_position_mfr() (in module pyart.correct)": [[161, "pyart.correct.sun_position_mfr"], [752, "pyart.correct.sun_position_mfr"]], "sun_position_pysolar() (in module pyart.correct)": [[162, "pyart.correct.sun_position_pysolar"], [753, "pyart.correct.sun_position_pysolar"]], "sun_power() (in module pyart.correct)": [[163, "pyart.correct.sun_power"], [754, "pyart.correct.sun_power"]], "sun_retrieval() (in module pyart.correct)": [[164, "pyart.correct.sun_retrieval"], [755, "pyart.correct.sun_retrieval"]], "deprecatedattribute": [[165, "pyart.exceptions.DeprecatedAttribute"]], "deprecatedfunctionname": [[166, "pyart.exceptions.DeprecatedFunctionName"]], "missingoptionaldependency": [[167, "pyart.exceptions.MissingOptionalDependency"]], "_deprecated_alias() (in module pyart.exceptions)": [[168, "pyart.exceptions._deprecated_alias"]], "gatefilter (class in pyart.filters)": [[169, "pyart.filters.GateFilter"], [758, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[170, "pyart.filters.GateFilter.copy"], [759, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.exclude_above"], [760, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_all"], [761, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_below"], [762, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_equal"], [763, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_gates"], [764, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_inside"], [765, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_invalid"], [766, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_masked"], [767, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_none"], [768, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_not_equal"], [769, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_outside"], [770, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_transition"], [771, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[183, "pyart.filters.GateFilter.gate_excluded"], [772, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[184, "pyart.filters.GateFilter.gate_included"], [773, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.include_above"], [774, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_all"], [775, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_below"], [776, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_equal"], [777, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_gates"], [778, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_inside"], [779, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_none"], [780, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_not_equal"], [781, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_not_masked"], [782, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_not_transition"], [783, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_outside"], [784, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_valid"], [785, "pyart.filters.GateFilter.include_valid"]], "birds_gate_filter() (in module pyart.filters)": [[197, "pyart.filters.birds_gate_filter"], [786, "pyart.filters.birds_gate_filter"]], "class_based_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.class_based_gate_filter"], [787, "pyart.filters.class_based_gate_filter"]], "iso0_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.iso0_based_gate_filter"], [788, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.moment_and_texture_based_gate_filter"], [789, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[201, "pyart.filters.moment_based_gate_filter"], [790, "pyart.filters.moment_based_gate_filter"]], "snr_based_gate_filter() (in module pyart.filters)": [[202, "pyart.filters.snr_based_gate_filter"], [791, "pyart.filters.snr_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[203, "pyart.filters.temp_based_gate_filter"], [792, "pyart.filters.temp_based_gate_filter"]], "visibility_based_gate_filter() (in module pyart.filters)": [[204, "pyart.filters.visibility_based_gate_filter"], [793, "pyart.filters.visibility_based_gate_filter"]], "airborneradardisplay (class in pyart.graph)": [[205, "pyart.graph.AirborneRadarDisplay"], [795, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"], [796, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_filename"], [797, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_ray_title"], [798, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.generate_title"], [799, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[210, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"], [800, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"], [801, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"], [802, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[213, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"], [803, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[214, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"], [804, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"], [805, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"], [806, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"], [807, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"], [808, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"], [809, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[220, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"], [810, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[221, "pyart.graph.AirborneRadarDisplay.plot"], [811, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"], [812, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_colorbar"], [813, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"], [814, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"], [815, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"], [816, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_label"], [817, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_labels"], [818, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_ppi"], [819, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_range_ring"], [820, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_range_rings"], [821, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_ray"], [822, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[233, "pyart.graph.AirborneRadarDisplay.plot_rhi"], [823, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[234, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"], [824, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[235, "pyart.graph.AirborneRadarDisplay.plot_vpt"], [825, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.airborneradardisplay method)": [[236, "pyart.graph.AirborneRadarDisplay.plot_xsection"], [826, "pyart.graph.AirborneRadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[237, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"], [827, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[238, "pyart.graph.AirborneRadarDisplay.set_limits"], [828, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[239, "pyart.graph.GridMapDisplay"], [829, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.cartopy_coastlines"], [830, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"], [831, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.cartopy_states"], [832, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.generate_filename"], [833, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.generate_grid_title"], [834, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"], [835, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"], [836, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_colorbar"], [837, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_cross_section"], [838, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_cross_section_level() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.plot_cross_section_level"], [839, "pyart.graph.GridMapDisplay.plot_cross_section_level"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.plot_crosshairs"], [840, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_grid"], [841, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_grid_contour() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_grid_contour"], [842, "pyart.graph.GridMapDisplay.plot_grid_contour"]], "plot_grid_raw() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_grid_raw"], [843, "pyart.graph.GridMapDisplay.plot_grid_raw"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[254, "pyart.graph.GridMapDisplay.plot_latitude_slice"], [844, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[255, "pyart.graph.GridMapDisplay.plot_latitudinal_level"], [845, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[256, "pyart.graph.GridMapDisplay.plot_longitude_slice"], [846, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[257, "pyart.graph.GridMapDisplay.plot_longitudinal_level"], [847, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[258, "pyart.graph.GridMapDisplayBasemap"], [848, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.generate_filename"], [849, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"], [850, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"], [851, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"], [852, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.get_basemap"], [853, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.plot_basemap"], [854, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"], [855, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"], [856, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_grid"], [857, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[268, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"], [858, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[269, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"], [859, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[270, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"], [860, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[271, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"], [861, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[272, "pyart.graph.RadarDisplay"], [862, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.generate_az_rhi_title"], [863, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.generate_filename"], [864, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.generate_ray_title"], [865, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.generate_title"], [866, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.generate_vpt_title"], [867, "pyart.graph.RadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.generate_xsection_title"], [868, "pyart.graph.RadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.label_xaxis_r"], [869, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[280, "pyart.graph.RadarDisplay.label_xaxis_rays"], [870, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.label_xaxis_time"], [871, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.label_xaxis_x"], [872, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.label_xaxis_xsection"], [873, "pyart.graph.RadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.label_yaxis_field"], [874, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.label_yaxis_xsection"], [875, "pyart.graph.RadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.label_yaxis_y"], [876, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.label_yaxis_z"], [877, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot"], [878, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"], [879, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[290, "pyart.graph.RadarDisplay.plot_colorbar"], [880, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[291, "pyart.graph.RadarDisplay.plot_cr_raster"], [881, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[292, "pyart.graph.RadarDisplay.plot_cross_hair"], [882, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[293, "pyart.graph.RadarDisplay.plot_grid_lines"], [883, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[294, "pyart.graph.RadarDisplay.plot_label"], [884, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[295, "pyart.graph.RadarDisplay.plot_labels"], [885, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[296, "pyart.graph.RadarDisplay.plot_ppi"], [886, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[297, "pyart.graph.RadarDisplay.plot_range_ring"], [887, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[298, "pyart.graph.RadarDisplay.plot_range_rings"], [888, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[299, "pyart.graph.RadarDisplay.plot_ray"], [889, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[300, "pyart.graph.RadarDisplay.plot_rhi"], [890, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[301, "pyart.graph.RadarDisplay.plot_vpt"], [891, "pyart.graph.RadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radardisplay method)": [[302, "pyart.graph.RadarDisplay.plot_xsection"], [892, "pyart.graph.RadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[303, "pyart.graph.RadarDisplay.set_aspect_ratio"], [893, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[304, "pyart.graph.RadarDisplay.set_limits"], [894, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[305, "pyart.graph.RadarMapDisplay"], [895, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"], [896, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.generate_filename"], [897, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.generate_ray_title"], [898, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.generate_title"], [899, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.generate_vpt_title"], [900, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.generate_xsection_title"], [901, "pyart.graph.RadarMapDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.label_xaxis_r"], [902, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[313, "pyart.graph.RadarMapDisplay.label_xaxis_rays"], [903, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[314, "pyart.graph.RadarMapDisplay.label_xaxis_time"], [904, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.label_xaxis_x"], [905, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"], [906, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.label_yaxis_field"], [907, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"], [908, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.label_yaxis_y"], [909, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.label_yaxis_z"], [910, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot"], [911, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"], [912, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_colorbar"], [913, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_cr_raster"], [914, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[325, "pyart.graph.RadarMapDisplay.plot_cross_hair"], [915, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[326, "pyart.graph.RadarMapDisplay.plot_grid_lines"], [916, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[327, "pyart.graph.RadarMapDisplay.plot_label"], [917, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[328, "pyart.graph.RadarMapDisplay.plot_labels"], [918, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[329, "pyart.graph.RadarMapDisplay.plot_line_geo"], [919, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[330, "pyart.graph.RadarMapDisplay.plot_line_xy"], [920, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[331, "pyart.graph.RadarMapDisplay.plot_point"], [921, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[332, "pyart.graph.RadarMapDisplay.plot_ppi"], [922, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[333, "pyart.graph.RadarMapDisplay.plot_ppi_map"], [923, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[334, "pyart.graph.RadarMapDisplay.plot_range_ring"], [924, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[335, "pyart.graph.RadarMapDisplay.plot_range_rings"], [925, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[336, "pyart.graph.RadarMapDisplay.plot_ray"], [926, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[337, "pyart.graph.RadarMapDisplay.plot_rhi"], [927, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[338, "pyart.graph.RadarMapDisplay.plot_vpt"], [928, "pyart.graph.RadarMapDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplay method)": [[339, "pyart.graph.RadarMapDisplay.plot_xsection"], [929, "pyart.graph.RadarMapDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[340, "pyart.graph.RadarMapDisplay.set_aspect_ratio"], [930, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[341, "pyart.graph.RadarMapDisplay.set_limits"], [931, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[342, "pyart.graph.RadarMapDisplayBasemap"], [932, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"], [933, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.generate_filename"], [934, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"], [935, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.generate_title"], [936, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"], [937, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"], [938, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"], [939, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[350, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"], [940, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[351, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"], [941, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"], [942, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"], [943, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"], [944, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"], [945, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"], [946, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"], [947, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot"], [948, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"], [949, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"], [950, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[361, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"], [951, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[362, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"], [952, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[363, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"], [953, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[364, "pyart.graph.RadarMapDisplayBasemap.plot_label"], [954, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[365, "pyart.graph.RadarMapDisplayBasemap.plot_labels"], [955, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[366, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"], [956, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[367, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"], [957, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[368, "pyart.graph.RadarMapDisplayBasemap.plot_point"], [958, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[369, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"], [959, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[370, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"], [960, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[371, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"], [961, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[372, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"], [962, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[373, "pyart.graph.RadarMapDisplayBasemap.plot_ray"], [963, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[374, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"], [964, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[375, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"], [965, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[376, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"], [966, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[377, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"], [967, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[378, "pyart.graph.RadarMapDisplayBasemap.set_limits"], [968, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "make_time_unit_str() (in module pyart.io)": [[379, "pyart.io.make_time_unit_str"], [971, "pyart.io.make_time_unit_str"]], "prepare_for_read() (in module pyart.io)": [[380, "pyart.io.prepare_for_read"], [972, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[381, "pyart.io.read"], [973, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[382, "pyart.io.read_arm_sonde"], [974, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[383, "pyart.io.read_arm_sonde_vap"], [975, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[384, "pyart.io.read_cfradial"], [976, "pyart.io.read_cfradial"]], "read_cfradial2() (in module pyart.io)": [[385, "pyart.io.read_cfradial2"], [977, "pyart.io.read_cfradial2"]], "read_chl() (in module pyart.io)": [[386, "pyart.io.read_chl"], [978, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[387, "pyart.io.read_grid"], [979, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[388, "pyart.io.read_grid_mdv"], [980, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[389, "pyart.io.read_mdv"], [981, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[390, "pyart.io.read_nexrad_archive"], [982, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[391, "pyart.io.read_nexrad_cdm"], [983, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[392, "pyart.io.read_nexrad_level3"], [984, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[393, "pyart.io.read_rsl"], [985, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[394, "pyart.io.read_sigmet"], [986, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[395, "pyart.io.read_uf"], [987, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[396, "pyart.io.write_cfradial"], [988, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[397, "pyart.io.write_grid"], [989, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[398, "pyart.io.write_grid_geotiff"], [990, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[399, "pyart.io.write_grid_mdv"], [991, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[400, "pyart.io.write_uf"], [992, "pyart.io.write_uf"]], "lazyloaddict (class in pyart.lazydict)": [[401, "pyart.lazydict.LazyLoadDict"], [994, "pyart.lazydict.LazyLoadDict"]], "__class_getitem__() (pyart.lazydict.lazyloaddict class method)": [[402, "pyart.lazydict.LazyLoadDict.__class_getitem__"]], "__contains__() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.__contains__"]], "__delattr__() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.__delattr__"]], "__delitem__() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.__delitem__"]], "__dir__() (pyart.lazydict.lazyloaddict method)": [[406, "pyart.lazydict.LazyLoadDict.__dir__"]], "__eq__() (pyart.lazydict.lazyloaddict method)": [[407, "pyart.lazydict.LazyLoadDict.__eq__"]], "__format__() (pyart.lazydict.lazyloaddict method)": [[408, "pyart.lazydict.LazyLoadDict.__format__"]], "__ge__() (pyart.lazydict.lazyloaddict method)": [[409, "pyart.lazydict.LazyLoadDict.__ge__"]], "__getattribute__() (pyart.lazydict.lazyloaddict method)": [[410, "pyart.lazydict.LazyLoadDict.__getattribute__"]], "__getitem__() (pyart.lazydict.lazyloaddict method)": [[411, "pyart.lazydict.LazyLoadDict.__getitem__"]], "__getstate__() (pyart.lazydict.lazyloaddict method)": [[412, "pyart.lazydict.LazyLoadDict.__getstate__"]], "__gt__() (pyart.lazydict.lazyloaddict method)": [[413, "pyart.lazydict.LazyLoadDict.__gt__"]], "__init__() (pyart.lazydict.lazyloaddict method)": [[414, "pyart.lazydict.LazyLoadDict.__init__"]], "__init_subclass__() (pyart.lazydict.lazyloaddict method)": [[415, "pyart.lazydict.LazyLoadDict.__init_subclass__"]], "__iter__() (pyart.lazydict.lazyloaddict method)": [[416, "pyart.lazydict.LazyLoadDict.__iter__"]], "__le__() (pyart.lazydict.lazyloaddict method)": [[417, "pyart.lazydict.LazyLoadDict.__le__"]], "__len__() (pyart.lazydict.lazyloaddict method)": [[418, "pyart.lazydict.LazyLoadDict.__len__"]], "__lt__() (pyart.lazydict.lazyloaddict method)": [[419, "pyart.lazydict.LazyLoadDict.__lt__"]], "__ne__() (pyart.lazydict.lazyloaddict method)": [[420, "pyart.lazydict.LazyLoadDict.__ne__"]], "__new__() (pyart.lazydict.lazyloaddict method)": [[421, "pyart.lazydict.LazyLoadDict.__new__"]], "__reduce__() (pyart.lazydict.lazyloaddict method)": [[422, "pyart.lazydict.LazyLoadDict.__reduce__"]], "__reduce_ex__() (pyart.lazydict.lazyloaddict method)": [[423, "pyart.lazydict.LazyLoadDict.__reduce_ex__"]], "__repr__() (pyart.lazydict.lazyloaddict method)": [[424, "pyart.lazydict.LazyLoadDict.__repr__"]], "__setattr__() (pyart.lazydict.lazyloaddict method)": [[425, "pyart.lazydict.LazyLoadDict.__setattr__"]], "__setitem__() (pyart.lazydict.lazyloaddict method)": [[426, "pyart.lazydict.LazyLoadDict.__setitem__"]], "__sizeof__() (pyart.lazydict.lazyloaddict method)": [[427, "pyart.lazydict.LazyLoadDict.__sizeof__"]], "__str__() (pyart.lazydict.lazyloaddict method)": [[428, "pyart.lazydict.LazyLoadDict.__str__"]], "__subclasshook__() (pyart.lazydict.lazyloaddict class method)": [[429, "pyart.lazydict.LazyLoadDict.__subclasshook__"]], "clear() (pyart.lazydict.lazyloaddict method)": [[430, "pyart.lazydict.LazyLoadDict.clear"], [995, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[431, "pyart.lazydict.LazyLoadDict.copy"], [996, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[432, "pyart.lazydict.LazyLoadDict.get"], [997, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[433, "pyart.lazydict.LazyLoadDict.has_key"], [998, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[434, "pyart.lazydict.LazyLoadDict.items"], [999, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[435, "pyart.lazydict.LazyLoadDict.keys"], [1000, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[436, "pyart.lazydict.LazyLoadDict.pop"], [1001, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[437, "pyart.lazydict.LazyLoadDict.popitem"], [1002, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[438, "pyart.lazydict.LazyLoadDict.set_lazy"], [1003, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[439, "pyart.lazydict.LazyLoadDict.setdefault"], [1004, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[440, "pyart.lazydict.LazyLoadDict.update"], [1005, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[441, "pyart.lazydict.LazyLoadDict.values"], [1006, "pyart.lazydict.LazyLoadDict.values"]], "example_roi_func_constant() (in module pyart.map)": [[442, "pyart.map.example_roi_func_constant"], [1022, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[443, "pyart.map.example_roi_func_dist"], [1023, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[444, "pyart.map.example_roi_func_dist_beam"], [1024, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[445, "pyart.map.grid_from_radars"], [1026, "pyart.map.grid_from_radars"]], "map_gates_to_grid() (in module pyart.map)": [[446, "pyart.map.map_gates_to_grid"], [1027, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[447, "pyart.map.map_to_grid"], [1028, "pyart.map.map_to_grid"]], "_destandardize() (in module pyart.retrieve)": [[448, "pyart.retrieve._destandardize"]], "_get_res_vol_sides() (in module pyart.retrieve)": [[449, "pyart.retrieve._get_res_vol_sides"]], "atmospheric_gas_att() (in module pyart.retrieve)": [[450, "pyart.retrieve.atmospheric_gas_att"], [1031, "pyart.retrieve.atmospheric_gas_att"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[451, "pyart.retrieve.calculate_snr_from_reflectivity"], [1032, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[452, "pyart.retrieve.calculate_velocity_texture"], [1033, "pyart.retrieve.calculate_velocity_texture"]], "compute_doppler_velocity() (in module pyart.retrieve)": [[453, "pyart.retrieve.compute_Doppler_velocity"], [1035, "pyart.retrieve.compute_Doppler_velocity"]], "compute_doppler_velocity_iq() (in module pyart.retrieve)": [[454, "pyart.retrieve.compute_Doppler_velocity_iq"], [1036, "pyart.retrieve.compute_Doppler_velocity_iq"]], "compute_doppler_width() (in module pyart.retrieve)": [[455, "pyart.retrieve.compute_Doppler_width"], [1037, "pyart.retrieve.compute_Doppler_width"]], "compute_doppler_width_iq() (in module pyart.retrieve)": [[456, "pyart.retrieve.compute_Doppler_width_iq"], [1038, "pyart.retrieve.compute_Doppler_width_iq"]], "compute_apparent_profile() (in module pyart.retrieve)": [[457, "pyart.retrieve.compute_apparent_profile"], [1039, "pyart.retrieve.compute_apparent_profile"]], "compute_bird_density() (in module pyart.retrieve)": [[458, "pyart.retrieve.compute_bird_density"], [1040, "pyart.retrieve.compute_bird_density"]], "compute_ccor() (in module pyart.retrieve)": [[459, "pyart.retrieve.compute_ccor"], [1041, "pyart.retrieve.compute_ccor"]], "compute_cdr() (in module pyart.retrieve)": [[460, "pyart.retrieve.compute_cdr"], [1042, "pyart.retrieve.compute_cdr"]], "compute_centroids() (in module pyart.retrieve)": [[461, "pyart.retrieve.compute_centroids"], [1043, "pyart.retrieve.compute_centroids"]], "compute_differential_phase() (in module pyart.retrieve)": [[462, "pyart.retrieve.compute_differential_phase"], [1044, "pyart.retrieve.compute_differential_phase"]], "compute_differential_phase_iq() (in module pyart.retrieve)": [[463, "pyart.retrieve.compute_differential_phase_iq"], [1045, "pyart.retrieve.compute_differential_phase_iq"]], "compute_differential_reflectivity() (in module pyart.retrieve)": [[464, "pyart.retrieve.compute_differential_reflectivity"], [1046, "pyart.retrieve.compute_differential_reflectivity"]], "compute_differential_reflectivity_iq() (in module pyart.retrieve)": [[465, "pyart.retrieve.compute_differential_reflectivity_iq"], [1047, "pyart.retrieve.compute_differential_reflectivity_iq"]], "compute_evp() (in module pyart.retrieve)": [[466, "pyart.retrieve.compute_evp"], [1048, "pyart.retrieve.compute_evp"]], "compute_iq() (in module pyart.retrieve)": [[467, "pyart.retrieve.compute_iq"], [1049, "pyart.retrieve.compute_iq"]], "compute_l() (in module pyart.retrieve)": [[468, "pyart.retrieve.compute_l"], [1050, "pyart.retrieve.compute_l"]], "compute_mean_phase_iq() (in module pyart.retrieve)": [[469, "pyart.retrieve.compute_mean_phase_iq"], [1051, "pyart.retrieve.compute_mean_phase_iq"]], "compute_noise_power() (in module pyart.retrieve)": [[470, "pyart.retrieve.compute_noise_power"], [1052, "pyart.retrieve.compute_noise_power"]], "compute_noisedbz() (in module pyart.retrieve)": [[471, "pyart.retrieve.compute_noisedBZ"], [1053, "pyart.retrieve.compute_noisedBZ"]], "compute_pol_variables() (in module pyart.retrieve)": [[472, "pyart.retrieve.compute_pol_variables"], [1054, "pyart.retrieve.compute_pol_variables"]], "compute_pol_variables_iq() (in module pyart.retrieve)": [[473, "pyart.retrieve.compute_pol_variables_iq"], [1055, "pyart.retrieve.compute_pol_variables_iq"]], "compute_qvp() (in module pyart.retrieve)": [[474, "pyart.retrieve.compute_qvp"], [1056, "pyart.retrieve.compute_qvp"]], "compute_radial_noise_hs() (in module pyart.retrieve)": [[475, "pyart.retrieve.compute_radial_noise_hs"], [1057, "pyart.retrieve.compute_radial_noise_hs"]], "compute_radial_noise_ivic() (in module pyart.retrieve)": [[476, "pyart.retrieve.compute_radial_noise_ivic"], [1058, "pyart.retrieve.compute_radial_noise_ivic"]], "compute_rcs() (in module pyart.retrieve)": [[477, "pyart.retrieve.compute_rcs"], [1059, "pyart.retrieve.compute_rcs"]], "compute_rcs_from_pr() (in module pyart.retrieve)": [[478, "pyart.retrieve.compute_rcs_from_pr"], [1060, "pyart.retrieve.compute_rcs_from_pr"]], "compute_reflectivity() (in module pyart.retrieve)": [[479, "pyart.retrieve.compute_reflectivity"], [1061, "pyart.retrieve.compute_reflectivity"]], "compute_reflectivity_iq() (in module pyart.retrieve)": [[480, "pyart.retrieve.compute_reflectivity_iq"], [1062, "pyart.retrieve.compute_reflectivity_iq"]], "compute_rhohv() (in module pyart.retrieve)": [[481, "pyart.retrieve.compute_rhohv"], [1063, "pyart.retrieve.compute_rhohv"]], "compute_rhohv_iq() (in module pyart.retrieve)": [[482, "pyart.retrieve.compute_rhohv_iq"], [1064, "pyart.retrieve.compute_rhohv_iq"]], "compute_rqvp() (in module pyart.retrieve)": [[483, "pyart.retrieve.compute_rqvp"], [1065, "pyart.retrieve.compute_rqvp"]], "compute_signal_power() (in module pyart.retrieve)": [[484, "pyart.retrieve.compute_signal_power"], [1066, "pyart.retrieve.compute_signal_power"]], "compute_snr() (in module pyart.retrieve)": [[485, "pyart.retrieve.compute_snr"], [1067, "pyart.retrieve.compute_snr"]], "compute_spectra() (in module pyart.retrieve)": [[486, "pyart.retrieve.compute_spectra"], [1068, "pyart.retrieve.compute_spectra"]], "compute_spectral_differential_phase() (in module pyart.retrieve)": [[487, "pyart.retrieve.compute_spectral_differential_phase"], [1069, "pyart.retrieve.compute_spectral_differential_phase"]], "compute_spectral_differential_reflectivity() (in module pyart.retrieve)": [[488, "pyart.retrieve.compute_spectral_differential_reflectivity"], [1070, "pyart.retrieve.compute_spectral_differential_reflectivity"]], "compute_spectral_noise() (in module pyart.retrieve)": [[489, "pyart.retrieve.compute_spectral_noise"], [1071, "pyart.retrieve.compute_spectral_noise"]], "compute_spectral_phase() (in module pyart.retrieve)": [[490, "pyart.retrieve.compute_spectral_phase"], [1072, "pyart.retrieve.compute_spectral_phase"]], "compute_spectral_power() (in module pyart.retrieve)": [[491, "pyart.retrieve.compute_spectral_power"], [1073, "pyart.retrieve.compute_spectral_power"]], "compute_spectral_reflectivity() (in module pyart.retrieve)": [[492, "pyart.retrieve.compute_spectral_reflectivity"], [1074, "pyart.retrieve.compute_spectral_reflectivity"]], "compute_spectral_rhohv() (in module pyart.retrieve)": [[493, "pyart.retrieve.compute_spectral_rhohv"], [1075, "pyart.retrieve.compute_spectral_rhohv"]], "compute_st1_iq() (in module pyart.retrieve)": [[494, "pyart.retrieve.compute_st1_iq"], [1076, "pyart.retrieve.compute_st1_iq"]], "compute_st2_iq() (in module pyart.retrieve)": [[495, "pyart.retrieve.compute_st2_iq"], [1077, "pyart.retrieve.compute_st2_iq"]], "compute_svp() (in module pyart.retrieve)": [[496, "pyart.retrieve.compute_svp"], [1078, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[497, "pyart.retrieve.compute_ts_along_coord"], [1079, "pyart.retrieve.compute_ts_along_coord"]], "compute_vol_refl() (in module pyart.retrieve)": [[498, "pyart.retrieve.compute_vol_refl"], [1080, "pyart.retrieve.compute_vol_refl"]], "compute_vp() (in module pyart.retrieve)": [[499, "pyart.retrieve.compute_vp"], [1081, "pyart.retrieve.compute_vp"]], "compute_wbn_iq() (in module pyart.retrieve)": [[500, "pyart.retrieve.compute_wbn_iq"], [1082, "pyart.retrieve.compute_wbn_iq"]], "conv_strat_yuter() (in module pyart.retrieve)": [[501, "pyart.retrieve.conv_strat_yuter"], [1083, "pyart.retrieve.conv_strat_yuter"]], "data_for_centroids() (in module pyart.retrieve)": [[502, "pyart.retrieve.data_for_centroids"], [1084, "pyart.retrieve.data_for_centroids"]], "dealias_spectra() (in module pyart.retrieve)": [[503, "pyart.retrieve.dealias_spectra"], [1085, "pyart.retrieve.dealias_spectra"]], "detect_ml() (in module pyart.retrieve)": [[504, "pyart.retrieve.detect_ml"], [1086, "pyart.retrieve.detect_ml"]], "determine_medoids() (in module pyart.retrieve)": [[505, "pyart.retrieve.determine_medoids"], [1087, "pyart.retrieve.determine_medoids"]], "est_rain_rate_a() (in module pyart.retrieve)": [[506, "pyart.retrieve.est_rain_rate_a"], [1088, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[507, "pyart.retrieve.est_rain_rate_hydro"], [1089, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[508, "pyart.retrieve.est_rain_rate_kdp"], [1090, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[509, "pyart.retrieve.est_rain_rate_z"], [1091, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[510, "pyart.retrieve.est_rain_rate_za"], [1092, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[511, "pyart.retrieve.est_rain_rate_zkdp"], [1093, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[512, "pyart.retrieve.est_rain_rate_zpoly"], [1094, "pyart.retrieve.est_rain_rate_zpoly"]], "est_vertical_windshear() (in module pyart.retrieve)": [[513, "pyart.retrieve.est_vertical_windshear"], [1095, "pyart.retrieve.est_vertical_windshear"]], "est_vertical_windshear_lidar() (in module pyart.retrieve)": [[514, "pyart.retrieve.est_vertical_windshear_lidar"], [1096, "pyart.retrieve.est_vertical_windshear_lidar"]], "est_wind_profile() (in module pyart.retrieve)": [[515, "pyart.retrieve.est_wind_profile"], [1097, "pyart.retrieve.est_wind_profile"]], "est_wind_vel() (in module pyart.retrieve)": [[516, "pyart.retrieve.est_wind_vel"], [1098, "pyart.retrieve.est_wind_vel"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[517, "pyart.retrieve.fetch_radar_time_profile"], [1099, "pyart.retrieve.fetch_radar_time_profile"]], "gecsx() (in module pyart.retrieve)": [[518, "pyart.retrieve.gecsx"], [1100, "pyart.retrieve.gecsx"]], "get_coeff_attg() (in module pyart.retrieve)": [[519, "pyart.retrieve.get_coeff_attg"], [1101, "pyart.retrieve.get_coeff_attg"]], "get_freq_band() (in module pyart.retrieve)": [[520, "pyart.retrieve.get_freq_band"], [1102, "pyart.retrieve.get_freq_band"]], "get_iso0_val() (in module pyart.retrieve)": [[521, "pyart.retrieve.get_iso0_val"], [1103, "pyart.retrieve.get_iso0_val"]], "get_ml_rng_limits() (in module pyart.retrieve)": [[522, "pyart.retrieve.get_ml_rng_limits"], [1104, "pyart.retrieve.get_ml_rng_limits"]], "grid_displacement_pc() (in module pyart.retrieve)": [[523, "pyart.retrieve.grid_displacement_pc"], [1105, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[524, "pyart.retrieve.grid_shift"], [1106, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[525, "pyart.retrieve.hydroclass_semisupervised"], [1107, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_leastsquare_double_window() (in module pyart.retrieve)": [[526, "pyart.retrieve.kdp_leastsquare_double_window"], [1108, "pyart.retrieve.kdp_leastsquare_double_window"]], "kdp_leastsquare_single_window() (in module pyart.retrieve)": [[527, "pyart.retrieve.kdp_leastsquare_single_window"], [1109, "pyart.retrieve.kdp_leastsquare_single_window"]], "kdp_maesaka() (in module pyart.retrieve)": [[528, "pyart.retrieve.kdp_maesaka"], [1110, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[529, "pyart.retrieve.kdp_schneebeli"], [1111, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[530, "pyart.retrieve.kdp_vulpiani"], [1112, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[531, "pyart.retrieve.map_profile_to_gates"], [1113, "pyart.retrieve.map_profile_to_gates"]], "melting_layer_giangrande() (in module pyart.retrieve)": [[532, "pyart.retrieve.melting_layer_giangrande"], [1114, "pyart.retrieve.melting_layer_giangrande"]], "melting_layer_hydroclass() (in module pyart.retrieve)": [[533, "pyart.retrieve.melting_layer_hydroclass"], [1115, "pyart.retrieve.melting_layer_hydroclass"]], "melting_layer_mf() (in module pyart.retrieve)": [[534, "pyart.retrieve.melting_layer_mf"], [1116, "pyart.retrieve.melting_layer_mf"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[535, "pyart.retrieve.quasi_vertical_profile"], [1117, "pyart.retrieve.quasi_vertical_profile"]], "select_samples() (in module pyart.retrieve)": [[536, "pyart.retrieve.select_samples"], [1118, "pyart.retrieve.select_samples"]], "steiner_conv_strat() (in module pyart.retrieve)": [[537, "pyart.retrieve.steiner_conv_strat"], [1119, "pyart.retrieve.steiner_conv_strat"]], "synthetic_obs_distribution() (in module pyart.retrieve)": [[538, "pyart.retrieve.synthetic_obs_distribution"], [1120, "pyart.retrieve.synthetic_obs_distribution"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[539, "pyart.retrieve.texture_of_complex_phase"], [1121, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[540, "pyart.retrieve.vad_browning"], [1122, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[541, "pyart.retrieve.vad_michelson"], [1123, "pyart.retrieve.vad_michelson"]], "_debug_info() (in module pyart)": [[542, "pyart._debug_info"]], "module": [[543, "module-pyart.aux_io"], [589, "module-pyart.bridge"], [591, "module-pyart.config"], [603, "module-pyart.core"], [685, "module-pyart.correct"], [756, "module-pyart.exceptions"], [757, "module-pyart.filters"], [794, "module-pyart.graph"], [970, "module-pyart.io"], [993, "module-pyart.lazydict"], [1017, "module-pyart.map"], [1030, "module-pyart.retrieve"], [1124, "module-pyart.testing"], [1209, "module-pyart.util"]], "pyart.aux_io": [[543, "module-pyart.aux_io"]], "convert_data() (in module pyart.aux_io)": [[544, "pyart.aux_io.convert_data"]], "get_library() (in module pyart.aux_io)": [[546, "pyart.aux_io.get_library"]], "read_edge_netcdf() (in module pyart.aux_io)": [[556, "pyart.aux_io.read_edge_netcdf"]], "read_file_c() (in module pyart.aux_io)": [[557, "pyart.aux_io.read_file_c"]], "read_file_py() (in module pyart.aux_io)": [[558, "pyart.aux_io.read_file_py"]], "read_product_c() (in module pyart.aux_io)": [[572, "pyart.aux_io.read_product_c"]], "read_product_py() (in module pyart.aux_io)": [[573, "pyart.aux_io.read_product_py"]], "read_psr_cpi_header() (in module pyart.aux_io)": [[574, "pyart.aux_io.read_psr_cpi_header"]], "read_psr_header() (in module pyart.aux_io)": [[575, "pyart.aux_io.read_psr_header"]], "read_psr_spectra() (in module pyart.aux_io)": [[576, "pyart.aux_io.read_psr_spectra"]], "read_sinarame_h5() (in module pyart.aux_io)": [[581, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[587, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[589, "module-pyart.bridge"]], "pyart.config": [[591, "module-pyart.config"]], "pyart.core": [[603, "module-pyart.core"]], "pyart.correct": [[685, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[686, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[687, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[688, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[689, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[690, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[691, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[692, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[693, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[694, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[695, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[696, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[697, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[698, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[699, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[700, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[701, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[702, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[703, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[704, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[705, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[706, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[707, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[708, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[709, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[710, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[711, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[712, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[713, "pyart.correct.GateFilter.include_valid"]], "gauss_fit() (in module pyart.correct)": [[734, "pyart.correct.gauss_fit"]], "moment_based_gate_filter() (in module pyart.correct)": [[739, "pyart.correct.moment_based_gate_filter"]], "retrieval_result() (in module pyart.correct)": [[743, "pyart.correct.retrieval_result"]], "pyart.exceptions": [[756, "module-pyart.exceptions"]], "pyart.filters": [[757, "module-pyart.filters"]], "pyart.graph": [[794, "module-pyart.graph"]], "plot_convstrat_scheme() (in module pyart.graph)": [[969, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[970, "module-pyart.io"]], "pyart.lazydict": [[993, "module-pyart.lazydict"]], "mutablemapping (class in pyart.lazydict)": [[1007, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[1008, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[1009, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[1010, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[1011, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[1012, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[1013, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[1014, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[1015, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[1016, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[1017, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[1018, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[1019, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[1020, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[1021, "pyart.map.GateMapper.time_tolerance"]], "get_earth_radius() (in module pyart.map)": [[1025, "pyart.map.get_earth_radius"]], "polar_to_cartesian() (in module pyart.map)": [[1029, "pyart.map.polar_to_cartesian"]], "pyart.retrieve": [[1030, "module-pyart.retrieve"]], "composite_reflectivity() (in module pyart.retrieve)": [[1034, "pyart.retrieve.composite_reflectivity"]], "pyart.testing": [[1124, "module-pyart.testing"]], "grid (class in pyart.testing)": [[1125, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[1126, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[1127, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[1128, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[1129, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[1130, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[1131, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[1132, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[1133, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[1134, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[1135, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[1136, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[1137, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[1138, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[1139, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[1140, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[1141, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[1142, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[1143, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[1144, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[1145, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[1146, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[1147, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[1148, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[1149, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[1150, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[1151, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[1152, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[1153, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[1154, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[1155, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[1156, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[1157, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[1158, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[1159, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[1160, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[1161, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[1162, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[1163, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[1164, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[1165, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[1166, "pyart.testing.RadarSpectra"]], "add_field() (pyart.testing.radarspectra method)": [[1167, "pyart.testing.RadarSpectra.add_field"]], "add_field_like() (pyart.testing.radarspectra method)": [[1168, "pyart.testing.RadarSpectra.add_field_like"]], "add_filter() (pyart.testing.radarspectra method)": [[1169, "pyart.testing.RadarSpectra.add_filter"]], "check_field_exists() (pyart.testing.radarspectra method)": [[1170, "pyart.testing.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.testing.radarspectra method)": [[1171, "pyart.testing.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.testing.radarspectra method)": [[1172, "pyart.testing.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.testing.radarspectra method)": [[1173, "pyart.testing.RadarSpectra.get_elevation"]], "get_end() (pyart.testing.radarspectra method)": [[1174, "pyart.testing.RadarSpectra.get_end"]], "get_field() (pyart.testing.radarspectra method)": [[1175, "pyart.testing.RadarSpectra.get_field"]], "get_gate_area() (pyart.testing.radarspectra method)": [[1176, "pyart.testing.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radarspectra method)": [[1177, "pyart.testing.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radarspectra method)": [[1178, "pyart.testing.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radarspectra method)": [[1179, "pyart.testing.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.testing.radarspectra method)": [[1180, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[1181, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[1182, "pyart.testing.RadarSpectra.get_start_end"]], "info() (pyart.testing.radarspectra method)": [[1183, "pyart.testing.RadarSpectra.info"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[1184, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[1185, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[1186, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[1187, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[1188, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[1189, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[1190, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[1191, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[1192, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[1193, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[1194, "pyart.testing.RadarSpectra.iter_start_end"]], "get_metadata() (in module pyart.testing)": [[1195, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[1196, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[1197, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[1198, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[1199, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[1200, "pyart.testing.make_empty_spectra_radar"]], "make_normal_storm() (in module pyart.testing)": [[1201, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[1202, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[1203, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[1204, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[1205, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[1206, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[1207, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[1208, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[1209, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[1210, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[1211, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[1212, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[1213, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[1214, "pyart.util.angular_texture_2d"]], "colocated_gates() (in module pyart.util)": [[1215, "pyart.util.colocated_gates"]], "colocated_gates2() (in module pyart.util)": [[1216, "pyart.util.colocated_gates2"]], "compute_azimuthal_average() (in module pyart.util)": [[1217, "pyart.util.compute_azimuthal_average"]], "compute_corr() (in module pyart.util)": [[1218, "pyart.util.compute_corr"]], "compute_directional_stats() (in module pyart.util)": [[1219, "pyart.util.compute_directional_stats"]], "compute_mse() (in module pyart.util)": [[1220, "pyart.util.compute_mse"]], "compute_nse() (in module pyart.util)": [[1221, "pyart.util.compute_nse"]], "cross_section_ppi() (in module pyart.util)": [[1222, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[1223, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[1224, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[1225, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[1226, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[1227, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[1228, "pyart.util.datetimes_from_radar"]], "estimate_noise_hs74() (in module pyart.util)": [[1229, "pyart.util.estimate_noise_hs74"]], "estimate_noise_ivic13() (in module pyart.util)": [[1230, "pyart.util.estimate_noise_ivic13"]], "find_neighbour_gates() (in module pyart.util)": [[1231, "pyart.util.find_neighbour_gates"]], "for_azimuth() (in module pyart.util)": [[1232, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[1233, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[1234, "pyart.util.get_field_location"]], "get_ivic_flat_reg_var_max() (in module pyart.util)": [[1235, "pyart.util.get_ivic_flat_reg_var_max"]], "get_ivic_pct() (in module pyart.util)": [[1236, "pyart.util.get_ivic_pct"]], "get_ivic_snr_thr() (in module pyart.util)": [[1237, "pyart.util.get_ivic_snr_thr"]], "get_target_elevations() (in module pyart.util)": [[1238, "pyart.util.get_target_elevations"]], "grid_texture_2d() (in module pyart.util)": [[1239, "pyart.util.grid_texture_2d"]], "image_mute_radar() (in module pyart.util)": [[1240, "pyart.util.image_mute_radar"]], "interpol_spectra() (in module pyart.util)": [[1241, "pyart.util.interpol_spectra"]], "intersection() (in module pyart.util)": [[1242, "pyart.util.intersection"]], "interval_mean() (in module pyart.util)": [[1243, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[1244, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[1245, "pyart.util.is_vpt"]], "ivic_flat_reg_var_max_table() (in module pyart.util)": [[1246, "pyart.util.ivic_flat_reg_var_max_table"]], "ivic_flat_reg_wind_len_table() (in module pyart.util)": [[1247, "pyart.util.ivic_flat_reg_wind_len_table"]], "ivic_pct_table() (in module pyart.util)": [[1248, "pyart.util.ivic_pct_table"]], "ivic_snr_thr_table() (in module pyart.util)": [[1249, "pyart.util.ivic_snr_thr_table"]], "join_radar() (in module pyart.util)": [[1250, "pyart.util.join_radar"]], "join_spectra() (in module pyart.util)": [[1251, "pyart.util.join_spectra"]], "ma_broadcast_to() (in module pyart.util)": [[1252, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[1253, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[1254, "pyart.util.mean_of_two_angles_deg"]], "radar_from_spectra() (in module pyart.util)": [[1255, "pyart.util.radar_from_spectra"]], "rolling_window() (in module pyart.util)": [[1256, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[1257, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[1258, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[1259, "pyart.util.subset_radar"]], "subset_radar_spectra() (in module pyart.util)": [[1260, "pyart.util.subset_radar_spectra"]], "texture() (in module pyart.util)": [[1261, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[1262, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[1263, "pyart.util.to_vpt"]]}})