Search.setIndex({"docnames": ["API/generated/generated/pyart.aux_io.read_bin", "API/generated/generated/pyart.aux_io.read_bin_mf", "API/generated/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/generated/pyart.aux_io.read_cf1", "API/generated/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/generated/pyart.aux_io.read_dat_mf", "API/generated/generated/pyart.aux_io.read_gamic", "API/generated/generated/pyart.aux_io.read_gif", "API/generated/generated/pyart.aux_io.read_grib", "API/generated/generated/pyart.aux_io.read_hpl", "API/generated/generated/pyart.aux_io.read_iq", "API/generated/generated/pyart.aux_io.read_kazr", "API/generated/generated/pyart.aux_io.read_metranet", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/generated/pyart.aux_io.read_odim_h5", "API/generated/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/generated/pyart.aux_io.read_pattern", "API/generated/generated/pyart.aux_io.read_png", "API/generated/generated/pyart.aux_io.read_radx", "API/generated/generated/pyart.aux_io.read_rainbow_psr", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/generated/pyart.aux_io.read_spectra", "API/generated/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/generated/pyart.aux_io.write_odim_h5", "API/generated/generated/pyart.aux_io.write_spectra", "API/generated/generated/pyart.bridge.texture_of_complex_phase", "API/generated/generated/pyart.config.FileMetadata", "API/generated/generated/pyart.config.FileMetadata.__call__", "API/generated/generated/pyart.config.FileMetadata.get_field_name", "API/generated/generated/pyart.config.FileMetadata.get_metadata", "API/generated/generated/pyart.config.get_field_colormap", "API/generated/generated/pyart.config.get_field_limits", "API/generated/generated/pyart.config.get_field_mapping", "API/generated/generated/pyart.config.get_field_name", "API/generated/generated/pyart.config.get_fillvalue", "API/generated/generated/pyart.config.get_metadata", "API/generated/generated/pyart.config.load_config", "API/generated/generated/pyart.core.Grid", "API/generated/generated/pyart.core.Grid.add_field", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.get_projparams", "API/generated/generated/pyart.core.Grid.init_point_altitude", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/generated/pyart.core.Grid.projection_proj", "API/generated/generated/pyart.core.Grid.to_xarray", "API/generated/generated/pyart.core.Grid.write", "API/generated/generated/pyart.core.HorizontalWindProfile", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/generated/pyart.core.Radar", "API/generated/generated/pyart.core.Radar.add_field", "API/generated/generated/pyart.core.Radar.add_field_like", "API/generated/generated/pyart.core.Radar.add_filter", "API/generated/generated/pyart.core.Radar.check_field_exists", "API/generated/generated/pyart.core.Radar.extract_sweeps", "API/generated/generated/pyart.core.Radar.get_azimuth", "API/generated/generated/pyart.core.Radar.get_elevation", "API/generated/generated/pyart.core.Radar.get_end", "API/generated/generated/pyart.core.Radar.get_field", "API/generated/generated/pyart.core.Radar.get_gate_area", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/generated/pyart.core.Radar.get_slice", "API/generated/generated/pyart.core.Radar.get_start", "API/generated/generated/pyart.core.Radar.get_start_end", "API/generated/generated/pyart.core.Radar.info", "API/generated/generated/pyart.core.Radar.init_gate_altitude", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/generated/pyart.core.Radar.iter_azimuth", "API/generated/generated/pyart.core.Radar.iter_elevation", "API/generated/generated/pyart.core.Radar.iter_end", "API/generated/generated/pyart.core.Radar.iter_field", "API/generated/generated/pyart.core.Radar.iter_slice", "API/generated/generated/pyart.core.Radar.iter_start", "API/generated/generated/pyart.core.Radar.iter_start_end", "API/generated/generated/pyart.core.RadarSpectra", "API/generated/generated/pyart.core.RadarSpectra.add_field", "API/generated/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/generated/pyart.core.RadarSpectra.add_filter", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/generated/pyart.core.RadarSpectra.get_end", "API/generated/generated/pyart.core.RadarSpectra.get_field", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/generated/pyart.core.RadarSpectra.get_slice", "API/generated/generated/pyart.core.RadarSpectra.get_start", "API/generated/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/generated/pyart.core.RadarSpectra.info", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/generated/pyart.core.RadarSpectra.iter_end", "API/generated/generated/pyart.core.RadarSpectra.iter_field", "API/generated/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/generated/pyart.core.RadarSpectra.iter_start", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/generated/pyart.core.antenna_to_cartesian", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/generated/pyart.core.cartesian_to_antenna", "API/generated/generated/pyart.core.cartesian_to_geographic", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/generated/pyart.core.geographic_to_cartesian", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/generated/pyart.correct.calculate_attenuation", "API/generated/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/generated/pyart.correct.compute_apparent_vpr", "API/generated/generated/pyart.correct.compute_theoretical_vpr", "API/generated/generated/pyart.correct.correct_bias", "API/generated/generated/pyart.correct.correct_noise_rhohv", "API/generated/generated/pyart.correct.correct_sys_phase", "API/generated/generated/pyart.correct.correct_visibility", "API/generated/generated/pyart.correct.correct_vpr", "API/generated/generated/pyart.correct.correct_vpr_spatialised", "API/generated/generated/pyart.correct.dealias_fourdd", "API/generated/generated/pyart.correct.dealias_region_based", "API/generated/generated/pyart.correct.dealias_unwrap_phase", "API/generated/generated/pyart.correct.despeckle_field", "API/generated/generated/pyart.correct.det_sys_phase_ray", "API/generated/generated/pyart.correct.est_rhohv_rain", "API/generated/generated/pyart.correct.est_zdr_precip", "API/generated/generated/pyart.correct.est_zdr_snow", "API/generated/generated/pyart.correct.find_objects", "API/generated/generated/pyart.correct.get_mask_fzl", "API/generated/generated/pyart.correct.get_sun_hits", "API/generated/generated/pyart.correct.get_sun_hits_ivic", "API/generated/generated/pyart.correct.get_sun_hits_psr", "API/generated/generated/pyart.correct.phase_proc_lp", "API/generated/generated/pyart.correct.phase_proc_lp_gf", "API/generated/generated/pyart.correct.ptoa_to_sf", "API/generated/generated/pyart.correct.scanning_losses", "API/generated/generated/pyart.correct.selfconsistency_bias", "API/generated/generated/pyart.correct.selfconsistency_bias2", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/generated/pyart.correct.smooth_masked", "API/generated/generated/pyart.correct.smooth_phidp_double_window", "API/generated/generated/pyart.correct.smooth_phidp_single_window", "API/generated/generated/pyart.correct.solar_flux_lookup", "API/generated/generated/pyart.correct.sun_position_mfr", "API/generated/generated/pyart.correct.sun_position_pysolar", "API/generated/generated/pyart.correct.sun_power", "API/generated/generated/pyart.correct.sun_retrieval", "API/generated/generated/pyart.exceptions.DeprecatedAttribute", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName", "API/generated/generated/pyart.exceptions.MissingOptionalDependency", "API/generated/generated/pyart.exceptions._deprecated_alias", "API/generated/generated/pyart.filters.GateFilter", "API/generated/generated/pyart.filters.GateFilter.copy", "API/generated/generated/pyart.filters.GateFilter.exclude_above", "API/generated/generated/pyart.filters.GateFilter.exclude_all", "API/generated/generated/pyart.filters.GateFilter.exclude_below", "API/generated/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/generated/pyart.filters.GateFilter.exclude_none", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/generated/pyart.filters.GateFilter.gate_included", "API/generated/generated/pyart.filters.GateFilter.include_above", "API/generated/generated/pyart.filters.GateFilter.include_all", "API/generated/generated/pyart.filters.GateFilter.include_below", "API/generated/generated/pyart.filters.GateFilter.include_equal", "API/generated/generated/pyart.filters.GateFilter.include_gates", "API/generated/generated/pyart.filters.GateFilter.include_inside", "API/generated/generated/pyart.filters.GateFilter.include_none", "API/generated/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/generated/pyart.filters.GateFilter.include_outside", "API/generated/generated/pyart.filters.GateFilter.include_valid", "API/generated/generated/pyart.filters.birds_gate_filter", "API/generated/generated/pyart.filters.class_based_gate_filter", "API/generated/generated/pyart.filters.iso0_based_gate_filter", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/generated/pyart.filters.moment_based_gate_filter", "API/generated/generated/pyart.filters.snr_based_gate_filter", "API/generated/generated/pyart.filters.temp_based_gate_filter", "API/generated/generated/pyart.filters.visibility_based_gate_filter", "API/generated/generated/pyart.graph.AirborneRadarDisplay", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/generated/pyart.graph.GridMapDisplay", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latlon_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latlon_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/generated/pyart.graph.RadarDisplay", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarDisplay.plot", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplay", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/generated/pyart.io.make_time_unit_str", "API/generated/generated/pyart.io.prepare_for_read", "API/generated/generated/pyart.io.read", "API/generated/generated/pyart.io.read_arm_sonde", "API/generated/generated/pyart.io.read_arm_sonde_vap", "API/generated/generated/pyart.io.read_cfradial", "API/generated/generated/pyart.io.read_cfradial2", "API/generated/generated/pyart.io.read_chl", "API/generated/generated/pyart.io.read_grid", "API/generated/generated/pyart.io.read_grid_mdv", "API/generated/generated/pyart.io.read_mdv", "API/generated/generated/pyart.io.read_nexrad_archive", "API/generated/generated/pyart.io.read_nexrad_cdm", "API/generated/generated/pyart.io.read_nexrad_level3", "API/generated/generated/pyart.io.read_rsl", "API/generated/generated/pyart.io.read_sigmet", "API/generated/generated/pyart.io.read_uf", "API/generated/generated/pyart.io.write_cfradial", "API/generated/generated/pyart.io.write_grid", "API/generated/generated/pyart.io.write_grid_geotiff", "API/generated/generated/pyart.io.write_grid_mdv", "API/generated/generated/pyart.io.write_uf", "API/generated/generated/pyart.lazydict.LazyLoadDict", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/generated/pyart.map.example_roi_func_constant", "API/generated/generated/pyart.map.example_roi_func_dist", "API/generated/generated/pyart.map.example_roi_func_dist_beam", "API/generated/generated/pyart.map.grid_from_radars", "API/generated/generated/pyart.map.map_gates_to_grid", "API/generated/generated/pyart.map.map_to_grid", "API/generated/generated/pyart.retrieve._destandardize", "API/generated/generated/pyart.retrieve._get_res_vol_sides", "API/generated/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/generated/pyart.retrieve.compute_Doppler_width", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/generated/pyart.retrieve.compute_apparent_profile", "API/generated/generated/pyart.retrieve.compute_bird_density", "API/generated/generated/pyart.retrieve.compute_ccor", "API/generated/generated/pyart.retrieve.compute_cdr", "API/generated/generated/pyart.retrieve.compute_centroids", "API/generated/generated/pyart.retrieve.compute_differential_phase", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_evp", "API/generated/generated/pyart.retrieve.compute_iq", "API/generated/generated/pyart.retrieve.compute_l", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/generated/pyart.retrieve.compute_noise_power", "API/generated/generated/pyart.retrieve.compute_noisedBZ", "API/generated/generated/pyart.retrieve.compute_pol_variables", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/generated/pyart.retrieve.compute_qvp", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/generated/pyart.retrieve.compute_rcs", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/generated/pyart.retrieve.compute_reflectivity", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_rhohv", "API/generated/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/generated/pyart.retrieve.compute_rqvp", "API/generated/generated/pyart.retrieve.compute_signal_power", "API/generated/generated/pyart.retrieve.compute_snr", "API/generated/generated/pyart.retrieve.compute_spectra", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_noise", "API/generated/generated/pyart.retrieve.compute_spectral_phase", "API/generated/generated/pyart.retrieve.compute_spectral_power", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/generated/pyart.retrieve.compute_st1_iq", "API/generated/generated/pyart.retrieve.compute_st2_iq", "API/generated/generated/pyart.retrieve.compute_svp", "API/generated/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/generated/pyart.retrieve.compute_vol_refl", "API/generated/generated/pyart.retrieve.compute_vp", "API/generated/generated/pyart.retrieve.compute_wbn_iq", "API/generated/generated/pyart.retrieve.conv_strat_yuter", "API/generated/generated/pyart.retrieve.data_for_centroids", "API/generated/generated/pyart.retrieve.detect_ml", "API/generated/generated/pyart.retrieve.determine_medoids", "API/generated/generated/pyart.retrieve.est_rain_rate_a", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/generated/pyart.retrieve.est_rain_rate_z", "API/generated/generated/pyart.retrieve.est_rain_rate_za", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/generated/pyart.retrieve.est_vertical_windshear", "API/generated/generated/pyart.retrieve.est_wind_profile", "API/generated/generated/pyart.retrieve.est_wind_vel", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/generated/pyart.retrieve.gecsx", "API/generated/generated/pyart.retrieve.get_coeff_attg", "API/generated/generated/pyart.retrieve.get_freq_band", "API/generated/generated/pyart.retrieve.get_iso0_val", "API/generated/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/generated/pyart.retrieve.grid_displacement_pc", "API/generated/generated/pyart.retrieve.grid_shift", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/generated/pyart.retrieve.kdp_maesaka", "API/generated/generated/pyart.retrieve.kdp_schneebeli", "API/generated/generated/pyart.retrieve.kdp_vulpiani", "API/generated/generated/pyart.retrieve.map_profile_to_gates", "API/generated/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/generated/pyart.retrieve.melting_layer_mf", "API/generated/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/generated/pyart.retrieve.select_samples", "API/generated/generated/pyart.retrieve.steiner_conv_strat", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/generated/pyart.retrieve.vad_browning", "API/generated/generated/pyart.retrieve.vad_michelson", "API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.convert_data", "API/generated/pyart.aux_io.get_library", "API/generated/pyart.aux_io.read_bin", "API/generated/pyart.aux_io.read_bin_mf", "API/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/pyart.aux_io.read_cf1", "API/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_dat_mf", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_file_c", "API/generated/pyart.aux_io.read_file_py", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_gif", "API/generated/pyart.aux_io.read_grib", "API/generated/pyart.aux_io.read_hpl", "API/generated/pyart.aux_io.read_iq", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_metranet", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_png", "API/generated/pyart.aux_io.read_product_c", "API/generated/pyart.aux_io.read_product_py", "API/generated/pyart.aux_io.read_psr_cpi_header", "API/generated/pyart.aux_io.read_psr_header", "API/generated/pyart.aux_io.read_psr_spectra", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_rainbow_psr", "API/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.read_spectra", "API/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/pyart.aux_io.write_odim_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.aux_io.write_spectra", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.add_field", "API/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/pyart.core.RadarSpectra.add_filter", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_field", "API/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.info", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.compute_apparent_vpr", "API/generated/pyart.correct.compute_theoretical_vpr", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.correct_sys_phase", "API/generated/pyart.correct.correct_visibility", "API/generated/pyart.correct.correct_vpr", "API/generated/pyart.correct.correct_vpr_spatialised", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.det_sys_phase_ray", "API/generated/pyart.correct.est_rhohv_rain", "API/generated/pyart.correct.est_zdr_precip", "API/generated/pyart.correct.est_zdr_snow", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.gauss_fit", "API/generated/pyart.correct.get_mask_fzl", "API/generated/pyart.correct.get_sun_hits", "API/generated/pyart.correct.get_sun_hits_ivic", "API/generated/pyart.correct.get_sun_hits_psr", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.ptoa_to_sf", "API/generated/pyart.correct.retrieval_result", "API/generated/pyart.correct.scanning_losses", "API/generated/pyart.correct.selfconsistency_bias", "API/generated/pyart.correct.selfconsistency_bias2", "API/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/pyart.correct.smooth_masked", "API/generated/pyart.correct.smooth_phidp_double_window", "API/generated/pyart.correct.smooth_phidp_single_window", "API/generated/pyart.correct.solar_flux_lookup", "API/generated/pyart.correct.sun_position_mfr", "API/generated/pyart.correct.sun_position_pysolar", "API/generated/pyart.correct.sun_power", "API/generated/pyart.correct.sun_retrieval", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.birds_gate_filter", "API/generated/pyart.filters.class_based_gate_filter", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.snr_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.filters.visibility_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_latlon_level", "API/generated/pyart.graph.GridMapDisplay.plot_latlon_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.make_time_unit_str", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_cfradial2", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.get_earth_radius", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.map.polar_to_cartesian", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/pyart.retrieve.compute_Doppler_width", "API/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/pyart.retrieve.compute_apparent_profile", "API/generated/pyart.retrieve.compute_bird_density", "API/generated/pyart.retrieve.compute_ccor", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_centroids", "API/generated/pyart.retrieve.compute_differential_phase", "API/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_iq", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/pyart.retrieve.compute_noise_power", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_pol_variables", "API/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/pyart.retrieve.compute_rcs", "API/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/pyart.retrieve.compute_reflectivity", "API/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/pyart.retrieve.compute_rhohv", "API/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_signal_power", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_spectra", "API/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/pyart.retrieve.compute_spectral_noise", "API/generated/pyart.retrieve.compute_spectral_phase", "API/generated/pyart.retrieve.compute_spectral_power", "API/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/pyart.retrieve.compute_st1_iq", "API/generated/pyart.retrieve.compute_st2_iq", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vol_refl", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.compute_wbn_iq", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.data_for_centroids", "API/generated/pyart.retrieve.detect_ml", "API/generated/pyart.retrieve.determine_medoids", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.est_vertical_windshear", "API/generated/pyart.retrieve.est_wind_profile", "API/generated/pyart.retrieve.est_wind_vel", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.gecsx", "API/generated/pyart.retrieve.get_coeff_attg", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.get_iso0_val", "API/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/pyart.retrieve.melting_layer_mf", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.select_samples", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.add_field", "API/generated/pyart.testing.RadarSpectra.add_field_like", "API/generated/pyart.testing.RadarSpectra.add_filter", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.extract_sweeps", "API/generated/pyart.testing.RadarSpectra.get_azimuth", "API/generated/pyart.testing.RadarSpectra.get_elevation", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_field", "API/generated/pyart.testing.RadarSpectra.get_gate_area", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.info", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.colocated_gates", "API/generated/pyart.util.colocated_gates2", "API/generated/pyart.util.compute_azimuthal_average", "API/generated/pyart.util.compute_corr", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.compute_mse", "API/generated/pyart.util.compute_nse", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.estimate_noise_ivic13", "API/generated/pyart.util.find_neighbour_gates", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/pyart.util.get_ivic_pct", "API/generated/pyart.util.get_ivic_snr_thr", "API/generated/pyart.util.get_target_elevations", "API/generated/pyart.util.grid_texture_2d", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interpol_spectra", "API/generated/pyart.util.intersection", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/pyart.util.ivic_pct_table", "API/generated/pyart.util.ivic_snr_thr_table", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.join_spectra", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.radar_from_spectra", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.subset_radar_spectra", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "changelog", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/generated/pyart.aux_io.read_bin.rst", "API/generated/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/generated/pyart.aux_io.read_cf1.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/generated/pyart.aux_io.read_gamic.rst", "API/generated/generated/pyart.aux_io.read_gif.rst", "API/generated/generated/pyart.aux_io.read_grib.rst", "API/generated/generated/pyart.aux_io.read_hpl.rst", "API/generated/generated/pyart.aux_io.read_iq.rst", "API/generated/generated/pyart.aux_io.read_kazr.rst", "API/generated/generated/pyart.aux_io.read_metranet.rst", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/generated/pyart.aux_io.read_pattern.rst", "API/generated/generated/pyart.aux_io.read_png.rst", "API/generated/generated/pyart.aux_io.read_radx.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/generated/pyart.aux_io.read_spectra.rst", "API/generated/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/generated/pyart.aux_io.write_spectra.rst", "API/generated/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/generated/pyart.config.FileMetadata.rst", "API/generated/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/generated/pyart.config.get_field_colormap.rst", "API/generated/generated/pyart.config.get_field_limits.rst", "API/generated/generated/pyart.config.get_field_mapping.rst", "API/generated/generated/pyart.config.get_field_name.rst", "API/generated/generated/pyart.config.get_fillvalue.rst", "API/generated/generated/pyart.config.get_metadata.rst", "API/generated/generated/pyart.config.load_config.rst", "API/generated/generated/pyart.core.Grid.rst", "API/generated/generated/pyart.core.Grid.add_field.rst", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.get_projparams.rst", "API/generated/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/generated/pyart.core.Grid.projection_proj.rst", "API/generated/generated/pyart.core.Grid.to_xarray.rst", "API/generated/generated/pyart.core.Grid.write.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/generated/pyart.core.Radar.rst", "API/generated/generated/pyart.core.Radar.add_field.rst", "API/generated/generated/pyart.core.Radar.add_field_like.rst", "API/generated/generated/pyart.core.Radar.add_filter.rst", "API/generated/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/generated/pyart.core.Radar.get_elevation.rst", "API/generated/generated/pyart.core.Radar.get_end.rst", "API/generated/generated/pyart.core.Radar.get_field.rst", "API/generated/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/generated/pyart.core.Radar.get_slice.rst", "API/generated/generated/pyart.core.Radar.get_start.rst", "API/generated/generated/pyart.core.Radar.get_start_end.rst", "API/generated/generated/pyart.core.Radar.info.rst", "API/generated/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/generated/pyart.core.Radar.iter_end.rst", "API/generated/generated/pyart.core.Radar.iter_field.rst", "API/generated/generated/pyart.core.Radar.iter_slice.rst", "API/generated/generated/pyart.core.Radar.iter_start.rst", "API/generated/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.info.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/generated/pyart.correct.calculate_attenuation.rst", "API/generated/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/generated/pyart.correct.correct_bias.rst", "API/generated/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/generated/pyart.correct.correct_sys_phase.rst", "API/generated/generated/pyart.correct.correct_visibility.rst", "API/generated/generated/pyart.correct.correct_vpr.rst", "API/generated/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/generated/pyart.correct.dealias_fourdd.rst", "API/generated/generated/pyart.correct.dealias_region_based.rst", "API/generated/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/generated/pyart.correct.despeckle_field.rst", "API/generated/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/generated/pyart.correct.est_zdr_precip.rst", "API/generated/generated/pyart.correct.est_zdr_snow.rst", "API/generated/generated/pyart.correct.find_objects.rst", "API/generated/generated/pyart.correct.get_mask_fzl.rst", "API/generated/generated/pyart.correct.get_sun_hits.rst", "API/generated/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/generated/pyart.correct.phase_proc_lp.rst", "API/generated/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/generated/pyart.correct.scanning_losses.rst", "API/generated/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/generated/pyart.correct.smooth_masked.rst", "API/generated/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/generated/pyart.correct.sun_position_mfr.rst", "API/generated/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/generated/pyart.correct.sun_power.rst", "API/generated/generated/pyart.correct.sun_retrieval.rst", "API/generated/generated/pyart.exceptions.DeprecatedAttribute.rst", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName.rst", "API/generated/generated/pyart.exceptions.MissingOptionalDependency.rst", "API/generated/generated/pyart.exceptions._deprecated_alias.rst", "API/generated/generated/pyart.filters.GateFilter.rst", "API/generated/generated/pyart.filters.GateFilter.copy.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/generated/pyart.filters.birds_gate_filter.rst", "API/generated/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.GridMapDisplay.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latlon_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latlon_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.RadarDisplay.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/generated/pyart.io.make_time_unit_str.rst", "API/generated/generated/pyart.io.prepare_for_read.rst", "API/generated/generated/pyart.io.read.rst", "API/generated/generated/pyart.io.read_arm_sonde.rst", "API/generated/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/generated/pyart.io.read_cfradial.rst", "API/generated/generated/pyart.io.read_cfradial2.rst", "API/generated/generated/pyart.io.read_chl.rst", "API/generated/generated/pyart.io.read_grid.rst", "API/generated/generated/pyart.io.read_grid_mdv.rst", "API/generated/generated/pyart.io.read_mdv.rst", "API/generated/generated/pyart.io.read_nexrad_archive.rst", "API/generated/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/generated/pyart.io.read_nexrad_level3.rst", "API/generated/generated/pyart.io.read_rsl.rst", "API/generated/generated/pyart.io.read_sigmet.rst", "API/generated/generated/pyart.io.read_uf.rst", "API/generated/generated/pyart.io.write_cfradial.rst", "API/generated/generated/pyart.io.write_grid.rst", "API/generated/generated/pyart.io.write_grid_geotiff.rst", "API/generated/generated/pyart.io.write_grid_mdv.rst", "API/generated/generated/pyart.io.write_uf.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/generated/pyart.map.example_roi_func_constant.rst", "API/generated/generated/pyart.map.example_roi_func_dist.rst", "API/generated/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/generated/pyart.map.grid_from_radars.rst", "API/generated/generated/pyart.map.map_gates_to_grid.rst", "API/generated/generated/pyart.map.map_to_grid.rst", "API/generated/generated/pyart.retrieve._destandardize.rst", "API/generated/generated/pyart.retrieve._get_res_vol_sides.rst", "API/generated/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/generated/pyart.retrieve.compute_ccor.rst", "API/generated/generated/pyart.retrieve.compute_cdr.rst", "API/generated/generated/pyart.retrieve.compute_centroids.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_evp.rst", "API/generated/generated/pyart.retrieve.compute_iq.rst", "API/generated/generated/pyart.retrieve.compute_l.rst", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/generated/pyart.retrieve.compute_qvp.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/generated/pyart.retrieve.compute_rcs.rst", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/generated/pyart.retrieve.compute_snr.rst", "API/generated/generated/pyart.retrieve.compute_spectra.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/generated/pyart.retrieve.compute_svp.rst", "API/generated/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/generated/pyart.retrieve.compute_vp.rst", "API/generated/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/generated/pyart.retrieve.detect_ml.rst", "API/generated/generated/pyart.retrieve.determine_medoids.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/generated/pyart.retrieve.gecsx.rst", "API/generated/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/generated/pyart.retrieve.get_freq_band.rst", "API/generated/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/generated/pyart.retrieve.grid_shift.rst", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/generated/pyart.retrieve.select_samples.rst", "API/generated/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/generated/pyart.retrieve.vad_browning.rst", "API/generated/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.convert_data.rst", "API/generated/pyart.aux_io.get_library.rst", "API/generated/pyart.aux_io.read_bin.rst", "API/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/pyart.aux_io.read_cf1.rst", "API/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_file_c.rst", "API/generated/pyart.aux_io.read_file_py.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_gif.rst", "API/generated/pyart.aux_io.read_grib.rst", "API/generated/pyart.aux_io.read_hpl.rst", "API/generated/pyart.aux_io.read_iq.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_metranet.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_png.rst", "API/generated/pyart.aux_io.read_product_c.rst", "API/generated/pyart.aux_io.read_product_py.rst", "API/generated/pyart.aux_io.read_psr_cpi_header.rst", "API/generated/pyart.aux_io.read_psr_header.rst", "API/generated/pyart.aux_io.read_psr_spectra.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.read_spectra.rst", "API/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.aux_io.write_spectra.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.info.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.correct_sys_phase.rst", "API/generated/pyart.correct.correct_visibility.rst", "API/generated/pyart.correct.correct_vpr.rst", "API/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/pyart.correct.est_zdr_precip.rst", "API/generated/pyart.correct.est_zdr_snow.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.gauss_fit.rst", "API/generated/pyart.correct.get_mask_fzl.rst", "API/generated/pyart.correct.get_sun_hits.rst", "API/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/pyart.correct.retrieval_result.rst", "API/generated/pyart.correct.scanning_losses.rst", "API/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/pyart.correct.smooth_masked.rst", "API/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/pyart.correct.sun_position_mfr.rst", "API/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/pyart.correct.sun_power.rst", "API/generated/pyart.correct.sun_retrieval.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.birds_gate_filter.rst", "API/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latlon_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latlon_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.make_time_unit_str.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_cfradial2.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.get_earth_radius.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.map.polar_to_cartesian.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/pyart.retrieve.compute_ccor.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_centroids.rst", "API/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_iq.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/pyart.retrieve.compute_rcs.rst", "API/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_spectra.rst", "API/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/pyart.retrieve.detect_ml.rst", "API/generated/pyart.retrieve.determine_medoids.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.gecsx.rst", "API/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.select_samples.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.add_field.rst", "API/generated/pyart.testing.RadarSpectra.add_field_like.rst", "API/generated/pyart.testing.RadarSpectra.add_filter.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.testing.RadarSpectra.get_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.get_elevation.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_field.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_area.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.info.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.colocated_gates.rst", "API/generated/pyart.util.colocated_gates2.rst", "API/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/pyart.util.compute_corr.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.compute_mse.rst", "API/generated/pyart.util.compute_nse.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/pyart.util.find_neighbour_gates.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/pyart.util.get_ivic_pct.rst", "API/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/pyart.util.get_target_elevations.rst", "API/generated/pyart.util.grid_texture_2d.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interpol_spectra.rst", "API/generated/pyart.util.intersection.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/pyart.util.ivic_pct_table.rst", "API/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.join_spectra.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.radar_from_spectra.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.subset_radar_spectra.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "changelog.md", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_spectra", "pyart.bridge.texture_of_complex_phase", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions.DeprecatedAttribute", "pyart.exceptions.DeprecatedFunctionName", "pyart.exceptions.MissingOptionalDependency", "pyart.exceptions._deprecated_alias", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_latlon_level", "pyart.graph.GridMapDisplay.plot_latlon_slice", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.__contains__", "pyart.lazydict.LazyLoadDict.__delattr__", "pyart.lazydict.LazyLoadDict.__delitem__", "pyart.lazydict.LazyLoadDict.__dir__", "pyart.lazydict.LazyLoadDict.__eq__", "pyart.lazydict.LazyLoadDict.__format__", "pyart.lazydict.LazyLoadDict.__ge__", "pyart.lazydict.LazyLoadDict.__getattribute__", "pyart.lazydict.LazyLoadDict.__getitem__", "pyart.lazydict.LazyLoadDict.__getstate__", "pyart.lazydict.LazyLoadDict.__gt__", "pyart.lazydict.LazyLoadDict.__init__", "pyart.lazydict.LazyLoadDict.__init_subclass__", "pyart.lazydict.LazyLoadDict.__iter__", "pyart.lazydict.LazyLoadDict.__le__", "pyart.lazydict.LazyLoadDict.__len__", "pyart.lazydict.LazyLoadDict.__lt__", "pyart.lazydict.LazyLoadDict.__ne__", "pyart.lazydict.LazyLoadDict.__new__", "pyart.lazydict.LazyLoadDict.__reduce__", "pyart.lazydict.LazyLoadDict.__reduce_ex__", "pyart.lazydict.LazyLoadDict.__repr__", "pyart.lazydict.LazyLoadDict.__setattr__", "pyart.lazydict.LazyLoadDict.__setitem__", "pyart.lazydict.LazyLoadDict.__sizeof__", "pyart.lazydict.LazyLoadDict.__str__", "pyart.lazydict.LazyLoadDict.__subclasshook__", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve._destandardize", "pyart.retrieve._get_res_vol_sides", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart._debug_info", "pyart.aux_io", "pyart.aux_io.convert_data", "pyart.aux_io.get_library", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_file_c", "pyart.aux_io.read_file_py", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_product_c", "pyart.aux_io.read_product_py", "pyart.aux_io.read_psr_cpi_header", "pyart.aux_io.read_psr_header", "pyart.aux_io.read_psr_spectra", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.read_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.gauss_fit", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.retrieval_result", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_latlon_level", "pyart.graph.GridMapDisplay.plot_latlon_slice", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.get_earth_radius", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.map.polar_to_cartesian", "pyart.retrieve", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.add_field", "pyart.testing.RadarSpectra.add_field_like", "pyart.testing.RadarSpectra.add_filter", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.extract_sweeps", "pyart.testing.RadarSpectra.get_azimuth", "pyart.testing.RadarSpectra.get_elevation", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_field", "pyart.testing.RadarSpectra.get_gate_area", "pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "pyart.testing.RadarSpectra.get_gate_x_y_z", "pyart.testing.RadarSpectra.get_nyquist_vel", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.info", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Changelog", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Installation", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"filenam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 50, 203, 239, 255, 270, 303, 329, 340, 366, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 591, 602, 786, 822, 838, 853, 886, 912, 923, 949, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 1121, 1252, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1303], "additional_metadata": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 30, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 539, 540, 541, 542, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 573, 581, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 40, 41, 51, 55, 58, 66, 67, 84, 87, 95, 96, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 160, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 425, 427, 435, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 539, 540, 541, 542, 543, 544, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 581, 583, 586, 591, 593, 603, 607, 610, 618, 619, 636, 639, 647, 648, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 734, 735, 736, 738, 739, 744, 775, 776, 777, 778, 779, 780, 781, 782, 788, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 843, 844, 845, 846, 847, 848, 849, 850, 851, 855, 858, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 888, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 921, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 947, 948, 949, 951, 952, 953, 954, 955, 956, 957, 958, 962, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 984, 986, 994, 997, 998, 1004, 1007, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1109, 1110, 1112, 1122, 1124, 1127, 1135, 1136, 1153, 1156, 1164, 1165, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1218, 1227, 1229, 1244, 1246, 1247, 1252, 1270, 1279, 1289, 1301, 1303], "chy0": [0, 2, 4, 5, 9, 539, 541, 543, 544, 551], "255": [0, 2, 4, 9, 394, 539, 541, 543, 551, 979, 1252], "0": [0, 1, 2, 4, 7, 9, 12, 14, 16, 17, 18, 20, 22, 23, 26, 27, 35, 43, 55, 60, 61, 62, 64, 65, 66, 67, 68, 84, 89, 90, 91, 93, 94, 95, 96, 97, 117, 120, 122, 123, 125, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 158, 165, 190, 193, 195, 196, 197, 198, 199, 200, 201, 217, 218, 225, 228, 229, 230, 231, 232, 233, 245, 246, 247, 263, 268, 284, 285, 292, 295, 296, 297, 298, 299, 301, 317, 318, 327, 328, 329, 332, 333, 334, 335, 336, 338, 354, 355, 364, 365, 366, 369, 370, 371, 372, 373, 390, 394, 441, 442, 443, 446, 452, 456, 458, 460, 461, 465, 468, 469, 470, 472, 473, 477, 478, 479, 484, 491, 492, 493, 494, 496, 498, 499, 501, 503, 504, 505, 507, 508, 511, 514, 517, 518, 519, 521, 522, 525, 526, 527, 528, 529, 530, 531, 534, 539, 540, 541, 543, 546, 551, 554, 556, 558, 559, 560, 562, 569, 570, 574, 575, 586, 595, 607, 612, 613, 614, 616, 617, 618, 619, 620, 636, 641, 642, 643, 645, 646, 647, 648, 649, 669, 672, 675, 700, 703, 704, 706, 707, 708, 710, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 734, 735, 736, 738, 739, 742, 747, 772, 775, 777, 778, 779, 780, 781, 782, 784, 800, 801, 808, 811, 812, 813, 814, 815, 816, 828, 829, 830, 846, 851, 867, 868, 875, 878, 879, 880, 881, 882, 884, 900, 901, 910, 911, 912, 915, 916, 917, 918, 919, 921, 937, 938, 947, 948, 949, 952, 953, 954, 955, 956, 975, 979, 1007, 1016, 1017, 1021, 1023, 1028, 1032, 1034, 1036, 1037, 1041, 1044, 1045, 1046, 1048, 1049, 1053, 1054, 1055, 1060, 1067, 1068, 1069, 1070, 1072, 1074, 1075, 1077, 1079, 1080, 1081, 1083, 1084, 1087, 1090, 1093, 1094, 1095, 1097, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1110, 1114, 1124, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1153, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1202, 1203, 1206, 1217, 1222, 1223, 1224, 1228, 1229, 1232, 1237, 1254, 1255, 1256, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303], "chx0": [0, 2, 4, 5, 9, 539, 541, 543, 544, 551], "160": [0, 2, 4, 9, 539, 541, 543, 551, 1291, 1299], "xre": [0, 1, 7, 9, 20, 539, 540, 546, 551, 562], "1": [0, 1, 3, 4, 5, 7, 9, 12, 16, 17, 18, 20, 24, 26, 27, 41, 55, 65, 84, 94, 113, 114, 117, 120, 125, 126, 131, 132, 133, 135, 143, 144, 145, 146, 147, 148, 159, 178, 193, 232, 246, 268, 298, 335, 372, 380, 386, 387, 388, 393, 441, 442, 445, 451, 452, 456, 461, 463, 465, 469, 470, 473, 478, 479, 484, 491, 492, 496, 499, 501, 508, 511, 512, 518, 521, 523, 525, 527, 529, 533, 534, 539, 540, 542, 543, 544, 546, 551, 554, 558, 559, 560, 562, 571, 574, 575, 593, 607, 617, 636, 646, 665, 666, 669, 672, 688, 706, 707, 712, 713, 714, 716, 725, 726, 727, 729, 730, 731, 743, 760, 775, 815, 829, 851, 881, 918, 955, 965, 971, 972, 973, 978, 1016, 1017, 1020, 1027, 1028, 1032, 1037, 1039, 1041, 1045, 1046, 1049, 1054, 1055, 1060, 1067, 1068, 1072, 1075, 1077, 1084, 1087, 1088, 1094, 1097, 1099, 1101, 1103, 1105, 1109, 1110, 1112, 1124, 1134, 1153, 1163, 1202, 1203, 1204, 1206, 1216, 1217, 1223, 1229, 1235, 1236, 1243, 1251, 1254, 1255, 1259, 1263, 1264, 1265, 1268, 1269, 1270, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1289, 1290, 1291, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "yre": [0, 1, 7, 9, 20, 539, 540, 546, 551, 562], "nx": [0, 1, 7, 9, 20, 41, 539, 540, 546, 551, 562, 593, 1112], "710": [0, 9, 539, 551, 1252], "ny": [0, 1, 7, 9, 20, 41, 539, 540, 546, 551, 562, 593, 1112], "640": [0, 9, 539, 551, 1252], "nz": [0, 1, 7, 9, 20, 41, 539, 540, 546, 551, 562, 593, 1112], "kwarg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 133, 134, 135, 217, 218, 225, 229, 230, 231, 232, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 263, 264, 265, 266, 267, 284, 285, 292, 296, 297, 298, 317, 318, 325, 326, 327, 328, 329, 330, 333, 334, 335, 354, 355, 362, 363, 364, 365, 366, 367, 370, 371, 372, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 416, 440, 441, 442, 521, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 554, 556, 557, 558, 559, 560, 561, 562, 568, 569, 570, 571, 572, 573, 714, 715, 716, 800, 801, 808, 812, 813, 814, 815, 828, 829, 830, 831, 832, 833, 834, 835, 836, 843, 846, 847, 848, 849, 850, 867, 868, 875, 879, 880, 881, 900, 901, 908, 909, 910, 911, 912, 913, 916, 917, 918, 937, 938, 945, 946, 947, 948, 949, 950, 953, 954, 955, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 975, 976, 1015, 1016, 1017, 1097, 1211, 1212, 1213, 1214, 1215, 1252], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 101, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 215, 216, 217, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 325, 326, 327, 329, 330, 338, 362, 363, 364, 366, 367, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 406, 409, 411, 413, 421, 423, 426, 428, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 653, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 794, 798, 799, 800, 813, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 908, 909, 910, 912, 913, 921, 945, 946, 947, 949, 950, 958, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 985, 987, 992, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1158, 1170, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1254, 1255, 1257, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303, 1305], "read": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 165, 218, 229, 285, 296, 318, 333, 355, 370, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 581, 583, 675, 747, 801, 812, 868, 879, 901, 916, 938, 953, 961, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 981, 1252, 1254, 1255, 1257, 1258, 1261, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1274, 1276, 1279, 1280, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1295, 1296, 1297, 1299, 1300, 1301], "meteoswiss": [0, 9, 26, 27, 539, 551, 574, 575, 1252, 1290, 1291, 1303], "oper": [0, 1, 7, 9, 131, 132, 169, 171, 178, 185, 190, 390, 440, 523, 530, 539, 540, 546, 551, 679, 681, 688, 695, 700, 712, 713, 751, 753, 760, 767, 772, 975, 1015, 1099, 1106, 1289, 1302], "radar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 41, 49, 84, 86, 87, 89, 90, 91, 93, 96, 101, 113, 114, 115, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 159, 160, 165, 178, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 218, 223, 225, 229, 230, 231, 232, 247, 249, 250, 253, 263, 265, 267, 268, 284, 285, 290, 292, 296, 297, 298, 301, 317, 318, 323, 326, 328, 329, 333, 334, 335, 338, 354, 355, 360, 363, 365, 366, 370, 371, 372, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 539, 540, 542, 543, 544, 545, 546, 547, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 581, 583, 586, 592, 593, 601, 636, 638, 639, 641, 642, 643, 645, 648, 653, 665, 666, 667, 675, 688, 700, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 743, 744, 747, 760, 772, 775, 776, 777, 778, 779, 780, 781, 782, 784, 800, 801, 806, 808, 812, 813, 814, 815, 830, 832, 833, 836, 846, 848, 850, 851, 867, 868, 873, 875, 879, 880, 881, 884, 900, 901, 906, 909, 911, 912, 916, 917, 918, 921, 937, 938, 943, 946, 948, 949, 953, 954, 955, 962, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 1006, 1007, 1009, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1112, 1120, 1153, 1155, 1156, 1158, 1159, 1160, 1162, 1165, 1170, 1185, 1186, 1187, 1189, 1192, 1193, 1194, 1195, 1202, 1203, 1204, 1206, 1209, 1210, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1225, 1227, 1229, 1232, 1237, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1262, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1297, 1299, 1300, 1304], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 35, 41, 42, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 77, 78, 80, 84, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 106, 107, 109, 127, 128, 131, 132, 133, 134, 135, 139, 140, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 160, 169, 178, 190, 193, 201, 218, 220, 225, 228, 229, 230, 231, 232, 235, 245, 246, 247, 249, 250, 253, 254, 263, 265, 267, 268, 285, 287, 292, 295, 296, 297, 298, 301, 318, 320, 328, 329, 332, 333, 334, 335, 338, 355, 357, 365, 366, 369, 370, 371, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 440, 442, 443, 449, 451, 453, 456, 458, 460, 461, 462, 464, 465, 469, 475, 477, 478, 481, 484, 489, 490, 491, 492, 494, 495, 497, 498, 508, 510, 511, 514, 519, 520, 521, 522, 523, 525, 528, 529, 530, 531, 533, 534, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 586, 592, 593, 594, 607, 608, 609, 612, 613, 614, 616, 617, 618, 619, 620, 629, 630, 632, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 658, 659, 661, 679, 688, 700, 708, 709, 712, 713, 714, 715, 716, 720, 721, 723, 724, 725, 726, 727, 732, 734, 735, 736, 737, 738, 739, 744, 751, 760, 772, 775, 784, 801, 803, 808, 811, 812, 813, 814, 815, 818, 828, 829, 830, 832, 833, 836, 837, 846, 848, 850, 851, 868, 870, 875, 878, 879, 880, 881, 884, 901, 903, 911, 912, 915, 916, 917, 918, 921, 938, 940, 948, 949, 952, 953, 954, 955, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 1006, 1007, 1015, 1017, 1018, 1023, 1025, 1027, 1029, 1032, 1034, 1036, 1037, 1038, 1040, 1041, 1045, 1051, 1053, 1054, 1057, 1060, 1065, 1066, 1067, 1068, 1070, 1071, 1073, 1074, 1084, 1086, 1087, 1090, 1095, 1096, 1097, 1098, 1099, 1101, 1104, 1105, 1106, 1107, 1109, 1110, 1112, 1113, 1124, 1125, 1126, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1146, 1147, 1149, 1153, 1154, 1155, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1175, 1176, 1178, 1183, 1189, 1202, 1203, 1227, 1246, 1247, 1250, 1252, 1254, 1255, 1257, 1258, 1261, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1282, 1284, 1286, 1287, 1289, 1291, 1293, 1294, 1295, 1296, 1297, 1301, 1303], "binari": [0, 1, 7, 16, 17, 18, 26, 27, 28, 376, 539, 540, 546, 558, 559, 560, 574, 575, 577, 961], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 40, 50, 55, 72, 84, 101, 122, 123, 124, 129, 133, 134, 135, 137, 138, 139, 140, 142, 146, 147, 150, 151, 152, 154, 155, 193, 194, 195, 196, 197, 198, 199, 200, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 446, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 474, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 495, 496, 497, 498, 511, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 583, 585, 586, 587, 588, 591, 602, 607, 624, 636, 653, 703, 704, 705, 710, 714, 715, 716, 718, 719, 720, 721, 724, 728, 729, 730, 734, 735, 736, 738, 739, 775, 776, 777, 778, 779, 780, 781, 782, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 1021, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1036, 1040, 1041, 1043, 1044, 1050, 1051, 1052, 1053, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1087, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1108, 1111, 1121, 1124, 1141, 1153, 1170, 1183, 1244, 1252, 1254, 1256, 1257, 1259, 1260, 1261, 1264, 1266, 1267, 1268, 1271, 1273, 1276, 1282, 1283, 1284, 1285, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1300, 1301, 1302, 1305], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 72, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 101, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 169, 171, 178, 185, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 586, 587, 590, 591, 593, 594, 595, 602, 603, 604, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 624, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 653, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 679, 681, 688, 695, 700, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747, 751, 753, 760, 767, 772, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 818, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 884, 885, 886, 887, 888, 889, 890, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 958, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1141, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1170, 1182, 1183, 1184, 1185, 1186, 1187, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1246, 1247, 1249, 1250, 1252, 1283, 1289, 1296, 1297, 1299, 1301, 1302, 1303], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 40, 41, 42, 50, 55, 56, 57, 59, 64, 84, 85, 86, 88, 93, 116, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 164, 169, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 583, 584, 586, 587, 591, 593, 594, 602, 607, 608, 609, 611, 616, 636, 637, 638, 640, 645, 668, 670, 671, 679, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 734, 735, 736, 737, 738, 739, 751, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 884, 885, 886, 887, 888, 889, 890, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 921, 922, 923, 924, 925, 926, 927, 937, 938, 939, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 1009, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1089, 1090, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1112, 1113, 1121, 1124, 1125, 1126, 1128, 1133, 1153, 1154, 1155, 1157, 1162, 1183, 1204, 1206, 1227, 1244, 1246, 1247, 1249, 1252], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 32, 34, 35, 36, 37, 40, 41, 42, 55, 56, 57, 59, 64, 72, 84, 85, 86, 88, 93, 101, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 164, 169, 193, 194, 195, 196, 197, 198, 199, 200, 218, 220, 225, 228, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 399, 405, 420, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 579, 581, 583, 585, 586, 587, 588, 591, 593, 594, 607, 608, 609, 611, 616, 624, 636, 637, 638, 640, 645, 653, 679, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 734, 735, 736, 738, 739, 751, 775, 776, 777, 778, 779, 780, 781, 782, 801, 803, 808, 811, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 912, 915, 916, 917, 918, 938, 940, 948, 949, 952, 953, 954, 955, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 979, 980, 981, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1089, 1090, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1112, 1113, 1124, 1125, 1126, 1128, 1133, 1141, 1153, 1154, 1155, 1157, 1162, 1170, 1183, 1196, 1202, 1203, 1204, 1227, 1244, 1249, 1252, 1259, 1296, 1301], "dict": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 29, 30, 33, 36, 41, 42, 44, 49, 55, 56, 84, 85, 116, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 201, 268, 301, 329, 338, 376, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 441, 442, 443, 447, 452, 453, 455, 456, 463, 466, 470, 471, 472, 473, 479, 480, 493, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 539, 540, 541, 542, 543, 544, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 565, 566, 569, 570, 571, 572, 573, 579, 581, 584, 587, 593, 594, 596, 601, 607, 608, 636, 637, 668, 670, 671, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 725, 726, 727, 729, 730, 734, 735, 736, 738, 739, 784, 851, 884, 912, 921, 961, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 981, 983, 1016, 1017, 1018, 1022, 1028, 1029, 1031, 1032, 1039, 1042, 1046, 1047, 1048, 1049, 1055, 1056, 1069, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1112, 1113, 1115, 1120, 1124, 1125, 1153, 1154, 1202, 1203, 1204, 1229, 1244, 1295], "option": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 41, 42, 43, 50, 51, 55, 56, 57, 58, 61, 62, 64, 66, 67, 72, 84, 87, 90, 91, 93, 95, 96, 113, 114, 115, 117, 118, 120, 122, 123, 124, 127, 128, 133, 134, 135, 136, 141, 142, 146, 147, 163, 165, 169, 171, 178, 185, 190, 218, 225, 229, 230, 231, 232, 234, 245, 247, 249, 250, 253, 260, 263, 265, 267, 285, 292, 296, 297, 298, 300, 318, 326, 327, 328, 329, 333, 334, 335, 337, 355, 363, 364, 365, 366, 370, 371, 372, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 442, 443, 446, 447, 455, 463, 465, 466, 480, 484, 485, 486, 487, 496, 498, 500, 501, 502, 503, 504, 505, 506, 508, 510, 511, 516, 517, 518, 521, 522, 523, 524, 530, 532, 533, 534, 539, 540, 541, 542, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 586, 593, 594, 595, 602, 603, 607, 608, 609, 610, 613, 614, 616, 618, 619, 624, 636, 639, 642, 643, 645, 647, 648, 665, 666, 667, 669, 670, 672, 675, 679, 681, 688, 695, 700, 703, 704, 705, 708, 709, 714, 715, 716, 717, 722, 724, 729, 730, 747, 751, 753, 760, 767, 772, 801, 808, 812, 813, 814, 815, 817, 828, 830, 832, 833, 836, 843, 846, 848, 850, 868, 875, 879, 880, 881, 883, 901, 909, 910, 911, 912, 916, 917, 918, 920, 938, 946, 947, 948, 949, 953, 954, 955, 957, 958, 961, 962, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 1017, 1018, 1021, 1022, 1031, 1039, 1041, 1042, 1056, 1060, 1061, 1062, 1063, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1086, 1087, 1092, 1093, 1094, 1097, 1098, 1099, 1100, 1106, 1108, 1109, 1110, 1112, 1113, 1114, 1121, 1124, 1125, 1126, 1127, 1130, 1131, 1133, 1135, 1136, 1141, 1153, 1156, 1159, 1160, 1162, 1164, 1165, 1209, 1210, 1216, 1232, 1244, 1249, 1250, 1252, 1289, 1301], "dictionari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36, 39, 41, 42, 55, 56, 57, 59, 84, 85, 86, 88, 116, 118, 119, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 141, 143, 144, 145, 146, 147, 150, 151, 152, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 400, 426, 428, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 464, 465, 470, 474, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 518, 524, 525, 526, 527, 530, 531, 532, 539, 540, 541, 542, 543, 544, 545, 546, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 565, 566, 569, 570, 571, 572, 573, 577, 579, 581, 583, 584, 587, 590, 593, 594, 607, 608, 609, 611, 636, 637, 638, 640, 668, 670, 671, 703, 704, 705, 706, 707, 712, 713, 714, 715, 716, 717, 722, 725, 726, 727, 729, 730, 734, 735, 736, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 985, 987, 1015, 1016, 1017, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1030, 1032, 1033, 1034, 1035, 1036, 1040, 1041, 1046, 1050, 1051, 1052, 1053, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1094, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1112, 1113, 1124, 1125, 1126, 1128, 1153, 1154, 1155, 1157, 1182, 1202, 1203, 1204, 1244, 1260, 1296, 1301], "retriev": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 31, 33, 41, 61, 62, 64, 65, 66, 67, 68, 90, 91, 93, 94, 95, 96, 97, 131, 132, 144, 160, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 582, 584, 593, 613, 614, 616, 617, 618, 619, 620, 642, 643, 645, 646, 647, 648, 649, 712, 713, 726, 732, 744, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 1112, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1202, 1203, 1217, 1252, 1288, 1289, 1290, 1291, 1297, 1303], "metadata": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 39, 40, 41, 42, 55, 56, 57, 84, 85, 86, 122, 123, 124, 133, 134, 135, 137, 138, 139, 140, 146, 147, 150, 151, 152, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 395, 446, 453, 472, 473, 479, 493, 498, 511, 519, 520, 521, 522, 523, 524, 525, 526, 527, 532, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 574, 575, 577, 579, 581, 582, 584, 590, 591, 593, 594, 607, 608, 609, 636, 637, 638, 703, 704, 705, 714, 715, 716, 718, 719, 720, 721, 729, 730, 734, 735, 736, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 980, 1018, 1021, 1023, 1029, 1048, 1049, 1055, 1069, 1074, 1087, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1108, 1112, 1113, 1124, 1125, 1126, 1153, 1154, 1155, 1182, 1184, 1189, 1244, 1252, 1260, 1277, 1278, 1282, 1301], "dure": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 30, 128, 133, 134, 135, 178, 190, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 496, 521, 530, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 581, 688, 700, 709, 714, 715, 716, 760, 772, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 1072, 1097, 1106, 1302, 1305], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 35, 40, 41, 43, 55, 57, 58, 61, 62, 64, 66, 67, 68, 84, 86, 87, 90, 91, 93, 95, 96, 97, 116, 118, 119, 122, 123, 124, 128, 133, 134, 135, 138, 139, 140, 141, 142, 144, 146, 147, 150, 151, 152, 165, 169, 178, 193, 194, 195, 196, 197, 198, 199, 200, 217, 247, 284, 301, 317, 329, 338, 354, 366, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 410, 424, 435, 441, 442, 445, 447, 456, 461, 469, 471, 478, 491, 492, 494, 496, 508, 509, 510, 511, 521, 522, 523, 527, 530, 533, 534, 535, 539, 540, 541, 542, 543, 544, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 586, 591, 593, 595, 607, 609, 610, 613, 614, 616, 618, 619, 620, 636, 638, 639, 642, 643, 645, 647, 648, 649, 668, 670, 671, 675, 679, 688, 703, 704, 705, 709, 714, 715, 716, 719, 720, 721, 722, 724, 726, 728, 729, 730, 734, 735, 736, 747, 751, 760, 775, 776, 777, 778, 779, 780, 781, 782, 800, 830, 867, 884, 900, 912, 921, 937, 949, 958, 962, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 983, 994, 996, 1004, 1007, 1009, 1016, 1017, 1020, 1022, 1023, 1032, 1037, 1045, 1047, 1054, 1067, 1068, 1070, 1072, 1084, 1085, 1086, 1087, 1097, 1098, 1099, 1103, 1106, 1109, 1110, 1112, 1114, 1124, 1126, 1127, 1130, 1131, 1133, 1135, 1136, 1137, 1153, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1189, 1201, 1216, 1226, 1227, 1232, 1235, 1236, 1237, 1250, 1251, 1254, 1255, 1259, 1260, 1263, 1264, 1268, 1269, 1270, 1271, 1274, 1280, 1287, 1289, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 35, 40, 41, 42, 43, 48, 55, 57, 58, 65, 66, 67, 68, 72, 84, 86, 87, 94, 95, 96, 97, 101, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 144, 146, 147, 149, 150, 151, 152, 153, 154, 160, 163, 165, 167, 169, 170, 171, 172, 174, 176, 177, 178, 181, 183, 184, 185, 186, 188, 190, 191, 193, 196, 197, 203, 205, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 285, 286, 287, 290, 291, 292, 295, 296, 297, 298, 301, 303, 305, 318, 319, 320, 323, 324, 328, 329, 332, 333, 334, 335, 338, 340, 342, 355, 356, 357, 360, 361, 365, 366, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 410, 424, 431, 432, 435, 440, 441, 442, 445, 447, 452, 454, 456, 460, 461, 462, 465, 469, 470, 471, 475, 478, 482, 484, 491, 492, 494, 496, 499, 500, 501, 504, 505, 509, 510, 511, 514, 518, 519, 521, 522, 523, 525, 526, 527, 529, 530, 533, 539, 540, 541, 542, 543, 544, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 573, 574, 575, 577, 578, 586, 591, 593, 594, 595, 600, 607, 609, 610, 617, 618, 619, 620, 624, 636, 638, 639, 646, 647, 648, 649, 653, 665, 668, 669, 670, 671, 672, 675, 677, 679, 680, 681, 682, 684, 686, 687, 688, 691, 693, 694, 695, 696, 698, 700, 701, 703, 704, 705, 706, 708, 712, 713, 714, 715, 716, 717, 718, 721, 722, 723, 724, 726, 728, 729, 730, 733, 734, 735, 736, 737, 738, 744, 747, 749, 751, 752, 753, 754, 756, 758, 759, 760, 763, 765, 766, 767, 768, 770, 772, 773, 775, 778, 779, 786, 788, 801, 802, 803, 806, 807, 808, 811, 812, 813, 814, 815, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 843, 844, 845, 846, 847, 848, 849, 850, 853, 855, 868, 869, 870, 873, 874, 875, 878, 879, 880, 881, 884, 886, 888, 901, 902, 903, 906, 907, 911, 912, 915, 916, 917, 918, 921, 923, 925, 938, 939, 940, 943, 944, 948, 949, 952, 953, 954, 955, 958, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 990, 991, 994, 996, 1001, 1002, 1004, 1007, 1015, 1016, 1017, 1018, 1020, 1022, 1023, 1028, 1030, 1032, 1036, 1037, 1038, 1041, 1045, 1046, 1047, 1051, 1054, 1058, 1060, 1067, 1068, 1070, 1072, 1075, 1076, 1077, 1080, 1081, 1085, 1086, 1087, 1090, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1105, 1106, 1109, 1112, 1113, 1114, 1119, 1124, 1126, 1127, 1134, 1135, 1136, 1137, 1141, 1153, 1155, 1156, 1163, 1164, 1165, 1166, 1170, 1189, 1201, 1202, 1203, 1209, 1210, 1216, 1217, 1219, 1226, 1227, 1229, 1232, 1235, 1236, 1237, 1239, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1254, 1259, 1260, 1263, 1268, 1269, 1270, 1271, 1274, 1279, 1280, 1287, 1289, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "us": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 40, 41, 43, 55, 57, 64, 66, 67, 84, 86, 93, 95, 96, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 165, 178, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 305, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 340, 342, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 369, 370, 371, 372, 374, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 424, 440, 441, 442, 443, 446, 448, 449, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 511, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 568, 569, 570, 571, 572, 573, 574, 575, 579, 581, 586, 591, 593, 595, 607, 609, 616, 618, 619, 636, 638, 645, 647, 648, 668, 669, 670, 671, 672, 675, 688, 700, 703, 704, 705, 706, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 747, 760, 772, 775, 776, 777, 778, 779, 780, 781, 782, 784, 786, 788, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 855, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 884, 886, 888, 900, 901, 902, 903, 904, 905, 906, 907, 910, 911, 912, 914, 915, 916, 917, 918, 920, 921, 923, 925, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 949, 951, 952, 953, 954, 955, 957, 958, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 978, 979, 980, 981, 983, 1007, 1015, 1016, 1017, 1018, 1021, 1023, 1024, 1025, 1026, 1027, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1087, 1090, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1114, 1124, 1126, 1133, 1135, 1136, 1153, 1155, 1162, 1164, 1165, 1189, 1196, 1201, 1203, 1204, 1206, 1209, 1210, 1216, 1217, 1232, 1233, 1237, 1239, 1244, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1262, 1266, 1267, 1268, 1269, 1271, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1285, 1287, 1289, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 40, 56, 57, 85, 86, 122, 123, 124, 133, 134, 135, 136, 146, 147, 165, 169, 171, 178, 185, 190, 193, 196, 197, 301, 338, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 442, 497, 518, 525, 526, 539, 540, 541, 542, 543, 544, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 573, 574, 575, 577, 591, 608, 609, 637, 638, 675, 679, 681, 688, 695, 700, 703, 704, 705, 714, 715, 716, 717, 728, 729, 730, 747, 751, 753, 760, 767, 772, 775, 778, 779, 884, 921, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 981, 1017, 1023, 1073, 1094, 1101, 1102, 1125, 1126, 1154, 1155, 1184, 1250, 1295], "success": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976], "unless": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 68, 97, 116, 118, 119, 135, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 395, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 620, 649, 668, 670, 671, 716, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 980, 1137, 1166], "explicitli": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976], "includ": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 28, 30, 32, 55, 60, 66, 67, 84, 89, 95, 96, 122, 123, 124, 133, 134, 135, 136, 138, 139, 141, 142, 150, 151, 152, 165, 169, 171, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 441, 442, 517, 533, 539, 540, 541, 542, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 573, 576, 577, 581, 583, 607, 612, 618, 619, 636, 641, 647, 648, 675, 679, 681, 685, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 714, 715, 716, 717, 719, 720, 722, 724, 728, 734, 735, 736, 746, 747, 751, 753, 757, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 801, 808, 812, 813, 814, 815, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 1016, 1017, 1093, 1109, 1124, 1129, 1135, 1136, 1153, 1158, 1164, 1165, 1204, 1239, 1252, 1259, 1263, 1282, 1293, 1300, 1302, 1303], "A": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 29, 30, 41, 55, 57, 84, 86, 117, 120, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 146, 147, 150, 151, 152, 154, 155, 164, 165, 193, 194, 195, 196, 197, 198, 199, 200, 201, 235, 246, 254, 268, 301, 327, 338, 364, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 397, 440, 441, 442, 447, 451, 452, 461, 469, 496, 497, 498, 500, 508, 511, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 530, 532, 533, 534, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 579, 581, 593, 607, 609, 636, 638, 669, 672, 675, 703, 704, 705, 706, 707, 710, 712, 713, 714, 715, 716, 718, 719, 720, 721, 724, 728, 729, 730, 734, 735, 736, 738, 739, 747, 775, 776, 777, 778, 779, 780, 781, 782, 784, 818, 829, 837, 851, 884, 910, 921, 947, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 978, 982, 983, 996, 1015, 1016, 1017, 1022, 1023, 1027, 1028, 1037, 1045, 1072, 1073, 1074, 1076, 1084, 1087, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1108, 1109, 1110, 1112, 1124, 1126, 1153, 1155, 1227, 1252, 1271, 1289, 1293, 1303], "valu": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 35, 38, 40, 41, 55, 58, 84, 87, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 155, 160, 165, 167, 169, 170, 171, 173, 176, 178, 181, 183, 184, 185, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 218, 219, 220, 222, 225, 226, 227, 228, 229, 230, 231, 232, 243, 245, 246, 247, 249, 250, 253, 260, 261, 263, 265, 267, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 318, 319, 320, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 355, 356, 357, 359, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 404, 406, 408, 412, 414, 415, 420, 421, 431, 432, 441, 442, 443, 445, 447, 452, 456, 461, 466, 469, 473, 478, 479, 491, 492, 494, 496, 497, 498, 501, 504, 505, 508, 511, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 530, 533, 534, 537, 539, 540, 541, 542, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 569, 570, 571, 572, 573, 574, 575, 577, 586, 589, 591, 593, 607, 610, 636, 639, 668, 669, 670, 671, 672, 675, 677, 679, 680, 681, 683, 686, 688, 691, 693, 694, 695, 698, 700, 702, 703, 704, 705, 706, 707, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 728, 729, 730, 732, 734, 735, 736, 738, 739, 744, 747, 749, 751, 752, 753, 755, 758, 760, 763, 765, 766, 767, 770, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 801, 802, 803, 805, 808, 809, 810, 811, 812, 813, 814, 815, 826, 828, 829, 830, 832, 833, 836, 843, 844, 846, 848, 850, 868, 869, 870, 872, 875, 876, 877, 878, 879, 880, 881, 901, 902, 903, 905, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 938, 939, 940, 942, 945, 946, 947, 948, 949, 951, 952, 953, 954, 955, 958, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 990, 991, 996, 1001, 1002, 1016, 1017, 1020, 1022, 1023, 1028, 1032, 1037, 1042, 1045, 1049, 1054, 1055, 1067, 1068, 1070, 1072, 1073, 1074, 1077, 1080, 1081, 1084, 1087, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1106, 1109, 1110, 1112, 1124, 1127, 1153, 1156, 1185, 1186, 1187, 1201, 1206, 1216, 1223, 1227, 1230, 1231, 1233, 1235, 1237, 1252, 1260, 1263, 1268, 1271, 1287, 1288, 1289, 1296, 1297, 1300, 1303], "default": [0, 1, 2, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 36, 40, 41, 55, 61, 62, 64, 66, 67, 72, 84, 90, 91, 93, 95, 96, 101, 116, 117, 118, 119, 120, 122, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 146, 147, 150, 151, 152, 154, 155, 165, 169, 171, 178, 185, 190, 193, 194, 195, 196, 197, 198, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 225, 228, 229, 230, 231, 232, 234, 243, 245, 246, 247, 249, 250, 253, 260, 261, 263, 265, 267, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 292, 295, 296, 297, 298, 300, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 328, 329, 332, 333, 334, 335, 337, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 365, 366, 369, 370, 371, 372, 374, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 403, 410, 427, 442, 446, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 471, 474, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 495, 496, 497, 498, 501, 504, 505, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 533, 539, 540, 541, 545, 546, 550, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 574, 575, 577, 579, 587, 591, 593, 607, 613, 614, 616, 618, 619, 624, 636, 642, 643, 645, 647, 648, 653, 668, 669, 670, 671, 672, 675, 679, 681, 688, 695, 700, 703, 704, 705, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 726, 728, 729, 730, 734, 735, 736, 738, 739, 747, 751, 753, 760, 767, 772, 775, 776, 777, 778, 779, 780, 781, 782, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 808, 811, 812, 813, 814, 815, 817, 826, 828, 829, 830, 832, 833, 836, 843, 844, 846, 848, 850, 858, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 870, 875, 878, 879, 880, 881, 883, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 911, 912, 915, 916, 917, 918, 920, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 948, 949, 952, 953, 954, 955, 957, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 986, 998, 1017, 1021, 1023, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1036, 1040, 1041, 1043, 1044, 1047, 1050, 1051, 1052, 1053, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1071, 1072, 1073, 1074, 1077, 1080, 1081, 1086, 1087, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1108, 1109, 1112, 1124, 1130, 1131, 1133, 1135, 1136, 1141, 1153, 1159, 1160, 1162, 1164, 1165, 1170, 1185, 1186, 1187, 1204, 1206, 1216, 1217, 1244, 1252, 1279, 1280, 1289, 1293, 1302, 1303, 1305], "introduct": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 377, 382, 384, 385, 386, 387, 388, 389, 390, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 572, 962, 967, 969, 970, 971, 972, 973, 974, 975, 1303], "addit": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 30, 133, 134, 135, 141, 217, 218, 225, 229, 230, 231, 232, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 284, 285, 292, 296, 297, 298, 317, 318, 325, 326, 327, 328, 329, 330, 333, 334, 335, 354, 355, 362, 363, 364, 365, 366, 367, 370, 371, 372, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 440, 442, 470, 471, 496, 536, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 581, 714, 715, 716, 722, 800, 801, 808, 812, 813, 814, 815, 828, 829, 830, 831, 832, 833, 834, 835, 836, 846, 847, 848, 849, 850, 867, 868, 875, 879, 880, 881, 900, 901, 908, 909, 910, 911, 912, 913, 916, 917, 918, 937, 938, 945, 946, 947, 948, 949, 950, 953, 954, 955, 958, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 1007, 1015, 1017, 1046, 1047, 1072, 1227, 1252, 1257, 1259, 1286, 1289, 1293], "specif": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 122, 123, 124, 139, 140, 150, 151, 152, 178, 190, 338, 366, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 442, 497, 500, 501, 502, 504, 505, 510, 511, 518, 519, 520, 521, 522, 523, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 688, 700, 703, 704, 705, 720, 721, 734, 735, 736, 760, 772, 921, 949, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 1017, 1073, 1076, 1077, 1078, 1080, 1081, 1086, 1087, 1094, 1095, 1096, 1097, 1098, 1099, 1227, 1252, 1254, 1268, 1289, 1293, 1303, 1305], "specifi": [0, 1, 2, 3, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 41, 48, 55, 58, 66, 67, 84, 87, 95, 96, 116, 118, 119, 133, 134, 135, 169, 171, 185, 218, 220, 225, 229, 230, 231, 232, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 263, 264, 265, 266, 267, 285, 287, 292, 296, 297, 298, 318, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 355, 357, 362, 363, 364, 365, 366, 367, 370, 371, 372, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 431, 441, 442, 498, 521, 522, 523, 539, 540, 541, 542, 545, 546, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 573, 574, 575, 577, 593, 600, 607, 610, 618, 619, 636, 639, 647, 648, 668, 670, 671, 679, 681, 695, 714, 715, 716, 746, 751, 753, 767, 801, 803, 808, 812, 813, 814, 815, 828, 829, 830, 831, 832, 833, 834, 835, 836, 843, 846, 847, 848, 849, 850, 868, 870, 875, 879, 880, 881, 901, 903, 908, 909, 910, 911, 912, 913, 916, 917, 918, 938, 940, 945, 946, 947, 948, 949, 950, 953, 954, 955, 962, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 979, 980, 981, 982, 983, 990, 1001, 1007, 1016, 1017, 1074, 1097, 1098, 1099, 1112, 1119, 1124, 1127, 1135, 1136, 1153, 1156, 1164, 1165, 1204, 1244, 1249, 1252, 1255, 1259, 1299, 1300, 1302], "py": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 29, 40, 41, 55, 84, 116, 118, 119, 122, 123, 124, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 155, 165, 193, 194, 195, 196, 197, 198, 199, 200, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 301, 318, 320, 328, 329, 333, 334, 335, 338, 355, 357, 365, 366, 370, 371, 372, 382, 383, 384, 385, 389, 391, 394, 446, 447, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 474, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 495, 496, 497, 498, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 535, 536, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 574, 575, 578, 579, 580, 591, 592, 593, 607, 636, 668, 670, 671, 675, 703, 704, 705, 710, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 728, 729, 730, 734, 735, 736, 738, 739, 745, 747, 775, 776, 777, 778, 779, 780, 781, 782, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 884, 901, 903, 911, 912, 916, 917, 918, 921, 938, 940, 948, 949, 953, 954, 955, 967, 968, 969, 970, 974, 976, 979, 1006, 1018, 1021, 1022, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1036, 1040, 1041, 1043, 1044, 1050, 1051, 1052, 1053, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1087, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1108, 1112, 1124, 1153, 1196, 1220, 1221, 1244, 1251, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1302, 1305], "art": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 29, 40, 41, 55, 84, 116, 118, 119, 122, 123, 124, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 155, 165, 193, 194, 195, 196, 197, 198, 199, 200, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 301, 318, 320, 328, 329, 333, 334, 335, 338, 355, 357, 365, 366, 370, 371, 372, 382, 383, 384, 385, 389, 391, 394, 446, 447, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 474, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 495, 496, 497, 498, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 536, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 574, 575, 578, 579, 580, 591, 592, 593, 607, 636, 668, 670, 671, 675, 703, 704, 705, 710, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 728, 729, 730, 734, 735, 736, 738, 739, 745, 747, 775, 776, 777, 778, 779, 780, 781, 782, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 884, 901, 903, 911, 912, 916, 917, 918, 921, 938, 940, 948, 949, 953, 954, 955, 967, 968, 969, 970, 974, 976, 979, 1006, 1021, 1022, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1036, 1040, 1041, 1043, 1044, 1050, 1051, 1052, 1053, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1087, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1108, 1112, 1124, 1153, 1196, 1220, 1221, 1244, 1251, 1254, 1255, 1257, 1258, 1259, 1260, 1267, 1268, 1270, 1287, 1294, 1295, 1296, 1297, 1299, 1302, 1305], "configur": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 29, 34, 35, 37, 40, 122, 123, 124, 129, 133, 134, 135, 137, 138, 139, 140, 142, 146, 147, 150, 151, 152, 154, 155, 193, 194, 195, 196, 197, 198, 199, 200, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 446, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 474, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 495, 496, 497, 498, 511, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 539, 540, 541, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 579, 580, 585, 586, 588, 591, 703, 704, 705, 710, 714, 715, 716, 718, 719, 720, 721, 724, 728, 729, 730, 734, 735, 736, 738, 739, 775, 776, 777, 778, 779, 780, 781, 782, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 1021, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1036, 1040, 1041, 1043, 1044, 1050, 1051, 1052, 1053, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1087, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1108, 1244, 1252, 1259, 1263, 1288, 1303], "float": [0, 1, 2, 4, 5, 7, 9, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 35, 68, 97, 113, 114, 115, 117, 120, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 169, 193, 195, 196, 197, 198, 199, 200, 201, 202, 218, 220, 221, 225, 226, 228, 229, 230, 231, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 262, 263, 264, 265, 266, 267, 268, 269, 285, 287, 288, 292, 293, 295, 296, 297, 298, 301, 302, 318, 320, 321, 327, 328, 329, 330, 332, 333, 334, 335, 338, 339, 355, 357, 358, 364, 365, 366, 367, 369, 370, 371, 372, 394, 437, 438, 439, 440, 442, 443, 445, 446, 447, 452, 453, 456, 458, 461, 466, 468, 469, 470, 472, 473, 478, 479, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 537, 539, 540, 541, 543, 544, 546, 551, 554, 556, 558, 559, 560, 562, 569, 570, 571, 574, 575, 586, 620, 649, 665, 666, 667, 669, 672, 679, 703, 704, 705, 706, 707, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 751, 775, 777, 778, 779, 780, 781, 782, 784, 785, 801, 803, 804, 808, 809, 811, 812, 813, 814, 815, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 843, 845, 846, 847, 848, 849, 850, 851, 852, 868, 870, 871, 875, 876, 878, 879, 880, 881, 884, 885, 901, 903, 904, 910, 911, 912, 913, 915, 916, 917, 918, 921, 922, 938, 940, 941, 947, 948, 949, 950, 952, 953, 954, 955, 958, 979, 1007, 1008, 1010, 1011, 1012, 1013, 1015, 1017, 1020, 1021, 1022, 1028, 1029, 1032, 1034, 1037, 1042, 1044, 1045, 1046, 1048, 1049, 1054, 1055, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1137, 1166, 1184, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1237, 1245, 1246, 1247], "swiss": [0, 2, 4, 5, 9, 121, 539, 541, 543, 544, 551, 673], "coordin": [0, 1, 2, 4, 5, 7, 9, 20, 41, 43, 49, 55, 66, 84, 95, 113, 114, 115, 116, 117, 118, 119, 120, 121, 158, 207, 218, 225, 229, 230, 231, 232, 249, 250, 253, 263, 265, 267, 274, 285, 292, 296, 297, 298, 307, 318, 328, 329, 333, 334, 335, 344, 355, 365, 366, 370, 371, 372, 393, 440, 442, 492, 498, 511, 539, 540, 541, 543, 544, 546, 551, 562, 593, 595, 601, 607, 618, 636, 647, 665, 666, 667, 668, 669, 670, 671, 672, 673, 742, 790, 801, 808, 812, 813, 814, 815, 832, 833, 836, 846, 848, 850, 857, 868, 875, 879, 880, 881, 890, 901, 911, 912, 916, 917, 918, 927, 938, 948, 949, 953, 954, 955, 978, 1006, 1007, 1009, 1015, 1017, 1018, 1068, 1074, 1087, 1112, 1114, 1120, 1124, 1135, 1153, 1164, 1184, 1201, 1226, 1252, 1253, 1257, 1260, 1262, 1263, 1264, 1265, 1287, 1293, 1299, 1301], "posit": [0, 2, 4, 5, 9, 23, 24, 55, 84, 117, 120, 123, 124, 133, 143, 144, 145, 149, 157, 158, 160, 471, 473, 479, 498, 508, 521, 525, 526, 527, 533, 534, 539, 541, 543, 544, 551, 570, 571, 607, 636, 669, 672, 704, 705, 714, 725, 726, 727, 732, 733, 741, 742, 744, 1023, 1047, 1049, 1055, 1074, 1084, 1097, 1101, 1102, 1103, 1109, 1110, 1124, 1153, 1202, 1203, 1252, 1263, 1268, 1270, 1301], "south": [0, 2, 4, 5, 9, 539, 541, 543, 544, 551, 1018, 1272], "western": [0, 2, 4, 5, 9, 539, 541, 543, 544, 551], "point": [0, 1, 2, 4, 5, 7, 9, 20, 40, 41, 43, 57, 86, 118, 122, 123, 124, 138, 139, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 207, 221, 226, 232, 244, 250, 251, 262, 274, 288, 293, 298, 301, 307, 321, 326, 327, 330, 335, 344, 358, 363, 364, 367, 372, 384, 385, 388, 390, 394, 440, 441, 442, 444, 452, 461, 469, 472, 473, 478, 479, 491, 494, 496, 508, 525, 530, 539, 540, 541, 543, 544, 546, 551, 562, 591, 593, 595, 609, 638, 670, 703, 704, 705, 719, 720, 724, 725, 726, 727, 730, 733, 734, 735, 736, 737, 790, 804, 809, 815, 827, 833, 834, 845, 857, 871, 876, 881, 884, 890, 904, 909, 910, 913, 918, 927, 941, 946, 947, 950, 955, 969, 970, 973, 975, 979, 1015, 1016, 1017, 1028, 1037, 1045, 1048, 1049, 1054, 1055, 1067, 1070, 1072, 1084, 1101, 1106, 1112, 1114, 1126, 1155, 1184, 1204, 1206, 1216, 1217, 1221, 1223, 1232, 1235, 1250, 1252, 1257, 1269, 1276, 1286, 1289, 1292, 1293, 1297, 1299, 1301], "grid": [0, 1, 2, 4, 5, 7, 9, 10, 16, 20, 26, 35, 55, 84, 220, 222, 230, 232, 235, 239, 244, 245, 246, 247, 248, 251, 252, 254, 255, 260, 262, 263, 264, 266, 287, 289, 298, 320, 322, 335, 357, 359, 372, 383, 384, 393, 394, 395, 437, 438, 439, 440, 441, 442, 461, 469, 478, 491, 494, 496, 511, 516, 517, 530, 539, 540, 541, 543, 544, 546, 551, 552, 558, 562, 574, 586, 607, 636, 803, 805, 813, 815, 818, 822, 827, 828, 829, 830, 831, 834, 835, 837, 838, 843, 845, 846, 847, 849, 870, 872, 881, 903, 905, 918, 940, 942, 955, 968, 969, 978, 979, 980, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1037, 1045, 1054, 1067, 1070, 1072, 1087, 1092, 1093, 1106, 1124, 1153, 1184, 1188, 1190, 1191, 1212, 1226, 1228, 1246, 1247, 1252, 1257, 1262, 1266, 1267, 1270, 1280, 1283, 1285, 1289, 1293, 1294], "resolut": [0, 1, 7, 9, 20, 55, 84, 125, 126, 131, 132, 218, 220, 221, 225, 226, 229, 230, 231, 232, 246, 260, 285, 287, 288, 292, 293, 296, 297, 298, 318, 320, 321, 328, 329, 330, 333, 334, 335, 355, 357, 358, 365, 366, 367, 370, 371, 372, 386, 444, 452, 461, 469, 478, 491, 494, 496, 511, 515, 521, 527, 530, 539, 540, 546, 551, 562, 607, 636, 706, 707, 712, 713, 801, 803, 804, 808, 809, 812, 813, 814, 815, 829, 843, 868, 870, 871, 875, 876, 879, 880, 881, 901, 903, 904, 911, 912, 913, 916, 917, 918, 938, 940, 941, 948, 949, 950, 953, 954, 955, 971, 1018, 1028, 1037, 1045, 1054, 1067, 1070, 1072, 1087, 1091, 1097, 1103, 1106, 1124, 1153, 1217, 1260, 1273, 1276, 1297, 1299, 1300], "each": [0, 1, 7, 9, 20, 41, 49, 51, 55, 65, 84, 94, 122, 123, 124, 126, 134, 135, 136, 137, 138, 139, 142, 150, 151, 152, 160, 218, 225, 229, 230, 231, 249, 250, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 390, 394, 396, 440, 441, 442, 456, 492, 497, 498, 499, 508, 514, 515, 518, 525, 526, 527, 529, 531, 533, 539, 540, 546, 551, 562, 576, 593, 601, 603, 607, 617, 636, 646, 703, 704, 705, 707, 715, 716, 717, 718, 719, 720, 724, 734, 735, 736, 744, 801, 808, 812, 813, 814, 832, 833, 836, 846, 848, 850, 868, 875, 879, 880, 901, 911, 912, 916, 917, 938, 948, 949, 953, 954, 975, 979, 981, 1007, 1015, 1016, 1017, 1032, 1068, 1073, 1074, 1075, 1084, 1090, 1091, 1094, 1101, 1102, 1103, 1105, 1107, 1109, 1112, 1120, 1124, 1134, 1153, 1163, 1185, 1186, 1187, 1222, 1223, 1224, 1226, 1233, 1234, 1235, 1236, 1252, 1259, 1264, 1279, 1282, 1289, 1300, 1301, 1303], "km": [0, 1, 7, 9, 20, 113, 117, 120, 201, 221, 226, 227, 234, 268, 288, 293, 294, 300, 301, 321, 330, 331, 337, 338, 358, 366, 367, 368, 374, 445, 453, 466, 493, 496, 497, 511, 514, 515, 518, 521, 539, 540, 546, 551, 562, 665, 669, 672, 784, 804, 809, 810, 817, 851, 871, 876, 877, 883, 884, 904, 913, 914, 920, 921, 941, 949, 950, 951, 957, 1020, 1029, 1042, 1069, 1072, 1073, 1087, 1090, 1091, 1094, 1097, 1217, 1219, 1245, 1272, 1277, 1278, 1280, 1287, 1299], "int": [0, 1, 7, 9, 12, 14, 20, 24, 35, 41, 43, 55, 61, 62, 64, 65, 66, 67, 68, 84, 90, 91, 93, 94, 95, 96, 97, 124, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 150, 151, 152, 154, 155, 160, 178, 190, 194, 196, 203, 204, 205, 217, 221, 225, 226, 228, 229, 230, 232, 239, 240, 241, 242, 245, 246, 247, 255, 256, 257, 258, 260, 263, 270, 271, 272, 284, 288, 292, 293, 295, 296, 298, 303, 304, 305, 317, 321, 328, 329, 330, 332, 333, 335, 340, 341, 342, 354, 358, 365, 366, 367, 369, 370, 372, 394, 442, 447, 451, 452, 456, 460, 461, 465, 466, 467, 468, 469, 470, 471, 477, 478, 483, 484, 486, 487, 491, 496, 497, 499, 508, 511, 519, 520, 521, 523, 525, 527, 529, 531, 533, 534, 537, 539, 540, 546, 551, 554, 556, 562, 571, 586, 593, 595, 607, 613, 614, 616, 617, 618, 619, 620, 636, 642, 643, 645, 646, 647, 648, 649, 688, 700, 705, 710, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 725, 726, 729, 730, 732, 734, 735, 736, 738, 739, 744, 760, 772, 776, 778, 786, 787, 788, 800, 804, 808, 809, 811, 812, 813, 815, 822, 823, 824, 825, 828, 829, 830, 838, 839, 840, 841, 843, 846, 853, 854, 855, 867, 871, 875, 876, 878, 879, 881, 886, 887, 888, 900, 904, 911, 912, 913, 915, 916, 918, 923, 924, 925, 937, 941, 948, 949, 950, 952, 953, 955, 979, 1017, 1018, 1022, 1027, 1028, 1032, 1036, 1037, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1053, 1054, 1059, 1060, 1062, 1063, 1067, 1072, 1073, 1075, 1084, 1087, 1095, 1096, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1110, 1112, 1114, 1124, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1153, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1185, 1186, 1187, 1201, 1204, 1206, 1216, 1217, 1218, 1220, 1222, 1226, 1249, 1252, 1303], "dimens": [0, 1, 7, 9, 20, 41, 84, 133, 384, 442, 496, 510, 516, 521, 523, 530, 539, 540, 546, 551, 562, 593, 636, 714, 969, 1017, 1023, 1072, 1086, 1092, 1097, 1099, 1106, 1112, 1153, 1226, 1246, 1247, 1252, 1287, 1289, 1295, 1299, 1301], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 82, 83, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 166, 179, 180, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 239, 240, 241, 242, 255, 256, 257, 258, 269, 270, 271, 272, 273, 274, 302, 303, 304, 305, 306, 307, 339, 340, 341, 342, 343, 344, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 402, 404, 405, 408, 412, 413, 414, 415, 419, 423, 424, 426, 431, 432, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 579, 583, 584, 585, 586, 587, 588, 589, 590, 595, 596, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 629, 630, 631, 632, 633, 634, 635, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 676, 689, 690, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 761, 762, 775, 776, 777, 778, 779, 780, 781, 782, 785, 786, 787, 788, 789, 790, 822, 823, 824, 825, 838, 839, 840, 841, 852, 853, 854, 855, 856, 857, 885, 886, 887, 888, 889, 890, 922, 923, 924, 925, 926, 927, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 985, 990, 991, 1001, 1002, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1122, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1252, 1287, 1289, 1296, 1299, 1301, 1303], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 41, 42, 49, 50, 56, 57, 58, 60, 61, 62, 64, 72, 81, 84, 85, 86, 87, 89, 90, 91, 93, 101, 110, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 157, 158, 165, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 232, 235, 243, 245, 246, 254, 261, 268, 286, 298, 301, 319, 329, 335, 338, 356, 372, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 422, 423, 429, 430, 433, 436, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 525, 526, 527, 528, 532, 533, 534, 535, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 583, 593, 594, 601, 602, 608, 609, 610, 612, 613, 614, 616, 624, 633, 636, 637, 638, 639, 641, 642, 643, 645, 653, 662, 675, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 734, 735, 736, 738, 739, 741, 742, 747, 775, 776, 777, 778, 779, 780, 781, 782, 784, 802, 815, 818, 826, 828, 829, 837, 844, 851, 869, 881, 884, 902, 912, 918, 921, 939, 955, 960, 961, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 988, 989, 992, 995, 999, 1000, 1005, 1007, 1015, 1016, 1017, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1101, 1102, 1103, 1104, 1108, 1109, 1110, 1111, 1112, 1113, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1133, 1141, 1150, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1162, 1170, 1179, 1184, 1185, 1186, 1187, 1189, 1202, 1203, 1204, 1216, 1218, 1220, 1221, 1225, 1227, 1228, 1229, 1232, 1237, 1238, 1242, 1243, 1246, 1247, 1249, 1250, 1252, 1259, 1263, 1270, 1271, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1287, 1289, 1290, 1293, 1294, 1295, 1299, 1300, 1303], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 29, 35, 40, 41, 42, 43, 55, 56, 60, 61, 62, 64, 65, 66, 67, 68, 84, 85, 89, 90, 91, 93, 94, 95, 96, 97, 122, 123, 124, 125, 131, 132, 133, 134, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 193, 194, 195, 196, 197, 198, 199, 200, 207, 218, 225, 228, 229, 230, 231, 232, 234, 251, 274, 285, 292, 295, 296, 297, 298, 300, 307, 318, 328, 329, 332, 333, 334, 335, 337, 344, 355, 365, 366, 369, 370, 371, 372, 374, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 518, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 534, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 554, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 579, 586, 591, 593, 594, 595, 607, 608, 612, 613, 614, 616, 617, 618, 619, 620, 636, 637, 641, 642, 643, 645, 646, 647, 648, 649, 703, 704, 705, 706, 712, 713, 714, 715, 716, 722, 724, 725, 726, 727, 728, 729, 730, 734, 735, 736, 775, 776, 777, 778, 779, 780, 781, 782, 790, 801, 808, 811, 812, 813, 814, 815, 817, 834, 857, 868, 875, 878, 879, 880, 881, 883, 890, 901, 911, 912, 915, 916, 917, 918, 920, 927, 938, 948, 949, 952, 953, 954, 955, 957, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 978, 979, 980, 981, 983, 996, 1015, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1110, 1112, 1113, 1114, 1124, 1125, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1153, 1154, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1201, 1202, 1203, 1209, 1210, 1217, 1221, 1244, 1246, 1247, 1250, 1252, 1260, 1272, 1273, 1293, 1295, 1296, 1299, 1301, 1302, 1303, 1305], "1536": [1, 7, 540, 546], "dtype": [1, 6, 165, 442, 540, 545, 675, 747, 1017, 1252, 1295, 1297, 1301], "float32": [1, 14, 24, 395, 540, 556, 571, 980, 1252, 1287, 1295, 1297, 1301], "date_format": [1, 7, 20, 540, 546, 562], "y": [1, 7, 20, 41, 47, 49, 67, 75, 96, 104, 113, 114, 115, 116, 117, 118, 119, 120, 201, 203, 215, 218, 220, 223, 225, 228, 229, 230, 231, 232, 234, 245, 249, 250, 253, 263, 265, 267, 268, 270, 282, 285, 287, 290, 292, 295, 296, 297, 298, 300, 301, 303, 315, 318, 320, 323, 326, 328, 332, 333, 334, 335, 337, 338, 340, 352, 355, 357, 360, 363, 365, 369, 370, 371, 372, 374, 437, 438, 439, 440, 441, 442, 496, 516, 517, 530, 540, 546, 562, 593, 599, 601, 619, 627, 648, 656, 665, 666, 667, 668, 669, 670, 671, 672, 784, 786, 798, 801, 803, 806, 808, 811, 812, 813, 814, 815, 817, 828, 832, 833, 836, 846, 848, 850, 851, 853, 865, 868, 870, 873, 875, 878, 879, 880, 881, 883, 884, 886, 898, 901, 903, 906, 909, 911, 915, 916, 917, 918, 920, 921, 923, 935, 938, 940, 943, 946, 948, 952, 953, 954, 955, 957, 1007, 1011, 1012, 1013, 1015, 1016, 1017, 1072, 1092, 1093, 1106, 1112, 1118, 1120, 1136, 1144, 1165, 1173, 1184, 1226, 1263, 1269, 1270, 1279, 1280, 1287, 1289], "m": [1, 7, 12, 14, 20, 22, 23, 65, 68, 94, 97, 115, 121, 125, 126, 131, 132, 135, 142, 143, 148, 150, 151, 152, 156, 159, 193, 195, 199, 203, 270, 303, 340, 440, 452, 461, 466, 469, 471, 478, 491, 492, 494, 500, 511, 515, 516, 518, 521, 522, 525, 527, 528, 530, 538, 540, 546, 554, 556, 562, 569, 570, 617, 620, 646, 649, 667, 673, 706, 707, 712, 713, 716, 724, 725, 731, 734, 735, 736, 740, 743, 775, 777, 781, 786, 853, 886, 923, 1015, 1018, 1028, 1037, 1042, 1045, 1047, 1054, 1067, 1068, 1070, 1076, 1087, 1091, 1092, 1094, 1097, 1098, 1101, 1103, 1104, 1106, 1134, 1137, 1163, 1166, 1202, 1203, 1217, 1218, 1227, 1229, 1246, 1247, 1252, 1259, 1271, 1280, 1289, 1291, 1293, 1302, 1303], "d": [1, 7, 20, 124, 135, 203, 270, 303, 340, 397, 425, 427, 429, 430, 431, 432, 434, 435, 436, 478, 491, 498, 523, 534, 540, 546, 562, 705, 716, 786, 853, 886, 923, 983, 984, 986, 988, 989, 990, 991, 993, 994, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1054, 1067, 1074, 1099, 1110, 1287, 1303], "added_tim": [1, 7, 20, 540, 546, 562], "86400": [1, 540], "x_offset": [1, 7, 20, 540, 546, 562], "619652": [1, 7, 540, 546], "074056": [1, 7, 540, 546], "y_offset": [1, 7, 20, 540, 546, 562], "3526818": [1, 7, 540, 546], "337932": [1, 7, 540, 546], "lat_0": [1, 7, 20, 41, 55, 84, 117, 120, 329, 366, 540, 546, 562, 593, 607, 636, 669, 672, 912, 949, 1112, 1124, 1153, 1276], "90": [1, 7, 509, 540, 546, 1085, 1232, 1303], "lon_0": [1, 7, 20, 41, 55, 84, 117, 120, 329, 366, 540, 546, 562, 593, 607, 636, 669, 672, 912, 949, 1112, 1124, 1153, 1276], "proj": [1, 20, 41, 48, 55, 84, 116, 118, 119, 260, 338, 540, 562, 593, 600, 607, 636, 668, 670, 671, 843, 921, 1112, 1119, 1124, 1153, 1252], "gnom": [1, 540], "field_nam": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 30, 32, 42, 56, 57, 59, 64, 80, 85, 86, 88, 93, 109, 127, 130, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 443, 461, 469, 478, 491, 492, 494, 540, 542, 543, 544, 545, 546, 550, 552, 554, 555, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 573, 574, 575, 581, 583, 594, 608, 609, 611, 616, 632, 637, 638, 640, 645, 661, 708, 711, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 1018, 1037, 1045, 1054, 1067, 1068, 1070, 1113, 1125, 1126, 1128, 1133, 1149, 1154, 1155, 1157, 1162, 1178, 1204, 1246, 1247, 1263, 1299], "rainfall_accumul": [1, 540], "meteofr": [1, 7, 10, 20, 540, 546, 552, 562, 1293], "The": [1, 2, 6, 7, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 40, 41, 55, 84, 113, 117, 120, 121, 122, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 164, 194, 195, 199, 223, 246, 290, 323, 360, 366, 376, 377, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 410, 440, 441, 442, 443, 444, 447, 449, 452, 456, 461, 462, 465, 466, 468, 469, 478, 480, 481, 484, 486, 491, 492, 494, 496, 497, 498, 509, 511, 514, 516, 518, 519, 520, 521, 522, 523, 525, 526, 529, 530, 531, 533, 537, 540, 541, 545, 546, 553, 554, 556, 557, 558, 559, 560, 562, 567, 569, 570, 571, 572, 574, 575, 577, 578, 591, 593, 607, 636, 665, 669, 672, 673, 703, 704, 705, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 725, 726, 727, 733, 734, 735, 736, 737, 738, 739, 776, 777, 781, 806, 829, 873, 906, 943, 949, 961, 962, 967, 969, 970, 971, 972, 973, 974, 975, 977, 978, 979, 980, 981, 983, 1007, 1008, 1009, 1010, 1015, 1016, 1017, 1022, 1023, 1025, 1028, 1032, 1037, 1038, 1041, 1042, 1044, 1045, 1054, 1056, 1057, 1060, 1062, 1067, 1068, 1070, 1072, 1073, 1074, 1085, 1087, 1090, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1105, 1106, 1107, 1109, 1112, 1124, 1153, 1183, 1196, 1197, 1198, 1201, 1204, 1205, 1206, 1207, 1208, 1216, 1217, 1218, 1222, 1223, 1224, 1226, 1228, 1230, 1231, 1233, 1234, 1235, 1236, 1239, 1242, 1244, 1246, 1247, 1249, 1252, 1257, 1259, 1260, 1271, 1282, 1289, 1294, 1297, 1300, 1302], "stereopolar": [1, 7, 540, 546], "project": [1, 7, 19, 20, 41, 44, 48, 55, 84, 116, 117, 118, 119, 120, 223, 235, 245, 246, 247, 260, 290, 301, 323, 329, 360, 366, 384, 393, 394, 442, 461, 469, 478, 491, 494, 509, 540, 546, 561, 562, 578, 593, 596, 600, 607, 636, 668, 669, 670, 671, 672, 806, 818, 828, 829, 830, 843, 873, 884, 906, 912, 943, 949, 969, 978, 979, 1017, 1018, 1037, 1045, 1054, 1067, 1070, 1085, 1112, 1115, 1119, 1124, 1153, 1252, 1259, 1260, 1263, 1269, 1270, 1276, 1283, 1287, 1289, 1293, 1296, 1297, 1299, 1300, 1302], "type": [1, 6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 26, 27, 30, 36, 55, 84, 134, 135, 150, 151, 152, 153, 201, 268, 301, 338, 377, 382, 384, 385, 386, 387, 389, 390, 391, 395, 396, 443, 456, 461, 469, 478, 491, 494, 499, 501, 518, 521, 531, 540, 545, 554, 556, 557, 558, 559, 560, 569, 570, 571, 572, 574, 575, 581, 587, 607, 636, 715, 716, 734, 735, 736, 737, 784, 851, 884, 921, 962, 967, 969, 970, 971, 972, 974, 975, 976, 980, 981, 1032, 1037, 1045, 1054, 1067, 1070, 1075, 1077, 1094, 1097, 1107, 1124, 1153, 1204, 1206, 1252, 1301, 1303], "date": [1, 7, 20, 378, 379, 540, 546, 562, 963, 964, 1251, 1252, 1259, 1260], "format": [1, 7, 20, 24, 28, 49, 50, 55, 84, 203, 205, 218, 220, 225, 228, 229, 230, 231, 232, 270, 272, 285, 287, 292, 295, 296, 297, 298, 303, 305, 318, 320, 328, 329, 332, 333, 334, 335, 340, 342, 355, 357, 365, 366, 369, 370, 371, 372, 377, 387, 389, 391, 392, 393, 395, 536, 537, 540, 546, 562, 571, 577, 601, 602, 607, 636, 786, 788, 801, 803, 808, 811, 812, 813, 814, 815, 853, 855, 868, 870, 875, 878, 879, 880, 881, 886, 888, 901, 903, 911, 912, 915, 916, 917, 918, 923, 925, 938, 940, 948, 949, 952, 953, 954, 955, 959, 962, 972, 974, 976, 977, 978, 980, 1120, 1121, 1124, 1153, 1252, 1280, 1293, 1295], "second": [1, 7, 20, 51, 52, 53, 54, 57, 68, 86, 97, 113, 133, 390, 397, 508, 523, 533, 540, 546, 562, 603, 604, 605, 606, 609, 620, 638, 649, 665, 714, 975, 983, 1007, 1084, 1099, 1109, 1126, 1137, 1155, 1166, 1240, 1241, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1300, 1301, 1303], "add": [1, 7, 20, 42, 56, 57, 85, 86, 136, 147, 218, 220, 225, 228, 229, 230, 231, 232, 244, 245, 246, 247, 249, 250, 253, 260, 262, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 458, 461, 469, 478, 491, 494, 540, 546, 562, 594, 608, 609, 637, 638, 717, 730, 801, 803, 808, 811, 812, 813, 814, 815, 827, 828, 829, 830, 832, 833, 836, 843, 845, 846, 848, 850, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 912, 915, 916, 917, 918, 938, 940, 948, 949, 952, 953, 954, 955, 1034, 1037, 1045, 1054, 1067, 1070, 1113, 1125, 1126, 1154, 1155, 1252, 1263, 1268, 1269, 1270, 1279, 1280, 1282, 1287, 1289, 1290, 1297, 1302, 1303, 1305], "nomin": [1, 7, 12, 20, 22, 23, 540, 546, 554, 562, 569, 570], "time": [1, 7, 16, 20, 26, 28, 41, 49, 50, 55, 84, 131, 132, 133, 157, 158, 203, 205, 218, 220, 225, 229, 230, 231, 232, 270, 272, 285, 287, 292, 296, 297, 298, 303, 305, 318, 320, 328, 329, 333, 334, 335, 340, 342, 355, 357, 365, 366, 370, 371, 372, 375, 378, 379, 390, 392, 393, 442, 451, 460, 461, 468, 469, 477, 478, 491, 492, 494, 510, 516, 525, 527, 540, 546, 558, 562, 574, 577, 593, 601, 602, 607, 636, 712, 713, 714, 741, 742, 786, 788, 801, 803, 808, 812, 813, 814, 815, 853, 855, 868, 870, 875, 879, 880, 881, 886, 888, 901, 903, 911, 912, 916, 917, 918, 923, 925, 938, 940, 948, 949, 953, 954, 955, 960, 963, 964, 975, 977, 978, 1007, 1010, 1017, 1018, 1027, 1036, 1037, 1044, 1045, 1053, 1054, 1067, 1068, 1070, 1086, 1092, 1101, 1103, 1112, 1120, 1121, 1124, 1153, 1211, 1214, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1295, 1301, 1303, 1305], "24h": [1, 7, 540, 546], "accumul": [1, 7, 525, 540, 546, 1101, 1289], "mf": [1, 7, 143, 144, 145, 540, 546, 725, 726, 727], "x": [1, 7, 19, 20, 41, 47, 49, 67, 75, 84, 96, 104, 113, 114, 115, 116, 117, 118, 119, 120, 201, 207, 211, 218, 220, 223, 225, 228, 229, 230, 231, 232, 234, 245, 249, 250, 253, 263, 265, 267, 268, 274, 278, 285, 287, 290, 292, 295, 296, 297, 298, 300, 301, 307, 311, 318, 320, 323, 326, 328, 332, 333, 334, 335, 337, 338, 344, 348, 355, 357, 360, 363, 365, 369, 370, 371, 372, 374, 437, 438, 439, 440, 441, 442, 456, 496, 500, 513, 516, 517, 521, 522, 523, 530, 531, 540, 546, 561, 562, 593, 599, 601, 619, 627, 636, 648, 656, 665, 666, 667, 668, 669, 670, 671, 672, 784, 790, 794, 801, 803, 806, 808, 811, 812, 813, 814, 815, 817, 828, 832, 833, 836, 846, 848, 850, 851, 857, 861, 868, 870, 873, 875, 878, 879, 880, 881, 883, 884, 890, 894, 901, 903, 906, 909, 911, 915, 916, 917, 918, 920, 921, 927, 931, 938, 940, 943, 946, 948, 952, 953, 954, 955, 957, 1007, 1011, 1012, 1013, 1015, 1016, 1017, 1032, 1072, 1076, 1089, 1092, 1093, 1097, 1098, 1099, 1106, 1107, 1112, 1118, 1120, 1136, 1144, 1153, 1165, 1173, 1184, 1226, 1252, 1263, 1269, 1270, 1279, 1280, 1289, 1299, 1300, 1301, 1302], "offset": [1, 7, 16, 17, 18, 20, 26, 27, 28, 122, 129, 146, 147, 154, 155, 201, 268, 301, 327, 338, 364, 458, 468, 496, 540, 546, 558, 559, 560, 562, 574, 575, 577, 703, 710, 729, 730, 738, 739, 784, 851, 884, 910, 921, 947, 1034, 1044, 1072, 1232], "from": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 37, 40, 41, 44, 49, 52, 55, 57, 60, 64, 65, 66, 67, 84, 86, 89, 93, 94, 95, 96, 113, 114, 115, 117, 120, 121, 122, 123, 124, 128, 133, 134, 135, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 152, 160, 165, 169, 171, 178, 185, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 219, 220, 225, 228, 229, 230, 231, 232, 235, 243, 245, 246, 247, 249, 250, 253, 254, 260, 261, 263, 265, 267, 268, 285, 286, 287, 292, 295, 296, 297, 298, 301, 318, 319, 320, 326, 328, 329, 332, 333, 334, 335, 338, 355, 356, 357, 363, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 425, 433, 435, 437, 438, 439, 441, 442, 446, 447, 448, 449, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 508, 510, 511, 516, 517, 519, 520, 521, 523, 524, 525, 528, 530, 532, 533, 534, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 569, 570, 571, 572, 573, 574, 575, 576, 579, 585, 586, 587, 588, 591, 593, 596, 601, 604, 607, 609, 612, 616, 617, 618, 619, 636, 638, 641, 645, 646, 647, 648, 665, 666, 667, 669, 672, 673, 675, 679, 681, 688, 695, 700, 703, 704, 705, 709, 714, 715, 716, 719, 720, 724, 725, 726, 727, 728, 729, 730, 732, 734, 735, 736, 744, 746, 747, 751, 753, 760, 767, 772, 775, 776, 777, 778, 779, 780, 781, 782, 784, 801, 802, 803, 808, 811, 812, 813, 814, 815, 818, 826, 828, 829, 830, 832, 833, 836, 837, 843, 844, 846, 848, 850, 851, 868, 869, 870, 875, 878, 879, 880, 881, 884, 901, 902, 903, 909, 911, 912, 915, 916, 917, 918, 921, 938, 939, 940, 946, 948, 949, 952, 953, 954, 955, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 984, 992, 994, 997, 1004, 1006, 1009, 1011, 1012, 1013, 1016, 1017, 1018, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1084, 1086, 1087, 1092, 1093, 1095, 1096, 1097, 1099, 1100, 1101, 1104, 1106, 1108, 1109, 1110, 1112, 1115, 1120, 1124, 1126, 1129, 1133, 1134, 1135, 1136, 1153, 1155, 1158, 1162, 1163, 1164, 1165, 1189, 1201, 1209, 1210, 1216, 1219, 1220, 1221, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1242, 1244, 1252, 1255, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1270, 1271, 1273, 1276, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1295, 1299, 1300, 1301, 1303, 1305], "origin": [1, 7, 20, 41, 49, 133, 134, 135, 201, 268, 301, 338, 390, 392, 393, 397, 426, 442, 540, 546, 562, 593, 601, 714, 715, 716, 784, 851, 884, 921, 975, 977, 978, 983, 985, 1017, 1112, 1120, 1209, 1210, 1228, 1252, 1263, 1264, 1265, 1288, 1289, 1293, 1303], "assum": [1, 7, 55, 84, 113, 114, 133, 136, 137, 138, 139, 150, 151, 152, 472, 473, 509, 511, 516, 521, 523, 524, 540, 546, 607, 636, 665, 666, 714, 717, 718, 719, 720, 734, 735, 736, 1048, 1049, 1085, 1087, 1092, 1097, 1099, 1100, 1124, 1153], "stereo": [1, 7, 540, 546], "polar": [1, 7, 24, 138, 139, 140, 143, 144, 145, 148, 150, 151, 152, 193, 384, 385, 498, 511, 523, 540, 546, 563, 571, 719, 720, 721, 725, 726, 727, 731, 734, 735, 736, 775, 969, 970, 1018, 1074, 1087, 1099], "correspond": [1, 7, 11, 20, 117, 120, 165, 217, 245, 246, 247, 263, 284, 317, 354, 378, 431, 442, 462, 481, 531, 537, 540, 546, 553, 562, 669, 672, 675, 747, 800, 828, 829, 830, 846, 867, 900, 937, 963, 990, 1001, 1017, 1038, 1057, 1107, 1216, 1220, 1222, 1223, 1224, 1233, 1234, 1235, 1236, 1259, 1271, 1297, 1301, 1303], "northwest": [1, 7, 20, 540, 546, 562], "corner": [1, 7, 20, 220, 287, 320, 327, 357, 364, 540, 546, 562, 803, 870, 903, 910, 940, 947, 1252], "metropolitan": [1, 7, 20, 540, 546, 562], "french": [1, 7, 20, 540, 546, 562], "composit": [1, 7, 20, 394, 540, 546, 562, 979, 1023, 1252, 1257, 1286, 1292], "9": [1, 7, 20, 26, 27, 125, 131, 132, 193, 232, 298, 335, 372, 384, 518, 525, 527, 540, 546, 562, 574, 575, 706, 712, 713, 775, 815, 881, 918, 955, 969, 1094, 1101, 1103, 1216, 1260, 1271, 1280, 1287, 1288, 1289, 1295, 1300, 1301], "965": [1, 7, 20, 540, 546, 562], "53": [1, 7, 20, 146, 147, 540, 546, 562, 729, 730], "670": [1, 7, 20, 540, 546, 562], "deg": [1, 7, 12, 20, 22, 23, 121, 136, 141, 149, 159, 193, 195, 199, 445, 461, 491, 492, 494, 497, 509, 511, 514, 518, 521, 540, 546, 554, 562, 569, 570, 673, 717, 722, 733, 743, 775, 777, 781, 1020, 1037, 1067, 1068, 1070, 1073, 1085, 1087, 1090, 1094, 1097, 1202, 1218, 1229, 1246, 1247, 1291], "latitud": [1, 7, 20, 41, 43, 46, 49, 51, 55, 66, 84, 95, 116, 117, 118, 120, 121, 157, 158, 201, 223, 224, 244, 245, 246, 248, 249, 251, 252, 260, 262, 264, 265, 266, 268, 290, 291, 301, 323, 324, 325, 327, 329, 338, 360, 361, 362, 364, 366, 442, 461, 491, 494, 540, 546, 562, 593, 595, 598, 601, 603, 607, 618, 636, 647, 668, 669, 670, 672, 673, 741, 742, 784, 806, 807, 827, 828, 829, 831, 832, 834, 835, 843, 845, 847, 848, 849, 851, 873, 874, 884, 906, 907, 908, 910, 912, 921, 943, 944, 945, 947, 949, 1014, 1017, 1037, 1067, 1070, 1112, 1114, 1117, 1120, 1124, 1135, 1153, 1164, 1202, 1219, 1220, 1221, 1229, 1245, 1257, 1258, 1261, 1269, 1276, 1283, 1287, 1289, 1295, 1296, 1301], "longitud": [1, 7, 20, 41, 43, 46, 49, 51, 55, 66, 84, 95, 116, 117, 118, 120, 121, 157, 158, 201, 223, 224, 244, 245, 246, 248, 251, 252, 253, 260, 262, 264, 266, 267, 268, 290, 291, 301, 323, 324, 325, 327, 329, 338, 360, 361, 362, 364, 366, 442, 461, 491, 494, 540, 546, 562, 593, 595, 598, 601, 603, 607, 618, 636, 647, 668, 669, 670, 672, 673, 741, 742, 784, 806, 807, 827, 828, 829, 831, 834, 835, 836, 843, 845, 847, 849, 850, 851, 873, 874, 884, 906, 907, 908, 910, 912, 921, 943, 944, 945, 947, 949, 1017, 1037, 1067, 1070, 1112, 1114, 1117, 1120, 1124, 1135, 1153, 1164, 1202, 1219, 1220, 1221, 1229, 1245, 1257, 1258, 1261, 1269, 1276, 1283, 1287, 1289, 1295, 1296, 1301], "stereograph": [1, 7, 540, 546], "can": [1, 2, 11, 12, 14, 16, 20, 22, 23, 24, 26, 27, 28, 40, 55, 64, 67, 84, 93, 96, 116, 118, 119, 123, 124, 131, 132, 133, 136, 138, 139, 142, 143, 144, 145, 150, 151, 152, 153, 165, 178, 190, 193, 194, 195, 196, 197, 198, 199, 200, 217, 284, 317, 354, 376, 384, 385, 387, 390, 394, 395, 396, 424, 441, 442, 449, 452, 456, 461, 465, 468, 469, 478, 484, 486, 491, 492, 494, 497, 498, 511, 514, 518, 521, 522, 523, 525, 527, 528, 531, 534, 535, 540, 541, 553, 554, 556, 558, 562, 569, 570, 571, 574, 575, 577, 578, 591, 607, 616, 619, 636, 645, 648, 668, 670, 671, 675, 688, 700, 704, 705, 712, 713, 714, 717, 719, 720, 724, 725, 726, 727, 728, 734, 735, 736, 737, 747, 760, 772, 775, 776, 777, 778, 779, 780, 781, 782, 800, 867, 900, 937, 961, 969, 970, 972, 975, 979, 980, 981, 1016, 1017, 1018, 1025, 1028, 1032, 1037, 1041, 1044, 1045, 1054, 1060, 1062, 1067, 1068, 1070, 1073, 1074, 1087, 1090, 1094, 1097, 1098, 1099, 1101, 1103, 1104, 1107, 1110, 1124, 1133, 1136, 1153, 1162, 1165, 1204, 1233, 1239, 1252, 1259, 1260, 1263, 1268, 1287, 1289, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "webmerc": [1, 20, 540, 562], "stere": [1, 20, 366, 540, 562, 949], "field": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 41, 42, 49, 55, 56, 57, 58, 59, 64, 67, 80, 84, 85, 86, 87, 88, 93, 96, 109, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 155, 165, 167, 169, 170, 171, 172, 173, 174, 176, 177, 181, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 217, 218, 219, 220, 225, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 284, 285, 286, 287, 292, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 313, 317, 318, 319, 320, 328, 329, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 350, 354, 355, 356, 357, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 533, 534, 540, 542, 543, 544, 545, 546, 550, 552, 554, 555, 556, 557, 558, 559, 560, 562, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 583, 585, 586, 587, 588, 593, 594, 601, 607, 608, 609, 610, 611, 616, 619, 632, 636, 637, 638, 639, 640, 645, 648, 661, 674, 675, 677, 679, 680, 681, 682, 683, 684, 686, 687, 691, 693, 694, 695, 696, 698, 699, 701, 702, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 728, 729, 730, 734, 735, 736, 738, 739, 747, 749, 751, 752, 753, 754, 755, 756, 758, 759, 763, 765, 766, 767, 768, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 796, 800, 801, 802, 803, 808, 811, 812, 813, 814, 815, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 863, 867, 868, 869, 870, 875, 878, 879, 880, 881, 884, 885, 886, 887, 888, 889, 890, 896, 900, 901, 902, 903, 911, 912, 915, 916, 917, 918, 921, 922, 923, 924, 925, 926, 927, 933, 937, 938, 939, 940, 948, 949, 952, 953, 954, 955, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 1009, 1015, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1109, 1110, 1112, 1113, 1120, 1124, 1125, 1126, 1127, 1128, 1133, 1136, 1149, 1153, 1154, 1155, 1156, 1157, 1162, 1165, 1178, 1184, 1185, 1186, 1187, 1189, 1192, 1193, 1194, 1195, 1201, 1202, 1203, 1204, 1206, 1221, 1226, 1227, 1229, 1244, 1246, 1247, 1248, 1249, 1252, 1254, 1257, 1259, 1263, 1264, 1265, 1268, 1269, 1271, 1282, 1286, 1287, 1288, 1289, 1290, 1293, 1294, 1295, 1297, 1299, 1300, 1301, 1303], "store": [1, 7, 12, 14, 20, 24, 26, 27, 28, 41, 55, 84, 133, 134, 135, 150, 151, 397, 421, 442, 461, 469, 478, 491, 492, 494, 527, 540, 546, 554, 556, 562, 571, 574, 575, 577, 593, 607, 636, 714, 715, 716, 734, 735, 983, 1017, 1023, 1037, 1045, 1054, 1067, 1068, 1070, 1103, 1112, 1124, 1153, 1252, 1259, 1287, 1293, 1296, 1299, 1301, 1305], "reader": [2, 12, 14, 541, 554, 556, 1252, 1260, 1293], "c": [2, 12, 14, 72, 101, 113, 117, 120, 122, 124, 128, 133, 135, 260, 366, 424, 451, 456, 461, 469, 471, 500, 513, 521, 522, 523, 528, 531, 534, 538, 541, 554, 556, 624, 653, 665, 669, 672, 703, 705, 709, 714, 716, 843, 949, 1027, 1032, 1037, 1045, 1047, 1076, 1089, 1097, 1098, 1099, 1104, 1107, 1110, 1141, 1170, 1189, 1217, 1252, 1263, 1293, 1296, 1299, 1302, 1303, 1305], "metranet": [2, 4, 5, 12, 14, 538, 541, 543, 544, 548, 549, 554, 556, 563, 564], "product": [2, 388, 390, 511, 534, 541, 973, 975, 1023, 1087, 1110, 1252], "librari": [2, 12, 14, 158, 377, 387, 390, 393, 394, 538, 541, 554, 556, 742, 962, 972, 975, 978, 979, 1252, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303], "either": [2, 12, 14, 16, 26, 27, 123, 124, 133, 134, 135, 138, 139, 142, 150, 151, 152, 160, 218, 219, 220, 225, 228, 229, 230, 231, 232, 243, 245, 246, 247, 249, 250, 253, 261, 263, 265, 267, 285, 286, 287, 292, 295, 296, 297, 298, 318, 319, 320, 328, 332, 333, 334, 335, 355, 356, 357, 365, 369, 370, 371, 372, 379, 435, 461, 469, 478, 491, 497, 501, 504, 505, 511, 518, 541, 554, 556, 558, 574, 575, 704, 705, 714, 715, 716, 719, 720, 724, 734, 735, 736, 744, 801, 802, 803, 808, 811, 812, 813, 814, 815, 826, 828, 829, 830, 832, 833, 836, 844, 846, 848, 850, 868, 869, 870, 875, 878, 879, 880, 881, 901, 902, 903, 911, 915, 916, 917, 918, 938, 939, 940, 948, 952, 953, 954, 955, 964, 994, 1004, 1037, 1045, 1054, 1067, 1073, 1077, 1080, 1081, 1087, 1094, 1289, 1302, 1303], "python": [2, 12, 14, 40, 394, 535, 541, 554, 556, 591, 979, 1252, 1254, 1255, 1257, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1305], "file_field_nam": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 30, 32, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 542, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 581, 583, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 981], "fals": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 42, 43, 50, 56, 57, 58, 61, 62, 64, 66, 67, 68, 85, 86, 87, 90, 91, 93, 95, 96, 97, 114, 118, 121, 122, 131, 133, 134, 135, 146, 147, 150, 151, 160, 165, 167, 169, 171, 177, 178, 181, 183, 185, 190, 191, 203, 218, 220, 225, 228, 229, 230, 231, 232, 235, 245, 246, 247, 249, 250, 253, 254, 260, 263, 265, 267, 270, 285, 287, 292, 295, 296, 297, 298, 303, 318, 320, 328, 329, 332, 333, 334, 335, 340, 355, 357, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 424, 428, 441, 442, 447, 456, 460, 467, 468, 470, 471, 473, 475, 476, 477, 482, 483, 486, 487, 488, 496, 498, 499, 501, 509, 518, 519, 520, 521, 522, 523, 525, 526, 538, 542, 543, 544, 545, 548, 549, 550, 554, 555, 556, 557, 558, 559, 560, 563, 564, 569, 570, 571, 572, 573, 574, 575, 577, 581, 594, 595, 602, 608, 609, 610, 613, 614, 616, 618, 619, 620, 637, 638, 639, 642, 643, 645, 647, 648, 649, 666, 670, 673, 675, 677, 679, 681, 687, 688, 691, 693, 695, 700, 701, 703, 712, 714, 715, 716, 729, 730, 734, 735, 744, 747, 749, 751, 753, 759, 760, 763, 765, 767, 772, 773, 786, 801, 803, 808, 811, 812, 813, 814, 815, 818, 828, 829, 830, 832, 833, 836, 837, 843, 846, 848, 850, 853, 868, 870, 875, 878, 879, 880, 881, 886, 901, 903, 911, 912, 915, 916, 917, 918, 923, 938, 940, 948, 949, 952, 953, 954, 955, 958, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 981, 987, 1016, 1017, 1022, 1032, 1036, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1058, 1059, 1062, 1063, 1064, 1072, 1074, 1075, 1077, 1085, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1113, 1114, 1121, 1122, 1125, 1126, 1127, 1130, 1131, 1133, 1135, 1136, 1137, 1154, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1194, 1195, 1211, 1212, 1213, 1214, 1215, 1217, 1222, 1224, 1232, 1236, 1250, 1252, 1270, 1277, 1279, 1280, 1282, 1289, 1295, 1296, 1300, 1301, 1303], "exclude_field": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 30, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 542, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 581, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 981], "include_field": [3, 6, 8, 12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 30, 58, 87, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 542, 545, 550, 554, 555, 557, 558, 559, 560, 569, 570, 571, 572, 573, 581, 610, 639, 965, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 1127, 1156, 1252], "delay_field_load": [3, 4, 5, 25, 377, 380, 381, 384, 385, 386, 389, 391, 542, 543, 544, 573, 962, 965, 966, 969, 970, 971, 974, 976], "cf": [3, 4, 5, 11, 21, 25, 28, 55, 84, 380, 381, 392, 393, 510, 542, 543, 544, 553, 568, 573, 577, 607, 636, 965, 966, 977, 978, 1086, 1124, 1153, 1257, 1267, 1285, 1293, 1301], "netcdf": [3, 4, 5, 6, 11, 13, 15, 19, 25, 28, 50, 378, 379, 380, 381, 383, 387, 392, 393, 510, 542, 543, 544, 545, 547, 553, 555, 557, 561, 573, 577, 602, 963, 964, 965, 966, 968, 972, 977, 978, 1086, 1121, 1211, 1214, 1252, 1293, 1294], "radial": [3, 4, 5, 11, 21, 25, 28, 55, 84, 133, 134, 380, 381, 392, 447, 470, 471, 508, 509, 521, 533, 534, 542, 543, 544, 553, 568, 573, 577, 607, 636, 714, 715, 965, 966, 977, 1022, 1046, 1047, 1084, 1085, 1097, 1109, 1110, 1124, 1153, 1201, 1217, 1244, 1252, 1253, 1257, 1259, 1267, 1285, 1293, 1297, 1301], "map": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 30, 36, 41, 55, 84, 117, 120, 223, 245, 246, 247, 260, 290, 301, 323, 325, 326, 327, 329, 330, 338, 360, 362, 363, 364, 366, 367, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 435, 524, 542, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 581, 587, 593, 607, 636, 669, 672, 806, 828, 829, 830, 843, 873, 884, 906, 908, 909, 910, 912, 913, 921, 943, 945, 946, 947, 949, 950, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 978, 979, 980, 981, 994, 1004, 1023, 1100, 1112, 1124, 1153, 1252, 1263, 1266, 1267, 1269, 1270, 1285, 1287, 1289, 1293, 1294, 1303], "unlik": [3, 8, 13, 25, 380, 381, 542, 550, 555, 573, 965, 966], "other": [3, 8, 13, 24, 25, 41, 49, 51, 55, 84, 133, 134, 135, 136, 141, 193, 197, 218, 220, 225, 228, 229, 230, 231, 232, 245, 246, 247, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 377, 380, 381, 383, 386, 388, 390, 394, 402, 442, 496, 511, 525, 527, 528, 533, 542, 550, 555, 571, 573, 593, 601, 603, 607, 636, 714, 715, 716, 717, 722, 728, 775, 779, 801, 803, 808, 811, 812, 813, 814, 815, 828, 829, 830, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 912, 915, 916, 917, 918, 938, 940, 948, 949, 952, 953, 954, 955, 962, 965, 966, 968, 971, 973, 975, 979, 1007, 1017, 1072, 1087, 1101, 1103, 1104, 1109, 1112, 1120, 1124, 1153, 1185, 1186, 1187, 1289, 1293, 1295, 1302, 1303, 1305], "function": [3, 8, 11, 13, 25, 40, 66, 95, 141, 143, 144, 145, 162, 164, 193, 194, 195, 196, 197, 198, 199, 200, 217, 218, 225, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 284, 285, 292, 296, 297, 298, 301, 317, 318, 328, 333, 334, 335, 338, 354, 355, 365, 370, 371, 372, 377, 380, 381, 384, 385, 391, 394, 437, 438, 439, 441, 442, 443, 456, 462, 478, 481, 496, 521, 523, 529, 531, 533, 536, 542, 550, 553, 555, 573, 576, 580, 591, 592, 618, 647, 722, 725, 726, 727, 728, 746, 775, 776, 777, 778, 779, 780, 781, 782, 783, 800, 801, 808, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 867, 868, 875, 879, 880, 881, 884, 900, 901, 911, 916, 917, 918, 921, 937, 938, 948, 953, 954, 955, 958, 959, 962, 965, 966, 969, 970, 976, 979, 1006, 1007, 1011, 1012, 1013, 1016, 1017, 1018, 1019, 1023, 1032, 1038, 1054, 1057, 1072, 1097, 1099, 1105, 1107, 1109, 1111, 1135, 1164, 1196, 1221, 1227, 1232, 1233, 1234, 1243, 1244, 1250, 1251, 1252, 1268, 1287, 1289, 1293, 1297, 1299, 1301, 1302, 1303], "have": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 43, 55, 58, 66, 84, 87, 95, 122, 123, 124, 133, 169, 171, 178, 185, 190, 218, 229, 254, 285, 296, 318, 329, 333, 355, 370, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 445, 452, 492, 496, 511, 516, 525, 526, 542, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 595, 607, 610, 618, 636, 639, 647, 679, 681, 688, 695, 700, 703, 704, 705, 714, 751, 753, 760, 767, 772, 801, 812, 837, 868, 879, 901, 912, 916, 938, 953, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 1020, 1028, 1068, 1072, 1087, 1092, 1101, 1102, 1114, 1124, 1127, 1135, 1153, 1156, 1164, 1204, 1217, 1237, 1252, 1259, 1260, 1287, 1289, 1293, 1299, 1302, 1303, 1304, 1305], "ar": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 40, 41, 55, 66, 68, 84, 95, 97, 117, 120, 121, 122, 123, 124, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 147, 150, 151, 152, 178, 190, 193, 195, 196, 197, 198, 199, 200, 218, 224, 225, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 260, 263, 265, 267, 285, 291, 292, 296, 297, 298, 318, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 355, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 426, 439, 440, 441, 442, 447, 456, 462, 465, 470, 481, 482, 484, 486, 492, 496, 500, 501, 502, 504, 505, 508, 511, 518, 521, 523, 530, 533, 534, 536, 542, 545, 549, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 574, 575, 576, 577, 591, 593, 607, 618, 620, 636, 647, 649, 669, 672, 673, 688, 700, 703, 704, 705, 712, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 730, 734, 735, 736, 746, 760, 772, 775, 777, 778, 779, 780, 781, 782, 801, 807, 808, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 843, 846, 848, 850, 868, 874, 875, 879, 880, 881, 901, 907, 908, 909, 910, 911, 912, 913, 916, 917, 918, 938, 944, 945, 946, 947, 948, 949, 950, 953, 954, 955, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 977, 978, 979, 980, 981, 983, 985, 1013, 1015, 1016, 1017, 1022, 1023, 1032, 1038, 1041, 1046, 1057, 1058, 1060, 1062, 1068, 1072, 1076, 1077, 1078, 1080, 1081, 1084, 1087, 1094, 1097, 1099, 1106, 1109, 1110, 1112, 1124, 1135, 1137, 1153, 1164, 1166, 1185, 1186, 1187, 1209, 1210, 1216, 1219, 1230, 1231, 1233, 1235, 1236, 1245, 1250, 1252, 1255, 1257, 1259, 1260, 1263, 1268, 1270, 1271, 1279, 1282, 1287, 1289, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "still": [3, 8, 13, 25, 133, 301, 338, 380, 381, 396, 442, 542, 550, 555, 573, 714, 884, 921, 965, 966, 981, 1017, 1232, 1252, 1259, 1303], "exclud": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 30, 58, 87, 122, 123, 124, 147, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 187, 190, 193, 195, 196, 197, 198, 199, 200, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 396, 498, 521, 522, 523, 525, 528, 533, 534, 542, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 581, 610, 639, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 695, 697, 700, 703, 704, 705, 728, 730, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 767, 769, 772, 775, 777, 778, 779, 780, 781, 782, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 980, 981, 1074, 1097, 1098, 1099, 1101, 1104, 1109, 1110, 1127, 1156, 1255, 1264, 1300], "them": [3, 8, 13, 16, 17, 18, 25, 66, 95, 133, 134, 135, 136, 235, 254, 329, 380, 381, 390, 442, 498, 508, 526, 536, 542, 548, 550, 555, 558, 559, 560, 573, 618, 647, 714, 715, 716, 717, 818, 837, 912, 965, 966, 975, 1017, 1074, 1084, 1102, 1135, 1164, 1217, 1268, 1293, 1305], "which": [3, 8, 11, 13, 25, 26, 27, 29, 41, 43, 51, 52, 55, 60, 64, 77, 78, 80, 81, 84, 89, 93, 106, 107, 109, 110, 125, 126, 129, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 147, 150, 151, 152, 154, 155, 161, 162, 164, 165, 169, 171, 178, 185, 190, 193, 194, 195, 196, 197, 198, 199, 200, 218, 219, 223, 224, 225, 228, 229, 230, 231, 232, 235, 243, 245, 246, 249, 250, 253, 254, 260, 261, 263, 265, 267, 285, 286, 290, 291, 292, 295, 296, 297, 298, 318, 319, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 355, 356, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 376, 377, 379, 380, 381, 386, 387, 390, 391, 393, 394, 395, 396, 397, 421, 437, 438, 439, 440, 441, 442, 446, 447, 449, 451, 452, 456, 465, 467, 468, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 492, 497, 499, 508, 509, 510, 511, 518, 519, 520, 521, 522, 523, 525, 527, 530, 532, 533, 534, 542, 550, 553, 555, 573, 574, 575, 579, 593, 595, 603, 604, 607, 612, 616, 629, 630, 632, 633, 636, 641, 645, 658, 659, 661, 662, 675, 679, 681, 688, 695, 700, 706, 707, 710, 714, 715, 716, 717, 718, 719, 720, 721, 724, 725, 728, 729, 730, 734, 735, 736, 738, 739, 747, 751, 753, 760, 767, 772, 775, 776, 777, 778, 779, 780, 781, 782, 801, 802, 806, 807, 808, 811, 812, 813, 814, 815, 818, 826, 828, 829, 832, 833, 836, 837, 843, 844, 846, 848, 850, 868, 869, 873, 874, 875, 878, 879, 880, 881, 901, 902, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 938, 939, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 961, 962, 964, 965, 966, 971, 972, 975, 976, 978, 979, 980, 981, 983, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1021, 1022, 1025, 1027, 1028, 1032, 1041, 1043, 1044, 1052, 1053, 1054, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1068, 1073, 1075, 1084, 1085, 1086, 1087, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1106, 1108, 1109, 1110, 1112, 1114, 1124, 1129, 1133, 1146, 1147, 1149, 1150, 1153, 1158, 1162, 1175, 1176, 1178, 1179, 1201, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1216, 1217, 1220, 1221, 1226, 1227, 1230, 1231, 1244, 1249, 1252, 1255, 1259, 1260, 1263, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1287, 1293, 1297, 1299, 1301, 1302, 1303], "renam": [3, 8, 13, 25, 40, 161, 162, 164, 380, 381, 391, 542, 550, 555, 573, 591, 965, 966, 976, 1252], "kei": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 28, 41, 42, 55, 56, 57, 84, 85, 86, 116, 118, 119, 133, 134, 135, 329, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 400, 406, 411, 413, 421, 426, 428, 431, 432, 433, 435, 441, 442, 465, 484, 486, 487, 510, 511, 542, 543, 544, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 577, 593, 594, 607, 608, 609, 636, 637, 638, 668, 670, 671, 714, 715, 716, 912, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 985, 987, 990, 991, 992, 994, 996, 1001, 1002, 1004, 1016, 1017, 1041, 1060, 1062, 1063, 1086, 1087, 1112, 1113, 1124, 1125, 1126, 1153, 1154, 1155, 1189, 1295, 1296, 1300], "uniform": [3, 8, 11, 13, 25, 68, 97, 134, 135, 380, 381, 389, 447, 531, 542, 550, 553, 555, 573, 620, 649, 715, 716, 965, 966, 974, 1022, 1107, 1137, 1166, 1228, 1252, 1268, 1271, 1293, 1295], "bool": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 42, 43, 50, 56, 57, 58, 61, 62, 64, 66, 67, 68, 85, 86, 87, 90, 91, 93, 95, 96, 97, 114, 118, 121, 122, 131, 132, 133, 134, 135, 146, 147, 150, 151, 152, 165, 169, 171, 178, 185, 190, 203, 205, 218, 220, 225, 228, 229, 230, 231, 232, 235, 245, 246, 247, 249, 250, 253, 254, 260, 263, 265, 267, 270, 272, 285, 287, 292, 295, 296, 297, 298, 303, 305, 318, 320, 328, 329, 332, 333, 334, 335, 340, 342, 355, 357, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 442, 447, 451, 456, 460, 467, 468, 470, 471, 473, 475, 476, 477, 482, 483, 486, 487, 488, 496, 498, 499, 501, 504, 505, 511, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 542, 543, 544, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 574, 575, 577, 581, 594, 595, 602, 608, 609, 610, 613, 614, 616, 618, 619, 620, 637, 638, 639, 642, 643, 645, 647, 648, 649, 666, 670, 673, 675, 679, 681, 688, 695, 700, 703, 712, 713, 714, 715, 716, 729, 730, 734, 735, 736, 747, 751, 753, 760, 767, 772, 786, 788, 801, 803, 808, 811, 812, 813, 814, 815, 818, 828, 829, 830, 832, 833, 836, 837, 843, 846, 848, 850, 853, 855, 868, 870, 875, 878, 879, 880, 881, 886, 888, 901, 903, 911, 912, 915, 916, 917, 918, 923, 925, 938, 940, 948, 949, 952, 953, 954, 955, 958, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 981, 1017, 1022, 1027, 1032, 1036, 1043, 1044, 1046, 1047, 1049, 1051, 1052, 1053, 1058, 1059, 1062, 1063, 1064, 1072, 1074, 1075, 1077, 1080, 1081, 1087, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1105, 1106, 1113, 1114, 1121, 1125, 1126, 1127, 1130, 1131, 1133, 1135, 1136, 1137, 1154, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1217, 1232, 1250], "true": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 41, 42, 43, 50, 55, 56, 57, 58, 61, 62, 64, 66, 67, 68, 84, 85, 86, 87, 90, 91, 93, 95, 96, 97, 114, 118, 122, 131, 132, 133, 134, 135, 146, 147, 150, 151, 152, 157, 165, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 203, 205, 218, 220, 225, 228, 229, 230, 231, 232, 235, 245, 246, 247, 249, 250, 253, 254, 260, 263, 265, 267, 270, 272, 285, 287, 292, 295, 296, 297, 298, 303, 305, 318, 320, 328, 329, 332, 333, 334, 335, 340, 342, 355, 357, 365, 366, 369, 370, 371, 372, 376, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 424, 428, 441, 442, 447, 451, 456, 460, 467, 468, 470, 471, 475, 476, 477, 482, 483, 486, 487, 488, 496, 498, 499, 501, 504, 505, 509, 511, 518, 521, 522, 523, 525, 526, 527, 529, 530, 538, 542, 543, 544, 545, 548, 549, 550, 554, 555, 556, 557, 558, 559, 560, 563, 564, 569, 570, 571, 572, 573, 574, 575, 577, 581, 593, 594, 595, 602, 607, 608, 609, 610, 613, 614, 616, 618, 619, 620, 636, 637, 638, 639, 642, 643, 645, 647, 648, 649, 666, 670, 675, 677, 679, 680, 681, 682, 683, 684, 686, 687, 688, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 712, 713, 714, 715, 716, 723, 729, 730, 734, 735, 736, 741, 747, 749, 751, 752, 753, 754, 755, 756, 758, 759, 760, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 786, 788, 801, 803, 808, 811, 812, 813, 814, 815, 818, 828, 829, 830, 832, 833, 836, 837, 843, 846, 848, 850, 853, 855, 868, 870, 875, 878, 879, 880, 881, 886, 888, 901, 903, 911, 912, 915, 916, 917, 918, 923, 925, 938, 940, 948, 949, 952, 953, 954, 955, 958, 961, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 981, 987, 1016, 1017, 1022, 1027, 1032, 1036, 1043, 1044, 1046, 1047, 1051, 1052, 1053, 1058, 1059, 1062, 1063, 1064, 1072, 1074, 1075, 1077, 1080, 1081, 1085, 1087, 1094, 1097, 1098, 1099, 1101, 1102, 1103, 1105, 1106, 1112, 1113, 1114, 1121, 1122, 1124, 1125, 1126, 1127, 1130, 1131, 1133, 1135, 1136, 1137, 1153, 1154, 1155, 1156, 1159, 1160, 1162, 1164, 1165, 1166, 1194, 1195, 1217, 1232, 1250, 1252, 1270, 1277, 1278, 1279, 1280, 1289, 1291, 1296, 1297, 1301, 1303], "forc": [3, 8, 13, 16, 17, 18, 25, 380, 381, 391, 447, 526, 542, 550, 555, 558, 559, 560, 573, 965, 966, 976, 1022, 1102, 1237, 1252], "case": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 35, 116, 118, 119, 133, 135, 178, 190, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 435, 511, 542, 543, 544, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 574, 575, 586, 668, 670, 671, 688, 700, 714, 716, 760, 772, 959, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 994, 1004, 1087, 1252, 1259, 1260, 1263, 1280, 1303], "ignor": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 133, 134, 135, 218, 220, 225, 228, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 447, 542, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 714, 715, 716, 801, 803, 808, 811, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 912, 915, 916, 917, 918, 938, 940, 948, 949, 952, 953, 954, 955, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 1022, 1252, 1254, 1263], "list": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 30, 58, 87, 131, 132, 140, 194, 201, 220, 224, 227, 246, 254, 268, 287, 291, 294, 301, 320, 324, 331, 338, 357, 361, 368, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 442, 456, 461, 462, 467, 468, 469, 478, 481, 491, 492, 494, 510, 517, 542, 543, 544, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 574, 575, 581, 610, 639, 712, 713, 721, 776, 784, 803, 807, 810, 829, 837, 851, 870, 874, 877, 884, 903, 907, 914, 921, 940, 944, 951, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 1009, 1017, 1032, 1037, 1038, 1043, 1044, 1045, 1054, 1057, 1067, 1068, 1070, 1086, 1093, 1127, 1156, 1204, 1209, 1210, 1220, 1252, 1259, 1293, 1303, 1304], "appli": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 55, 58, 84, 87, 127, 130, 131, 132, 134, 135, 141, 146, 147, 148, 159, 193, 196, 197, 218, 219, 225, 228, 229, 230, 231, 232, 243, 261, 285, 286, 292, 295, 296, 297, 298, 318, 319, 328, 329, 332, 333, 334, 335, 355, 356, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 440, 442, 451, 465, 467, 470, 483, 484, 486, 487, 496, 501, 525, 527, 542, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 607, 610, 636, 639, 708, 711, 712, 713, 715, 716, 722, 728, 729, 730, 731, 743, 775, 778, 779, 801, 802, 808, 811, 812, 813, 814, 815, 826, 844, 868, 869, 875, 878, 879, 880, 881, 901, 902, 911, 912, 915, 916, 917, 918, 938, 939, 948, 949, 952, 953, 954, 955, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 980, 1007, 1015, 1017, 1023, 1027, 1041, 1043, 1046, 1059, 1060, 1062, 1063, 1072, 1077, 1101, 1103, 1124, 1127, 1153, 1156, 1216, 1217, 1252, 1259, 1268, 1279, 1289, 1297], "after": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 133, 134, 164, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 397, 511, 521, 542, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 714, 715, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 983, 1087, 1097, 1217, 1252, 1260, 1289, 1302, 1303, 1305], "set": [3, 6, 8, 12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 40, 41, 55, 66, 67, 68, 84, 95, 96, 97, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 134, 135, 146, 147, 150, 151, 165, 169, 171, 178, 185, 190, 193, 195, 196, 197, 198, 199, 200, 218, 220, 225, 228, 229, 230, 231, 232, 233, 234, 245, 246, 247, 285, 287, 292, 295, 296, 297, 298, 299, 300, 318, 320, 328, 329, 332, 333, 334, 335, 336, 337, 355, 357, 365, 366, 369, 370, 371, 372, 373, 374, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 421, 429, 430, 433, 434, 442, 470, 478, 500, 501, 502, 504, 505, 511, 521, 522, 523, 542, 545, 550, 554, 555, 557, 558, 559, 560, 569, 570, 571, 572, 573, 574, 575, 577, 591, 593, 607, 618, 619, 620, 636, 647, 648, 649, 668, 669, 670, 671, 672, 673, 675, 679, 681, 688, 695, 700, 703, 704, 705, 714, 715, 716, 728, 729, 730, 734, 735, 747, 751, 753, 760, 767, 772, 775, 777, 778, 779, 780, 781, 782, 801, 803, 808, 811, 812, 813, 814, 815, 816, 817, 828, 829, 830, 868, 870, 875, 878, 879, 880, 881, 882, 883, 901, 903, 911, 912, 915, 916, 917, 918, 919, 920, 938, 940, 948, 949, 952, 953, 954, 955, 956, 957, 965, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 981, 988, 989, 992, 993, 999, 1000, 1003, 1017, 1046, 1054, 1076, 1077, 1078, 1080, 1081, 1087, 1097, 1098, 1099, 1112, 1124, 1135, 1136, 1137, 1153, 1164, 1165, 1166, 1185, 1186, 1187, 1194, 1195, 1201, 1204, 1237, 1240, 1241, 1252, 1260, 1263, 1269, 1276, 1279, 1280, 1283, 1284, 1289, 1293, 1297, 1302, 1303, 1304], "all": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 41, 43, 55, 58, 66, 67, 84, 87, 95, 96, 114, 133, 134, 135, 139, 140, 141, 146, 147, 150, 151, 152, 165, 168, 175, 178, 182, 187, 190, 193, 197, 218, 224, 225, 228, 229, 230, 231, 232, 245, 246, 285, 291, 292, 295, 296, 297, 298, 318, 324, 328, 329, 332, 333, 334, 335, 355, 361, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 411, 425, 440, 441, 442, 447, 461, 469, 478, 491, 494, 496, 510, 511, 517, 521, 523, 536, 542, 543, 544, 545, 550, 554, 555, 556, 557, 558, 559, 560, 569, 570, 571, 572, 573, 574, 575, 576, 593, 595, 607, 610, 618, 619, 636, 639, 647, 648, 666, 675, 678, 685, 688, 692, 697, 700, 714, 715, 716, 720, 721, 722, 728, 729, 730, 734, 735, 736, 747, 750, 757, 760, 764, 769, 772, 775, 779, 801, 807, 808, 811, 812, 813, 814, 815, 828, 829, 868, 874, 875, 878, 879, 880, 881, 901, 907, 911, 912, 915, 916, 917, 918, 938, 944, 948, 949, 952, 953, 954, 955, 958, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 984, 996, 997, 1015, 1016, 1017, 1022, 1037, 1045, 1054, 1067, 1070, 1072, 1086, 1087, 1093, 1097, 1099, 1112, 1114, 1124, 1127, 1135, 1136, 1153, 1156, 1164, 1165, 1204, 1216, 1251, 1252, 1257, 1268, 1287, 1288, 1289, 1291, 1293, 1301, 1303, 1305], "delai": [3, 4, 5, 25, 377, 380, 381, 384, 385, 386, 389, 542, 543, 544, 573, 962, 965, 966, 969, 970, 971, 974, 1217, 1252], "load": [3, 4, 5, 25, 40, 377, 380, 381, 384, 385, 386, 389, 397, 433, 538, 542, 543, 544, 573, 591, 962, 965, 966, 969, 970, 971, 974, 982, 983, 992, 1252, 1301], "until": [3, 4, 5, 25, 40, 134, 377, 380, 381, 384, 385, 386, 389, 542, 543, 544, 573, 591, 715, 962, 965, 966, 969, 970, 971, 974], "particular": [3, 4, 5, 25, 377, 380, 381, 384, 385, 386, 389, 442, 492, 512, 525, 542, 543, 544, 573, 962, 965, 966, 969, 970, 971, 974, 1017, 1068, 1088, 1101, 1293], "access": [3, 4, 5, 25, 30, 41, 55, 66, 67, 84, 95, 96, 165, 377, 380, 381, 384, 385, 386, 389, 397, 542, 543, 544, 573, 581, 593, 607, 618, 619, 636, 647, 648, 675, 747, 962, 965, 966, 969, 970, 971, 974, 983, 1112, 1124, 1135, 1136, 1153, 1164, 1165, 1183, 1259, 1260, 1299, 1301], "In": [3, 4, 5, 25, 26, 27, 116, 118, 119, 135, 141, 377, 380, 381, 384, 385, 386, 388, 389, 435, 492, 521, 534, 542, 543, 544, 573, 574, 575, 668, 670, 671, 716, 722, 959, 962, 965, 966, 969, 970, 971, 973, 974, 994, 1004, 1007, 1023, 1068, 1097, 1110, 1201, 1254, 1255, 1260, 1289, 1293, 1296, 1297, 1299, 1300, 1302, 1303], "attribut": [3, 4, 5, 16, 17, 18, 25, 26, 27, 28, 41, 44, 45, 46, 47, 48, 55, 66, 67, 73, 74, 75, 76, 84, 95, 96, 102, 103, 104, 105, 133, 161, 165, 178, 190, 218, 225, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 389, 392, 393, 396, 473, 542, 543, 544, 558, 559, 560, 573, 574, 575, 577, 593, 596, 597, 598, 599, 600, 607, 618, 619, 625, 626, 627, 628, 636, 647, 648, 654, 655, 656, 657, 675, 688, 700, 714, 747, 760, 772, 801, 808, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 962, 965, 966, 967, 969, 970, 971, 974, 977, 978, 981, 1049, 1112, 1115, 1116, 1117, 1118, 1119, 1124, 1135, 1136, 1142, 1143, 1144, 1145, 1153, 1164, 1165, 1171, 1172, 1173, 1174, 1259, 1287, 1295, 1301], "lazyloaddict": [3, 4, 5, 25, 41, 55, 84, 377, 380, 381, 384, 385, 386, 389, 542, 543, 544, 573, 593, 607, 636, 962, 965, 966, 969, 970, 971, 974, 1112, 1124, 1153], "provid": [3, 4, 5, 6, 11, 25, 55, 58, 84, 87, 133, 224, 246, 291, 324, 329, 361, 379, 380, 381, 382, 387, 390, 394, 395, 396, 397, 429, 430, 436, 511, 518, 542, 543, 544, 545, 553, 573, 607, 610, 636, 639, 714, 807, 829, 874, 907, 912, 944, 964, 965, 966, 967, 972, 975, 979, 980, 981, 983, 988, 989, 995, 996, 999, 1000, 1005, 1007, 1087, 1094, 1124, 1127, 1153, 1156, 1227, 1244, 1251, 1260, 1287, 1289, 1293, 1300, 1302, 1303], "speedup": [3, 4, 5, 25, 245, 246, 329, 366, 380, 381, 542, 543, 544, 573, 828, 829, 912, 949, 965, 966, 1252], "where": [3, 4, 5, 25, 66, 67, 95, 96, 113, 117, 120, 123, 124, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 147, 154, 155, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 197, 218, 225, 228, 229, 230, 231, 232, 244, 262, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 380, 381, 461, 469, 470, 478, 491, 492, 494, 496, 509, 524, 525, 527, 534, 542, 543, 544, 573, 576, 618, 619, 647, 648, 665, 669, 672, 677, 679, 680, 681, 682, 683, 684, 686, 687, 688, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 704, 705, 710, 712, 713, 714, 715, 716, 718, 719, 720, 721, 724, 728, 730, 738, 739, 749, 751, 752, 753, 754, 755, 756, 758, 759, 760, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 778, 779, 801, 808, 811, 812, 813, 814, 815, 827, 845, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955, 958, 965, 966, 1023, 1037, 1045, 1046, 1054, 1067, 1068, 1070, 1072, 1085, 1100, 1101, 1103, 1110, 1135, 1136, 1164, 1165, 1204, 1209, 1210, 1218, 1219, 1227, 1249, 1252, 1259, 1260, 1263, 1268, 1271, 1287, 1289, 1293, 1296, 1300, 1305], "number": [3, 4, 5, 12, 14, 24, 25, 28, 40, 41, 55, 61, 62, 64, 65, 66, 67, 68, 84, 90, 91, 93, 94, 95, 96, 97, 122, 123, 124, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 160, 217, 221, 225, 226, 228, 229, 230, 231, 246, 284, 288, 292, 293, 295, 296, 297, 317, 321, 328, 329, 330, 332, 333, 334, 354, 358, 365, 366, 367, 369, 370, 371, 380, 381, 388, 394, 395, 413, 440, 441, 442, 452, 456, 461, 465, 466, 469, 470, 471, 478, 484, 491, 497, 498, 499, 508, 517, 519, 520, 521, 523, 525, 527, 529, 531, 536, 542, 543, 544, 554, 556, 571, 573, 577, 591, 593, 607, 613, 614, 616, 617, 618, 619, 620, 636, 642, 643, 645, 646, 647, 648, 649, 703, 704, 705, 710, 712, 713, 714, 715, 717, 718, 719, 720, 722, 723, 724, 725, 726, 729, 730, 732, 734, 735, 736, 737, 738, 739, 744, 800, 804, 808, 809, 811, 812, 813, 814, 829, 867, 871, 875, 876, 878, 879, 880, 900, 904, 911, 912, 913, 915, 916, 917, 937, 941, 948, 949, 950, 952, 953, 954, 959, 965, 966, 973, 979, 980, 1015, 1016, 1017, 1018, 1028, 1032, 1037, 1041, 1042, 1045, 1046, 1047, 1054, 1060, 1067, 1073, 1074, 1075, 1084, 1093, 1095, 1096, 1097, 1099, 1101, 1103, 1105, 1107, 1112, 1124, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1153, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1184, 1185, 1186, 1187, 1204, 1206, 1216, 1217, 1222, 1223, 1224, 1233, 1234, 1235, 1236, 1250, 1268, 1270, 1293, 1301, 1303], "gate": [3, 4, 5, 25, 55, 65, 66, 67, 84, 94, 95, 96, 113, 114, 115, 122, 123, 124, 129, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 146, 147, 150, 151, 152, 154, 155, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 225, 229, 230, 231, 249, 250, 253, 263, 265, 267, 268, 285, 292, 296, 297, 301, 318, 328, 329, 333, 334, 338, 355, 365, 366, 370, 371, 380, 381, 386, 387, 388, 389, 440, 441, 442, 470, 471, 498, 507, 508, 521, 522, 523, 524, 525, 526, 527, 528, 533, 534, 542, 543, 544, 573, 607, 617, 618, 619, 636, 646, 647, 648, 665, 666, 667, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 710, 714, 715, 716, 717, 718, 719, 720, 722, 724, 726, 728, 729, 730, 734, 735, 736, 738, 739, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 801, 808, 812, 813, 814, 832, 833, 836, 846, 848, 850, 851, 868, 875, 879, 880, 884, 901, 911, 912, 916, 917, 921, 938, 948, 949, 953, 954, 965, 966, 971, 972, 973, 974, 1007, 1015, 1016, 1017, 1018, 1046, 1047, 1074, 1083, 1084, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1109, 1110, 1124, 1134, 1135, 1136, 1153, 1163, 1164, 1165, 1185, 1186, 1187, 1201, 1202, 1203, 1217, 1218, 1220, 1221, 1226, 1229, 1252, 1255, 1260, 1263, 1264, 1265, 1269, 1295, 1297, 1299, 1300, 1301], "vari": [3, 4, 5, 25, 380, 381, 384, 542, 543, 544, 573, 965, 966, 969, 1237, 1289], "between": [3, 4, 5, 12, 22, 23, 25, 26, 27, 43, 55, 66, 67, 84, 95, 96, 114, 117, 118, 131, 132, 133, 134, 136, 141, 143, 144, 145, 152, 178, 190, 193, 196, 197, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 380, 381, 386, 389, 395, 396, 454, 456, 496, 501, 508, 511, 526, 527, 542, 543, 544, 554, 569, 570, 573, 574, 575, 595, 607, 618, 619, 636, 647, 648, 666, 669, 670, 688, 700, 712, 713, 714, 715, 717, 722, 725, 726, 727, 728, 736, 760, 772, 775, 778, 779, 801, 808, 812, 813, 814, 815, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 958, 965, 966, 971, 974, 980, 981, 1007, 1030, 1032, 1072, 1077, 1084, 1087, 1102, 1103, 1114, 1124, 1135, 1136, 1153, 1164, 1165, 1196, 1203, 1205, 1207, 1208, 1235, 1236, 1245, 1263, 1269, 1279, 1289, 1297, 1299, 1303, 1305], "rai": [3, 4, 5, 25, 27, 55, 63, 66, 67, 68, 69, 70, 71, 84, 92, 95, 96, 97, 98, 99, 100, 114, 122, 123, 124, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 147, 150, 151, 152, 178, 190, 196, 202, 204, 207, 209, 210, 218, 225, 228, 229, 230, 231, 232, 249, 250, 253, 263, 265, 267, 269, 271, 274, 276, 277, 285, 292, 295, 296, 297, 298, 302, 304, 307, 309, 310, 318, 328, 329, 332, 333, 334, 335, 339, 341, 344, 346, 347, 355, 365, 366, 369, 370, 371, 372, 379, 380, 381, 386, 389, 390, 444, 447, 466, 471, 498, 525, 526, 527, 533, 542, 543, 544, 573, 575, 607, 615, 618, 619, 620, 621, 622, 623, 636, 644, 647, 648, 649, 650, 651, 652, 666, 688, 700, 703, 704, 705, 712, 713, 714, 715, 716, 718, 719, 720, 722, 724, 725, 726, 730, 734, 735, 736, 760, 772, 778, 785, 787, 790, 792, 793, 801, 808, 811, 812, 813, 814, 815, 832, 833, 836, 846, 848, 850, 852, 854, 857, 859, 860, 868, 875, 878, 879, 880, 881, 885, 887, 890, 892, 893, 901, 911, 912, 915, 916, 917, 918, 922, 924, 927, 929, 930, 938, 948, 949, 952, 953, 954, 955, 964, 965, 966, 971, 974, 975, 1007, 1022, 1042, 1047, 1074, 1101, 1102, 1103, 1109, 1124, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1153, 1161, 1164, 1165, 1166, 1167, 1168, 1169, 1185, 1186, 1187, 1189, 1206, 1213, 1215, 1217, 1218, 1220, 1222, 1223, 1224, 1233, 1234, 1235, 1236, 1249, 1250, 1264, 1295, 1301, 1303], "ngates_vari": [3, 4, 5, 25, 380, 381, 542, 543, 544, 573, 965, 966], "recommend": [3, 4, 5, 25, 40, 55, 84, 133, 135, 366, 380, 381, 390, 442, 496, 521, 542, 543, 544, 573, 591, 607, 636, 714, 716, 949, 965, 966, 975, 1017, 1072, 1097, 1124, 1153, 1201, 1268, 1293, 1302, 1303, 1304, 1305], "note": [3, 11, 25, 57, 86, 113, 133, 141, 169, 171, 178, 185, 190, 245, 246, 329, 380, 381, 384, 385, 395, 516, 521, 533, 542, 553, 573, 609, 638, 665, 679, 681, 688, 695, 700, 714, 722, 751, 753, 760, 767, 772, 828, 829, 912, 965, 966, 969, 970, 980, 1092, 1097, 1109, 1126, 1155, 1252, 1259, 1260, 1270, 1289, 1302, 1303], "ha": [3, 6, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 55, 84, 128, 133, 161, 162, 164, 203, 239, 254, 255, 270, 303, 338, 340, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 395, 428, 435, 499, 501, 504, 505, 542, 545, 553, 554, 556, 557, 558, 559, 560, 563, 564, 569, 570, 571, 572, 573, 576, 607, 636, 709, 714, 786, 822, 837, 838, 853, 886, 921, 923, 962, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 980, 987, 994, 1004, 1006, 1075, 1077, 1080, 1081, 1124, 1153, 1189, 1216, 1228, 1249, 1259, 1268, 1289, 1293, 1299, 1301, 1302, 1303, 1305], "been": [3, 11, 24, 25, 128, 133, 161, 162, 164, 169, 171, 178, 185, 190, 254, 338, 380, 381, 383, 386, 387, 388, 390, 499, 542, 553, 563, 564, 571, 573, 679, 681, 688, 695, 700, 709, 714, 751, 753, 760, 767, 772, 837, 921, 965, 966, 968, 971, 972, 973, 975, 1075, 1204, 1216, 1259, 1289, 1293, 1299, 1302, 1303], "test": [3, 11, 24, 25, 133, 380, 381, 386, 388, 397, 456, 489, 490, 536, 542, 553, 571, 573, 714, 965, 966, 971, 973, 983, 1032, 1065, 1066, 1252, 1254, 1255, 1263, 1264, 1265, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1293, 1295], "stream": [3, 11, 25, 72, 101, 380, 381, 535, 542, 553, 573, 624, 653, 965, 966, 1141, 1170], "cfradial": [3, 11, 25, 380, 381, 542, 553, 573, 576, 965, 966, 1252, 1257, 1267, 1268, 1282, 1284, 1285, 1295], "If": [4, 5, 6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 26, 27, 40, 41, 42, 55, 57, 58, 59, 66, 84, 86, 87, 88, 95, 116, 118, 119, 121, 125, 127, 131, 132, 133, 136, 140, 141, 144, 150, 151, 152, 178, 190, 193, 196, 197, 203, 205, 218, 219, 224, 225, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 285, 286, 291, 292, 296, 297, 298, 303, 305, 318, 319, 324, 327, 328, 329, 333, 334, 335, 340, 342, 355, 356, 361, 364, 365, 366, 370, 371, 372, 377, 379, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 424, 431, 435, 442, 445, 451, 456, 460, 461, 462, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 481, 482, 483, 486, 487, 488, 491, 492, 494, 496, 498, 499, 500, 501, 502, 504, 505, 508, 509, 510, 511, 518, 521, 522, 523, 524, 525, 526, 529, 530, 538, 543, 544, 545, 548, 549, 554, 556, 557, 558, 559, 560, 563, 564, 569, 570, 571, 572, 574, 575, 591, 593, 594, 607, 609, 610, 611, 618, 636, 638, 639, 640, 647, 668, 670, 671, 673, 688, 700, 706, 708, 712, 713, 714, 717, 721, 722, 726, 728, 734, 735, 736, 760, 772, 775, 778, 779, 786, 788, 801, 802, 807, 808, 812, 813, 814, 815, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 843, 844, 845, 846, 847, 848, 849, 850, 853, 855, 868, 869, 874, 875, 879, 880, 881, 886, 888, 901, 902, 907, 910, 911, 912, 916, 917, 918, 923, 925, 938, 939, 944, 947, 948, 949, 953, 954, 955, 958, 962, 964, 967, 969, 970, 971, 972, 973, 974, 975, 976, 978, 979, 980, 981, 983, 990, 994, 1001, 1004, 1017, 1020, 1027, 1032, 1036, 1037, 1038, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1057, 1058, 1059, 1062, 1063, 1064, 1067, 1068, 1070, 1072, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1084, 1085, 1086, 1087, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1105, 1106, 1112, 1113, 1124, 1126, 1127, 1128, 1135, 1153, 1155, 1156, 1157, 1164, 1204, 1209, 1210, 1216, 1217, 1235, 1236, 1237, 1246, 1247, 1289, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "read_altitude_from_nc": [6, 545], "d3r": [6, 545, 1252], "gcpex": [6, 545], "odim_h5": [6, 16, 17, 18, 26, 27, 545, 558, 559, 560, 574, 575, 1252], "found": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 40, 131, 132, 136, 137, 163, 377, 382, 384, 385, 386, 387, 389, 390, 391, 431, 441, 442, 499, 510, 545, 554, 556, 557, 558, 559, 560, 569, 570, 571, 572, 591, 712, 713, 717, 718, 962, 967, 969, 970, 971, 972, 974, 975, 976, 990, 1001, 1016, 1017, 1023, 1075, 1086, 1233, 1252, 1260, 1293, 1302, 1303, 1305], "doe": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 59, 88, 116, 118, 119, 133, 134, 135, 218, 220, 225, 228, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 410, 435, 545, 554, 556, 557, 558, 559, 560, 569, 570, 571, 572, 611, 640, 668, 670, 671, 714, 715, 716, 801, 803, 808, 811, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 912, 915, 916, 917, 918, 938, 940, 948, 949, 952, 953, 954, 955, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 994, 1004, 1128, 1157, 1250, 1252, 1280, 1293, 1295, 1302, 1303, 1305], "appear": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 545, 554, 556, 557, 558, 559, 560, 569, 570, 571, 572, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 1232], "place": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 142, 219, 223, 224, 243, 244, 261, 262, 286, 290, 291, 319, 323, 324, 356, 360, 361, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 395, 396, 452, 527, 545, 554, 556, 557, 558, 559, 560, 569, 570, 571, 572, 724, 802, 806, 807, 826, 827, 844, 845, 869, 873, 874, 902, 906, 907, 939, 943, 944, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 980, 981, 1028, 1103, 1250, 1252, 1299, 1302], "defin": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 26, 27, 41, 55, 84, 116, 118, 119, 122, 123, 124, 129, 131, 132, 133, 136, 137, 138, 139, 140, 142, 146, 147, 150, 151, 152, 154, 155, 193, 194, 195, 196, 197, 198, 199, 200, 223, 224, 228, 290, 291, 295, 323, 324, 332, 360, 361, 369, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 396, 441, 442, 447, 478, 492, 497, 511, 518, 519, 520, 521, 525, 526, 527, 530, 545, 554, 556, 557, 558, 559, 560, 569, 570, 571, 572, 574, 575, 593, 607, 636, 668, 670, 671, 703, 704, 705, 710, 712, 713, 714, 717, 718, 719, 720, 721, 724, 728, 729, 730, 734, 735, 736, 738, 739, 775, 776, 777, 778, 779, 780, 781, 782, 806, 807, 811, 873, 874, 878, 906, 907, 915, 943, 944, 952, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 981, 1016, 1017, 1022, 1054, 1068, 1073, 1087, 1094, 1095, 1096, 1097, 1101, 1102, 1103, 1106, 1112, 1124, 1153, 1201, 1252, 1269, 1270, 1287, 1289], "mdv": [6, 12, 14, 16, 17, 18, 22, 23, 24, 384, 385, 395, 545, 554, 556, 558, 559, 560, 569, 570, 571, 572, 969, 970, 980, 1252, 1255, 1257, 1264, 1267, 1285, 1293, 1297, 1299], "like": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 35, 51, 52, 72, 101, 116, 117, 119, 120, 121, 134, 135, 376, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 429, 430, 498, 525, 526, 527, 535, 545, 554, 556, 557, 558, 559, 560, 569, 570, 571, 572, 586, 603, 604, 624, 653, 668, 669, 671, 672, 673, 715, 716, 961, 962, 967, 969, 970, 971, 972, 973, 974, 975, 976, 979, 980, 981, 982, 983, 988, 989, 999, 1000, 1023, 1074, 1101, 1102, 1103, 1141, 1170, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1216, 1217, 1230, 1252, 1259, 1260, 1263, 1293, 1295, 1297, 1299, 1303], "onli": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 60, 66, 67, 89, 95, 96, 122, 123, 124, 128, 133, 135, 137, 142, 146, 147, 150, 151, 152, 165, 218, 229, 245, 246, 285, 296, 318, 329, 333, 355, 366, 370, 377, 382, 384, 385, 386, 387, 388, 389, 390, 442, 498, 511, 521, 545, 554, 556, 557, 558, 559, 560, 569, 570, 571, 572, 576, 612, 618, 619, 641, 647, 648, 675, 703, 704, 705, 709, 714, 716, 718, 724, 729, 730, 734, 735, 736, 747, 801, 812, 828, 829, 868, 879, 901, 912, 916, 938, 949, 953, 962, 967, 969, 970, 971, 972, 973, 974, 975, 1017, 1074, 1087, 1097, 1129, 1135, 1136, 1158, 1164, 1165, 1209, 1210, 1222, 1232, 1239, 1246, 1247, 1252, 1263, 1270, 1280, 1289, 1296, 1297, 1299, 1303], "you": [6, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 498, 545, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1074, 1259, 1289, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "want": [6, 545, 1260, 1293, 1300, 1301, 1303, 1305], "altitud": [6, 41, 55, 66, 84, 95, 121, 125, 126, 131, 132, 143, 146, 147, 201, 232, 298, 335, 372, 442, 452, 511, 514, 515, 527, 530, 545, 593, 607, 618, 636, 647, 673, 706, 707, 712, 713, 725, 729, 730, 784, 815, 881, 918, 955, 1017, 1018, 1023, 1028, 1087, 1090, 1091, 1103, 1106, 1112, 1124, 1135, 1153, 1164, 1202, 1219, 1229, 1245, 1252, 1280, 1291, 1295, 1299, 1301], "np": [6, 12, 14, 24, 466, 534, 545, 554, 556, 571, 1007, 1042, 1110, 1243, 1252, 1263, 1264, 1268, 1271, 1276, 1279, 1280, 1282, 1287, 1289, 1290, 1291, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "arrai": [6, 12, 14, 24, 41, 43, 49, 51, 52, 57, 61, 62, 64, 65, 66, 67, 68, 86, 90, 91, 93, 94, 95, 96, 97, 113, 114, 115, 116, 117, 118, 119, 120, 121, 133, 134, 135, 141, 142, 153, 156, 159, 160, 165, 169, 171, 178, 185, 190, 201, 207, 218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 246, 247, 249, 250, 253, 260, 261, 263, 265, 267, 268, 274, 285, 286, 287, 292, 296, 297, 298, 301, 307, 318, 319, 320, 325, 326, 328, 329, 333, 334, 335, 338, 344, 355, 356, 357, 362, 363, 365, 366, 370, 371, 372, 441, 442, 443, 444, 445, 456, 466, 496, 497, 499, 515, 518, 522, 523, 524, 529, 531, 533, 534, 537, 545, 548, 549, 554, 556, 563, 564, 571, 593, 595, 601, 603, 604, 609, 613, 614, 616, 617, 618, 619, 620, 638, 642, 643, 645, 646, 647, 648, 649, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 679, 681, 688, 695, 700, 714, 715, 716, 722, 723, 724, 732, 737, 740, 743, 744, 747, 751, 753, 760, 767, 772, 784, 790, 801, 802, 803, 808, 812, 813, 814, 815, 826, 828, 829, 830, 832, 833, 836, 843, 844, 846, 848, 850, 851, 857, 868, 869, 870, 875, 879, 880, 881, 884, 890, 901, 902, 903, 908, 909, 911, 912, 916, 917, 918, 921, 927, 938, 939, 940, 945, 946, 948, 949, 953, 954, 955, 1007, 1016, 1017, 1018, 1020, 1032, 1042, 1072, 1073, 1075, 1091, 1094, 1098, 1099, 1100, 1105, 1107, 1109, 1110, 1112, 1114, 1120, 1126, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1155, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1197, 1198, 1199, 1200, 1201, 1205, 1207, 1208, 1214, 1215, 1216, 1217, 1222, 1223, 1224, 1225, 1226, 1230, 1231, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1243, 1252, 1263, 1276, 1289, 1291, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "295": [6, 545, 1252], "float64": [6, 441, 442, 545, 1016, 1017, 1287, 1301], "nd": [7, 546], "65535": [7, 546], "h": [7, 12, 135, 143, 144, 145, 203, 260, 270, 303, 340, 366, 451, 458, 464, 465, 469, 470, 484, 489, 490, 495, 505, 528, 546, 554, 716, 725, 726, 727, 786, 843, 853, 886, 923, 949, 1027, 1034, 1040, 1041, 1045, 1046, 1060, 1065, 1066, 1071, 1081, 1104, 1216, 1263, 1270], "": [7, 40, 41, 55, 68, 72, 84, 97, 101, 113, 114, 117, 120, 134, 135, 146, 147, 148, 159, 203, 205, 218, 225, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 270, 272, 285, 292, 296, 297, 298, 303, 305, 318, 328, 333, 334, 335, 340, 342, 355, 365, 370, 371, 372, 429, 430, 436, 440, 456, 465, 469, 470, 471, 472, 484, 496, 500, 501, 513, 516, 521, 522, 523, 525, 528, 530, 531, 534, 546, 591, 593, 607, 620, 624, 636, 649, 653, 665, 666, 669, 672, 715, 716, 729, 730, 731, 743, 786, 788, 801, 808, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 853, 855, 868, 875, 879, 880, 881, 886, 888, 901, 911, 916, 917, 918, 923, 925, 938, 948, 953, 954, 955, 988, 989, 995, 999, 1000, 1005, 1007, 1009, 1015, 1032, 1041, 1045, 1046, 1047, 1048, 1060, 1072, 1076, 1077, 1089, 1092, 1097, 1098, 1099, 1101, 1104, 1106, 1107, 1110, 1112, 1124, 1137, 1141, 1153, 1166, 1170, 1216, 1217, 1227, 1252, 1259, 1260, 1263, 1268, 1270, 1271, 1280, 1287, 1289, 1291, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1304], "radar_estimated_rain_r": [7, 546], "integ": [7, 218, 285, 318, 355, 396, 516, 517, 546, 801, 868, 901, 938, 981, 1092, 1093], "repres": [7, 55, 84, 129, 133, 137, 138, 139, 140, 150, 151, 152, 154, 155, 497, 508, 511, 518, 519, 520, 525, 527, 533, 534, 546, 607, 636, 710, 714, 718, 719, 720, 721, 734, 735, 736, 738, 739, 1073, 1084, 1087, 1094, 1095, 1096, 1101, 1103, 1109, 1110, 1124, 1153, 1185, 1186, 1250, 1252], "No": [7, 66, 67, 95, 96, 135, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 394, 442, 451, 511, 546, 618, 619, 647, 648, 716, 801, 808, 812, 813, 814, 815, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 979, 1017, 1027, 1087, 1135, 1136, 1164, 1165], "valid_range_from_fil": [8, 550], "units_from_fil": [8, 550], "pulse_width": [8, 148, 159, 396, 472, 550, 731, 743, 981, 1048, 1252], "gamic": [8, 550, 1252], "hdf5": [8, 17, 26, 27, 550, 559, 574, 575, 1252, 1293], "extract": [8, 218, 285, 318, 355, 390, 492, 510, 550, 801, 868, 901, 938, 975, 1068, 1086, 1209, 1210, 1221, 1252, 1257, 1263, 1284, 1286, 1289, 1292, 1293], "valid": [8, 41, 55, 84, 122, 131, 132, 133, 137, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 192, 219, 243, 261, 286, 319, 356, 386, 395, 396, 442, 445, 456, 461, 465, 469, 470, 471, 478, 484, 491, 497, 498, 508, 519, 520, 525, 527, 550, 593, 607, 636, 702, 703, 712, 713, 714, 718, 724, 725, 726, 727, 734, 735, 736, 737, 738, 739, 774, 802, 826, 844, 869, 902, 939, 971, 980, 981, 1017, 1020, 1032, 1037, 1041, 1045, 1046, 1047, 1054, 1060, 1067, 1073, 1074, 1084, 1095, 1096, 1101, 1103, 1112, 1124, 1153, 1204, 1206, 1209, 1210, 1216, 1217, 1252, 1303], "rang": [8, 12, 14, 22, 23, 24, 55, 65, 67, 84, 94, 96, 113, 114, 115, 124, 129, 131, 132, 137, 138, 139, 140, 143, 154, 155, 193, 201, 218, 220, 225, 226, 227, 229, 230, 231, 245, 246, 247, 249, 250, 253, 260, 263, 265, 267, 268, 285, 287, 292, 293, 294, 296, 297, 301, 318, 320, 328, 329, 330, 331, 333, 334, 338, 355, 357, 365, 366, 367, 368, 370, 371, 389, 444, 445, 452, 461, 465, 466, 478, 484, 491, 492, 498, 508, 511, 515, 521, 523, 525, 526, 527, 550, 554, 556, 569, 570, 571, 607, 617, 619, 636, 646, 648, 665, 666, 667, 705, 710, 712, 713, 718, 719, 720, 721, 725, 738, 739, 775, 784, 801, 803, 808, 809, 810, 812, 813, 814, 828, 829, 830, 832, 833, 836, 843, 846, 848, 850, 851, 868, 870, 875, 876, 877, 879, 880, 884, 901, 903, 911, 912, 913, 914, 916, 917, 921, 938, 940, 948, 949, 950, 951, 953, 954, 974, 1018, 1020, 1028, 1037, 1041, 1042, 1054, 1060, 1067, 1068, 1074, 1084, 1087, 1091, 1097, 1099, 1101, 1102, 1103, 1124, 1134, 1136, 1153, 1163, 1165, 1206, 1218, 1229, 1235, 1236, 1246, 1247, 1252, 1268, 1273, 1276, 1282, 1291, 1295, 1301], "valid_min": [8, 133, 134, 135, 382, 550, 714, 715, 716, 967, 1252, 1289, 1301], "valid_max": [8, 133, 134, 135, 382, 550, 714, 715, 716, 967, 1289, 1301], "when": [8, 16, 17, 18, 28, 30, 41, 55, 56, 57, 61, 62, 64, 66, 67, 84, 85, 86, 90, 91, 93, 95, 96, 131, 132, 133, 134, 135, 146, 147, 150, 157, 158, 163, 164, 165, 169, 171, 178, 185, 190, 218, 225, 229, 230, 231, 232, 245, 246, 254, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 338, 355, 365, 366, 370, 371, 372, 386, 387, 389, 390, 392, 396, 397, 410, 442, 447, 456, 461, 469, 478, 491, 494, 501, 504, 505, 508, 511, 514, 519, 521, 522, 523, 527, 533, 534, 550, 558, 559, 560, 577, 581, 593, 607, 608, 609, 613, 614, 616, 618, 619, 636, 637, 638, 642, 643, 645, 647, 648, 675, 679, 681, 688, 695, 700, 712, 713, 714, 715, 716, 729, 730, 734, 741, 742, 747, 751, 753, 760, 767, 772, 801, 808, 812, 813, 814, 815, 828, 829, 837, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 921, 938, 948, 949, 953, 954, 955, 971, 972, 974, 975, 977, 981, 983, 1007, 1017, 1018, 1022, 1032, 1037, 1045, 1054, 1067, 1070, 1077, 1080, 1081, 1084, 1087, 1090, 1095, 1097, 1098, 1099, 1103, 1109, 1110, 1111, 1112, 1124, 1125, 1126, 1130, 1131, 1133, 1135, 1136, 1153, 1154, 1155, 1159, 1160, 1162, 1164, 1165, 1216, 1237, 1252, 1268, 1289, 1293, 1296, 1297, 1300, 1302, 1303, 1305], "thei": [8, 68, 97, 133, 134, 135, 141, 150, 151, 152, 169, 171, 178, 366, 382, 390, 396, 456, 492, 521, 536, 548, 550, 620, 649, 679, 681, 688, 714, 715, 716, 722, 734, 735, 736, 751, 753, 760, 949, 967, 975, 981, 1032, 1068, 1097, 1137, 1166, 1289, 1303], "present": [8, 40, 41, 55, 84, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 395, 396, 435, 442, 550, 591, 593, 607, 636, 801, 808, 812, 813, 814, 815, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 980, 981, 994, 1004, 1017, 1112, 1124, 1153, 1295, 1300], "unit": [8, 16, 17, 18, 65, 94, 116, 117, 118, 119, 120, 131, 132, 134, 135, 208, 211, 212, 213, 214, 215, 216, 223, 275, 278, 279, 280, 281, 282, 283, 290, 308, 311, 312, 313, 314, 315, 316, 323, 345, 348, 349, 350, 351, 352, 353, 360, 375, 382, 384, 465, 484, 486, 516, 550, 558, 559, 560, 617, 646, 668, 669, 670, 671, 672, 712, 713, 715, 716, 791, 794, 795, 796, 797, 798, 799, 806, 858, 861, 862, 863, 864, 865, 866, 873, 891, 894, 895, 896, 897, 898, 899, 906, 928, 931, 932, 933, 934, 935, 936, 943, 960, 967, 969, 1041, 1060, 1062, 1092, 1111, 1134, 1163, 1189, 1204, 1216, 1217, 1252, 1277, 1282, 1289, 1293, 1296, 1301, 1303], "avail": [8, 16, 17, 18, 55, 66, 67, 68, 84, 95, 96, 97, 122, 123, 124, 141, 142, 150, 151, 152, 178, 190, 245, 246, 247, 249, 250, 253, 263, 265, 267, 384, 394, 511, 550, 558, 559, 560, 578, 607, 618, 619, 620, 636, 647, 648, 649, 688, 700, 703, 704, 705, 722, 724, 734, 735, 736, 760, 772, 828, 829, 830, 832, 833, 836, 846, 848, 850, 969, 979, 1087, 1124, 1135, 1136, 1137, 1153, 1164, 1165, 1166, 1204, 1239, 1252, 1257, 1259, 1268, 1293], "mandatori": [8, 550], "processor": [8, 550], "pulsewidth": [8, 511, 550, 1087], "enum": [8, 550], "should": [8, 24, 32, 41, 55, 57, 64, 84, 86, 93, 128, 133, 134, 135, 142, 147, 165, 169, 201, 244, 262, 329, 366, 376, 390, 393, 395, 396, 424, 441, 442, 496, 498, 508, 511, 519, 520, 521, 522, 523, 528, 530, 533, 534, 536, 550, 571, 583, 593, 607, 609, 616, 636, 638, 645, 675, 679, 709, 714, 715, 716, 724, 730, 747, 751, 784, 827, 845, 912, 949, 958, 959, 961, 975, 978, 980, 981, 1016, 1017, 1072, 1074, 1084, 1087, 1095, 1096, 1097, 1098, 1099, 1104, 1106, 1109, 1110, 1112, 1124, 1126, 1133, 1153, 1155, 1162, 1216, 1217, 1252, 1268, 1289, 1293, 1302, 1303, 1305], "u": [8, 51, 52, 53, 117, 120, 518, 533, 534, 550, 603, 604, 605, 669, 672, 1094, 1109, 1110, 1252, 1260, 1291, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "gif": [9, 551], "precipitation_typ": [10, 20, 552, 562], "grib": [10, 552], "locat": [11, 41, 43, 55, 65, 66, 67, 84, 94, 95, 96, 201, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 243, 245, 246, 247, 249, 250, 253, 260, 261, 263, 265, 267, 268, 285, 286, 287, 290, 291, 292, 293, 294, 296, 297, 298, 301, 318, 319, 320, 323, 324, 326, 328, 329, 330, 331, 333, 334, 335, 338, 355, 356, 357, 360, 361, 363, 365, 366, 367, 368, 370, 371, 372, 386, 387, 389, 395, 440, 441, 442, 553, 593, 595, 607, 617, 618, 619, 636, 646, 647, 648, 784, 801, 802, 803, 806, 807, 808, 809, 810, 812, 813, 814, 815, 826, 828, 829, 830, 832, 833, 836, 843, 844, 846, 848, 850, 851, 868, 869, 870, 873, 874, 875, 876, 877, 879, 880, 881, 884, 901, 902, 903, 906, 907, 909, 911, 912, 913, 914, 916, 917, 918, 921, 938, 939, 940, 943, 944, 946, 948, 949, 950, 951, 953, 954, 955, 971, 972, 974, 980, 1007, 1015, 1016, 1017, 1112, 1114, 1124, 1134, 1135, 1136, 1153, 1163, 1164, 1165, 1184, 1196, 1203, 1219, 1220, 1221, 1252, 1274, 1276, 1287, 1293, 1299, 1302, 1303], "hpl": [11, 553], "ascii": [11, 553], "halo": [11, 553], "photono": [11, 553], "steamlin": [11, 553], "lidar": [11, 553, 1293], "come": [11, 525, 553, 1101, 1289], "assign": [11, 133, 150, 518, 553, 714, 734, 1094, 1252, 1289], "lat": [11, 50, 66, 95, 116, 117, 118, 119, 120, 121, 157, 158, 207, 232, 244, 245, 246, 248, 249, 250, 252, 253, 262, 264, 265, 266, 267, 274, 298, 307, 325, 327, 329, 335, 344, 362, 364, 372, 393, 394, 461, 491, 494, 553, 602, 618, 647, 668, 669, 670, 671, 672, 673, 741, 742, 790, 815, 827, 828, 829, 831, 832, 833, 835, 836, 845, 847, 848, 849, 850, 857, 881, 890, 908, 910, 912, 918, 927, 945, 947, 955, 978, 979, 1037, 1067, 1070, 1121, 1135, 1164, 1252, 1269, 1270, 1283, 1299], "lon": [11, 50, 66, 95, 116, 117, 118, 119, 120, 121, 157, 158, 207, 232, 244, 245, 246, 248, 249, 250, 252, 253, 262, 264, 265, 266, 267, 274, 298, 307, 325, 327, 329, 335, 344, 362, 364, 372, 393, 394, 461, 491, 494, 553, 602, 618, 647, 668, 669, 670, 671, 672, 673, 741, 742, 790, 815, 827, 828, 829, 831, 832, 833, 835, 836, 845, 847, 848, 849, 850, 857, 881, 890, 908, 910, 912, 918, 927, 945, 947, 955, 978, 979, 1037, 1067, 1070, 1121, 1135, 1164, 1252, 1270, 1283], "alt": [11, 50, 66, 95, 121, 393, 553, 602, 618, 647, 673, 978, 1121, 1135, 1164, 1252], "ad": [11, 41, 55, 57, 84, 86, 141, 146, 147, 254, 327, 364, 441, 496, 511, 553, 593, 607, 609, 636, 638, 722, 729, 730, 837, 910, 947, 1016, 1072, 1087, 1112, 1124, 1126, 1153, 1155, 1252, 1279, 1280, 1295, 1296, 1302, 1303], "global": [11, 55, 84, 553, 607, 636, 1124, 1153, 1301, 1302], "variabl": [11, 28, 40, 41, 49, 50, 51, 55, 65, 84, 94, 165, 201, 235, 254, 268, 301, 338, 392, 393, 456, 467, 468, 499, 501, 510, 518, 521, 524, 528, 529, 531, 553, 577, 591, 593, 601, 602, 603, 607, 617, 636, 646, 675, 747, 784, 818, 837, 851, 884, 921, 977, 978, 1007, 1018, 1032, 1043, 1044, 1075, 1077, 1086, 1094, 1097, 1100, 1104, 1105, 1107, 1112, 1120, 1121, 1124, 1134, 1153, 1163, 1216, 1252, 1259, 1263, 1287, 1289, 1293, 1295, 1296, 1301, 1302], "location_campaign": [11, 553], "script": [11, 40, 535, 553, 591, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291], "filenames_iq": [12, 554], "nbyte": [12, 14, 24, 554, 556, 571], "4": [12, 14, 24, 26, 27, 55, 84, 113, 114, 121, 131, 132, 150, 151, 380, 384, 440, 447, 524, 525, 554, 556, 571, 574, 575, 607, 636, 665, 666, 673, 712, 713, 734, 735, 965, 969, 1015, 1022, 1100, 1101, 1124, 1153, 1235, 1259, 1260, 1268, 1270, 1272, 1277, 1278, 1279, 1280, 1282, 1283, 1288, 1289, 1291, 1293, 1300, 1303], "prf": [12, 554, 1252], "ang_tol": [12, 22, 23, 469, 491, 492, 554, 569, 570, 1045, 1067, 1068], "noise_h": [12, 554], "noise_v": [12, 554], "rconst_h": [12, 554], "rconst_v": [12, 554], "radconst_h": [12, 554], "radconst_v": [12, 554], "mfloss_h": [12, 554], "mfloss_v": [12, 554], "azi_min": [12, 22, 23, 554, 569, 570, 1246, 1247], "azi_max": [12, 22, 23, 554, 569, 570, 1246, 1247], "ele_min": [12, 22, 23, 554, 569, 570, 1246, 1247], "ele_max": [12, 22, 23, 554, 569, 570, 1246, 1247], "rng_min": [12, 22, 23, 515, 554, 569, 570, 1091, 1246, 1247], "rng_max": [12, 22, 23, 515, 554, 569, 570, 1091, 1246, 1247], "rad4alp": [12, 554], "iq": [12, 449, 451, 458, 460, 462, 464, 468, 475, 477, 481, 489, 490, 495, 554, 1025, 1027, 1034, 1036, 1038, 1040, 1044, 1051, 1053, 1057, 1065, 1066, 1071, 1293], "refer": [12, 16, 22, 23, 26, 29, 41, 55, 57, 84, 86, 113, 117, 120, 122, 123, 124, 125, 126, 128, 131, 132, 133, 134, 135, 138, 139, 142, 146, 147, 148, 149, 150, 151, 152, 156, 159, 207, 232, 274, 298, 307, 335, 344, 372, 386, 387, 388, 440, 451, 452, 456, 461, 465, 466, 469, 470, 471, 473, 478, 479, 484, 491, 492, 494, 496, 497, 498, 500, 511, 514, 518, 521, 522, 523, 525, 527, 528, 530, 532, 533, 534, 554, 558, 569, 570, 574, 579, 593, 607, 609, 636, 638, 665, 669, 672, 703, 704, 705, 706, 707, 709, 712, 713, 714, 715, 716, 719, 720, 724, 729, 730, 731, 733, 734, 735, 736, 740, 743, 790, 815, 857, 881, 890, 918, 927, 955, 971, 972, 973, 1015, 1023, 1027, 1028, 1032, 1037, 1041, 1042, 1045, 1046, 1047, 1049, 1054, 1055, 1060, 1067, 1068, 1070, 1072, 1073, 1074, 1076, 1087, 1090, 1094, 1097, 1098, 1099, 1101, 1103, 1104, 1106, 1108, 1109, 1110, 1112, 1124, 1126, 1153, 1155, 1216, 1217, 1227, 1242, 1252, 1293, 1301, 1303], "rainbow": [12, 22, 23, 24, 554, 569, 570, 571], "byte": [12, 14, 24, 394, 422, 554, 556, 571, 979, 1252], "numpi": [12, 14, 24, 57, 86, 171, 185, 548, 549, 554, 556, 563, 564, 571, 609, 638, 681, 695, 753, 767, 1126, 1155, 1239, 1252, 1254, 1263, 1264, 1268, 1271, 1276, 1279, 1280, 1282, 1287, 1289, 1290, 1291, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "e": [12, 14, 24, 27, 135, 141, 146, 147, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 378, 394, 435, 454, 492, 496, 521, 525, 527, 530, 554, 556, 571, 575, 716, 722, 729, 730, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 963, 979, 994, 1004, 1030, 1068, 1072, 1097, 1101, 1103, 1106, 1202, 1203, 1227, 1229, 1259, 1271, 1289, 1302, 1303], "g": [12, 14, 24, 27, 141, 394, 440, 491, 511, 521, 523, 534, 554, 556, 571, 575, 722, 979, 1015, 1067, 1087, 1097, 1099, 1110], "go": [12, 14, 24, 142, 150, 151, 152, 456, 482, 500, 501, 502, 504, 505, 518, 527, 554, 556, 571, 724, 734, 735, 736, 1032, 1058, 1076, 1077, 1078, 1080, 1081, 1094, 1103, 1202, 1203, 1229, 1246, 1247, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1296], "float6432": [12, 554], "scan": [12, 16, 26, 27, 55, 84, 133, 134, 135, 136, 139, 149, 201, 217, 218, 220, 231, 268, 284, 285, 287, 297, 301, 317, 318, 320, 334, 338, 354, 355, 357, 371, 386, 498, 525, 527, 554, 558, 574, 575, 607, 636, 714, 715, 716, 717, 720, 733, 784, 800, 801, 803, 814, 851, 867, 868, 870, 880, 884, 900, 901, 903, 917, 921, 937, 938, 940, 954, 971, 1018, 1023, 1074, 1101, 1103, 1124, 1153, 1185, 1186, 1219, 1232, 1237, 1244, 1250, 1252, 1260, 1263, 1273, 1274, 1284], "toler": [12, 22, 23, 461, 469, 491, 492, 494, 507, 554, 569, 570, 1007, 1008, 1010, 1037, 1045, 1067, 1068, 1070, 1083, 1202, 1209, 1210, 1225, 1229, 1252], "angl": [12, 22, 23, 55, 61, 62, 84, 90, 91, 113, 114, 115, 131, 132, 143, 144, 145, 148, 149, 156, 157, 158, 159, 201, 218, 230, 268, 285, 301, 318, 338, 355, 445, 469, 491, 492, 509, 511, 515, 523, 525, 527, 528, 549, 554, 569, 570, 607, 613, 614, 636, 642, 643, 665, 666, 667, 712, 713, 725, 726, 727, 731, 733, 740, 741, 742, 743, 784, 801, 813, 851, 868, 884, 901, 921, 938, 1020, 1045, 1067, 1068, 1085, 1087, 1091, 1099, 1101, 1103, 1104, 1124, 1130, 1131, 1153, 1159, 1160, 1197, 1198, 1199, 1200, 1204, 1209, 1210, 1219, 1220, 1225, 1229, 1237, 1240, 1241, 1250, 1252, 1282, 1284, 1291, 1295, 1301], "distanc": [12, 22, 23, 41, 49, 67, 96, 113, 114, 115, 218, 229, 285, 296, 318, 333, 355, 370, 437, 438, 439, 441, 442, 461, 466, 491, 498, 516, 518, 523, 525, 526, 527, 554, 569, 570, 593, 601, 619, 648, 665, 666, 667, 801, 812, 868, 879, 901, 916, 938, 953, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1037, 1042, 1067, 1074, 1092, 1094, 1099, 1101, 1102, 1103, 1112, 1120, 1136, 1165, 1203, 1209, 1210, 1217, 1219, 1220, 1221, 1245, 1263, 1272, 1277, 1278, 1279], "psr": [12, 22, 23, 145, 554, 565, 566, 567, 569, 570, 727, 1228, 1242], "estim": [12, 124, 137, 138, 139, 140, 143, 144, 150, 151, 152, 160, 195, 199, 220, 287, 320, 357, 453, 465, 466, 468, 470, 471, 473, 484, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 521, 522, 523, 526, 528, 554, 705, 718, 719, 720, 721, 723, 725, 726, 734, 735, 736, 744, 777, 781, 803, 870, 903, 940, 1029, 1041, 1042, 1044, 1046, 1047, 1049, 1060, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1097, 1098, 1099, 1102, 1104, 1216, 1217, 1252, 1289], "v": [12, 24, 51, 52, 54, 143, 144, 145, 431, 432, 435, 458, 464, 489, 490, 495, 509, 525, 533, 534, 554, 571, 603, 604, 606, 725, 726, 727, 990, 991, 994, 1001, 1002, 1004, 1034, 1040, 1065, 1066, 1071, 1085, 1101, 1109, 1110, 1279, 1280, 1291, 1303], "nois": [12, 22, 23, 128, 140, 143, 144, 145, 198, 446, 451, 460, 465, 466, 467, 468, 470, 471, 475, 476, 477, 480, 483, 484, 486, 487, 488, 495, 554, 569, 570, 709, 721, 725, 726, 727, 780, 1021, 1027, 1036, 1041, 1042, 1043, 1044, 1046, 1047, 1051, 1052, 1053, 1056, 1059, 1060, 1062, 1063, 1064, 1071, 1216, 1217, 1222, 1233, 1252, 1297], "power": [12, 22, 23, 122, 124, 143, 144, 145, 146, 147, 148, 159, 160, 197, 460, 465, 467, 470, 471, 473, 475, 476, 478, 479, 483, 484, 486, 487, 500, 501, 502, 503, 504, 505, 511, 554, 569, 570, 703, 705, 725, 726, 727, 728, 729, 730, 731, 743, 744, 779, 1036, 1041, 1043, 1046, 1047, 1049, 1051, 1052, 1054, 1055, 1059, 1060, 1062, 1063, 1076, 1077, 1078, 1079, 1080, 1081, 1087, 1217, 1222], "adu": [12, 465, 467, 468, 482, 483, 484, 485, 486, 487, 488, 554, 1041, 1043, 1044, 1058, 1059, 1060, 1061, 1062, 1063, 1064], "dynam": [12, 134, 554, 715], "factor": [12, 113, 114, 115, 125, 146, 147, 396, 452, 493, 500, 501, 502, 503, 504, 505, 511, 527, 529, 554, 665, 666, 667, 706, 729, 730, 981, 1023, 1028, 1069, 1076, 1077, 1078, 1079, 1080, 1081, 1087, 1103, 1105, 1201, 1270, 1278, 1284, 1299], "convers": [12, 26, 27, 469, 491, 554, 574, 575, 1045, 1067, 1201], "dbadu": [12, 465, 484, 486, 554, 1041, 1060, 1062], "dbm": [12, 143, 144, 145, 148, 159, 160, 465, 470, 471, 473, 479, 484, 486, 554, 725, 726, 727, 731, 743, 744, 1041, 1046, 1047, 1049, 1055, 1060, 1062], "dbz": [12, 24, 122, 128, 146, 147, 443, 452, 456, 466, 480, 496, 518, 525, 530, 554, 571, 703, 709, 729, 730, 1028, 1032, 1042, 1056, 1072, 1094, 1101, 1106, 1259, 1263, 1270, 1277, 1278, 1284, 1289, 1301], "constant": [12, 132, 386, 437, 441, 442, 472, 473, 479, 493, 516, 521, 554, 713, 971, 1011, 1016, 1017, 1048, 1049, 1055, 1069, 1092, 1097, 1252, 1260], "match": [12, 133, 136, 141, 201, 268, 301, 338, 390, 473, 479, 508, 533, 534, 554, 714, 717, 722, 784, 851, 884, 921, 975, 1007, 1049, 1055, 1084, 1109, 1110, 1252, 1263, 1270], "filter": [12, 58, 87, 131, 132, 133, 134, 135, 136, 139, 140, 141, 150, 151, 152, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 441, 442, 454, 473, 479, 519, 520, 521, 522, 523, 554, 610, 639, 675, 679, 681, 688, 695, 700, 712, 713, 714, 715, 716, 717, 720, 721, 722, 728, 734, 735, 736, 801, 808, 812, 813, 814, 815, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 1007, 1016, 1017, 1030, 1049, 1055, 1095, 1096, 1097, 1098, 1099, 1127, 1156, 1252, 1255, 1263, 1264, 1265, 1269, 1288, 1297, 1300], "loss": [12, 149, 473, 479, 511, 554, 733, 1049, 1055, 1087], "receiv": [12, 148, 149, 156, 159, 473, 479, 554, 731, 733, 740, 743, 1049, 1055, 1252, 1297], "db": [12, 142, 143, 144, 148, 149, 159, 160, 195, 199, 445, 446, 473, 479, 511, 525, 554, 724, 725, 726, 731, 733, 743, 744, 777, 781, 1020, 1021, 1049, 1055, 1087, 1101, 1222, 1279, 1301], "minimum": [12, 22, 23, 122, 129, 131, 132, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 193, 196, 197, 198, 199, 200, 218, 220, 225, 228, 229, 230, 231, 232, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 394, 440, 442, 456, 461, 465, 469, 471, 478, 484, 491, 492, 496, 499, 508, 511, 515, 519, 520, 525, 527, 554, 569, 570, 703, 710, 712, 713, 718, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 734, 735, 736, 737, 738, 739, 775, 778, 779, 780, 781, 782, 801, 803, 808, 811, 812, 813, 814, 815, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 912, 915, 916, 917, 918, 938, 940, 948, 949, 952, 953, 954, 955, 979, 1015, 1017, 1032, 1037, 1041, 1045, 1047, 1054, 1060, 1067, 1068, 1072, 1075, 1084, 1087, 1091, 1095, 1096, 1101, 1103, 1184, 1204, 1206, 1216, 1217, 1229, 1252, 1289, 1299], "maximum": [12, 14, 22, 23, 84, 125, 126, 129, 131, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 193, 195, 196, 197, 198, 218, 220, 225, 228, 229, 230, 231, 232, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 394, 440, 442, 452, 456, 461, 469, 478, 491, 492, 494, 496, 497, 498, 501, 504, 505, 508, 515, 521, 525, 526, 527, 554, 556, 569, 570, 636, 706, 707, 710, 712, 713, 714, 715, 718, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 734, 735, 736, 738, 739, 775, 777, 778, 779, 780, 801, 803, 808, 811, 812, 813, 814, 815, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 912, 915, 916, 917, 918, 938, 940, 948, 949, 952, 953, 954, 955, 958, 979, 1015, 1017, 1023, 1028, 1032, 1037, 1045, 1054, 1067, 1068, 1070, 1072, 1073, 1074, 1077, 1080, 1081, 1084, 1091, 1097, 1101, 1102, 1103, 1153, 1184, 1201, 1217, 1222, 1232, 1233, 1234, 1288, 1289, 1301], "keep": [12, 22, 23, 30, 133, 140, 194, 390, 497, 548, 554, 569, 570, 581, 714, 721, 776, 975, 1073, 1246, 1247, 1263, 1289, 1303, 1305], "k": [13, 120, 222, 223, 224, 226, 227, 228, 246, 289, 290, 291, 293, 294, 295, 322, 323, 324, 330, 331, 332, 359, 360, 361, 367, 368, 369, 427, 431, 432, 434, 435, 456, 511, 521, 533, 555, 672, 805, 806, 807, 809, 810, 811, 829, 872, 873, 874, 876, 877, 878, 905, 906, 907, 913, 914, 915, 942, 943, 944, 950, 951, 952, 986, 990, 991, 993, 994, 998, 1001, 1002, 1003, 1004, 1032, 1087, 1097, 1109, 1269, 1276, 1279, 1280, 1303], "band": [13, 19, 122, 124, 128, 394, 456, 461, 495, 500, 513, 521, 522, 523, 530, 531, 555, 561, 703, 705, 709, 979, 1032, 1037, 1071, 1076, 1089, 1097, 1098, 1099, 1106, 1107, 1252], "arm": [13, 28, 50, 378, 379, 392, 393, 510, 555, 577, 602, 963, 964, 977, 978, 1086, 1121, 1184, 1189, 1252, 1265, 1280, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1305], "zenith": [13, 555], "kazr": [13, 555, 1252], "ingest": [13, 555, 1252, 1293, 1294], "rmax": [14, 193, 478, 556, 775, 1054, 1229], "noxp": [15, 557, 1252], "iphex": [15, 557, 1252], "gain": [16, 17, 18, 26, 27, 28, 148, 159, 473, 511, 558, 559, 560, 574, 575, 577, 731, 743, 1049, 1087], "nodata": [16, 17, 18, 26, 27, 558, 559, 560, 574, 575], "nan": [16, 17, 18, 133, 173, 192, 193, 197, 523, 548, 549, 558, 559, 560, 563, 564, 683, 702, 714, 728, 755, 774, 775, 779, 1099, 1252, 1287], "undetect": [16, 17, 18, 26, 27, 558, 559, 560, 574, 575], "use_file_convers": [16, 17, 18, 558, 559, 560], "time_ref": [16, 26, 558, 574], "start": [16, 26, 41, 55, 70, 71, 82, 83, 84, 99, 100, 111, 112, 390, 396, 470, 492, 510, 525, 548, 558, 574, 593, 607, 622, 623, 634, 635, 636, 651, 652, 663, 664, 975, 981, 1046, 1068, 1086, 1101, 1112, 1124, 1139, 1140, 1151, 1152, 1153, 1168, 1169, 1180, 1181, 1212, 1259, 1268, 1269, 1279, 1280, 1293, 1295, 1303, 1304], "convert": [16, 17, 18, 21, 26, 27, 49, 121, 148, 496, 537, 558, 559, 560, 568, 574, 575, 601, 673, 731, 1072, 1120, 1232, 1250, 1252, 1289], "what": [16, 17, 18, 26, 133, 442, 558, 559, 560, 574, 714, 746, 1017, 1252, 1259, 1268, 1295, 1297, 1300, 1303, 1305], "user": [16, 17, 18, 24, 40, 58, 87, 123, 124, 136, 366, 394, 483, 487, 558, 559, 560, 571, 591, 610, 639, 704, 705, 717, 949, 979, 1059, 1063, 1127, 1156, 1249, 1252, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "physic": [16, 17, 18, 26, 27, 28, 496, 548, 549, 558, 559, 560, 563, 564, 574, 575, 577, 732, 1007, 1023, 1072, 1289], "otherwis": [16, 17, 18, 133, 150, 151, 424, 431, 456, 461, 467, 469, 476, 478, 482, 483, 487, 491, 492, 494, 499, 501, 504, 505, 509, 511, 516, 548, 549, 558, 559, 560, 563, 564, 714, 734, 735, 990, 1001, 1032, 1037, 1043, 1045, 1052, 1054, 1058, 1059, 1063, 1067, 1068, 1070, 1075, 1077, 1080, 1081, 1085, 1087, 1092, 1208, 1239], "pass": [16, 17, 18, 116, 118, 119, 133, 134, 135, 217, 218, 225, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 260, 263, 265, 267, 284, 285, 292, 296, 297, 298, 317, 318, 325, 326, 327, 328, 329, 330, 333, 334, 335, 354, 355, 362, 363, 364, 365, 366, 367, 370, 371, 372, 376, 377, 386, 388, 440, 442, 508, 521, 558, 559, 560, 668, 670, 671, 714, 715, 716, 800, 801, 808, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 843, 846, 848, 850, 867, 868, 875, 879, 880, 881, 900, 901, 908, 909, 910, 911, 912, 913, 916, 917, 918, 937, 938, 945, 946, 947, 948, 949, 950, 953, 954, 955, 961, 962, 971, 973, 1015, 1017, 1084, 1097, 1252, 1259, 1260, 1296, 1299], "mid": [16, 26, 558, 574], "end": [16, 26, 40, 63, 71, 79, 83, 92, 100, 108, 112, 122, 123, 124, 134, 135, 138, 139, 142, 147, 150, 151, 152, 525, 558, 574, 591, 615, 623, 631, 635, 644, 652, 660, 664, 703, 704, 705, 715, 716, 719, 720, 724, 730, 734, 735, 736, 1101, 1132, 1140, 1148, 1152, 1161, 1169, 1177, 1181, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293], "expect": [16, 26, 232, 298, 335, 372, 523, 558, 574, 815, 881, 918, 955, 1099, 1303], "starttim": [16, 26, 558, 574], "middl": [16, 23, 26, 558, 570, 574], "endtim": [16, 26, 558, 574], "include_dataset": [17, 559], "exclude_dataset": [17, 559], "dataset": [17, 26, 27, 247, 329, 366, 386, 388, 468, 510, 559, 574, 575, 830, 912, 949, 971, 973, 1044, 1086, 1211, 1214, 1221, 1252, 1259, 1287, 1290, 1291, 1293, 1295], "given": [17, 32, 35, 36, 37, 39, 41, 43, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 84, 90, 91, 92, 93, 96, 97, 98, 99, 100, 131, 132, 133, 149, 156, 157, 159, 167, 169, 170, 171, 172, 174, 176, 177, 181, 183, 184, 185, 186, 188, 189, 191, 193, 196, 197, 218, 223, 224, 244, 248, 249, 250, 251, 252, 253, 262, 264, 265, 266, 267, 285, 290, 291, 318, 323, 324, 325, 326, 355, 360, 361, 362, 363, 431, 441, 442, 456, 478, 483, 487, 509, 511, 518, 524, 559, 583, 586, 587, 588, 590, 593, 595, 607, 613, 614, 615, 616, 619, 620, 621, 622, 623, 636, 642, 643, 644, 645, 648, 649, 650, 651, 652, 677, 679, 680, 681, 682, 684, 686, 687, 691, 693, 694, 695, 696, 698, 699, 701, 712, 713, 714, 728, 733, 740, 741, 743, 749, 751, 752, 753, 754, 756, 758, 759, 763, 765, 766, 767, 768, 770, 771, 773, 775, 778, 779, 801, 806, 807, 827, 831, 832, 833, 834, 835, 836, 845, 847, 848, 849, 850, 868, 873, 874, 901, 906, 907, 908, 909, 938, 943, 944, 945, 946, 990, 1001, 1007, 1014, 1016, 1017, 1032, 1054, 1059, 1063, 1085, 1087, 1094, 1100, 1112, 1114, 1124, 1130, 1131, 1132, 1133, 1136, 1137, 1138, 1139, 1140, 1153, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1168, 1169, 1182, 1220, 1221, 1230, 1231, 1244, 1287, 1289, 1293], "dataset1": [17, 559], "dataset2": [17, 559], "vertic": [18, 55, 84, 126, 128, 133, 139, 218, 219, 220, 225, 229, 230, 231, 232, 240, 243, 245, 247, 249, 250, 253, 261, 263, 265, 267, 285, 286, 287, 292, 296, 297, 298, 318, 319, 320, 328, 333, 334, 335, 355, 356, 357, 365, 370, 371, 372, 394, 452, 458, 459, 460, 461, 464, 469, 476, 477, 478, 489, 490, 491, 494, 495, 497, 507, 508, 509, 514, 516, 518, 527, 528, 560, 607, 636, 707, 709, 714, 720, 801, 802, 803, 808, 812, 813, 814, 815, 823, 826, 828, 830, 832, 833, 836, 844, 846, 848, 850, 868, 869, 870, 875, 879, 880, 881, 901, 902, 903, 911, 916, 917, 918, 938, 939, 940, 948, 953, 954, 955, 979, 1028, 1034, 1035, 1036, 1037, 1040, 1045, 1052, 1053, 1054, 1065, 1066, 1067, 1070, 1071, 1073, 1083, 1084, 1085, 1090, 1092, 1094, 1103, 1104, 1124, 1153, 1232, 1250, 1252, 1280, 1290, 1291, 1293], "profil": [18, 27, 51, 125, 126, 131, 132, 133, 378, 379, 452, 461, 469, 478, 491, 494, 508, 510, 522, 523, 524, 527, 528, 560, 575, 603, 706, 707, 712, 713, 714, 963, 964, 1028, 1037, 1045, 1054, 1067, 1070, 1084, 1086, 1098, 1099, 1100, 1103, 1104, 1208, 1244, 1252, 1255, 1257, 1286, 1292, 1293, 1303], "those": [18, 58, 65, 87, 94, 134, 135, 165, 390, 441, 470, 536, 560, 610, 617, 639, 646, 675, 715, 716, 747, 975, 1016, 1046, 1127, 1134, 1156, 1163, 1235, 1251, 1305], "vol2bird": [18, 560], "pattern": [19, 131, 132, 527, 561, 712, 713, 1103, 1279], "25": [20, 150, 151, 562, 734, 735, 1252, 1259, 1263, 1279, 1280, 1283, 1287, 1295, 1300], "889375": [20, 562], "418": [20, 562], "4794775": [20, 562], "243": [20, 562], "png": [20, 203, 239, 255, 270, 303, 340, 562, 786, 822, 838, 853, 886, 923], "web": [20, 376, 386, 394, 562, 961, 971, 979, 1259, 1260], "mercat": [20, 260, 562, 843], "radx_dir": [21, 568], "first": [21, 28, 55, 68, 84, 97, 133, 135, 137, 142, 378, 379, 389, 392, 442, 473, 496, 521, 522, 523, 530, 568, 577, 607, 620, 636, 649, 714, 716, 718, 724, 963, 964, 974, 977, 1007, 1017, 1049, 1072, 1097, 1098, 1099, 1106, 1124, 1137, 1153, 1166, 1211, 1213, 1240, 1241, 1255, 1259, 1260, 1273, 1282, 1287, 1289, 1297, 1299, 1300, 1301, 1303], "radxconvert": [21, 568], "path": [21, 123, 124, 135, 568, 576, 704, 705, 716, 1122, 1183, 1252, 1259, 1260, 1293, 1302, 1303], "radx": [21, 568, 1252], "instal": [21, 116, 118, 119, 136, 141, 394, 536, 568, 668, 670, 671, 717, 722, 979, 1252, 1304, 1305], "filenames_psr": [22, 23, 569, 570], "undo_txcorr": [22, 23, 569, 570], "cpi": [22, 23, 565, 569, 570], "mean": [22, 113, 153, 449, 451, 461, 464, 468, 469, 478, 491, 533, 569, 665, 737, 1025, 1027, 1037, 1040, 1044, 1045, 1054, 1067, 1109, 1197, 1198, 1204, 1206, 1207, 1216, 1217, 1222, 1230, 1240, 1241, 1252, 1259, 1260, 1300, 1301, 1303], "5": [22, 23, 24, 41, 122, 124, 131, 132, 133, 136, 141, 143, 144, 145, 146, 150, 151, 152, 160, 197, 218, 225, 228, 229, 230, 231, 232, 246, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 393, 441, 442, 456, 496, 497, 499, 501, 507, 514, 518, 525, 527, 529, 569, 570, 571, 593, 703, 705, 712, 713, 714, 717, 722, 725, 726, 727, 728, 729, 734, 735, 736, 744, 779, 801, 808, 811, 812, 813, 814, 815, 829, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955, 978, 1016, 1017, 1032, 1072, 1073, 1075, 1077, 1083, 1090, 1094, 1101, 1103, 1105, 1112, 1232, 1254, 1255, 1260, 1268, 1271, 1273, 1274, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1287, 1289, 1290, 1291, 1295, 1297, 1300, 1301, 1303], "correct": [22, 23, 64, 67, 93, 96, 165, 193, 194, 195, 196, 197, 198, 199, 200, 384, 454, 510, 511, 521, 569, 570, 616, 619, 645, 648, 747, 775, 776, 777, 778, 779, 780, 781, 782, 969, 1030, 1086, 1087, 1097, 1133, 1136, 1162, 1165, 1189, 1252, 1255, 1256, 1260, 1270, 1290, 1293, 1297, 1303], "transmit": [22, 23, 473, 569, 570, 1049, 1297], "remov": [22, 23, 41, 55, 66, 67, 84, 95, 96, 122, 123, 124, 133, 138, 139, 142, 150, 151, 152, 193, 194, 195, 196, 197, 198, 199, 200, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 400, 425, 431, 432, 468, 496, 508, 569, 570, 593, 607, 618, 619, 636, 647, 648, 703, 704, 705, 714, 719, 720, 724, 728, 734, 735, 736, 775, 776, 777, 778, 779, 780, 781, 782, 801, 808, 812, 813, 814, 815, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 984, 990, 991, 997, 1001, 1002, 1044, 1072, 1084, 1112, 1124, 1135, 1136, 1153, 1164, 1165, 1217, 1252, 1254, 1264, 1270, 1279, 1289, 1297, 1300, 1303], "signal": [22, 23, 24, 128, 140, 143, 144, 145, 160, 197, 198, 446, 449, 451, 454, 460, 462, 465, 467, 468, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 486, 487, 488, 511, 569, 570, 571, 709, 721, 725, 726, 727, 728, 744, 779, 780, 1021, 1025, 1027, 1030, 1036, 1038, 1041, 1043, 1044, 1046, 1047, 1051, 1052, 1053, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1087, 1216, 1217, 1222], "low_prf": [22, 23, 569, 570], "intermediate_prf": [22, 23, 569, 570], "high_prf": [22, 23, 569, 570], "within": [22, 40, 57, 58, 86, 87, 129, 133, 134, 135, 136, 137, 138, 139, 140, 147, 150, 151, 152, 154, 155, 165, 193, 232, 298, 335, 372, 440, 441, 442, 447, 461, 469, 478, 491, 494, 497, 518, 519, 520, 525, 569, 591, 609, 610, 638, 639, 675, 710, 714, 715, 716, 717, 718, 719, 720, 721, 730, 734, 735, 736, 738, 739, 747, 775, 815, 881, 918, 955, 1015, 1016, 1017, 1022, 1037, 1045, 1054, 1067, 1070, 1073, 1094, 1095, 1096, 1101, 1126, 1127, 1155, 1156, 1196, 1209, 1210, 1218, 1219, 1221, 1230, 1231, 1251, 1252, 1259, 1260, 1270, 1271, 1293, 1297, 1299, 1303, 1305], "step": [22, 131, 132, 144, 232, 298, 335, 372, 394, 461, 469, 471, 478, 491, 492, 494, 525, 527, 569, 712, 713, 726, 815, 881, 918, 955, 979, 1037, 1045, 1047, 1054, 1067, 1068, 1070, 1101, 1103, 1217, 1224, 1236, 1259, 1279, 1280, 1289, 1305], "taken": [22, 113, 121, 146, 147, 218, 285, 318, 355, 569, 665, 673, 729, 730, 801, 868, 901, 938, 1189, 1209, 1210, 1216, 1230, 1231, 1272], "fold": [23, 133, 134, 570, 714, 715, 1259], "positive_awai": [23, 570], "get": [23, 35, 143, 144, 145, 148, 159, 236, 237, 238, 259, 397, 406, 434, 512, 515, 525, 531, 570, 586, 725, 726, 727, 731, 743, 819, 820, 821, 842, 983, 993, 1003, 1007, 1018, 1088, 1091, 1101, 1107, 1222, 1223, 1224, 1225, 1233, 1234, 1235, 1236, 1252, 1260, 1279, 1280, 1289, 1295, 1297, 1300, 1301, 1302, 1303, 1304, 1305], "complex": [23, 29, 465, 467, 476, 482, 483, 484, 485, 486, 487, 488, 532, 567, 570, 579, 1041, 1043, 1052, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1108], "spectra": [23, 25, 28, 84, 448, 450, 451, 457, 459, 462, 465, 467, 470, 474, 476, 481, 482, 483, 484, 485, 486, 487, 488, 567, 570, 573, 577, 636, 1024, 1026, 1027, 1033, 1035, 1038, 1041, 1043, 1046, 1050, 1052, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1153, 1187, 1193, 1216, 1228, 1238, 1247, 1252], "so": [23, 134, 218, 229, 285, 296, 318, 333, 355, 370, 390, 442, 445, 570, 715, 723, 801, 812, 868, 879, 901, 916, 938, 953, 975, 1017, 1020, 1228, 1252, 1259, 1260, 1289, 1303, 1305], "doppler": [23, 84, 113, 133, 134, 135, 193, 448, 449, 450, 451, 454, 465, 468, 470, 484, 508, 533, 570, 636, 665, 714, 715, 716, 775, 1024, 1025, 1026, 1027, 1030, 1041, 1044, 1046, 1060, 1084, 1109, 1153, 1216, 1217, 1253, 1256, 1257, 1272, 1282, 1293, 1301, 1303], "revers": [23, 218, 229, 285, 296, 318, 333, 355, 370, 390, 521, 570, 801, 812, 868, 879, 901, 916, 938, 953, 975, 1097, 1252], "veloc": [23, 24, 35, 68, 84, 97, 133, 134, 135, 193, 447, 448, 449, 507, 508, 509, 516, 533, 534, 570, 571, 586, 620, 636, 649, 714, 715, 716, 775, 1022, 1024, 1025, 1083, 1084, 1085, 1092, 1109, 1110, 1137, 1153, 1166, 1201, 1244, 1252, 1253, 1256, 1257, 1259, 1268, 1272, 1280, 1282, 1293, 1294, 1300, 1301, 1303], "awai": [23, 570], "routin": [24, 26, 27, 28, 392, 441, 536, 571, 574, 575, 577, 746, 977, 1016, 1252, 1293], "rainbow5": [24, 571, 1252], "version": [24, 41, 132, 164, 518, 519, 520, 533, 535, 571, 593, 713, 1009, 1094, 1095, 1096, 1109, 1112, 1196, 1252, 1293, 1301, 1302, 1303, 1305], "22": [24, 139, 148, 156, 159, 571, 720, 731, 740, 743, 1252, 1259, 1268, 1287], "3": [24, 55, 84, 113, 114, 125, 126, 133, 134, 142, 149, 159, 193, 195, 196, 199, 230, 384, 388, 394, 440, 442, 453, 493, 496, 508, 525, 527, 571, 607, 636, 665, 666, 706, 707, 714, 715, 724, 733, 743, 775, 777, 778, 781, 813, 969, 973, 979, 1015, 1017, 1029, 1069, 1072, 1084, 1101, 1103, 1124, 1153, 1184, 1217, 1224, 1236, 1254, 1255, 1257, 1260, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "34": [24, 530, 571, 1106, 1289], "16": [24, 150, 154, 500, 519, 533, 571, 734, 738, 1076, 1095, 1109, 1254, 1255, 1263, 1275, 1281, 1288, 1297, 1301, 1303], "35": [24, 135, 146, 147, 456, 571, 716, 729, 730, 1032, 1268, 1277, 1279, 1280, 1300], "sinc": [24, 509, 521, 571, 1023, 1085, 1097, 1289, 1296, 1299, 1301], "evolv": [24, 571], "constantli": [24, 571], "guaranti": [24, 571], "work": [24, 117, 120, 245, 246, 301, 329, 338, 366, 386, 388, 530, 571, 669, 672, 828, 829, 884, 912, 921, 949, 971, 973, 1106, 1252, 1260, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "necessari": [24, 571], "adapt": [24, 113, 148, 149, 156, 159, 571, 665, 731, 733, 740, 743, 1305], "code": [24, 40, 133, 516, 533, 571, 591, 714, 1092, 1109, 1252, 1254, 1255, 1257, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1302, 1305], "accord": [24, 128, 130, 390, 442, 445, 456, 463, 470, 471, 500, 501, 502, 504, 505, 571, 709, 711, 975, 1017, 1020, 1032, 1039, 1046, 1047, 1076, 1077, 1078, 1080, 1081, 1224, 1236], "its": [24, 160, 250, 521, 571, 732, 744, 833, 1097, 1239, 1252, 1293, 1302, 1303, 1305], "own": [24, 536, 571, 1268, 1293, 1302], "rais": [24, 41, 42, 48, 56, 57, 59, 68, 85, 86, 88, 97, 163, 377, 389, 431, 432, 571, 593, 594, 600, 608, 609, 611, 620, 637, 638, 640, 649, 962, 974, 990, 991, 1001, 1002, 1112, 1113, 1119, 1125, 1126, 1128, 1137, 1154, 1155, 1157, 1166, 1252], "an": [24, 26, 27, 35, 39, 40, 41, 49, 55, 57, 58, 61, 62, 68, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 97, 106, 107, 108, 109, 110, 111, 112, 126, 133, 134, 135, 136, 146, 147, 161, 164, 173, 193, 195, 196, 197, 198, 199, 200, 201, 223, 290, 323, 360, 366, 390, 393, 394, 436, 440, 441, 442, 462, 469, 470, 471, 491, 499, 510, 537, 548, 549, 563, 564, 571, 574, 575, 586, 590, 591, 593, 601, 607, 609, 610, 613, 614, 620, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 642, 643, 649, 658, 659, 660, 661, 662, 663, 664, 683, 707, 714, 715, 716, 717, 728, 729, 730, 755, 775, 777, 778, 779, 780, 781, 782, 784, 806, 873, 906, 943, 949, 975, 978, 979, 995, 1005, 1007, 1015, 1016, 1017, 1038, 1045, 1046, 1047, 1067, 1075, 1086, 1112, 1120, 1124, 1126, 1127, 1130, 1131, 1137, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1159, 1160, 1166, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1201, 1210, 1214, 1215, 1230, 1231, 1235, 1236, 1248, 1250, 1252, 1257, 1260, 1263, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1287, 1289, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1304], "issu": [24, 40, 164, 301, 338, 390, 393, 571, 591, 884, 921, 975, 978, 1252, 1257, 1258, 1261, 1293, 1302, 1303, 1305], "upstream": [24, 571, 1303], "reflect": [24, 57, 86, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 136, 137, 138, 139, 140, 143, 144, 146, 147, 150, 151, 152, 154, 155, 165, 193, 196, 197, 220, 287, 320, 357, 446, 448, 450, 452, 453, 457, 459, 460, 466, 472, 473, 474, 475, 476, 479, 480, 482, 483, 487, 493, 496, 497, 498, 501, 503, 504, 505, 506, 511, 518, 519, 521, 525, 527, 529, 530, 571, 609, 638, 675, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 717, 718, 719, 720, 721, 725, 726, 728, 729, 730, 734, 735, 736, 738, 739, 747, 775, 778, 779, 803, 870, 903, 940, 958, 1007, 1021, 1023, 1024, 1026, 1028, 1029, 1033, 1035, 1036, 1042, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1058, 1059, 1063, 1069, 1072, 1073, 1074, 1077, 1079, 1080, 1081, 1082, 1087, 1094, 1095, 1097, 1101, 1103, 1105, 1106, 1126, 1155, 1192, 1194, 1195, 1227, 1252, 1253, 1255, 1256, 1257, 1259, 1260, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1272, 1275, 1278, 1281, 1282, 1284, 1285, 1286, 1287, 1289, 1292, 1293, 1295, 1296, 1297, 1299, 1300, 1301], "dbuz": [24, 571], "dbzv": [24, 571], "dbuzv": [24, 571], "vu": [24, 571], "vv": [24, 571], "vvu": [24, 571], "spectrum": [24, 450, 451, 571, 1026, 1027, 1216, 1217, 1301], "width": [24, 125, 148, 149, 159, 160, 244, 246, 262, 329, 366, 442, 450, 451, 452, 472, 571, 706, 731, 732, 733, 743, 744, 827, 829, 845, 912, 949, 1017, 1026, 1027, 1028, 1048, 1252, 1301], "w": [24, 72, 101, 135, 148, 156, 159, 456, 498, 511, 518, 525, 527, 571, 624, 653, 716, 731, 740, 743, 1032, 1074, 1087, 1094, 1101, 1103, 1141, 1170, 1290], "wu": [24, 440, 571, 1015, 1299], "wv": [24, 571], "wvu": [24, 571], "differenti": [24, 29, 122, 123, 124, 129, 137, 139, 140, 143, 144, 146, 147, 150, 151, 152, 154, 155, 193, 196, 457, 458, 459, 460, 464, 468, 482, 483, 497, 498, 502, 505, 518, 519, 520, 521, 522, 523, 525, 528, 532, 571, 579, 703, 704, 705, 710, 718, 720, 721, 725, 726, 729, 730, 734, 735, 736, 738, 739, 775, 778, 1033, 1034, 1035, 1036, 1040, 1044, 1058, 1059, 1073, 1074, 1078, 1081, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1104, 1108, 1252, 1272, 1293], "zdr": [24, 123, 124, 128, 139, 140, 143, 144, 150, 151, 152, 160, 196, 443, 455, 456, 518, 571, 704, 705, 709, 720, 721, 725, 726, 734, 735, 736, 744, 778, 1031, 1032, 1094], "zdru": [24, 571], "co": [24, 113, 117, 120, 138, 139, 140, 150, 151, 152, 193, 496, 509, 571, 665, 669, 672, 719, 720, 721, 734, 735, 736, 775, 1072, 1085, 1203, 1289], "correl": [24, 138, 139, 140, 150, 151, 152, 193, 196, 197, 497, 498, 516, 518, 525, 527, 571, 719, 720, 721, 728, 734, 735, 736, 775, 778, 779, 1073, 1074, 1092, 1094, 1101, 1103, 1205, 1207, 1227, 1271, 1272, 1288, 1289], "coeffici": [24, 122, 123, 124, 143, 144, 145, 146, 147, 148, 159, 193, 456, 497, 498, 499, 518, 525, 571, 703, 704, 705, 725, 726, 727, 729, 730, 731, 743, 775, 1032, 1073, 1074, 1075, 1094, 1101, 1205, 1207, 1208, 1227, 1252, 1271, 1272, 1288], "rhohv": [24, 128, 138, 139, 140, 150, 151, 152, 196, 197, 443, 452, 455, 456, 463, 467, 476, 477, 488, 518, 525, 527, 571, 709, 719, 720, 721, 728, 734, 735, 736, 778, 779, 1028, 1031, 1032, 1039, 1043, 1052, 1053, 1064, 1094, 1101, 1103, 1252, 1271, 1301], "rhohvu": [24, 571], "phase": [24, 29, 122, 123, 124, 129, 135, 137, 139, 140, 146, 147, 150, 151, 152, 154, 155, 196, 457, 458, 464, 468, 482, 485, 491, 497, 498, 502, 505, 516, 518, 519, 520, 521, 522, 523, 528, 532, 571, 579, 703, 704, 705, 710, 716, 718, 720, 721, 729, 730, 734, 735, 736, 738, 739, 778, 1033, 1034, 1040, 1044, 1058, 1061, 1067, 1073, 1074, 1078, 1081, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1104, 1108, 1252, 1272, 1293, 1297], "phidp": [24, 123, 124, 129, 137, 139, 140, 146, 147, 150, 151, 152, 154, 155, 196, 519, 520, 521, 571, 704, 705, 710, 718, 720, 721, 729, 730, 734, 735, 736, 738, 739, 778, 1095, 1096, 1097, 1252, 1293], "uphidp": [24, 571], "uphidpu": [24, 571], "kdp": [24, 140, 146, 147, 150, 151, 152, 443, 456, 502, 505, 518, 519, 520, 521, 522, 523, 571, 721, 729, 730, 734, 735, 736, 1032, 1078, 1081, 1094, 1095, 1096, 1097, 1098, 1099, 1252, 1290, 1293], "ukdp": [24, 571], "ukdpu": [24, 571], "qualiti": [24, 128, 148, 149, 156, 159, 197, 522, 523, 571, 709, 728, 731, 733, 740, 743, 779, 1098, 1099, 1259], "sqi": [24, 571, 1252], "sqiu": [24, 571], "sqiv": [24, 571], "sqivu": [24, 571], "temperatur": [24, 123, 124, 131, 132, 138, 139, 140, 142, 150, 151, 152, 199, 497, 514, 518, 525, 527, 571, 704, 705, 712, 713, 719, 720, 721, 724, 734, 735, 736, 781, 1073, 1090, 1094, 1101, 1103, 1290], "temp": [24, 571, 1252], "bin": [24, 55, 84, 113, 114, 115, 124, 137, 138, 139, 140, 143, 154, 155, 389, 461, 469, 478, 491, 494, 515, 519, 520, 529, 571, 607, 636, 665, 666, 667, 705, 718, 719, 720, 721, 725, 738, 739, 974, 1037, 1045, 1054, 1067, 1070, 1091, 1095, 1096, 1105, 1124, 1153, 1216, 1222, 1233, 1252, 1263, 1297, 1301], "respect": [24, 55, 84, 157, 158, 160, 445, 496, 497, 498, 518, 525, 526, 527, 529, 530, 571, 607, 636, 732, 741, 742, 744, 1020, 1072, 1073, 1074, 1094, 1101, 1102, 1103, 1105, 1106, 1124, 1153], "iso0": [24, 123, 131, 132, 138, 139, 142, 150, 151, 152, 195, 456, 497, 498, 514, 518, 525, 526, 527, 531, 571, 704, 712, 713, 719, 720, 724, 734, 735, 736, 777, 1032, 1073, 1074, 1090, 1094, 1101, 1102, 1103, 1107], "visibl": [24, 130, 200, 511, 571, 711, 782, 1087, 1229, 1252, 1259, 1293], "digit": [24, 232, 298, 335, 372, 511, 548, 549, 563, 564, 571, 815, 881, 918, 955, 1087], "elev": [24, 27, 55, 62, 67, 78, 84, 91, 96, 107, 113, 114, 115, 131, 132, 139, 140, 143, 144, 145, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 193, 201, 218, 220, 225, 229, 230, 231, 232, 249, 250, 253, 263, 265, 267, 268, 285, 287, 292, 296, 297, 298, 301, 318, 320, 328, 329, 333, 334, 335, 338, 355, 357, 365, 366, 370, 371, 372, 390, 445, 469, 491, 492, 509, 511, 515, 523, 525, 571, 575, 607, 614, 619, 630, 636, 643, 648, 659, 665, 666, 667, 712, 713, 720, 721, 723, 725, 726, 727, 731, 732, 733, 734, 735, 736, 740, 741, 742, 743, 744, 775, 784, 801, 803, 808, 812, 813, 814, 815, 832, 833, 836, 846, 848, 850, 851, 868, 870, 875, 879, 880, 881, 884, 901, 903, 911, 912, 916, 917, 918, 921, 938, 940, 948, 949, 953, 954, 955, 975, 1020, 1045, 1067, 1068, 1085, 1087, 1091, 1099, 1101, 1124, 1131, 1136, 1147, 1153, 1160, 1165, 1176, 1210, 1225, 1229, 1232, 1237, 1252, 1263, 1288, 1295, 1301], "model": [24, 26, 27, 55, 84, 113, 114, 131, 132, 134, 232, 298, 335, 372, 387, 393, 511, 525, 527, 571, 574, 575, 607, 636, 665, 666, 712, 713, 715, 815, 881, 918, 955, 972, 978, 1087, 1101, 1103, 1124, 1153, 1208, 1290], "dem": [24, 232, 298, 335, 372, 511, 571, 815, 881, 918, 955, 1087, 1293], "vi": [24, 456, 518, 571, 1032, 1094, 1290], "introduc": [24, 391, 523, 525, 571, 976, 1099, 1101], "compress": [26, 27, 376, 384, 385, 574, 575, 961, 969, 970, 1252], "gzip": [26, 27, 376, 384, 385, 574, 575, 961, 969, 970], "compression_opt": [26, 27, 574, 575], "6": [26, 27, 128, 131, 132, 153, 154, 155, 196, 497, 501, 508, 511, 514, 518, 519, 520, 527, 574, 575, 709, 712, 713, 737, 738, 739, 778, 1073, 1077, 1084, 1087, 1090, 1094, 1095, 1096, 1103, 1217, 1224, 1236, 1260, 1263, 1268, 1269, 1273, 1276, 1287, 1288, 1290, 1291, 1293, 1295, 1297, 1300, 1301, 1302, 1305], "undefined_valu": [26, 27, 574, 575], "odim_convent": [26, 27, 574, 575], "v2_2": [26, 27, 574, 575], "write": [26, 27, 28, 392, 393, 394, 395, 396, 574, 575, 576, 577, 977, 978, 979, 980, 981, 1111, 1122, 1252, 1257, 1258, 1296], "eumetnet": [26, 27, 574, 575], "opera": [26, 27, 574, 575, 1293], "compliant": [26, 27, 392, 574, 575, 977], "produc": [26, 27, 28, 136, 383, 392, 394, 397, 470, 471, 528, 534, 574, 575, 577, 717, 968, 977, 979, 983, 1046, 1047, 1104, 1110, 1293, 1303], "follow": [26, 27, 28, 135, 193, 196, 197, 392, 393, 395, 396, 435, 441, 442, 511, 518, 521, 525, 527, 574, 575, 577, 716, 728, 775, 778, 779, 977, 978, 980, 981, 994, 1004, 1016, 1017, 1087, 1094, 1097, 1101, 1103, 1259, 1287, 1293, 1302, 1303], "inform": [26, 27, 35, 41, 55, 72, 84, 101, 122, 133, 143, 144, 145, 146, 147, 178, 190, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 382, 390, 393, 521, 530, 535, 538, 548, 549, 563, 564, 574, 575, 586, 593, 607, 624, 636, 653, 688, 700, 703, 714, 725, 726, 727, 729, 730, 760, 772, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 967, 975, 978, 1097, 1106, 1112, 1124, 1141, 1153, 1170, 1252, 1260, 1280, 1293, 1303], "http": [26, 27, 121, 386, 387, 388, 496, 516, 574, 575, 673, 971, 972, 973, 1023, 1072, 1092, 1227, 1260, 1271, 1280, 1289, 1293, 1302, 1303, 1305], "www": [26, 27, 121, 386, 387, 388, 516, 574, 575, 673, 971, 972, 973, 1092, 1303], "eu": [26, 27, 574, 575], "wp": [26, 27, 574, 575], "content": [26, 27, 574, 575], "upload": [26, 27, 574, 575, 1252], "2021": [26, 27, 574, 575, 1289], "07": [26, 27, 574, 575, 1260, 1271, 1289, 1301], "odim_h5_v2": [26, 27, 574, 575], "pdf": [26, 27, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 574, 575, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955], "creat": [26, 27, 28, 41, 52, 55, 57, 60, 84, 86, 89, 133, 134, 135, 136, 164, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 231, 235, 254, 268, 284, 297, 301, 317, 329, 334, 338, 354, 366, 371, 387, 392, 393, 394, 395, 396, 441, 442, 461, 469, 478, 491, 492, 494, 508, 528, 533, 534, 574, 575, 577, 593, 604, 607, 609, 612, 636, 638, 641, 714, 715, 716, 717, 728, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 800, 814, 818, 837, 851, 867, 880, 884, 900, 912, 917, 921, 937, 949, 954, 972, 977, 978, 979, 980, 981, 1016, 1017, 1037, 1045, 1054, 1067, 1068, 1070, 1084, 1104, 1109, 1110, 1112, 1122, 1124, 1126, 1129, 1153, 1155, 1158, 1243, 1244, 1252, 1254, 1255, 1257, 1260, 1263, 1264, 1265, 1267, 1268, 1270, 1284, 1285, 1289, 1293, 1294, 1296, 1299, 1303], "process": [26, 27, 134, 146, 147, 246, 456, 511, 574, 575, 715, 729, 730, 829, 1032, 1087, 1252, 1259, 1293, 1303], "save": [26, 27, 50, 203, 218, 220, 225, 229, 230, 231, 232, 239, 255, 270, 285, 287, 292, 296, 297, 298, 303, 318, 320, 328, 329, 333, 334, 335, 340, 355, 357, 365, 366, 370, 371, 372, 393, 395, 574, 575, 602, 786, 801, 803, 808, 812, 813, 814, 815, 822, 838, 853, 868, 870, 875, 879, 880, 881, 886, 901, 903, 911, 912, 916, 917, 918, 923, 938, 940, 948, 949, 953, 954, 955, 978, 980, 1018, 1121, 1293, 1294], "equal": [26, 27, 58, 87, 116, 118, 119, 134, 170, 171, 176, 184, 185, 188, 366, 384, 395, 530, 533, 574, 575, 610, 639, 668, 670, 671, 680, 681, 686, 694, 695, 698, 715, 752, 753, 758, 766, 767, 770, 949, 969, 980, 1106, 1109, 1127, 1156, 1237, 1271, 1289, 1290, 1300], "_fillvalu": [26, 27, 28, 392, 393, 574, 575, 577, 977, 978, 1252, 1296, 1301], "fill": [26, 27, 38, 122, 123, 124, 530, 574, 575, 589, 703, 704, 705, 1106, 1252, 1295, 1296], "linear": [26, 27, 123, 131, 132, 146, 147, 386, 496, 523, 574, 575, 704, 712, 713, 729, 730, 971, 1072, 1099, 1204, 1216, 1217, 1228, 1244, 1252, 1289, 1293], "keyword": [26, 27, 28, 217, 284, 317, 329, 354, 366, 386, 388, 468, 511, 574, 575, 577, 800, 867, 900, 912, 937, 949, 971, 973, 1044, 1087, 1252, 1296, 1299], "scale_factor": [26, 27, 28, 395, 574, 575, 577, 980], "add_offset": [26, 27, 28, 395, 574, 575, 577, 980], "calcul": [26, 27, 28, 29, 41, 43, 55, 66, 67, 84, 95, 96, 113, 114, 118, 122, 123, 124, 138, 139, 142, 146, 147, 150, 151, 152, 157, 165, 193, 195, 196, 197, 198, 199, 200, 201, 232, 268, 298, 301, 335, 338, 372, 441, 442, 446, 447, 453, 472, 473, 479, 493, 496, 511, 516, 528, 532, 533, 534, 574, 575, 577, 579, 593, 595, 607, 618, 619, 636, 647, 648, 665, 666, 670, 675, 703, 704, 705, 719, 720, 724, 728, 729, 730, 734, 735, 736, 741, 747, 775, 777, 778, 779, 780, 781, 782, 784, 815, 851, 881, 884, 918, 921, 955, 1016, 1017, 1021, 1022, 1029, 1048, 1049, 1055, 1069, 1072, 1087, 1092, 1104, 1108, 1109, 1110, 1112, 1114, 1124, 1135, 1136, 1153, 1164, 1165, 1201, 1203, 1216, 1219, 1220, 1221, 1226, 1245, 1252, 1254, 1257, 1263, 1279, 1280, 1286, 1289, 1292, 1293, 1297, 1300, 1303], "fly": [26, 27, 28, 574, 575, 577], "_write_as_dtyp": [26, 27, 28, 395, 574, 575, 577, 980], "datatyp": [26, 27, 574, 575, 1252], "It": [26, 27, 142, 148, 410, 424, 442, 509, 523, 525, 533, 574, 575, 724, 731, 1017, 1085, 1099, 1101, 1109, 1201, 1216, 1263, 1303, 1305], "uint8": [26, 27, 395, 574, 575, 980], "uint16": [26, 27, 395, 574, 575, 980], "typic": [26, 27, 117, 120, 134, 165, 169, 171, 178, 185, 190, 394, 440, 441, 574, 575, 669, 672, 675, 679, 681, 688, 695, 700, 715, 747, 751, 753, 760, 767, 772, 979, 1015, 1016, 1305], "lzf": [26, 27, 574, 575], "level": [26, 27, 43, 49, 51, 52, 55, 72, 84, 101, 123, 124, 239, 240, 241, 242, 245, 246, 247, 249, 253, 255, 256, 257, 258, 263, 265, 267, 386, 387, 388, 394, 395, 465, 470, 484, 498, 516, 525, 526, 527, 530, 533, 574, 575, 595, 601, 603, 604, 607, 624, 636, 653, 704, 705, 822, 823, 824, 825, 828, 829, 830, 832, 836, 838, 839, 840, 841, 846, 848, 850, 971, 972, 973, 979, 980, 1041, 1046, 1060, 1074, 1092, 1101, 1102, 1103, 1106, 1109, 1114, 1120, 1124, 1141, 1153, 1170, 1216, 1217, 1252, 1279, 1280, 1283, 1288, 1293, 1299, 1301, 1303], "recomend": [26, 27, 574, 575], "replac": [26, 27, 42, 56, 57, 58, 85, 86, 87, 134, 135, 169, 171, 178, 185, 190, 574, 575, 594, 608, 609, 610, 637, 638, 639, 679, 681, 688, 695, 700, 715, 716, 751, 753, 760, 767, 772, 1113, 1125, 1126, 1127, 1154, 1155, 1156, 1252], "exampl": [26, 27, 40, 57, 86, 165, 218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 397, 437, 438, 439, 441, 442, 574, 575, 591, 609, 638, 675, 747, 801, 808, 811, 812, 813, 814, 815, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955, 983, 1007, 1011, 1012, 1013, 1016, 1017, 1122, 1126, 1155, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1290, 1291, 1293, 1295, 1297, 1300, 1301, 1303, 1305], "NOT": [26, 27, 165, 574, 575, 675, 747], "written": [26, 27, 393, 395, 396, 574, 575, 978, 980, 981, 1252, 1293], "odim": [26, 27, 574, 575, 1252], "convent": [26, 27, 55, 84, 133, 449, 468, 508, 533, 534, 574, 575, 607, 636, 714, 1025, 1044, 1084, 1109, 1110, 1124, 1153, 1259, 1293, 1301], "v2_3": [26, 27, 574, 575], "support": [27, 245, 246, 329, 366, 377, 385, 386, 387, 388, 389, 397, 521, 536, 575, 828, 829, 912, 949, 962, 970, 971, 972, 973, 974, 982, 983, 1007, 1097, 1252, 1279, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302], "featur": [27, 456, 575, 1032, 1271, 1289, 1293], "ppi": [27, 55, 84, 134, 135, 136, 141, 217, 221, 225, 284, 288, 292, 317, 321, 328, 329, 354, 358, 365, 366, 469, 491, 511, 523, 575, 607, 636, 715, 716, 717, 722, 800, 804, 808, 867, 871, 875, 900, 904, 911, 912, 937, 941, 948, 949, 1018, 1045, 1067, 1087, 1099, 1124, 1153, 1185, 1186, 1189, 1192, 1194, 1209, 1210, 1252, 1257, 1267, 1270, 1271, 1283, 1285, 1293, 1301], "pvol": [27, 575], "differ": [27, 116, 118, 119, 131, 132, 133, 143, 144, 145, 150, 151, 152, 496, 501, 508, 521, 527, 575, 668, 670, 671, 712, 713, 714, 723, 725, 726, 727, 734, 735, 736, 958, 1007, 1072, 1077, 1084, 1097, 1103, 1235, 1237, 1252, 1259, 1263, 1289, 1299, 1302, 1303], "sweep": [27, 35, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 110, 111, 112, 133, 134, 135, 138, 141, 143, 144, 178, 190, 193, 196, 197, 203, 205, 217, 218, 220, 225, 229, 230, 231, 232, 270, 272, 284, 285, 287, 292, 296, 297, 298, 303, 305, 317, 318, 320, 328, 329, 333, 334, 335, 340, 342, 354, 355, 357, 365, 366, 370, 371, 372, 386, 387, 388, 390, 447, 469, 491, 533, 575, 586, 607, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 629, 630, 631, 632, 633, 634, 635, 636, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 658, 659, 660, 661, 662, 663, 664, 688, 700, 714, 715, 716, 719, 722, 725, 726, 728, 760, 772, 775, 778, 779, 786, 788, 800, 801, 803, 808, 812, 813, 814, 815, 853, 855, 867, 868, 870, 875, 879, 880, 881, 886, 888, 900, 901, 903, 911, 912, 916, 917, 918, 923, 925, 937, 938, 940, 948, 949, 953, 954, 955, 971, 972, 973, 975, 1007, 1018, 1022, 1045, 1067, 1109, 1124, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1185, 1186, 1209, 1210, 1252, 1255, 1259, 1263, 1279, 1280, 1282, 1287, 1289, 1291, 1297, 1300, 1301], "group": [27, 575, 1252, 1303], "sector": [27, 55, 84, 575, 607, 636, 1124, 1153, 1252, 1301], "azim": [27, 575, 1252], "rhi": [27, 55, 84, 217, 218, 229, 284, 285, 296, 317, 318, 333, 354, 355, 370, 469, 491, 498, 523, 525, 575, 607, 636, 800, 801, 812, 867, 868, 879, 900, 901, 916, 937, 938, 953, 1018, 1045, 1067, 1074, 1099, 1101, 1124, 1153, 1186, 1195, 1209, 1210, 1225, 1237, 1252, 1257, 1267, 1285, 1293, 1301], "Not": [27, 377, 385, 575, 962, 970], "yet": [27, 390, 575, 975, 1259, 1293], "singl": [27, 40, 134, 135, 136, 141, 150, 223, 224, 226, 228, 290, 291, 293, 295, 323, 324, 330, 332, 360, 361, 367, 369, 394, 442, 575, 591, 715, 716, 717, 722, 734, 806, 807, 809, 811, 873, 874, 876, 878, 906, 907, 913, 915, 943, 944, 950, 952, 979, 1017, 1189, 1250, 1252, 1257, 1259, 1262, 1263, 1266, 1287, 1303], "fix": [27, 492, 536, 575, 1068, 1257, 1258, 1261, 1282, 1295, 1302, 1303, 1305], "stare": [27, 575], "mode": [27, 55, 72, 84, 101, 376, 492, 525, 575, 607, 624, 636, 653, 961, 1068, 1101, 1124, 1141, 1153, 1170, 1252, 1301, 1302, 1303], "netcdf4": [28, 50, 387, 392, 393, 577, 602, 972, 977, 978, 1121, 1252, 1277, 1293, 1295, 1302, 1305], "time_refer": [28, 392, 577, 977, 1295], "arm_time_vari": [28, 50, 392, 393, 577, 602, 977, 978, 1121], "standard": [28, 50, 55, 72, 84, 101, 113, 114, 133, 143, 144, 160, 392, 393, 394, 470, 497, 508, 522, 536, 577, 602, 607, 624, 636, 653, 665, 666, 714, 725, 726, 732, 744, 977, 978, 979, 1023, 1046, 1073, 1084, 1098, 1121, 1124, 1141, 1153, 1170, 1199, 1200, 1226, 1231, 1252, 1295, 1296, 1297, 1303], "attempt": [28, 134, 135, 392, 393, 577, 715, 716, 977, 978, 1252], "also": [28, 40, 55, 84, 169, 219, 243, 261, 286, 319, 356, 387, 388, 392, 394, 396, 434, 496, 577, 591, 607, 636, 679, 751, 802, 826, 844, 869, 902, 939, 972, 973, 977, 979, 981, 993, 1003, 1007, 1072, 1124, 1153, 1252, 1259, 1263, 1289, 1293, 1295, 1299, 1301, 1302, 1303, 1304, 1305], "made": [28, 57, 86, 392, 447, 577, 609, 638, 977, 1022, 1126, 1155, 1250, 1303], "meet": [28, 169, 171, 178, 185, 190, 392, 577, 679, 681, 688, 695, 700, 751, 753, 760, 767, 772, 977, 1293], "mani": [28, 392, 456, 577, 977, 1032, 1252, 1293, 1299, 1303, 1305], "outlin": [28, 392, 521, 577, 977, 1097, 1216, 1217, 1303], "To": [28, 41, 57, 86, 193, 195, 196, 197, 198, 199, 200, 392, 393, 395, 577, 593, 609, 638, 728, 775, 777, 778, 779, 780, 781, 782, 977, 978, 980, 1112, 1126, 1155, 1250, 1293, 1296, 1299, 1302, 1303, 1305], "control": [28, 40, 133, 148, 149, 156, 159, 390, 392, 393, 442, 518, 521, 525, 577, 591, 714, 731, 733, 740, 743, 975, 977, 978, 1017, 1094, 1097, 1101, 1299], "how": [28, 57, 86, 390, 392, 393, 456, 498, 577, 609, 638, 975, 977, 978, 1032, 1074, 1126, 1155, 1252, 1259, 1260, 1268, 1269, 1270, 1293, 1296, 1299, 1300, 1305], "_zlib": [28, 392, 393, 577, 977, 978], "_deflatelevel": [28, 392, 393, 577, 977, 978], "_shuffl": [28, 392, 393, 577, 977, 978], "_fletcher32": [28, 392, 393, 577, 977, 978], "_contingu": [28, 392, 393, 577, 977, 978], "_chunksiz": [28, 392, 393, 577, 977, 978], "_endian": [28, 392, 393, 577, 977, 978], "_least_significant_digit": [28, 392, 393, 577, 977, 978], "see": [28, 57, 86, 114, 133, 165, 217, 231, 246, 248, 251, 252, 260, 264, 266, 284, 297, 317, 329, 334, 354, 366, 371, 384, 392, 393, 442, 496, 498, 516, 530, 577, 609, 638, 666, 675, 714, 747, 800, 814, 829, 831, 834, 835, 843, 847, 849, 867, 880, 900, 912, 917, 937, 949, 954, 969, 977, 978, 1017, 1018, 1072, 1074, 1092, 1106, 1126, 1155, 1252, 1259, 1260, 1268, 1289, 1293, 1295, 1297, 1299, 1300, 1303], "document": [28, 133, 246, 248, 251, 252, 260, 264, 266, 329, 366, 387, 392, 393, 577, 714, 829, 831, 834, 835, 843, 847, 849, 912, 949, 972, 977, 978, 1244, 1251, 1293, 1299, 1303], "detail": [28, 114, 133, 165, 246, 260, 329, 366, 392, 393, 440, 442, 496, 577, 666, 675, 714, 747, 829, 843, 912, 949, 977, 978, 1015, 1017, 1072, 1289, 1293, 1301, 1303], "one": [28, 36, 41, 49, 50, 55, 57, 84, 86, 131, 132, 141, 155, 169, 171, 178, 185, 190, 193, 197, 392, 393, 395, 440, 441, 442, 445, 489, 498, 507, 521, 522, 523, 525, 526, 527, 576, 577, 587, 593, 601, 602, 607, 609, 636, 638, 679, 681, 688, 695, 700, 712, 713, 722, 728, 739, 751, 753, 760, 767, 772, 775, 779, 977, 978, 980, 1007, 1015, 1016, 1017, 1020, 1023, 1065, 1074, 1083, 1097, 1098, 1099, 1101, 1102, 1103, 1112, 1120, 1121, 1124, 1126, 1153, 1155, 1206, 1209, 1210, 1227, 1237, 1238, 1244, 1252, 1257, 1262, 1263, 1268, 1293, 1296, 1301, 1303, 1305], "netcdf4_class": [28, 50, 392, 393, 577, 602, 977, 978, 1121], "netcdf3_class": [28, 50, 392, 393, 577, 602, 977, 978, 1121], "netcdf3_64bit": [28, 50, 392, 393, 577, 602, 977, 978, 1121], "non": [28, 116, 118, 119, 135, 390, 392, 496, 521, 523, 536, 577, 668, 670, 671, 716, 975, 977, 1072, 1097, 1099, 1252, 1289], "zero": [28, 392, 496, 511, 517, 521, 548, 577, 958, 977, 1072, 1087, 1093, 1097, 1237, 1244, 1252, 1289, 1296, 1300], "base_tim": [28, 50, 392, 393, 577, 602, 977, 978, 1121, 1287], "time_offset": [28, 50, 392, 393, 577, 602, 977, 978, 1121, 1287], "phidp_field": [29, 122, 123, 124, 129, 137, 139, 140, 146, 147, 150, 151, 152, 154, 155, 519, 520, 521, 522, 523, 532, 579, 703, 704, 705, 710, 718, 720, 721, 729, 730, 734, 735, 736, 738, 739, 1095, 1096, 1097, 1098, 1099, 1108, 1254, 1290], "phidp_texture_field": [29, 532, 579, 1108], "textur": [29, 196, 447, 532, 579, 778, 1022, 1108, 1201, 1226, 1249, 1252, 1293, 1297], "real": [29, 133, 532, 579, 714, 1108, 1257, 1267, 1289, 1293, 1303, 1305], "part": [29, 500, 532, 579, 1076, 1108, 1252, 1259, 1293, 1295, 1296, 1297, 1299, 1300, 1301], "shift": [29, 129, 137, 146, 147, 150, 154, 155, 201, 268, 301, 338, 517, 519, 520, 522, 532, 579, 710, 718, 729, 730, 734, 738, 739, 784, 851, 884, 921, 1093, 1095, 1096, 1098, 1108, 1252, 1297], "texture_field": [29, 532, 579, 1108], "gourlei": [29, 128, 150, 151, 152, 532, 579, 709, 734, 735, 736, 1108], "j": [29, 117, 120, 135, 146, 147, 148, 149, 156, 159, 496, 498, 518, 522, 523, 525, 528, 530, 532, 533, 534, 579, 669, 672, 716, 729, 730, 731, 733, 740, 743, 1023, 1072, 1074, 1094, 1098, 1099, 1101, 1104, 1106, 1108, 1109, 1110, 1254, 1255, 1264, 1265, 1272, 1273, 1275, 1277, 1281, 1284, 1289, 1293, 1303], "p": [29, 31, 33, 39, 113, 117, 120, 148, 149, 156, 159, 440, 451, 456, 465, 469, 470, 478, 484, 491, 500, 528, 532, 579, 582, 584, 590, 665, 669, 672, 731, 733, 740, 743, 1015, 1027, 1032, 1041, 1045, 1046, 1054, 1060, 1067, 1076, 1104, 1108, 1182, 1216, 1293, 1303], "tabari": [29, 532, 579, 1108], "parent": [29, 532, 579, 1108], "du": [29, 532, 579, 1108], "chatelet": [29, 532, 579, 1108], "fuzzi": [29, 532, 579, 1108], "logic": [29, 169, 171, 178, 185, 190, 532, 579, 679, 681, 688, 695, 700, 751, 753, 760, 767, 772, 1108], "algorithm": [29, 131, 132, 133, 134, 135, 144, 150, 151, 165, 424, 440, 442, 451, 456, 470, 471, 496, 498, 499, 521, 525, 530, 532, 579, 675, 712, 713, 714, 715, 716, 726, 734, 735, 747, 1015, 1017, 1027, 1032, 1046, 1047, 1072, 1074, 1075, 1097, 1101, 1106, 1108, 1252, 1253, 1256, 1257, 1293, 1303], "separ": [29, 145, 511, 516, 530, 532, 533, 579, 727, 1087, 1092, 1106, 1108, 1109, 1216, 1227, 1259, 1271, 1305], "precipit": [29, 129, 132, 137, 154, 155, 478, 491, 518, 532, 579, 710, 713, 718, 738, 739, 1054, 1067, 1094, 1108, 1227, 1252, 1263, 1271, 1289, 1303], "nonprecipit": [29, 532, 579, 1108], "echo": [29, 496, 511, 518, 532, 579, 1072, 1087, 1094, 1108, 1289, 1300], "polarimetr": [29, 122, 123, 124, 128, 146, 147, 461, 467, 468, 469, 478, 491, 498, 501, 518, 525, 528, 529, 532, 579, 703, 704, 705, 709, 729, 730, 1037, 1043, 1044, 1045, 1054, 1067, 1074, 1077, 1094, 1101, 1104, 1105, 1108, 1252, 1254], "observ": [29, 113, 131, 132, 148, 149, 151, 156, 159, 456, 478, 491, 496, 521, 527, 532, 579, 665, 712, 713, 731, 733, 735, 740, 743, 1032, 1054, 1067, 1072, 1097, 1103, 1108, 1208, 1289], "journal": [29, 133, 135, 440, 451, 465, 470, 471, 484, 500, 511, 532, 579, 714, 716, 1015, 1027, 1041, 1046, 1047, 1060, 1076, 1087, 1108, 1216, 1217, 1293, 1303], "atmospher": [29, 55, 84, 113, 114, 133, 134, 148, 159, 442, 445, 471, 500, 511, 524, 532, 579, 607, 636, 665, 666, 714, 715, 731, 743, 1017, 1020, 1047, 1076, 1087, 1100, 1108, 1124, 1153, 1217, 1259, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "ocean": [29, 133, 146, 147, 471, 496, 500, 511, 528, 532, 579, 714, 729, 730, 1047, 1072, 1076, 1087, 1104, 1108, 1217, 1259, 1289], "technologi": [29, 133, 471, 500, 511, 532, 579, 714, 1047, 1076, 1087, 1108, 1217], "24": [29, 532, 579, 1108, 1252, 1260, 1291], "8": [29, 72, 101, 121, 122, 133, 146, 150, 151, 196, 245, 246, 247, 249, 250, 253, 263, 265, 267, 532, 579, 624, 653, 673, 703, 714, 729, 734, 735, 778, 828, 829, 830, 832, 833, 836, 846, 848, 850, 1108, 1141, 1170, 1217, 1251, 1260, 1263, 1264, 1269, 1276, 1279, 1283, 1287, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "1439": [29, 532, 579, 1108], "1451": [29, 532, 579, 1108], "class": [30, 41, 51, 55, 84, 165, 194, 201, 235, 245, 246, 254, 268, 301, 329, 338, 397, 410, 424, 441, 456, 498, 499, 511, 518, 536, 580, 581, 593, 603, 607, 636, 674, 675, 746, 747, 776, 783, 784, 818, 828, 829, 837, 851, 884, 912, 921, 982, 983, 996, 1006, 1007, 1008, 1010, 1016, 1032, 1074, 1075, 1087, 1094, 1111, 1112, 1122, 1124, 1153, 1251, 1252, 1293, 1299, 1300, 1303], "filetyp": [30, 36, 581, 587], "need": [30, 55, 64, 66, 67, 84, 93, 95, 96, 131, 132, 163, 394, 406, 496, 581, 607, 616, 618, 619, 636, 645, 647, 648, 712, 713, 979, 1072, 1124, 1133, 1135, 1136, 1153, 1162, 1164, 1165, 1219, 1245, 1252, 1259, 1263, 1268, 1289, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "being": [30, 32, 133, 193, 218, 220, 225, 228, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 442, 523, 581, 583, 714, 775, 801, 803, 808, 811, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 912, 915, 916, 917, 918, 938, 940, 948, 949, 952, 953, 954, 955, 1017, 1023, 1099, 1230, 1231, 1252, 1280, 1302], "string": [30, 41, 55, 84, 220, 223, 224, 228, 231, 244, 246, 262, 287, 290, 291, 295, 297, 320, 323, 324, 325, 326, 327, 330, 332, 334, 357, 360, 361, 362, 363, 364, 367, 369, 371, 375, 423, 441, 442, 462, 481, 510, 511, 516, 522, 523, 528, 533, 534, 537, 581, 593, 607, 636, 803, 806, 807, 811, 814, 827, 829, 845, 870, 873, 874, 878, 880, 903, 906, 907, 908, 909, 910, 913, 915, 917, 940, 943, 944, 945, 946, 947, 950, 952, 954, 960, 1016, 1017, 1038, 1057, 1086, 1087, 1092, 1098, 1099, 1104, 1109, 1110, 1112, 1124, 1153, 1202, 1203, 1252, 1268, 1303], "initi": [30, 45, 46, 47, 51, 73, 74, 75, 76, 102, 103, 104, 105, 133, 134, 165, 201, 268, 301, 338, 397, 529, 581, 597, 598, 599, 603, 625, 626, 627, 628, 654, 655, 656, 657, 675, 714, 715, 747, 784, 851, 884, 921, 983, 1105, 1116, 1117, 1118, 1142, 1143, 1144, 1145, 1171, 1172, 1173, 1174, 1252, 1270], "indic": [32, 41, 55, 79, 82, 83, 84, 108, 111, 112, 147, 150, 151, 165, 169, 178, 190, 250, 390, 498, 521, 522, 523, 528, 533, 534, 583, 593, 607, 631, 634, 635, 636, 660, 663, 664, 675, 679, 688, 700, 723, 730, 734, 735, 747, 751, 760, 772, 833, 975, 1074, 1097, 1098, 1099, 1104, 1109, 1110, 1112, 1124, 1148, 1151, 1152, 1153, 1177, 1180, 1181, 1217, 1218, 1220, 1252, 1259, 1276], "dic": [33, 41, 55, 56, 84, 85, 397, 409, 442, 584, 593, 607, 608, 636, 637, 983, 1017, 1112, 1124, 1125, 1153, 1154], "colormap": [34, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 394, 585, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 979, 1252, 1257, 1267, 1271, 1285, 1290], "select": [35, 60, 69, 89, 98, 135, 461, 469, 478, 491, 494, 507, 525, 527, 529, 586, 612, 621, 641, 650, 716, 1037, 1045, 1054, 1067, 1070, 1083, 1101, 1103, 1105, 1129, 1138, 1158, 1167, 1252], "limit": [35, 133, 134, 146, 147, 193, 195, 196, 197, 198, 199, 200, 220, 234, 260, 287, 300, 320, 337, 357, 374, 384, 395, 443, 515, 521, 525, 586, 714, 715, 728, 729, 730, 775, 777, 778, 779, 780, 781, 782, 803, 817, 843, 870, 883, 903, 920, 940, 957, 969, 980, 1091, 1097, 1101, 1246, 1247, 1252, 1264, 1265, 1269, 1293, 1299], "relat": [35, 124, 150, 151, 152, 395, 496, 501, 504, 505, 506, 522, 530, 586, 705, 734, 735, 736, 980, 1072, 1077, 1080, 1081, 1082, 1098, 1106, 1252, 1289, 1293, 1302, 1303], "instac": [35, 586], "nyquist": [35, 68, 97, 133, 134, 135, 447, 586, 620, 649, 714, 715, 716, 1022, 1137, 1166, 1201, 1252, 1297, 1301], "consid": [35, 122, 129, 131, 132, 136, 137, 138, 139, 140, 141, 143, 144, 150, 151, 152, 154, 155, 465, 470, 471, 484, 496, 507, 515, 519, 520, 525, 526, 527, 586, 703, 710, 712, 713, 717, 718, 719, 720, 721, 722, 725, 726, 734, 735, 736, 738, 739, 958, 1041, 1046, 1047, 1060, 1072, 1083, 1091, 1095, 1096, 1101, 1102, 1103, 1206, 1209, 1210, 1216, 1217, 1232, 1289], "vmin": [35, 218, 220, 225, 228, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 394, 586, 801, 803, 808, 811, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 912, 915, 916, 917, 918, 938, 940, 948, 949, 952, 953, 954, 955, 979, 1252, 1254, 1255, 1259, 1260, 1263, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1296, 1297, 1299, 1300], "vmax": [35, 218, 220, 225, 228, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 394, 586, 801, 803, 808, 811, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 912, 915, 916, 917, 918, 938, 940, 948, 949, 952, 953, 954, 955, 979, 1252, 1254, 1255, 1259, 1260, 1263, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1296, 1297, 1299, 1300], "2": [35, 113, 117, 121, 135, 136, 140, 141, 143, 144, 145, 148, 150, 151, 159, 196, 207, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 244, 245, 249, 250, 253, 262, 263, 265, 267, 274, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 307, 318, 320, 323, 324, 328, 331, 332, 333, 334, 335, 337, 344, 355, 357, 360, 361, 365, 366, 368, 369, 370, 371, 372, 374, 386, 387, 388, 390, 432, 440, 442, 451, 452, 470, 478, 493, 496, 511, 521, 527, 533, 586, 665, 669, 673, 716, 717, 721, 722, 725, 726, 727, 731, 734, 735, 743, 778, 790, 801, 803, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 827, 828, 832, 833, 836, 845, 846, 848, 850, 857, 868, 870, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 890, 901, 903, 906, 907, 911, 914, 915, 916, 917, 918, 920, 927, 938, 940, 943, 944, 948, 949, 951, 952, 953, 954, 955, 957, 971, 972, 973, 975, 991, 1002, 1007, 1015, 1017, 1018, 1027, 1028, 1046, 1054, 1069, 1072, 1087, 1097, 1103, 1109, 1184, 1202, 1203, 1217, 1227, 1229, 1263, 1268, 1269, 1270, 1273, 1276, 1277, 1279, 1280, 1283, 1287, 1289, 1291, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "tuplet": [35, 586], "minimun": [35, 586], "maximun": [35, 586], "teoric": [35, 586], "copi": [36, 40, 41, 57, 58, 60, 61, 62, 64, 86, 87, 89, 90, 91, 93, 179, 180, 397, 442, 587, 591, 593, 609, 610, 612, 613, 614, 616, 638, 639, 641, 642, 643, 645, 689, 690, 761, 762, 983, 1017, 1112, 1126, 1127, 1129, 1130, 1131, 1133, 1155, 1156, 1158, 1159, 1160, 1162, 1250, 1252, 1296], "field_map": [36, 587], "anoth": [36, 461, 469, 478, 491, 494, 587, 1007, 1037, 1045, 1054, 1067, 1070, 1227, 1252, 1263, 1295, 1300, 1302, 1305], "current": [38, 43, 131, 132, 133, 169, 171, 178, 185, 190, 203, 205, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 243, 244, 245, 246, 247, 249, 250, 253, 260, 261, 262, 263, 265, 267, 270, 272, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 305, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 340, 342, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 385, 444, 461, 469, 478, 491, 492, 494, 511, 521, 589, 595, 679, 681, 688, 695, 700, 712, 713, 714, 751, 753, 760, 767, 772, 786, 788, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 826, 827, 828, 829, 830, 832, 833, 836, 843, 844, 845, 846, 848, 850, 853, 855, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 886, 888, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 920, 923, 925, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 953, 954, 955, 957, 970, 1008, 1010, 1037, 1045, 1054, 1067, 1068, 1070, 1087, 1097, 1114, 1303], "empti": [39, 432, 522, 523, 590, 991, 1002, 1098, 1099, 1182, 1184, 1187, 1252, 1295], "exist": [39, 42, 56, 57, 59, 85, 86, 88, 141, 169, 171, 178, 185, 190, 193, 196, 197, 390, 521, 590, 594, 608, 609, 611, 637, 638, 640, 679, 681, 688, 695, 700, 722, 728, 751, 753, 760, 767, 772, 775, 778, 779, 975, 1097, 1113, 1122, 1125, 1126, 1128, 1154, 1155, 1157, 1182, 1250, 1252, 1254, 1293, 1295], "self": [40, 146, 147, 150, 151, 152, 399, 402, 404, 405, 408, 412, 414, 415, 419, 420, 591, 729, 730, 734, 735, 736, 1296, 1299, 1303], "descrip": [40, 591], "directori": [40, 535, 591, 1122, 1251, 1252, 1259, 1302, 1303], "default_config": [40, 591], "These": [40, 133, 165, 260, 394, 442, 536, 591, 675, 714, 747, 843, 979, 1017, 1233, 1259, 1268, 1289, 1293, 1300, 1302, 1303], "modifi": [40, 55, 84, 136, 591, 607, 636, 717, 1124, 1153, 1252, 1257, 1267, 1285, 1303], "environment": [40, 591, 1293, 1302], "pyart_config": [40, 591], "new": [40, 57, 58, 60, 86, 87, 89, 136, 169, 171, 178, 185, 190, 461, 469, 478, 491, 492, 494, 517, 528, 533, 591, 609, 610, 612, 638, 639, 641, 679, 681, 688, 695, 700, 717, 751, 753, 760, 767, 772, 1037, 1045, 1054, 1067, 1068, 1070, 1093, 1104, 1109, 1126, 1127, 1129, 1155, 1156, 1158, 1204, 1227, 1242, 1246, 1247, 1252, 1263, 1287, 1290, 1293, 1296, 1297, 1303, 1305], "execut": [40, 591, 1252, 1256, 1261, 1266, 1285, 1292], "full": [40, 72, 101, 136, 141, 390, 591, 624, 653, 717, 722, 975, 1141, 1170, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293], "permiss": [40, 591], "mai": [40, 133, 134, 169, 171, 178, 185, 190, 301, 338, 386, 388, 394, 397, 410, 442, 523, 525, 536, 591, 679, 681, 688, 695, 700, 714, 715, 751, 753, 760, 767, 772, 884, 921, 971, 973, 979, 983, 1017, 1099, 1101, 1196, 1289, 1293], "secur": [40, 591], "do": [40, 55, 84, 121, 133, 193, 196, 197, 394, 395, 509, 591, 607, 636, 673, 714, 728, 775, 778, 779, 979, 980, 1085, 1124, 1153, 1252, 1260, 1289, 1295, 1296, 1297, 1299, 1300, 1302, 1303, 1305], "un": [40, 591], "trust": [40, 591], "method": [40, 41, 57, 64, 66, 67, 86, 93, 95, 96, 122, 124, 129, 137, 146, 147, 150, 152, 165, 169, 171, 178, 185, 190, 230, 395, 396, 397, 410, 435, 441, 465, 484, 510, 511, 519, 520, 521, 522, 523, 533, 591, 593, 609, 616, 618, 619, 638, 645, 647, 648, 675, 679, 681, 688, 695, 700, 703, 705, 710, 718, 729, 730, 734, 736, 747, 751, 753, 760, 767, 772, 813, 980, 981, 983, 994, 996, 1004, 1016, 1041, 1060, 1086, 1087, 1095, 1096, 1097, 1098, 1099, 1109, 1112, 1126, 1133, 1135, 1136, 1155, 1162, 1164, 1165, 1216, 1217, 1251, 1252, 1254, 1274, 1293, 1300, 1303], "chang": [40, 41, 55, 57, 61, 62, 64, 66, 84, 86, 90, 91, 93, 95, 133, 164, 165, 389, 397, 591, 593, 607, 609, 613, 614, 616, 618, 636, 638, 642, 643, 645, 647, 675, 714, 747, 974, 983, 1112, 1122, 1124, 1126, 1130, 1131, 1133, 1135, 1153, 1155, 1159, 1160, 1162, 1164, 1196, 1252, 1289, 1296, 1299, 1301, 1302, 1303], "home": [40, 591, 1254, 1259, 1260, 1303, 1305], "make": [40, 41, 498, 529, 591, 593, 1074, 1105, 1112, 1184, 1188, 1190, 1191, 1252, 1263, 1270, 1279, 1289, 1293, 1295, 1296, 1302, 1303, 1305], "adjust": [40, 117, 234, 300, 337, 374, 591, 669, 817, 883, 920, 957, 1268, 1271, 1279], "login": [40, 591], "shell": [40, 591], "session": [40, 591], "modif": [40, 57, 86, 591, 609, 638, 1126, 1155, 1252], "last": [40, 55, 84, 133, 142, 218, 219, 225, 229, 230, 231, 243, 249, 250, 253, 254, 261, 263, 265, 267, 285, 286, 292, 296, 297, 318, 319, 328, 329, 333, 334, 338, 355, 356, 365, 366, 370, 371, 591, 607, 636, 714, 724, 801, 802, 808, 812, 813, 814, 826, 832, 833, 836, 837, 844, 846, 848, 850, 868, 869, 875, 879, 880, 901, 902, 911, 912, 916, 917, 921, 938, 939, 948, 949, 953, 954, 1124, 1153, 1217, 1252, 1264, 1301], "origin_latitud": [41, 593, 1112], "origin_longitud": [41, 593, 1112], "origin_altitud": [41, 593, 1112], "z": [41, 47, 49, 55, 67, 75, 84, 96, 104, 113, 114, 115, 122, 124, 146, 147, 216, 283, 316, 353, 384, 394, 395, 437, 438, 439, 440, 441, 442, 496, 501, 504, 505, 506, 516, 593, 599, 601, 607, 619, 627, 636, 648, 656, 665, 666, 667, 703, 705, 729, 730, 799, 866, 899, 936, 969, 979, 980, 1011, 1012, 1013, 1015, 1016, 1017, 1023, 1072, 1077, 1080, 1081, 1082, 1092, 1112, 1118, 1120, 1124, 1136, 1144, 1153, 1165, 1173, 1184, 1223, 1254, 1277, 1279, 1280, 1289, 1293, 1296, 1303], "radar_latitud": [41, 593, 1112, 1219, 1245], "radar_longitud": [41, 593, 1112, 1219, 1245], "radar_altitud": [41, 515, 593, 1091, 1112], "radar_tim": [41, 593, 1112], "radar_nam": [41, 593, 1112], "rectilinear": [41, 593, 1112], "cartesian": [41, 43, 49, 55, 84, 113, 114, 115, 116, 117, 118, 119, 120, 384, 440, 441, 442, 498, 511, 564, 593, 595, 601, 607, 636, 665, 666, 667, 668, 669, 670, 671, 672, 969, 1006, 1007, 1015, 1016, 1017, 1018, 1074, 1087, 1112, 1114, 1120, 1124, 1153, 1257, 1262, 1266, 1269, 1293, 1294], "section": [41, 55, 57, 84, 86, 212, 214, 218, 232, 279, 281, 285, 298, 312, 314, 318, 335, 349, 351, 355, 372, 442, 453, 472, 473, 511, 593, 607, 609, 636, 638, 795, 797, 801, 815, 862, 864, 868, 881, 895, 897, 901, 918, 932, 934, 938, 955, 1017, 1029, 1048, 1049, 1087, 1112, 1124, 1126, 1153, 1155, 1209, 1210, 1222, 1252, 1257, 1267, 1285, 1289, 1293], "legaci": [41, 593, 1023, 1112], "befor": [41, 66, 95, 133, 141, 147, 164, 456, 461, 469, 478, 491, 494, 496, 525, 535, 593, 618, 647, 714, 722, 730, 1007, 1032, 1037, 1045, 1054, 1067, 1070, 1072, 1101, 1112, 1135, 1164, 1263, 1289, 1293, 1297, 1301, 1303], "from_legacy_paramet": [41, 593, 1112], "ax": [41, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 244, 245, 246, 247, 249, 250, 253, 260, 261, 262, 263, 265, 267, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 365, 366, 368, 369, 370, 371, 372, 373, 374, 437, 438, 439, 496, 517, 530, 593, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 826, 827, 828, 829, 830, 832, 833, 836, 843, 844, 845, 846, 848, 850, 858, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 948, 949, 951, 952, 953, 954, 955, 956, 957, 1011, 1012, 1013, 1072, 1093, 1106, 1112, 1252, 1254, 1255, 1259, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1283, 1287, 1288, 1289, 1290, 1291, 1297], "moment": [41, 49, 55, 84, 128, 133, 134, 135, 196, 197, 386, 387, 388, 442, 548, 549, 593, 601, 607, 636, 709, 714, 715, 716, 728, 778, 779, 971, 972, 973, 1017, 1112, 1120, 1124, 1153, 1216, 1252, 1260, 1267, 1285, 1293, 1300], "describ": [41, 55, 84, 125, 193, 194, 195, 196, 197, 198, 199, 200, 244, 262, 465, 471, 484, 593, 607, 636, 706, 728, 775, 776, 777, 778, 779, 780, 781, 782, 827, 845, 1041, 1047, 1060, 1112, 1124, 1153, 1289], "geograph": [41, 55, 66, 84, 95, 116, 117, 118, 119, 120, 121, 301, 329, 338, 366, 393, 442, 593, 607, 618, 636, 647, 668, 669, 670, 671, 672, 673, 884, 912, 921, 949, 978, 1017, 1112, 1124, 1135, 1153, 1164, 1293], "axi": [41, 49, 55, 84, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 243, 244, 245, 246, 247, 249, 250, 253, 260, 261, 262, 263, 265, 267, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 318, 319, 320, 321, 322, 323, 324, 328, 329, 331, 332, 333, 334, 335, 337, 355, 356, 357, 358, 359, 360, 361, 365, 366, 368, 369, 370, 371, 372, 374, 384, 394, 593, 601, 607, 636, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 826, 827, 828, 829, 830, 832, 833, 836, 843, 844, 845, 846, 848, 850, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 901, 902, 903, 904, 905, 906, 907, 911, 912, 914, 915, 916, 917, 918, 920, 938, 939, 940, 941, 942, 943, 944, 948, 949, 951, 952, 953, 954, 955, 957, 969, 979, 1112, 1120, 1124, 1153, 1206, 1254, 1269, 1280, 1289, 1291, 1301], "dimension": [41, 49, 133, 135, 440, 530, 593, 601, 714, 716, 1015, 1106, 1112, 1120, 1263, 1289], "space": [41, 55, 84, 118, 220, 287, 320, 357, 395, 442, 496, 508, 516, 593, 607, 636, 670, 803, 870, 903, 940, 980, 1017, 1072, 1084, 1092, 1112, 1124, 1153, 1260, 1289, 1295], "along": [41, 134, 141, 232, 248, 249, 250, 251, 252, 253, 264, 265, 266, 267, 298, 335, 372, 492, 593, 715, 722, 815, 831, 832, 833, 834, 835, 836, 847, 848, 849, 850, 881, 918, 955, 1068, 1112, 1206, 1209, 1210, 1220, 1221, 1249, 1252, 1289], "three": [41, 135, 193, 197, 394, 530, 593, 716, 728, 775, 779, 979, 1106, 1112, 1289], "repeat": [41, 511, 593, 1087, 1112], "throughout": [41, 593, 1112], "transform": [41, 55, 84, 116, 117, 118, 119, 120, 121, 223, 230, 290, 301, 323, 338, 360, 366, 393, 442, 443, 456, 462, 481, 518, 531, 593, 607, 636, 668, 669, 670, 671, 672, 673, 806, 813, 873, 884, 906, 921, 943, 949, 978, 1017, 1032, 1038, 1057, 1094, 1107, 1112, 1124, 1153, 1252, 1268, 1289], "pyart_aeqd": [41, 48, 55, 84, 116, 118, 119, 593, 600, 607, 636, 668, 670, 671, 1112, 1119, 1124, 1153], "nativ": [41, 55, 84, 116, 118, 119, 377, 442, 593, 607, 636, 668, 670, 671, 962, 1017, 1023, 1112, 1124, 1153, 1252], "azimuth": [41, 55, 61, 62, 65, 67, 77, 84, 90, 91, 94, 96, 106, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 143, 144, 145, 157, 158, 160, 201, 202, 218, 220, 223, 225, 229, 230, 231, 249, 250, 253, 263, 265, 267, 268, 269, 285, 287, 290, 292, 296, 297, 301, 302, 318, 320, 323, 328, 329, 333, 334, 338, 339, 355, 357, 360, 365, 366, 370, 371, 390, 394, 461, 491, 492, 507, 509, 511, 523, 525, 533, 534, 548, 593, 607, 613, 614, 617, 619, 629, 636, 642, 643, 646, 648, 658, 665, 666, 667, 668, 669, 670, 671, 672, 712, 713, 723, 725, 726, 727, 732, 741, 742, 744, 784, 785, 801, 803, 806, 808, 812, 813, 814, 832, 833, 836, 846, 848, 850, 851, 852, 868, 870, 873, 875, 879, 880, 884, 885, 901, 903, 906, 911, 912, 916, 917, 921, 922, 938, 940, 943, 948, 949, 953, 954, 975, 979, 1023, 1037, 1067, 1068, 1083, 1085, 1087, 1099, 1101, 1109, 1110, 1112, 1124, 1130, 1131, 1134, 1136, 1146, 1153, 1159, 1160, 1163, 1165, 1175, 1204, 1209, 1210, 1218, 1219, 1220, 1225, 1229, 1237, 1250, 1252, 1282, 1284, 1287, 1295, 1301, 1303], "equidist": [41, 55, 84, 116, 117, 118, 119, 120, 223, 290, 323, 360, 366, 394, 442, 593, 607, 636, 668, 669, 670, 671, 672, 806, 873, 906, 943, 949, 979, 1017, 1112, 1124, 1153], "pyproj": [41, 55, 84, 116, 118, 119, 593, 607, 636, 668, 670, 671, 1112, 1124, 1153, 1252, 1302], "projparam": [41, 44, 55, 84, 116, 118, 119, 593, 596, 607, 636, 668, 670, 671, 1112, 1115, 1124, 1153], "special": [41, 55, 84, 593, 607, 636, 1112, 1124, 1153], "_include_lon_0_lat_0": [41, 55, 84, 593, 607, 636, 1112, 1124, 1153], "interpret": [41, 55, 84, 134, 135, 393, 593, 607, 636, 715, 716, 978, 1112, 1124, 1153, 1230, 1231], "requir": [41, 55, 84, 116, 118, 119, 133, 136, 141, 390, 394, 442, 448, 449, 450, 451, 457, 458, 459, 460, 464, 465, 467, 468, 474, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 495, 533, 536, 593, 607, 636, 668, 670, 671, 714, 717, 722, 975, 979, 1017, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1036, 1040, 1041, 1043, 1044, 1050, 1051, 1052, 1053, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1071, 1109, 1112, 1124, 1153, 1216, 1252, 1260, 1293, 1303, 1305], "get_projparam": [41, 593, 1112], "evalu": [41, 397, 406, 421, 426, 593, 983, 985, 1112, 1252], "up": [41, 55, 84, 123, 124, 131, 132, 150, 151, 152, 169, 171, 178, 185, 190, 478, 501, 504, 505, 524, 527, 593, 607, 636, 679, 681, 688, 695, 700, 704, 705, 712, 713, 734, 735, 736, 751, 753, 760, 767, 772, 1023, 1054, 1077, 1080, 1081, 1100, 1103, 1112, 1124, 1153, 1201, 1233, 1235, 1236, 1252, 1289, 1297, 1301, 1304], "collect": [41, 178, 190, 379, 386, 387, 388, 390, 441, 442, 593, 688, 700, 760, 772, 964, 971, 972, 973, 975, 1006, 1016, 1017, 1112, 1259, 1273, 1287, 1303, 1304, 1305], "nradar": [41, 593, 1112], "whose": [41, 389, 439, 593, 974, 1013, 1112], "wa": [41, 66, 67, 95, 96, 134, 135, 164, 178, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 593, 618, 619, 647, 648, 688, 715, 716, 760, 801, 808, 812, 813, 814, 815, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 1112, 1135, 1136, 1164, 1165, 1227, 1252, 1293, 1303, 1305], "projection_proj": [41, 593, 1112], "instanc": [41, 48, 52, 58, 87, 133, 134, 135, 218, 225, 228, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 395, 396, 498, 593, 600, 604, 610, 639, 714, 715, 716, 801, 808, 811, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955, 980, 981, 1018, 1023, 1074, 1112, 1119, 1127, 1156, 1227, 1237, 1238, 1244, 1252], "valueerror": [41, 42, 48, 56, 57, 85, 86, 593, 594, 600, 608, 609, 637, 638, 1112, 1113, 1119, 1125, 1126, 1154, 1155], "point_z": [41, 393, 593, 978, 1112], "point_x": [41, 393, 593, 978, 1112], "point_i": [41, 393, 593, 978, 1112], "func": [41, 164, 593, 1112, 1252], "init_point_x_y_z": [41, 593, 1112], "reset": [41, 46, 47, 55, 66, 74, 75, 76, 84, 95, 103, 104, 105, 593, 598, 599, 607, 618, 626, 627, 628, 636, 647, 655, 656, 657, 1112, 1117, 1118, 1124, 1135, 1143, 1144, 1145, 1153, 1164, 1172, 1173, 1174, 1300], "point_latitud": [41, 393, 593, 978, 1112], "point_longitud": [41, 393, 593, 978, 1112], "perform": [41, 55, 66, 67, 68, 84, 95, 96, 97, 128, 133, 134, 135, 141, 169, 171, 178, 185, 190, 218, 223, 225, 228, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 290, 292, 295, 296, 297, 298, 318, 323, 328, 329, 332, 333, 334, 335, 338, 355, 360, 365, 366, 369, 370, 371, 372, 386, 389, 394, 456, 461, 469, 478, 491, 521, 593, 607, 618, 619, 620, 636, 647, 648, 649, 679, 681, 688, 695, 700, 709, 714, 715, 716, 722, 751, 753, 760, 767, 772, 801, 806, 808, 811, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 873, 875, 878, 879, 880, 881, 901, 906, 911, 912, 915, 916, 917, 918, 921, 938, 943, 948, 949, 952, 953, 954, 955, 971, 974, 979, 1032, 1037, 1045, 1054, 1067, 1097, 1112, 1124, 1135, 1136, 1137, 1153, 1164, 1165, 1166, 1250, 1253, 1254, 1255, 1257, 1264, 1265, 1269, 1293], "invers": [41, 55, 84, 148, 159, 462, 533, 593, 607, 636, 731, 743, 1038, 1109, 1112, 1124, 1153], "rel": [41, 55, 84, 123, 139, 142, 150, 151, 152, 195, 230, 327, 364, 443, 456, 529, 531, 593, 607, 636, 704, 720, 724, 734, 735, 736, 777, 813, 910, 947, 1032, 1105, 1107, 1112, 1124, 1153, 1252, 1301, 1303], "init_point_longitude_latitud": [41, 593, 1112], "point_altitud": [41, 45, 393, 593, 597, 978, 1112, 1116], "init_point_altitud": [41, 593, 1112], "init": [41, 235, 254, 397, 409, 593, 818, 837, 983, 1112, 1219, 1252], "field_dict": [42, 594, 1113], "replace_exist": [42, 56, 57, 58, 85, 86, 87, 594, 608, 609, 610, 637, 638, 639, 1113, 1125, 1126, 1127, 1154, 1155, 1156, 1252, 1289, 1296, 1297, 1303], "overwrit": [42, 594, 1113], "alreadi": [42, 56, 57, 85, 86, 148, 519, 520, 594, 608, 609, 637, 638, 731, 1095, 1096, 1113, 1125, 1126, 1154, 1155], "edg": [43, 67, 96, 114, 118, 133, 134, 135, 136, 141, 218, 225, 229, 230, 231, 249, 250, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 517, 523, 547, 595, 619, 648, 666, 670, 714, 715, 716, 717, 722, 801, 808, 812, 813, 814, 832, 833, 836, 846, 848, 850, 868, 875, 879, 880, 901, 911, 912, 916, 917, 938, 948, 949, 953, 954, 1093, 1099, 1114, 1136, 1165, 1279, 1280, 1289, 1293], "height": [43, 49, 51, 52, 123, 124, 131, 132, 138, 139, 142, 150, 151, 152, 195, 245, 246, 247, 263, 329, 366, 442, 443, 444, 446, 456, 461, 469, 478, 491, 494, 496, 497, 498, 510, 511, 514, 518, 524, 525, 526, 527, 529, 530, 531, 533, 534, 595, 601, 603, 604, 704, 705, 712, 713, 719, 720, 724, 734, 735, 736, 777, 828, 829, 830, 846, 912, 949, 1017, 1021, 1032, 1037, 1045, 1054, 1067, 1070, 1072, 1073, 1074, 1086, 1087, 1090, 1094, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1109, 1110, 1114, 1120, 1244, 1252, 1268, 1277, 1287, 1291, 1300, 1303], "determin": [43, 55, 84, 129, 133, 134, 135, 137, 154, 155, 245, 246, 247, 249, 250, 253, 260, 263, 265, 267, 329, 366, 377, 386, 387, 390, 395, 396, 447, 456, 465, 470, 484, 496, 498, 500, 501, 502, 504, 505, 529, 530, 533, 595, 607, 636, 710, 714, 715, 716, 718, 738, 739, 828, 829, 830, 832, 833, 836, 843, 846, 848, 850, 912, 949, 958, 962, 971, 972, 975, 980, 981, 1022, 1032, 1041, 1046, 1060, 1072, 1074, 1076, 1077, 1078, 1080, 1081, 1105, 1106, 1109, 1114, 1124, 1153, 1216, 1232, 1244, 1248, 1289, 1303], "same": [43, 55, 57, 65, 66, 67, 84, 86, 94, 95, 96, 117, 120, 133, 171, 185, 230, 329, 384, 390, 394, 395, 396, 442, 445, 456, 496, 516, 524, 595, 607, 609, 617, 618, 619, 636, 638, 646, 647, 648, 669, 672, 681, 695, 714, 753, 767, 813, 912, 969, 975, 979, 980, 981, 1017, 1018, 1020, 1032, 1072, 1092, 1100, 1114, 1124, 1126, 1134, 1135, 1136, 1153, 1155, 1163, 1164, 1165, 1219, 1229, 1245, 1250, 1259, 1279, 1280, 1289, 1295, 1300, 1303, 1305], "layout": [43, 383, 595, 968, 1114, 1252], "interpol": [43, 67, 96, 114, 118, 218, 225, 229, 230, 231, 232, 249, 250, 253, 263, 265, 267, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 379, 386, 441, 442, 461, 469, 478, 491, 494, 498, 510, 523, 524, 525, 533, 595, 619, 648, 666, 670, 801, 808, 812, 813, 814, 815, 832, 833, 836, 846, 848, 850, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 964, 971, 1016, 1017, 1018, 1037, 1045, 1054, 1067, 1070, 1074, 1086, 1099, 1100, 1101, 1109, 1114, 1136, 1165, 1228, 1244, 1252, 1260, 1289, 1299, 1303], "extrapol": [43, 114, 118, 218, 225, 229, 230, 231, 249, 250, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 595, 666, 670, 801, 808, 812, 813, 814, 832, 833, 836, 846, 848, 850, 868, 875, 879, 880, 901, 911, 912, 916, 917, 938, 948, 949, 953, 954, 1114], "boundari": [43, 114, 118, 141, 237, 238, 260, 366, 523, 595, 666, 670, 722, 820, 821, 843, 949, 1099, 1114, 1290], "center": [43, 55, 67, 84, 96, 113, 114, 115, 117, 118, 120, 134, 218, 223, 225, 229, 230, 231, 244, 248, 249, 250, 252, 253, 262, 263, 264, 265, 266, 267, 285, 290, 292, 296, 297, 301, 318, 323, 328, 329, 333, 334, 355, 360, 365, 366, 370, 371, 386, 388, 437, 438, 439, 461, 469, 478, 491, 494, 515, 595, 607, 619, 636, 648, 665, 666, 667, 669, 670, 672, 715, 801, 806, 808, 812, 813, 814, 827, 831, 832, 833, 835, 836, 845, 846, 847, 848, 849, 850, 868, 873, 875, 879, 880, 884, 901, 906, 911, 912, 916, 917, 938, 943, 948, 949, 953, 954, 971, 973, 1011, 1012, 1013, 1037, 1045, 1054, 1067, 1070, 1091, 1114, 1124, 1136, 1153, 1165, 1184, 1201, 1204, 1226, 1268, 1297, 1301], "2d": [43, 65, 66, 67, 94, 95, 96, 114, 142, 384, 394, 444, 456, 518, 523, 529, 595, 617, 618, 619, 646, 647, 648, 666, 723, 724, 732, 969, 979, 1018, 1032, 1094, 1099, 1105, 1114, 1134, 1135, 1136, 1163, 1164, 1165, 1201, 1226, 1263, 1301], "degre": [43, 51, 65, 66, 94, 95, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 146, 147, 157, 158, 199, 201, 218, 223, 224, 232, 244, 248, 251, 252, 260, 262, 264, 266, 268, 285, 290, 291, 298, 301, 318, 323, 324, 327, 329, 335, 338, 355, 360, 361, 364, 366, 372, 461, 472, 491, 525, 533, 595, 603, 617, 618, 646, 647, 665, 666, 667, 668, 669, 670, 671, 672, 673, 723, 724, 729, 730, 741, 742, 781, 784, 801, 806, 807, 815, 827, 831, 834, 835, 843, 845, 847, 849, 851, 868, 873, 874, 881, 884, 901, 906, 907, 910, 912, 918, 921, 938, 943, 944, 947, 949, 955, 1014, 1037, 1048, 1067, 1101, 1109, 1114, 1134, 1135, 1163, 1164, 1198, 1200, 1209, 1210, 1219, 1220, 1221, 1232, 1241, 1245, 1252, 1284, 1287, 1301, 1303], "point_": [46, 47, 598, 599, 1117, 1118], "properti": [48, 53, 54, 179, 180, 533, 600, 605, 606, 689, 690, 761, 762, 1008, 1010, 1109, 1119, 1303], "xarrai": [49, 235, 245, 246, 247, 601, 818, 828, 829, 830, 1120, 1221, 1252, 1283, 1287, 1293, 1302], "arm_alt_lat_lon_vari": [50, 393, 602, 978, 1121], "speed": [51, 52, 246, 442, 511, 533, 534, 603, 604, 829, 1017, 1087, 1109, 1110, 1201, 1291, 1303], "direct": [51, 72, 101, 390, 449, 468, 509, 511, 521, 533, 534, 603, 624, 653, 975, 1025, 1044, 1085, 1087, 1097, 1109, 1110, 1141, 1170, 1252, 1291, 1303], "horizont": [51, 52, 53, 54, 55, 84, 122, 127, 128, 130, 133, 218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 247, 249, 250, 253, 261, 263, 265, 267, 285, 286, 287, 292, 296, 297, 298, 318, 319, 320, 328, 333, 334, 335, 355, 356, 357, 365, 370, 371, 372, 378, 379, 452, 458, 459, 460, 464, 476, 477, 489, 490, 495, 507, 509, 527, 533, 603, 604, 605, 606, 607, 636, 703, 708, 709, 711, 714, 801, 802, 803, 808, 812, 813, 814, 815, 826, 828, 830, 832, 833, 836, 844, 846, 848, 850, 868, 869, 870, 875, 879, 880, 881, 901, 902, 903, 911, 916, 917, 918, 938, 939, 940, 948, 953, 954, 955, 963, 964, 1028, 1034, 1035, 1036, 1040, 1052, 1053, 1065, 1066, 1071, 1083, 1085, 1103, 1109, 1124, 1153, 1244, 1252, 1270, 1280, 1301, 1303], "wind": [51, 52, 53, 54, 133, 134, 378, 379, 507, 508, 509, 533, 534, 603, 604, 605, 606, 714, 715, 963, 964, 1083, 1084, 1085, 1109, 1110, 1244, 1252, 1291, 1303], "1d": [51, 52, 114, 118, 142, 456, 497, 499, 518, 531, 537, 603, 604, 666, 670, 723, 724, 732, 1032, 1073, 1075, 1094, 1107, 1206, 1217, 1222, 1223, 1224, 1225, 1233, 1234, 1235, 1236, 1252, 1301], "meter": [51, 52, 53, 54, 66, 67, 68, 95, 96, 97, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 201, 232, 268, 298, 301, 326, 329, 335, 338, 363, 366, 372, 437, 438, 439, 440, 441, 442, 446, 496, 516, 521, 524, 530, 533, 603, 604, 605, 606, 618, 619, 620, 647, 648, 649, 665, 666, 667, 668, 669, 670, 671, 672, 673, 724, 784, 815, 851, 881, 884, 909, 912, 918, 921, 946, 949, 955, 1007, 1008, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1021, 1072, 1092, 1097, 1100, 1106, 1109, 1135, 1136, 1137, 1164, 1165, 1166, 1184, 1219, 1245, 1252, 1263, 1291, 1299, 1301, 1303], "abov": [51, 52, 55, 57, 84, 86, 122, 123, 124, 125, 126, 131, 132, 133, 136, 138, 139, 141, 142, 146, 147, 150, 151, 152, 154, 167, 181, 193, 195, 196, 197, 199, 223, 224, 290, 291, 323, 324, 360, 361, 442, 445, 446, 456, 496, 499, 519, 525, 527, 533, 603, 604, 607, 609, 636, 638, 677, 691, 703, 704, 705, 706, 707, 712, 713, 714, 717, 719, 720, 722, 724, 728, 729, 730, 734, 735, 736, 738, 749, 763, 775, 777, 778, 779, 781, 806, 807, 873, 874, 906, 907, 943, 944, 958, 1017, 1020, 1021, 1032, 1072, 1075, 1095, 1101, 1103, 1109, 1124, 1126, 1153, 1155, 1216, 1217, 1220, 1221, 1252, 1257, 1263, 1278, 1280, 1286, 1291, 1292, 1293, 1295, 1297, 1303, 1305], "sea": [51, 52, 55, 84, 533, 603, 604, 607, 636, 1109, 1124, 1153, 1252, 1303], "were": [51, 52, 169, 171, 178, 533, 603, 604, 679, 681, 688, 751, 753, 760, 1109, 1235, 1303], "sampl": [51, 52, 145, 456, 465, 484, 497, 529, 531, 533, 534, 603, 604, 727, 1032, 1041, 1060, 1073, 1105, 1107, 1109, 1110, 1111, 1188, 1190, 1191, 1216, 1252, 1259, 1260, 1268, 1288, 1290, 1291, 1293, 1303], "per": [51, 52, 53, 54, 68, 84, 97, 133, 151, 442, 533, 603, 604, 605, 606, 620, 636, 649, 714, 735, 1017, 1109, 1137, 1153, 1166, 1185, 1186, 1187, 1303], "north": [51, 55, 84, 245, 246, 260, 329, 366, 603, 607, 636, 828, 829, 843, 912, 949, 1018, 1124, 1153, 1221, 1272, 1301], "east": [51, 218, 229, 285, 296, 318, 333, 355, 370, 603, 801, 812, 868, 879, 901, 916, 938, 953, 1018, 1221, 1272], "u_wind": [51, 52, 533, 534, 603, 604, 1109, 1110, 1291, 1303], "compon": [51, 52, 53, 54, 508, 509, 603, 604, 605, 606, 1084, 1085, 1303], "v_wind": [51, 52, 533, 534, 603, 604, 1109, 1110, 1291, 1303], "classmethod": [52, 424, 604], "_rang": [55, 84, 466, 607, 636, 1042, 1124, 1153], "scan_typ": [55, 84, 201, 217, 268, 284, 301, 317, 338, 354, 607, 636, 784, 800, 851, 867, 884, 900, 921, 937, 1124, 1153, 1301], "sweep_numb": [55, 84, 607, 636, 1124, 1153, 1252, 1277, 1295, 1301], "sweep_mod": [55, 84, 607, 636, 1124, 1153, 1252, 1295, 1301], "fixed_angl": [55, 84, 201, 268, 301, 338, 607, 636, 784, 851, 884, 921, 1124, 1153, 1237, 1252, 1277, 1278, 1282, 1295, 1301], "sweep_start_ray_index": [55, 84, 607, 636, 1124, 1153, 1295, 1301], "sweep_end_ray_index": [55, 84, 607, 636, 1124, 1153, 1295, 1301], "altitude_agl": [55, 84, 607, 636, 1124, 1153, 1301], "target_scan_r": [55, 84, 607, 636, 1124, 1153, 1252, 1301], "rays_are_index": [55, 84, 607, 636, 1124, 1153], "ray_angle_r": [55, 84, 607, 636, 1124, 1153], "scan_rat": [55, 84, 396, 607, 636, 981, 1124, 1153, 1252, 1301], "antenna_transit": [55, 66, 67, 84, 95, 96, 178, 190, 218, 225, 229, 230, 231, 232, 268, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 607, 618, 619, 636, 647, 648, 688, 700, 760, 772, 801, 808, 812, 813, 814, 815, 851, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 1124, 1135, 1136, 1153, 1164, 1165, 1301], "instrument_paramet": [55, 84, 133, 144, 396, 471, 473, 607, 636, 714, 726, 981, 1047, 1049, 1124, 1153, 1297, 1301], "radar_calibr": [55, 84, 465, 473, 484, 486, 487, 607, 636, 1041, 1049, 1060, 1062, 1063, 1124, 1153, 1301], "rotat": [55, 84, 201, 607, 636, 784, 1124, 1153], "tilt": [55, 84, 201, 230, 329, 366, 528, 607, 636, 784, 813, 912, 949, 1104, 1124, 1153, 1252, 1260, 1276, 1283], "roll": [55, 84, 153, 201, 390, 607, 636, 737, 784, 975, 1124, 1153, 1243, 1249], "drift": [55, 84, 201, 607, 636, 784, 1124, 1153], "head": [55, 84, 201, 607, 636, 784, 1124, 1153], "pitch": [55, 84, 201, 607, 636, 784, 1124, 1153], "georefs_appli": [55, 84, 607, 636, 1124, 1153], "antenna": [55, 66, 67, 84, 95, 96, 113, 114, 115, 125, 131, 132, 142, 143, 144, 145, 148, 149, 156, 158, 159, 160, 178, 190, 195, 199, 218, 225, 229, 230, 231, 232, 268, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 452, 473, 479, 492, 511, 527, 607, 618, 619, 636, 647, 648, 665, 666, 667, 688, 700, 706, 712, 713, 724, 725, 726, 727, 731, 732, 733, 740, 742, 743, 744, 760, 772, 777, 781, 801, 808, 812, 813, 814, 815, 851, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 1023, 1028, 1049, 1055, 1068, 1087, 1103, 1124, 1135, 1136, 1153, 1164, 1165, 1237, 1252, 1253, 1257, 1262, 1263, 1264, 1265, 1293, 1299, 1301], "structur": [55, 84, 396, 530, 607, 636, 981, 1106, 1124, 1153, 1259, 1289, 1300], "base": [55, 60, 61, 62, 64, 65, 66, 67, 68, 84, 89, 90, 91, 93, 94, 95, 96, 97, 134, 135, 165, 193, 194, 195, 196, 197, 198, 199, 200, 231, 297, 334, 371, 394, 439, 441, 442, 451, 471, 478, 496, 498, 521, 607, 612, 613, 614, 616, 617, 618, 619, 620, 636, 641, 642, 643, 645, 646, 647, 648, 649, 675, 715, 716, 728, 747, 775, 776, 777, 778, 779, 780, 781, 782, 814, 880, 917, 954, 979, 1013, 1016, 1017, 1027, 1047, 1054, 1072, 1074, 1097, 1124, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1153, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1217, 1227, 1252, 1253, 1256, 1257, 1259, 1293, 1297, 1300, 1301, 1303], "under": [55, 84, 133, 134, 135, 442, 607, 636, 714, 715, 716, 1017, 1124, 1153, 1252, 1289, 1293, 1302, 1303], "sub": [55, 84, 607, 636, 1124, 1153, 1252], "meta_group": [55, 84, 607, 636, 1124, 1153, 1301], "instrument": [55, 84, 178, 190, 193, 196, 197, 396, 607, 636, 688, 700, 728, 760, 772, 775, 778, 779, 981, 1124, 1153, 1252, 1297, 1301], "volum": [55, 84, 133, 135, 136, 329, 366, 386, 387, 388, 396, 444, 461, 469, 478, 491, 492, 494, 497, 498, 508, 510, 515, 525, 527, 533, 534, 576, 607, 636, 714, 716, 717, 912, 949, 971, 972, 973, 981, 1007, 1037, 1045, 1054, 1067, 1068, 1070, 1073, 1074, 1084, 1086, 1091, 1101, 1103, 1109, 1110, 1124, 1153, 1209, 1210, 1212, 1229, 1246, 1247, 1250, 1252, 1257, 1267, 1285], "multipl": [55, 84, 148, 159, 456, 527, 529, 607, 636, 731, 743, 1032, 1103, 1105, 1124, 1153, 1252, 1257, 1262, 1267, 1279, 1285, 1300, 1305], "ground": [55, 84, 478, 511, 607, 636, 1018, 1023, 1054, 1087, 1124, 1153, 1259], "target": [55, 84, 149, 394, 472, 473, 607, 636, 733, 979, 1048, 1049, 1124, 1153, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1217, 1219, 1220, 1221, 1225, 1245, 1301], "thr": [55, 84, 607, 636, 1124, 1153], "index": [55, 70, 84, 99, 129, 137, 138, 139, 140, 142, 154, 155, 197, 231, 245, 246, 247, 249, 253, 263, 265, 267, 297, 334, 371, 394, 456, 470, 528, 607, 622, 636, 651, 710, 718, 719, 720, 721, 724, 728, 738, 739, 779, 814, 828, 829, 830, 832, 836, 846, 848, 850, 880, 917, 954, 979, 1007, 1018, 1023, 1032, 1046, 1104, 1124, 1139, 1153, 1168, 1252, 1294, 1303], "rays_per_sweep": [55, 76, 84, 105, 607, 628, 636, 657, 1124, 1145, 1153, 1174, 1185, 1186], "upon": [55, 84, 193, 194, 195, 196, 197, 198, 199, 200, 607, 636, 728, 775, 776, 777, 778, 779, 780, 781, 782, 1124, 1153, 1252], "prior": [55, 57, 84, 86, 141, 146, 147, 218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 390, 607, 609, 636, 638, 722, 729, 730, 801, 808, 811, 812, 813, 814, 815, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955, 975, 1124, 1126, 1153, 1155, 1260, 1293], "init_rays_per_sweep": [55, 84, 607, 636, 1124, 1153], "intend": [55, 84, 478, 607, 636, 1054, 1124, 1153], "rate": [55, 84, 496, 500, 501, 502, 503, 504, 505, 506, 518, 607, 636, 1072, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1094, 1124, 1153, 1252, 1289], "whether": [55, 84, 150, 151, 157, 169, 473, 519, 520, 525, 527, 607, 636, 679, 723, 734, 735, 741, 751, 1049, 1095, 1096, 1101, 1103, 1124, 1153, 1300], "regular": [55, 84, 395, 461, 469, 478, 491, 494, 548, 549, 563, 564, 607, 636, 980, 1018, 1037, 1045, 1054, 1067, 1070, 1124, 1153, 1268, 1293], "angular": [55, 84, 607, 636, 1124, 1153, 1201, 1240, 1241], "express": [55, 84, 607, 636, 1124, 1153], "360": [55, 84, 136, 141, 330, 367, 607, 636, 717, 722, 913, 950, 1124, 1153, 1252, 1291, 1295, 1301], "represent": [55, 84, 423, 607, 636, 1124, 1153], "forbidden": [55, 84, 607, 636, 1124, 1153], "plane": [55, 84, 394, 509, 607, 636, 979, 1085, 1124, 1153, 1301], "180": [55, 84, 115, 117, 150, 151, 527, 607, 636, 667, 669, 734, 735, 1103, 1124, 1153, 1295, 1303], "gate_z": [55, 67, 84, 96, 607, 619, 636, 648, 1124, 1136, 1153, 1165], "gate_x": [55, 67, 84, 96, 607, 619, 636, 648, 1124, 1136, 1153, 1165], "gate_i": [55, 67, 84, 96, 607, 619, 636, 648, 1124, 1136, 1153, 1165], "system": [55, 84, 116, 117, 118, 129, 137, 146, 147, 154, 155, 376, 386, 394, 440, 458, 468, 511, 607, 636, 668, 669, 670, 710, 718, 729, 730, 738, 739, 961, 971, 979, 1009, 1015, 1034, 1044, 1087, 1124, 1153, 1252, 1302], "earth": [55, 84, 113, 114, 117, 120, 511, 607, 636, 665, 666, 669, 672, 1014, 1087, 1124, 1153, 1219, 1245], "radiu": [55, 84, 113, 114, 115, 117, 120, 437, 438, 439, 440, 441, 442, 496, 511, 530, 607, 636, 665, 666, 667, 669, 672, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1072, 1087, 1106, 1124, 1153, 1219, 1245, 1289, 1299], "init_gate_x_y_z": [55, 84, 607, 636, 1124, 1153], "gate_latitud": [55, 66, 74, 84, 95, 103, 607, 618, 626, 636, 647, 655, 1124, 1135, 1143, 1153, 1164, 1172], "gate_longitud": [55, 66, 74, 84, 95, 103, 607, 618, 626, 636, 647, 655, 1124, 1135, 1143, 1153, 1164, 1172, 1295], "init_gate_longitude_latitud": [55, 84, 607, 636, 1124, 1153, 1295], "gate_altitud": [55, 66, 73, 84, 95, 102, 607, 618, 625, 636, 647, 654, 1124, 1135, 1142, 1153, 1164, 1171], "init_gate_altitud": [55, 84, 607, 636, 1124, 1153, 1295], "actual": [55, 84, 143, 390, 394, 440, 607, 636, 725, 975, 979, 1015, 1124, 1153, 1305], "flag": [55, 84, 133, 268, 390, 498, 522, 523, 526, 530, 607, 636, 714, 851, 975, 1074, 1098, 1099, 1102, 1106, 1124, 1153, 1202, 1203, 1229, 1232, 1252, 1305], "transit": [55, 66, 67, 84, 95, 96, 178, 190, 193, 196, 197, 218, 225, 229, 230, 231, 232, 268, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 478, 491, 522, 607, 618, 619, 636, 647, 648, 688, 700, 728, 760, 772, 775, 778, 779, 801, 808, 812, 813, 814, 815, 851, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 1054, 1067, 1098, 1124, 1135, 1136, 1153, 1164, 1165, 1252], "ye": [55, 84, 133, 607, 636, 714, 1124, 1153], "about": [55, 84, 511, 607, 636, 1087, 1124, 1153, 1252], "aircraft": [55, 84, 230, 390, 607, 636, 813, 975, 1124, 1153], "longitudin": [55, 84, 230, 242, 253, 257, 258, 267, 607, 636, 813, 825, 836, 840, 841, 850, 1124, 1153], "orthogon": [55, 84, 509, 607, 636, 1085, 1124, 1153], "platform": [55, 84, 607, 636, 1124, 1153], "right": [55, 84, 444, 515, 607, 636, 1091, 1124, 1153, 1252, 1268, 1269, 1293], "wing": [55, 84, 607, 636, 1124, 1153], "down": [55, 84, 607, 636, 1124, 1153, 1251], "track": [55, 84, 607, 636, 1124, 1153], "compass": [55, 84, 607, 636, 1124, 1153], "clockwis": [55, 84, 607, 636, 1124, 1153], "nose": [55, 84, 607, 636, 1124, 1153, 1252], "had": [55, 84, 395, 607, 636, 980, 1124, 1153, 1252, 1259, 1305], "georefer": [55, 84, 607, 636, 1124, 1153], "lead": [55, 84, 607, 636, 1124, 1153, 1263], "centric": [55, 84, 607, 636, 1124, 1153], "avaiabl": [55, 84, 607, 636, 1124, 1153], "radar_paramet": [55, 84, 607, 636, 1124, 1153], "subconvent": [55, 84, 607, 636, 1124, 1153], "calibr": [55, 84, 148, 149, 156, 159, 500, 607, 636, 731, 733, 740, 743, 1076, 1124, 1153], "ngate": [55, 65, 84, 94, 607, 617, 636, 646, 1124, 1134, 1153, 1163, 1185, 1186, 1187, 1252, 1295, 1301], "nrai": [55, 65, 84, 94, 466, 607, 617, 636, 646, 1042, 1124, 1134, 1153, 1163, 1187, 1220, 1252, 1295, 1301], "nsweep": [55, 84, 607, 636, 1124, 1153, 1185, 1186, 1277, 1278, 1291, 1301], "loos": [56, 57, 85, 86, 608, 609, 637, 638, 1125, 1126, 1154, 1155, 1239], "existing_field_nam": [57, 86, 609, 638, 1126, 1155], "done": [57, 86, 131, 133, 141, 511, 530, 609, 638, 712, 714, 722, 1087, 1106, 1126, 1155, 1295, 1302, 1303, 1305], "both": [57, 86, 133, 193, 197, 377, 516, 517, 609, 638, 714, 728, 775, 779, 962, 1092, 1093, 1126, 1155, 1252, 1260, 1263, 1265, 1269, 1284, 1293, 1299, 1300, 1302, 1303], "reflectivity_copi": [57, 86, 609, 638, 1126, 1155], "take": [57, 86, 134, 148, 229, 296, 333, 370, 441, 442, 446, 521, 576, 609, 638, 715, 731, 812, 879, 916, 953, 1016, 1017, 1021, 1097, 1126, 1155, 1259, 1260, 1263, 1270, 1289, 1303], "gatefilt": [58, 87, 122, 123, 124, 133, 134, 135, 136, 141, 147, 193, 194, 195, 196, 197, 198, 199, 200, 218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 441, 442, 498, 521, 522, 523, 528, 533, 534, 610, 639, 703, 704, 705, 714, 715, 716, 717, 722, 728, 730, 775, 776, 777, 778, 779, 780, 781, 782, 801, 808, 811, 812, 813, 814, 815, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955, 1007, 1016, 1017, 1023, 1074, 1097, 1098, 1099, 1104, 1109, 1110, 1127, 1156, 1252, 1255, 1263, 1264, 1265, 1269, 1288, 1294, 1297, 1303], "updat": [58, 87, 610, 639, 1127, 1156, 1252, 1270, 1289, 1293, 1303], "mask": [58, 87, 133, 134, 135, 136, 142, 153, 169, 171, 174, 178, 185, 189, 190, 193, 195, 196, 197, 198, 199, 200, 218, 225, 228, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 386, 387, 388, 442, 461, 469, 478, 491, 494, 524, 548, 549, 563, 564, 610, 639, 679, 681, 684, 688, 695, 699, 700, 714, 715, 716, 717, 724, 728, 737, 751, 753, 756, 760, 767, 771, 772, 775, 777, 778, 779, 780, 781, 782, 801, 808, 811, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955, 971, 972, 973, 1017, 1023, 1037, 1045, 1054, 1067, 1070, 1100, 1127, 1156, 1227, 1239, 1252, 1254, 1263, 1264, 1289, 1294, 1295, 1296, 1301], "condit": [58, 87, 133, 165, 169, 171, 178, 185, 190, 395, 610, 639, 675, 679, 681, 688, 695, 700, 714, 747, 751, 753, 760, 767, 772, 980, 1127, 1156, 1255, 1296, 1300], "append": [58, 87, 610, 639, 1127, 1156, 1252, 1291], "filtered_": [58, 87, 610, 639, 1127, 1156], "prefix": [58, 87, 610, 639, 1122, 1127, 1156], "check": [59, 68, 88, 97, 134, 135, 136, 141, 150, 151, 389, 447, 524, 611, 620, 640, 649, 715, 716, 717, 722, 734, 735, 974, 1022, 1100, 1128, 1137, 1157, 1166, 1219, 1229, 1245, 1250, 1252, 1293, 1302, 1303, 1304], "keyerror": [59, 88, 431, 432, 611, 640, 990, 991, 1001, 1002, 1128, 1157, 1302], "array_lik": [60, 89, 612, 641, 1129, 1158, 1231], "view": [61, 62, 64, 90, 91, 93, 397, 429, 430, 436, 613, 614, 616, 642, 643, 645, 983, 988, 989, 995, 999, 1000, 1005, 1130, 1131, 1133, 1159, 1160, 1162, 1269, 1297, 1299, 1301], "possibl": [61, 62, 64, 90, 91, 93, 390, 456, 525, 613, 614, 616, 642, 643, 645, 975, 1032, 1101, 1130, 1131, 1133, 1159, 1160, 1162, 1216, 1223, 1252, 1268, 1289, 1297, 1299], "underli": [61, 62, 64, 90, 91, 93, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 377, 613, 614, 616, 642, 643, 645, 801, 808, 812, 813, 814, 815, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 962, 1130, 1131, 1133, 1159, 1160, 1162, 1293], "get_gate_x_y_z": [64, 93, 616, 645, 1133, 1162, 1279, 1280], "obtain": [64, 67, 93, 96, 125, 150, 158, 452, 462, 472, 473, 481, 525, 616, 619, 645, 648, 706, 734, 742, 1028, 1038, 1048, 1049, 1057, 1101, 1133, 1136, 1162, 1165, 1242, 1291, 1295, 1303], "plot": [64, 67, 93, 96, 201, 202, 203, 204, 205, 206, 207, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 461, 469, 478, 491, 494, 528, 534, 616, 619, 645, 648, 784, 785, 786, 787, 788, 789, 790, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 925, 926, 927, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 1037, 1045, 1054, 1067, 1070, 1104, 1110, 1133, 1136, 1162, 1165, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1285, 1286, 1287, 1289, 1292, 1293, 1295, 1296, 1297, 1299, 1300], "spatial": [64, 67, 93, 96, 133, 616, 619, 645, 648, 714, 1133, 1136, 1162, 1165, 1299], "context": [64, 67, 93, 96, 616, 619, 645, 648, 1133, 1136, 1162, 1165, 1287, 1293, 1303], "request": [64, 93, 118, 386, 441, 442, 517, 616, 645, 670, 971, 1016, 1017, 1093, 1133, 1162, 1252, 1293, 1303], "area": [65, 94, 132, 218, 220, 225, 229, 230, 231, 232, 233, 285, 287, 292, 296, 297, 298, 299, 318, 320, 328, 329, 333, 334, 335, 336, 355, 357, 365, 366, 370, 371, 372, 373, 511, 523, 530, 617, 646, 713, 801, 803, 808, 812, 813, 814, 815, 816, 868, 870, 875, 879, 880, 881, 882, 901, 903, 911, 912, 916, 917, 918, 919, 938, 940, 948, 949, 953, 954, 955, 956, 1087, 1099, 1106, 1134, 1163, 1227], "squar": [65, 94, 150, 447, 516, 519, 520, 521, 533, 617, 646, 734, 1022, 1092, 1095, 1096, 1097, 1109, 1134, 1163, 1207], "assumpt": [65, 94, 509, 521, 617, 646, 1085, 1097, 1134, 1163], "size": [65, 94, 124, 133, 134, 136, 141, 196, 221, 288, 321, 358, 422, 439, 441, 442, 445, 447, 456, 467, 483, 486, 487, 496, 498, 521, 523, 525, 617, 646, 705, 714, 715, 717, 722, 778, 804, 871, 904, 941, 1013, 1016, 1017, 1020, 1022, 1032, 1043, 1059, 1062, 1063, 1072, 1074, 1097, 1099, 1101, 1134, 1163, 1201, 1217, 1226, 1234, 1249, 1270, 1283, 1289], "reset_gate_coord": [66, 95, 618, 647, 1135, 1164], "filter_transit": [66, 67, 95, 96, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 618, 619, 647, 648, 801, 808, 812, 813, 814, 815, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 1135, 1136, 1164, 1165], "With": [66, 67, 95, 96, 618, 619, 647, 648, 1135, 1136, 1164, 1165, 1293, 1294, 1295], "therefor": [66, 67, 95, 96, 521, 618, 619, 647, 648, 1097, 1135, 1136, 1164, 1165, 1297, 1301], "more": [66, 67, 72, 95, 96, 101, 134, 141, 150, 246, 394, 440, 441, 442, 496, 498, 530, 618, 619, 624, 647, 648, 653, 715, 722, 734, 829, 979, 1015, 1016, 1017, 1023, 1072, 1074, 1106, 1135, 1136, 1141, 1164, 1165, 1170, 1209, 1210, 1252, 1263, 1268, 1279, 1280, 1293, 1297, 1301, 1303], "effici": [66, 67, 95, 96, 441, 618, 619, 647, 648, 1016, 1135, 1136, 1164, 1165, 1208, 1293, 1297], "than": [66, 67, 95, 96, 134, 143, 147, 153, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 496, 511, 521, 618, 619, 647, 648, 715, 725, 730, 737, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1072, 1087, 1097, 1135, 1136, 1164, 1165, 1227, 1237, 1289, 1305], "through": [66, 67, 95, 96, 232, 298, 335, 372, 462, 481, 518, 618, 619, 647, 648, 815, 881, 918, 955, 1038, 1057, 1094, 1135, 1136, 1164, 1165, 1263, 1268, 1303], "pleas": [66, 95, 301, 338, 536, 618, 647, 884, 921, 1135, 1164, 1259, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "get_field": [67, 96, 619, 648, 1136, 1165, 1279, 1280], "check_uniform": [68, 97, 620, 649, 1137, 1166], "lookuperror": [68, 97, 620, 649, 1137, 1166], "except": [68, 97, 394, 620, 649, 979, 996, 1137, 1166, 1252, 1299], "skip": [68, 97, 134, 135, 389, 447, 620, 649, 715, 716, 974, 1022, 1137, 1166, 1252, 1303], "nyquist_veloc": [68, 97, 134, 135, 396, 620, 649, 715, 716, 981, 1137, 1166, 1297, 1301], "slice": [69, 81, 98, 110, 248, 249, 250, 251, 252, 253, 264, 265, 266, 267, 621, 633, 650, 662, 831, 832, 833, 834, 835, 836, 847, 848, 849, 850, 1138, 1150, 1167, 1179, 1283, 1299, 1301], "out": [72, 101, 136, 139, 140, 147, 150, 151, 152, 195, 199, 392, 393, 394, 395, 396, 510, 519, 520, 535, 538, 548, 549, 563, 564, 624, 653, 717, 720, 721, 730, 734, 735, 736, 777, 781, 977, 978, 979, 980, 981, 1023, 1086, 1095, 1096, 1141, 1170, 1252, 1264, 1265, 1269, 1280, 1288, 1290, 1293, 1299, 1302, 1303, 1304], "_io": [72, 101, 624, 653, 1141, 1170], "textiowrapp": [72, 101, 624, 653, 1141, 1170], "stdout": [72, 101, 535, 624, 653, 1141, 1170], "encod": [72, 101, 395, 624, 653, 980, 1141, 1170, 1252], "utf": [72, 101, 624, 653, 1141, 1170], "print": [72, 101, 122, 146, 147, 235, 254, 390, 521, 535, 538, 548, 549, 563, 564, 624, 653, 703, 729, 730, 818, 837, 975, 1097, 1141, 1170, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1289, 1296, 1300, 1301], "compact": [72, 101, 624, 653, 1141, 1170], "f": [72, 101, 260, 366, 435, 624, 653, 843, 949, 994, 1004, 1141, 1170, 1260, 1268, 1282, 1289, 1293, 1305], "minim": [72, 101, 521, 530, 624, 653, 1097, 1106, 1141, 1170], "everyth": [72, 101, 624, 653, 1141, 1170, 1260, 1303], "output": [72, 101, 128, 394, 462, 481, 498, 511, 518, 525, 527, 624, 653, 709, 979, 1023, 1038, 1057, 1074, 1087, 1094, 1101, 1103, 1141, 1170, 1219, 1252, 1293], "screen": [72, 101, 624, 653, 1141, 1170], "gate_": [75, 104, 627, 656, 1144, 1173], "iter": [77, 78, 79, 80, 81, 82, 83, 106, 107, 108, 109, 110, 111, 112, 144, 411, 435, 456, 471, 499, 521, 523, 629, 630, 631, 632, 633, 634, 635, 658, 659, 660, 661, 662, 663, 664, 726, 994, 1004, 1032, 1047, 1075, 1097, 1099, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1217, 1301], "over": [79, 82, 83, 108, 111, 112, 131, 132, 133, 134, 138, 142, 150, 151, 195, 218, 220, 225, 229, 230, 231, 232, 247, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 411, 496, 511, 514, 527, 529, 631, 634, 635, 660, 663, 664, 712, 713, 714, 715, 719, 724, 734, 735, 777, 801, 803, 808, 812, 813, 814, 815, 830, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1072, 1087, 1090, 1103, 1105, 1148, 1151, 1152, 1177, 1180, 1181, 1216, 1226, 1252, 1263, 1289, 1291, 1293, 1296, 1301], "npuls": [84, 636, 1153, 1217, 1222, 1223, 1224, 1233, 1234, 1235, 1236], "doppler_veloc": [84, 636, 1153], "doppler_frequ": [84, 636, 1153], "puls": [84, 144, 148, 159, 471, 472, 511, 636, 726, 731, 743, 1047, 1048, 1087, 1153, 1187, 1217, 1222, 1223, 1224, 1229, 1233, 1234, 1235, 1236, 1252, 1297], "npulses_max": [84, 636, 1153, 1187], "frequenc": [84, 123, 124, 396, 445, 456, 472, 473, 493, 500, 501, 502, 504, 505, 511, 512, 513, 521, 522, 523, 531, 636, 704, 705, 981, 1020, 1032, 1048, 1049, 1069, 1076, 1077, 1078, 1080, 1081, 1087, 1088, 1089, 1097, 1098, 1099, 1107, 1153], "ke": [113, 114, 115, 511, 665, 666, 667, 1087], "3333333333333333": [113, 114, 511, 665, 666, 1087], "kilomet": [113, 496, 665, 1072], "effect": [113, 114, 115, 148, 159, 169, 171, 178, 185, 190, 230, 441, 442, 493, 511, 665, 666, 667, 679, 681, 688, 695, 700, 731, 743, 751, 753, 760, 767, 772, 813, 1016, 1017, 1069, 1087, 1279], "scale": [113, 114, 115, 218, 225, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 395, 396, 441, 442, 463, 521, 522, 665, 666, 667, 801, 808, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 980, 981, 1016, 1017, 1039, 1097, 1098, 1271], "equat": [113, 521, 665, 1097, 1216, 1252], "28": [113, 665, 1252, 1289, 1291, 1292, 1293, 1303], "b": [113, 496, 522, 534, 665, 958, 1072, 1098, 1110, 1252, 1303], "doviak": [113, 445, 665, 1020], "zrnic": [113, 445, 491, 665, 1020, 1067], "sqrt": [113, 117, 511, 665, 669, 1087, 1279, 1280, 1291], "r": [113, 116, 117, 118, 119, 120, 133, 135, 146, 147, 208, 223, 224, 244, 262, 275, 290, 291, 308, 323, 324, 325, 326, 345, 360, 361, 362, 363, 451, 461, 465, 470, 471, 478, 484, 496, 498, 501, 504, 505, 506, 525, 527, 530, 533, 665, 668, 669, 670, 671, 672, 714, 716, 729, 730, 791, 806, 807, 827, 845, 858, 873, 874, 891, 906, 907, 908, 909, 928, 943, 944, 945, 946, 1027, 1037, 1041, 1046, 1047, 1054, 1060, 1072, 1074, 1077, 1080, 1081, 1082, 1101, 1103, 1106, 1109, 1216, 1217, 1227, 1259, 1271, 1279, 1280, 1289, 1303], "sin": [113, 117, 120, 509, 665, 669, 672, 1085], "theta_": [113, 665], "arcsin": [113, 117, 665, 669], "frac": [113, 665], "theta_a": [113, 665], "arc": [113, 665, 1219], "length": [113, 146, 147, 150, 151, 152, 153, 154, 155, 498, 511, 521, 525, 665, 729, 730, 734, 735, 736, 737, 738, 739, 1074, 1087, 1097, 1101, 1222, 1233, 1234, 1252], "6371": [113, 117, 120, 665, 669, 672, 1219, 1245], "weather": [113, 133, 148, 149, 156, 159, 440, 461, 471, 478, 511, 521, 592, 665, 714, 731, 733, 740, 743, 1015, 1037, 1047, 1054, 1087, 1097, 1217, 1252, 1259, 1268, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "edit": [113, 665, 1252, 1303], "1993": [113, 445, 665, 1020], "21": [113, 665], "vector": [114, 118, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 466, 516, 518, 519, 520, 666, 670, 723, 732, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1042, 1092, 1094, 1095, 1096, 1205, 1207, 1208, 1252], "util": [114, 124, 133, 134, 230, 500, 666, 705, 714, 715, 813, 1076, 1111, 1252, 1260, 1271, 1284, 1287, 1289, 1303], "antenna_to_cartesian": [114, 666, 1252], "cartograph": [116, 117, 118, 119, 120, 338, 668, 669, 670, 671, 672, 921], "build": [116, 118, 119, 165, 169, 171, 178, 185, 190, 396, 535, 668, 670, 671, 675, 679, 681, 688, 695, 700, 747, 751, 753, 760, 767, 772, 981, 1252, 1293, 1302, 1303], "desir": [116, 118, 119, 169, 171, 178, 185, 190, 397, 478, 496, 533, 668, 670, 671, 679, 681, 688, 695, 700, 751, 753, 760, 767, 772, 983, 1054, 1072, 1109, 1183, 1223, 1224, 1236, 1246, 1247, 1287, 1300], "6370997": [117, 120, 669, 672], "rho": [117, 669], "arctan2": [117, 669, 1291], "snyder": [117, 120, 669, 672], "manual": [117, 120, 669, 672, 1252], "geolog": [117, 120, 669, 672], "survei": [117, 120, 669, 672], "profession": [117, 120, 669, 672], "paper": [117, 120, 498, 669, 672, 1074, 1293, 1303], "1395": [117, 120, 669, 672, 1252], "1987": [117, 120, 669, 672], "pp": [117, 120, 445, 461, 469, 478, 491, 669, 672, 1020, 1037, 1045, 1054, 1067], "191": [117, 120, 669, 672], "202": [117, 120, 669, 672], "find": [118, 134, 141, 150, 151, 440, 441, 442, 510, 527, 670, 715, 722, 734, 735, 1007, 1015, 1016, 1017, 1086, 1103, 1218, 1252, 1260, 1293, 1305], "arcco": [120, 672], "no_altitude_transform": [121, 673], "wgs84": [121, 232, 298, 335, 372, 394, 673, 815, 881, 918, 955, 979, 1014], "ch1903": [121, 673], "lv03": [121, 673], "formula": [121, 445, 673, 1020], "formeln": [121, 673], "und": [121, 673], "konstanten": [121, 673], "f\u00fcr": [121, 673], "die": [121, 673], "berechnung": [121, 673], "der": [121, 673], "schweizerischen": [121, 673], "schiefachsigen": [121, 673], "zylinderprojekt": [121, 673], "zwischen": [121, 673], "koordinatensystemen": [121, 673], "chapter": [121, 673], "n\u00e4herungsl\u00f6sungen": [121, 673], "bundesamt": [121, 673], "landestopografi": [121, 673], "swisstopo": [121, 673], "admin": [121, 673, 1303], "ch": [121, 673, 1290, 1291], "oktob": [121, 673], "2008": [121, 525, 673, 1101, 1260], "input": [121, 146, 147, 394, 462, 470, 471, 481, 497, 511, 517, 518, 523, 525, 673, 729, 730, 979, 1018, 1038, 1046, 1047, 1057, 1073, 1087, 1093, 1094, 1099, 1101, 1204, 1227, 1289, 1300], "46": [121, 232, 298, 335, 372, 673, 815, 881, 918, 955, 1287], "38": [121, 673, 1260], "87": [121, 440, 673, 1015], "43": [121, 673], "49": [121, 673], "79": [121, 673], "650": [121, 673, 1252], "60": [121, 673, 1007, 1254, 1259, 1263, 1265, 1270, 1295, 1297, 1299], "result": [121, 131, 132, 133, 134, 135, 169, 171, 178, 185, 190, 218, 225, 228, 229, 230, 231, 232, 249, 250, 253, 263, 265, 267, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 376, 393, 397, 442, 519, 520, 525, 526, 528, 533, 534, 673, 679, 681, 688, 695, 700, 712, 713, 714, 715, 716, 732, 751, 753, 760, 767, 772, 801, 808, 811, 812, 813, 814, 815, 832, 833, 836, 846, 848, 850, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955, 961, 978, 983, 1017, 1023, 1095, 1096, 1101, 1102, 1104, 1109, 1110, 1206, 1217, 1243, 1260, 1290, 1293, 1299, 1303], "chy": [121, 673], "699": [121, 673], "999": [121, 133, 397, 673, 714, 983, 1252], "76": [121, 673], "700000": [121, 673], "chx": [121, 673], "99": [121, 452, 527, 673, 1028, 1103, 1268], "97": [121, 139, 140, 673, 720, 721, 1263, 1265, 1269, 1271, 1283, 1287, 1289, 1295], "100000": [121, 673, 1299], "chh": [121, 673], "600": [121, 673, 1295], "05": [121, 133, 441, 442, 531, 673, 714, 1016, 1017, 1107, 1283, 1285, 1287], "z_offset": [122, 703], "debug": [122, 133, 146, 147, 235, 254, 390, 521, 535, 703, 714, 729, 730, 818, 837, 975, 1097, 1252], "doc": [122, 123, 124, 138, 139, 142, 147, 150, 151, 152, 703, 704, 705, 719, 720, 724, 730, 734, 735, 736, 1252, 1254, 1259, 1260, 1293, 1302, 1303, 1305], "15": [122, 511, 521, 703, 1087, 1097, 1227, 1254, 1255, 1256, 1260, 1265, 1266, 1268, 1269, 1271, 1277, 1278, 1279, 1280, 1283, 1284, 1285, 1287, 1291, 1297, 1301], "fzl": [122, 123, 124, 138, 139, 142, 146, 147, 150, 151, 152, 703, 704, 705, 719, 720, 724, 729, 730, 734, 735, 736], "4000": [122, 146, 147, 703, 729, 730, 1299], "rhv_min": [122, 703], "ncp_min": [122, 703], "a_coef": [122, 124, 703, 705], "06": [122, 703], "beta": [122, 124, 500, 501, 502, 503, 504, 505, 703, 705, 723, 732, 1076, 1077, 1078, 1079, 1080, 1081], "refl_field": [122, 123, 124, 125, 129, 131, 132, 137, 138, 139, 140, 146, 147, 150, 151, 152, 154, 155, 193, 196, 197, 442, 446, 472, 473, 479, 480, 493, 496, 497, 498, 501, 503, 504, 505, 506, 518, 519, 525, 530, 703, 704, 705, 706, 710, 712, 713, 718, 719, 720, 721, 728, 729, 730, 734, 735, 736, 738, 739, 775, 778, 779, 1017, 1021, 1048, 1049, 1055, 1056, 1069, 1072, 1073, 1074, 1077, 1079, 1080, 1081, 1082, 1094, 1095, 1101, 1106, 1254, 1289, 1290], "ncp_field": [122, 146, 147, 197, 703, 728, 729, 730, 779, 1254], "rhv_field": [122, 146, 147, 193, 196, 197, 497, 518, 525, 703, 728, 729, 730, 775, 778, 779, 1073, 1094, 1101, 1254, 1290], "spec_at_field": [122, 123, 124, 703, 704, 705], "corr_refl_field": [122, 123, 124, 131, 132, 703, 704, 705, 712, 713], "attenu": [122, 123, 124, 143, 144, 145, 159, 445, 473, 479, 500, 501, 504, 512, 703, 704, 705, 725, 726, 727, 743, 1020, 1049, 1055, 1076, 1077, 1080, 1088, 1252, 1253, 1256, 1257, 1290, 1293], "phi": [122, 124, 146, 703, 705, 729, 1252, 1254], "must": [122, 123, 124, 133, 329, 379, 383, 384, 389, 395, 445, 498, 511, 516, 521, 522, 523, 526, 703, 704, 705, 714, 912, 964, 968, 969, 974, 980, 1020, 1074, 1087, 1092, 1097, 1098, 1099, 1102, 1244, 1289, 1293, 1302, 1303], "copol_coeff": [122, 703, 1189, 1254, 1287, 1288, 1295], "norm_coherent_pow": [122, 703, 1189, 1254, 1295], "proc_dp_phase_shift": [122, 703, 1254, 1287, 1295], "reflectivity_horizont": [122, 133, 703, 714, 1189, 1254, 1263, 1268, 1270, 1274, 1276, 1277, 1278, 1282, 1284, 1287, 1288, 1289, 1295, 1296], "supress": [122, 235, 245, 246, 254, 329, 366, 703, 818, 828, 829, 837, 912, 949, 1252], "freez": [122, 123, 124, 138, 139, 142, 150, 151, 152, 461, 478, 498, 525, 526, 527, 703, 704, 705, 719, 720, 724, 734, 735, 736, 1037, 1054, 1074, 1101, 1102, 1103], "layer": [122, 123, 124, 125, 126, 131, 132, 138, 139, 142, 150, 151, 152, 195, 199, 394, 452, 498, 501, 515, 521, 525, 526, 527, 528, 703, 704, 705, 706, 707, 712, 713, 719, 720, 724, 734, 735, 736, 777, 781, 979, 1028, 1074, 1077, 1091, 1097, 1101, 1102, 1103, 1104], "combin": [122, 123, 124, 703, 704, 705, 1237, 1238, 1303], "normal": [122, 125, 131, 132, 146, 147, 197, 218, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 424, 518, 703, 706, 712, 713, 728, 729, 730, 779, 801, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 875, 879, 880, 881, 901, 911, 912, 916, 917, 918, 938, 948, 949, 953, 954, 955, 1094, 1239, 1279], "coher": [122, 146, 147, 197, 703, 728, 729, 730, 779], "zdr_field": [122, 123, 124, 128, 139, 140, 143, 144, 150, 151, 152, 193, 196, 455, 497, 518, 525, 703, 704, 705, 709, 720, 721, 725, 726, 734, 735, 736, 775, 778, 1031, 1073, 1094, 1101, 1290], "spec_at": [122, 123, 124, 703, 704, 705, 1254, 1290], "cor_z": [122, 123, 124, 703, 704, 705, 1254, 1290], "gu": [122, 124, 703, 705], "et": [122, 124, 128, 144, 471, 496, 518, 521, 525, 526, 530, 703, 705, 709, 726, 1047, 1072, 1094, 1097, 1101, 1102, 1106, 1289], "al": [122, 124, 128, 144, 471, 496, 518, 521, 522, 525, 526, 530, 703, 705, 709, 726, 1047, 1072, 1094, 1097, 1098, 1101, 1102, 1106, 1289], "heavi": [122, 124, 703, 705, 1227, 1271, 1279], "rain": [122, 124, 129, 137, 138, 139, 150, 151, 152, 154, 155, 452, 461, 478, 500, 501, 502, 503, 506, 530, 703, 705, 710, 718, 719, 720, 734, 735, 736, 738, 739, 1028, 1037, 1054, 1076, 1077, 1078, 1079, 1082, 1106, 1252, 1271, 1279, 1289, 1290], "jamc": [122, 124, 523, 703, 705, 1099], "2011": [122, 124, 703, 705, 1287], "50": [122, 124, 140, 456, 469, 492, 494, 518, 525, 703, 705, 721, 1032, 1045, 1068, 1070, 1094, 1101, 1201, 1263, 1265, 1266, 1283, 1287, 1290, 1299, 1301], "39": [122, 124, 703, 705, 1287], "58": [122, 124, 703, 705, 1287], "pia_coef": [123, 704], "pida_coef": [123, 704], "temp_field": [123, 124, 131, 132, 138, 139, 140, 142, 150, 151, 152, 199, 497, 518, 525, 527, 704, 705, 712, 713, 719, 720, 721, 724, 734, 735, 736, 781, 1073, 1094, 1101, 1103, 1290], "iso0_field": [123, 124, 131, 132, 138, 139, 142, 150, 151, 152, 195, 497, 498, 518, 525, 526, 527, 704, 705, 712, 713, 719, 720, 724, 734, 735, 736, 777, 1073, 1074, 1094, 1101, 1102, 1103], "pia_field": [123, 124, 704, 705], "spec_diff_at_field": [123, 124, 704, 705], "pida_field": [123, 124, 704, 705], "corr_zdr_field": [123, 124, 704, 705], "temp_ref": [123, 124, 131, 132, 138, 139, 142, 150, 151, 152, 497, 514, 518, 525, 527, 704, 705, 712, 713, 719, 720, 724, 734, 735, 736, 1073, 1090, 1094, 1101, 1103, 1290], "dependec": [123, 704], "comput": [123, 124, 125, 126, 128, 131, 132, 143, 144, 145, 149, 150, 151, 159, 196, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 511, 514, 518, 519, 520, 521, 522, 523, 525, 527, 529, 533, 704, 705, 706, 707, 709, 712, 713, 725, 726, 727, 732, 733, 734, 735, 743, 778, 1014, 1020, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1087, 1090, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1103, 1105, 1109, 1197, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1207, 1208, 1217, 1226, 1230, 1231, 1233, 1235, 1236, 1240, 1241, 1249, 1252, 1290, 1291, 1293], "depend": [123, 124, 163, 442, 501, 511, 525, 536, 704, 705, 1017, 1077, 1087, 1101, 1233, 1252, 1303], "refl": [123, 124, 704, 705, 1277], "integr": [123, 124, 149, 159, 704, 705, 733, 743], "pida_coeff": [123, 704], "0c": [123, 124, 142, 704, 705, 724], "isotherm": [123, 124, 142, 704, 705, 724], "height_over_iso0": [123, 124, 131, 132, 138, 139, 142, 150, 151, 152, 497, 518, 525, 527, 704, 705, 712, 713, 719, 720, 724, 734, 735, 736, 1073, 1094, 1101, 1103, 1300], "fixed_fzl": [123, 124, 139, 142, 150, 151, 152, 704, 705, 720, 724, 734, 735, 736], "pia_dict": [123, 124, 704, 705], "spec_diff_at": [123, 124, 704, 705, 1290], "pida_dict": [123, 124, 704, 705], "cor_zdr": [123, 124, 704, 705, 1290], "smooth_window_len": [124, 705], "smooth": [124, 141, 150, 151, 152, 153, 154, 155, 467, 483, 486, 487, 519, 520, 521, 705, 722, 734, 735, 736, 737, 738, 739, 1043, 1059, 1062, 1063, 1095, 1096, 1097, 1219, 1245, 1279, 1280, 1299], "window": [124, 133, 146, 147, 150, 151, 152, 153, 154, 155, 196, 447, 462, 467, 481, 483, 486, 487, 519, 520, 523, 525, 533, 705, 714, 729, 730, 734, 735, 736, 737, 738, 739, 778, 1022, 1038, 1043, 1057, 1059, 1062, 1063, 1095, 1096, 1099, 1101, 1109, 1201, 1222, 1226, 1233, 1234, 1243, 1249, 1252, 1293, 1303], "expon": [124, 146, 147, 500, 501, 502, 503, 504, 505, 705, 729, 730, 1076, 1077, 1078, 1079, 1080, 1081], "law": [124, 500, 501, 502, 503, 504, 505, 705, 1076, 1077, 1078, 1079, 1080, 1081], "ryzhkov": [124, 461, 469, 500, 525, 528, 705, 1037, 1045, 1076, 1101, 1104], "potenti": [124, 143, 500, 525, 705, 725, 1076, 1101], "rainfal": [124, 500, 501, 502, 503, 504, 505, 506, 521, 523, 705, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1097, 1099], "mitig": [124, 500, 705, 1076], "partial": [124, 500, 705, 1076, 1252], "beam": [124, 125, 149, 439, 441, 442, 452, 500, 511, 705, 706, 733, 1013, 1016, 1017, 1028, 1076, 1087], "blockag": [124, 500, 705, 1076], "network": [124, 134, 388, 500, 705, 715, 973, 1076], "jaot": [124, 128, 705, 709], "2014": [124, 500, 522, 528, 705, 1076, 1098, 1104, 1293], "31": [124, 154, 386, 500, 519, 705, 738, 971, 1076, 1095, 1251, 1260, 1287], "599": [124, 500, 705, 1076], "619": [124, 500, 705, 1076, 1252, 1289, 1292], "ml_top": [125, 126, 452, 515, 706, 707, 1028, 1091], "3000": [125, 126, 452, 514, 530, 706, 707, 1028, 1090, 1106, 1295, 1299], "ml_thick": [125, 126, 452, 706, 707, 1028], "200": [125, 126, 131, 132, 445, 452, 527, 706, 707, 712, 713, 1020, 1028, 1103, 1217, 1235, 1236, 1303], "val_ml": [125, 126, 706, 707], "val_dr": [125, 126, 706, 707], "h_max": [125, 126, 131, 132, 452, 527, 706, 707, 712, 713, 1028, 1103], "6000": [125, 126, 131, 132, 452, 525, 527, 706, 707, 712, 713, 1028, 1101, 1103, 1295, 1299], "h_re": [125, 126, 131, 132, 452, 527, 706, 707, 712, 713, 1028, 1103], "max_weight": [125, 131, 132, 706, 712, 713], "vpr_theo_dict": [125, 706], "normalized_reflect": [125, 706], "appar": [125, 452, 706, 1028], "vpr": [125, 131, 132, 706, 712, 713, 1293], "melt": [125, 126, 131, 132, 138, 139, 150, 151, 152, 195, 199, 452, 498, 501, 515, 521, 525, 526, 527, 528, 706, 707, 712, 713, 719, 720, 734, 735, 736, 777, 781, 1028, 1074, 1077, 1091, 1097, 1101, 1102, 1103, 1104, 1227, 1271, 1289, 1290], "top": [125, 126, 131, 132, 148, 159, 254, 442, 452, 498, 507, 515, 524, 525, 526, 527, 706, 707, 712, 713, 731, 743, 837, 1017, 1028, 1074, 1083, 1091, 1100, 1101, 1102, 1103, 1252, 1268, 1287, 1299, 1303], "asl": [125, 126, 452, 706, 707, 1028], "thick": [125, 126, 131, 132, 138, 139, 142, 150, 151, 152, 195, 199, 452, 527, 706, 707, 712, 713, 719, 720, 724, 734, 735, 736, 777, 781, 1028, 1103], "peak": [125, 126, 131, 132, 452, 525, 527, 706, 707, 712, 713, 1028, 1101, 1103, 1216, 1297], "decreas": [125, 126, 131, 132, 497, 514, 518, 706, 707, 712, 713, 1073, 1090, 1094], "ratio": [125, 126, 131, 132, 140, 196, 197, 198, 233, 299, 336, 373, 446, 454, 455, 511, 706, 707, 712, 713, 721, 728, 778, 779, 780, 816, 882, 919, 956, 1021, 1030, 1031, 1087, 1301], "theoret": [125, 131, 132, 159, 440, 452, 531, 706, 712, 713, 743, 1015, 1028, 1107], "multipli": [125, 452, 462, 496, 527, 706, 958, 1028, 1038, 1072, 1103, 1289, 1295], "radar_out": [125, 452, 706, 1028], "conta": [125, 126, 452, 498, 525, 526, 527, 537, 706, 707, 1028, 1074, 1101, 1102, 1103], "ideal": [126, 707], "val_theo_dict": [126, 707], "bottom": [126, 327, 364, 452, 498, 515, 525, 526, 527, 707, 910, 947, 1028, 1074, 1091, 1101, 1102, 1103, 1268, 1270], "bia": [127, 132, 139, 140, 150, 151, 160, 708, 713, 720, 721, 732, 734, 735, 744, 1252], "magnitud": [127, 521, 708, 1097, 1291, 1301], "corrected_field": [127, 130, 708, 711], "urhohv_field": [128, 709], "snr_field": [128, 140, 198, 446, 480, 709, 721, 780, 1021, 1056], "nh_field": [128, 709], "nv_field": [128, 709], "rhohv_field": [128, 138, 139, 140, 150, 151, 152, 452, 455, 463, 498, 709, 719, 720, 721, 734, 735, 736, 1028, 1031, 1039, 1074], "eq": [128, 709, 1277], "2006": [128, 709, 1260], "subtract": [128, 451, 460, 467, 468, 475, 476, 477, 483, 486, 487, 488, 496, 709, 1027, 1036, 1043, 1044, 1051, 1052, 1053, 1059, 1062, 1063, 1064, 1072], "uncorrect": [128, 709], "snr": [128, 140, 198, 446, 480, 709, 721, 780, 1021, 1056, 1224, 1236, 1252], "channel": [128, 160, 394, 458, 464, 477, 489, 490, 495, 709, 744, 979, 1034, 1040, 1053, 1065, 1066, 1071, 1252], "meteo": [128, 131, 132, 525, 527, 709, 712, 713, 1101, 1103], "franc": [128, 131, 132, 527, 709, 712, 713, 1103], "23": [128, 709], "1340": [128, 709], "1356": [128, 709, 1252], "ind_rmin": [129, 137, 138, 139, 140, 154, 155, 470, 710, 718, 719, 720, 721, 738, 739, 1046], "10": [129, 136, 137, 138, 139, 140, 144, 146, 147, 154, 155, 156, 159, 165, 198, 200, 232, 298, 335, 372, 440, 442, 445, 456, 461, 471, 491, 496, 498, 508, 518, 522, 523, 525, 527, 675, 710, 717, 718, 719, 720, 721, 726, 729, 730, 738, 739, 740, 743, 747, 780, 782, 815, 881, 918, 955, 1015, 1017, 1020, 1032, 1037, 1047, 1067, 1072, 1074, 1084, 1094, 1098, 1099, 1101, 1103, 1217, 1227, 1255, 1260, 1263, 1264, 1268, 1271, 1272, 1274, 1276, 1279, 1280, 1283, 1289, 1291, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "ind_rmax": [129, 137, 138, 139, 140, 154, 155, 710, 718, 719, 720, 721, 738, 739], "500": [129, 137, 138, 139, 140, 154, 155, 441, 442, 525, 710, 718, 719, 720, 721, 738, 739, 1007, 1016, 1017, 1101, 1263, 1269, 1273], "min_rcon": [129, 137, 150, 151, 154, 155, 710, 718, 734, 735, 738, 739], "11": [129, 137, 153, 154, 155, 232, 298, 335, 372, 453, 496, 519, 520, 710, 718, 737, 738, 739, 815, 881, 918, 955, 1029, 1072, 1095, 1096, 1243, 1254, 1256, 1259, 1260, 1261, 1283, 1285, 1287, 1300, 1301], "zmin": [129, 137, 138, 139, 140, 154, 155, 710, 718, 719, 720, 721, 738, 739], "20": [129, 131, 132, 137, 138, 139, 143, 150, 151, 152, 154, 155, 193, 196, 197, 452, 525, 527, 528, 710, 712, 713, 718, 719, 720, 725, 728, 734, 735, 736, 738, 739, 775, 778, 779, 1028, 1101, 1103, 1104, 1259, 1260, 1263, 1269, 1270, 1271, 1274, 1276, 1277, 1278, 1279, 1280, 1282, 1288, 1289, 1295, 1299, 1301], "zmax": [129, 137, 138, 139, 140, 154, 155, 710, 718, 719, 720, 721, 738, 739], "40": [129, 135, 137, 138, 154, 155, 260, 456, 519, 710, 716, 718, 719, 738, 739, 843, 1032, 1095, 1222, 1255, 1265, 1270, 1274, 1276, 1279, 1289], "psidp_field": [129, 154, 155, 521, 522, 523, 710, 738, 739, 1097, 1098, 1099, 1290], "public": [129, 137, 710, 718, 1251, 1252, 1295, 1296, 1297, 1299, 1300, 1301], "min": [129, 131, 132, 137, 138, 139, 140, 143, 154, 155, 193, 220, 287, 320, 357, 470, 525, 710, 712, 713, 718, 719, 720, 721, 725, 738, 739, 775, 803, 870, 903, 940, 1046, 1101, 1229, 1291], "max": [129, 131, 132, 137, 138, 139, 140, 150, 151, 154, 155, 193, 220, 287, 320, 357, 394, 470, 498, 525, 710, 712, 713, 718, 719, 720, 721, 734, 735, 738, 739, 775, 803, 870, 903, 940, 979, 1046, 1074, 1101, 1229, 1252, 1259, 1263, 1268, 1269, 1274, 1282, 1291], "look": [129, 137, 138, 139, 140, 143, 150, 151, 152, 154, 155, 157, 158, 469, 470, 525, 528, 710, 718, 719, 720, 721, 725, 734, 735, 736, 738, 739, 741, 742, 1023, 1045, 1046, 1101, 1104, 1218, 1233, 1235, 1236, 1252, 1259, 1260, 1263, 1270, 1293, 1295, 1297, 1299, 1301], "continu": [129, 133, 135, 137, 154, 155, 526, 710, 714, 716, 718, 738, 739, 1102, 1252], "consecut": [129, 137, 150, 151, 154, 155, 525, 710, 718, 734, 735, 738, 739, 1101, 1217], "cell": [129, 137, 154, 155, 710, 718, 738, 739, 1252, 1279], "phidp_dict": [129, 154, 155, 457, 458, 710, 738, 739, 1033, 1034], "vis_field": [130, 200, 711, 782], "nvalid_min": [131, 132, 461, 469, 478, 491, 527, 712, 713, 1037, 1045, 1054, 1067, 1103, 1204, 1206], "angle_min": [131, 132, 712, 713], "angle_max": [131, 132, 712, 713], "ml_thickness_min": [131, 132, 527, 712, 713, 1103], "ml_thickness_max": [131, 132, 527, 712, 713, 1103], "800": [131, 132, 144, 471, 712, 713, 726, 1047, 1217, 1252], "ml_thickness_step": [131, 132, 527, 712, 713, 1103], "iso0_max": [131, 132, 527, 712, 713, 1103], "5000": [131, 132, 712, 713, 1291, 1299], "ml_top_diff_max": [131, 132, 527, 712, 713, 1103], "ml_top_step": [131, 132, 527, 712, 713, 1103], "ml_peak_min": [131, 132, 712, 713], "ml_peak_max": [131, 132, 712, 713], "ml_peak_step": [131, 132, 712, 713], "dr_min": [131, 132, 712, 713], "dr_max": [131, 132, 712, 713], "dr_step": [131, 132, 712, 713], "dr_default": [131, 132, 712, 713], "dr_alt": [131, 132, 712, 713], "h_corr_max": [131, 132, 712, 713], "15000": [131, 132, 461, 491, 712, 713, 1037, 1067, 1295, 1299], "rmin_ob": [131, 132, 712, 713], "rmax_ob": [131, 132, 712, 713], "150000": [131, 132, 712, 713], "filter_param": [131, 712], "weight_mem": [131, 132, 712, 713], "75": [131, 132, 165, 233, 299, 336, 373, 394, 456, 496, 518, 525, 529, 675, 712, 713, 747, 816, 882, 919, 956, 979, 1018, 1032, 1072, 1094, 1101, 1105, 1263, 1279, 1289, 1295, 1299, 1300], "vpr_theo_dict_mem": [131, 132, 712, 713], "radar_mem_list": [131, 132, 712, 713], "lin_refl_field": [131, 132, 712, 713], "norm_refl_field": [131, 132, 712, 713], "corr_field": [131, 132, 712, 713], "averag": [131, 132, 134, 150, 151, 461, 465, 469, 478, 484, 491, 496, 511, 527, 533, 712, 713, 715, 734, 735, 958, 1037, 1041, 1045, 1054, 1060, 1067, 1072, 1087, 1103, 1109, 1204, 1206, 1216, 1230, 1289, 1291], "explor": [131, 132, 461, 527, 712, 713, 1037, 1103], "iso": [131, 132, 514, 527, 529, 712, 713, 1090, 1103, 1105], "proper": [131, 132, 712, 713, 1302], "could": [131, 132, 452, 712, 713, 1028, 1208, 1260, 1303], "abl": [131, 132, 139, 140, 712, 713, 720, 721, 1293, 1302], "dr": [131, 132, 511, 521, 712, 713, 1087, 1097], "masl": [131, 132, 515, 527, 712, 713, 1091, 1103], "weight": [131, 132, 150, 441, 442, 456, 478, 518, 521, 527, 533, 712, 713, 734, 1016, 1017, 1032, 1054, 1094, 1097, 1103, 1109, 1252, 1299], "compar": [131, 132, 133, 169, 456, 498, 527, 679, 712, 713, 714, 751, 1023, 1032, 1074, 1103, 1201, 1217, 1257, 1262, 1266, 1268, 1289, 1303], "previou": [131, 132, 133, 329, 366, 525, 712, 713, 714, 912, 949, 1101, 1252], "shape": [131, 171, 185, 384, 524, 681, 695, 712, 753, 767, 969, 1100, 1239, 1252, 1289, 1295, 1299, 1300, 1301, 1303], "past": [131, 132, 527, 712, 713, 1103, 1303], "refl_corr_dict": [131, 132, 712, 713], "corr_field_dict": [131, 132, 712, 713], "vpr_theo_dict_filt": [131, 132, 712, 713], "radar_rhi": [131, 132, 712, 713, 1204, 1209], "correct_iso0": [132, 713], "spatialis": [132, 713], "last_radar": [133, 714], "sonde_profil": [133, 714], "filt": [133, 714], "rsl_badval": [133, 714], "131072": [133, 714], "keep_origin": [133, 134, 135, 714, 715, 716], "set_limit": [133, 134, 135, 714, 715, 716, 1271, 1272, 1273, 1275, 1277, 1278, 1279, 1280, 1282], "vel_field": [133, 134, 135, 193, 447, 509, 534, 714, 715, 716, 775, 1022, 1085, 1110, 1297], "corr_vel_field": [133, 134, 135, 714, 715, 716], "last_vel_field": [133, 714], "max_shear": [133, 714], "sign": [133, 508, 533, 534, 714, 1084, 1109, 1110, 1252, 1279, 1280], "dealia": [133, 134, 135, 714, 715, 716, 1252, 1253, 1256, 1257, 1297], "4dd": [133, 714, 1252], "univers": [133, 391, 506, 714, 976, 1082, 1252, 1293], "washington": [133, 714], "sound": [133, 508, 533, 534, 714, 1084, 1109, 1110, 1252], "For": [133, 248, 251, 252, 264, 266, 384, 394, 441, 519, 520, 521, 714, 831, 834, 835, 847, 849, 969, 979, 1016, 1095, 1096, 1097, 1252, 1259, 1263, 1290, 1300, 1301, 1303, 1305], "best": [133, 714], "argument": [133, 134, 135, 218, 225, 229, 230, 231, 232, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 285, 292, 296, 297, 298, 318, 325, 326, 327, 328, 329, 330, 333, 334, 335, 355, 362, 363, 364, 365, 366, 367, 370, 371, 372, 386, 388, 396, 397, 440, 442, 522, 523, 714, 715, 716, 801, 808, 812, 813, 814, 815, 828, 829, 830, 831, 832, 833, 834, 835, 836, 846, 847, 848, 849, 850, 868, 875, 879, 880, 881, 901, 908, 909, 910, 911, 912, 913, 916, 917, 918, 938, 945, 946, 947, 948, 949, 950, 953, 954, 955, 971, 973, 981, 983, 1015, 1017, 1098, 1099, 1252, 1303], "_fourdd_interfac": [133, 714], "fourdd_dealia": [133, 714], "fine": [133, 714], "tune": [133, 714, 1289], "behavior": [133, 329, 384, 397, 714, 912, 969, 983, 1252], "fourdd": [133, 714], "dealias": [133, 134, 135, 714, 715, 716, 1252, 1255, 1259, 1293, 1294, 1303], "mean_doppler_veloc": [133, 714, 1282, 1287, 1295], "successfulli": [133, 714], "greatli": [133, 714], "improv": [133, 522, 523, 714, 1098, 1099, 1227, 1271], "final": [133, 456, 499, 522, 523, 714, 1032, 1075, 1098, 1099, 1289], "horizontalwindprofil": [133, 378, 379, 534, 714, 963, 964, 1110, 1244, 1252, 1303], "sond": [133, 134, 378, 379, 510, 714, 715, 963, 964, 1086, 1252, 1255], "moment_based_gate_filt": [133, 134, 135, 442, 714, 715, 716, 1017], "bergen": [133, 714], "alber": [133, 714], "bad": [133, 498, 521, 522, 523, 530, 714, 1074, 1097, 1098, 1099, 1106], "rsl": [133, 377, 389, 390, 714, 962, 974, 975, 1252, 1293, 1302], "procedur": [133, 134, 135, 714, 715, 716], "fail": [133, 134, 135, 384, 394, 714, 715, 716, 969, 979, 1252, 1303], "element": [133, 134, 135, 136, 141, 165, 396, 441, 442, 524, 675, 714, 715, 716, 717, 722, 747, 981, 1016, 1017, 1100, 1230, 1231, 1240, 1241], "maxshear": [133, 714], "shear": [133, 507, 714, 1083], "incorpor": [133, 714, 1289], "toward": [133, 508, 533, 534, 714, 1084, 1109, 1110], "neg": [133, 218, 229, 285, 296, 318, 333, 355, 370, 508, 521, 533, 534, 714, 801, 812, 868, 879, 901, 916, 938, 953, 1084, 1097, 1109, 1110, 1252, 1268], "compthresh": [133, 714], "fraction": [133, 714, 1289, 1301], "threshold": [133, 136, 141, 145, 193, 195, 196, 197, 198, 199, 200, 456, 496, 498, 499, 501, 504, 505, 508, 714, 717, 722, 727, 728, 775, 777, 778, 779, 780, 781, 782, 958, 1032, 1072, 1074, 1075, 1077, 1080, 1081, 1084, 1216, 1217, 1222, 1223, 1224, 1227, 1233, 1234, 1235, 1236, 1289, 1297, 1300], "mark": [133, 165, 169, 178, 190, 675, 679, 688, 700, 714, 747, 751, 760, 772], "begin": [133, 134, 135, 146, 147, 165, 203, 205, 225, 229, 270, 272, 292, 296, 303, 305, 328, 333, 340, 342, 365, 370, 384, 385, 388, 390, 675, 714, 715, 716, 729, 730, 747, 786, 788, 808, 812, 853, 855, 875, 879, 886, 888, 911, 916, 923, 925, 948, 953, 969, 970, 973, 975, 1252], "unfold": [133, 134, 146, 147, 521, 714, 715, 729, 730, 1097], "compthresh2": [133, 714], "thresh": [133, 501, 504, 505, 714, 1077, 1080, 1081], "adjac": [133, 714], "count": [133, 714, 1263, 1297, 1301], "against": [133, 169, 679, 714, 751, 1279], "question": [133, 442, 714, 959, 1017, 1293], "ckval": [133, 714], "absolut": [133, 229, 296, 333, 370, 714, 812, 879, 916, 953, 1201, 1237], "below": [133, 136, 142, 146, 147, 169, 183, 193, 195, 196, 197, 198, 199, 200, 218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 441, 442, 496, 501, 504, 505, 521, 527, 679, 693, 714, 717, 724, 728, 729, 730, 751, 765, 775, 777, 778, 779, 780, 781, 782, 801, 808, 811, 812, 813, 814, 815, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955, 1016, 1017, 1018, 1072, 1077, 1080, 1081, 1097, 1103, 1216, 1268, 1289, 1295, 1297, 1300, 1304], "stdthresh": [133, 714], "deviat": [133, 143, 144, 160, 470, 508, 714, 725, 726, 732, 744, 1046, 1084, 1199, 1200, 1226, 1231, 1297], "portion": [133, 714, 1299], "epsilon": [133, 714], "miss": [133, 498, 521, 522, 523, 530, 714, 1074, 1097, 1098, 1099, 1106, 1252, 1260], "maxcount": [133, 714], "allow": [133, 136, 141, 217, 284, 317, 354, 456, 498, 508, 525, 714, 717, 722, 800, 867, 900, 937, 1007, 1018, 1032, 1074, 1084, 1101, 1252, 1263, 1301, 1305], "pass2": [133, 714], "retain": [133, 134, 135, 193, 195, 196, 197, 198, 199, 200, 714, 715, 716, 728, 775, 777, 778, 779, 780, 781, 782, 1250], "rm": [133, 714], "left": [133, 327, 364, 444, 515, 714, 910, 947, 1091, 1217, 1268, 1270], "proxim": [133, 714], "side": [133, 714], "doubl": [133, 394, 714, 979, 1289], "captur": [133, 714], "suffici": [133, 498, 714, 1074], "good": [133, 134, 714, 715], "mingood": [133, 714], "ba_mincount": [133, 714], "neighbor": [133, 386, 442, 714, 971, 1017, 1252, 1299], "ba_edgecount": [133, 714], "usuccess": [133, 714], "radialvelvolum": [133, 714], "lastvelvolum": [133, 714], "unfoldedvolum": [133, 714], "sondvolum": [133, 714], "vr_corr": [133, 714], "due": [133, 149, 473, 479, 714, 733, 1023, 1049, 1055, 1237, 1252, 1263, 1297, 1302, 1305], "call": [133, 136, 164, 217, 218, 220, 225, 229, 230, 231, 232, 245, 246, 284, 285, 287, 292, 296, 297, 298, 317, 318, 320, 328, 329, 333, 334, 335, 354, 355, 357, 365, 366, 370, 371, 372, 389, 394, 397, 410, 714, 717, 800, 801, 803, 808, 812, 813, 814, 815, 828, 829, 867, 868, 870, 875, 879, 880, 881, 900, 901, 903, 911, 912, 916, 917, 918, 937, 938, 940, 948, 949, 953, 954, 955, 974, 979, 983, 1221, 1297, 1301, 1303, 1305], "long": [133, 154, 498, 519, 714, 738, 1074, 1095, 1252, 1296, 1301], "n": [133, 153, 207, 232, 274, 298, 307, 335, 344, 372, 511, 518, 714, 737, 790, 815, 857, 881, 890, 918, 927, 955, 1087, 1094, 1201, 1222, 1259, 1263, 1271, 1282, 1284, 1287, 1289, 1293, 1303, 1305], "jame": [133, 714], "houz": [133, 496, 530, 714, 958, 1072, 1106, 1289], "jr": [133, 496, 530, 714, 1072, 1106, 1289], "four": [133, 386, 387, 389, 714, 971, 972, 974], "dealis": [133, 714], "scheme": [133, 440, 496, 521, 714, 958, 1015, 1072, 1097, 1289], "2001": [133, 714], "18": [133, 451, 714, 1027, 1269, 1280], "1674": [133, 714], "ref_vel_field": [134, 715], "interval_split": [134, 715], "interval_limit": [134, 715], "skip_between_rai": [134, 715], "100": [134, 136, 197, 221, 226, 232, 288, 293, 298, 321, 335, 358, 372, 396, 456, 499, 511, 527, 534, 715, 717, 728, 779, 804, 809, 815, 871, 876, 881, 904, 918, 941, 955, 981, 1032, 1075, 1087, 1103, 1110, 1265, 1269, 1279, 1280, 1291], "skip_along_rai": [134, 715], "nyquist_vel": [134, 135, 715, 716, 1297], "check_nyquist_uniform": [134, 135, 447, 715, 716, 1022], "rays_wrap_around": [134, 135, 715, 716], "region": [134, 147, 260, 329, 366, 715, 730, 843, 912, 949, 1023, 1217, 1222, 1227, 1229, 1233, 1234, 1252, 1253, 1256, 1257, 1259, 1271, 1289, 1300, 1303], "similar": [134, 456, 715, 1032, 1263, 1299], "merg": [134, 169, 171, 178, 185, 190, 379, 679, 681, 688, 695, 700, 715, 751, 753, 760, 767, 772, 964, 1303], "pair": [134, 386, 397, 432, 715, 971, 983, 991, 996, 1002, 1295], "accomplish": [134, 390, 715, 975], "problem": [134, 146, 147, 301, 338, 442, 715, 729, 730, 884, 921, 1017, 1260], "reduct": [134, 715], "anchor": [134, 715], "onc": [134, 715, 1289, 1302, 1305], "complet": [134, 715, 1252], "simul": [134, 511, 715, 1087, 1244, 1252, 1293], "simulated_vel_from_profil": [134, 715, 1303], "segment": [134, 150, 151, 325, 326, 362, 363, 715, 734, 735, 908, 909, 945, 946, 1252], "split": [134, 715, 1227], "interv": [134, 172, 177, 186, 191, 193, 197, 682, 687, 696, 701, 715, 728, 754, 759, 768, 773, 775, 779, 1201, 1230, 1231, 1252], "larger": [134, 511, 715, 1087, 1237, 1289], "longer": [134, 150, 715, 734, 1252, 1293, 1302], "better": [134, 221, 226, 288, 293, 321, 330, 358, 367, 511, 715, 804, 809, 871, 876, 904, 913, 941, 950, 1087, 1252, 1293, 1297], "seem": [134, 715], "compromis": [134, 715], "artifact": [134, 715, 1297, 1299], "free": [134, 715, 1293], "cover": [134, 715], "entir": [134, 135, 218, 225, 229, 230, 231, 249, 250, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 442, 715, 716, 801, 808, 812, 813, 814, 832, 833, 836, 846, 848, 850, 868, 875, 879, 880, 901, 911, 912, 916, 917, 938, 948, 949, 953, 954, 1017, 1246, 1247], "join": [134, 715, 1122, 1252], "gap": [134, 136, 141, 715, 717, 722, 1299], "connect": [134, 135, 715, 716], "disabl": [134, 135, 193, 195, 196, 197, 198, 199, 200, 715, 716, 728, 775, 777, 778, 779, 780, 781, 782], "across": [134, 715, 1252, 1288], "individu": [134, 135, 442, 715, 716, 1017], "ident": [134, 135, 383, 441, 715, 716, 968, 1016], "de": [134, 135, 364, 715, 716, 947, 1194, 1195], "alias": [134, 135, 715, 716, 1194, 1195, 1252, 1297, 1301], "corr_vel": [134, 135, 715, 716], "unwrap_unit": [135, 716], "skip_check": [135, 716, 1252], "multi": [135, 533, 716, 1109, 1252], "unwrap": [135, 146, 147, 716, 729, 730, 1252], "independ": [135, 716], "often": [135, 716, 1023], "give": [135, 150, 394, 716, 734, 979, 1217, 1293, 1297, 1300], "superior": [135, 716], "lower": [135, 245, 246, 247, 249, 250, 253, 263, 265, 267, 444, 498, 716, 828, 829, 830, 832, 833, 836, 846, 848, 850, 1074, 1264, 1265], "contamin": [135, 525, 530, 716, 1101, 1106, 1222], "clutter": [135, 454, 511, 519, 520, 716, 1030, 1087, 1095, 1096, 1217, 1223, 1235, 1297, 1300], "poor": [135, 716], "verif": [135, 716, 1252], "appropi": [135, 217, 284, 317, 354, 716, 800, 867, 900, 937, 1216], "offer": [135, 716], "extrem": [135, 251, 716, 834], "miguel": [135, 716], "arevallilo": [135, 716], "herraez": [135, 716], "david": [135, 716], "burton": [135, 716], "michael": [135, 716], "lalor": [135, 716], "munther": [135, 716], "gdeisat": [135, 716], "fast": [135, 716], "two": [135, 154, 250, 251, 396, 440, 490, 492, 496, 516, 517, 530, 716, 738, 833, 834, 981, 1015, 1066, 1068, 1072, 1092, 1093, 1106, 1205, 1207, 1237, 1238, 1240, 1241, 1252, 1257, 1262, 1266, 1267, 1269, 1284, 1285, 1296, 1299, 1303], "sort": [135, 548, 716, 1252], "reliabl": [135, 716], "noncontinu": [135, 716], "optic": [135, 511, 716, 1087], "vol": [135, 451, 461, 469, 478, 491, 716, 1027, 1037, 1045, 1054, 1067], "41": [135, 716, 1287, 1291, 1299], "2002": [135, 716], "7437": [135, 716], "abdul": [135, 716], "rahman": [135, 716], "osten": [135, 716], "gorecki": [135, 716], "l": [135, 146, 147, 222, 226, 227, 260, 289, 293, 294, 322, 331, 359, 366, 368, 716, 729, 730, 805, 809, 810, 843, 872, 876, 877, 905, 914, 942, 949, 951, 1227, 1271], "novak": [135, 716], "ed": [135, 716], "metrologi": [135, 716], "2005": [135, 496, 716, 1072, 1289], "32": [135, 478, 716, 1054, 1217, 1252, 1268, 1272, 1273, 1274, 1284, 1287, 1291, 1301], "intern": [135, 456, 498, 716, 1032, 1074], "societi": [135, 716, 1023], "photon": [135, 716], "label_dict": [136, 141, 717, 722], "delta": [136, 141, 522, 717, 722, 1098], "despeckl": [136, 717, 1252], "identifi": [136, 141, 496, 717, 722, 958, 1072, 1216, 1217, 1271, 1289, 1300], "small": [136, 141, 496, 498, 509, 530, 717, 722, 1072, 1074, 1085, 1106, 1235, 1252, 1263, 1279], "investig": [136, 141, 528, 717, 722, 1104, 1259], "well": [136, 193, 195, 196, 197, 198, 199, 200, 366, 386, 388, 442, 536, 717, 728, 775, 777, 778, 779, 780, 781, 782, 949, 971, 973, 1017, 1018, 1252, 1260, 1269, 1293, 1299, 1300], "variou": [136, 165, 193, 194, 195, 196, 197, 198, 199, 200, 675, 717, 728, 747, 775, 776, 777, 778, 779, 780, 781, 782, 1221, 1252, 1257, 1286, 1293], "scipi": [136, 141, 462, 481, 521, 717, 722, 1038, 1057, 1097, 1244, 1252, 1279, 1280, 1293, 1302, 1303, 1305], "core": [136, 141, 394, 442, 496, 522, 523, 717, 722, 958, 979, 1007, 1017, 1072, 1098, 1099, 1221, 1252, 1254, 1289, 1303], "queri": [136, 141, 442, 717, 722, 1017], "speckl": [136, 717, 1289], "find_object": [136, 717], "tupl": [136, 141, 218, 220, 223, 224, 225, 228, 229, 230, 231, 232, 234, 245, 249, 250, 253, 263, 265, 267, 285, 287, 290, 291, 292, 295, 296, 297, 298, 300, 318, 320, 323, 324, 328, 329, 332, 333, 334, 335, 337, 355, 357, 360, 361, 365, 366, 369, 370, 371, 372, 374, 432, 440, 442, 456, 516, 517, 717, 722, 801, 803, 806, 807, 808, 811, 812, 813, 814, 815, 817, 828, 832, 833, 836, 846, 848, 850, 868, 870, 873, 874, 875, 878, 879, 880, 881, 883, 901, 903, 906, 907, 911, 912, 915, 916, 917, 918, 920, 938, 940, 943, 944, 948, 949, 952, 953, 954, 955, 957, 991, 1002, 1015, 1017, 1018, 1032, 1092, 1093, 1184, 1239, 1252], "contigu": [136, 141, 717, 722], "perman": [136, 717], "altern": [137, 442, 718, 1017, 1023, 1289], "suitabl": [137, 138, 139, 140, 203, 239, 255, 270, 303, 340, 527, 718, 719, 720, 721, 786, 822, 838, 853, 886, 923, 1103], "phidp0_dict": [137, 718], "first_gates_dict": [137, 718], "700": [138, 139, 150, 151, 152, 527, 719, 720, 734, 735, 736, 1103, 1252], "quantil": [138, 456, 499, 719, 1032, 1075], "rhohv_rain_dict": [138, 719], "rhohvmin": [139, 140, 720, 721], "phidpmax": [139, 140, 720, 721], "elmax": [139, 140, 193, 525, 720, 721, 775, 1101, 1229], "undesir": [139, 140, 194, 195, 196, 197, 198, 199, 200, 442, 720, 721, 728, 776, 777, 778, 779, 780, 781, 782, 1017], "moder": [139, 720], "zdr_prec_dict": [139, 720], "compli": [139, 140, 720, 721, 1229], "30": [140, 144, 146, 147, 456, 469, 471, 478, 496, 525, 721, 726, 729, 730, 1032, 1045, 1047, 1054, 1072, 1101, 1217, 1261, 1263, 1270, 1274, 1276, 1289, 1297], "snrmin": [140, 721], "snrmax": [140, 721], "kept_valu": [140, 194, 721, 776], "kdpmax": [140, 721], "tempmin": [140, 721], "tempmax": [140, 721], "hydro_field": [140, 150, 151, 152, 501, 518, 526, 721, 734, 735, 736, 1077, 1094, 1102], "kdp_field": [140, 146, 147, 151, 497, 501, 502, 504, 505, 518, 519, 520, 521, 522, 523, 721, 729, 730, 735, 1073, 1077, 1078, 1080, 1081, 1094, 1095, 1096, 1097, 1098, 1099, 1290], "snow": [140, 452, 496, 501, 721, 1028, 1072, 1077, 1227, 1271, 1289, 1290], "hydrometeor": [140, 150, 151, 152, 194, 394, 456, 497, 499, 501, 518, 526, 531, 721, 734, 735, 736, 776, 979, 1032, 1073, 1075, 1077, 1094, 1102, 1107, 1252, 1257, 1286, 1292, 1297], "classif": [140, 150, 151, 152, 194, 496, 497, 501, 518, 526, 530, 721, 734, 735, 736, 776, 958, 1072, 1073, 1077, 1094, 1102, 1106, 1252, 1257, 1286, 1292], "differneti": [140, 721], "zdr_snow_dict": [140, 721], "label": [141, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 243, 245, 246, 247, 249, 250, 253, 261, 263, 265, 267, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 290, 291, 292, 295, 296, 297, 298, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 324, 327, 328, 329, 332, 333, 334, 335, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 360, 361, 364, 365, 366, 369, 370, 371, 372, 456, 722, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 806, 807, 808, 811, 812, 813, 814, 815, 826, 828, 829, 830, 832, 833, 836, 844, 846, 848, 850, 858, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 870, 873, 874, 875, 878, 879, 880, 881, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 906, 907, 910, 911, 912, 915, 916, 917, 918, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 943, 944, 947, 948, 949, 952, 953, 954, 955, 1032, 1250, 1252, 1263, 1269, 1270, 1279, 1280, 1284, 1290], "period": [141, 722, 1297], "account": [141, 148, 722, 731, 1252], "examin": [141, 376, 390, 393, 722, 961, 975, 978, 1303], "box": [141, 394, 722, 979, 1290], "alwai": [141, 377, 390, 496, 521, 525, 722, 962, 975, 1072, 1097, 1101, 1252, 1293], "occur": [141, 173, 192, 386, 387, 683, 702, 722, 755, 774, 971, 972, 1297, 1301], "readi": [141, 722], "min_temp": [142, 199, 724, 781], "max_h_iso0": [142, 195, 724, 777], "beamwidth": [142, 149, 159, 195, 199, 232, 298, 335, 372, 472, 511, 527, 724, 733, 743, 777, 781, 815, 881, 918, 955, 1048, 1087, 1103], "construct": [142, 178, 190, 442, 527, 688, 700, 724, 760, 772, 1017, 1103], "beyond": [142, 193, 536, 724, 775, 1235, 1236, 1302], "extent": [142, 511, 724, 1087, 1265], "reach": [142, 724], "mask_fzl": [142, 724], "end_gate_arr": [142, 724], "delev_max": [143, 144, 145, 725, 726, 727], "dazim_max": [143, 144, 145, 725, 726, 727], "elmin": [143, 144, 145, 193, 525, 725, 726, 727, 775, 1101, 1229], "rmin": [143, 193, 465, 484, 525, 725, 775, 1041, 1060, 1101, 1229], "50000": [143, 478, 725, 1054, 1265, 1269, 1289, 1299], "hmin": [143, 725, 1229], "10000": [143, 232, 260, 298, 335, 366, 372, 456, 461, 469, 478, 491, 494, 529, 534, 725, 815, 843, 881, 918, 949, 955, 1032, 1037, 1045, 1054, 1067, 1070, 1105, 1110, 1269, 1289, 1299], "nbins_min": [143, 144, 470, 725, 726, 1046], "attg": [143, 144, 145, 473, 479, 512, 725, 726, 727, 1049, 1055, 1088], "max_std_pwr": [143, 470, 725, 1046], "max_std_zdr": [143, 144, 725, 726], "sun_posit": [143, 144, 145, 725, 726, 727], "pwrh_field": [143, 144, 145, 725, 726, 727], "pwrv_field": [143, 144, 145, 725, 726, 727], "suspect": [143, 144, 145, 193, 725, 726, 727, 775], "sun": [143, 144, 145, 148, 149, 156, 157, 158, 159, 160, 723, 725, 726, 727, 731, 732, 733, 740, 741, 742, 743, 744], "hit": [143, 144, 145, 160, 723, 725, 726, 727, 732, 744, 1303], "detect": [143, 144, 145, 159, 498, 525, 527, 725, 726, 727, 743, 1074, 1101, 1103, 1222, 1252, 1274, 1289, 1297], "hildebrand": [143, 451, 465, 470, 484, 725, 1027, 1041, 1046, 1060, 1216, 1252], "sekhon": [143, 465, 470, 484, 725, 1041, 1046, 1060, 1216, 1252], "we": [143, 509, 725, 1085, 1259, 1260, 1263, 1268, 1287, 1289, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1304, 1305], "higher": [143, 221, 226, 288, 293, 321, 330, 358, 367, 725, 804, 809, 871, 876, 904, 913, 941, 950, 1297, 1299], "ga": [143, 144, 145, 445, 473, 479, 512, 725, 726, 727, 1020, 1049, 1055, 1088], "wai": [143, 144, 145, 445, 469, 473, 479, 511, 512, 528, 725, 726, 727, 1020, 1045, 1049, 1055, 1087, 1088, 1104, 1263, 1295, 1303, 1305], "pysolar": [143, 144, 145, 158, 725, 726, 727, 742], "sun_hit": [143, 144, 145, 160, 725, 726, 727, 744], "new_radar": [143, 144, 725, 726, 1296], "npulses_rai": [144, 471, 726, 1047], "ivic": [144, 471, 726, 1047, 1217, 1224, 1233, 1235, 1236], "2003": [144, 726, 1289], "instead": [144, 245, 394, 471, 726, 828, 979, 1047, 1252, 1259, 1260, 1289, 1293, 1299, 1302, 1303, 1305], "7": [144, 156, 159, 196, 384, 471, 533, 726, 740, 743, 778, 969, 1047, 1109, 1217, 1226, 1249, 1260, 1269, 1271, 1283, 1293, 1300, 1301, 1302, 1303], "noise_thr": [145, 727], "simpl": [145, 727, 1007, 1252, 1296, 1297], "self_const": [146, 147, 729, 730], "60000": [146, 147, 729, 730, 1265, 1269, 1299], "low_z": [146, 147, 729, 730], "high_z": [146, 147, 729, 730], "min_phidp": [146, 147, 729, 730], "01": [146, 147, 327, 364, 456, 521, 729, 730, 910, 947, 1032, 1097, 1222, 1237, 1256, 1266, 1268, 1285], "min_ncp": [146, 197, 728, 729, 779], "min_rhv": [146, 196, 197, 728, 729, 778, 779], "sys_phas": [146, 729], "overide_sys_phas": [146, 729], "nowrap": [146, 147, 729, 730], "really_verbos": [146, 147, 729, 730], "lp_solver": [146, 147, 729, 730], "cylp": [146, 147, 729, 730, 1252, 1293, 1302, 1305], "unf_field": [146, 147, 729, 730], "window_len": [146, 147, 153, 729, 730, 737], "proc": [146, 147, 521, 729, 730, 1097, 1252], "coef": [146, 147, 729, 730, 1252], "914": [146, 147, 729, 730, 1252], "lp": [146, 147, 729, 730, 1252, 1293], "consist": [146, 147, 150, 151, 152, 729, 730, 734, 735, 736, 1252, 1299], "low": [146, 147, 148, 149, 156, 159, 386, 521, 729, 730, 731, 733, 740, 743, 971, 1097, 1271], "high": [146, 147, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 521, 729, 730, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1097, 1290], "copolar": [146, 147, 497, 498, 518, 525, 729, 730, 1073, 1074, 1094, 1101, 1288], "automat": [146, 390, 395, 396, 442, 447, 511, 525, 530, 729, 975, 980, 981, 1017, 1022, 1087, 1101, 1106, 1252, 1274, 1293, 1303], "lpx": [146, 147, 729, 730], "messag": [146, 147, 235, 254, 386, 729, 730, 818, 837, 971, 1252, 1260], "suppress": [146, 147, 521, 729, 730, 1097], "pyglpk": [146, 147, 729, 730, 1252, 1293, 1302], "cvxopt": [146, 147, 729, 730, 1252, 1293, 1302], "cylp_mp": [146, 147, 729, 730], "modul": [146, 147, 729, 730, 1189, 1251, 1252, 1259, 1260, 1293, 1296, 1297, 1299, 1300, 1301, 1302, 1303], "solv": [146, 147, 729, 730, 1252], "horizon": [146, 147, 497, 518, 525, 729, 730, 1073, 1094, 1101], "sobel": [146, 147, 729, 730], "worker": [146, 147, 729, 730], "link": [146, 147, 538, 729, 730, 1252], "1z": [146, 147, 729, 730], "reproc_phas": [146, 147, 729, 730], "sob_kdp": [146, 147, 729, 730], "recalcul": [146, 147, 511, 729, 730, 1087, 1295], "giangrand": [146, 147, 525, 729, 730, 1101], "mcgraw": [146, 147, 729, 730], "lei": [146, 147, 729, 730], "applic": [146, 147, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 394, 496, 729, 730, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 979, 1072, 1243, 1303], "program": [146, 147, 511, 729, 730, 1087, 1252, 1293, 1303], "atmo": [146, 147, 518, 528, 729, 730, 1094, 1104, 1227, 1271, 1303], "tech": [146, 147, 518, 729, 730, 1094, 1227, 1271], "2013": [146, 147, 471, 522, 528, 729, 730, 1047, 1098, 1104, 1217, 1301], "1716": [146, 147, 729, 730], "system_phas": [147, 730], "ncpt": [147, 730], "first_gate_sysp": [147, 730], "carri": [147, 730], "smaller": [147, 366, 511, 730, 949, 1087, 1237, 1289, 1303], "off": [147, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 517, 730, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1093, 1268, 1289], "ptoa": [148, 731], "wavelen": [148, 156, 159, 731, 740, 743], "antenna_gain": [148, 159, 473, 731, 743, 1049], "coeff_band": [148, 159, 731, 743], "solar": [148, 156, 159, 731, 740, 743], "flux": [148, 156, 159, 731, 740, 743], "amospher": [148, 731], "wavelength": [148, 156, 159, 511, 731, 740, 743, 1087], "bandwidth": [148, 159, 731, 743], "s0": [148, 156, 731, 740], "10e": [148, 156, 159, 731, 740, 743], "m2": [148, 156, 159, 731, 740, 743], "hz": [148, 156, 159, 445, 472, 473, 512, 513, 731, 740, 743, 1020, 1048, 1049, 1088, 1089, 1277], "altub": [148, 149, 156, 159, 731, 733, 740, 743], "bech": [148, 149, 156, 159, 731, 733, 740, 743], "o": [148, 149, 156, 159, 394, 731, 733, 740, 743, 979, 1122, 1270, 1293, 1302, 1303], "argemi": [148, 149, 156, 159, 731, 733, 740, 743], "t": [148, 149, 156, 159, 394, 469, 496, 498, 521, 522, 525, 527, 528, 534, 731, 733, 740, 743, 979, 1045, 1072, 1074, 1097, 1098, 1101, 1103, 1104, 1110, 1252, 1263, 1289, 1293, 1295], "rigo": [148, 149, 156, 159, 731, 733, 740, 743], "2015": [148, 149, 156, 159, 500, 528, 731, 733, 740, 743, 1076, 1104, 1293], "align": [148, 149, 156, 159, 731, 733, 740, 743], "midrang": [148, 149, 156, 159, 731, 733, 740, 743], "angle_step": [149, 159, 733, 743], "fact": [149, 521, 523, 733, 1097, 1099], "la": [149, 733], "zdr_kdpzh_dict": [150, 151, 152, 734, 735, 736], "min_rhohv": [150, 151, 152, 734, 735, 736], "92": [150, 151, 152, 260, 734, 735, 736, 843, 1277, 1287], "filter_rain": [150, 151, 152, 734, 735, 736], "max_phidp": [150, 151, 152, 734, 735, 736], "smooth_wind_len": [150, 151, 152, 734, 735, 736], "dphidp_min": [150, 734], "dphidp_max": [150, 734], "parametr": [150, 151, 152, 734, 735, 736], "check_wet_radom": [150, 151, 734, 735], "wet_radome_refl": [150, 151, 734, 735], "wet_radome_len_min": [150, 151, 734, 735], "wet_radome_len_max": [150, 151, 734, 735], "wet_radome_ngates_min": [150, 151, 734, 735], "valid_gates_onli": [150, 734], "keep_point": [150, 151, 734, 735], "kdp_wind_len": [150, 734], "12": [150, 734, 1259, 1260, 1270, 1277, 1287, 1296, 1300, 1301], "tabl": [150, 151, 152, 394, 734, 735, 736, 979, 1233, 1235, 1236], "zh": [150, 151, 152, 548, 549, 734, 735, 736], "curv": [150, 151, 152, 734, 735, 736, 1289], "wolfensberg": [150, 151, 152, 498, 734, 735, 736, 1074, 1290, 1291], "louf": [150, 151, 152, 734, 735, 736], "gorgucci": [150, 151, 152, 734, 735, 736], "vaccarono": [150, 151, 152, 734, 735, 736], "kdpsim_field": [150, 151, 152, 734, 735, 736], "phidpsim_field": [150, 151, 152, 734, 735, 736], "closest": [150, 151, 379, 461, 469, 478, 491, 494, 734, 735, 964, 1007, 1037, 1045, 1054, 1067, 1070], "radom": [150, 151, 473, 479, 734, 735, 1049, 1055], "close": [150, 151, 376, 509, 521, 734, 735, 961, 1085, 1097, 1252], "wet": [150, 151, 734, 735, 1290], "mim": [150, 151, 734, 735], "disk": [150, 151, 734, 735], "around": [150, 151, 441, 492, 496, 498, 734, 735, 1016, 1068, 1072, 1074, 1201, 1226, 1264, 1279, 1282, 1289, 1295, 1297], "decid": [150, 151, 527, 734, 735, 1103], "That": [150, 734], "total": [150, 511, 521, 522, 523, 734, 1087, 1097, 1098, 1099, 1254, 1255, 1256, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292], "further": [150, 151, 734, 735, 1221], "analysi": [150, 151, 440, 734, 735, 1015, 1221], "least": [150, 496, 519, 520, 734, 1072, 1095, 1096, 1289], "refl_bias_dict": [150, 151, 734, 735], "selfconsistency_dict": [150, 151, 734, 735], "keep_poinst": [150, 151, 734, 735], "measur": [150, 151, 156, 159, 446, 496, 500, 508, 509, 518, 521, 522, 523, 734, 735, 740, 743, 1018, 1021, 1072, 1076, 1084, 1085, 1094, 1097, 1098, 1099, 1289, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "min_zdr": [151, 735], "bias_per_g": [151, 735], "kdp_data_dict": [151, 735], "selfconsist": [152, 736], "privat": [152, 397, 736, 1303], "kdp_sim_dict": [152, 736], "phidp_sim_dict": [152, 736], "raw_data": [153, 737], "wind_len": [153, 155, 520, 737, 739, 1096], "min_valid": [153, 155, 520, 737, 739, 1096], "wind_typ": [153, 737], "median": [153, 456, 461, 469, 478, 491, 499, 737, 1032, 1037, 1045, 1054, 1067, 1075, 1204, 1206, 1217, 1252], "less": [153, 442, 496, 523, 737, 1017, 1072, 1099, 1227, 1289], "move": [153, 154, 155, 161, 162, 164, 196, 467, 483, 486, 487, 511, 519, 520, 737, 738, 739, 778, 1043, 1059, 1062, 1063, 1087, 1095, 1096, 1216, 1252, 1263, 1303], "data_smooth": [153, 737], "swind_len": [154, 519, 738, 1095], "smin_valid": [154, 519, 738, 1095], "lwind_len": [154, 519, 738, 1095], "lmin_valid": [154, 519, 738, 1095], "zthr": [154, 519, 738, 1095], "short": [154, 519, 738, 1095, 1303], "solar_flux": [156, 159, 740, 743], "cm": [156, 159, 493, 740, 743, 1069, 1280], "dt": [157, 158, 741, 742, 1255], "lat_deg": [157, 741], "lon_deg": [157, 741], "refract": [157, 511, 741, 1087], "datetim": [157, 158, 203, 205, 225, 229, 231, 270, 272, 292, 296, 297, 303, 305, 328, 333, 334, 340, 342, 365, 370, 371, 375, 378, 379, 396, 461, 469, 478, 491, 492, 494, 741, 742, 786, 788, 808, 812, 814, 853, 855, 875, 879, 880, 886, 888, 911, 916, 917, 923, 925, 948, 953, 954, 960, 963, 964, 981, 1037, 1045, 1054, 1067, 1068, 1070, 1211, 1212, 1213, 1214, 1215, 1252], "boolean": [157, 160, 165, 171, 185, 496, 509, 538, 548, 549, 563, 564, 675, 681, 695, 723, 741, 744, 747, 753, 767, 958, 1072, 1085, 1252, 1300], "elev_sun": [157, 741], "azim_sun": [157, 741], "sensor": [157, 158, 741, 742], "el": [158, 509, 742, 1085, 1202, 1203, 1252], "az": [158, 394, 742, 979, 1252, 1277, 1278], "would": [159, 743, 1023, 1217, 1252, 1259, 1260, 1297, 1299, 1303], "without": [159, 229, 296, 333, 370, 454, 470, 743, 812, 879, 916, 953, 1030, 1046, 1184, 1196, 1239, 1252, 1302], "characterist": [159, 743, 1299], "pwr_det": [159, 743], "az_rad": [160, 744], "az_sun": [160, 744], "el_rad": [160, 744], "el_sun": [160, 744], "sun_hit_std": [160, 744], "az_width_co": [160, 744], "el_width_co": [160, 744], "az_width_cross": [160, 744], "el_width_cross": [160, 744], "is_zdr": [160, 744], "val": [160, 732, 744], "val_std": [160, 732, 744], "az_bia": [160, 732, 744], "el_bia": [160, 732, 744], "az_width": [160, 732, 744], "el_width": [160, 732, 744], "nhit": [160, 744], "par": [160, 723, 732, 744], "gaussian": [160, 467, 483, 486, 487, 529, 723, 732, 744, 1043, 1059, 1062, 1063, 1105, 1188, 1279], "fit": [160, 723, 732, 744], "warn": [161, 162, 164, 390, 393, 975, 978, 1235, 1252, 1254, 1259, 1260, 1263, 1299], "categori": [161, 162], "old_nam": 164, "new_nam": 164, "alia": [164, 1194, 1195, 1252], "namespac": [164, 578, 1252], "wrapper": [164, 1293], "deprecatedfunctionnam": 164, "exclude_bas": [165, 675, 747], "exclude_below": [165, 675, 747, 1263, 1288, 1300], "suggest": [165, 675, 747, 1252], "gate_exclud": [165, 675, 747, 1300], "gate_includ": [165, 675, 747, 1300], "lost": [165, 523, 675, 747, 1099, 1250, 1299], "again": [165, 675, 747, 1260, 1270, 1302], "import": [165, 528, 533, 534, 675, 747, 1104, 1109, 1110, 1122, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1295, 1296, 1297, 1299, 1300, 1301, 1302], "io": [165, 440, 536, 675, 747, 1015, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "radar_fil": [165, 564, 675, 747, 1255, 1268, 1270], "nc": [165, 675, 747, 1252, 1254, 1263, 1265, 1268, 1269, 1270, 1274, 1276, 1277, 1278, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1295, 1296, 1300], "normalized_coherent_pow": [165, 675, 747, 1300], "exclude_mask": [167, 169, 170, 171, 172, 173, 176, 177, 178, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 677, 679, 680, 681, 682, 683, 686, 687, 688, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 749, 751, 752, 753, 754, 755, 758, 759, 760, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 1264], "op": [167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 677, 679, 680, 681, 682, 683, 684, 686, 687, 688, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 749, 751, 752, 753, 754, 755, 756, 758, 759, 760, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774], "inclus": [167, 169, 172, 177, 181, 183, 186, 191, 440, 442, 677, 679, 682, 687, 691, 693, 696, 701, 749, 751, 754, 759, 763, 765, 768, 773, 1015, 1017, 1184, 1252, 1268], "exclus": [169, 679, 751], "AND": [169, 171, 178, 185, 190, 679, 681, 688, 695, 700, 751, 753, 760, 767, 772], "OR": [169, 171, 178, 185, 190, 679, 681, 688, 695, 700, 751, 753, 760, 767, 772], "gener": [169, 171, 178, 185, 190, 202, 203, 204, 205, 206, 207, 218, 220, 225, 228, 229, 230, 231, 232, 239, 240, 241, 242, 245, 246, 247, 249, 250, 253, 255, 256, 257, 258, 263, 265, 267, 269, 270, 271, 272, 273, 274, 285, 287, 292, 295, 296, 297, 298, 302, 303, 304, 305, 306, 307, 318, 320, 328, 329, 332, 333, 334, 335, 339, 340, 341, 342, 343, 344, 355, 357, 365, 366, 369, 370, 371, 372, 393, 396, 441, 442, 510, 511, 521, 529, 531, 679, 681, 688, 695, 700, 751, 753, 760, 767, 772, 785, 786, 787, 788, 789, 790, 801, 803, 808, 811, 812, 813, 814, 815, 822, 823, 824, 825, 828, 829, 830, 832, 833, 836, 838, 839, 840, 841, 846, 848, 850, 852, 853, 854, 855, 856, 857, 868, 870, 875, 878, 879, 880, 881, 885, 886, 887, 888, 889, 890, 901, 903, 911, 912, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 938, 940, 948, 949, 952, 953, 954, 955, 978, 981, 996, 1007, 1016, 1017, 1018, 1086, 1087, 1097, 1105, 1107, 1252, 1254, 1255, 1257, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293], "here": [169, 171, 178, 185, 190, 260, 679, 681, 688, 695, 700, 751, 753, 760, 767, 772, 843, 1263, 1289, 1293, 1295, 1300, 1302, 1305], "previous": [169, 171, 178, 185, 190, 679, 681, 688, 695, 700, 751, 753, 760, 767, 772, 1259, 1289], "becaus": [169, 171, 178, 521, 679, 681, 688, 751, 753, 760, 1097, 1289, 1305], "invalid": [169, 171, 173, 178, 193, 195, 196, 197, 198, 199, 200, 679, 681, 683, 688, 723, 728, 751, 753, 755, 760, 775, 777, 778, 779, 780, 781, 782], "v1": [172, 177, 186, 191, 682, 687, 696, 701, 754, 759, 768, 773, 1302], "v2": [172, 177, 186, 191, 682, 687, 696, 701, 754, 759, 768, 773, 1303], "insid": [172, 186, 526, 682, 696, 754, 768, 1102, 1296], "inf": [173, 192, 193, 197, 683, 702, 728, 755, 774, 775, 779, 1252], "outsid": [177, 191, 193, 197, 225, 228, 230, 231, 245, 246, 247, 249, 250, 253, 263, 265, 267, 292, 295, 297, 328, 329, 332, 334, 365, 366, 369, 371, 478, 479, 687, 701, 728, 759, 773, 775, 779, 808, 811, 813, 814, 828, 829, 830, 832, 833, 836, 846, 848, 850, 875, 878, 880, 911, 912, 915, 917, 948, 949, 952, 954, 1054, 1055, 1252, 1303], "trans_valu": [178, 190, 688, 700, 760, 772], "max_zdr": [193, 775], "max_rhv": [193, 775], "min_refl": [193, 197, 728, 775, 779], "max_refl": [193, 197, 728, 775, 779], "vel_lim": [193, 775], "2000": [193, 534, 775, 1110, 1264, 1299], "25000": [193, 446, 775, 1021, 1299], "85": [193, 196, 775, 778, 1291], "bird": [193, 453, 775, 1029], "criteria": [193, 194, 195, 196, 197, 198, 199, 200, 442, 521, 530, 728, 775, 776, 777, 778, 779, 780, 781, 782, 1017, 1097, 1106, 1229], "built": [193, 194, 195, 196, 197, 198, 199, 200, 441, 442, 728, 775, 776, 777, 778, 779, 780, 781, 782, 1016, 1017], "highest": [193, 196, 246, 775, 778, 829], "lowest": [193, 195, 196, 197, 198, 199, 200, 524, 728, 775, 777, 778, 779, 780, 781, 782, 1023, 1100, 1259, 1263, 1287, 1289], "greatest": [193, 197, 728, 775, 779], "400": [195, 199, 777, 781, 1252, 1295], "primarili": [195, 199, 777, 781], "phi_field": [196, 778], "textzdr_field": [196, 778], "textrhv_field": [196, 778], "textphi_field": [196, 778], "textrefl_field": [196, 778], "wind_siz": [196, 447, 778, 1022, 1249, 1297], "max_textphi": [196, 778], "max_textrhv": [196, 778], "max_textzdr": [196, 778], "max_textrefl": [196, 778], "cross": [196, 197, 212, 214, 218, 221, 232, 250, 251, 279, 281, 285, 288, 298, 312, 314, 318, 321, 335, 349, 351, 355, 358, 372, 453, 472, 473, 511, 728, 778, 779, 795, 797, 801, 804, 815, 833, 834, 862, 864, 868, 871, 881, 895, 897, 901, 904, 918, 932, 934, 938, 941, 955, 1029, 1048, 1049, 1087, 1209, 1210, 1252, 1257, 1267, 1276, 1285, 1289, 1301], "min_rhi": [197, 728, 779], "min_snr": [198, 780], "max_snr": [198, 780], "min_vi": [200, 782], "displai": [201, 218, 220, 225, 229, 230, 231, 232, 234, 268, 285, 287, 292, 296, 297, 298, 300, 301, 318, 320, 328, 329, 333, 334, 335, 337, 338, 355, 357, 365, 366, 370, 371, 372, 374, 394, 511, 533, 534, 784, 801, 803, 808, 812, 813, 814, 815, 817, 851, 868, 870, 875, 879, 880, 881, 883, 884, 901, 903, 911, 912, 916, 917, 918, 920, 921, 938, 940, 948, 949, 953, 954, 955, 957, 979, 1023, 1087, 1109, 1110, 1252, 1254, 1255, 1259, 1260, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1295, 1296, 1297, 1299, 1300, 1303], "airborn": [201, 784, 1252], "plot_var": [201, 268, 301, 338, 784, 851, 884, 921], "order": [201, 268, 301, 338, 390, 395, 396, 496, 518, 521, 525, 527, 784, 851, 884, 921, 958, 975, 980, 981, 1007, 1072, 1094, 1097, 1101, 1103, 1201, 1252, 1254, 1289, 1293, 1303], "cb": [201, 268, 301, 338, 784, 851, 884, 921, 1270], "colorbar": [201, 218, 219, 220, 225, 228, 229, 230, 231, 232, 243, 245, 246, 247, 249, 250, 253, 254, 261, 263, 265, 267, 268, 285, 286, 287, 292, 295, 296, 297, 298, 301, 318, 319, 320, 328, 329, 332, 333, 334, 335, 338, 355, 356, 357, 365, 366, 369, 370, 371, 372, 784, 801, 802, 803, 808, 811, 812, 813, 814, 815, 826, 828, 829, 830, 832, 833, 836, 837, 844, 846, 848, 850, 851, 868, 869, 870, 875, 878, 879, 880, 881, 884, 901, 902, 903, 911, 912, 915, 916, 917, 918, 921, 938, 939, 940, 948, 949, 952, 953, 954, 955, 1252, 1257, 1263, 1267, 1268, 1284, 1285], "loc": [201, 268, 301, 338, 784, 851, 884, 921, 1269], "titl": [202, 204, 205, 206, 207, 218, 220, 225, 228, 229, 230, 231, 232, 240, 241, 242, 245, 246, 247, 249, 250, 253, 256, 257, 258, 263, 265, 267, 269, 271, 272, 273, 274, 285, 287, 292, 295, 296, 297, 298, 302, 304, 305, 306, 307, 318, 320, 328, 329, 332, 333, 334, 335, 339, 341, 342, 343, 344, 355, 357, 365, 366, 369, 370, 371, 372, 785, 787, 788, 789, 790, 801, 803, 808, 811, 812, 813, 814, 815, 823, 824, 825, 828, 829, 830, 832, 833, 836, 839, 840, 841, 846, 848, 850, 852, 854, 855, 856, 857, 868, 870, 875, 878, 879, 880, 881, 885, 887, 888, 889, 890, 901, 903, 911, 912, 915, 916, 917, 918, 922, 924, 925, 926, 927, 938, 940, 948, 949, 952, 953, 954, 955, 1252, 1254, 1255, 1263, 1270, 1272, 1273, 1275, 1277, 1278, 1282, 1301], "ext": [203, 239, 255, 270, 303, 340, 786, 822, 838, 853, 886, 923], "datetime_format": [203, 205, 270, 272, 303, 305, 340, 342, 786, 788, 853, 855, 886, 888, 923, 925], "use_sweep_tim": [203, 205, 270, 272, 303, 305, 340, 342, 786, 788, 853, 855, 886, 888, 923, 925], "form": [203, 220, 239, 255, 270, 287, 303, 320, 340, 357, 786, 803, 822, 838, 853, 870, 886, 903, 923, 940, 1252], "radar_name_field_sweep_tim": [203, 270, 303, 340, 786, 853, 886, 923], "extens": [203, 239, 255, 270, 303, 340, 394, 786, 822, 838, 853, 886, 923, 979, 1302], "strftime": [203, 205, 225, 229, 270, 272, 292, 296, 303, 305, 328, 333, 340, 342, 365, 370, 786, 788, 808, 812, 853, 855, 875, 879, 886, 888, 911, 916, 923, 925, 948, 953], "vpt": [206, 217, 231, 273, 284, 297, 306, 317, 334, 343, 354, 371, 789, 800, 814, 856, 867, 880, 889, 900, 917, 926, 937, 954, 1232, 1252], "ndarrai": [207, 232, 274, 298, 307, 335, 344, 372, 518, 567, 790, 815, 857, 881, 890, 918, 927, 955, 1094, 1206, 1226, 1301], "xaxi": [208, 211, 212, 275, 278, 279, 308, 311, 312, 345, 348, 349, 791, 794, 795, 858, 861, 862, 891, 894, 895, 928, 931, 932, 1270], "static": [209, 210, 221, 222, 226, 233, 234, 276, 277, 288, 289, 293, 299, 300, 309, 310, 321, 322, 336, 337, 346, 347, 358, 359, 373, 374, 792, 793, 804, 805, 809, 816, 817, 859, 860, 871, 872, 876, 882, 883, 892, 893, 904, 905, 919, 920, 929, 930, 941, 942, 956, 957, 1293], "yaxi": [209, 210, 213, 214, 215, 216, 276, 277, 280, 281, 282, 283, 309, 310, 313, 314, 315, 316, 346, 347, 350, 351, 352, 353, 792, 793, 796, 797, 798, 799, 859, 860, 863, 864, 865, 866, 892, 893, 896, 897, 898, 899, 929, 930, 933, 934, 935, 936], "custom": [217, 218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 247, 249, 250, 253, 261, 263, 265, 267, 284, 285, 286, 287, 292, 296, 297, 298, 317, 318, 319, 320, 328, 329, 333, 334, 335, 354, 355, 356, 357, 365, 366, 370, 371, 372, 424, 441, 745, 800, 801, 802, 803, 808, 812, 813, 814, 815, 826, 828, 830, 832, 833, 836, 844, 846, 848, 850, 867, 868, 869, 870, 875, 879, 880, 881, 900, 901, 902, 903, 911, 912, 916, 917, 918, 937, 938, 939, 940, 948, 949, 953, 954, 955, 1016, 1299], "plot_ppi": [217, 284, 317, 354, 800, 867, 900, 937, 1252, 1255, 1290, 1295], "plot_sweep_grid": [217, 800, 1252], "target_azimuth": [218, 285, 318, 355, 801, 868, 901, 938, 1209], "mask_tupl": [218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 801, 808, 811, 812, 813, 814, 815, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955], "norm": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 521, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1097, 1252, 1270, 1290], "cmap": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 394, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 979, 1263, 1268, 1269, 1270, 1271, 1275, 1278, 1280, 1282, 1283, 1288, 1289, 1296, 1297], "mask_outsid": [218, 225, 228, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 801, 808, 811, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955, 1252, 1277, 1278], "title_flag": [218, 220, 225, 228, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 801, 803, 808, 811, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 912, 915, 916, 917, 918, 938, 940, 948, 949, 952, 953, 954, 955, 1282], "axislabel": [218, 220, 225, 228, 229, 230, 231, 232, 245, 249, 250, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 332, 333, 334, 335, 355, 357, 365, 369, 370, 371, 372, 801, 803, 808, 811, 812, 813, 814, 815, 828, 832, 833, 836, 846, 848, 850, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 915, 916, 917, 918, 938, 940, 948, 952, 953, 954, 955, 1272, 1277, 1278], "axislabels_flag": [218, 220, 225, 228, 229, 230, 231, 232, 245, 249, 250, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 332, 333, 334, 335, 355, 357, 365, 369, 370, 371, 372, 801, 803, 808, 811, 812, 813, 814, 815, 828, 832, 833, 836, 846, 848, 850, 868, 870, 875, 878, 879, 880, 881, 901, 903, 911, 915, 916, 917, 918, 938, 940, 948, 952, 953, 954, 955, 1252, 1289], "colorbar_flag": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955], "colorbar_label": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1254, 1255, 1259, 1272, 1273, 1277, 1278, 1279, 1280, 1284], "colorbar_ori": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 333, 334, 335, 355, 357, 365, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 916, 917, 918, 938, 940, 948, 953, 954, 955, 1252], "reverse_xaxi": [218, 229, 285, 296, 318, 333, 355, 370, 801, 812, 868, 879, 901, 916, 938, 953], "fig": [218, 219, 220, 225, 228, 229, 230, 231, 232, 243, 245, 246, 247, 249, 250, 253, 261, 263, 265, 267, 285, 286, 287, 292, 295, 296, 297, 298, 318, 319, 320, 328, 329, 332, 333, 334, 335, 355, 356, 357, 365, 366, 369, 370, 371, 372, 801, 802, 803, 808, 811, 812, 813, 814, 815, 826, 828, 829, 830, 832, 833, 836, 844, 846, 848, 850, 868, 869, 870, 875, 878, 879, 880, 881, 901, 902, 903, 911, 912, 915, 916, 917, 918, 938, 939, 940, 948, 949, 952, 953, 954, 955, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1288, 1290, 1291, 1297, 1299, 1300], "tick": [218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 247, 249, 250, 253, 261, 263, 265, 267, 285, 286, 287, 292, 296, 297, 298, 318, 319, 320, 328, 329, 333, 334, 335, 355, 356, 357, 365, 366, 370, 371, 372, 801, 802, 803, 808, 812, 813, 814, 815, 826, 828, 830, 832, 833, 836, 844, 846, 848, 850, 868, 869, 870, 875, 879, 880, 881, 901, 902, 903, 911, 912, 916, 917, 918, 938, 939, 940, 948, 949, 953, 954, 955, 1252, 1268, 1270, 1289, 1290], "ticklab": [218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 247, 249, 250, 253, 261, 263, 265, 267, 285, 286, 287, 292, 296, 297, 298, 318, 319, 320, 328, 329, 333, 334, 335, 355, 356, 357, 365, 366, 370, 371, 372, 801, 802, 803, 808, 812, 813, 814, 815, 826, 828, 830, 832, 833, 836, 844, 846, 848, 850, 868, 869, 870, 875, 879, 880, 881, 901, 902, 903, 911, 912, 916, 917, 918, 938, 939, 940, 948, 949, 953, 954, 955, 1252, 1289, 1290], "raster": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 394, 511, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 979, 1087, 1252], "pseudo": [218, 285, 318, 355, 525, 801, 868, 901, 938, 1101, 1252], "associ": [218, 285, 318, 355, 801, 868, 901, 938, 996], "matplotlib": [218, 220, 223, 224, 225, 229, 230, 231, 232, 244, 245, 247, 249, 250, 253, 262, 263, 265, 267, 285, 287, 290, 291, 292, 296, 297, 298, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 355, 357, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 394, 801, 803, 806, 807, 808, 812, 813, 814, 815, 827, 828, 830, 832, 833, 836, 845, 846, 848, 850, 868, 870, 873, 874, 875, 879, 880, 881, 901, 903, 906, 907, 908, 909, 910, 911, 912, 913, 916, 917, 918, 938, 940, 943, 944, 945, 946, 947, 948, 949, 950, 953, 954, 955, 979, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1295, 1296, 1297, 1299, 1300, 1302, 1305], "pcolormesh": [218, 220, 225, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1252, 1263, 1279, 1289], "ncp": [218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 801, 808, 811, 812, 813, 814, 815, 868, 875, 878, 879, 880, 881, 901, 911, 912, 915, 916, 917, 918, 938, 948, 949, 952, 953, 954, 955], "lumin": [218, 220, 225, 229, 230, 231, 232, 245, 246, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 828, 829, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955], "west": [218, 229, 285, 296, 318, 333, 355, 370, 801, 812, 868, 879, 901, 916, 938, 953, 1018, 1272], "leav": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 250, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 828, 830, 832, 833, 836, 846, 848, 850, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955], "orient": [218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 247, 249, 250, 253, 261, 263, 265, 267, 285, 286, 287, 292, 296, 297, 298, 318, 319, 320, 328, 333, 334, 335, 355, 356, 357, 365, 370, 371, 372, 801, 802, 803, 808, 812, 813, 814, 815, 826, 828, 830, 832, 833, 836, 844, 846, 848, 850, 868, 869, 870, 875, 879, 880, 881, 901, 902, 903, 911, 916, 917, 918, 938, 939, 940, 948, 953, 954, 955, 1290, 1291], "treat": [218, 225, 229, 230, 231, 249, 250, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 801, 808, 812, 813, 814, 832, 833, 836, 846, 848, 850, 868, 875, 879, 880, 901, 911, 912, 916, 917, 938, 948, 949, 953, 954], "themselv": [218, 225, 229, 230, 231, 249, 250, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 801, 808, 812, 813, 814, 832, 833, 836, 846, 848, 850, 868, 875, 879, 880, 901, 911, 912, 916, 917, 938, 948, 949, 953, 954], "figur": [218, 219, 220, 225, 228, 229, 230, 231, 232, 243, 245, 246, 247, 249, 250, 253, 261, 263, 265, 267, 285, 286, 287, 292, 295, 296, 297, 298, 318, 319, 320, 328, 329, 332, 333, 334, 335, 355, 356, 357, 365, 366, 369, 370, 371, 372, 801, 802, 803, 808, 811, 812, 813, 814, 815, 826, 828, 829, 830, 832, 833, 836, 844, 846, 848, 850, 868, 869, 870, 875, 878, 879, 880, 881, 901, 902, 903, 911, 912, 915, 916, 917, 918, 938, 939, 940, 948, 949, 952, 953, 954, 955, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1288, 1289, 1296, 1297, 1299, 1300], "render": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955], "rather": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955], "larg": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 521, 530, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1097, 1106, 1252], "Be": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955], "sure": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1252, 1263, 1270, 1289, 1302, 1303, 1305], "dpi": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955], "your": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 536, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955, 1257, 1267, 1269, 1285, 1289, 1293, 1302, 1303, 1305], "ep": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955], "svg": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 801, 803, 808, 812, 813, 814, 815, 868, 870, 875, 879, 880, 881, 901, 903, 911, 912, 916, 917, 918, 938, 940, 948, 949, 953, 954, 955], "mappabl": [219, 243, 254, 261, 286, 319, 356, 802, 826, 837, 844, 869, 902, 939], "cax": [219, 243, 261, 286, 319, 356, 802, 826, 844, 869, 902, 939, 1290], "imag": [219, 243, 246, 261, 286, 319, 356, 517, 802, 826, 829, 844, 869, 902, 939, 1093, 1201, 1227, 1252, 1257, 1267, 1285, 1287, 1289], "contourset": [219, 243, 254, 261, 286, 319, 356, 802, 826, 837, 844, 869, 902, 939], "etc": [219, 243, 245, 246, 254, 261, 286, 319, 329, 356, 366, 393, 461, 469, 478, 491, 494, 802, 826, 828, 829, 837, 844, 869, 902, 912, 939, 949, 978, 1037, 1045, 1054, 1067, 1070, 1252], "onto": [219, 243, 261, 263, 286, 319, 329, 356, 366, 440, 442, 524, 802, 826, 844, 846, 869, 902, 912, 939, 949, 1007, 1015, 1017, 1100], "drawn": [219, 243, 261, 286, 319, 356, 802, 826, 844, 869, 902, 939], "target_rang": [220, 287, 320, 357, 803, 870, 903, 940], "delta_x": [220, 287, 320, 357, 803, 870, 903, 940], "delta_i": [220, 287, 320, 357, 803, 870, 903, 940], "az_limit": [220, 287, 320, 357, 803, 870, 903, 940], "el_limit": [220, 287, 320, 357, 803, 870, 903, 940], "reflector": [220, 287, 320, 357, 803, 870, 903, 940, 1252], "griddata": [220, 287, 320, 357, 803, 870, 903, 940], "npt": [221, 226, 288, 293, 321, 330, 358, 367, 804, 809, 871, 876, 904, 913, 941, 950], "hair": [221, 288, 321, 358, 804, 871, 904, 941, 1276], "col": [222, 226, 227, 289, 293, 294, 322, 331, 359, 368, 805, 809, 810, 872, 876, 877, 905, 914, 942, 951], "line": [222, 228, 244, 245, 246, 260, 262, 289, 295, 322, 325, 326, 329, 330, 332, 359, 362, 363, 366, 367, 369, 394, 521, 805, 811, 827, 828, 829, 843, 845, 872, 878, 905, 908, 909, 912, 913, 915, 942, 945, 946, 949, 950, 952, 979, 1097, 1252, 1257, 1267, 1269, 1285, 1287, 1302, 1303, 1305], "color": [222, 223, 224, 226, 227, 244, 246, 289, 290, 291, 293, 294, 322, 323, 324, 329, 331, 359, 360, 361, 368, 394, 805, 806, 807, 809, 810, 827, 829, 872, 873, 874, 876, 877, 905, 906, 907, 912, 914, 942, 943, 944, 951, 979, 1269, 1270, 1271, 1279, 1280, 1287, 1289, 1290], "linestyl": [222, 226, 227, 244, 289, 293, 294, 322, 331, 359, 368, 805, 809, 810, 827, 872, 876, 877, 905, 914, 942, 951, 1269, 1270, 1280], "symbol": [223, 224, 290, 291, 323, 324, 327, 360, 361, 364, 806, 807, 873, 874, 906, 907, 910, 943, 944, 947], "text_color": [223, 224, 290, 291, 323, 324, 360, 361, 806, 807, 873, 874, 906, 907, 943, 944], "text": [223, 224, 290, 291, 323, 324, 327, 360, 361, 364, 806, 807, 873, 874, 906, 907, 910, 943, 944, 947, 1122, 1252, 1268, 1277, 1291, 1297], "just": [223, 224, 290, 291, 323, 324, 360, 361, 384, 806, 807, 873, 874, 906, 907, 943, 944, 969, 1252, 1268, 1271, 1295, 1301, 1303, 1305], "marker": [223, 224, 228, 244, 262, 290, 291, 295, 323, 324, 332, 360, 361, 369, 806, 807, 811, 827, 845, 873, 874, 878, 906, 907, 915, 943, 944, 952], "title_datetime_format": [225, 229, 292, 296, 328, 333, 365, 370, 808, 812, 875, 879, 911, 916, 948, 953], "title_use_sweep_tim": [225, 229, 292, 296, 328, 333, 365, 370, 808, 812, 875, 879, 911, 916, 948, 953], "range_ring_location_km": [226, 293, 330, 367, 809, 876, 913, 950], "lw": [226, 227, 293, 294, 331, 368, 809, 810, 876, 877, 914, 951], "ring": [226, 227, 293, 294, 330, 331, 367, 368, 809, 810, 876, 877, 913, 914, 950, 951, 1264, 1276], "range_r": [227, 294, 331, 368, 810, 877, 914, 951], "seri": [227, 294, 331, 368, 492, 810, 877, 914, 951, 1068], "draw": [227, 245, 246, 260, 294, 329, 331, 366, 368, 810, 828, 829, 843, 877, 912, 914, 949, 951], "format_str": [228, 295, 332, 369, 811, 878, 915, 952], "ray_min": [228, 295, 332, 369, 811, 878, 915, 952], "ray_max": [228, 295, 332, 369, 811, 878, 915, 952], "style": [228, 244, 262, 295, 325, 326, 330, 332, 362, 363, 367, 369, 394, 811, 827, 845, 878, 908, 909, 913, 915, 945, 946, 950, 952, 979, 1252], "consider": [229, 296, 333, 370, 521, 812, 879, 916, 953, 1097, 1289], "ignoretilt": [230, 813], "run": [230, 496, 535, 813, 1072, 1111, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1302, 1303, 1305], "antenna_to_cartesian_track_rel": [230, 813], "slant": [230, 491, 813, 1067], "ncar": [230, 813], "soloii": [230, 813], "softwar": [230, 387, 394, 578, 813, 972, 979, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303], "time_axis_flag": [231, 297, 334, 371, 814, 880, 917, 954], "date_time_form": [231, 297, 334, 371, 814, 880, 917, 954], "tz": [231, 297, 334, 371, 814, 880, 917, 954], "zone": [231, 297, 334, 371, 814, 880, 917, 954], "info": [231, 297, 329, 334, 366, 371, 511, 814, 880, 912, 917, 949, 954, 1087, 1252, 1290, 1301], "ref_point": [232, 298, 335, 372, 815, 881, 918, 955], "1000": [232, 298, 335, 372, 525, 815, 881, 918, 955, 1101, 1203, 1265, 1273, 1279, 1280, 1299, 1303], "vert_r": [232, 298, 335, 372, 815, 881, 918, 955], "alt_max": [232, 298, 335, 372, 815, 881, 918, 955], "dem_field": [232, 298, 335, 372, 815, 881, 918, 955], "terrain_altitud": [232, 298, 335, 372, 815, 881, 918, 955], "arbitrari": [232, 298, 335, 372, 521, 815, 881, 918, 955, 1097], "trajectori": [232, 298, 335, 372, 815, 881, 918, 955], "45": [232, 298, 335, 372, 508, 815, 881, 918, 955, 1084, 1271, 1280, 1289, 1303], "47": [232, 298, 335, 372, 525, 815, 881, 918, 955, 1101, 1252, 1291], "3db": [232, 298, 335, 372, 511, 815, 881, 918, 955, 1087], "ist": [232, 298, 335, 372, 815, 881, 918, 955], "aspect_ratio": [233, 299, 336, 373, 816, 882, 919, 956], "aspect": [233, 299, 336, 373, 511, 816, 882, 919, 956, 1087, 1268], "xlim": [234, 300, 337, 374, 817, 883, 920, 957, 1273, 1275, 1279, 1280, 1299], "ylim": [234, 300, 337, 374, 817, 883, 920, 957, 1273, 1275, 1277, 1278, 1279, 1280, 1282, 1284], "cartopi": [235, 236, 237, 238, 245, 246, 247, 301, 329, 818, 819, 820, 821, 828, 829, 830, 884, 912, 1252, 1257, 1259, 1260, 1263, 1267, 1269, 1270, 1283, 1285, 1287, 1289, 1293, 1296, 1297, 1299, 1300, 1302, 1303, 1305], "coastlin": [236, 245, 246, 329, 366, 819, 828, 829, 912, 949], "polit": [237, 820], "state": [238, 522, 821, 1098, 1252], "grid_name_field_level_tim": [239, 255, 822, 838], "latitudin": [241, 249, 265, 824, 832, 848], "linewidth": [244, 246, 262, 827, 829, 845, 1270, 1279, 1280], "crosshair": [244, 262, 827, 845], "lat_lin": [245, 246, 260, 329, 366, 828, 829, 843, 912, 949, 1263, 1276, 1287], "lon_lin": [245, 246, 260, 329, 366, 828, 829, 843, 912, 949, 1263, 1276, 1287], "embellish": [245, 246, 329, 828, 829, 912, 1270], "add_grid_lin": [245, 329, 828, 912], "imshow": [245, 828, 1252, 1264, 1265, 1268], "upper": [245, 246, 247, 249, 250, 253, 263, 265, 267, 444, 828, 829, 830, 832, 833, 836, 846, 848, 850, 1203, 1269], "colormesh": [245, 246, 247, 249, 250, 253, 263, 265, 267, 828, 829, 830, 832, 833, 836, 846, 848, 850], "64": [245, 246, 247, 249, 250, 253, 263, 265, 267, 828, 829, 830, 832, 833, 836, 846, 848, 850, 1268, 1273, 1274, 1275, 1279, 1281, 1283, 1284, 1287, 1300, 1302], "reason": [245, 260, 828, 843], "america": [245, 246, 260, 329, 366, 828, 829, 843, 912, 949], "cr": [245, 246, 301, 329, 456, 518, 828, 829, 884, 912, 1032, 1094, 1259, 1260, 1263, 1269, 1270, 1276, 1283, 1287, 1289, 1290, 1296, 1297, 1300], "subsequ": [245, 246, 329, 828, 829, 912], "geoax": [245, 246, 329, 828, 829, 912, 1296, 1299], "platecarre": [245, 246, 329, 828, 829, 912, 1259, 1263, 1269, 1270, 1283, 1287, 1289, 1297, 1300], "drawinf": [245, 246, 828, 829], "shapefil": [245, 246, 329, 366, 828, 829, 912, 949], "certain": [245, 246, 329, 517, 828, 829, 912, 959, 1093, 1227, 1252, 1289, 1300], "contour_valu": [246, 829], "maps_list": [246, 829], "countri": [246, 829], "110m": [246, 329, 829, 912], "background_zoom": [246, 829], "contour": [246, 829, 1252, 1257, 1267, 1285], "reson": [246, 329, 366, 829, 912, 949], "sequenc": [246, 829], "colour": [246, 829], "embelish": [246, 366, 829, 949, 1252], "10m": [246, 329, 829, 912, 1260, 1276], "50m": [246, 329, 829, 912, 1297, 1300], "naturalearthfeatur": [246, 329, 829, 912], "zoom": [246, 829], "background": [246, 366, 496, 530, 829, 949, 958, 1072, 1106, 1276, 1283, 1289], "cost": [246, 521, 829, 1097, 1252], "alpha": [247, 329, 366, 456, 500, 501, 502, 503, 504, 505, 723, 732, 830, 912, 949, 1032, 1076, 1077, 1078, 1079, 1080, 1081, 1270, 1279], "transpar": [247, 376, 830, 961, 1252, 1279], "overplot": [247, 329, 366, 830, 912, 949], "plot_latitudinal_level": [248, 264, 831, 847], "y_index": [249, 265, 832, 848], "basemap": [249, 250, 253, 254, 259, 260, 263, 265, 267, 338, 362, 363, 364, 366, 367, 832, 833, 836, 837, 842, 843, 846, 848, 850, 921, 945, 946, 947, 949, 950, 1252, 1293, 1302], "ind_1": [250, 833], "ind_2": [250, 833], "coord1": [251, 834], "coord2": [251, 834], "plot_longitudinal_level": [251, 252, 266, 834, 835, 849], "tuppl": [251, 456, 462, 481, 834, 1032, 1038, 1057], "x_index": [253, 267, 836, 850], "veric": [256, 839], "area_thresh": [260, 366, 843, 949], "auto_rang": [260, 843], "min_lon": [260, 329, 366, 843, 912, 949, 1263, 1276, 1300], "max_lon": [260, 329, 366, 843, 912, 949, 1263, 1276, 1300], "86": [260, 843], "min_lat": [260, 329, 366, 843, 912, 949, 1263, 1276, 1300], "max_lat": [260, 329, 366, 843, 912, 949, 1263, 1276, 1300], "44": [260, 445, 496, 843, 1020, 1072, 1289, 1292, 1302], "databas": [260, 366, 843, 949], "merc": [260, 366, 843, 949], "line_styl": [262, 325, 326, 330, 362, 363, 367, 845, 908, 909, 913, 945, 946, 950, 1276], "plot_rhi": [284, 317, 354, 867, 900, 937], "plot_vpt": [284, 317, 354, 867, 900, 937], "grid_project": [301, 441, 442, 884, 1016, 1017], "progress": [301, 338, 511, 884, 921, 1087], "some": [301, 338, 432, 523, 525, 884, 921, 991, 1002, 1018, 1099, 1101, 1122, 1252, 1260, 1268, 1269, 1287, 1289, 1293, 1297, 1299, 1302], "correctli": [301, 338, 884, 921, 1252], "report": [301, 338, 389, 534, 535, 536, 884, 921, 974, 1110, 1252, 1293, 1303], "github": [301, 338, 884, 921, 1252, 1280, 1293, 1302, 1305], "tracker": [301, 338, 884, 921, 1293, 1303], "azimuthalequidist": [301, 884], "line_lon": [325, 362, 908, 945], "line_lat": [325, 362, 908, 945], "compat": [325, 326, 327, 330, 362, 363, 364, 367, 391, 908, 909, 910, 913, 945, 946, 947, 950, 976, 1252, 1305], "line_x": [326, 363, 909, 946], "line_i": [326, 363, 909, 946], "ro": [327, 364, 910, 947], "label_text": [327, 364, 910, 947], "label_offset": [327, 364, 910, 947], "shapefile_kwarg": [329, 912], "edgecolor": [329, 912, 1279], "face": [329, 912], "lambertconform": [329, 912, 1260, 1276, 1296], "domain": [329, 366, 451, 511, 912, 949, 1027, 1087, 1263], "neither": [329, 366, 397, 912, 949, 983], "extend": [329, 366, 390, 410, 912, 949, 975, 1218], "word": [329, 912], "tranpar": [329, 366, 912, 949], "pixel": [329, 516, 517, 525, 912, 1092, 1093, 1101], "lcc": [366, 949], "cylindr": [366, 949], "mill": [366, 949], "exhibit": [366, 949], "distort": [366, 949], "aea": [366, 949], "laea": [366, 949], "conform": [366, 949, 1293, 1295], "tmerc": [366, 949], "aeqd": [366, 949], "cass": [366, 949], "even": [366, 523, 949, 1099, 1279, 1293, 1299, 1305], "cyl": [366, 949, 1252], "cannot": [366, 377, 949, 962], "lake": [366, 949], "esri": [366, 949], "untest": [366, 949], "dtobj": [375, 960], "storage_opt": [376, 386, 388, 961, 971, 973], "anon": [376, 386, 388, 961, 971, 973], "open": [376, 386, 388, 961, 971, 973, 1122, 1252, 1273, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303, 1305], "decompress": [376, 961, 1252], "bzip2": [376, 961, 1252], "backend": [376, 386, 961, 971], "googl": [376, 386, 961, 971, 1252, 1303], "cloud": [376, 386, 521, 961, 971, 1097, 1257, 1258, 1261, 1303, 1305], "storag": [376, 386, 961, 971, 1183], "amazon": [376, 386, 961, 971, 1259, 1260], "servic": [376, 386, 961, 971, 1259, 1260, 1268], "s3": [376, 386, 961, 971, 1259, 1260, 1271, 1289], "file_lik": [376, 961], "use_rsl": [377, 962], "read_": [377, 962], "trmm": [377, 390, 962, 975, 1252, 1293, 1302], "choos": [377, 962, 1257, 1267, 1285, 1289, 1305], "typeerror": [377, 962, 1252], "launch_datetim": [378, 963], "radiosond": [378, 963], "launch": [378, 963], "record": [378, 963, 1301], "target_datetim": [379, 964], "profile_datetim": [379, 964], "cfradial2": [381, 966], "use_file_field_attribut": [382, 967], "csu": [382, 967, 1252], "chill": [382, 967], "chl": [382, 967, 1252], "field_file_nam": [382, 967], "long_nam": [382, 967, 1289, 1296, 1301], "write_grid": [383, 968], "zlib": [384, 385, 969, 970], "read_mdv": [384, 969, 1255, 1264, 1275, 1279, 1280, 1281], "fulli": [384, 536, 969, 1302], "interchang": [384, 969], "vlevel": [384, 969], "proj_polar_radar": [384, 969], "proj_rhi_radar": [384, 969], "13": [384, 465, 470, 484, 969, 1041, 1046, 1060, 1216, 1260, 1282, 1300, 1301], "vlevel_typ": [384, 969], "vert_type_z": [384, 969], "vert_type_elev": [384, 969], "vert_type_az": [384, 969], "17": [384, 969, 1277, 1282], "vert_type_pressur": [384, 969], "vert_type_theta": [384, 969], "unknown": [384, 969, 1252], "most": [384, 959, 969, 1252, 1268, 1297, 1299, 1305], "station": [386, 387, 971, 972, 1260], "linear_interp": [386, 971], "nexrad": [386, 387, 388, 389, 971, 972, 973, 974, 1252, 1257, 1258, 1261, 1267, 1271, 1285, 1289, 1293, 1301], "archiv": [386, 971, 1272, 1293], "host": [386, 388, 971, 973], "noaa": [386, 388, 390, 971, 973, 975, 1259, 1260, 1271, 1289], "nation": [386, 388, 971, 973, 1259, 1268], "climat": [386, 388, 971, 973, 1252, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "ucar": [386, 387, 971, 972], "thredd": [386, 387, 393, 971, 972, 978], "server": [386, 387, 971, 972], "letter": [386, 387, 389, 971, 972, 974], "icao": [386, 387, 971, 972, 1252], "older": [386, 387, 971, 972, 1252, 1257, 1258, 1261, 1293, 1303], "mix": [386, 971, 1227, 1271, 1289], "nearest": [386, 442, 461, 469, 470, 478, 491, 494, 510, 971, 1017, 1037, 1045, 1046, 1054, 1067, 1070, 1086, 1203, 1209, 1210, 1244, 1252, 1299], "fsspec": [386, 388, 971, 973, 1252], "cut": [386, 387, 388, 517, 971, 972, 973, 1093, 1246, 1247], "ncdc": [386, 388, 971, 973], "gov": [386, 388, 971, 973, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288], "edu": [386, 387, 516, 971, 972, 1092, 1271, 1289], "catalog": [386, 387, 971, 972], "html": [386, 387, 516, 971, 972, 1092, 1252, 1293, 1302, 1303], "common": [387, 972, 1252, 1293, 1302], "cdm": [387, 393, 972, 978], "url": [387, 972, 1260], "java": [387, 393, 972, 978], "tool": [387, 393, 972, 978, 1293, 1302, 1303], "opendap": [387, 972], "accept": [387, 456, 461, 469, 478, 491, 499, 522, 523, 972, 1032, 1037, 1045, 1054, 1067, 1075, 1098, 1099, 1252, 1303], "compil": [387, 522, 972, 1098, 1252, 1293, 1302], "unidata": [387, 972, 1259], "htm": [387, 972], "nw": [388, 973], "wsr": [388, 525, 973, 1101], "88d": [388, 525, 973, 1101], "iii": [388, 973], "distribut": [388, 496, 529, 531, 533, 973, 1072, 1105, 1107, 1109, 1197, 1198, 1199, 1200, 1230, 1231, 1252, 1289, 1293, 1303], "roc": [388, 973], "wsr88d": [388, 389, 973, 974], "level_iii": [388, 973], "level3info": [388, 973], "asp": [388, 973], "radar_format": [389, 974], "callid": [389, 974], "skip_range_check": [389, 974], "rsl_radar": [389, 974], "id": [389, 394, 974, 979, 1252], "verifi": [389, 974, 1232, 1250], "ioerror": [389, 974], "time_ord": [390, 975, 1252], "full_xhdr": [390, 975], "noaa_hh_hdr": [390, 975], "ignore_xhdr": [390, 975], "ignore_sweep_start_m": [390, 975], "sigmet": [390, 975, 1252, 1293], "iri": [390, 975, 1252, 1293, 1302], "sequenti": [390, 975, 1018, 1268], "re": [390, 975], "manner": [390, 975], "determind": [390, 975], "maintain": [390, 975, 1252], "reverse_and_rol": [390, 975], "strictli": [390, 975], "increas": [390, 442, 498, 511, 521, 524, 975, 1017, 1074, 1087, 1097, 1100, 1268, 1299, 1303], "becom": [390, 975, 1289, 1296, 1299], "thisopt": [390, 975], "strict": [390, 975], "header": [390, 565, 566, 975, 1252], "decod": [390, 975, 1252], "hurrican": [390, 975, 1289], "hunter": [390, 975], "millisecond": [390, 975], "precis": [390, 975], "explic": [390, 975], "read_rsl": [390, 975, 1302], "error": [390, 394, 522, 523, 975, 979, 1098, 1099, 1207, 1235, 1236, 1252, 1302], "uf": [391, 396, 976, 981, 1252, 1293], "implement": [391, 397, 399, 401, 410, 420, 441, 516, 527, 976, 983, 996, 1016, 1092, 1103, 1252, 1254], "write_proj_coord_si": [393, 978], "proj_coord_si": [393, 978], "write_point_x_y_z": [393, 978], "write_point_lon_lat_alt": [393, 978], "projectioncoordinatesystem": [393, 978], "toolsui": [393, 978], "appropri": [393, 978], "understood": [393, 978], "rgb": [394, 979], "viridi": [394, 979, 1289], "color_level": [394, 979], "warp": [394, 979], "sld": [394, 979], "use_doublequot": [394, 979], "geotiff": [394, 979, 1252, 1293], "sphere": [394, 979, 1219, 1245], "latter": [394, 979], "usabl": [394, 979], "former": [394, 979], "gi": [394, 979], "while": [394, 979, 1297, 1305], "show": [394, 979, 1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1289, 1295, 1297, 1299, 1300, 1301, 1303], "lack": [394, 435, 979, 994, 1004], "gdal": [394, 979, 1252, 1293], "via": [394, 979], "conda": [394, 979, 1252, 1293, 1302, 1303, 1305], "rbg": [394, 979], "column": [394, 979, 1220, 1221, 1252, 1257, 1286, 1292], "categor": [394, 979, 1290], "gdalwarp": [394, 979], "command": [394, 979, 1252, 1293, 1296, 1303, 1305], "descriptor": [394, 979], "tiff": [394, 979], "don": [394, 979, 1252, 1263], "quot": [394, 979], "help": [394, 979, 1111, 1263, 1268, 1289, 1303, 1305], "translat": [394, 979], "sr": [394, 979], "mdv_field_nam": [395, 980, 1252], "field_write_ord": [395, 396, 980, 981], "sentinel": [395, 396, 980, 981], "writabl": [395, 980], "satisfi": [395, 980], "xy": [395, 442, 980, 1017], "irregular": [395, 980], "exce": [395, 980, 1289], "122": [395, 980, 1259, 1263, 1269, 1288], "uncompress": [395, 980], "sai": [395, 980, 1303], "uf_field_nam": [396, 981], "radar_field_nam": [396, 981], "volume_start": [396, 981], "templates_extra": [396, 981], "radar_beam_width_h": [396, 981], "radar_beam_width_v": [396, 981], "radar_receiver_bandwidth": [396, 981], "prt": [396, 981], "polarization_mod": [396, 981], "round": [396, 981, 1252], "_uf_scale_factor": [396, 981], "charact": [396, 981], "advanc": [396, 981], "usag": [396, 981], "templat": [396, 981, 1252, 1303], "mandatory_head": [396, 981], "optional_head": [396, 981], "field_head": [396, 981], "lazi": [397, 400, 406, 411, 413, 426, 433, 982, 983, 985, 992, 1252], "set_lazi": [397, 983], "callabl": [397, 433, 983, 992], "cach": [397, 424, 983], "tradit": [397, 400, 411, 413, 983], "supplement": [397, 983], "syntax": [397, 983, 1252], "prevent": [397, 442, 983, 1017, 1252, 1303], "comparison": [397, 456, 527, 983, 1032, 1103, 1252, 1263], "__cmp__": [397, 983], "__ge__": [397, 983], "__gt__": [397, 983], "__le__": [397, 983], "__lt__": [397, 983], "__ne__": [397, 983], "nor": [397, 983], "viewitem": [397, 983], "viewkei": [397, 983], "viewvalu": [397, 983], "fromkei": [397, 983], "tradition": [397, 421, 983], "referenc": [397, 983], "lazyloaddictionari": [397, 983], "henc": [397, 983], "key1": [397, 983], "value1": [397, 983], "key2": [397, 983], "value2": [397, 983], "lazy_func": [397, 983], "lambda": [397, 983], "lazykey1": [397, 983], "delattr": 399, "dir": [401, 1122], "format_spec": 403, "formatt": 403, "getattr": 405, "helper": [407, 417, 418, 1268], "pickl": [407, 417, 418, 1252], "subclass": 410, "noth": 410, "overridden": 410, "protocol": 418, "repr": 419, "setattr": 420, "memori": [422, 442, 527, 1017, 1103], "abstract": 424, "overrid": [424, 1280], "issubclass": 424, "invok": 424, "earli": 424, "abc": 424, "abcmeta": 424, "__subclasscheck__": 424, "notimpl": 424, "outcom": 424, "item": [425, 435, 984, 994, 997, 1004, 1252], "els": [427, 428, 986, 987, 998], "value_cal": [433, 992], "zg": [437, 438, 439, 1011, 1012, 1013], "yg": [437, 438, 439, 1011, 1012, 1013], "xg": [437, 438, 439, 1011, 1012, 1013], "roi": [437, 438, 439, 442, 1011, 1012, 1013, 1017, 1252], "influenc": [437, 440, 441, 442, 511, 1011, 1015, 1016, 1017, 1087, 1299], "grow": [438, 439, 441, 442, 1012, 1013, 1016, 1017, 1303], "virtual": [439, 441, 442, 1013, 1016, 1017], "grid_shap": [440, 441, 442, 1015, 1016, 1017, 1184, 1264, 1265, 1269, 1289, 1299], "grid_limit": [440, 441, 442, 1015, 1016, 1017, 1184, 1264, 1265, 1269, 1289, 1299], "gridding_algo": [440, 1015], "map_gates_to_grid": [440, 1015, 1252], "map_to_grid": [440, 441, 1015, 1016, 1252], "significantli": [440, 442, 1015, 1017], "faster": [440, 442, 1015, 1017, 1252], "barn": [440, 442, 1015, 1017, 1252, 1299], "1964": [440, 1015], "techniqu": [440, 508, 1015, 1084], "maxim": [440, 1015, 1018], "numer": [440, 1015, 1252], "meteorologi": [440, 451, 465, 470, 484, 521, 534, 1015, 1023, 1027, 1041, 1046, 1060, 1097, 1110, 1216], "climatologi": [440, 534, 1015, 1110], "396": [440, 1015], "409": [440, 1015, 1252], "cressman": [440, 442, 1015, 1017, 1299], "1959": [440, 1015], "monthli": [440, 1015], "review": [440, 1015, 1252], "367": [440, 1015], "374": [440, 1015, 1252], "paulei": [440, 1015, 1299], "1990": [440, 1015, 1299], "discret": [440, 511, 1015, 1087], "respons": [440, 1015], "118": [440, 1015], "1145": [440, 1015, 1252], "1164": [440, 1015, 1252], "grid_origin": [441, 442, 1016, 1017, 1265, 1269], "grid_origin_alt": [441, 442, 1016, 1017], "map_roi": [441, 442, 1016, 1017], "weighting_funct": [441, 442, 1016, 1017, 1299], "barnes2": [441, 442, 1016, 1017, 1252], "toa": [441, 442, 446, 524, 1016, 1017, 1021, 1100], "17000": [441, 442, 1016, 1017, 1299], "roi_func": [441, 442, 1016, 1017, 1252, 1299], "dist_beam": [441, 442, 1016, 1017, 1299], "constant_roi": [441, 442, 1016, 1017, 1252], "z_factor": [441, 442, 1016, 1017], "xy_factor": [441, 442, 1016, 1017], "02": [441, 442, 498, 1016, 1017, 1074, 1271, 1285, 1289, 1292], "min_radiu": [441, 442, 1016, 1017, 1252, 1299], "h_factor": [441, 442, 1016, 1017], "nb": [441, 442, 1016, 1017], "bsp": [441, 442, 1016, 1017], "linearli": [441, 1016], "roifunct": [441, 1016], "dist": [441, 442, 1016, 1017, 1230, 1231], "get_roi": [441, 1016], "cython": [441, 1016, 1252], "grid_siz": [441, 442, 1016, 1017], "grid_from_radar": [441, 442, 1016, 1017, 1264, 1265, 1269, 1289, 1299], "copy_field_data": [442, 1017], "kd_tree": [442, 1017], "leafsiz": [442, 1017], "nearbi": [442, 1017, 1265], "coodin": [442, 1017], "azimut": [442, 1017], "similarili": [442, 1017], "example_roi_func_const": [442, 1017], "example_roi_func_dist": [442, 1017], "example_roi_func_dist_beam": [442, 1017], "foreach": [442, 1017], "metet": [442, 1017], "dist_mean": [442, 1017], "preserv": [442, 1017, 1297], "slower": [442, 511, 521, 1017, 1087, 1097], "leaf": [442, 1017], "lookup": [442, 1017], "tree": [442, 1007, 1017], "affect": [442, 498, 515, 1017, 1074, 1091], "optim": [442, 519, 520, 521, 1017, 1095, 1096, 1097, 1252], "natur": [442, 1017], "mx": 443, "mn": 443, "relh_slop": [443, 456, 531, 1032, 1107], "005": 443, "destandard": 443, "h_iso0": [443, 456, 518, 1032, 1094], "slope": [443, 456, 511, 522, 531, 1032, 1087, 1098, 1107], "sigmoid": [443, 456, 531, 1032, 1107], "field_std": 443, "hlowerleft": 444, "hupperright": 444, "matrix": [444, 456, 522, 723, 732, 1032, 1098, 1252], "freq": [445, 472, 473, 493, 512, 513, 1020, 1048, 1049, 1069, 1088, 1089], "rng": [445, 515, 1020, 1091, 1202, 1203, 1218], "empir": [445, 1020], "satur": [445, 1020], "latm": [445, 1020], "floor": [446, 1021], "nyq": [447, 1022, 1297], "check_nyq_uniform": [447, 1022], "deriv": [447, 521, 523, 1022, 1097, 1099], "try": [447, 521, 527, 1022, 1097, 1103, 1299, 1300], "vel_dict": [447, 448, 449, 1022, 1024, 1025], "entri": [447, 1022, 1301], "sdbz_field": [448, 450, 457, 459, 474, 1024, 1026, 1033, 1035, 1050], "spectral": [448, 450, 457, 459, 467, 474, 476, 482, 483, 484, 485, 486, 487, 488, 567, 1024, 1026, 1033, 1035, 1043, 1050, 1052, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1216, 1252], "signal_field": [449, 451, 464, 465, 475, 484, 485, 486, 487, 489, 490, 495, 1025, 1027, 1040, 1041, 1051, 1060, 1061, 1062, 1063, 1065, 1066, 1071], "negative_awai": [449, 468, 1025, 1044], "negative_toward": [449, 468, 1025, 1044], "width_dict": [450, 451, 1026, 1027], "subtract_nois": [451, 460, 467, 468, 475, 476, 477, 483, 486, 487, 488, 1027, 1036, 1043, 1044, 1051, 1052, 1053, 1059, 1062, 1063, 1064], "noise_field": [451, 466, 470, 471, 475, 480, 486, 487, 1027, 1042, 1046, 1047, 1051, 1056, 1062, 1063], "lag": [451, 460, 468, 477, 489, 490, 1027, 1036, 1044, 1053, 1065, 1066], "denomin": [451, 1027], "varianc": [451, 1027, 1216, 1217, 1222, 1233, 1234], "srivastava": [451, 1027], "jameson": [451, 1027], "februari": [451, 1027], "1979": [451, 1027], "rhohv_snow": [452, 527, 1028, 1103], "rhohv_rain": [452, 527, 1028, 1103], "rhohv_ml": [452, 527, 1028, 1103], "93": [452, 472, 493, 511, 527, 1028, 1048, 1069, 1087, 1103], "zh_snow": [452, 527, 1028, 1103], "zh_rain": [452, 527, 1028, 1103], "zh_ml": [452, 527, 1028, 1103], "27": [452, 527, 1028, 1103, 1287], "zv_snow": [452, 527, 1028, 1103], "zv_rain": [452, 527, 1028, 1103], "zv_ml": [452, 527, 1028, 1103], "26": [452, 461, 527, 1028, 1037, 1103, 1256], "beam_factor": [452, 527, 1028, 1103], "npts_diagram": [452, 527, 1028, 1103], "81": [452, 527, 1028, 1103, 1301], "rng_bottom_max": [452, 527, 1028, 1103], "200000": [452, 527, 1028, 1103, 1276, 1289], "theoretical_cross_correlation_ratio": [452, 1028], "diagram": [452, 1028], "rhohv_theo_dict": [452, 1028], "sigma_bird": [453, 1029], "vol_refl_field": [453, 493, 1029, 1069], "bird_density_field": [453, 1029], "densiti": [453, 531, 1029, 1107, 1290], "volumetr": [453, 493, 1029, 1069], "bird_density_dict": [453, 1029], "filt_field": [454, 1030], "unfilt_field": [454, 1030], "ccor_field": [454, 1030], "ccor": [454, 1030], "unfilt": [454, 1030], "ccor_dict": [454, 1030], "cdr_field": [455, 1031], "circular": [455, 1031, 1230, 1231, 1252, 1289], "depolar": [455, 1031], "cdr": [455, 1031], "features_matrix": [456, 1032], "var_nam": [456, 499, 518, 531, 1032, 1075, 1094, 1107], "hydro_nam": [456, 499, 518, 531, 1032, 1075, 1094, 1107], "ag": [456, 518, 527, 1032, 1094, 1103, 1290], "lr": [456, 518, 1032, 1094, 1290], "rp": [456, 518, 1032, 1094, 1290], "rn": [456, 518, 1032, 1094, 1290], "mh": [456, 518, 1032, 1094, 1290], "ih": [456, 518, 1032, 1094, 1290], "hdg": [456, 518, 1032, 1094, 1290], "nsamples_it": [456, 1032], "20000": [456, 497, 498, 529, 1032, 1073, 1074, 1105, 1276, 1299], "external_iter": [456, 1032], "internal_iter": [456, 1032], "cv_approach": [456, 1032], "num_samples_arr": [456, 1032], "n_samples_syn": [456, 1032], "nmedoids_min": [456, 499, 1032, 1075], "acceptance_threshold": [456, 499, 1032, 1075], "001": [456, 531, 1032, 1107, 1224, 1279], "parallel": [456, 521, 522, 523, 1032, 1097, 1098, 1099], "sample_data": [456, 1032], "kmax_it": [456, 499, 1032, 1075], "nsamples_smal": [456, 1032], "40000": [456, 1032, 1265, 1269, 1276, 1299], "sampling_size_clara": [456, 1032], "niter_clara": [456, 1032], "keep_labeled_data": [456, 1032], "use_median": [456, 499, 1032, 1075], "allow_label_dupl": [456, 1032], "centroid": [456, 497, 518, 529, 1032, 1073, 1094, 1105], "nsampl": [456, 529, 531, 1032, 1105, 1107], "nvariabl": [456, 518, 1032, 1094], "extern": [456, 1032], "loop": [456, 1032, 1252, 1291], "medoid": [456, 499, 1032, 1075], "inter": [456, 499, 1032, 1075], "dispers": [456, 499, 1032, 1075], "cluster": [456, 518, 1032, 1094], "critic": [456, 1032], "approach": [456, 511, 518, 525, 527, 1032, 1087, 1094, 1101, 1103], "reject": [456, 1032], "intermedi": [456, 499, 1032, 1075], "kmedoid": [456, 499, 1032, 1075], "clara": [456, 1032], "exceed": [456, 508, 1032, 1084], "kept": [456, 498, 1032, 1074], "labeled_data": [456, 1032], "medoids_dict": [456, 499, 1032, 1075], "final_medoids_dict": [456, 499, 1032, 1075], "sphidp_field": [457, 1033], "phase_offset": [458, 468, 1034, 1044], "signal_h_field": [458, 460, 467, 468, 476, 477, 482, 483, 488, 1034, 1036, 1043, 1044, 1052, 1053, 1058, 1059, 1064], "signal_v_field": [458, 460, 467, 468, 476, 477, 482, 483, 488, 1034, 1036, 1043, 1044, 1052, 1053, 1058, 1059, 1064], "sdbzv_field": [459, 1035], "zdr_dict": [459, 460, 1035, 1036], "noise_h_field": [460, 467, 468, 476, 477, 483, 488, 1036, 1043, 1044, 1052, 1053, 1059, 1064], "noise_v_field": [460, 467, 468, 476, 477, 483, 488, 1036, 1043, 1044, 1052, 1053, 1059, 1064], "ref_tim": [461, 469, 478, 491, 492, 494, 1037, 1045, 1054, 1067, 1068, 1070], "latlon_tol": [461, 491, 494, 1037, 1067, 1070, 1202, 1229], "0005": [461, 491, 494, 1037, 1067, 1070], "delta_rng": [461, 491, 1037, 1067, 1218], "delta_azi": [461, 491, 1037, 1067, 1204, 1218], "hmax": [461, 469, 478, 491, 494, 1037, 1045, 1054, 1067, 1070, 1229], "hre": [461, 469, 478, 491, 494, 525, 1037, 1045, 1054, 1067, 1070, 1101], "250": [461, 491, 498, 1037, 1067, 1074, 1301], "avg_typ": [461, 469, 478, 491, 1037, 1045, 1054, 1067, 1204, 1206], "interp_kind": [461, 469, 478, 491, 494, 1037, 1045, 1054, 1067, 1070, 1244], "qvp": [461, 469, 478, 491, 494, 528, 1037, 1045, 1054, 1067, 1070, 1104, 1252], "enhanc": [461, 1037, 1305], "interest": [461, 491, 494, 1037, 1067, 1070, 1263, 1289], "central": [461, 491, 1037, 1067, 1218], "evp": [461, 491, 1037, 1067], "regardless": [461, 469, 478, 491, 494, 508, 1037, 1045, 1054, 1067, 1070, 1084], "elimin": [461, 469, 478, 491, 494, 1037, 1045, 1054, 1067, 1070, 1297, 1299], "kaltenboeck": [461, 1037], "2016": [461, 469, 498, 518, 1037, 1045, 1074, 1094, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "storm": [461, 530, 1037, 1106, 1188, 1190, 1271, 1289, 1299], "methodologi": [461, 534, 1037, 1110, 1297], "meteorologisch": [461, 1037], "zeitschrift": [461, 1037], "207": [461, 1037], "222": [461, 1037, 1255, 1272], "fields_in_list": [462, 481, 1038, 1057], "fields_out_list": [462, 481, 1038, 1057], "fourier": [462, 481, 1038, 1057], "ones": [462, 481, 1038, 1057, 1268], "get_window": [462, 481, 1038, 1057], "ifft": [462, 1038], "l_field": [463, 1039], "logarithm": [463, 1039], "ll": [463, 1039], "log10": [463, 1039, 1263], "mph_dict": [464, 1040], "navg": [465, 484, 1041, 1060, 1216], "nnoise_min": [465, 484, 1041, 1060, 1216], "dbadu_to_dbm_hh": [465, 484, 486, 487, 1041, 1060, 1062, 1063], "dbadu_to_dbm_vv": [465, 484, 486, 487, 1041, 1060, 1062, 1063], "sehkon": [465, 484, 1041, 1060, 1216], "1974": [465, 470, 484, 1041, 1046, 1060, 1216], "noise_dict": [465, 470, 471, 484, 1041, 1046, 1047, 1060], "808": [465, 470, 484, 1041, 1046, 1060, 1216], "811": [465, 470, 484, 1041, 1046, 1060, 1216, 1252, 1261], "noisedbz_v": [466, 1042], "ref_dist": [466, 1042], "noisedbz": [466, 1042], "fields_list": [467, 468, 1043, 1044], "use_pwr": [467, 1043], "smooth_window": [467, 483, 486, 487, 1043, 1059, 1062, 1063], "srhohv_field": [467, 476, 482, 1043, 1052, 1058], "pwr_h_field": [467, 476, 483, 1043, 1052, 1059], "pwr_v_field": [467, 476, 483, 1043, 1052, 1059], "quasi": [469, 478, 528, 1045, 1054, 1104], "zhang": [469, 491, 500, 528, 1045, 1067, 1076, 1104], "reev": [469, 528, 1045, 1104], "kumjian": [469, 478, 528, 1045, 1054, 1104], "tschallen": [469, 528, 1045, 1104], "tr\u00f6mel": [469, 1045], "simmer": [469, 500, 528, 1045, 1076, 1104], "jtech": [469, 491, 1045, 1067], "33": [469, 1045, 1301], "551": [469, 1045], "562": [469, 1045, 1252], "pwr_field": [470, 471, 479, 487, 1046, 1047, 1055, 1063], "get_noise_po": [470, 471, 1046, 1047, 1217], "noisi": [470, 471, 1046, 1047], "noise_pos_dict": [470, 471, 1046, 1047], "reserv": [470, 1046, 1202, 1203, 1229], "ngates_min": [471, 1047, 1217], "curti": [471, 1047, 1217], "torr": [471, 1047, 1217], "2737": [471, 1047, 1217], "2753": [471, 1047, 1217], "kw2": [472, 1048], "rcs_field": [472, 473, 1048, 1049], "water": [472, 493, 511, 1048, 1069, 1087], "rc": [472, 473, 511, 1048, 1049, 1087], "rcs_dict": [472, 473, 1048, 1049], "lmf": [473, 479, 1049, 1055], "radconst": [473, 479, 1049, 1055], "tx_pwr": [473, 1049], "lrx": [473, 479, 1049, 1055], "ltx": [473, 1049], "lradom": [473, 479, 1049, 1055], "neglect_gas_att": [473, 1049], "feed": [473, 479, 1049, 1055], "neglect": [473, 1049], "dbz_dict": [474, 475, 1050, 1051], "use_rhohv": [476, 482, 1052, 1058], "srhohv": [476, 482, 1052, 1058], "srho_hv": [476, 1052], "rhohv_dict": [476, 477, 1052, 1053], "weight_pow": [478, 1054], "ab": [478, 1054], "grng": [478, 1054], "tobin": [478, 1054], "2017": [478, 491, 1054, 1067], "surfac": [478, 496, 1054, 1072, 1289], "ic": [478, 491, 1054, 1067, 1279, 1290], "pellet": [478, 1054], "forecast": [478, 1054], "2065": [478, 1054], "2082": [478, 1054], "THE": [479, 1055], "s_pwr_dict": [479, 1055], "sphidp_dict": [482, 1058], "compute_pow": [483, 487, 1059, 1063], "szdr_dict": [483, 1059], "phase_dict": [485, 1061], "pwr_dict": [486, 1062], "sdbz_dict": [487, 1063], "srhohv_dict": [488, 1064], "statist": [489, 490, 518, 1065, 1066, 1094, 1206, 1252], "fluctuat": [489, 490, 1065, 1066], "st1_dict": [489, 1065], "st1": [489, 1065], "st2_dict": [490, 1066], "st2": [490, 1066], "bukovc": [491, 1067], "winter": [491, 1067, 1271, 1289], "liquid": [491, 1067], "reveal": [491, 1067], "2dvd": [491, 1067], "oklahoma": [491, 1067, 1184], "56": [491, 1067, 1287, 1291], "1345": [491, 1067], "1363": [491, 1067, 1252], "along_azi": [492, 1068], "fixed_rang": [492, 1068], "fixed_azimuth": [492, 1068], "fixed_elev": [492, 1068], "rng_tol": [492, 1068], "value_start": [492, 1068], "value_stop": [492, 1068], "acoord": [492, 1068], "along_el": [492, 1068], "along_rng": [492, 1068], "stop": [492, 1068], "kw": [493, 1069], "vol_refl_dict": [493, 1069], "10log10": [493, 1069], "wide": [495, 1071], "wbn_dict": [495, 1071], "dx": [496, 511, 530, 1072, 1087, 1106, 1289], "dy": [496, 530, 1072, 1106, 1289], "level_m": [496, 1072], "always_core_thr": [496, 958, 1072, 1289], "42": [496, 530, 1072, 1106, 1287, 1289], "bkg_rad_km": [496, 1072, 1289], "use_cosin": [496, 958, 1072, 1289], "max_diff": [496, 958, 1072, 1289], "zero_diff_cos_v": [496, 958, 1072, 1289], "55": [496, 1072, 1283, 1287, 1289], "scalar_diff": [496, 958, 1072, 1289], "use_addit": [496, 958, 1072, 1289], "calc_thr": [496, 1072, 1289], "weak_echo_thr": [496, 1072, 1289], "min_dbz_us": [496, 1072, 1289], "db_averag": [496, 1072, 1289], "remove_small_object": [496, 1072, 1289], "min_km2_siz": [496, 1072, 1289], "val_for_max_conv_rad": [496, 1072, 1289], "max_conv_rad_km": [496, 1072, 1289], "cs_core": [496, 1072], "nosfcecho": [496, 1072, 1289], "weakecho": [496, 1072, 1289], "sf": [496, 1072, 1289], "conv": [496, 1072, 1289], "estimate_flag": [496, 1072, 1289], "estimate_offset": [496, 1072, 1289], "partit": [496, 530, 1072, 1106, 1254], "convect": [496, 530, 958, 1072, 1106, 1252, 1257, 1286, 1292], "stratiform": [496, 530, 958, 1072, 1106, 1252, 1257, 1286, 1292], "yuter": [496, 530, 958, 1072, 1106, 1227, 1271, 1289], "1997": [496, 958, 1072, 1289], "pars": [496, 1072, 1252], "classifi": [496, 518, 958, 1072, 1094, 1252, 1289, 1290], "cosin": [496, 958, 1072, 1289], "simpler": [496, 1072, 1289], "scalar": [496, 958, 1072, 1252, 1289], "eqn": [496, 958, 1072], "b1": [496, 958, 1072], "percentag": [496, 1072, 1229], "weak": [496, 1072, 1289], "underestim": [496, 1072, 1289], "wih": [496, 1072], "convsf_dict": [496, 1072, 1289], "raindrop": [496, 1072, 1289], "pacif": [496, 1072, 1289], "warm": [496, 521, 1072, 1097, 1289], "pool": [496, 1072, 1289], "implic": [496, 1072, 1289], "appl": [496, 523, 528, 530, 533, 1072, 1099, 1104, 1106, 1109, 1289, 1303], "meteor": [496, 523, 528, 530, 533, 1072, 1099, 1104, 1106, 1109, 1289, 1303], "36": [496, 1072, 1260, 1263, 1265, 1269, 1283, 1287, 1289, 1299], "847": [496, 1072, 1252, 1289], "867": [496, 1072, 1252, 1289], "doi": [496, 498, 518, 522, 523, 525, 1072, 1074, 1094, 1098, 1099, 1101, 1227, 1271, 1289, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "org": [496, 516, 1023, 1072, 1092, 1227, 1252, 1271, 1289, 1293, 1303], "1175": [496, 523, 525, 1072, 1099, 1101, 1252, 1289], "1520": [496, 1072, 1289], "0450": [496, 1072, 1289], "036": [496, 1072, 1289], "3c0847": [496, 1072, 1289], "morsdo": [496, 1072, 1289], "3e2": [496, 1072, 1289], "smith": [496, 1072, 1289], "wilheit": [496, 1072, 1289], "zipser": [496, 1072, 1289], "character": [496, 498, 530, 1072, 1074, 1106, 1289], "tropic": [496, 1072, 1289], "kwajex": [496, 1072, 1289], "385": [496, 1072, 1252, 1289], "415": [496, 1072, 1289], "jam2206": [496, 1072, 1289], "lapse_r": [497, 514, 518, 1073, 1090, 1094], "nsamples_max": [497, 1073], "prepar": [497, 1073, 1295, 1296, 1297, 1299, 1300, 1301], "refl_std": [497, 1073], "zdr_std": [497, 1073], "kdp_std": [497, 1073], "rhohv_std": [497, 1073], "relh_std": [497, 1073], "fill_valu": [498, 511, 521, 522, 523, 530, 1074, 1087, 1097, 1098, 1099, 1106, 1228, 1295, 1296, 1301], "ml_field": [498, 525, 526, 527, 1074, 1101, 1102, 1103], "ml_pos_field": [498, 525, 526, 527, 1074, 1101, 1102, 1103], "max_rang": [498, 1018, 1074], "detect_threshold": [498, 1074], "interp_hol": [498, 1074], "max_length_hol": [498, 1074], "check_min_length": [498, 1074], "get_iso0": [498, 525, 526, 527, 1074, 1101, 1102, 1103], "ml": [498, 525, 1074, 1101], "plai": [498, 1074, 1302], "sensit": [498, 1074], "erron": [498, 1074, 1297], "hole": [498, 1074], "ml_obj": [498, 525, 526, 527, 1074, 1101, 1102, 1103], "ml_dict": [498, 525, 526, 527, 1074, 1101, 1102, 1103], "iso0_dict": [498, 525, 526, 527, 1074, 1101, 1102, 1103], "all_ml": [498, 1074], "scipion": [498, 1074], "bern": [498, 518, 522, 1074, 1094, 1098], "q": [498, 1074, 1252], "meteorol": [498, 528, 1074, 1104, 1289], "soc": [498, 1074], "142": [498, 1074], "108": [498, 1074], "124": [498, 1074, 1291], "1002": [498, 1074, 1252], "qj": [498, 1074], "2672": [498, 1074], "niter": [499, 1075], "nvar": [499, 510, 1075, 1086], "medoids_arr": [499, 1075], "a_field": [500, 501, 504, 1076, 1077, 1080], "rr_field": [500, 501, 502, 503, 504, 505, 506, 1076, 1077, 1078, 1079, 1080, 1081, 1082], "diederich": [500, 1076], "tromel": [500, 528, 1076, 1104], "wavelenght": [500, 1076], "hydrometeorologi": [500, 1076], "487": [500, 1076, 1259], "502": [500, 1076, 1252], "alphazr": [501, 1077], "0376": [501, 503, 504, 505, 1077, 1079, 1080, 1081], "betazr": [501, 1077], "6112": [501, 503, 504, 505, 1077, 1079, 1080, 1081], "alphaz": [501, 504, 505, 1077, 1080, 1081], "betaz": [501, 504, 505, 1077, 1080, 1081], "alphaa": [501, 504, 1077, 1080], "betaa": [501, 504, 1077, 1080], "mp_factor": [501, 1077], "master_field": [501, 504, 505, 1077, 1080, 1081], "thresh_max": [501, 504, 505, 1077, 1080, 1081], "act": [501, 504, 505, 578, 1077, 1080, 1081, 1252, 1289, 1295], "master": [501, 504, 505, 1077, 1080, 1081, 1252, 1280, 1303], "slave": [501, 504, 505, 1077, 1080, 1081], "blend": [504, 505, 1080, 1081, 1279], "rain_mast": [504, 505, 1080, 1081], "alphakdp": [505, 1081], "betakdp": [505, 1081], "mm": [505, 1081, 1289], "polynomi": [506, 1082], "develop": [506, 1082, 1252, 1293, 1302, 1303], "mcgill": [506, 1082, 1293], "az_tol": [507, 1083, 1209], "wind_field": [507, 509, 1083, 1085], "windshear_field": [507, 1083], "windshear": [507, 1083], "npoints_min": [508, 1084], "azi_spacing_max": [508, 1084], "vel_diff_max": [508, 1084], "rad_vel_field": [508, 1084], "u_vel_field": [508, 1084], "v_vel_field": [508, 1084], "w_vel_field": [508, 1084], "vel_est_field": [508, 1084], "vel_std_field": [508, 1084], "vel_diff_field": [508, 1084], "vad": [508, 533, 534, 1084, 1109, 1110, 1252, 1257, 1286, 1292, 1303], "recomput": [508, 1084], "difer": [508, 1084], "vert_proj": [509, 1085], "neglig": [509, 1085], "v_r": [509, 1085], "v_el": [509, 1085], "v_az": [509, 1085], "perpendicular": [509, 1085], "v_h": [509, 1085], "know": [509, 1085, 1305], "hold": [509, 1085], "sonde_dset": [510, 1086], "time_kei": [510, 1086], "height_kei": [510, 1086], "vap": [510, 1086], "startard": [510, 1086], "ncvar": [510, 1086], "return_d": [510, 1086], "radar_spec": [511, 1087], "dem_grid": [511, 1087], "terrain_altitude_field": [511, 1087], "bent_terrain_altitude_field": [511, 1087], "terrain_slope_field": [511, 1087], "terrain_aspect_field": [511, 1087], "elevation_angle_field": [511, 1087], "visibility_field": [511, 1087], "min_vis_elevation_field": [511, 1087], "min_vis_altitude_field": [511, 1087], "incident_angle_field": [511, 1087], "effective_area_field": [511, 1087], "sigma_0_field": [511, 1087], "rcs_clutter_field": [511, 1087], "dbm_clutter_field": [511, 1087], "dbz_clutter_field": [511, 1087], "visibility_polar_field": [511, 1087], "az_conv": [511, 1087], "daz": [511, 1087], "012": [511, 1087], "atm_att": [511, 1087], "mosotti_kw": [511, 1087], "9644": [511, 1087], "raster_oversampl": [511, 1087], "sigma0_method": [511, 1087], "gabella": [511, 518, 1087, 1094], "clip": [511, 1087], "return_pyart_object": [511, 1087], "verbos": [511, 521, 538, 548, 549, 563, 564, 1087, 1097, 1252, 1303], "frequenti": [511, 1087], "ghz": [511, 1087], "tau": [511, 1087], "terrain": [511, 1087, 1268], "backscatt": [511, 521, 528, 1087, 1097, 1104], "incid": [511, 1087], "topographi": [511, 1087], "rx": [511, 1087], "equival": [511, 527, 1007, 1087, 1103, 1252, 1259, 1270, 1278, 1284], "One": [511, 1087, 1295, 1301, 1303, 1305], "clausiu": [511, 1087], "mosotti": [511, 1087], "materi": [511, 1087, 1293], "sigma": [511, 529, 1087, 1105, 1188, 1279, 1280], "naught": [511, 1087], "undefin": [511, 1087], "oversampl": [511, 1087], "delrieu": [511, 1087], "lot": [511, 1087], "directli": [511, 1087, 1268], "bent_terrain_altitude_d": [511, 1087], "terrain_slope_d": [511, 1087], "terrain_aspect_d": [511, 1087], "elevation_d": [511, 1087], "min_vis_elevation_d": [511, 1087], "min_vis_altitude_d": [511, 1087], "visibility_d": [511, 1087], "incident_angle_d": [511, 1087], "effective_area_d": [511, 1087], "sigma_0_d": [511, 1087], "rcs_clutter_d": [511, 1087], "dbm_clutter_d": [511, 1087], "dbz_clutter_d": [511, 1087], "visibility_polar_d": [511, 1087], "perona": [511, 1087], "1998": [511, 1087], "orograph": [511, 1087], "geometr": [511, 1087], "1485": [511, 1087], "1494": [511, 1087], "freq_band": [513, 1089], "temp_ref_field": [514, 1090], "heigh_over_iso0": [514, 1090], "iso0_ref": [514, 1090], "insuffici": [514, 1090], "rng_left_km": [515, 1091], "rng_right_km": [515, 1091], "ang": [515, 1091, 1279, 1280], "ang_r": [515, 1091], "ml_bottom": [515, 1091], "msl": [515, 525, 1091, 1101, 1229], "grid1": [516, 1092], "grid2": [516, 1092], "return_valu": [516, 1092], "displac": [516, 1092], "en": [516, 1092, 1293, 1302, 1303], "wikipedia": [516, 1092], "wiki": [516, 1023, 1092], "phase_correl": [516, 1092], "inspir": [516, 1092], "christoph": [516, 1092], "gohlk": [516, 1092], "lfd": [516, 1092], "uci": [516, 1092], "imreg": [516, 1092], "advect": [516, 517, 1092, 1093, 1252], "trim_edg": [517, 1093], "field_list": [517, 1009, 1093], "shifted_grid": [517, 1093], "subset": [517, 1093, 1252, 1257, 1286, 1287], "mass_cent": [518, 1094], "entropy_field": [518, 1094], "compute_entropi": [518, 1094], "output_dist": [518, 1094], "besic": [518, 526, 1094, 1102], "nclass": [518, 1094], "decai": [518, 1094], "entropi": [518, 1094], "fields_dict": [518, 1094], "figuera": [518, 1094, 1293, 1303], "ventura": [518, 1094, 1293, 1303], "grazioli": [518, 522, 1094, 1098, 1293, 1303], "germann": [518, 1094, 1293, 1303], "semi": [518, 1094], "supervis": [518, 1094], "mea": [518, 1094, 1227, 1271], "4425": [518, 1094], "4445": [518, 1094], "5194": [518, 1094, 1227, 1271], "amt": [518, 1094, 1227, 1271], "piecewis": [519, 520, 1095, 1096], "lenght": [519, 520, 1095, 1096], "kdp_dict": [519, 520, 521, 522, 523, 1095, 1096, 1097, 1098, 1099], "cg": [521, 1097], "clpf": [521, 1097], "length_scal": [521, 1097], "first_guess": [521, 1097], "finite_ord": [521, 1097], "variat": [521, 1097, 1252], "maesaka": [521, 1097], "2012": [521, 523, 1097, 1099], "monoton": [521, 524, 1097, 1100, 1268], "propag": [521, 522, 523, 1097, 1098, 1099], "notat": [521, 1097], "primari": [521, 1097], "proport": [521, 1097], "analys": [521, 522, 523, 1097, 1098, 1099], "nonlinear": [521, 1097], "conjug": [521, 1097], "gradient": [521, 1097, 1252, 1268], "broyden": [521, 1097], "fletcher": [521, 1097], "goldfarb": [521, 1097], "shanno": [521, 1097], "bfg": [521, 1097], "howev": [521, 1097, 1297], "100k": [521, 1097], "parameter": [521, 1097], "attentu": [521, 1097], "constraint": [521, 1097], "bring": [521, 1097], "guess": [521, 1097], "root": [521, 1097, 1302, 1305], "signifi": [521, 530, 1097, 1106], "everywher": [521, 1097], "exactli": [521, 1097, 1263], "avoid": [521, 1097, 1252, 1305], "converg": [521, 1097], "closer": [521, 1097], "finit": [521, 1097], "accuraci": [521, 1097], "maxit": [521, 1097], "met": [521, 1097], "achiev": [521, 1097], "somewhat": [521, 1097], "thread": [521, 1097], "cpu": [521, 1097], "multiprocess": [521, 1097], "capabl": [521, 1097, 1297, 1301], "relev": [521, 1097], "phidpf_dict": [521, 1097], "phidpr_dict": [521, 522, 523, 1097, 1098, 1099], "forward": [521, 1097, 1219, 1220], "iwanami": [521, 1097], "maki": [521, 1097], "seventh": [521, 1097], "european": [521, 1097], "confer": [521, 1097], "hydrologi": [521, 1097], "rcov": [522, 1098], "pcov": [522, 1098], "prefilter_psidp": [522, 523, 1098, 1099], "filter_opt": [522, 523, 1098, 1099], "kalman": [522, 1098], "schneeb": [522, 1098], "psidp": [522, 523, 1098, 1099], "char": [522, 523, 1098, 1099], "capit": [522, 523, 1098, 1099], "intercept": [522, 1098], "3x3": [522, 1098], "covari": [522, 1098], "4x4": [522, 1098], "filter_psidp": [522, 523, 1098, 1099, 1252], "enabl": [522, 523, 1098, 1099, 1252], "everi": [522, 523, 533, 576, 1098, 1099, 1109, 1293], "kdp_std_dict": [522, 1098], "dev": [522, 1098, 1299, 1303], "ensembl": [522, 1098], "ieee": [522, 1098], "geosci": [522, 1098], "remot": [522, 1098, 1252, 1259, 1303], "sen": [522, 1098], "52": [522, 528, 1098, 1104, 1287], "5137": [522, 1098], "5149": [522, 1098], "1109": [522, 1098, 1252], "tgr": [522, 1098], "2287017": [522, 1098], "windsiz": [523, 1099], "n_iter": [523, 1099], "interp": [523, 1099], "vulpiani": [523, 1099, 1252], "pre": [523, 1099, 1252], "ex": [523, 1099, 1268, 1303], "advantag": [523, 1099], "eat": [523, 1099], "gianfranco": [523, 1099], "mario": [523, 1099], "montopoli": [523, 1099], "luca": [523, 1099], "delli": [523, 1099], "passeri": [523, 1099], "antonio": [523, 1099], "gioia": [523, 1099], "pietro": [523, 1099], "giordano": [523, 1099], "frank": [523, 1099], "marzano": [523, 1099], "On": [523, 1099], "dual": [523, 1099, 1252], "mountain": [523, 1099], "climatol": [523, 1099, 1289], "51": [523, 1099, 1287], "405": [523, 1099, 1252], "425": [523, 1099, 1252], "05024": [523, 1099], "profile_field": [524, 1100], "height_field": [524, 1100], "3re": [524, 1100], "whole": [524, 1100, 1252], "height_dict": [524, 1100], "profile_dict": [524, 1100], "nvol": [525, 1101], "maxh": [525, 1101], "rhomin": [525, 1101], "rhomax": [525, 1101], "94": [525, 1101, 1301], "zhmin": [525, 1101], "hwindow": [525, 1101], "mlzhmin": [525, 1101], "mlzhmax": [525, 1101], "mlzdrmin": [525, 1101], "mlzdrmax": [525, 1101], "htol": [525, 1101], "ml_bottom_diff_max": [525, 1101], "time_accu_max": [525, 1101], "1800": [525, 1101, 1295], "nml_points_min": [525, 1101], "wlength": [525, 1101], "percentile_bottom": [525, 1101], "percentile_top": [525, 1101], "time_nodata_allow": [525, 1101], "3600": [525, 1101, 1295], "ml_global": [525, 1101], "aggreg": [525, 527, 1101, 1103, 1290], "ml_bottom_dif_max": [525, 1101], "percentil": [525, 1101], "stack": [525, 1101, 1302, 1303], "Its": [525, 1101], "kraus": [525, 1101], "design": [525, 1101, 1227, 1279, 1289, 1303], "prototyp": [525, 1101], "clim": [525, 528, 1101, 1104], "1354": [525, 1101], "1364": [525, 1101], "2007jamc1634": [525, 1101], "force_continu": [526, 1102], "dist_max": [526, 1102], "350": [526, 1102, 1287], "heightand": [526, 1102], "1400": [527, 1103], "4500": [527, 1103, 1295], "ns_factor": [527, 1103], "rhohv_corr_min": [527, 1103], "rhohv_nash_min": [527, 1103], "ang_iso0": [527, 1103], "age_iso0": [527, 1103], "ml_thickness_iso0": [527, 1103], "ml_memori": [527, 1103], "rhohv_field_ob": [527, 1103], "rhohv_field_theo": [527, 1103], "nse": [527, 1103], "hour": [527, 1103, 1259, 1260], "ml_found_obj": [527, 1103], "instantan": [527, 1103, 1252], "desired_angl": [528, 1104, 1252], "wanted_angl": [528, 1104], "dictonari": [528, 1104], "troemel": [528, 1104], "2529": [528, 1104], "2548": [528, 1104], "54": [528, 1104, 1260, 1291], "2344": [528, 1104], "2359": [528, 1104], "submit": [528, 1104, 1293], "technol": [528, 1104], "fm": [529, 1105], "rg": [529, 531, 1105, 1107], "nbin": [529, 1105, 1252], "110": [529, 1105], "pdf_zh_max": [529, 1105], "pdf_relh_max": [529, 1105], "sigma_zh": [529, 1105], "sigma_relh": [529, 1105], "random": [529, 531, 1105, 1107], "platykurtic_dbz": [529, 1105], "platykurtic_h_iso0": [529, 1105], "nfeatur": [529, 1105], "histogram": [529, 1105, 1263, 1297], "platykurtik": [529, 1105], "guassian": [529, 1105], "quantiz": [529, 1105], "platykurt": [529, 1105], "fm_sampl": [529, 1105], "intens": [530, 1106], "work_level": [530, 1106], "peak_rel": [530, 1106], "area_rel": [530, 1106], "medium": [530, 1106], "bkg_rad": [530, 1106], "11000": [530, 1106, 1299], "use_intens": [530, 1106], "steiner": [530, 1106, 1252, 1289], "1995": [530, 1106, 1289], "greater": [530, 1106, 1289], "bright": [530, 1106], "sgp": [530, 1106, 1184], "peaked": [530, 1106], "eclass": [530, 1106], "climatolog": [530, 1106, 1289], "gaug": [530, 1106, 1289], "1978": [530, 1106, 1289], "2007": [530, 1106, 1289], "par_var": [531, 1107], "probabl": [531, 1107, 1222, 1223, 1224, 1236], "membership": [531, 1107], "synthetic_ob": [531, 1107], "z_want": [533, 534, 1109, 1110, 1291, 1303], "valid_ray_min": [533, 1109, 1303], "brown": [533, 1109, 1252, 1303], "amount": [533, 1109, 1299, 1303], "_averag1d": [533, 1109, 1303], "idw": [533, 1109], "wexler": [533, 1109, 1303], "1968": [533, 1109, 1303], "kinemat": [533, 1109, 1303], "105": [533, 1109, 1291, 1303], "113": [533, 1109, 1287, 1303], "linespac": [534, 1110], "michelson": [534, 1110], "andersson": [534, 1110], "koistinen": [534, 1110], "collier": [534, 1110], "riedl": [534, 1110], "szturc": [534, 1110], "gjertsen": [534, 1110], "nielsen": [534, 1110], "overgaard": [534, 1110], "baltex": [534, 1110], "centr": [534, 1110], "smhi": [534, 1110], "swedish": [534, 1110], "meteorolog": [534, 1023, 1110], "hydrolog": [534, 1110], "institut": [534, 1110, 1301], "norrkop": [534, 1110], "statu": [535, 1303], "dependeci": 535, "sy": 535, "descript": [536, 578, 580, 592, 674, 745, 746, 783, 959, 982, 1006, 1019, 1111, 1196, 1244, 1293, 1303], "polish": 536, "risk": 536, "bug": [536, 1293, 1302, 1303], "prioriti": [536, 1305], "momentpm": 538, "momentm": 538, "share": 538, "extra": [538, 548, 549, 563, 564, 1252], "momentspm": 538, "momentsm": 538, "metranet_lib": 538, "keep_all_rai": 548, "physic_valu": [548, 549, 563, 564], "masked_arrai": [548, 549, 563, 564, 1295, 1301], "duplic": 548, "ret_data": [548, 549, 563, 564], "radardata": [548, 549, 563, 564], "reorder_angl": 549, "reorder": 549, "properli": [563, 564, 1250, 1260], "cpi_head": 565, "3d": 567, "sinarame_h5": [572, 576, 1252], "folder": [576, 1303], "commun": [578, 1303, 1305], "interact": 592, "az_data": 723, "az_ref": 723, "el_data": 723, "el_ref": 723, "sunhit": [723, 732], "npar": [723, 732], "do_elcorr": 723, "radian": [723, 1197, 1199, 1240], "concret": 996, "__getitem__": 996, "__setitem__": 996, "__delitem__": 996, "__iter__": 996, "__len__": 996, "robust": 1006, "src_radar": 1007, "dest_radar": 1007, "distance_toler": [1007, 1263], "gatefilter_src": [1007, 1263], "time_toler": [1007, 1263], "kd": 1007, "easi": [1007, 1023, 1293], "src_radar_i": 1007, "src_radar_x": 1007, "destin": [1007, 1009, 1263], "src_radar_tim": 1007, "dest_radar_tim": 1007, "gate_mapp": 1007, "src": 1007, "dest": 1007, "dest_index": 1007, "radar_map": 1007, "mapped_radar": [1007, 1263], "adequ": [1007, 1263], "getter": [1008, 1010], "earth_radiu": 1014, "radar_sweep": 1018, "cart_r": 1018, "dictionnari": 1018, "sever": [1018, 1252], "signific": 1018, "coord": [1018, 1270], "cart_data": 1018, "am": [1023, 1293, 1303], "glossari": 1023, "dry": [1023, 1290], "world": [1023, 1257, 1267], "aloft": 1023, "oppos": [1023, 1271], "nwp": [1023, 1290], "why": [1023, 1303], "think": 1023, "turn": [1023, 1268, 1289, 1293], "spin": 1023, "author": [1023, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291], "randi": 1023, "chase": 1023, "dopplerchas": [1023, 1252], "american": 1023, "2022": [1023, 1227, 1259, 1271, 1289, 1303], "ametsoc": 1023, "suffix": 1122, "tmp": 1122, "temporari": [1122, 1252], "my_cwd": 1122, "getcwd": 1122, "tmpdir": 1122, "_": [1122, 1259, 1260, 1290], "txt": [1122, 1252, 1302], "wt": 1122, "assert": [1122, 1252, 1303], "isfil": 1122, "path_to_fil": 1183, "local": [1183, 1217, 1222, 1226, 1252, 1293, 1302, 1303], "site": [1184, 1254, 1259, 1260, 1287, 1296, 1299, 1302], "radarspectra": [1187, 1228, 1242], "mu": 1188, "sapr": 1189, "dp_phase_shift": [1189, 1287, 1295], "diff_phas": [1189, 1295], "differential_reflect": [1189, 1259, 1272, 1279, 1300, 1301], "rectangular": [1190, 1191], "miscellan": 1196, "depreci": [1196, 1252], "caution": 1196, "std": [1199, 1200, 1231, 1243], "convolut": 1201, "ndimag": [1201, 1252, 1279, 1280], "generic_filt": 1201, "pi": [1201, 1297], "std_dev": 1201, "radar1": [1202, 1203, 1229, 1237], "radar2": [1202, 1203, 1229, 1237], "h_tol": [1202, 1229], "coloc_gates_field": [1202, 1203], "coloc": [1202, 1203], "coloc_dict": [1202, 1203], "azi": [1202, 1203, 1218], "coloc_rad1": [1202, 1203], "distance_upper_bound": 1203, "neighbour": [1203, 1218], "ckdtree": 1203, "bound": 1203, "lin_tran": 1204, "span": 1204, "consdier": 1204, "vec1": [1205, 1207], "vec2": [1205, 1207], "pearson": 1205, "corr": [1205, 1207], "stat": [1206, 1252], "nvalid": 1206, "arr1": 1207, "arr2": 1207, "obs_data": 1208, "mod_data": 1208, "nash": 1208, "sutcliff": 1208, "nash_coeff": 1208, "target_elev": [1210, 1225], "el_tol": [1210, 1225], "radar_ppi": 1210, "epoch": [1211, 1212, 1213, 1214, 1215], "articl": 1216, "var": [1216, 1217, 1248, 1249], "nnois": [1216, 1217], "pwr_w_rai": 1217, "pct": [1217, 1223, 1235], "270436": 1217, "flat_reg_wlen": [1217, 1222, 1233], "flat_reg_var_max": [1217, 1233, 1234], "439551": 1217, "snr_thr": [1217, 1224], "769572": 1217, "ngates_final_min": 1217, "ngates_median": 1217, "83": 1217, "decibel": 1217, "flat": [1217, 1222, 1233, 1234, 1259], "inds_rai": 1217, "inds_ray_aux": 1218, "ind_rng_aux": 1218, "target_latitud": [1219, 1245], "target_longitud": [1219, 1245], "bear": 1219, "alongitudeg": 1219, "great": [1219, 1245], "circl": [1219, 1245, 1289], "known": [1219, 1252, 1301, 1303], "6371000": [1219, 1245], "calculatitude": 1219, "degress": [1219, 1245], "sphere_dist": 1221, "for_azimuth": 1221, "get_column_rai": 1221, "xarari": 1221, "prob_thr": [1222, 1223], "var_thr": 1222, "0001": 1223, "pct_out": 1223, "pfa_thr": 1224, "alarm": [1224, 1236], "xwind": 1226, "ywind": 1226, "win_std": 1226, "mute_field": [1227, 1271], "mute_threshold": [1227, 1271], "field_threshold": [1227, 1271], "discern": 1227, "mute": [1227, 1252, 1257, 1267, 1285, 1289], "tomkin": [1227, 1271, 1289], "miller": [1227, 1271], "allen": [1227, 1271], "identif": [1227, 1271], "5515": [1227, 1271], "5525": [1227, 1271], "kind": [1228, 1244, 1254], "psr_interp": 1228, "vol_d_tol": 1229, "vismin": 1229, "azmin": 1229, "azmax": 1229, "visib_field": 1229, "intersec_field": 1229, "regard": [1229, 1252], "decim": 1229, "diamet": 1229, "intersec_rad1_dict": 1229, "interval_min": [1230, 1231], "interval_max": [1230, 1231], "endpoint": [1230, 1231], "to_vpt": 1232, "verticl": 1232, "prescrib": 1233, "ivic_flat_reg_wind_len": 1233, "throw": [1235, 1236, 1252], "pfa": [1235, 1236], "1e": [1235, 1236, 1295, 1301], "matlab": 1235, "get_ivic_pct": 1235, "particularli": 1235, "pct_tabl": 1235, "snr_thr_out": 1236, "coerce_angl": 1237, "slightli": [1237, 1270], "slight": 1237, "misposit": 1237, "spectra1": 1238, "spectra2": 1238, "tup": 1239, "guarante": 1239, "broadcast": 1239, "broadcasted_arrai": 1239, "angles1": 1240, "angles2": 1240, "angle1": 1241, "angle2": 1241, "eg": 1243, "ma": [1243, 1263, 1264, 1289, 1296, 1300, 1303], "sim_vel_field": 1244, "slinear": 1244, "quadrat": 1244, "cubic": 1244, "interp1d": [1244, 1303], "sim_vel": [1244, 1303], "coverag": [1246, 1247, 1252], "11pt": 1248, "stdev": 1248, "texarrai": 1248, "pyradarobj": 1248, "tex": 1249, "single_scan": 1250, "is_vpt": 1250, "mislabel": 1250, "releas": [1251, 1293, 1296, 1299, 1302, 1303], "jul": 1251, "2023": 1251, "guid": [1251, 1252, 1293], "broken": [1251, 1252], "lint": 1252, "1407": 1252, "mgrover1": 1252, "readm": [1252, 1302], "1397": 1252, "xradar": 1252, "1417": 1252, "1416": 1252, "blog": 1252, "post": [1252, 1293], "visual": [1252, 1268, 1271, 1279, 1287], "wisconsin": 1252, "1413": 1252, "accessor": 1252, "1411": 1252, "1409": 1252, "plot_ppi_map": [1252, 1259, 1260, 1263, 1270, 1276, 1287, 1296, 1297, 1300], "1401": 1252, "joshua": 1252, "hampton": 1252, "del": [1252, 1270], "old": 1252, "conda_recip": 1252, "1399": 1252, "ci": 1252, "zssherman": 1252, "page": 1252, "enh": 1252, "ruff": 1252, "1388": 1252, "wrong": 1252, "1390": 1252, "1385": 1252, "jrobrien91": 1252, "1383": 1252, "mnt": 1252, "1392": 1252, "drop": 1252, "pkg_resourc": 1252, "runtim": 1252, "1394": 1252, "neutrinocero": 1252, "mail": [1252, 1293, 1303], "1393": 1252, "codeown": 1252, "1391": 1252, "1384": 1252, "kmuehlbauer": 1252, "1382": 1252, "gatemapp": [1252, 1257, 1262, 1266], "api": 1252, "1379": 1252, "mismatch": 1252, "shade": 1252, "1381": 1252, "wrap": 1252, "get_gate_area": 1252, "1375": 1252, "wheel": 1252, "1380": [1252, 1295], "1372": 1252, "exec_modul": 1252, "load_modul": 1252, "1369": 1252, "badg": 1252, "read_sigmet": 1252, "1351": 1252, "zouihao": 1252, "unus": 1252, "1343": 1252, "rcjackson": 1252, "cookbook": [1252, 1293, 1304], "1342": 1252, "range_step": 1252, "1338": 1252, "max_num_g": 1252, "1337": 1252, "1327": 1252, "revert": 1252, "setuptool": 1252, "unwant": 1252, "cleanup": 1252, "And": 1252, "1357": 1252, "1355": 1252, "1339": 1252, "lauratomkin": 1252, "1361": 1252, "commit": [1252, 1303], "hook": 1252, "black": [1252, 1269, 1287], "1341": 1252, "spc": 1252, "hail": [1252, 1290], "1335": 1252, "manipul": [1252, 1270, 1294], "1300": 1252, "dopplershift": 1252, "kylejgillett": 1252, "melovato": 1252, "notebook": [1252, 1254, 1255, 1257, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1296, 1299, 1300, 1303, 1305], "app": 1252, "tsbiscaro": 1252, "1324": 1252, "1319": 1252, "1314": 1252, "add_filt": 1252, "1326": 1252, "1320": [1252, 1295], "1325": 1252, "jthielen": 1252, "1303": 1252, "jjhelmu": [1252, 1305], "wx4stg": 1252, "antiviru": 1252, "workflow": 1252, "similiar": 1252, "adam": 1252, "1307": 1252, "1299": 1252, "convolve1d": 1252, "1313": 1252, "1306": 1252, "1317": 1252, "wolfidan": 1252, "1311": 1252, "jfigui": 1252, "citat": [1252, 1271], "1304": 1252, "gamaanderson": 1252, "hhuangwx": 1252, "josephhardine": 1252, "mdr": 1252, "ngui": 1252, "scolli": 1252, "tjlang": 1252, "1294": 1252, "1290": 1252, "1285": 1252, "toggl": [1252, 1259], "1279": 1252, "backward": 1252, "1278": 1252, "1284": 1252, "tracer": 1252, "1296": 1252, "1292": 1252, "1287": 1252, "cibuildwheel": 1252, "1267": 1252, "ocefpaf": 1252, "packag": [1252, 1254, 1259, 1260, 1293, 1296, 1299, 1302, 1303, 1305], "1275": 1252, "1276": 1252, "1265": 1252, "dcedgren": 1252, "jilling": 1252, "zhaobudaola": 1252, "1263": 1252, "1235": 1252, "1215": 1252, "columnsect": [1252, 1287], "1261": 1252, "1241": 1252, "pin": 1252, "1240": 1252, "gatefi": 1252, "1226": 1252, "join_radar": 1252, "repititon": 1252, "iparam": 1252, "1218": 1252, "1216": 1252, "trmm_rsl": 1252, "1239": 1252, "cftime": 1252, "1211": 1252, "incorrect": [1252, 1297], "1231": 1252, "ci_setup": 1252, "1213": 1252, "1264": 1252, "basic": [1252, 1293, 1294, 1296], "1251": 1252, "1234": 1252, "1228": 1252, "subset_radar": 1252, "radar_util": 1252, "1227": 1252, "pyrad": [1252, 1293, 1303], "1220": 1252, "tst": 1252, "1214": 1252, "srbrodzik": 1252, "1208": 1252, "1204": 1252, "1201": [1252, 1259], "1198": 1252, "1196": 1252, "catch": 1252, "1191": 1252, "main": [1252, 1274, 1303], "1207": 1252, "pypi": 1252, "1206": 1252, "unitest": 1252, "1200": [1252, 1295], "1199": 1252, "echoclass": 1252, "1197": 1252, "delet": [1252, 1270, 1303], "convv": 1252, "awhil": 1252, "back": 1252, "1195": 1252, "1190": 1252, "dp": 1252, "1184": 1252, "solver": [1252, 1293], "1183": 1252, "1176": 1252, "1187": 1252, "revis": 1252, "270": [1252, 1284, 1303], "1185": 1252, "1181": 1252, "suit": [1252, 1299, 1303], "1178": 1252, "1171": 1252, "1180": 1252, "1177": 1252, "1173": 1252, "sobitp59": 1252, "rogu": 1252, "1170": 1252, "1160": 1252, "1152": 1252, "1151": 1252, "mispel": 1252, "1158": 1252, "1148": 1252, "1167": 1252, "galleri": [1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293], "1154": 1252, "unittest": 1252, "1153": 1252, "scm": [1252, 1303], "1136": 1252, "trigger": 1252, "1126": 1252, "action": 1252, "1118": 1252, "1115": 1252, "abil": [1252, 1293, 1305], "1111": 1252, "maco": 1252, "1147": 1252, "prune": 1252, "1143": 1252, "linux": [1252, 1293, 1303, 1305], "1141": 1252, "1140": [1252, 1295], "1139": 1252, "1137": 1252, "1131": 1252, "1130": 1252, "push": [1252, 1303], "1129": 1252, "1128": 1252, "1127": 1252, "1125": 1252, "1124": 1252, "1123": 1252, "1120": 1252, "1119": 1252, "dpr": 1252, "1116": 1252, "typo": 1252, "postcard": 1252, "1104": 1252, "1103": 1252, "1122": 1252, "gridmapdisplai": [1252, 1257, 1267, 1269, 1285, 1289, 1299], "1100": 1252, "pytz": 1252, "1099": 1252, "quick": [1252, 1259], "few": [1252, 1305], "jupyt": [1252, 1254, 1255, 1257, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1305], "1146": 1252, "contribut": [1252, 1303, 1304], "pull": [1252, 1260, 1293, 1303], "1106": 1252, "1133": 1252, "aw": [1252, 1257, 1258, 1260, 1261], "1117": 1252, "1113": 1252, "submodul": [1252, 1293, 1299], "setup": [1252, 1259, 1263, 1268, 1269, 1274, 1287, 1293, 1302], "1110": 1252, "forgotten": 1252, "1108": 1252, "test_echo_class": 1252, "1107": 1252, "1101": 1252, "1098": 1252, "1097": 1252, "1094": 1252, "mac": [1252, 1293], "1080": [1252, 1295], "registri": 1252, "1087": 1252, "1096": 1252, "1093": 1252, "1090": 1252, "plt": [1252, 1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1295, 1296, 1297, 1299, 1300], "1089": 1252, "1088": 1252, "1085": 1252, "1084": 1252, "analyt": 1252, "1081": 1252, "1079": 1252, "1077": 1252, "pmi": 1252, "log": 1252, "csp": 1252, "1018": 1252, "ritvj": 1252, "doesn": [1252, 1295], "mandat": 1252, "1014": 1252, "reallynicegui": 1252, "hasattr": 1252, "1034": 1252, "overlap": [1252, 1270, 1279], "mapdisplai": 1252, "1029": 1252, "azimuth_rhi_plot": 1252, "1025": 1252, "1019": 1252, "rxm25": 1252, "1075": 1252, "panda": [1252, 1305], "1064": 1252, "mute_radar": 1252, "1033": 1252, "scan_nam": 1252, "1030": 1252, "radxgrid": 1252, "1027": 1252, "1026": 1252, "roadmap": 1252, "repo": 1252, "1059": 1252, "1043": 1252, "dep": 1252, "1032": 1252, "sidebar": 1252, "1074": 1252, "datetime_util": 1252, "1072": 1252, "rxm": 1252, "1071": 1252, "rtanamachi": 1252, "pydata": 1252, "theme": 1252, "1069": 1252, "adc": 1252, "1068": 1252, "1067": 1252, "1066": 1252, "subplot": [1252, 1259, 1263, 1268, 1269, 1270, 1282, 1287, 1288, 1289, 1290, 1291, 1297], "1063": 1252, "codecov": 1252, "1061": 1252, "1060": 1252, "1058": 1252, "1056": 1252, "1055": 1252, "now": [1252, 1260, 1263, 1268, 1270, 1287, 1289, 1295, 1297, 1302], "1053": 1252, "1051": 1252, "1050": 1252, "1048": 1252, "branch": [1252, 1303, 1305], "1040": 1252, "1039": 1252, "1038": 1252, "1031": 1252, "approxim": 1252, "geometri": 1252, "1024": 1252, "1020": [1252, 1295], "humphreyscart": 1252, "tkralph": 1252, "1003": 1252, "997": 1252, "incompat": 1252, "1007": 1252, "1001": 1252, "param": 1252, "995": 1252, "handl": 1252, "1010": 1252, "travi": 1252, "sty": [1252, 1303], "pep8": [1252, 1303], "1009": 1252, "1005": 1252, "988": 1252, "quba1": 1252, "984": 1252, "tdwr": 1252, "969": [1252, 1287, 1292], "copy_field_dtyp": 1252, "mapper": 1252, "956": 1252, "994": 1252, "979": 1252, "h5py": [1252, 1293], "978": 1252, "june1st": 1252, "switch": [1252, 1303], "989": 1252, "973": 1252, "maint": [1252, 1303], "966": 1252, "991": 1252, "983": 1252, "amarouan": 1252, "abdelhak": 1252, "bmgxyz": 1252, "address": 1252, "962": 1252, "mwilson14": 1252, "963": 1252, "nonetyp": 1252, "959": 1252, "config": [1252, 1295, 1305], "964": 1252, "176": 1252, "919": 1252, "rda": 1252, "19": [1252, 1259, 1261, 1291, 1301], "903": 1252, "add_gate_area": 1252, "950": 1252, "blotchi": 1252, "947": 1252, "946": 1252, "944": 1252, "694": 1252, "938": 1252, "vlouf": 1252, "934": 1252, "925": 1252, "feet": 1252, "924": 1252, "917": [1252, 1284, 1285], "appveyor": [1252, 1303], "937": 1252, "927": 1252, "liter": 1252, "said": 1252, "949": 1252, "948": 1252, "929": 1252, "926": 1252, "920": 1252, "adamtheisen": 1252, "915": 1252, "911": 1252, "grwise1": 1252, "jsignel": 1252, "rumpki": 1252, "broke": 1252, "913": 1252, "msg29": 1252, "909": 1252, "907": 1252, "mpl": [1252, 1259, 1290, 1296, 1299], "framework": [1252, 1293, 1303], "910": 1252, "912": 1252, "sphinx": [1252, 1254, 1255, 1257, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291], "napoleon": 1252, "902": [1252, 1274, 1285], "rtd": 1252, "893": 1252, "892": 1252, "odimh5": 1252, "898": 1252, "h5": 1252, "895": 1252, "896": 1252, "864": 1252, "louiswick": 1252, "hilderbrand": 1252, "877": 1252, "geo": 1252, "lambert": 1252, "886": 1252, "crash": 1252, "878": 1252, "891": 1252, "zflamig": 1252, "futur": [1252, 1303], "890": 1252, "889": 1252, "885": 1252, "dstex": 1252, "forg": [1252, 1293, 1302, 1303, 1305], "880": 1252, "soon": 1252, "2020": [1252, 1271, 1293, 1302, 1303], "879": 1252, "plot_grid": [1252, 1269, 1283, 1289, 1299], "to_xarrai": 1252, "873": 1252, "876": 1252, "elementwis": 1252, "statement": [1252, 1303], "anaconda": [1252, 1293, 1302, 1303], "faq": 1252, "868": 1252, "mvanlierwalq": 1252, "848": 1252, "grid_io": 1252, "846": 1252, "jhemedin": 1252, "get_gate_lat_lon_alt": 1252, "841": 1252, "865": 1252, "homeyerrainbow": [1252, 1268], "856": 1252, "840": [1252, 1295], "caus": 1252, "852": 1252, "849": 1252, "get_dataset": 1252, "845": 1252, "docstr": 1252, "838": 1252, "836": 1252, "cheatsheet": 1252, "fortran": 1252, "bit": [1252, 1302], "environ": [1252, 1293, 1302, 1304], "contr": 1252, "843": 1252, "spell": 1252, "835": 1252, "read_d3r_gcpex_nc": 1252, "842": 1252, "eccc": 1252, "837": 1252, "taylbm": 1252, "kenkeho": 1252, "swnesbitt": 1252, "827": 1252, "env": [1252, 1254, 1259, 1260, 1293, 1296, 1299, 1305], "822": 1252, "806": 1252, "term": 1252, "804": 1252, "778": 1252, "773": 1252, "688": [1252, 1287], "incomplet": 1252, "msg5": 1252, "832": 1252, "820": 1252, "812": 1252, "deal": 1252, "809": 1252, "contiuum": 1252, "gh": 1252, "795": 1252, "explicit": 1252, "py2": 1252, "790": 1252, "sh": 1252, "kai": 1252, "muehlbauer": 1252, "789": 1252, "777": 1252, "indexerror": 1252, "check_outli": 1252, "776": 1252, "juhi24": 1252, "770": 1252, "imp": 1252, "newer": [1252, 1302], "675": 1252, "824": 1252, "minu": 1252, "803": 1252, "738": 1252, "799": 1252, "mention": [1252, 1303, 1305], "792": 1252, "graph": [1252, 1254, 1255, 1259, 1260, 1263, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1295, 1296, 1297, 1299, 1300], "favor": 1252, "791": 1252, "786": 1252, "784": 1252, "itself": [1252, 1301], "inc": 1252, "794": 1252, "rst": 1252, "preformat": 1252, "779": 1252, "eaxmpl": 1252, "834": 1252, "833": 1252, "elsewher": 1252, "831": 1252, "828": 1252, "821": 1252, "pytest": [1252, 1293, 1302, 1303], "818": 1252, "atteun": 1252, "817": 1252, "simulated_veloc": [1252, 1300], "802": 1252, "grab": [1252, 1282], "801": 1252, "796": 1252, "793": 1252, "787": 1252, "783": 1252, "781": 1252, "balanc": [1252, 1268], "cvd": 1252, "friendli": [1252, 1268], "775": 1252, "774": 1252, "769": 1252, "nl2": 1252, "765": 1252, "miaoneng": 1252, "gewitterblitz": 1252, "liliaow567": 1252, "764": 1252, "coveral": 1252, "767": 1252, "messsag": 1252, "761": 1252, "757": 1252, "set_raster": 1252, "748": 1252, "754": 1252, "755": 1252, "recompil": 1252, "758": 1252, "ngoldbaum": 1252, "reciev": 1252, "752": 1252, "maskedarrai": [1252, 1254], "gate_id": [1252, 1300], "749": 1252, "750": 1252, "746": 1252, "744": 1252, "zxdawn": 1252, "netcdftim": 1252, "736": 1252, "731": 1252, "dot_product": 1252, "726": 1252, "729": 1252, "def": [1252, 1268, 1303], "test_rhi_elev": 1252, "twice": 1252, "724": 1252, "728": 1252, "727": 1252, "nosetest": 1252, "715": 1252, "vradh": 1252, "vradv": 1252, "quantiti": 1252, "739": 1252, "es5nhc": 1252, "735": 1252, "wave100": 1252, "734": 1252, "733": 1252, "730": 1252, "wradlib": [1252, 1293], "723": 1252, "comp": 1252, "721": 1252, "cameron": 1252, "homey": 1252, "716": 1252, "cameronhomey": 1252, "jamessong": 1252, "winash12": 1252, "687": 1252, "csnardi": 1252, "645": 1252, "docbuild": 1252, "failur": 1252, "709": 1252, "mhpicel": 1252, "let": [1252, 1259, 1260, 1263, 1268, 1270, 1287, 1289, 1295, 1297, 1299, 1300, 1301, 1303, 1305], "705": 1252, "fromstr": 1252, "704": 1252, "692": 1252, "651": 1252, "email": 1252, "711": 1252, "calculate_velocity_textur": [1252, 1297], "retreiv": 1252, "672": 1252, "notic": [1252, 1263, 1270], "bucket": [1252, 1259], "673": 1252, "653": 1252, "638": 1252, "635": 1252, "frombuff": 1252, "702": 1252, "minor": [1252, 1296, 1299], "grid_mapp": 1252, "707": 1252, "706": 1252, "goharkai": 1252, "infinit": 1252, "693": 1252, "freemansw1": 1252, "683": 1252, "674": 1252, "668": 1252, "jhelmu": [1252, 1254, 1255, 1264, 1265, 1272, 1273, 1275, 1277, 1281, 1284], "contact": 1252, "land": 1252, "667": [1252, 1295], "665": 1252, "662": 1252, "661": 1252, "attributeerror": 1252, "656": 1252, "oserror": 1252, "overflowerror": 1252, "too": 1252, "648": 1252, "happier": 1252, "647": 1252, "639": 1252, "634": [1252, 1285], "620": 1252, "itsjm": 1252, "kirknorth": 1252, "617": 1252, "616": 1252, "631": 1252, "swap": 1252, "plot_rai": 1252, "618": 1252, "_get_angl": 1252, "613": 1252, "607": 1252, "linspac": [1252, 1268, 1271, 1289, 1295, 1303], "603": [1252, 1271, 1285], "627": 1252, "623": 1252, "596": 1252, "595": 1252, "632": 1252, "630": 1252, "625": 1252, "tulipasilva": 1252, "622": 1252, "normbw": 1252, "quit": [1252, 1293], "614": 1252, "git": [1252, 1293, 1302, 1303, 1305], "611": 1252, "writer": [1252, 1293], "sinaram": 1252, "608": 1252, "mrugna": 1252, "605": 1252, "bld": 1252, "kludg": 1252, "604": 1252, "acknowledg": 1252, "602": 1252, "qpe": 1252, "598": 1252, "mustafaalicelik": 1252, "580": 1252, "577": 1252, "576": 1252, "575": 1252, "546": 1252, "unpickl": 1252, "543": 1252, "vcp": 1252, "541": 1252, "noaaport": 1252, "seper": 1252, "540": [1252, 1295], "521": 1252, "459": 1252, "590": 1252, "bugfix": 1252, "l3": 1252, "135": 1252, "eet": 1252, "585": 1252, "582": 1252, "much": [1252, 1297, 1299, 1300], "574": 1252, "570": 1252, "558": 1252, "l2": 1252, "ctm": 1252, "553": 1252, "542": 1252, "aux_io": 1252, "read_gam": 1252, "535": 1252, "midnight": 1252, "00": [1252, 1256, 1261, 1266, 1285, 1292], "523": 1252, "importerror": 1252, "522": 1252, "519": 1252, "512": 1252, "510": 1252, "divis": 1252, "phase_proc": 1252, "zerodivis": 1252, "494": 1252, "485": 1252, "unsupport": 1252, "481": 1252, "579": 1252, "578": 1252, "prefer": [1252, 1293, 1302], "568": 1252, "563": 1252, "559": 1252, "549": 1252, "clean": 1252, "547": 1252, "gamicfil": 1252, "gamic_hdf5": 1252, "536": 1252, "524": [1252, 1292], "513": 1252, "balltre": 1252, "504": 1252, "501": 1252, "tag": 1252, "482": 1252, "479": 1252, "594": 1252, "567": 1252, "cite": [1252, 1295, 1296, 1297, 1299, 1300, 1301], "561": 1252, "despeckle_field": 1252, "544": 1252, "axislabel_flag": 1252, "539": 1252, "529": [1252, 1265, 1266], "_get_x_z": 1252, "491": 1252, "opt": 1252, "486": 1252, "586": 1252, "secondari": 1252, "583": 1252, "572": 1252, "fixup": 1252, "565": 1252, "569": 1252, "560": 1252, "rainbow_wrl": 1252, "555": [1252, 1287], "recip": 1252, "554": 1252, "nose_arg": 1252, "548": 1252, "538": 1252, "532": 1252, "531": 1252, "528": 1252, "output_to_geotiff": 1252, "514": 1252, "511": 1252, "507": 1252, "506": 1252, "radarmapdisplai": [1252, 1259, 1260, 1263, 1270, 1276, 1287, 1295, 1296, 1297, 1299, 1300], "498": 1252, "libgfortran": 1252, "497": 1252, "495": 1252, "493": 1252, "489": [1252, 1256], "488": 1252, "argentinean": 1252, "480": [1252, 1295], "bdolan44": 1252, "dara74k": 1252, "gavi": 1252, "jacaicedob": 1252, "wx": 1252, "pfhein": 1252, "tamisalex": 1252, "469": 1252, "468": 1252, "467": 1252, "luminos": 1252, "464": 1252, "455": 1252, "hclass": 1252, "447": 1252, "439": 1252, "434": 1252, "433": 1252, "427": 1252, "411": 1252, "404": 1252, "388": 1252, "cross_section_ppi": [1252, 1284], "380": 1252, "dim": 1252, "477": [1252, 1275, 1285], "472": 1252, "471": 1252, "plot_range_r": [1252, 1273, 1274, 1276], "470": 1252, "460": 1252, "get_field_colormap": 1252, "446": 1252, "444": 1252, "example_cfradial_rhi": 1252, "441": 1252, "417": [1252, 1277, 1285], "struct": 1252, "pack": 1252, "410": 1252, "383": 1252, "unicod": 1252, "382": 1252, "gatefit": 1252, "372": 1252, "465": [1252, 1278, 1285], "refactor": 1252, "463": 1252, "decor": 1252, "block": 1252, "416": 1252, "392": 1252, "radxcovert": 1252, "clarifi": 1252, "475": 1252, "406": 1252, "add_field_lik": [1252, 1263], "397": 1252, "391": 1252, "376": 1252, "370": 1252, "corner_to_point": 1252, "473": 1252, "466": 1252, "456": 1252, "resolv": 1252, "outstand": 1252, "412": 1252, "413": 1252, "454": 1252, "453": 1252, "449": 1252, "438": 1252, "437": 1252, "430": 1252, "426": 1252, "miniconda": [1252, 1293, 1303], "reactiv": 1252, "422": 1252, "plot_map_one_radar_to_grid": [1252, 1264, 1266], "420": [1252, 1295], "419": 1252, "408": 1252, "radardisplai": [1252, 1254, 1255, 1268, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1288, 1290], "resilli": 1252, "403": 1252, "write_mdv_grid": 1252, "402": 1252, "dealias_region_bas": [1252, 1255, 1297], "401": 1252, "399": 1252, "395": 1252, "documen": 1252, "add_2d_latlon_axi": 1252, "394": 1252, "378": 1252, "acess": 1252, "377": [1252, 1254, 1256], "373": 1252, "deeplycloudi": 1252, "368": 1252, "358": [1252, 1303], "edge_netcdf": 1252, "read_edge_netcdf": 1252, "357": [1252, 1303], "dealias_fourdd": 1252, "348": 1252, "346": 1252, "336": 1252, "creation": 1252, "330": [1252, 1293, 1303], "326": 1252, "308": 1252, "361": 1252, "refl_filter_flag": 1252, "map_gate_to_grid": 1252, "334": 1252, "region_dealia": 1252, "327": [1252, 1291, 1292], "libm": 1252, "posix": 1252, "319": 1252, "unnecessari": 1252, "inmemoryfil": 1252, "365": 1252, "359": [1252, 1303], "354": 1252, "_rsl_interfac": 1252, "pyx": 1252, "342": 1252, "latest": [1252, 1293, 1303], "binstar": 1252, "337": 1252, "320": 1252, "317": 1252, "362": 1252, "plot_grid_three_panel": 1252, "353": 1252, "confus": 1252, "331": 1252, "363": 1252, "340": 1252, "externalis": 1252, "339": 1252, "333": 1252, "332": 1252, "324": 1252, "323": 1252, "271": 1252, "binar": 1252, "266": 1252, "313": 1252, "312": 1252, "290": 1252, "286": 1252, "280": 1252, "273": 1252, "272": 1252, "261": 1252, "256": [1252, 1268, 1290], "dealias_phase_unwrap": 1252, "radarmapdispl": 1252, "249": 1252, "discontin": 1252, "315": [1252, 1269, 1285], "misc": 1252, "314": 1252, "303": 1252, "288": 1252, "fault": 1252, "276": 1252, "dealias_unwrap_phas": 1252, "275": 1252, "corrupt": 1252, "269": 1252, "307": 1252, "283": 1252, "inconsist": 1252, "274": 1252, "254": 1252, "fallback": 1252, "245": 1252, "316": [1252, 1259, 1261], "ngates_vart": 1252, "301": 1252, "310": 1252, "py3": [1252, 1305], "nexrad_level2": 1252, "nexrad_level3": 1252, "309": 1252, "306": 1252, "1byte": 1252, "305": 1252, "weathergod": 1252, "296": 1252, "293": 1252, "292": 1252, "289": 1252, "291": 1252, "138": 1252, "284": 1252, "277": 1252, "alter": 1252, "267": 1252, "latlon": 1252, "264": 1252, "262": 1252, "260": 1252, "259": 1252, "258": 1252, "241": [1252, 1260, 1264], "rebuild": 1252, "237": 1252, "download": [1254, 1255, 1257, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1303, 1305], "runner": [1254, 1259, 1260], "micromamba": [1254, 1259, 1260], "pyart": [1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305], "lib": [1254, 1259, 1260, 1296, 1299, 1302], "python3": [1254, 1259, 1260], "fromnumer": 1254, "771": 1254, "userwarn": [1254, 1259, 1260], "kth": 1254, "__doc__": [1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1289], "jonathan": [1254, 1255, 1264, 1265, 1272, 1273, 1275, 1277, 1281, 1284, 1305], "helmu": [1254, 1255, 1264, 1265, 1272, 1273, 1275, 1277, 1281, 1284, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303, 1305], "anl": [1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1279, 1280, 1281, 1282, 1284, 1287, 1288], "licens": [1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1303], "bsd": [1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1293, 1303], "claus": [1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1303], "pyplot": [1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1295, 1296, 1297, 1299, 1300], "get_test_data": [1254, 1255, 1263, 1264, 1265, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289], "sgpcsaprsurcmaci7": [1254, 1296], "c0": [1254, 1277, 1278, 1282, 1296], "20110520": [1254, 1296], "095101": [1254, 1296], "read_cfradi": [1254, 1263, 1265, 1269, 1277, 1278, 1282, 1290, 1291], "pop": 1254, "specific_attenu": [1254, 1287, 1290, 1295, 1300], "corrected_reflectivity_horizont": [1254, 1265, 1269, 1287, 1295], "calculate_attenu": 1254, "add_field": [1254, 1255, 1289, 1290, 1296, 1297, 1303], "figsiz": [1254, 1255, 1259, 1260, 1263, 1268, 1269, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1288, 1289, 1290, 1296, 1297, 1299, 1300], "ax1": [1254, 1255, 1269, 1283, 1284, 1289], "add_subplot": [1254, 1255, 1264, 1265, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1284], "131": [1254, 1289], "raw": [1254, 1255, 1293], "ax2": [1254, 1255, 1263, 1269, 1283, 1284, 1288, 1289, 1297], "132": [1254, 1289], "ax3": [1254, 1255, 1283, 1289], "133": [1254, 1287, 1289], "suptitl": [1254, 1255, 1282, 1291], "fontsiz": [1254, 1255, 1268, 1270, 1279, 1280], "minut": [1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291], "plot_attenu": [1254, 1256], "ipynb": [1254, 1255, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1290, 1291], "ial": 1255, "095636": [1255, 1297], "sonde_fil": 1255, "sgpinterpolatedsondec1": 1255, "c1": [1255, 1300], "20110510": 1255, "000000": 1255, "cdf": 1255, "read_arm_sonde_vap": 1255, "exclude_transit": [1255, 1264, 1265, 1269, 1288], "exclude_invalid": 1255, "exclude_outsid": 1255, "80": [1255, 1283, 1288], "dealias_data": 1255, "corrected_veloc": [1255, 1291, 1297, 1300], "sixth": 1255, "221": [1255, 1272], "223": [1255, 1272], "ax4": 1255, "224": [1255, 1272], "112": [1255, 1256], "plot_dealia": [1255, 1256], "examples_correct": 1256, "mb": [1256, 1261, 1266, 1285, 1292], "varieti": [1257, 1258, 1303], "panel": [1257, 1267, 1285], "examples_python": 1257, "zip": [1257, 1260, 1268, 1293], "examples_jupyt": 1257, "next": 1259, "grover": [1259, 1263, 1268, 1269, 1274, 1282, 1287, 1288], "mgrover": [1259, 1263, 1268, 1269, 1274, 1282, 1287, 1288], "ccr": [1259, 1260, 1263, 1269, 1270, 1276, 1283, 1287, 1289, 1296, 1297, 1300], "administr": 1259, "our": [1259, 1260, 1263, 1268, 1269, 1287, 1289], "filepath": [1259, 1260], "level2": [1259, 1260, 1271, 1289], "organ": 1259, "year": [1259, 1260, 1303], "month": [1259, 1260], "radarsit": [1259, 1260], "_v06": 1259, "houston": 1259, "texa": 1259, "khgx": 1259, "march": 1259, "utc": [1259, 1260, 1282], "aws_nexrad_level2_fil": [1259, 1260], "03": [1259, 1285, 1292], "khgx20220322_120125_v06": 1259, "read_nexrad_arch": [1259, 1260, 1271, 1272, 1273, 1289], "summari": 1259, "cross_correlation_ratio": [1259, 1271, 1272, 1289, 1300, 1301], "clutter_filter_power_remov": 1259, "spectrum_width": [1259, 1300, 1301], "differential_phas": [1259, 1272, 1300, 1301], "121": [1259, 1263, 1269, 1288], "relect": 1259, "z_": [1259, 1263, 1270], "v_": 1259, "70": [1259, 1263, 1269], "gridlin": [1259, 1270], "451": 1259, "xlabels_top": 1259, "deprec": [1259, 1296, 1299], "top_label": [1259, 1270], "ylabels_right": 1259, "right_label": [1259, 1270], "n0u": 1259, "noq": 1259, "level3": 1259, "aws_nexrad_level3_velocity_fil": 1259, "hgx_n0u_2022_03_22_12_01_25": 1259, "aws_nexrad_level3_reflectivity_fil": 1259, "hgx_n0q_2022_03_22_12_01_25": 1259, "read_nexrad_level3": 1259, "radar_level3_veloc": 1259, "radar_level3_reflect": 1259, "confirm": [1259, 1295], "reflectivity_displai": 1259, "velocity_displai": 1259, "plot_nexrad_data_aw": [1259, 1261], "zachari": 1260, "sherman": 1260, "zsherman": [1260, 1305], "tendenc": 1260, "usual": [1260, 1303], "gz": 1260, "handford": 1260, "ca": 1260, "khnx": 1260, "juli": 1260, "0203": 1260, "v06": 1260, "khnx20060724_020338": 1260, "nexrad_arch": 1260, "231": 1260, "14": [1260, 1268, 1270, 1301], "ref": [1260, 1283], "clearli": 1260, "lucki": 1260, "31417": 1260, "119": [1260, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "63111": 1260, "plote": [1260, 1276], "central_latitud": [1260, 1276, 1289, 1296], "central_longitud": [1260, 1276, 1289, 1296], "__init__": [1260, 1303], "downloadwarn": 1260, "naturalearth": 1260, "amazonaw": 1260, "com": [1260, 1280, 1302, 1303, 1305], "10m_physic": 1260, "ne_10m_coastlin": 1260, "10m_cultur": 1260, "ne_10m_admin_1_states_provinces_lin": 1260, "496": [1260, 1261], "plot_older_nexrad_data_aw": [1260, 1261], "examples_io": 1261, "bobbi": 1263, "jackson": 1263, "rjackson": 1263, "filterwarn": 1263, "xsapr": [1263, 1265, 1269], "xsapr_sw_fil": [1263, 1265, 1269], "swx_20120520_0641": [1263, 1265, 1268, 1269, 1270, 1274, 1284, 1287, 1288, 1289], "xsapr_se_fil": [1263, 1265, 1269], "sex_20120520_0641": [1263, 1265, 1269], "radar_sw": [1263, 1265, 1269], "radar_s": [1263, 1265, 1269], "southwestern": 1263, "southeastern": 1263, "gmapper": 1263, "radar_sw_mapped_to_radar_s": 1263, "disp1": 1263, "37": [1263, 1287, 1291, 1300], "98": [1263, 1287, 1291, 1300], "arang": [1263, 1276, 1279, 1280, 1287, 1290, 1291, 1303], "96": [1263, 1300], "disp2": 1263, "remap": 1263, "difficult": 1263, "eyebal": 1263, "fortun": 1263, "mind": [1263, 1303], "cours": [1263, 1303], "reflectivity_se_radar": 1263, "reflectivity_sw_radar": 1263, "reflectivity_differ": 1263, "reflectivity_bia": 1263, "111": [1263, 1264, 1265, 1270, 1273, 1274, 1275, 1279, 1280, 1281, 1287], "pyart_bal": [1263, 1282, 1297], "southwest": 1263, "xspar": 1263, "southeast": 1263, "neccessarili": 1263, "incl_gat": 1263, "argwher": 1263, "refl_s": 1263, "refl_sw": 1263, "values_without_mask": 1263, "logical_and": 1263, "flatten": 1263, "hist": [1263, 1297], "histogram2d": 1263, "masked_wher": [1263, 1300], "meshgrid": 1263, "pyart_homeyerrainbow": [1263, 1268, 1269, 1270, 1275, 1278, 1282, 1283, 1288], "log_": 1263, "xlabel": [1263, 1277, 1278, 1297], "ylabel": [1263, 1277, 1278, 1297], "768": [1263, 1266], "plot_compare_two_radars_gatemapp": [1263, 1266], "110635": [1264, 1275, 1299], "123000": 1264, "884": [1264, 1266], "xsarp": [1265, 1277, 1278], "gatefilter_s": [1265, 1269], "exclude_abov": [1265, 1269, 1297], "gatefilter_sw": [1265, 1269], "201": [1265, 1289, 1299], "57861": [1265, 1269], "363611": [1265, 1269], "48": 1265, "plot_map_two_radars_to_grid": [1265, 1266], "182": [1266, 1270, 1285], "examples_map": 1266, "08": [1266, 1285], "vstack": 1268, "plot_color_gradi": 1268, "cmap_categori": 1268, "cmap_list": 1268, "nrow": 1268, "len": [1268, 1282, 1290, 1295], "figh": 1268, "subplots_adjust": [1268, 1277, 1278], "set_titl": [1268, 1289], "cmap_nam": 1268, "auto": 1268, "pyart_": 1268, "va": 1268, "transax": 1268, "spine": 1268, "set_axis_off": 1268, "colorblind": 1268, "langrainbow12": 1268, "chasespectr": 1268, "spectralextend": 1268, "perceptu": [1268, 1271], "light": [1268, 1290], "bu10": 1268, "bu7": 1268, "gray5": 1268, "gray9": 1268, "diverg": 1268, "meaning": 1268, "bluebrown11": 1268, "brbu10": 1268, "brbu12": 1268, "budor12": 1268, "budor18": 1268, "budrd12": 1268, "budrd18": 1268, "bugr14": 1268, "bugy8": 1268, "buor10": 1268, "buor12": 1268, "buor8": 1268, "buorr14": 1268, "grmg16": 1268, "rdylbu11b": 1268, "There": [1268, 1302, 1305], "bluebrown10": 1268, "nwsref": 1268, "carbone11": 1268, "carbone17": 1268, "carbone42": 1268, "cat12": 1268, "ewilson17": 1268, "nwsvel": 1268, "nws_spw": 1268, "pd17": 1268, "rrate11": 1268, "refdiff": 1268, "scook18": 1268, "stepseq25": 1268, "symgray12": 1268, "theodore16": 1268, "wild25": 1268, "spectral_r": 1268, "rememb": 1268, "front": 1268, "shown": 1268, "882": [1268, 1285], "plot_choose_a_colormap": [1268, 1285], "181": 1269, "scatter": [1269, 1287], "tab": 1269, "blue": [1269, 1279, 1280], "legend": 1269, "plot_latlon_slic": 1269, "plot_cross_sect": [1269, 1285], "colobar": 1270, "joe": 1270, "brien": 1270, "obrienj": 1270, "perfect": 1270, "gl": 1270, "draw_label": 1270, "grai": [1270, 1271], "gca": 1270, "set_major_loc": 1270, "nullloc": 1270, "xlabel_styl": 1270, "ylabel_styl": 1270, "axsb": 1270, "ppi_map": 1270, "cbar": 1270, "set_label": 1270, "set_tick": 1270, "plot_modify_colorbar": [1270, 1285], "reduc": [1271, 1302], "promin": 1271, "deemphas": 1271, "depict": 1271, "ultim": 1271, "misinterpret": 1271, "laura": [1271, 1289], "lmtomkin": [1271, 1289], "ncsu": [1271, 1289], "mcolor": [1271, 1289], "nexrad_fil": [1271, 1289], "kbgm": 1271, "kbgm20200207_132642_v06": 1271, "image_mute_radar": [1271, 1289], "magma_cmap": 1271, "get_cmap": [1271, 1289], "magma_r": [1271, 1289], "grays_cmap": 1271, "gray_r": 1271, "nonmuted_cmap": 1271, "linearsegmentedcolormap": [1271, 1289], "from_list": [1271, 1289], "muted_cmap": 1271, "nonmuted_reflect": [1271, 1289], "muted_reflect": 1271, "300": [1271, 1272, 1295], "set_aspect": [1271, 1289, 1290], "plot_nexrad_image_muted_reflect": [1271, 1285], "katx20130717_195021_v06": [1272, 1301], "751": [1272, 1285], "plot_nexrad_multiple_mo": [1272, 1285], "level2_katx_20130717_1950": 1273, "ar2v": 1273, "super": [1273, 1296, 1299], "581": [1273, 1285], "plot_nexrad_reflect": [1273, 1285], "plot_cross_hair": 1274, "plot_ppi_cfradi": [1274, 1285], "150": [1275, 1297], "plot_ppi_mdv": [1275, 1285], "jason": [1276, 1283], "hemeding": [1276, 1283], "nsaxsaprppic1": 1276, "a1": 1276, "20140201": 1276, "184802": 1276, "157": 1276, "156": 1276, "71": 1276, "158": 1276, "154": 1276, "69": [1276, 1291], "72": 1276, "40km": 1276, "plot_line_xi": 1276, "plot_point": 1276, "432": [1276, 1285], "plot_ppi_with_r": [1276, 1285], "sgpxsaprrhicmaci5": [1277, 1278, 1282], "20110524": [1277, 1278, 1282], "015604_nc4": [1277, 1278, 1282], "instrument_nam": [1277, 1278, 1301], "hspace": [1277, 1278], "agl": 1277, "fac": 1277, "nplot": [1277, 1278, 1282], "snum": 1277, "hsrhi": [1277, 1278], "3f": [1277, 1278], "time_start": 1277, "num2dat": 1277, "only_use_cftime_datetim": 1277, "only_use_python_datetim": 1277, "figure_titl": 1277, "isoformat": 1277, "plot_rhi_cfradi": [1277, 1285], "plot_rhi_cfradial_singlescan": [1278, 1285], "differnenti": 1279, "cori": [1279, 1280], "weber": [1279, 1280], "cweber": [1279, 1280], "220629": 1279, "white": 1279, "matplolib": 1279, "visabl": 1279, "border": 1279, "flow": 1279, "paramt": 1279, "compens": 1279, "patch": 1279, "nearli": 1279, "00015": 1279, "veri": [1279, 1289], "antialias": [1279, 1280], "moir": 1279, "get_start": [1279, 1280], "get_end": [1279, 1280], "blur": 1279, "nice": [1279, 1302], "arbirarli": 1279, "impact": 1279, "gaussian_filt": [1279, 1280], "levels_rain": 1279, "levels_ic": 1279, "contours_ic": 1279, "contours_rain": 1279, "red": [1279, 1280], "fmt": [1279, 1280], "0000": [1279, 1280], "clabel": [1279, 1280], "inlin": [1279, 1280], "985": [1279, 1285], "plot_rhi_contours_differential_reflect": [1279, 1285], "spyi": 1280, "034142": 1280, "ramp": 1280, "blob": 1280, "pyart_budrd18": 1280, "comment": [1280, 1301], "coutour": 1280, "solid": 1280, "dot": 1280, "major": 1280, "axhlin": 1280, "dash": 1280, "axvlin": 1280, "00b4ff": 1280, "ff6800": 1280, "set_ylabel": [1280, 1291], "cp": 1280, "321": [1280, 1285], "plot_rhi_data_overlai": [1280, 1285], "110041": 1281, "078": [1281, 1285], "plot_rhi_mdv": [1281, 1285], "fields_to_plot": 1282, "plot_num": 1282, "u00b0": 1282, "085": [1282, 1285], "plot_rhi_two_panel": [1282, 1285], "20110520100000_nexrad_grid": 1283, "read_grid": 1283, "map_panel_ax": 1283, "x_cut_panel_ax": 1283, "y_cut_panel_ax": 1283, "add_ax": 1283, "plot_crosshair": 1283, "plot_longitude_slic": 1283, "set_ylim": [1283, 1290], "set_xlim": [1283, 1290], "plot_latitude_slic": [1283, 1299], "239": [1283, 1285], "plot_three_panel_gridmapdisplai": [1283, 1285], "225": 1284, "xsect": 1284, "211": 1284, "212": 1284, "tight_layout": 1284, "plot_xsect": [1284, 1285], "examples_plot": 1285, "04": [1285, 1287, 1292], "maxwel": [1287, 1288], "site_lon": 1287, "73": 1287, "site_lat": 1287, "latitdu": 1287, "pathcollect": 1287, "0x7f3f4b923550": 1287, "get_field_loc": 1287, "818e": 1287, "88": 1287, "recalculated_diff_phas": [1287, 1295], "2778": 1287, "1806": 1287, "unf_dp_phase_shift": [1287, 1295], "953": 1287, "145": 1287, "144": 1287, "diff_reflect": [1287, 1295], "95": [1287, 1301], "datetime64": 1287, "20t06": 1287, "distance_from_radar": 1287, "233": 1287, "545": 1287, "latitude_of_loc": 1287, "longitude_of_loc": 1287, "line2d": 1287, "0x7f3f4b923050": 1287, "plot_column_subset": [1287, 1292], "compz": 1288, "composite_reflect": 1288, "composite_displai": 1288, "629": [1288, 1292], "plot_composite_reflect": [1288, 1292], "classifc": 1289, "summer": 1289, "ian": 1289, "footprint": 1289, "yield": 1289, "smoother": 1289, "rescal": 1289, "simpli": [1289, 1297, 1299, 1302, 1303, 1305], "plot_convstrat_schem": 1289, "pick": 1289, "radii": 1289, "dilat": 1289, "event": 1289, "extract_sweep": [1289, 1291], "conv_strat_yut": 1289, "convsf_mask": 1289, "masked_equ": 1289, "convsf": 1289, "magma_r_cmap": 1289, "ref_cmap": 1289, "albersequalarea": 1289, "convsf_und": 1289, "overestim": 1289, "convsf_ov": 1289, "uncertainti": 1289, "underest": 1289, "overest": 1289, "09": 1289, "ktbw": 1289, "ktbw20220928_190142_v06": 1289, "rasumussen": 1289, "reflecit": 1289, "kokx": 1289, "kokx20210207_161413_v06": 1289, "nonmuted_ref": 1289, "masked_invalid": 1289, "nonmuted_ref_linear": 1289, "mm6": 1289, "m3": 1289, "snow_rat": 1289, "57": 1289, "67": 1289, "snow_rate_dict": 1289, "standard_nam": [1289, 1296, 1301], "hr": 1289, "40500": 1289, "purpos": 1289, "034": 1289, "ccotd": 1289, "rasmussen": 1289, "dixon": 1289, "vasiloff": 1289, "hage": 1289, "knight": 1289, "vivekanandan": 1289, "xu": 1289, "nowcast": 1289, "042": 1289, "3c0020": 1289, "snuart": 1289, "plot_convective_stratiform": [1289, 1292], "daniel": [1290, 1291], "open_radar_data": [1290, 1291], "fetch": [1290, 1291, 1303], "mll2217907250u": 1290, "003": 1290, "preinterpol": 1290, "20220628072500_savevol_cosmo_lookup_temp": 1290, "nwp_temp": 1290, "calculate_attenuation_zphi": 1290, "uncorrected_differential_phas": 1290, "pia": 1290, "pida": 1290, "corrected_reflect": [1290, 1300], "corrected_differential_reflect": [1290, 1300], "kdp_maesaka": 1290, "specific_differential_phas": [1290, 1300], "hydro": 1290, "hydroclass_semisupervis": 1290, "uncorrected_cross_correlation_ratio": 1290, "radar_echo_classif": 1290, "boundarynorm": 1290, "crystal": 1290, "rime": 1290, "particl": 1290, "graupel": 1290, "980": [1290, 1292], "plot_hydrometeor": [1290, 1292], "2682": 1291, "5272": 1291, "7815": 1291, "10403": 1291, "14259": 1291, "18533": 1291, "22800": [1291, 1295], "27060": [1291, 1295], "31310": 1291, "35549": 1291, "39777": 1291, "43991": 1291, "50263": 1291, "58621": 1291, "71002": 1291, "87118": 1291, "106740": 1291, "125476": 1291, "143293": 1291, "143": 1291, "160000": 1291, "mla2119412050u": 1291, "zlevel": 1291, "u_allsweep": 1291, "v_allsweep": 1291, "idx": 1291, "radar_1sweep": 1291, "vad_brown": 1291, "u_avg": 1291, "nanmean": 1291, "v_avg": 1291, "rad2deg": 1291, "sharei": 1291, "set_xlabel": 1291, "plot_vad": [1291, 1292], "examples_retriev": 1292, "depth": [1293, 1301, 1303], "conceptu": 1293, "understand": 1293, "search": [1293, 1302], "someth": 1293, "instruct": [1293, 1304], "demonstr": 1293, "basi": 1293, "exploit": 1293, "superproject": 1293, "propos": 1293, "bleed": 1293, "among": 1293, "europ": 1293, "fmi": 1293, "windcub": 1293, "leospher": 1293, "gecsx": 1293, "research": [1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "facil": [1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "colli": [1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "languag": [1293, 1303], "e25": [1293, 1303], "5334": [1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "jor": [1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303], "lainer": [1293, 1303], "schauweck": [1293, 1303], "ii": [1293, 1301], "sophist": 1293, "tutori": 1293, "asr": 1293, "asm": 1293, "erad": 1293, "easiest": [1293, 1303], "januari": 1293, "1st": 1293, "yml": [1293, 1305], "Or": 1293, "pyart_env": [1293, 1296, 1299, 1305], "pyart_mch": [1293, 1302, 1303, 1305], "termin": [1293, 1303, 1305], "prompt": [1293, 1303], "wish": 1293, "unreleas": 1293, "clone": [1293, 1302], "repositori": [1293, 1302, 1303, 1305], "Then": [1293, 1302, 1303], "scientif": [1293, 1303], "charg": 1293, "resourc": [1293, 1302], "lassen": 1293, "radtec": 1293, "rsl_path": [1293, 1302], "usr": 1293, "anaconda3": [1293, 1296, 1299, 1302, 1305], "fastest": 1293, "cbc": 1293, "glpk": 1293, "coincbc": [1293, 1302, 1305], "coin_install_dir": [1293, 1302, 1305], "ask": [1293, 1305], "appreci": 1293, "learn": 1293, "contributor": [1293, 1304], "sometim": 1295, "might": [1295, 1305], "hypothet": 1295, "toolkit": [1295, 1296, 1297, 1299, 1300, 1301], "partli": [1295, 1296, 1297, 1299, 1300, 1301], "depart": [1295, 1296, 1297, 1299, 1300, 1301], "energi": [1295, 1296, 1297, 1299, 1300, 1301], "radiat": [1295, 1296, 1297, 1299, 1300, 1301, 1303], "offic": [1295, 1296, 1297, 1299, 1300, 1301], "scienc": [1295, 1296, 1297, 1299, 1300, 1301], "jj": [1295, 1296, 1297, 1299, 1300, 1301], "sm": [1295, 1296, 1297, 1299, 1300, 1301], "test_radar": [1295, 1303], "idea": [1295, 1297], "dict_kei": [1295, 1300], "rain_rate_a": [1295, 1300], "time_coverage_start": [1295, 1301], "time_coverage_end": 1295, "volume_numb": 1295, "platform_typ": 1295, "instrument_typ": 1295, "primary_axi": 1295, "make_empty_ppi_radar": 1295, "59416667": 1295, "As": [1295, 1297, 1299, 1300, 1303], "isn": 1295, "120": 1295, "240": 1295, "660": 1295, "720": 1295, "780": 1295, "900": 1295, "960": 1295, "1260": 1295, "1440": 1295, "1500": 1295, "1560": 1295, "1620": 1295, "1680": 1295, "1740": 1295, "1860": 1295, "1920": 1295, "1980": 1295, "2040": 1295, "2100": 1295, "2160": 1295, "2220": 1295, "2280": 1295, "2340": 1295, "2400": 1295, "2460": 1295, "2520": 1295, "2580": 1295, "2640": 1295, "2700": 1295, "2760": 1295, "2820": 1295, "2880": 1295, "2940": 1295, "3060": 1295, "3120": 1295, "3180": 1295, "3240": 1295, "3300": 1295, "3360": 1295, "3420": 1295, "3480": 1295, "3540": 1295, "3660": 1295, "3720": 1295, "3780": 1295, "3840": 1295, "3900": 1295, "3960": 1295, "4020": 1295, "4080": 1295, "4140": 1295, "4200": 1295, "4260": 1295, "4320": 1295, "4380": 1295, "4440": 1295, "4560": 1295, "4620": 1295, "4680": 1295, "4740": 1295, "4800": 1295, "4860": 1295, "4920": 1295, "4980": 1295, "5040": 1295, "5100": 1295, "5160": 1295, "5220": 1295, "5280": 1295, "5340": 1295, "5400": 1295, "5460": 1295, "5520": 1295, "5580": 1295, "5640": 1295, "5700": 1295, "5760": 1295, "5820": 1295, "5880": 1295, "5940": 1295, "6060": 1295, "6120": 1295, "6180": 1295, "6240": 1295, "6300": 1295, "6360": 1295, "6420": 1295, "6480": 1295, "6540": 1295, "6600": 1295, "6660": 1295, "6720": 1295, "6780": 1295, "6840": 1295, "6900": 1295, "6960": 1295, "7020": 1295, "7080": 1295, "7140": 1295, "7200": [1295, 1301], "7260": 1295, "7320": 1295, "7380": 1295, "7440": 1295, "7500": 1295, "7560": 1295, "7620": 1295, "7680": 1295, "7740": 1295, "7800": 1295, "7860": 1295, "7920": 1295, "7980": 1295, "8040": 1295, "8100": 1295, "8160": 1295, "8220": 1295, "8280": 1295, "8340": 1295, "8400": 1295, "8460": 1295, "8520": 1295, "8580": 1295, "8640": 1295, "8700": 1295, "8760": 1295, "8820": 1295, "8880": 1295, "8940": 1295, "9000": [1295, 1299], "9060": 1295, "9120": 1295, "9180": 1295, "9240": 1295, "9300": 1295, "9360": 1295, "9420": 1295, "9480": 1295, "9540": 1295, "9600": 1295, "9660": 1295, "9720": 1295, "9780": 1295, "9840": 1295, "9900": 1295, "9960": 1295, "10020": 1295, "10080": 1295, "10140": 1295, "10200": 1295, "10260": 1295, "10320": 1295, "10380": 1295, "10440": 1295, "10500": 1295, "10560": 1295, "10620": 1295, "10680": 1295, "10740": 1295, "10800": 1295, "10860": 1295, "10920": 1295, "10980": 1295, "11040": 1295, "11100": 1295, "11160": 1295, "11220": 1295, "11280": 1295, "11340": 1295, "11400": 1295, "11460": 1295, "11520": 1295, "11580": 1295, "11640": 1295, "11700": 1295, "11760": 1295, "11820": 1295, "11880": 1295, "11940": 1295, "12000": [1295, 1299], "12060": 1295, "12120": 1295, "12180": 1295, "12240": 1295, "12300": 1295, "12360": 1295, "12420": 1295, "12480": 1295, "12540": 1295, "12600": 1295, "12660": 1295, "12720": 1295, "12780": 1295, "12840": 1295, "12900": 1295, "12960": 1295, "13020": 1295, "13080": 1295, "13140": 1295, "13200": 1295, "13260": 1295, "13320": 1295, "13380": 1295, "13440": 1295, "13500": 1295, "13560": 1295, "13620": 1295, "13680": 1295, "13740": 1295, "13800": 1295, "13860": 1295, "13920": 1295, "13980": 1295, "14040": 1295, "14100": 1295, "14160": 1295, "14220": 1295, "14280": 1295, "14340": 1295, "14400": 1295, "14460": 1295, "14520": 1295, "14580": 1295, "14640": 1295, "14700": 1295, "14760": 1295, "14820": 1295, "14880": 1295, "14940": 1295, "15060": 1295, "15120": 1295, "15180": 1295, "15240": 1295, "15300": 1295, "15360": 1295, "15420": 1295, "15480": 1295, "15540": 1295, "15600": 1295, "15660": 1295, "15720": 1295, "15780": 1295, "15840": 1295, "15900": 1295, "15960": 1295, "16020": 1295, "16080": 1295, "16140": 1295, "16200": 1295, "16260": 1295, "16320": 1295, "16380": 1295, "16440": 1295, "16500": 1295, "16560": 1295, "16620": 1295, "16680": 1295, "16740": 1295, "16800": 1295, "16860": 1295, "16920": 1295, "16980": 1295, "17040": 1295, "17100": 1295, "17160": 1295, "17220": 1295, "17280": 1295, "17340": 1295, "17400": 1295, "17460": 1295, "17520": 1295, "17580": 1295, "17640": 1295, "17700": 1295, "17760": 1295, "17820": 1295, "17880": 1295, "17940": 1295, "18000": [1295, 1299], "18060": 1295, "18120": 1295, "18180": 1295, "18240": 1295, "18300": 1295, "18360": 1295, "18420": 1295, "18480": 1295, "18540": 1295, "18600": 1295, "18660": 1295, "18720": 1295, "18780": 1295, "18840": 1295, "18900": 1295, "18960": 1295, "19020": 1295, "19080": 1295, "19140": 1295, "19200": 1295, "19260": 1295, "19320": 1295, "19380": 1295, "19440": 1295, "19500": 1295, "19560": 1295, "19620": 1295, "19680": 1295, "19740": 1295, "19800": 1295, "19860": 1295, "19920": 1295, "19980": 1295, "20040": 1295, "20100": 1295, "20160": 1295, "20220": 1295, "20280": 1295, "20340": 1295, "20400": 1295, "20460": 1295, "20520": 1295, "20580": 1295, "20640": 1295, "20700": 1295, "20760": 1295, "20820": 1295, "20880": 1295, "20940": 1295, "21000": [1295, 1299], "21060": 1295, "21120": 1295, "21180": 1295, "21240": 1295, "21300": 1295, "21360": 1295, "21420": 1295, "21480": 1295, "21540": 1295, "21600": 1295, "21660": 1295, "21720": 1295, "21780": 1295, "21840": 1295, "21900": 1295, "21960": 1295, "22020": 1295, "22080": 1295, "22140": 1295, "22200": 1295, "22260": 1295, "22320": 1295, "22380": 1295, "22440": 1295, "22500": 1295, "22560": 1295, "22620": 1295, "22680": 1295, "22740": 1295, "22860": 1295, "22920": 1295, "22980": 1295, "23040": 1295, "23100": 1295, "23160": 1295, "23220": 1295, "23280": 1295, "23340": 1295, "23400": 1295, "23460": 1295, "23520": 1295, "23580": 1295, "23640": 1295, "23700": 1295, "23760": 1295, "23820": 1295, "23880": 1295, "23940": 1295, "24000": [1295, 1299], "24060": 1295, "24120": 1295, "24180": 1295, "24240": 1295, "24300": 1295, "24360": 1295, "24420": 1295, "24480": 1295, "24540": 1295, "24600": 1295, "24660": 1295, "24720": 1295, "24780": 1295, "24840": 1295, "24900": 1295, "24960": 1295, "25020": 1295, "25080": 1295, "25140": 1295, "25200": 1295, "25260": 1295, "25320": 1295, "25380": 1295, "25440": 1295, "25500": 1295, "25560": 1295, "25620": 1295, "25680": 1295, "25740": 1295, "25800": 1295, "25860": 1295, "25920": 1295, "25980": 1295, "26040": 1295, "26100": 1295, "26160": 1295, "26220": 1295, "26280": 1295, "26340": 1295, "26400": 1295, "26460": 1295, "26520": 1295, "26580": 1295, "26640": 1295, "26700": 1295, "26760": 1295, "26820": 1295, "26880": 1295, "26940": 1295, "27000": [1295, 1299], "27120": 1295, "27180": 1295, "27240": 1295, "27300": 1295, "27360": 1295, "27420": 1295, "27480": 1295, "27540": 1295, "27600": 1295, "27660": 1295, "27720": 1295, "27780": 1295, "27840": 1295, "27900": 1295, "27960": 1295, "28020": 1295, "28080": 1295, "28140": 1295, "28200": 1295, "28260": 1295, "28320": 1295, "28380": 1295, "28440": 1295, "28500": 1295, "28560": 1295, "28620": 1295, "28680": 1295, "28740": 1295, "28800": 1295, "28860": 1295, "28920": 1295, "28980": 1295, "29040": 1295, "29100": 1295, "29160": 1295, "29220": 1295, "29280": 1295, "29340": 1295, "29400": 1295, "29460": 1295, "29520": 1295, "29580": 1295, "29640": 1295, "29700": 1295, "29760": 1295, "29820": 1295, "29880": 1295, "29940": 1295, "30000": [1295, 1299], "30060": 1295, "30120": 1295, "30180": 1295, "30240": 1295, "30300": 1295, "30360": 1295, "30420": 1295, "30480": 1295, "30540": 1295, "30600": 1295, "30660": 1295, "30720": 1295, "30780": 1295, "30840": 1295, "30900": 1295, "30960": 1295, "31020": 1295, "31080": 1295, "31140": 1295, "31200": 1295, "31260": 1295, "31320": 1295, "31380": 1295, "31440": 1295, "31500": 1295, "31560": 1295, "31620": 1295, "31680": 1295, "31740": 1295, "31800": 1295, "31860": 1295, "31920": 1295, "31980": 1295, "32040": 1295, "32100": 1295, "32160": 1295, "32220": 1295, "32280": 1295, "32340": 1295, "32400": 1295, "32460": 1295, "32520": 1295, "32580": 1295, "32640": 1295, "32700": 1295, "32760": 1295, "32820": 1295, "32880": 1295, "32940": 1295, "33000": [1295, 1299], "33060": 1295, "33120": 1295, "33180": 1295, "33240": 1295, "33300": 1295, "33360": 1295, "33420": 1295, "33480": 1295, "33540": 1295, "33600": 1295, "33660": 1295, "33720": 1295, "33780": 1295, "33840": 1295, "33900": 1295, "33960": 1295, "34020": 1295, "34080": 1295, "34140": 1295, "34200": 1295, "34260": 1295, "34320": 1295, "34380": 1295, "34440": 1295, "34500": 1295, "34560": 1295, "34620": 1295, "34680": 1295, "34740": 1295, "34800": 1295, "34860": 1295, "34920": 1295, "34980": 1295, "35040": 1295, "35100": 1295, "35160": 1295, "35220": 1295, "35280": 1295, "35340": 1295, "35400": 1295, "35460": 1295, "35520": 1295, "35580": 1295, "35640": 1295, "35700": 1295, "35760": 1295, "35820": 1295, "35880": 1295, "35940": 1295, "36000": [1295, 1299], "36060": 1295, "36120": 1295, "36180": 1295, "36240": 1295, "36300": 1295, "36360": 1295, "36420": 1295, "36480": 1295, "36540": 1295, "36600": 1295, "36660": 1295, "36720": 1295, "36780": 1295, "36840": 1295, "36900": 1295, "36960": 1295, "37020": 1295, "37080": 1295, "37140": 1295, "37200": 1295, "37260": 1295, "37320": 1295, "37380": 1295, "37440": 1295, "37500": 1295, "37560": 1295, "37620": 1295, "37680": 1295, "37740": 1295, "37800": 1295, "37860": 1295, "37920": 1295, "37980": 1295, "38040": 1295, "38100": 1295, "38160": 1295, "38220": 1295, "38280": 1295, "38340": 1295, "38400": 1295, "38460": 1295, "38520": 1295, "38580": 1295, "38640": 1295, "38700": 1295, "38760": 1295, "38820": 1295, "38880": 1295, "38940": 1295, "39000": [1295, 1299], "39060": 1295, "39120": 1295, "39180": 1295, "39240": 1295, "39300": 1295, "39360": 1295, "39420": 1295, "39480": 1295, "39540": 1295, "39600": 1295, "39660": 1295, "39720": 1295, "39780": 1295, "39840": 1295, "39900": 1295, "39960": 1295, "squeez": 1295, "59416776": 1295, "59416886": 1295, "59489769": 1295, "59489879": 1295, "5948999": 1295, "59415662": 1295, "59414657": 1295, "5874659": 1295, "58745576": 1295, "58744563": 1295, "59414621": 1295, "59412575": 1295, "5805231": 1295, "58050246": 1295, "58048182": 1295, "59419881": 1295, "59423095": 1295, "61560159": 1295, "61563401": 1295, "61566644": 1295, "59418877": 1295, "59421087": 1295, "6089062": 1295, "6089285": 1295, "60895079": 1295, "59417836": 1295, "59419005": 1295, "60196382": 1295, "60197561": 1295, "60198741": 1295, "get_metadata": 1295, "ref_dict": 1295, "reflecitivity_horizont": 1295, "21875": 1295, "34375": 1295, "0078125": 1295, "2109375": 1295, "1171875": 1295, "59375": 1295, "421875": 1295, "5625": 1295, "7109375": 1295, "609375": 1295, "5078125": 1295, "3828125": 1295, "6875": 1295, "328125": 1295, "3203125": 1295, "859375": 1295, "6484375": 1295, "8515625": 1295, "9375": [1295, 1301], "0234375": 1295, "6328125": 1295, "2890625": 1295, "546875": 1295, "578125": 1295, "6796875": 1295, "ref_field": 1296, "ref_gt_0": 1296, "mask_dict": 1296, "reflectivity_mask": 1296, "coolwarm": 1296, "sherm": [1296, 1299], "782": [1296, 1299], "matplotlibdeprecationwarn": [1296, 1299], "set_xtick": [1296, 1299], "position": [1296, 1299], "later": [1296, 1299], "xtick": [1296, 1299], "829": [1296, 1299], "set_ytick": [1296, 1299], "ytick": [1296, 1299], "write_cfradi": 1296, "2pi": 1297, "wave": 1297, "3pi": 1297, "phenomena": [1297, 1301], "maximium": 1297, "unambi": 1297, "preprocess": 1297, "thankfulli": [1297, 1299], "surround": [1297, 1299], "presenc": 1297, "524973": 1297, "vel_textur": 1297, "velocity_textur": [1297, 1300], "vleociti": 1297, "At": 1297, "velocity_dealias": 1297, "realist": 1297, "gates_to_grid": 1299, "deprecationwarn": 1299, "99000": 1299, "98000": 1299, "97000": 1299, "96000": 1299, "95000": 1299, "94000": 1299, "93000": 1299, "92000": 1299, "91000": 1299, "90000": 1299, "89000": 1299, "88000": 1299, "87000": 1299, "86000": 1299, "85000": 1299, "84000": 1299, "83000": 1299, "82000": 1299, "81000": 1299, "80000": 1299, "79000": 1299, "78000": 1299, "77000": 1299, "76000": 1299, "75000": 1299, "74000": 1299, "73000": 1299, "72000": 1299, "71000": 1299, "70000": 1299, "69000": 1299, "68000": 1299, "67000": 1299, "66000": 1299, "65000": 1299, "64000": 1299, "63000": 1299, "62000": 1299, "61000": 1299, "59000": 1299, "58000": 1299, "57000": 1299, "56000": 1299, "55000": 1299, "54000": 1299, "53000": 1299, "52000": 1299, "51000": 1299, "49000": 1299, "48000": 1299, "47000": 1299, "46000": 1299, "45000": 1299, "44000": 1299, "43000": 1299, "42000": 1299, "41000": 1299, "38000": 1299, "37000": 1299, "35000": 1299, "34000": 1299, "32000": 1299, "31000": 1299, "29000": 1299, "28000": 1299, "26000": 1299, "23000": 1299, "22000": 1299, "19000": 1299, "16000": 1299, "14000": 1299, "13000": 1299, "8000": 1299, "7000": 1299, "longitudn": 1299, "latitudn": 1299, "suffer": 1299, "artifici": 1299, "feather": 1299, "grid_bett": 1299, "1750": 1299, "sgpxsaprcmacsuri5": 1300, "20171004": 1300, "203018": 1300, "total_pow": 1300, "xsapr_clutt": 1300, "sounding_temperatur": 1300, "signal_to_noise_ratio": 1300, "unfolded_differential_phas": 1300, "corrected_differential_phas": 1300, "filtered_corrected_differential_phas": 1300, "corrected_specific_diff_phas": 1300, "filtered_corrected_specific_diff_phas": 1300, "path_integrated_attenu": 1300, "specific_differential_attenu": 1300, "path_integrated_differential_attenu": 1300, "trip": 1300, "nonhydrometeor": 1300, "analyz": [1300, 1303], "exclude_equ": 1300, "cleaner": 1300, "tell": 1300, "refl_arrai": 1300, "reflectivity_w_mask": 1300, "iter_slic": [1300, 1301], "9344453454202706": 1300, "620691732853737": 1300, "3756584054113996": 1300, "597935968662154": 1300, "696735014111216": 1300, "061894569912447": 1300, "721673265240488": 1300, "086695918593689": 1300, "33930700509078": 1300, "599363169483158": 1300, "836875745223637": 1300, "051601529570966": 1300, "22435547210836": 1300, "378109469982695": 1300, "553820234067336": 1300, "648943841665002": 1300, "837593740986444": 1300, "049614721040282": 1300, "331202567459613": 1300, "585432697375357": 1300, "87002341270722": 1300, "993012637722325": 1300, "061966001642219": 1300, "122799449619672": 1300, "861035552720102": 1300, "74608994279257": 1300, "148801770281325": 1300, "70860719727862": 1300, "989513966551444": 1300, "188644935344827": 1300, "89301878240611": 1300, "172644371021923": 1300, "79879842243138": 1300, "912806090219976": 1300, "766281467013889": 1300, "920522471877334": 1300, "898600907318164": 1300, "971026055481874": 1300, "110503947133682": 1300, "094456418731509": 1300, "0822160050675675": 1300, "036430544969512": 1300, "259332430219459": 1300, "2438254054588604": 1300, "473482666015625": 1300, "574283685503023": 1300, "866719139946832": 1300, "771468742643597": 1300, "beam_azimuth_angl": 1301, "azimuth_angle_from_true_north": 1301, "radial_azimuth_coordin": 1301, "beam_elevation_angl": 1301, "elevation_angle_from_horizontal_plan": 1301, "radial_elevation_coordin": 1301, "1832": 1301, "log_differential_reflectivity_hv": 1301, "875": 1301, "9999": 1301, "differential_phase_hv": 1301, "equivalent_reflectivity_factor": 1301, "cross_correlation_ratio_hv": 1301, "correlation_ratio": 1301, "meters_per_second": 1301, "doppler_spectrum_width": 1301, "63": 1301, "radial_velocity_of_scatterers_away_from_instru": 1301, "target_fixed_angl": 1301, "unambiguous_rang": 1301, "unambigu": 1301, "degrees_north": 1301, "degrees_east": 1301, "projection_range_coordin": 1301, "range_to_measurement_volum": 1301, "radial_range_coordin": 1301, "spacing_is_const": 1301, "meters_to_center_of_first_g": 1301, "2125": 1301, "meters_between_g": 1301, "int32": 1301, "s20": 1301, "unitless": 1301, "coplan": 1301, "vertical_point": 1301, "idl": 1301, "azimuth_surveil": 1301, "elevation_surveil": 1301, "sunscan": 1301, "manual_ppi": 1301, "manual_rhi": 1301, "17t19": 1301, "21z": 1301, "time_in_seconds_since_volume_start": 1301, "calendar": 1301, "gregorian": 1301, "histori": 1301, "katx": 1301, "original_contain": 1301, "vcp_pattern": 1301, "7470703": 1301, "7196045": 1301, "6893921": 1301, "511719": 1301, "get_slic": 1301, "sweep_1": 1301, "52734375": 1301, "indici": 1301, "slice_indic": 1301, "9066728410400056": 1301, "478547577741713": 1301, "587792083929423": 1301, "871031288639269": 1301, "971692217963673": 1301, "830616390843327": 1301, "108188248095756": 1301, "483419908190385": 1301, "88976917057903": 1301, "852766685681688": 1301, "410455582269897": 1301, "66444787446138": 1301, "997862391449566": 1301, "172098402018502": 1301, "489752513534416": 1301, "712565619531706": 1301, "commonli": 1301, "8x": 1302, "But": 1302, "bash": 1302, "export": [1302, 1305], "pythonpath": 1302, "pth": 1302, "build_ext": 1302, "pip": [1302, 1303, 1305], "segfault": 1302, "Theres": 1302, "reinstal": 1302, "remedi": 1302, "fno": 1302, "protector": 1302, "d_fortify_sourc": 1302, "cflag": 1302, "makefil": 1302, "troubl": 1302, "my": 1302, "define_macro": 1302, "macro": 1302, "extra_compile_arg": 1302, "m32": 1302, "extra_link_arg": 1302, "m64": 1302, "proj_lib": 1302, "xx": 1302, "usernam": 1302, "xxx": 1302, "mpl_toolkit": 1302, "offici": 1303, "openradar": 1303, "ev": 1303, "pyart_short_cours": 1303, "youtub": 1303, "watch": 1303, "diip": 1303, "q3bkzw": 1303, "auto_exampl": 1303, "book": 1303, "popular": 1303, "pycodestyl": 1303, "pylint": 1303, "pep": 1303, "0008": 1303, "highli": 1303, "tast": 1303, "readthedoc": 1303, "brief": 1303, "third": 1303, "parti": 1303, "glob": 1303, "explain": 1303, "velocity_azimuth_displai": 1303, "_inverse_dist_squar": 1303, "_average1d": 1303, "seen": 1303, "explan": 1303, "ran": 1303, "rerun": 1303, "test_vad": 1303, "make_target_radar": 1303, "ones_lik": 1303, "z_start": 1303, "z_end": 1303, "z_count": 1303, "vad_height": 1303, "vad_spe": 1303, "98665725": 1303, "94020686": 1303, "88107152": 1303, "81939374": 1303, "75851962": 1303, "vad_direct": 1303, "84659496": 1303, "30240553": 1303, "58658589": 1303, "81073051": 1303, "01353486": 1303, "01335138": 1303, "06014712": 1303, "12039762": 1303, "18410404": 1303, "24791911": 1303, "98663937": 1303, "9398407": 1303, "87958641": 1303, "81587601": 1303, "75205693": 1303, "assert_almost_equ": 1303, "pyarg": 1303, "test_cfradi": 1303, "cd": 1303, "fork": 1303, "cartopy_map": 1303, "branch_nam": 1303, "checkout": 1303, "task": 1303, "untrack": 1303, "acronym": 1303, "finish": [1303, 1305], "quotat": 1303, "enter": 1303, "acronymn": 1303, "gitwash": 1303, "development_workflow": 1303, "editor": [1303, 1305], "whitespac": 1303, "vim": 1303, "thing": 1303, "ff": 1303, "checker": 1303, "travisci": 1303, "sit": 1303, "blog_post": 1303, "conflict": 1305, "exit": 1305, "led": 1305, "recent": 1305, "manag": 1305, "activ": 1305, "deactiv": 1305, "enviro": 1305, "scratch": 1305, "ipython": 1305, "spyder": 1305, "though": 1305, "yourusernam": 1305, "youranacondadir": 1305, "machin": 1305, "gitter": 1305, "im": 1305}, "objects": {"pyart": [[535, 0, 1, "", "_debug_info"], [536, 1, 0, "-", "aux_io"], [578, 1, 0, "-", "bridge"], [580, 1, 0, "-", "config"], [592, 1, 0, "-", "core"], [674, 1, 0, "-", "correct"], [745, 1, 0, "-", "exceptions"], [746, 1, 0, "-", "filters"], [783, 1, 0, "-", "graph"], [959, 1, 0, "-", "io"], [982, 1, 0, "-", "lazydict"], [1006, 1, 0, "-", "map"], [1019, 1, 0, "-", "retrieve"], [1111, 1, 0, "-", "testing"], [1196, 1, 0, "-", "util"]], "pyart.aux_io": [[537, 0, 1, "", "convert_data"], [538, 0, 1, "", "get_library"], [539, 0, 1, "", "read_bin"], [540, 0, 1, "", "read_bin_mf"], [541, 0, 1, "", "read_cartesian_metranet"], [542, 0, 1, "", "read_cf1"], [543, 0, 1, "", "read_cf1_cartesian"], [544, 0, 1, "", "read_cf1_cartesian_mf"], [545, 0, 1, "", "read_d3r_gcpex_nc"], [546, 0, 1, "", "read_dat_mf"], [547, 0, 1, "", "read_edge_netcdf"], [548, 0, 1, "", "read_file_c"], [549, 0, 1, "", "read_file_py"], [550, 0, 1, "", "read_gamic"], [551, 0, 1, "", "read_gif"], [552, 0, 1, "", "read_grib"], [553, 0, 1, "", "read_hpl"], [554, 0, 1, "", "read_iq"], [555, 0, 1, "", "read_kazr"], [556, 0, 1, "", "read_metranet"], [557, 0, 1, "", "read_noxp_iphex_nc"], [558, 0, 1, "", "read_odim_grid_h5"], [559, 0, 1, "", "read_odim_h5"], [560, 0, 1, "", "read_odim_vp_h5"], [561, 0, 1, "", "read_pattern"], [562, 0, 1, "", "read_png"], [563, 0, 1, "", "read_product_c"], [564, 0, 1, "", "read_product_py"], [565, 0, 1, "", "read_psr_cpi_header"], [566, 0, 1, "", "read_psr_header"], [567, 0, 1, "", "read_psr_spectra"], [568, 0, 1, "", "read_radx"], [569, 0, 1, "", "read_rainbow_psr"], [570, 0, 1, "", "read_rainbow_psr_spectra"], [571, 0, 1, "", "read_rainbow_wrl"], [572, 0, 1, "", "read_sinarame_h5"], [573, 0, 1, "", "read_spectra"], [574, 0, 1, "", "write_odim_grid_h5"], [575, 0, 1, "", "write_odim_h5"], [576, 0, 1, "", "write_sinarame_cfradial"], [577, 0, 1, "", "write_spectra"]], "pyart.bridge": [[579, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[581, 2, 1, "", "FileMetadata"], [585, 0, 1, "", "get_field_colormap"], [586, 0, 1, "", "get_field_limits"], [587, 0, 1, "", "get_field_mapping"], [588, 0, 1, "", "get_field_name"], [589, 0, 1, "", "get_fillvalue"], [590, 0, 1, "", "get_metadata"], [591, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[582, 3, 1, "", "__call__"], [583, 3, 1, "", "get_field_name"], [584, 3, 1, "", "get_metadata"]], "pyart.core": [[593, 2, 1, "", "Grid"], [603, 2, 1, "", "HorizontalWindProfile"], [607, 2, 1, "", "Radar"], [636, 2, 1, "", "RadarSpectra"], [665, 0, 1, "", "antenna_to_cartesian"], [666, 0, 1, "", "antenna_vectors_to_cartesian"], [667, 0, 1, "", "cartesian_to_antenna"], [668, 0, 1, "", "cartesian_to_geographic"], [669, 0, 1, "", "cartesian_to_geographic_aeqd"], [670, 0, 1, "", "cartesian_vectors_to_geographic"], [671, 0, 1, "", "geographic_to_cartesian"], [672, 0, 1, "", "geographic_to_cartesian_aeqd"], [673, 0, 1, "", "wgs84_to_swissCH1903"]], "pyart.core.Grid": [[594, 3, 1, "", "add_field"], [595, 3, 1, "", "get_point_longitude_latitude"], [596, 3, 1, "", "get_projparams"], [597, 3, 1, "", "init_point_altitude"], [598, 3, 1, "", "init_point_longitude_latitude"], [599, 3, 1, "", "init_point_x_y_z"], [600, 4, 1, "", "projection_proj"], [601, 3, 1, "", "to_xarray"], [602, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[604, 3, 1, "", "from_u_and_v"], [605, 4, 1, "", "u_wind"], [606, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[608, 3, 1, "", "add_field"], [609, 3, 1, "", "add_field_like"], [610, 3, 1, "", "add_filter"], [611, 3, 1, "", "check_field_exists"], [612, 3, 1, "", "extract_sweeps"], [613, 3, 1, "", "get_azimuth"], [614, 3, 1, "", "get_elevation"], [615, 3, 1, "", "get_end"], [616, 3, 1, "", "get_field"], [617, 3, 1, "", "get_gate_area"], [618, 3, 1, "", "get_gate_lat_lon_alt"], [619, 3, 1, "", "get_gate_x_y_z"], [620, 3, 1, "", "get_nyquist_vel"], [621, 3, 1, "", "get_slice"], [622, 3, 1, "", "get_start"], [623, 3, 1, "", "get_start_end"], [624, 3, 1, "", "info"], [625, 3, 1, "", "init_gate_altitude"], [626, 3, 1, "", "init_gate_longitude_latitude"], [627, 3, 1, "", "init_gate_x_y_z"], [628, 3, 1, "", "init_rays_per_sweep"], [629, 3, 1, "", "iter_azimuth"], [630, 3, 1, "", "iter_elevation"], [631, 3, 1, "", "iter_end"], [632, 3, 1, "", "iter_field"], [633, 3, 1, "", "iter_slice"], [634, 3, 1, "", "iter_start"], [635, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[637, 3, 1, "", "add_field"], [638, 3, 1, "", "add_field_like"], [639, 3, 1, "", "add_filter"], [640, 3, 1, "", "check_field_exists"], [641, 3, 1, "", "extract_sweeps"], [642, 3, 1, "", "get_azimuth"], [643, 3, 1, "", "get_elevation"], [644, 3, 1, "", "get_end"], [645, 3, 1, "", "get_field"], [646, 3, 1, "", "get_gate_area"], [647, 3, 1, "", "get_gate_lat_lon_alt"], [648, 3, 1, "", "get_gate_x_y_z"], [649, 3, 1, "", "get_nyquist_vel"], [650, 3, 1, "", "get_slice"], [651, 3, 1, "", "get_start"], [652, 3, 1, "", "get_start_end"], [653, 3, 1, "", "info"], [654, 3, 1, "", "init_gate_altitude"], [655, 3, 1, "", "init_gate_longitude_latitude"], [656, 3, 1, "", "init_gate_x_y_z"], [657, 3, 1, "", "init_rays_per_sweep"], [658, 3, 1, "", "iter_azimuth"], [659, 3, 1, "", "iter_elevation"], [660, 3, 1, "", "iter_end"], [661, 3, 1, "", "iter_field"], [662, 3, 1, "", "iter_slice"], [663, 3, 1, "", "iter_start"], [664, 3, 1, "", "iter_start_end"]], "pyart.correct": [[675, 2, 1, "", "GateFilter"], [703, 0, 1, "", "calculate_attenuation"], [704, 0, 1, "", "calculate_attenuation_philinear"], [705, 0, 1, "", "calculate_attenuation_zphi"], [706, 0, 1, "", "compute_apparent_vpr"], [707, 0, 1, "", "compute_theoretical_vpr"], [708, 0, 1, "", "correct_bias"], [709, 0, 1, "", "correct_noise_rhohv"], [710, 0, 1, "", "correct_sys_phase"], [711, 0, 1, "", "correct_visibility"], [712, 0, 1, "", "correct_vpr"], [713, 0, 1, "", "correct_vpr_spatialised"], [714, 0, 1, "", "dealias_fourdd"], [715, 0, 1, "", "dealias_region_based"], [716, 0, 1, "", "dealias_unwrap_phase"], [717, 0, 1, "", "despeckle_field"], [718, 0, 1, "", "det_sys_phase_ray"], [719, 0, 1, "", "est_rhohv_rain"], [720, 0, 1, "", "est_zdr_precip"], [721, 0, 1, "", "est_zdr_snow"], [722, 0, 1, "", "find_objects"], [723, 0, 1, "", "gauss_fit"], [724, 0, 1, "", "get_mask_fzl"], [725, 0, 1, "", "get_sun_hits"], [726, 0, 1, "", "get_sun_hits_ivic"], [727, 0, 1, "", "get_sun_hits_psr"], [728, 0, 1, "", "moment_based_gate_filter"], [729, 0, 1, "", "phase_proc_lp"], [730, 0, 1, "", "phase_proc_lp_gf"], [731, 0, 1, "", "ptoa_to_sf"], [732, 0, 1, "", "retrieval_result"], [733, 0, 1, "", "scanning_losses"], [734, 0, 1, "", "selfconsistency_bias"], [735, 0, 1, "", "selfconsistency_bias2"], [736, 0, 1, "", "selfconsistency_kdp_phidp"], [737, 0, 1, "", "smooth_masked"], [738, 0, 1, "", "smooth_phidp_double_window"], [739, 0, 1, "", "smooth_phidp_single_window"], [740, 0, 1, "", "solar_flux_lookup"], [741, 0, 1, "", "sun_position_mfr"], [742, 0, 1, "", "sun_position_pysolar"], [743, 0, 1, "", "sun_power"], [744, 0, 1, "", "sun_retrieval"]], "pyart.correct.GateFilter": [[676, 3, 1, "", "copy"], [677, 3, 1, "", "exclude_above"], [678, 3, 1, "", "exclude_all"], [679, 3, 1, "", "exclude_below"], [680, 3, 1, "", "exclude_equal"], [681, 3, 1, "", "exclude_gates"], [682, 3, 1, "", "exclude_inside"], [683, 3, 1, "", "exclude_invalid"], [684, 3, 1, "", "exclude_masked"], [685, 3, 1, "", "exclude_none"], [686, 3, 1, "", "exclude_not_equal"], [687, 3, 1, "", "exclude_outside"], [688, 3, 1, "", "exclude_transition"], [689, 4, 1, "", "gate_excluded"], [690, 4, 1, "", "gate_included"], [691, 3, 1, "", "include_above"], [692, 3, 1, "", "include_all"], [693, 3, 1, "", "include_below"], [694, 3, 1, "", "include_equal"], [695, 3, 1, "", "include_gates"], [696, 3, 1, "", "include_inside"], [697, 3, 1, "", "include_none"], [698, 3, 1, "", "include_not_equal"], [699, 3, 1, "", "include_not_masked"], [700, 3, 1, "", "include_not_transition"], [701, 3, 1, "", "include_outside"], [702, 3, 1, "", "include_valid"]], "pyart.exceptions": [[161, 5, 1, "", "DeprecatedAttribute"], [162, 5, 1, "", "DeprecatedFunctionName"], [163, 5, 1, "", "MissingOptionalDependency"], [164, 0, 1, "", "_deprecated_alias"]], "pyart.filters": [[747, 2, 1, "", "GateFilter"], [775, 0, 1, "", "birds_gate_filter"], [776, 0, 1, "", "class_based_gate_filter"], [777, 0, 1, "", "iso0_based_gate_filter"], [778, 0, 1, "", "moment_and_texture_based_gate_filter"], [779, 0, 1, "", "moment_based_gate_filter"], [780, 0, 1, "", "snr_based_gate_filter"], [781, 0, 1, "", "temp_based_gate_filter"], [782, 0, 1, "", "visibility_based_gate_filter"]], "pyart.filters.GateFilter": [[748, 3, 1, "", "copy"], [749, 3, 1, "", "exclude_above"], [750, 3, 1, "", "exclude_all"], [751, 3, 1, "", "exclude_below"], [752, 3, 1, "", "exclude_equal"], [753, 3, 1, "", "exclude_gates"], [754, 3, 1, "", "exclude_inside"], [755, 3, 1, "", "exclude_invalid"], [756, 3, 1, "", "exclude_masked"], [757, 3, 1, "", "exclude_none"], [758, 3, 1, "", "exclude_not_equal"], [759, 3, 1, "", "exclude_outside"], [760, 3, 1, "", "exclude_transition"], [761, 4, 1, "", "gate_excluded"], [762, 4, 1, "", "gate_included"], [763, 3, 1, "", "include_above"], [764, 3, 1, "", "include_all"], [765, 3, 1, "", "include_below"], [766, 3, 1, "", "include_equal"], [767, 3, 1, "", "include_gates"], [768, 3, 1, "", "include_inside"], [769, 3, 1, "", "include_none"], [770, 3, 1, "", "include_not_equal"], [771, 3, 1, "", "include_not_masked"], [772, 3, 1, "", "include_not_transition"], [773, 3, 1, "", "include_outside"], [774, 3, 1, "", "include_valid"]], "pyart.graph": [[784, 2, 1, "", "AirborneRadarDisplay"], [818, 2, 1, "", "GridMapDisplay"], [837, 2, 1, "", "GridMapDisplayBasemap"], [851, 2, 1, "", "RadarDisplay"], [884, 2, 1, "", "RadarMapDisplay"], [921, 2, 1, "", "RadarMapDisplayBasemap"], [958, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[785, 3, 1, "", "generate_az_rhi_title"], [786, 3, 1, "", "generate_filename"], [787, 3, 1, "", "generate_ray_title"], [788, 3, 1, "", "generate_title"], [789, 3, 1, "", "generate_vpt_title"], [790, 3, 1, "", "generate_xsection_title"], [791, 3, 1, "", "label_xaxis_r"], [792, 3, 1, "", "label_xaxis_rays"], [793, 3, 1, "", "label_xaxis_time"], [794, 3, 1, "", "label_xaxis_x"], [795, 3, 1, "", "label_xaxis_xsection"], [796, 3, 1, "", "label_yaxis_field"], [797, 3, 1, "", "label_yaxis_xsection"], [798, 3, 1, "", "label_yaxis_y"], [799, 3, 1, "", "label_yaxis_z"], [800, 3, 1, "", "plot"], [801, 3, 1, "", "plot_azimuth_to_rhi"], [802, 3, 1, "", "plot_colorbar"], [803, 3, 1, "", "plot_cr_raster"], [804, 3, 1, "", "plot_cross_hair"], [805, 3, 1, "", "plot_grid_lines"], [806, 3, 1, "", "plot_label"], [807, 3, 1, "", "plot_labels"], [808, 3, 1, "", "plot_ppi"], [809, 3, 1, "", "plot_range_ring"], [810, 3, 1, "", "plot_range_rings"], [811, 3, 1, "", "plot_ray"], [812, 3, 1, "", "plot_rhi"], [813, 3, 1, "", "plot_sweep_grid"], [814, 3, 1, "", "plot_vpt"], [815, 3, 1, "", "plot_xsection"], [816, 3, 1, "", "set_aspect_ratio"], [817, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[819, 3, 1, "", "cartopy_coastlines"], [820, 3, 1, "", "cartopy_political_boundaries"], [821, 3, 1, "", "cartopy_states"], [822, 3, 1, "", "generate_filename"], [823, 3, 1, "", "generate_grid_title"], [824, 3, 1, "", "generate_latitudinal_level_title"], [825, 3, 1, "", "generate_longitudinal_level_title"], [826, 3, 1, "", "plot_colorbar"], [827, 3, 1, "", "plot_crosshairs"], [828, 3, 1, "", "plot_grid"], [829, 3, 1, "", "plot_grid_contour"], [830, 3, 1, "", "plot_grid_raw"], [831, 3, 1, "", "plot_latitude_slice"], [832, 3, 1, "", "plot_latitudinal_level"], [833, 3, 1, "", "plot_latlon_level"], [834, 3, 1, "", "plot_latlon_slice"], [835, 3, 1, "", "plot_longitude_slice"], [836, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[838, 3, 1, "", "generate_filename"], [839, 3, 1, "", "generate_grid_title"], [840, 3, 1, "", "generate_latitudinal_level_title"], [841, 3, 1, "", "generate_longitudinal_level_title"], [842, 3, 1, "", "get_basemap"], [843, 3, 1, "", "plot_basemap"], [844, 3, 1, "", "plot_colorbar"], [845, 3, 1, "", "plot_crosshairs"], [846, 3, 1, "", "plot_grid"], [847, 3, 1, "", "plot_latitude_slice"], [848, 3, 1, "", "plot_latitudinal_level"], [849, 3, 1, "", "plot_longitude_slice"], [850, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[852, 3, 1, "", "generate_az_rhi_title"], [853, 3, 1, "", "generate_filename"], [854, 3, 1, "", "generate_ray_title"], [855, 3, 1, "", "generate_title"], [856, 3, 1, "", "generate_vpt_title"], [857, 3, 1, "", "generate_xsection_title"], [858, 3, 1, "", "label_xaxis_r"], [859, 3, 1, "", "label_xaxis_rays"], [860, 3, 1, "", "label_xaxis_time"], [861, 3, 1, "", "label_xaxis_x"], [862, 3, 1, "", "label_xaxis_xsection"], [863, 3, 1, "", "label_yaxis_field"], [864, 3, 1, "", "label_yaxis_xsection"], [865, 3, 1, "", "label_yaxis_y"], [866, 3, 1, "", "label_yaxis_z"], [867, 3, 1, "", "plot"], [868, 3, 1, "", "plot_azimuth_to_rhi"], [869, 3, 1, "", "plot_colorbar"], [870, 3, 1, "", "plot_cr_raster"], [871, 3, 1, "", "plot_cross_hair"], [872, 3, 1, "", "plot_grid_lines"], [873, 3, 1, "", "plot_label"], [874, 3, 1, "", "plot_labels"], [875, 3, 1, "", "plot_ppi"], [876, 3, 1, "", "plot_range_ring"], [877, 3, 1, "", "plot_range_rings"], [878, 3, 1, "", "plot_ray"], [879, 3, 1, "", "plot_rhi"], [880, 3, 1, "", "plot_vpt"], [881, 3, 1, "", "plot_xsection"], [882, 3, 1, "", "set_aspect_ratio"], [883, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[885, 3, 1, "", "generate_az_rhi_title"], [886, 3, 1, "", "generate_filename"], [887, 3, 1, "", "generate_ray_title"], [888, 3, 1, "", "generate_title"], [889, 3, 1, "", "generate_vpt_title"], [890, 3, 1, "", "generate_xsection_title"], [891, 3, 1, "", "label_xaxis_r"], [892, 3, 1, "", "label_xaxis_rays"], [893, 3, 1, "", "label_xaxis_time"], [894, 3, 1, "", "label_xaxis_x"], [895, 3, 1, "", "label_xaxis_xsection"], [896, 3, 1, "", "label_yaxis_field"], [897, 3, 1, "", "label_yaxis_xsection"], [898, 3, 1, "", "label_yaxis_y"], [899, 3, 1, "", "label_yaxis_z"], [900, 3, 1, "", "plot"], [901, 3, 1, "", "plot_azimuth_to_rhi"], [902, 3, 1, "", "plot_colorbar"], [903, 3, 1, "", "plot_cr_raster"], [904, 3, 1, "", "plot_cross_hair"], [905, 3, 1, "", "plot_grid_lines"], [906, 3, 1, "", "plot_label"], [907, 3, 1, "", "plot_labels"], [908, 3, 1, "", "plot_line_geo"], [909, 3, 1, "", "plot_line_xy"], [910, 3, 1, "", "plot_point"], [911, 3, 1, "", "plot_ppi"], [912, 3, 1, "", "plot_ppi_map"], [913, 3, 1, "", "plot_range_ring"], [914, 3, 1, "", "plot_range_rings"], [915, 3, 1, "", "plot_ray"], [916, 3, 1, "", "plot_rhi"], [917, 3, 1, "", "plot_vpt"], [918, 3, 1, "", "plot_xsection"], [919, 3, 1, "", "set_aspect_ratio"], [920, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[922, 3, 1, "", "generate_az_rhi_title"], [923, 3, 1, "", "generate_filename"], [924, 3, 1, "", "generate_ray_title"], [925, 3, 1, "", "generate_title"], [926, 3, 1, "", "generate_vpt_title"], [927, 3, 1, "", "generate_xsection_title"], [928, 3, 1, "", "label_xaxis_r"], [929, 3, 1, "", "label_xaxis_rays"], [930, 3, 1, "", "label_xaxis_time"], [931, 3, 1, "", "label_xaxis_x"], [932, 3, 1, "", "label_xaxis_xsection"], [933, 3, 1, "", "label_yaxis_field"], [934, 3, 1, "", "label_yaxis_xsection"], [935, 3, 1, "", "label_yaxis_y"], [936, 3, 1, "", "label_yaxis_z"], [937, 3, 1, "", "plot"], [938, 3, 1, "", "plot_azimuth_to_rhi"], [939, 3, 1, "", "plot_colorbar"], [940, 3, 1, "", "plot_cr_raster"], [941, 3, 1, "", "plot_cross_hair"], [942, 3, 1, "", "plot_grid_lines"], [943, 3, 1, "", "plot_label"], [944, 3, 1, "", "plot_labels"], [945, 3, 1, "", "plot_line_geo"], [946, 3, 1, "", "plot_line_xy"], [947, 3, 1, "", "plot_point"], [948, 3, 1, "", "plot_ppi"], [949, 3, 1, "", "plot_ppi_map"], [950, 3, 1, "", "plot_range_ring"], [951, 3, 1, "", "plot_range_rings"], [952, 3, 1, "", "plot_ray"], [953, 3, 1, "", "plot_rhi"], [954, 3, 1, "", "plot_vpt"], [955, 3, 1, "", "plot_xsection"], [956, 3, 1, "", "set_aspect_ratio"], [957, 3, 1, "", "set_limits"]], "pyart.io": [[960, 0, 1, "", "make_time_unit_str"], [961, 0, 1, "", "prepare_for_read"], [962, 0, 1, "", "read"], [963, 0, 1, "", "read_arm_sonde"], [964, 0, 1, "", "read_arm_sonde_vap"], [965, 0, 1, "", "read_cfradial"], [966, 0, 1, "", "read_cfradial2"], [967, 0, 1, "", "read_chl"], [968, 0, 1, "", "read_grid"], [969, 0, 1, "", "read_grid_mdv"], [970, 0, 1, "", "read_mdv"], [971, 0, 1, "", "read_nexrad_archive"], [972, 0, 1, "", "read_nexrad_cdm"], [973, 0, 1, "", "read_nexrad_level3"], [974, 0, 1, "", "read_rsl"], [975, 0, 1, "", "read_sigmet"], [976, 0, 1, "", "read_uf"], [977, 0, 1, "", "write_cfradial"], [978, 0, 1, "", "write_grid"], [979, 0, 1, "", "write_grid_geotiff"], [980, 0, 1, "", "write_grid_mdv"], [981, 0, 1, "", "write_uf"]], "pyart.lazydict": [[983, 2, 1, "", "LazyLoadDict"], [996, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[398, 3, 1, "", "__contains__"], [399, 3, 1, "", "__delattr__"], [400, 3, 1, "", "__delitem__"], [401, 3, 1, "", "__dir__"], [402, 3, 1, "", "__eq__"], [403, 3, 1, "", "__format__"], [404, 3, 1, "", "__ge__"], [405, 3, 1, "", "__getattribute__"], [406, 3, 1, "", "__getitem__"], [407, 3, 1, "", "__getstate__"], [408, 3, 1, "", "__gt__"], [409, 3, 1, "", "__init__"], [410, 3, 1, "", "__init_subclass__"], [411, 3, 1, "", "__iter__"], [412, 3, 1, "", "__le__"], [413, 3, 1, "", "__len__"], [414, 3, 1, "", "__lt__"], [415, 3, 1, "", "__ne__"], [416, 3, 1, "", "__new__"], [417, 3, 1, "", "__reduce__"], [418, 3, 1, "", "__reduce_ex__"], [419, 3, 1, "", "__repr__"], [420, 3, 1, "", "__setattr__"], [421, 3, 1, "", "__setitem__"], [422, 3, 1, "", "__sizeof__"], [423, 3, 1, "", "__str__"], [424, 3, 1, "", "__subclasshook__"], [984, 3, 1, "", "clear"], [985, 3, 1, "", "copy"], [986, 3, 1, "", "get"], [987, 3, 1, "", "has_key"], [988, 3, 1, "", "items"], [989, 3, 1, "", "keys"], [990, 3, 1, "", "pop"], [991, 3, 1, "", "popitem"], [992, 3, 1, "", "set_lazy"], [993, 3, 1, "", "setdefault"], [994, 3, 1, "", "update"], [995, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[997, 3, 1, "", "clear"], [998, 3, 1, "", "get"], [999, 3, 1, "", "items"], [1000, 3, 1, "", "keys"], [1001, 3, 1, "", "pop"], [1002, 3, 1, "", "popitem"], [1003, 3, 1, "", "setdefault"], [1004, 3, 1, "", "update"], [1005, 3, 1, "", "values"]], "pyart.map": [[1007, 2, 1, "", "GateMapper"], [1011, 0, 1, "", "example_roi_func_constant"], [1012, 0, 1, "", "example_roi_func_dist"], [1013, 0, 1, "", "example_roi_func_dist_beam"], [1014, 0, 1, "", "get_earth_radius"], [1015, 0, 1, "", "grid_from_radars"], [1016, 0, 1, "", "map_gates_to_grid"], [1017, 0, 1, "", "map_to_grid"], [1018, 0, 1, "", "polar_to_cartesian"]], "pyart.map.GateMapper": [[1008, 4, 1, "", "distance_tolerance"], [1009, 3, 1, "", "mapped_radar"], [1010, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[443, 0, 1, "", "_destandardize"], [444, 0, 1, "", "_get_res_vol_sides"], [1020, 0, 1, "", "atmospheric_gas_att"], [1021, 0, 1, "", "calculate_snr_from_reflectivity"], [1022, 0, 1, "", "calculate_velocity_texture"], [1023, 0, 1, "", "composite_reflectivity"], [1024, 0, 1, "", "compute_Doppler_velocity"], [1025, 0, 1, "", "compute_Doppler_velocity_iq"], [1026, 0, 1, "", "compute_Doppler_width"], [1027, 0, 1, "", "compute_Doppler_width_iq"], [1028, 0, 1, "", "compute_apparent_profile"], [1029, 0, 1, "", "compute_bird_density"], [1030, 0, 1, "", "compute_ccor"], [1031, 0, 1, "", "compute_cdr"], [1032, 0, 1, "", "compute_centroids"], [1033, 0, 1, "", "compute_differential_phase"], [1034, 0, 1, "", "compute_differential_phase_iq"], [1035, 0, 1, "", "compute_differential_reflectivity"], [1036, 0, 1, "", "compute_differential_reflectivity_iq"], [1037, 0, 1, "", "compute_evp"], [1038, 0, 1, "", "compute_iq"], [1039, 0, 1, "", "compute_l"], [1040, 0, 1, "", "compute_mean_phase_iq"], [1041, 0, 1, "", "compute_noise_power"], [1042, 0, 1, "", "compute_noisedBZ"], [1043, 0, 1, "", "compute_pol_variables"], [1044, 0, 1, "", "compute_pol_variables_iq"], [1045, 0, 1, "", "compute_qvp"], [1046, 0, 1, "", "compute_radial_noise_hs"], [1047, 0, 1, "", "compute_radial_noise_ivic"], [1048, 0, 1, "", "compute_rcs"], [1049, 0, 1, "", "compute_rcs_from_pr"], [1050, 0, 1, "", "compute_reflectivity"], [1051, 0, 1, "", "compute_reflectivity_iq"], [1052, 0, 1, "", "compute_rhohv"], [1053, 0, 1, "", "compute_rhohv_iq"], [1054, 0, 1, "", "compute_rqvp"], [1055, 0, 1, "", "compute_signal_power"], [1056, 0, 1, "", "compute_snr"], [1057, 0, 1, "", "compute_spectra"], [1058, 0, 1, "", "compute_spectral_differential_phase"], [1059, 0, 1, "", "compute_spectral_differential_reflectivity"], [1060, 0, 1, "", "compute_spectral_noise"], [1061, 0, 1, "", "compute_spectral_phase"], [1062, 0, 1, "", "compute_spectral_power"], [1063, 0, 1, "", "compute_spectral_reflectivity"], [1064, 0, 1, "", "compute_spectral_rhohv"], [1065, 0, 1, "", "compute_st1_iq"], [1066, 0, 1, "", "compute_st2_iq"], [1067, 0, 1, "", "compute_svp"], [1068, 0, 1, "", "compute_ts_along_coord"], [1069, 0, 1, "", "compute_vol_refl"], [1070, 0, 1, "", "compute_vp"], [1071, 0, 1, "", "compute_wbn_iq"], [1072, 0, 1, "", "conv_strat_yuter"], [1073, 0, 1, "", "data_for_centroids"], [1074, 0, 1, "", "detect_ml"], [1075, 0, 1, "", "determine_medoids"], [1076, 0, 1, "", "est_rain_rate_a"], [1077, 0, 1, "", "est_rain_rate_hydro"], [1078, 0, 1, "", "est_rain_rate_kdp"], [1079, 0, 1, "", "est_rain_rate_z"], [1080, 0, 1, "", "est_rain_rate_za"], [1081, 0, 1, "", "est_rain_rate_zkdp"], [1082, 0, 1, "", "est_rain_rate_zpoly"], [1083, 0, 1, "", "est_vertical_windshear"], [1084, 0, 1, "", "est_wind_profile"], [1085, 0, 1, "", "est_wind_vel"], [1086, 0, 1, "", "fetch_radar_time_profile"], [1087, 0, 1, "", "gecsx"], [1088, 0, 1, "", "get_coeff_attg"], [1089, 0, 1, "", "get_freq_band"], [1090, 0, 1, "", "get_iso0_val"], [1091, 0, 1, "", "get_ml_rng_limits"], [1092, 0, 1, "", "grid_displacement_pc"], [1093, 0, 1, "", "grid_shift"], [1094, 0, 1, "", "hydroclass_semisupervised"], [1095, 0, 1, "", "kdp_leastsquare_double_window"], [1096, 0, 1, "", "kdp_leastsquare_single_window"], [1097, 0, 1, "", "kdp_maesaka"], [1098, 0, 1, "", "kdp_schneebeli"], [1099, 0, 1, "", "kdp_vulpiani"], [1100, 0, 1, "", "map_profile_to_gates"], [1101, 0, 1, "", "melting_layer_giangrande"], [1102, 0, 1, "", "melting_layer_hydroclass"], [1103, 0, 1, "", "melting_layer_mf"], [1104, 0, 1, "", "quasi_vertical_profile"], [1105, 0, 1, "", "select_samples"], [1106, 0, 1, "", "steiner_conv_strat"], [1107, 0, 1, "", "synthetic_obs_distribution"], [1108, 0, 1, "", "texture_of_complex_phase"], [1109, 0, 1, "", "vad_browning"], [1110, 0, 1, "", "vad_michelson"]], "pyart.testing": [[1112, 2, 1, "", "Grid"], [1122, 2, 1, "", "InTemporaryDirectory"], [1124, 2, 1, "", "Radar"], [1153, 2, 1, "", "RadarSpectra"], [1182, 0, 1, "", "get_metadata"], [1183, 0, 1, "", "get_test_data"], [1184, 0, 1, "", "make_empty_grid"], [1185, 0, 1, "", "make_empty_ppi_radar"], [1186, 0, 1, "", "make_empty_rhi_radar"], [1187, 0, 1, "", "make_empty_spectra_radar"], [1188, 0, 1, "", "make_normal_storm"], [1189, 0, 1, "", "make_single_ray_radar"], [1190, 0, 1, "", "make_storm_grid"], [1191, 0, 1, "", "make_target_grid"], [1192, 0, 1, "", "make_target_radar"], [1193, 0, 1, "", "make_target_spectra_radar"], [1194, 0, 1, "", "make_velocity_aliased_radar"], [1195, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[1113, 3, 1, "", "add_field"], [1114, 3, 1, "", "get_point_longitude_latitude"], [1115, 3, 1, "", "get_projparams"], [1116, 3, 1, "", "init_point_altitude"], [1117, 3, 1, "", "init_point_longitude_latitude"], [1118, 3, 1, "", "init_point_x_y_z"], [1119, 4, 1, "", "projection_proj"], [1120, 3, 1, "", "to_xarray"], [1121, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[1123, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[1125, 3, 1, "", "add_field"], [1126, 3, 1, "", "add_field_like"], [1127, 3, 1, "", "add_filter"], [1128, 3, 1, "", "check_field_exists"], [1129, 3, 1, "", "extract_sweeps"], [1130, 3, 1, "", "get_azimuth"], [1131, 3, 1, "", "get_elevation"], [1132, 3, 1, "", "get_end"], [1133, 3, 1, "", "get_field"], [1134, 3, 1, "", "get_gate_area"], [1135, 3, 1, "", "get_gate_lat_lon_alt"], [1136, 3, 1, "", "get_gate_x_y_z"], [1137, 3, 1, "", "get_nyquist_vel"], [1138, 3, 1, "", "get_slice"], [1139, 3, 1, "", "get_start"], [1140, 3, 1, "", "get_start_end"], [1141, 3, 1, "", "info"], [1142, 3, 1, "", "init_gate_altitude"], [1143, 3, 1, "", "init_gate_longitude_latitude"], [1144, 3, 1, "", "init_gate_x_y_z"], [1145, 3, 1, "", "init_rays_per_sweep"], [1146, 3, 1, "", "iter_azimuth"], [1147, 3, 1, "", "iter_elevation"], [1148, 3, 1, "", "iter_end"], [1149, 3, 1, "", "iter_field"], [1150, 3, 1, "", "iter_slice"], [1151, 3, 1, "", "iter_start"], [1152, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[1154, 3, 1, "", "add_field"], [1155, 3, 1, "", "add_field_like"], [1156, 3, 1, "", "add_filter"], [1157, 3, 1, "", "check_field_exists"], [1158, 3, 1, "", "extract_sweeps"], [1159, 3, 1, "", "get_azimuth"], [1160, 3, 1, "", "get_elevation"], [1161, 3, 1, "", "get_end"], [1162, 3, 1, "", "get_field"], [1163, 3, 1, "", "get_gate_area"], [1164, 3, 1, "", "get_gate_lat_lon_alt"], [1165, 3, 1, "", "get_gate_x_y_z"], [1166, 3, 1, "", "get_nyquist_vel"], [1167, 3, 1, "", "get_slice"], [1168, 3, 1, "", "get_start"], [1169, 3, 1, "", "get_start_end"], [1170, 3, 1, "", "info"], [1171, 3, 1, "", "init_gate_altitude"], [1172, 3, 1, "", "init_gate_longitude_latitude"], [1173, 3, 1, "", "init_gate_x_y_z"], [1174, 3, 1, "", "init_rays_per_sweep"], [1175, 3, 1, "", "iter_azimuth"], [1176, 3, 1, "", "iter_elevation"], [1177, 3, 1, "", "iter_end"], [1178, 3, 1, "", "iter_field"], [1179, 3, 1, "", "iter_slice"], [1180, 3, 1, "", "iter_start"], [1181, 3, 1, "", "iter_start_end"]], "pyart.util": [[1197, 0, 1, "", "angular_mean"], [1198, 0, 1, "", "angular_mean_deg"], [1199, 0, 1, "", "angular_std"], [1200, 0, 1, "", "angular_std_deg"], [1201, 0, 1, "", "angular_texture_2d"], [1202, 0, 1, "", "colocated_gates"], [1203, 0, 1, "", "colocated_gates2"], [1204, 0, 1, "", "compute_azimuthal_average"], [1205, 0, 1, "", "compute_corr"], [1206, 0, 1, "", "compute_directional_stats"], [1207, 0, 1, "", "compute_mse"], [1208, 0, 1, "", "compute_nse"], [1209, 0, 1, "", "cross_section_ppi"], [1210, 0, 1, "", "cross_section_rhi"], [1211, 0, 1, "", "datetime_from_dataset"], [1212, 0, 1, "", "datetime_from_grid"], [1213, 0, 1, "", "datetime_from_radar"], [1214, 0, 1, "", "datetimes_from_dataset"], [1215, 0, 1, "", "datetimes_from_radar"], [1216, 0, 1, "", "estimate_noise_hs74"], [1217, 0, 1, "", "estimate_noise_ivic13"], [1218, 0, 1, "", "find_neighbour_gates"], [1219, 0, 1, "", "for_azimuth"], [1220, 0, 1, "", "get_column_rays"], [1221, 0, 1, "", "get_field_location"], [1222, 0, 1, "", "get_ivic_flat_reg_var_max"], [1223, 0, 1, "", "get_ivic_pct"], [1224, 0, 1, "", "get_ivic_snr_thr"], [1225, 0, 1, "", "get_target_elevations"], [1226, 0, 1, "", "grid_texture_2d"], [1227, 0, 1, "", "image_mute_radar"], [1228, 0, 1, "", "interpol_spectra"], [1229, 0, 1, "", "intersection"], [1230, 0, 1, "", "interval_mean"], [1231, 0, 1, "", "interval_std"], [1232, 0, 1, "", "is_vpt"], [1233, 0, 1, "", "ivic_flat_reg_var_max_table"], [1234, 0, 1, "", "ivic_flat_reg_wind_len_table"], [1235, 0, 1, "", "ivic_pct_table"], [1236, 0, 1, "", "ivic_snr_thr_table"], [1237, 0, 1, "", "join_radar"], [1238, 0, 1, "", "join_spectra"], [1239, 0, 1, "", "ma_broadcast_to"], [1240, 0, 1, "", "mean_of_two_angles"], [1241, 0, 1, "", "mean_of_two_angles_deg"], [1242, 0, 1, "", "radar_from_spectra"], [1243, 0, 1, "", "rolling_window"], [1244, 0, 1, "", "simulated_vel_from_profile"], [1245, 0, 1, "", "sphere_distance"], [1246, 0, 1, "", "subset_radar"], [1247, 0, 1, "", "subset_radar_spectra"], [1248, 0, 1, "", "texture"], [1249, 0, 1, "", "texture_along_ray"], [1250, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252], "aux_io": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577], "read_bin": [0, 539], "read_bin_mf": [1, 540], "read_cartesian_metranet": [2, 541], "read_cf1": [3, 542], "read_cf1_cartesian": [4, 543], "read_cf1_cartesian_mf": [5, 544], "read_d3r_gcpex_nc": [6, 545], "read_dat_mf": [7, 546], "read_gam": [8, 550], "read_gif": [9, 551], "read_grib": [10, 552], "read_hpl": [11, 553], "read_iq": [12, 554], "read_kazr": [13, 555], "read_metranet": [14, 556], "read_noxp_iphex_nc": [15, 557], "read_odim_grid_h5": [16, 558], "read_odim_h5": [17, 559], "read_odim_vp_h5": [18, 560], "read_pattern": [19, 561], "read_png": [20, 562], "read_radx": [21, 568], "read_rainbow_psr": [22, 569], "read_rainbow_psr_spectra": [23, 570], "read_rainbow_wrl": [24, 571], "read_spectra": [25, 573], "write_odim_grid_h5": [26, 574], "write_odim_h5": [27, 575], "write_spectra": [28, 577], "bridg": [29, 578, 579], "texture_of_complex_phas": [29, 532, 579, 1108], "config": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591], "filemetadata": [30, 31, 32, 33, 581, 582, 583, 584], "__call__": [31, 582], "get_field_nam": [32, 37, 583, 588], "get_metadata": [33, 39, 584, 590, 1182], "get_field_colormap": [34, 585], "get_field_limit": [35, 586], "get_field_map": [36, 587], "get_fillvalu": [38, 589], "load_config": [40, 591], "core": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673], "grid": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 783, 959, 1006, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1264, 1265, 1269, 1299], "add_field": [42, 56, 85, 594, 608, 637, 1113, 1125, 1154], "get_point_longitude_latitud": [43, 595, 1114], "get_projparam": [44, 596, 1115], "init_point_altitud": [45, 597, 1116], "init_point_longitude_latitud": [46, 598, 1117], "init_point_x_y_z": [47, 599, 1118], "projection_proj": [48, 600, 1119], "to_xarrai": [49, 601, 1120], "write": [50, 536, 602, 959, 1121], "horizontalwindprofil": [51, 52, 53, 54, 603, 604, 605, 606], "from_u_and_v": [52, 604], "u_wind": [53, 605], "v_wind": [54, 606], "radar": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 536, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 674, 746, 783, 959, 1019, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1263, 1264, 1265, 1287, 1293, 1296, 1301, 1303], "add_field_lik": [57, 86, 609, 638, 1126, 1155], "add_filt": [58, 87, 610, 639, 1127, 1156], "check_field_exist": [59, 88, 611, 640, 1128, 1157], "extract_sweep": [60, 89, 612, 641, 1129, 1158], "get_azimuth": [61, 90, 613, 642, 1130, 1159], "get_elev": [62, 91, 614, 643, 1131, 1160], "get_end": [63, 92, 615, 644, 1132, 1161], "get_field": [64, 93, 616, 645, 1133, 1162], "get_gate_area": [65, 94, 617, 646, 1134, 1163], "get_gate_lat_lon_alt": [66, 95, 618, 647, 1135, 1164], "get_gate_x_y_z": [67, 96, 619, 648, 1136, 1165], "get_nyquist_vel": [68, 97, 620, 649, 1137, 1166], "get_slic": [69, 98, 621, 650, 1138, 1167], "get_start": [70, 99, 622, 651, 1139, 1168], "get_start_end": [71, 100, 623, 652, 1140, 1169], "info": [72, 101, 624, 653, 1141, 1170], "init_gate_altitud": [73, 102, 625, 654, 1142, 1171], "init_gate_longitude_latitud": [74, 103, 626, 655, 1143, 1172], "init_gate_x_y_z": [75, 104, 627, 656, 1144, 1173], "init_rays_per_sweep": [76, 105, 628, 657, 1145, 1174], "iter_azimuth": [77, 106, 629, 658, 1146, 1175], "iter_elev": [78, 107, 630, 659, 1147, 1176], "iter_end": [79, 108, 631, 660, 1148, 1177], "iter_field": [80, 109, 632, 661, 1149, 1178], "iter_slic": [81, 110, 633, 662, 1150, 1179], "iter_start": [82, 111, 634, 663, 1151, 1180], "iter_start_end": [83, 112, 635, 664, 1152, 1181], "radarspectra": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181], "antenna_to_cartesian": [113, 665], "antenna_vectors_to_cartesian": [114, 666], "cartesian_to_antenna": [115, 667], "cartesian_to_geograph": [116, 668], "cartesian_to_geographic_aeqd": [117, 669], "cartesian_vectors_to_geograph": [118, 670], "geographic_to_cartesian": [119, 671], "geographic_to_cartesian_aeqd": [120, 672], "wgs84_to_swissch1903": [121, 673], "test": [121, 673, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1303], "exampl": [121, 673, 1006, 1253, 1257, 1258, 1262, 1267, 1286, 1289], "correct": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 1253, 1254, 1257], "calculate_attenu": [122, 703], "calculate_attenuation_philinear": [123, 704], "calculate_attenuation_zphi": [124, 705], "compute_apparent_vpr": [125, 706], "compute_theoretical_vpr": [126, 707], "correct_bia": [127, 708], "correct_noise_rhohv": [128, 709], "correct_sys_phas": [129, 710], "correct_vis": [130, 711], "correct_vpr": [131, 712], "correct_vpr_spatialis": [132, 713], "dealias_fourdd": [133, 714], "dealias_region_bas": [134, 715], "dealias_unwrap_phas": [135, 716], "despeckle_field": [136, 717], "det_sys_phase_rai": [137, 718], "est_rhohv_rain": [138, 719], "est_zdr_precip": [139, 720], "est_zdr_snow": [140, 721], "find_object": [141, 722], "get_mask_fzl": [142, 724], "get_sun_hit": [143, 725], "get_sun_hits_iv": [144, 726], "get_sun_hits_psr": [145, 727], "phase_proc_lp": [146, 729], "phase_proc_lp_gf": [147, 730], "ptoa_to_sf": [148, 731], "scanning_loss": [149, 733], "selfconsistency_bia": [150, 734], "selfconsistency_bias2": [151, 735], "selfconsistency_kdp_phidp": [152, 736], "smooth_mask": [153, 737], "smooth_phidp_double_window": [154, 738], "smooth_phidp_single_window": [155, 739], "solar_flux_lookup": [156, 740], "sun_position_mfr": [157, 741], "sun_position_pysolar": [158, 742], "sun_pow": [159, 743], "sun_retriev": [160, 744], "except": [161, 162, 163, 164, 745], "deprecatedattribut": 161, "deprecatedfunctionnam": 162, "missingoptionaldepend": 163, "_deprecated_alia": 164, "filter": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782], "gatefilt": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 1300], "copi": [166, 426, 676, 748, 985], "exclude_abov": [167, 677, 749], "exclude_al": [168, 678, 750], "exclude_below": [169, 679, 751], "exclude_equ": [170, 680, 752], "exclude_g": [171, 681, 753], "exclude_insid": [172, 682, 754], "exclude_invalid": [173, 683, 755], "exclude_mask": [174, 684, 756], "exclude_non": [175, 685, 757], "exclude_not_equ": [176, 686, 758], "exclude_outsid": [177, 687, 759], "exclude_transit": [178, 688, 760], "gate_exclud": [179, 689, 761], "gate_includ": [180, 690, 762], "include_abov": [181, 691, 763], "include_al": [182, 692, 764], "include_below": [183, 693, 765], "include_equ": [184, 694, 766], "include_g": [185, 695, 767], "include_insid": [186, 696, 768], "include_non": [187, 697, 769], "include_not_equ": [188, 698, 770], "include_not_mask": [189, 699, 771], "include_not_transit": [190, 700, 772], "include_outsid": [191, 701, 773], "include_valid": [192, 702, 774], "birds_gate_filt": [193, 775], "class_based_gate_filt": [194, 776], "iso0_based_gate_filt": [195, 777], "moment_and_texture_based_gate_filt": [196, 778], "moment_based_gate_filt": [197, 728, 779], "snr_based_gate_filt": [198, 780], "temp_based_gate_filt": [199, 781], "visibility_based_gate_filt": [200, 782], "graph": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958], "airborneradardisplai": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "generate_az_rhi_titl": [202, 269, 302, 339, 785, 852, 885, 922], "generate_filenam": [203, 239, 255, 270, 303, 340, 786, 822, 838, 853, 886, 923], "generate_ray_titl": [204, 271, 304, 341, 787, 854, 887, 924], "generate_titl": [205, 272, 305, 342, 788, 855, 888, 925], "generate_vpt_titl": [206, 273, 306, 343, 789, 856, 889, 926], "generate_xsection_titl": [207, 274, 307, 344, 790, 857, 890, 927], "label_xaxis_r": [208, 275, 308, 345, 791, 858, 891, 928], "label_xaxis_rai": [209, 276, 309, 346, 792, 859, 892, 929], "label_xaxis_tim": [210, 277, 310, 347, 793, 860, 893, 930], "label_xaxis_x": [211, 278, 311, 348, 794, 861, 894, 931], "label_xaxis_xsect": [212, 279, 312, 349, 795, 862, 895, 932], "label_yaxis_field": [213, 280, 313, 350, 796, 863, 896, 933], "label_yaxis_xsect": [214, 281, 314, 351, 797, 864, 897, 934], "label_yaxis_i": [215, 282, 315, 352, 798, 865, 898, 935], "label_yaxis_z": [216, 283, 316, 353, 799, 866, 899, 936], "plot": [217, 284, 317, 354, 783, 800, 867, 900, 937, 1257, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1288, 1290, 1291], "plot_azimuth_to_rhi": [218, 285, 318, 355, 801, 868, 901, 938], "plot_colorbar": [219, 243, 261, 286, 319, 356, 802, 826, 844, 869, 902, 939], "plot_cr_rast": [220, 287, 320, 357, 803, 870, 903, 940], "plot_cross_hair": [221, 288, 321, 358, 804, 871, 904, 941], "plot_grid_lin": [222, 289, 322, 359, 805, 872, 905, 942], "plot_label": [223, 224, 290, 291, 323, 324, 360, 361, 806, 807, 873, 874, 906, 907, 943, 944], "plot_ppi": [225, 292, 328, 365, 808, 875, 911, 948], "plot_range_r": [226, 227, 293, 294, 330, 331, 367, 368, 809, 810, 876, 877, 913, 914, 950, 951], "plot_rai": [228, 295, 332, 369, 811, 878, 915, 952], "plot_rhi": [229, 296, 333, 370, 812, 879, 916, 953], "plot_sweep_grid": [230, 813], "plot_vpt": [231, 297, 334, 371, 814, 880, 917, 954], "plot_xsect": [232, 298, 335, 372, 815, 881, 918, 955], "set_aspect_ratio": [233, 299, 336, 373, 816, 882, 919, 956], "set_limit": [234, 300, 337, 374, 817, 883, 920, 957], "gridmapdisplai": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1283], "cartopy_coastlin": [236, 819], "cartopy_political_boundari": [237, 820], "cartopy_st": [238, 821], "generate_grid_titl": [240, 256, 823, 839], "generate_latitudinal_level_titl": [241, 257, 824, 840], "generate_longitudinal_level_titl": [242, 258, 825, 841], "plot_crosshair": [244, 262, 827, 845], "plot_grid": [245, 263, 828, 846], "plot_grid_contour": [246, 829], "plot_grid_raw": [247, 830], "plot_latitude_slic": [248, 264, 831, 847], "plot_latitudinal_level": [249, 265, 832, 848], "plot_latlon_level": [250, 833], "plot_latlon_slic": [251, 834], "plot_longitude_slic": [252, 266, 835, 849], "plot_longitudinal_level": [253, 267, 836, 850], "gridmapdisplaybasemap": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850], "get_basemap": [259, 842], "plot_basemap": [260, 843], "radardisplai": [268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883], "radarmapdisplai": [301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920], "plot_line_geo": [325, 362, 908, 945], "plot_line_xi": [326, 363, 909, 946], "plot_point": [327, 364, 910, 947], "plot_ppi_map": [329, 366, 912, 949], "radarmapdisplaybasemap": [338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957], "io": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981], "make_time_unit_str": [375, 960], "prepare_for_read": [376, 961], "read": [377, 536, 959, 962, 1259, 1260], "read_arm_sond": [378, 963], "read_arm_sonde_vap": [379, 964], "read_cfradi": [380, 965], "read_cfradial2": [381, 966], "read_chl": [382, 967], "read_grid": [383, 968], "read_grid_mdv": [384, 969], "read_mdv": [385, 970], "read_nexrad_arch": [386, 971], "read_nexrad_cdm": [387, 972], "read_nexrad_level3": [388, 973], "read_rsl": [389, 974], "read_sigmet": [390, 975], "read_uf": [391, 976], "write_cfradi": [392, 977], "write_grid": [393, 978], "write_grid_geotiff": [394, 979], "write_grid_mdv": [395, 980], "write_uf": [396, 981], "lazydict": [397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005], "lazyloaddict": [397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995], "__contains__": 398, "__delattr__": 399, "__delitem__": 400, "__dir__": 401, "__eq__": 402, "__format__": 403, "__ge__": 404, "__getattribute__": 405, "__getitem__": 406, "__getstate__": 407, "__gt__": 408, "__init__": 409, "__init_subclass__": 410, "__iter__": 411, "__le__": 412, "__len__": 413, "__lt__": 414, "__ne__": 415, "__new__": 416, "__reduce__": 417, "__reduce_ex__": 418, "__repr__": 419, "__setattr__": 420, "__setitem__": 421, "__sizeof__": 422, "__str__": 423, "__subclasshook__": 424, "clear": [425, 984, 997], "get": [427, 986, 998, 1293], "has_kei": [428, 987], "item": [429, 988, 999], "kei": [430, 989, 1000], "pop": [431, 990, 1001], "popitem": [432, 991, 1002], "set_lazi": [433, 992], "setdefault": [434, 993, 1003], "updat": [435, 994, 1004], "valu": [436, 995, 1005], "map": [437, 438, 439, 440, 441, 442, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1257, 1262, 1264, 1265, 1276, 1299], "example_roi_func_const": [437, 1011], "example_roi_func_dist": [438, 1012], "example_roi_func_dist_beam": [439, 1013], "grid_from_radar": [440, 1015], "map_gates_to_grid": [441, 1016], "map_to_grid": [442, 1017], "retriev": [443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1257, 1286], "_destandard": 443, "_get_res_vol_sid": 444, "atmospheric_gas_att": [445, 1020], "calculate_snr_from_reflect": [446, 1021], "calculate_velocity_textur": [447, 1022], "compute_doppler_veloc": [448, 1024], "compute_doppler_velocity_iq": [449, 1025], "compute_doppler_width": [450, 1026], "compute_doppler_width_iq": [451, 1027], "compute_apparent_profil": [452, 1028], "compute_bird_dens": [453, 1029], "compute_ccor": [454, 1030], "compute_cdr": [455, 1031], "compute_centroid": [456, 1032], "compute_differential_phas": [457, 1033], "compute_differential_phase_iq": [458, 1034], "compute_differential_reflect": [459, 1035], "compute_differential_reflectivity_iq": [460, 1036], "compute_evp": [461, 1037], "compute_iq": [462, 1038], "compute_l": [463, 1039], "compute_mean_phase_iq": [464, 1040], "compute_noise_pow": [465, 1041], "compute_noisedbz": [466, 1042], "compute_pol_vari": [467, 1043], "compute_pol_variables_iq": [468, 1044], "compute_qvp": [469, 1045], "compute_radial_noise_h": [470, 1046], "compute_radial_noise_iv": [471, 1047], "compute_rc": [472, 1048], "compute_rcs_from_pr": [473, 1049], "compute_reflect": [474, 1050], "compute_reflectivity_iq": [475, 1051], "compute_rhohv": [476, 1052], "compute_rhohv_iq": [477, 1053], "compute_rqvp": [478, 1054], "compute_signal_pow": [479, 1055], "compute_snr": [480, 1056], "compute_spectra": [481, 1057], "compute_spectral_differential_phas": [482, 1058], "compute_spectral_differential_reflect": [483, 1059], "compute_spectral_nois": [484, 1060], "compute_spectral_phas": [485, 1061], "compute_spectral_pow": [486, 1062], "compute_spectral_reflect": [487, 1063], "compute_spectral_rhohv": [488, 1064], "compute_st1_iq": [489, 1065], "compute_st2_iq": [490, 1066], "compute_svp": [491, 1067], "compute_ts_along_coord": [492, 1068], "compute_vol_refl": [493, 1069], "compute_vp": [494, 1070], "compute_wbn_iq": [495, 1071], "conv_strat_yut": [496, 1072], "data_for_centroid": [497, 1073], "detect_ml": [498, 1074], "paremet": [498, 1074], "determine_medoid": [499, 1075], "est_rain_rate_a": [500, 1076], "est_rain_rate_hydro": [501, 1077], "est_rain_rate_kdp": [502, 1078], "est_rain_rate_z": [503, 1079], "est_rain_rate_za": [504, 1080], "est_rain_rate_zkdp": [505, 1081], "est_rain_rate_zpoli": [506, 1082], "est_vertical_windshear": [507, 1083], "est_wind_profil": [508, 1084], "est_wind_vel": [509, 1085], "fetch_radar_time_profil": [510, 1086], "gecsx": [511, 1087], "get_coeff_attg": [512, 1088], "get_freq_band": [513, 1089], "get_iso0_v": [514, 1090], "get_ml_rng_limit": [515, 1091], "grid_displacement_pc": [516, 1092], "grid_shift": [517, 1093], "hydroclass_semisupervis": [518, 1094], "kdp_leastsquare_double_window": [519, 1095], "kdp_leastsquare_single_window": [520, 1096], "kdp_maesaka": [521, 1097], "kdp_schneeb": [522, 1098], "kdp_vulpiani": [523, 1099], "map_profile_to_g": [524, 1100], "melting_layer_giangrand": [525, 1101], "melting_layer_hydroclass": [526, 1102], "melting_layer_mf": [527, 1103], "quasi_vertical_profil": [528, 1104], "select_sampl": [529, 1105], "steiner_conv_strat": [530, 1106], "synthetic_obs_distribut": [531, 1107], "vad_brown": [533, 1109], "vad_michelson": [534, 1110], "_debug_info": 535, "auxiliari": 536, "input": [536, 959, 1257, 1258], "output": [536, 959, 1257, 1258], "data": [536, 746, 783, 959, 1259, 1260, 1299, 1300], "convert_data": 537, "get_librari": 538, "read_edge_netcdf": 547, "read_file_c": 548, "read_file_pi": 549, "read_product_c": 563, "read_product_pi": 564, "read_psr_cpi_head": 565, "read_psr_head": 566, "read_psr_spectra": 567, "read_sinarame_h5": 572, "write_sinarame_cfradi": 576, "other": [578, 674, 1252], "toolkit": [578, 1293, 1303], "phase": 578, "function": [578, 674], "class": 592, "coordin": 592, "transform": 592, "veloc": [674, 1255, 1297], "unfold": 674, "helper": 674, "gauss_fit": 723, "retrieval_result": 732, "plot_convstrat_schem": 958, "sond": 959, "special": 959, "us": [959, 1255, 1263, 1283], "mutablemap": [996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005], "roi": 1006, "region": [1006, 1255], "interest": 1006, "gatemapp": [1007, 1008, 1009, 1010, 1263], "distance_toler": 1008, "mapped_radar": 1009, "time_toler": 1010, "get_earth_radiu": 1014, "polar_to_cartesian": 1018, "composite_reflect": 1023, "intemporarydirectori": [1122, 1123], "cleanup": 1123, "get_test_data": 1183, "make_empty_grid": 1184, "make_empty_ppi_radar": 1185, "make_empty_rhi_radar": 1186, "make_empty_spectra_radar": 1187, "make_normal_storm": 1188, "make_single_ray_radar": 1189, "make_storm_grid": 1190, "make_target_grid": 1191, "make_target_radar": 1192, "make_target_spectra_radar": 1193, "make_velocity_aliased_radar": 1194, "make_velocity_aliased_rhi_radar": 1195, "util": [1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250], "angular_mean": 1197, "angular_mean_deg": 1198, "angular_std": 1199, "angular_std_deg": 1200, "angular_texture_2d": 1201, "colocated_g": 1202, "colocated_gates2": 1203, "compute_azimuthal_averag": 1204, "compute_corr": 1205, "compute_directional_stat": 1206, "compute_ms": 1207, "compute_ns": 1208, "cross_section_ppi": 1209, "cross_section_rhi": 1210, "datetime_from_dataset": 1211, "datetime_from_grid": 1212, "datetime_from_radar": 1213, "datetimes_from_dataset": 1214, "datetimes_from_radar": 1215, "estimate_noise_hs74": 1216, "estimate_noise_ivic13": 1217, "find_neighbour_g": 1218, "for_azimuth": 1219, "assumpt": [1219, 1245], "get_column_rai": 1220, "get_field_loc": 1221, "get_ivic_flat_reg_var_max": 1222, "get_ivic_pct": 1223, "get_ivic_snr_thr": 1224, "get_target_elev": 1225, "grid_texture_2d": 1226, "image_mute_radar": 1227, "interpol_spectra": 1228, "intersect": 1229, "interval_mean": 1230, "interval_std": 1231, "is_vpt": 1232, "ivic_flat_reg_var_max_t": 1233, "ivic_flat_reg_wind_len_t": 1234, "ivic_pct_t": 1235, "ivic_snr_thr_t": 1236, "join_radar": 1237, "join_spectra": 1238, "ma_broadcast_to": 1239, "mean_of_two_angl": 1240, "mean_of_two_angles_deg": 1241, "radar_from_spectra": 1242, "rolling_window": 1243, "simulated_vel_from_profil": 1244, "sphere_dist": 1245, "paramet": 1245, "subset_radar": 1246, "subset_radar_spectra": 1247, "textur": 1248, "texture_along_rai": 1249, "to_vpt": 1250, "api": 1251, "refer": [1251, 1289], "manual": 1251, "changelog": 1252, "py": [1252, 1293, 1300, 1301, 1303], "art": [1252, 1293, 1300, 1301, 1303], "v1": 1252, "15": 1252, "0": 1252, "bug": 1252, "fix": [1252, 1260], "merg": 1252, "pr": 1252, "contributor": [1252, 1303], "thi": 1252, "releas": 1252, "14": 1252, "6": 1252, "enhanc": 1252, "made": 1252, "mainten": 1252, "upkeep": 1252, "improv": 1252, "5": 1252, "4": 1252, "3": [1252, 1259, 1283], "2": [1252, 1259, 1260], "document": 1252, "1": 1252, "13": 1252, "12": 1252, "7": 1252, "11": 1252, "8": 1252, "deprec": 1252, "featur": 1252, "10": 1252, "9": 1252, "picasso": 1252, "moment": [1253, 1257, 1272], "reflect": [1254, 1271, 1273, 1279, 1280, 1288], "attenu": 1254, "dealia": 1255, "doppler": 1255, "base": 1255, "algorithm": [1255, 1289], "comput": [1256, 1261, 1266, 1285, 1292], "time": [1256, 1261, 1266, 1285, 1292], "galleri": [1257, 1294], "nexrad": [1259, 1260, 1272, 1273], "from": [1259, 1269, 1272, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1284, 1302], "aw": 1259, "cloud": 1259, "level": [1259, 1260], "older": 1260, "latitud": 1260, "longitud": 1260, "issu": 1260, "compar": 1263, "two": [1263, 1265, 1282], "singl": 1264, "cartesian": [1264, 1265, 1299], "choos": 1268, "colormap": 1268, "your": [1268, 1270], "cross": [1269, 1284], "section": [1269, 1284], "modifi": 1270, "colorbar": 1270, "creat": [1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1295, 1305], "an": [1271, 1279, 1280, 1305], "imag": 1271, "mute": 1271, "multipl": [1272, 1277, 1278], "file": [1272, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1295, 1296, 1303], "ppi": [1274, 1275, 1276, 1284], "cfradial": 1274, "mdv": [1275, 1279, 1280, 1281], "cartopi": 1276, "panel": [1277, 1278, 1282, 1283], "rhi": [1277, 1278, 1279, 1280, 1281, 1282], "cf": [1277, 1278], "radial": [1277, 1278], "contour": [1279, 1280], "line": [1279, 1280], "volum": 1284, "extract": 1287, "column": 1287, "abov": 1287, "point": 1287, "calcul": [1288, 1290, 1291], "composit": 1288, "convect": 1289, "stratiform": 1289, "classif": [1289, 1290], "how": 1289, "work": 1289, "summari": 1289, "recommend": 1289, "best": 1289, "practic": 1289, "hydrometeor": 1290, "vad": 1291, "profil": 1291, "The": [1293, 1301, 1303], "python": [1293, 1303], "arm": [1293, 1303], "about": 1293, "meteoswiss": 1293, "fork": 1293, "cite": [1293, 1303], "what": 1293, "can": 1293, "do": 1293, "short": 1293, "cours": 1293, "instal": [1293, 1302, 1303], "depend": [1293, 1302, 1305], "option": [1293, 1302, 1305], "help": 1293, "contribut": 1293, "notebook": 1294, "basic": 1295, "ingest": 1295, "netcdf": 1295, "field": 1296, "manipul": 1296, "save": 1296, "object": [1296, 1301], "dealias": 1297, "mask": 1300, "With": 1300, "index": 1301, "requir": 1302, "obtain": 1302, "latest": 1302, "sourc": 1302, "frequent": 1302, "ask": 1302, "question": 1302, "": 1303, "guid": [1303, 1304], "import": 1303, "link": 1303, "resourc": 1303, "code": 1303, "style": 1303, "setup": 1303, "github": 1303, "blog": 1303, "post": 1303, "user": 1304, "set": 1305, "up": 1305, "environ": 1305, "anaconda": 1305, "channel": 1305, "ad": 1305, "path": 1305, "more": 1305, "inform": 1305}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"pyart.aux_io.read_bin": [[0, "pyart-aux-io-read-bin"], [539, "pyart-aux-io-read-bin"]], "pyart.aux_io.read_bin_mf": [[1, "pyart-aux-io-read-bin-mf"], [540, "pyart-aux-io-read-bin-mf"]], "pyart.aux_io.read_cartesian_metranet": [[2, "pyart-aux-io-read-cartesian-metranet"], [541, "pyart-aux-io-read-cartesian-metranet"]], "pyart.aux_io.read_cf1": [[3, "pyart-aux-io-read-cf1"], [542, "pyart-aux-io-read-cf1"]], "pyart.aux_io.read_cf1_cartesian": [[4, "pyart-aux-io-read-cf1-cartesian"], [543, "pyart-aux-io-read-cf1-cartesian"]], "pyart.aux_io.read_cf1_cartesian_mf": [[5, "pyart-aux-io-read-cf1-cartesian-mf"], [544, "pyart-aux-io-read-cf1-cartesian-mf"]], "pyart.aux_io.read_d3r_gcpex_nc": [[6, "pyart-aux-io-read-d3r-gcpex-nc"], [545, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_dat_mf": [[7, "pyart-aux-io-read-dat-mf"], [546, "pyart-aux-io-read-dat-mf"]], "pyart.aux_io.read_gamic": [[8, "pyart-aux-io-read-gamic"], [550, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_gif": [[9, "pyart-aux-io-read-gif"], [551, "pyart-aux-io-read-gif"]], "pyart.aux_io.read_grib": [[10, "pyart-aux-io-read-grib"], [552, "pyart-aux-io-read-grib"]], "pyart.aux_io.read_hpl": [[11, "pyart-aux-io-read-hpl"], [553, "pyart-aux-io-read-hpl"]], "pyart.aux_io.read_iq": [[12, "pyart-aux-io-read-iq"], [554, "pyart-aux-io-read-iq"]], "pyart.aux_io.read_kazr": [[13, "pyart-aux-io-read-kazr"], [555, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_metranet": [[14, "pyart-aux-io-read-metranet"], [556, "pyart-aux-io-read-metranet"]], "pyart.aux_io.read_noxp_iphex_nc": [[15, "pyart-aux-io-read-noxp-iphex-nc"], [557, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_grid_h5": [[16, "pyart-aux-io-read-odim-grid-h5"], [558, "pyart-aux-io-read-odim-grid-h5"]], "pyart.aux_io.read_odim_h5": [[17, "pyart-aux-io-read-odim-h5"], [559, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_odim_vp_h5": [[18, "pyart-aux-io-read-odim-vp-h5"], [560, "pyart-aux-io-read-odim-vp-h5"]], "pyart.aux_io.read_pattern": [[19, "pyart-aux-io-read-pattern"], [561, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_png": [[20, "pyart-aux-io-read-png"], [562, "pyart-aux-io-read-png"]], "pyart.aux_io.read_radx": [[21, "pyart-aux-io-read-radx"], [568, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_rainbow_psr": [[22, "pyart-aux-io-read-rainbow-psr"], [569, "pyart-aux-io-read-rainbow-psr"]], "pyart.aux_io.read_rainbow_psr_spectra": [[23, "pyart-aux-io-read-rainbow-psr-spectra"], [570, "pyart-aux-io-read-rainbow-psr-spectra"]], "pyart.aux_io.read_rainbow_wrl": [[24, "pyart-aux-io-read-rainbow-wrl"], [571, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_spectra": [[25, "pyart-aux-io-read-spectra"], [573, "pyart-aux-io-read-spectra"]], "pyart.aux_io.write_odim_grid_h5": [[26, "pyart-aux-io-write-odim-grid-h5"], [574, "pyart-aux-io-write-odim-grid-h5"]], "pyart.aux_io.write_odim_h5": [[27, "pyart-aux-io-write-odim-h5"], [575, "pyart-aux-io-write-odim-h5"]], "pyart.aux_io.write_spectra": [[28, "pyart-aux-io-write-spectra"], [577, "pyart-aux-io-write-spectra"]], "pyart.bridge.texture_of_complex_phase": [[29, "pyart-bridge-texture-of-complex-phase"], [579, "pyart-bridge-texture-of-complex-phase"]], "pyart.config.FileMetadata": [[30, "pyart-config-filemetadata"], [581, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[31, "pyart-config-filemetadata-call"], [582, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[32, "pyart-config-filemetadata-get-field-name"], [583, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[33, "pyart-config-filemetadata-get-metadata"], [584, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[34, "pyart-config-get-field-colormap"], [585, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[35, "pyart-config-get-field-limits"], [586, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[36, "pyart-config-get-field-mapping"], [587, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[37, "pyart-config-get-field-name"], [588, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[38, "pyart-config-get-fillvalue"], [589, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[39, "pyart-config-get-metadata"], [590, "pyart-config-get-metadata"]], "pyart.config.load_config": [[40, "pyart-config-load-config"], [591, "pyart-config-load-config"]], "pyart.core.Grid": [[41, "pyart-core-grid"], [593, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[42, "pyart-core-grid-add-field"], [594, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[43, "pyart-core-grid-get-point-longitude-latitude"], [595, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[44, "pyart-core-grid-get-projparams"], [596, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[45, "pyart-core-grid-init-point-altitude"], [597, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[46, "pyart-core-grid-init-point-longitude-latitude"], [598, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[47, "pyart-core-grid-init-point-x-y-z"], [599, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[48, "pyart-core-grid-projection-proj"], [600, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[49, "pyart-core-grid-to-xarray"], [601, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[50, "pyart-core-grid-write"], [602, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[51, "pyart-core-horizontalwindprofile"], [603, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[52, "pyart-core-horizontalwindprofile-from-u-and-v"], [604, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[53, "pyart-core-horizontalwindprofile-u-wind"], [605, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[54, "pyart-core-horizontalwindprofile-v-wind"], [606, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[55, "pyart-core-radar"], [607, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[56, "pyart-core-radar-add-field"], [608, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[57, "pyart-core-radar-add-field-like"], [609, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[58, "pyart-core-radar-add-filter"], [610, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[59, "pyart-core-radar-check-field-exists"], [611, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[60, "pyart-core-radar-extract-sweeps"], [612, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[61, "pyart-core-radar-get-azimuth"], [613, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[62, "pyart-core-radar-get-elevation"], [614, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[63, "pyart-core-radar-get-end"], [615, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[64, "pyart-core-radar-get-field"], [616, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[65, "pyart-core-radar-get-gate-area"], [617, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[66, "pyart-core-radar-get-gate-lat-lon-alt"], [618, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[67, "pyart-core-radar-get-gate-x-y-z"], [619, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[68, "pyart-core-radar-get-nyquist-vel"], [620, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[69, "pyart-core-radar-get-slice"], [621, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[70, "pyart-core-radar-get-start"], [622, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[71, "pyart-core-radar-get-start-end"], [623, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[72, "pyart-core-radar-info"], [624, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[73, "pyart-core-radar-init-gate-altitude"], [625, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[74, "pyart-core-radar-init-gate-longitude-latitude"], [626, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[75, "pyart-core-radar-init-gate-x-y-z"], [627, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[76, "pyart-core-radar-init-rays-per-sweep"], [628, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[77, "pyart-core-radar-iter-azimuth"], [629, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[78, "pyart-core-radar-iter-elevation"], [630, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[79, "pyart-core-radar-iter-end"], [631, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[80, "pyart-core-radar-iter-field"], [632, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[81, "pyart-core-radar-iter-slice"], [633, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[82, "pyart-core-radar-iter-start"], [634, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[83, "pyart-core-radar-iter-start-end"], [635, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[84, "pyart-core-radarspectra"], [636, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.add_field": [[85, "pyart-core-radarspectra-add-field"], [637, "pyart-core-radarspectra-add-field"]], "pyart.core.RadarSpectra.add_field_like": [[86, "pyart-core-radarspectra-add-field-like"], [638, "pyart-core-radarspectra-add-field-like"]], "pyart.core.RadarSpectra.add_filter": [[87, "pyart-core-radarspectra-add-filter"], [639, "pyart-core-radarspectra-add-filter"]], "pyart.core.RadarSpectra.check_field_exists": [[88, "pyart-core-radarspectra-check-field-exists"], [640, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.extract_sweeps": [[89, "pyart-core-radarspectra-extract-sweeps"], [641, "pyart-core-radarspectra-extract-sweeps"]], "pyart.core.RadarSpectra.get_azimuth": [[90, "pyart-core-radarspectra-get-azimuth"], [642, "pyart-core-radarspectra-get-azimuth"]], "pyart.core.RadarSpectra.get_elevation": [[91, "pyart-core-radarspectra-get-elevation"], [643, "pyart-core-radarspectra-get-elevation"]], "pyart.core.RadarSpectra.get_end": [[92, "pyart-core-radarspectra-get-end"], [644, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_field": [[93, "pyart-core-radarspectra-get-field"], [645, "pyart-core-radarspectra-get-field"]], "pyart.core.RadarSpectra.get_gate_area": [[94, "pyart-core-radarspectra-get-gate-area"], [646, "pyart-core-radarspectra-get-gate-area"]], "pyart.core.RadarSpectra.get_gate_lat_lon_alt": [[95, "pyart-core-radarspectra-get-gate-lat-lon-alt"], [647, "pyart-core-radarspectra-get-gate-lat-lon-alt"]], "pyart.core.RadarSpectra.get_gate_x_y_z": [[96, "pyart-core-radarspectra-get-gate-x-y-z"], [648, "pyart-core-radarspectra-get-gate-x-y-z"]], "pyart.core.RadarSpectra.get_nyquist_vel": [[97, "pyart-core-radarspectra-get-nyquist-vel"], [649, "pyart-core-radarspectra-get-nyquist-vel"]], "pyart.core.RadarSpectra.get_slice": [[98, "pyart-core-radarspectra-get-slice"], [650, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[99, "pyart-core-radarspectra-get-start"], [651, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[100, "pyart-core-radarspectra-get-start-end"], [652, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.info": [[101, "pyart-core-radarspectra-info"], [653, "pyart-core-radarspectra-info"]], "pyart.core.RadarSpectra.init_gate_altitude": [[102, "pyart-core-radarspectra-init-gate-altitude"], [654, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[103, "pyart-core-radarspectra-init-gate-longitude-latitude"], [655, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[104, "pyart-core-radarspectra-init-gate-x-y-z"], [656, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[105, "pyart-core-radarspectra-init-rays-per-sweep"], [657, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[106, "pyart-core-radarspectra-iter-azimuth"], [658, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[107, "pyart-core-radarspectra-iter-elevation"], [659, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[108, "pyart-core-radarspectra-iter-end"], [660, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[109, "pyart-core-radarspectra-iter-field"], [661, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[110, "pyart-core-radarspectra-iter-slice"], [662, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[111, "pyart-core-radarspectra-iter-start"], [663, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[112, "pyart-core-radarspectra-iter-start-end"], [664, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.antenna_to_cartesian": [[113, "pyart-core-antenna-to-cartesian"], [665, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[114, "pyart-core-antenna-vectors-to-cartesian"], [666, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[115, "pyart-core-cartesian-to-antenna"], [667, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[116, "pyart-core-cartesian-to-geographic"], [668, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[117, "pyart-core-cartesian-to-geographic-aeqd"], [669, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[118, "pyart-core-cartesian-vectors-to-geographic"], [670, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[119, "pyart-core-geographic-to-cartesian"], [671, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[120, "pyart-core-geographic-to-cartesian-aeqd"], [672, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.core.wgs84_to_swissCH1903": [[121, "pyart-core-wgs84-to-swissch1903"], [673, "pyart-core-wgs84-to-swissch1903"]], "Test example": [[121, "test-example"], [673, "test-example"]], "pyart.correct.calculate_attenuation": [[122, "pyart-correct-calculate-attenuation"], [703, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[123, "pyart-correct-calculate-attenuation-philinear"], [704, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[124, "pyart-correct-calculate-attenuation-zphi"], [705, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.compute_apparent_vpr": [[125, "pyart-correct-compute-apparent-vpr"], [706, "pyart-correct-compute-apparent-vpr"]], "pyart.correct.compute_theoretical_vpr": [[126, "pyart-correct-compute-theoretical-vpr"], [707, "pyart-correct-compute-theoretical-vpr"]], "pyart.correct.correct_bias": [[127, "pyart-correct-correct-bias"], [708, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[128, "pyart-correct-correct-noise-rhohv"], [709, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.correct_sys_phase": [[129, "pyart-correct-correct-sys-phase"], [710, "pyart-correct-correct-sys-phase"]], "pyart.correct.correct_visibility": [[130, "pyart-correct-correct-visibility"], [711, "pyart-correct-correct-visibility"]], "pyart.correct.correct_vpr": [[131, "pyart-correct-correct-vpr"], [712, "pyart-correct-correct-vpr"]], "pyart.correct.correct_vpr_spatialised": [[132, "pyart-correct-correct-vpr-spatialised"], [713, "pyart-correct-correct-vpr-spatialised"]], "pyart.correct.dealias_fourdd": [[133, "pyart-correct-dealias-fourdd"], [714, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[134, "pyart-correct-dealias-region-based"], [715, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[135, "pyart-correct-dealias-unwrap-phase"], [716, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[136, "pyart-correct-despeckle-field"], [717, "pyart-correct-despeckle-field"]], "pyart.correct.det_sys_phase_ray": [[137, "pyart-correct-det-sys-phase-ray"], [718, "pyart-correct-det-sys-phase-ray"]], "pyart.correct.est_rhohv_rain": [[138, "pyart-correct-est-rhohv-rain"], [719, "pyart-correct-est-rhohv-rain"]], "pyart.correct.est_zdr_precip": [[139, "pyart-correct-est-zdr-precip"], [720, "pyart-correct-est-zdr-precip"]], "pyart.correct.est_zdr_snow": [[140, "pyart-correct-est-zdr-snow"], [721, "pyart-correct-est-zdr-snow"]], "pyart.correct.find_objects": [[141, "pyart-correct-find-objects"], [722, "pyart-correct-find-objects"]], "pyart.correct.get_mask_fzl": [[142, "pyart-correct-get-mask-fzl"], [724, "pyart-correct-get-mask-fzl"]], "pyart.correct.get_sun_hits": [[143, "pyart-correct-get-sun-hits"], [725, "pyart-correct-get-sun-hits"]], "pyart.correct.get_sun_hits_ivic": [[144, "pyart-correct-get-sun-hits-ivic"], [726, "pyart-correct-get-sun-hits-ivic"]], "pyart.correct.get_sun_hits_psr": [[145, "pyart-correct-get-sun-hits-psr"], [727, "pyart-correct-get-sun-hits-psr"]], "pyart.correct.phase_proc_lp": [[146, "pyart-correct-phase-proc-lp"], [729, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[147, "pyart-correct-phase-proc-lp-gf"], [730, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.ptoa_to_sf": [[148, "pyart-correct-ptoa-to-sf"], [731, "pyart-correct-ptoa-to-sf"]], "pyart.correct.scanning_losses": [[149, "pyart-correct-scanning-losses"], [733, "pyart-correct-scanning-losses"]], "pyart.correct.selfconsistency_bias": [[150, "pyart-correct-selfconsistency-bias"], [734, "pyart-correct-selfconsistency-bias"]], "pyart.correct.selfconsistency_bias2": [[151, "pyart-correct-selfconsistency-bias2"], [735, "pyart-correct-selfconsistency-bias2"]], "pyart.correct.selfconsistency_kdp_phidp": [[152, "pyart-correct-selfconsistency-kdp-phidp"], [736, "pyart-correct-selfconsistency-kdp-phidp"]], "pyart.correct.smooth_masked": [[153, "pyart-correct-smooth-masked"], [737, "pyart-correct-smooth-masked"]], "pyart.correct.smooth_phidp_double_window": [[154, "pyart-correct-smooth-phidp-double-window"], [738, "pyart-correct-smooth-phidp-double-window"]], "pyart.correct.smooth_phidp_single_window": [[155, "pyart-correct-smooth-phidp-single-window"], [739, "pyart-correct-smooth-phidp-single-window"]], "pyart.correct.solar_flux_lookup": [[156, "pyart-correct-solar-flux-lookup"], [740, "pyart-correct-solar-flux-lookup"]], "pyart.correct.sun_position_mfr": [[157, "pyart-correct-sun-position-mfr"], [741, "pyart-correct-sun-position-mfr"]], "pyart.correct.sun_position_pysolar": [[158, "pyart-correct-sun-position-pysolar"], [742, "pyart-correct-sun-position-pysolar"]], "pyart.correct.sun_power": [[159, "pyart-correct-sun-power"], [743, "pyart-correct-sun-power"]], "pyart.correct.sun_retrieval": [[160, "pyart-correct-sun-retrieval"], [744, "pyart-correct-sun-retrieval"]], "pyart.exceptions.DeprecatedAttribute": [[161, "pyart-exceptions-deprecatedattribute"]], "pyart.exceptions.DeprecatedFunctionName": [[162, "pyart-exceptions-deprecatedfunctionname"]], "pyart.exceptions.MissingOptionalDependency": [[163, "pyart-exceptions-missingoptionaldependency"]], "pyart.exceptions._deprecated_alias": [[164, "pyart-exceptions-deprecated-alias"]], "pyart.filters.GateFilter": [[165, "pyart-filters-gatefilter"], [747, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[166, "pyart-filters-gatefilter-copy"], [748, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[167, "pyart-filters-gatefilter-exclude-above"], [749, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[168, "pyart-filters-gatefilter-exclude-all"], [750, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[169, "pyart-filters-gatefilter-exclude-below"], [751, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[170, "pyart-filters-gatefilter-exclude-equal"], [752, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[171, "pyart-filters-gatefilter-exclude-gates"], [753, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[172, "pyart-filters-gatefilter-exclude-inside"], [754, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[173, "pyart-filters-gatefilter-exclude-invalid"], [755, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[174, "pyart-filters-gatefilter-exclude-masked"], [756, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[175, "pyart-filters-gatefilter-exclude-none"], [757, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[176, "pyart-filters-gatefilter-exclude-not-equal"], [758, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[177, "pyart-filters-gatefilter-exclude-outside"], [759, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[178, "pyart-filters-gatefilter-exclude-transition"], [760, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[179, "pyart-filters-gatefilter-gate-excluded"], [761, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[180, "pyart-filters-gatefilter-gate-included"], [762, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[181, "pyart-filters-gatefilter-include-above"], [763, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[182, "pyart-filters-gatefilter-include-all"], [764, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[183, "pyart-filters-gatefilter-include-below"], [765, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[184, "pyart-filters-gatefilter-include-equal"], [766, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[185, "pyart-filters-gatefilter-include-gates"], [767, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[186, "pyart-filters-gatefilter-include-inside"], [768, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[187, "pyart-filters-gatefilter-include-none"], [769, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[188, "pyart-filters-gatefilter-include-not-equal"], [770, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[189, "pyart-filters-gatefilter-include-not-masked"], [771, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[190, "pyart-filters-gatefilter-include-not-transition"], [772, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[191, "pyart-filters-gatefilter-include-outside"], [773, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[192, "pyart-filters-gatefilter-include-valid"], [774, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.birds_gate_filter": [[193, "pyart-filters-birds-gate-filter"], [775, "pyart-filters-birds-gate-filter"]], "pyart.filters.class_based_gate_filter": [[194, "pyart-filters-class-based-gate-filter"], [776, "pyart-filters-class-based-gate-filter"]], "pyart.filters.iso0_based_gate_filter": [[195, "pyart-filters-iso0-based-gate-filter"], [777, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[196, "pyart-filters-moment-and-texture-based-gate-filter"], [778, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[197, "pyart-filters-moment-based-gate-filter"], [779, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.snr_based_gate_filter": [[198, "pyart-filters-snr-based-gate-filter"], [780, "pyart-filters-snr-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[199, "pyart-filters-temp-based-gate-filter"], [781, "pyart-filters-temp-based-gate-filter"]], "pyart.filters.visibility_based_gate_filter": [[200, "pyart-filters-visibility-based-gate-filter"], [782, "pyart-filters-visibility-based-gate-filter"]], "pyart.graph.AirborneRadarDisplay": [[201, "pyart-graph-airborneradardisplay"], [784, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[202, "pyart-graph-airborneradardisplay-generate-az-rhi-title"], [785, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[203, "pyart-graph-airborneradardisplay-generate-filename"], [786, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[204, "pyart-graph-airborneradardisplay-generate-ray-title"], [787, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[205, "pyart-graph-airborneradardisplay-generate-title"], [788, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[206, "pyart-graph-airborneradardisplay-generate-vpt-title"], [789, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.generate_xsection_title": [[207, "pyart-graph-airborneradardisplay-generate-xsection-title"], [790, "pyart-graph-airborneradardisplay-generate-xsection-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[208, "pyart-graph-airborneradardisplay-label-xaxis-r"], [791, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[209, "pyart-graph-airborneradardisplay-label-xaxis-rays"], [792, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[210, "pyart-graph-airborneradardisplay-label-xaxis-time"], [793, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[211, "pyart-graph-airborneradardisplay-label-xaxis-x"], [794, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection": [[212, "pyart-graph-airborneradardisplay-label-xaxis-xsection"], [795, "pyart-graph-airborneradardisplay-label-xaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[213, "pyart-graph-airborneradardisplay-label-yaxis-field"], [796, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection": [[214, "pyart-graph-airborneradardisplay-label-yaxis-xsection"], [797, "pyart-graph-airborneradardisplay-label-yaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[215, "pyart-graph-airborneradardisplay-label-yaxis-y"], [798, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[216, "pyart-graph-airborneradardisplay-label-yaxis-z"], [799, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[217, "pyart-graph-airborneradardisplay-plot"], [800, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[218, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"], [801, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[219, "pyart-graph-airborneradardisplay-plot-colorbar"], [802, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[220, "pyart-graph-airborneradardisplay-plot-cr-raster"], [803, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[221, "pyart-graph-airborneradardisplay-plot-cross-hair"], [804, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[222, "pyart-graph-airborneradardisplay-plot-grid-lines"], [805, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[223, "pyart-graph-airborneradardisplay-plot-label"], [806, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[224, "pyart-graph-airborneradardisplay-plot-labels"], [807, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[225, "pyart-graph-airborneradardisplay-plot-ppi"], [808, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[226, "pyart-graph-airborneradardisplay-plot-range-ring"], [809, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[227, "pyart-graph-airborneradardisplay-plot-range-rings"], [810, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[228, "pyart-graph-airborneradardisplay-plot-ray"], [811, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[229, "pyart-graph-airborneradardisplay-plot-rhi"], [812, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[230, "pyart-graph-airborneradardisplay-plot-sweep-grid"], [813, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[231, "pyart-graph-airborneradardisplay-plot-vpt"], [814, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.plot_xsection": [[232, "pyart-graph-airborneradardisplay-plot-xsection"], [815, "pyart-graph-airborneradardisplay-plot-xsection"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[233, "pyart-graph-airborneradardisplay-set-aspect-ratio"], [816, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[234, "pyart-graph-airborneradardisplay-set-limits"], [817, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[235, "pyart-graph-gridmapdisplay"], [818, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[236, "pyart-graph-gridmapdisplay-cartopy-coastlines"], [819, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[237, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"], [820, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[238, "pyart-graph-gridmapdisplay-cartopy-states"], [821, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[239, "pyart-graph-gridmapdisplay-generate-filename"], [822, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[240, "pyart-graph-gridmapdisplay-generate-grid-title"], [823, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[241, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"], [824, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[242, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"], [825, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[243, "pyart-graph-gridmapdisplay-plot-colorbar"], [826, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[244, "pyart-graph-gridmapdisplay-plot-crosshairs"], [827, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[245, "pyart-graph-gridmapdisplay-plot-grid"], [828, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_grid_contour": [[246, "pyart-graph-gridmapdisplay-plot-grid-contour"], [829, "pyart-graph-gridmapdisplay-plot-grid-contour"]], "pyart.graph.GridMapDisplay.plot_grid_raw": [[247, "pyart-graph-gridmapdisplay-plot-grid-raw"], [830, "pyart-graph-gridmapdisplay-plot-grid-raw"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[248, "pyart-graph-gridmapdisplay-plot-latitude-slice"], [831, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[249, "pyart-graph-gridmapdisplay-plot-latitudinal-level"], [832, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_latlon_level": [[250, "pyart-graph-gridmapdisplay-plot-latlon-level"], [833, "pyart-graph-gridmapdisplay-plot-latlon-level"]], "pyart.graph.GridMapDisplay.plot_latlon_slice": [[251, "pyart-graph-gridmapdisplay-plot-latlon-slice"], [834, "pyart-graph-gridmapdisplay-plot-latlon-slice"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[252, "pyart-graph-gridmapdisplay-plot-longitude-slice"], [835, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[253, "pyart-graph-gridmapdisplay-plot-longitudinal-level"], [836, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[254, "pyart-graph-gridmapdisplaybasemap"], [837, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[255, "pyart-graph-gridmapdisplaybasemap-generate-filename"], [838, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[256, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"], [839, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[257, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"], [840, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[258, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"], [841, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[259, "pyart-graph-gridmapdisplaybasemap-get-basemap"], [842, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[260, "pyart-graph-gridmapdisplaybasemap-plot-basemap"], [843, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[261, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"], [844, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[262, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"], [845, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[263, "pyart-graph-gridmapdisplaybasemap-plot-grid"], [846, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[264, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"], [847, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[265, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"], [848, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[266, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"], [849, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[267, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"], [850, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[268, "pyart-graph-radardisplay"], [851, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[269, "pyart-graph-radardisplay-generate-az-rhi-title"], [852, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[270, "pyart-graph-radardisplay-generate-filename"], [853, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[271, "pyart-graph-radardisplay-generate-ray-title"], [854, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[272, "pyart-graph-radardisplay-generate-title"], [855, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[273, "pyart-graph-radardisplay-generate-vpt-title"], [856, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.generate_xsection_title": [[274, "pyart-graph-radardisplay-generate-xsection-title"], [857, "pyart-graph-radardisplay-generate-xsection-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[275, "pyart-graph-radardisplay-label-xaxis-r"], [858, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[276, "pyart-graph-radardisplay-label-xaxis-rays"], [859, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[277, "pyart-graph-radardisplay-label-xaxis-time"], [860, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[278, "pyart-graph-radardisplay-label-xaxis-x"], [861, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_xaxis_xsection": [[279, "pyart-graph-radardisplay-label-xaxis-xsection"], [862, "pyart-graph-radardisplay-label-xaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[280, "pyart-graph-radardisplay-label-yaxis-field"], [863, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_xsection": [[281, "pyart-graph-radardisplay-label-yaxis-xsection"], [864, "pyart-graph-radardisplay-label-yaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[282, "pyart-graph-radardisplay-label-yaxis-y"], [865, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[283, "pyart-graph-radardisplay-label-yaxis-z"], [866, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[284, "pyart-graph-radardisplay-plot"], [867, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[285, "pyart-graph-radardisplay-plot-azimuth-to-rhi"], [868, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[286, "pyart-graph-radardisplay-plot-colorbar"], [869, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[287, "pyart-graph-radardisplay-plot-cr-raster"], [870, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[288, "pyart-graph-radardisplay-plot-cross-hair"], [871, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[289, "pyart-graph-radardisplay-plot-grid-lines"], [872, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[290, "pyart-graph-radardisplay-plot-label"], [873, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[291, "pyart-graph-radardisplay-plot-labels"], [874, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[292, "pyart-graph-radardisplay-plot-ppi"], [875, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[293, "pyart-graph-radardisplay-plot-range-ring"], [876, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[294, "pyart-graph-radardisplay-plot-range-rings"], [877, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[295, "pyart-graph-radardisplay-plot-ray"], [878, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[296, "pyart-graph-radardisplay-plot-rhi"], [879, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[297, "pyart-graph-radardisplay-plot-vpt"], [880, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.plot_xsection": [[298, "pyart-graph-radardisplay-plot-xsection"], [881, "pyart-graph-radardisplay-plot-xsection"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[299, "pyart-graph-radardisplay-set-aspect-ratio"], [882, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[300, "pyart-graph-radardisplay-set-limits"], [883, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[301, "pyart-graph-radarmapdisplay"], [884, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[302, "pyart-graph-radarmapdisplay-generate-az-rhi-title"], [885, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[303, "pyart-graph-radarmapdisplay-generate-filename"], [886, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[304, "pyart-graph-radarmapdisplay-generate-ray-title"], [887, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[305, "pyart-graph-radarmapdisplay-generate-title"], [888, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[306, "pyart-graph-radarmapdisplay-generate-vpt-title"], [889, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.generate_xsection_title": [[307, "pyart-graph-radarmapdisplay-generate-xsection-title"], [890, "pyart-graph-radarmapdisplay-generate-xsection-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[308, "pyart-graph-radarmapdisplay-label-xaxis-r"], [891, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[309, "pyart-graph-radarmapdisplay-label-xaxis-rays"], [892, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[310, "pyart-graph-radarmapdisplay-label-xaxis-time"], [893, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[311, "pyart-graph-radarmapdisplay-label-xaxis-x"], [894, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_xaxis_xsection": [[312, "pyart-graph-radarmapdisplay-label-xaxis-xsection"], [895, "pyart-graph-radarmapdisplay-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[313, "pyart-graph-radarmapdisplay-label-yaxis-field"], [896, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_xsection": [[314, "pyart-graph-radarmapdisplay-label-yaxis-xsection"], [897, "pyart-graph-radarmapdisplay-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[315, "pyart-graph-radarmapdisplay-label-yaxis-y"], [898, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[316, "pyart-graph-radarmapdisplay-label-yaxis-z"], [899, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[317, "pyart-graph-radarmapdisplay-plot"], [900, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[318, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"], [901, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[319, "pyart-graph-radarmapdisplay-plot-colorbar"], [902, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[320, "pyart-graph-radarmapdisplay-plot-cr-raster"], [903, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[321, "pyart-graph-radarmapdisplay-plot-cross-hair"], [904, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[322, "pyart-graph-radarmapdisplay-plot-grid-lines"], [905, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[323, "pyart-graph-radarmapdisplay-plot-label"], [906, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[324, "pyart-graph-radarmapdisplay-plot-labels"], [907, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[325, "pyart-graph-radarmapdisplay-plot-line-geo"], [908, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[326, "pyart-graph-radarmapdisplay-plot-line-xy"], [909, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[327, "pyart-graph-radarmapdisplay-plot-point"], [910, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[328, "pyart-graph-radarmapdisplay-plot-ppi"], [911, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[329, "pyart-graph-radarmapdisplay-plot-ppi-map"], [912, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[330, "pyart-graph-radarmapdisplay-plot-range-ring"], [913, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[331, "pyart-graph-radarmapdisplay-plot-range-rings"], [914, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[332, "pyart-graph-radarmapdisplay-plot-ray"], [915, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[333, "pyart-graph-radarmapdisplay-plot-rhi"], [916, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[334, "pyart-graph-radarmapdisplay-plot-vpt"], [917, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.plot_xsection": [[335, "pyart-graph-radarmapdisplay-plot-xsection"], [918, "pyart-graph-radarmapdisplay-plot-xsection"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[336, "pyart-graph-radarmapdisplay-set-aspect-ratio"], [919, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[337, "pyart-graph-radarmapdisplay-set-limits"], [920, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[338, "pyart-graph-radarmapdisplaybasemap"], [921, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[339, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"], [922, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[340, "pyart-graph-radarmapdisplaybasemap-generate-filename"], [923, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[341, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"], [924, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[342, "pyart-graph-radarmapdisplaybasemap-generate-title"], [925, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[343, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"], [926, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title": [[344, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"], [927, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[345, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"], [928, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[346, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"], [929, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[347, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"], [930, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[348, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"], [931, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection": [[349, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"], [932, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[350, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"], [933, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection": [[351, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"], [934, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[352, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"], [935, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[353, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"], [936, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[354, "pyart-graph-radarmapdisplaybasemap-plot"], [937, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[355, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"], [938, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[356, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"], [939, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[357, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"], [940, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[358, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"], [941, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[359, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"], [942, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[360, "pyart-graph-radarmapdisplaybasemap-plot-label"], [943, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[361, "pyart-graph-radarmapdisplaybasemap-plot-labels"], [944, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[362, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"], [945, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[363, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"], [946, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[364, "pyart-graph-radarmapdisplaybasemap-plot-point"], [947, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[365, "pyart-graph-radarmapdisplaybasemap-plot-ppi"], [948, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[366, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"], [949, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[367, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"], [950, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[368, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"], [951, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[369, "pyart-graph-radarmapdisplaybasemap-plot-ray"], [952, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[370, "pyart-graph-radarmapdisplaybasemap-plot-rhi"], [953, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[371, "pyart-graph-radarmapdisplaybasemap-plot-vpt"], [954, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.plot_xsection": [[372, "pyart-graph-radarmapdisplaybasemap-plot-xsection"], [955, "pyart-graph-radarmapdisplaybasemap-plot-xsection"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[373, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"], [956, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[374, "pyart-graph-radarmapdisplaybasemap-set-limits"], [957, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.io.make_time_unit_str": [[375, "pyart-io-make-time-unit-str"], [960, "pyart-io-make-time-unit-str"]], "pyart.io.prepare_for_read": [[376, "pyart-io-prepare-for-read"], [961, "pyart-io-prepare-for-read"]], "pyart.io.read": [[377, "pyart-io-read"], [962, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[378, "pyart-io-read-arm-sonde"], [963, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[379, "pyart-io-read-arm-sonde-vap"], [964, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[380, "pyart-io-read-cfradial"], [965, "pyart-io-read-cfradial"]], "pyart.io.read_cfradial2": [[381, "pyart-io-read-cfradial2"], [966, "pyart-io-read-cfradial2"]], "pyart.io.read_chl": [[382, "pyart-io-read-chl"], [967, "pyart-io-read-chl"]], "pyart.io.read_grid": [[383, "pyart-io-read-grid"], [968, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[384, "pyart-io-read-grid-mdv"], [969, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[385, "pyart-io-read-mdv"], [970, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[386, "pyart-io-read-nexrad-archive"], [971, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[387, "pyart-io-read-nexrad-cdm"], [972, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[388, "pyart-io-read-nexrad-level3"], [973, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[389, "pyart-io-read-rsl"], [974, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[390, "pyart-io-read-sigmet"], [975, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[391, "pyart-io-read-uf"], [976, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[392, "pyart-io-write-cfradial"], [977, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[393, "pyart-io-write-grid"], [978, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[394, "pyart-io-write-grid-geotiff"], [979, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[395, "pyart-io-write-grid-mdv"], [980, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[396, "pyart-io-write-uf"], [981, "pyart-io-write-uf"]], "pyart.lazydict.LazyLoadDict": [[397, "pyart-lazydict-lazyloaddict"], [983, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.__contains__": [[398, "pyart-lazydict-lazyloaddict-contains"]], "pyart.lazydict.LazyLoadDict.__delattr__": [[399, "pyart-lazydict-lazyloaddict-delattr"]], "pyart.lazydict.LazyLoadDict.__delitem__": [[400, "pyart-lazydict-lazyloaddict-delitem"]], "pyart.lazydict.LazyLoadDict.__dir__": [[401, "pyart-lazydict-lazyloaddict-dir"]], "pyart.lazydict.LazyLoadDict.__eq__": [[402, "pyart-lazydict-lazyloaddict-eq"]], "pyart.lazydict.LazyLoadDict.__format__": [[403, "pyart-lazydict-lazyloaddict-format"]], "pyart.lazydict.LazyLoadDict.__ge__": [[404, "pyart-lazydict-lazyloaddict-ge"]], "pyart.lazydict.LazyLoadDict.__getattribute__": [[405, "pyart-lazydict-lazyloaddict-getattribute"]], "pyart.lazydict.LazyLoadDict.__getitem__": [[406, "pyart-lazydict-lazyloaddict-getitem"]], "pyart.lazydict.LazyLoadDict.__getstate__": [[407, "pyart-lazydict-lazyloaddict-getstate"]], "pyart.lazydict.LazyLoadDict.__gt__": [[408, "pyart-lazydict-lazyloaddict-gt"]], "pyart.lazydict.LazyLoadDict.__init__": [[409, "pyart-lazydict-lazyloaddict-init"]], "pyart.lazydict.LazyLoadDict.__init_subclass__": [[410, "pyart-lazydict-lazyloaddict-init-subclass"]], "pyart.lazydict.LazyLoadDict.__iter__": [[411, "pyart-lazydict-lazyloaddict-iter"]], "pyart.lazydict.LazyLoadDict.__le__": [[412, "pyart-lazydict-lazyloaddict-le"]], "pyart.lazydict.LazyLoadDict.__len__": [[413, "pyart-lazydict-lazyloaddict-len"]], "pyart.lazydict.LazyLoadDict.__lt__": [[414, "pyart-lazydict-lazyloaddict-lt"]], "pyart.lazydict.LazyLoadDict.__ne__": [[415, "pyart-lazydict-lazyloaddict-ne"]], "pyart.lazydict.LazyLoadDict.__new__": [[416, "pyart-lazydict-lazyloaddict-new"]], "pyart.lazydict.LazyLoadDict.__reduce__": [[417, "pyart-lazydict-lazyloaddict-reduce"]], "pyart.lazydict.LazyLoadDict.__reduce_ex__": [[418, "pyart-lazydict-lazyloaddict-reduce-ex"]], "pyart.lazydict.LazyLoadDict.__repr__": [[419, "pyart-lazydict-lazyloaddict-repr"]], "pyart.lazydict.LazyLoadDict.__setattr__": [[420, "pyart-lazydict-lazyloaddict-setattr"]], "pyart.lazydict.LazyLoadDict.__setitem__": [[421, "pyart-lazydict-lazyloaddict-setitem"]], "pyart.lazydict.LazyLoadDict.__sizeof__": [[422, "pyart-lazydict-lazyloaddict-sizeof"]], "pyart.lazydict.LazyLoadDict.__str__": [[423, "pyart-lazydict-lazyloaddict-str"]], "pyart.lazydict.LazyLoadDict.__subclasshook__": [[424, "pyart-lazydict-lazyloaddict-subclasshook"]], "pyart.lazydict.LazyLoadDict.clear": [[425, "pyart-lazydict-lazyloaddict-clear"], [984, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[426, "pyart-lazydict-lazyloaddict-copy"], [985, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[427, "pyart-lazydict-lazyloaddict-get"], [986, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[428, "pyart-lazydict-lazyloaddict-has-key"], [987, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[429, "pyart-lazydict-lazyloaddict-items"], [988, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[430, "pyart-lazydict-lazyloaddict-keys"], [989, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[431, "pyart-lazydict-lazyloaddict-pop"], [990, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[432, "pyart-lazydict-lazyloaddict-popitem"], [991, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[433, "pyart-lazydict-lazyloaddict-set-lazy"], [992, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[434, "pyart-lazydict-lazyloaddict-setdefault"], [993, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[435, "pyart-lazydict-lazyloaddict-update"], [994, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[436, "pyart-lazydict-lazyloaddict-values"], [995, "pyart-lazydict-lazyloaddict-values"]], "pyart.map.example_roi_func_constant": [[437, "pyart-map-example-roi-func-constant"], [1011, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[438, "pyart-map-example-roi-func-dist"], [1012, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[439, "pyart-map-example-roi-func-dist-beam"], [1013, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[440, "pyart-map-grid-from-radars"], [1015, "pyart-map-grid-from-radars"]], "pyart.map.map_gates_to_grid": [[441, "pyart-map-map-gates-to-grid"], [1016, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[442, "pyart-map-map-to-grid"], [1017, "pyart-map-map-to-grid"]], "pyart.retrieve._destandardize": [[443, "pyart-retrieve-destandardize"]], "pyart.retrieve._get_res_vol_sides": [[444, "pyart-retrieve-get-res-vol-sides"]], "pyart.retrieve.atmospheric_gas_att": [[445, "pyart-retrieve-atmospheric-gas-att"], [1020, "pyart-retrieve-atmospheric-gas-att"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[446, "pyart-retrieve-calculate-snr-from-reflectivity"], [1021, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[447, "pyart-retrieve-calculate-velocity-texture"], [1022, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.compute_Doppler_velocity": [[448, "pyart-retrieve-compute-doppler-velocity"], [1024, "pyart-retrieve-compute-doppler-velocity"]], "pyart.retrieve.compute_Doppler_velocity_iq": [[449, "pyart-retrieve-compute-doppler-velocity-iq"], [1025, "pyart-retrieve-compute-doppler-velocity-iq"]], "pyart.retrieve.compute_Doppler_width": [[450, "pyart-retrieve-compute-doppler-width"], [1026, "pyart-retrieve-compute-doppler-width"]], "pyart.retrieve.compute_Doppler_width_iq": [[451, "pyart-retrieve-compute-doppler-width-iq"], [1027, "pyart-retrieve-compute-doppler-width-iq"]], "pyart.retrieve.compute_apparent_profile": [[452, "pyart-retrieve-compute-apparent-profile"], [1028, "pyart-retrieve-compute-apparent-profile"]], "pyart.retrieve.compute_bird_density": [[453, "pyart-retrieve-compute-bird-density"], [1029, "pyart-retrieve-compute-bird-density"]], "pyart.retrieve.compute_ccor": [[454, "pyart-retrieve-compute-ccor"], [1030, "pyart-retrieve-compute-ccor"]], "pyart.retrieve.compute_cdr": [[455, "pyart-retrieve-compute-cdr"], [1031, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_centroids": [[456, "pyart-retrieve-compute-centroids"], [1032, "pyart-retrieve-compute-centroids"]], "pyart.retrieve.compute_differential_phase": [[457, "pyart-retrieve-compute-differential-phase"], [1033, "pyart-retrieve-compute-differential-phase"]], "pyart.retrieve.compute_differential_phase_iq": [[458, "pyart-retrieve-compute-differential-phase-iq"], [1034, "pyart-retrieve-compute-differential-phase-iq"]], "pyart.retrieve.compute_differential_reflectivity": [[459, "pyart-retrieve-compute-differential-reflectivity"], [1035, "pyart-retrieve-compute-differential-reflectivity"]], "pyart.retrieve.compute_differential_reflectivity_iq": [[460, "pyart-retrieve-compute-differential-reflectivity-iq"], [1036, "pyart-retrieve-compute-differential-reflectivity-iq"]], "pyart.retrieve.compute_evp": [[461, "pyart-retrieve-compute-evp"], [1037, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_iq": [[462, "pyart-retrieve-compute-iq"], [1038, "pyart-retrieve-compute-iq"]], "pyart.retrieve.compute_l": [[463, "pyart-retrieve-compute-l"], [1039, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_mean_phase_iq": [[464, "pyart-retrieve-compute-mean-phase-iq"], [1040, "pyart-retrieve-compute-mean-phase-iq"]], "pyart.retrieve.compute_noise_power": [[465, "pyart-retrieve-compute-noise-power"], [1041, "pyart-retrieve-compute-noise-power"]], "pyart.retrieve.compute_noisedBZ": [[466, "pyart-retrieve-compute-noisedbz"], [1042, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_pol_variables": [[467, "pyart-retrieve-compute-pol-variables"], [1043, "pyart-retrieve-compute-pol-variables"]], "pyart.retrieve.compute_pol_variables_iq": [[468, "pyart-retrieve-compute-pol-variables-iq"], [1044, "pyart-retrieve-compute-pol-variables-iq"]], "pyart.retrieve.compute_qvp": [[469, "pyart-retrieve-compute-qvp"], [1045, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_radial_noise_hs": [[470, "pyart-retrieve-compute-radial-noise-hs"], [1046, "pyart-retrieve-compute-radial-noise-hs"]], "pyart.retrieve.compute_radial_noise_ivic": [[471, "pyart-retrieve-compute-radial-noise-ivic"], [1047, "pyart-retrieve-compute-radial-noise-ivic"]], "pyart.retrieve.compute_rcs": [[472, "pyart-retrieve-compute-rcs"], [1048, "pyart-retrieve-compute-rcs"]], "pyart.retrieve.compute_rcs_from_pr": [[473, "pyart-retrieve-compute-rcs-from-pr"], [1049, "pyart-retrieve-compute-rcs-from-pr"]], "pyart.retrieve.compute_reflectivity": [[474, "pyart-retrieve-compute-reflectivity"], [1050, "pyart-retrieve-compute-reflectivity"]], "pyart.retrieve.compute_reflectivity_iq": [[475, "pyart-retrieve-compute-reflectivity-iq"], [1051, "pyart-retrieve-compute-reflectivity-iq"]], "pyart.retrieve.compute_rhohv": [[476, "pyart-retrieve-compute-rhohv"], [1052, "pyart-retrieve-compute-rhohv"]], "pyart.retrieve.compute_rhohv_iq": [[477, "pyart-retrieve-compute-rhohv-iq"], [1053, "pyart-retrieve-compute-rhohv-iq"]], "pyart.retrieve.compute_rqvp": [[478, "pyart-retrieve-compute-rqvp"], [1054, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_signal_power": [[479, "pyart-retrieve-compute-signal-power"], [1055, "pyart-retrieve-compute-signal-power"]], "pyart.retrieve.compute_snr": [[480, "pyart-retrieve-compute-snr"], [1056, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_spectra": [[481, "pyart-retrieve-compute-spectra"], [1057, "pyart-retrieve-compute-spectra"]], "pyart.retrieve.compute_spectral_differential_phase": [[482, "pyart-retrieve-compute-spectral-differential-phase"], [1058, "pyart-retrieve-compute-spectral-differential-phase"]], "pyart.retrieve.compute_spectral_differential_reflectivity": [[483, "pyart-retrieve-compute-spectral-differential-reflectivity"], [1059, "pyart-retrieve-compute-spectral-differential-reflectivity"]], "pyart.retrieve.compute_spectral_noise": [[484, "pyart-retrieve-compute-spectral-noise"], [1060, "pyart-retrieve-compute-spectral-noise"]], "pyart.retrieve.compute_spectral_phase": [[485, "pyart-retrieve-compute-spectral-phase"], [1061, "pyart-retrieve-compute-spectral-phase"]], "pyart.retrieve.compute_spectral_power": [[486, "pyart-retrieve-compute-spectral-power"], [1062, "pyart-retrieve-compute-spectral-power"]], "pyart.retrieve.compute_spectral_reflectivity": [[487, "pyart-retrieve-compute-spectral-reflectivity"], [1063, "pyart-retrieve-compute-spectral-reflectivity"]], "pyart.retrieve.compute_spectral_rhohv": [[488, "pyart-retrieve-compute-spectral-rhohv"], [1064, "pyart-retrieve-compute-spectral-rhohv"]], "pyart.retrieve.compute_st1_iq": [[489, "pyart-retrieve-compute-st1-iq"], [1065, "pyart-retrieve-compute-st1-iq"]], "pyart.retrieve.compute_st2_iq": [[490, "pyart-retrieve-compute-st2-iq"], [1066, "pyart-retrieve-compute-st2-iq"]], "pyart.retrieve.compute_svp": [[491, "pyart-retrieve-compute-svp"], [1067, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[492, "pyart-retrieve-compute-ts-along-coord"], [1068, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vol_refl": [[493, "pyart-retrieve-compute-vol-refl"], [1069, "pyart-retrieve-compute-vol-refl"]], "pyart.retrieve.compute_vp": [[494, "pyart-retrieve-compute-vp"], [1070, "pyart-retrieve-compute-vp"]], "pyart.retrieve.compute_wbn_iq": [[495, "pyart-retrieve-compute-wbn-iq"], [1071, "pyart-retrieve-compute-wbn-iq"]], "pyart.retrieve.conv_strat_yuter": [[496, "pyart-retrieve-conv-strat-yuter"], [1072, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.data_for_centroids": [[497, "pyart-retrieve-data-for-centroids"], [1073, "pyart-retrieve-data-for-centroids"]], "pyart.retrieve.detect_ml": [[498, "pyart-retrieve-detect-ml"], [1074, "pyart-retrieve-detect-ml"]], "Paremeters": [[498, "paremeters"], [1074, "paremeters"]], "pyart.retrieve.determine_medoids": [[499, "pyart-retrieve-determine-medoids"], [1075, "pyart-retrieve-determine-medoids"]], "pyart.retrieve.est_rain_rate_a": [[500, "pyart-retrieve-est-rain-rate-a"], [1076, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[501, "pyart-retrieve-est-rain-rate-hydro"], [1077, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[502, "pyart-retrieve-est-rain-rate-kdp"], [1078, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[503, "pyart-retrieve-est-rain-rate-z"], [1079, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[504, "pyart-retrieve-est-rain-rate-za"], [1080, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[505, "pyart-retrieve-est-rain-rate-zkdp"], [1081, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[506, "pyart-retrieve-est-rain-rate-zpoly"], [1082, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.est_vertical_windshear": [[507, "pyart-retrieve-est-vertical-windshear"], [1083, "pyart-retrieve-est-vertical-windshear"]], "pyart.retrieve.est_wind_profile": [[508, "pyart-retrieve-est-wind-profile"], [1084, "pyart-retrieve-est-wind-profile"]], "pyart.retrieve.est_wind_vel": [[509, "pyart-retrieve-est-wind-vel"], [1085, "pyart-retrieve-est-wind-vel"]], "pyart.retrieve.fetch_radar_time_profile": [[510, "pyart-retrieve-fetch-radar-time-profile"], [1086, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.gecsx": [[511, "pyart-retrieve-gecsx"], [1087, "pyart-retrieve-gecsx"]], "pyart.retrieve.get_coeff_attg": [[512, "pyart-retrieve-get-coeff-attg"], [1088, "pyart-retrieve-get-coeff-attg"]], "pyart.retrieve.get_freq_band": [[513, "pyart-retrieve-get-freq-band"], [1089, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.get_iso0_val": [[514, "pyart-retrieve-get-iso0-val"], [1090, "pyart-retrieve-get-iso0-val"]], "pyart.retrieve.get_ml_rng_limits": [[515, "pyart-retrieve-get-ml-rng-limits"], [1091, "pyart-retrieve-get-ml-rng-limits"]], "pyart.retrieve.grid_displacement_pc": [[516, "pyart-retrieve-grid-displacement-pc"], [1092, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[517, "pyart-retrieve-grid-shift"], [1093, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[518, "pyart-retrieve-hydroclass-semisupervised"], [1094, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_leastsquare_double_window": [[519, "pyart-retrieve-kdp-leastsquare-double-window"], [1095, "pyart-retrieve-kdp-leastsquare-double-window"]], "pyart.retrieve.kdp_leastsquare_single_window": [[520, "pyart-retrieve-kdp-leastsquare-single-window"], [1096, "pyart-retrieve-kdp-leastsquare-single-window"]], "pyart.retrieve.kdp_maesaka": [[521, "pyart-retrieve-kdp-maesaka"], [1097, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[522, "pyart-retrieve-kdp-schneebeli"], [1098, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[523, "pyart-retrieve-kdp-vulpiani"], [1099, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[524, "pyart-retrieve-map-profile-to-gates"], [1100, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.melting_layer_giangrande": [[525, "pyart-retrieve-melting-layer-giangrande"], [1101, "pyart-retrieve-melting-layer-giangrande"]], "pyart.retrieve.melting_layer_hydroclass": [[526, "pyart-retrieve-melting-layer-hydroclass"], [1102, "pyart-retrieve-melting-layer-hydroclass"]], "pyart.retrieve.melting_layer_mf": [[527, "pyart-retrieve-melting-layer-mf"], [1103, "pyart-retrieve-melting-layer-mf"]], "pyart.retrieve.quasi_vertical_profile": [[528, "pyart-retrieve-quasi-vertical-profile"], [1104, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.select_samples": [[529, "pyart-retrieve-select-samples"], [1105, "pyart-retrieve-select-samples"]], "pyart.retrieve.steiner_conv_strat": [[530, "pyart-retrieve-steiner-conv-strat"], [1106, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.synthetic_obs_distribution": [[531, "pyart-retrieve-synthetic-obs-distribution"], [1107, "pyart-retrieve-synthetic-obs-distribution"]], "pyart.retrieve.texture_of_complex_phase": [[532, "pyart-retrieve-texture-of-complex-phase"], [1108, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[533, "pyart-retrieve-vad-browning"], [1109, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[534, "pyart-retrieve-vad-michelson"], [1110, "pyart-retrieve-vad-michelson"]], "pyart._debug_info": [[535, "pyart-debug-info"]], "pyart.aux_io": [[536, "pyart-aux-io"]], "Auxiliary input and output (pyart.aux_io)": [[536, "auxiliary-input-and-output-pyart-aux-io"]], "Reading radar data": [[536, "reading-radar-data"], [959, "reading-radar-data"]], "Writing radar data": [[536, "writing-radar-data"], [959, "writing-radar-data"]], "pyart.aux_io.convert_data": [[537, "pyart-aux-io-convert-data"]], "pyart.aux_io.get_library": [[538, "pyart-aux-io-get-library"]], "pyart.aux_io.read_edge_netcdf": [[547, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_file_c": [[548, "pyart-aux-io-read-file-c"]], "pyart.aux_io.read_file_py": [[549, "pyart-aux-io-read-file-py"]], "pyart.aux_io.read_product_c": [[563, "pyart-aux-io-read-product-c"]], "pyart.aux_io.read_product_py": [[564, "pyart-aux-io-read-product-py"]], "pyart.aux_io.read_psr_cpi_header": [[565, "pyart-aux-io-read-psr-cpi-header"]], "pyart.aux_io.read_psr_header": [[566, "pyart-aux-io-read-psr-header"]], "pyart.aux_io.read_psr_spectra": [[567, "pyart-aux-io-read-psr-spectra"]], "pyart.aux_io.read_sinarame_h5": [[572, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[576, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[578, "pyart-bridge"]], "Bridging to other toolkits (pyart.bridge)": [[578, "bridging-to-other-toolkits-pyart-bridge"]], "Phase functions": [[578, "phase-functions"]], "pyart.config": [[580, "pyart-config"], [580, "id1"]], "pyart.core": [[592, "pyart-core"]], "Core (pyart.core)": [[592, "core-pyart-core"]], "Core classes": [[592, "core-classes"]], "Coordinate transformations": [[592, "coordinate-transformations"]], "pyart.correct": [[674, "pyart-correct"]], "Radar Corrections (pyart.correct)": [[674, "radar-corrections-pyart-correct"]], "Velocity unfolding": [[674, "velocity-unfolding"]], "Other corrections": [[674, "other-corrections"]], "Helper functions": [[674, "helper-functions"]], "pyart.correct.GateFilter": [[675, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[676, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[677, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[678, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[679, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[680, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[681, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[682, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[683, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[684, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[685, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[686, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[687, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[688, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[689, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[690, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[691, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[692, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[693, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[694, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[695, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[696, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[697, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[698, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[699, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[700, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[701, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[702, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.gauss_fit": [[723, "pyart-correct-gauss-fit"]], "pyart.correct.moment_based_gate_filter": [[728, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.retrieval_result": [[732, "pyart-correct-retrieval-result"]], "pyart.exceptions": [[745, "pyart-exceptions"], [745, "id1"]], "pyart.filters": [[746, "pyart-filters"]], "Filters (pyart.filters)": [[746, "filters-pyart-filters"]], "Filtering radar data": [[746, "filtering-radar-data"]], "pyart.graph": [[783, "pyart-graph"]], "Graphing (pyart.graph)": [[783, "graphing-pyart-graph"]], "Plotting radar data": [[783, "plotting-radar-data"]], "Plotting grid data": [[783, "plotting-grid-data"]], "pyart.graph.plot_convstrat_scheme": [[958, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[959, "pyart-io"]], "Input and output (pyart.io)": [[959, "input-and-output-pyart-io"]], "Reading grid data": [[959, "reading-grid-data"]], "Writing grid data": [[959, "writing-grid-data"]], "Reading Sonde data": [[959, "reading-sonde-data"]], "Special use": [[959, "special-use"]], "pyart.lazydict": [[982, "pyart-lazydict"], [982, "id1"]], "pyart.lazydict.MutableMapping": [[996, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[997, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[998, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[999, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[1000, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[1001, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[1002, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[1003, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[1004, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[1005, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[1006, "pyart-map"]], "Mapping (pyart.map)": [[1006, "mapping-pyart-map"]], "Mapping to grid": [[1006, "mapping-to-grid"]], "Examples of ROI (region of interest)": [[1006, "examples-of-roi-region-of-interest"]], "pyart.map.GateMapper": [[1007, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[1008, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[1009, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[1010, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.get_earth_radius": [[1014, "pyart-map-get-earth-radius"]], "pyart.map.polar_to_cartesian": [[1018, "pyart-map-polar-to-cartesian"]], "pyart.retrieve": [[1019, "pyart-retrieve"]], "Radar Retrievals (pyart.retrieve)": [[1019, "radar-retrievals-pyart-retrieve"]], "Radar retrievals": [[1019, "radar-retrievals"]], "pyart.retrieve.composite_reflectivity": [[1023, "pyart-retrieve-composite-reflectivity"]], "pyart.testing": [[1111, "pyart-testing"]], "pyart.testing.Grid": [[1112, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[1113, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[1114, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[1115, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[1116, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[1117, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[1118, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[1119, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[1120, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[1121, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[1122, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[1123, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[1124, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[1125, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[1126, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[1127, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[1128, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[1129, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[1130, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[1131, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[1132, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[1133, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[1134, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[1135, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[1136, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[1137, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[1138, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[1139, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[1140, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[1141, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[1142, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[1143, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[1144, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[1145, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[1146, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[1147, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[1148, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[1149, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[1150, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[1151, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[1152, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[1153, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.add_field": [[1154, "pyart-testing-radarspectra-add-field"]], "pyart.testing.RadarSpectra.add_field_like": [[1155, "pyart-testing-radarspectra-add-field-like"]], "pyart.testing.RadarSpectra.add_filter": [[1156, "pyart-testing-radarspectra-add-filter"]], "pyart.testing.RadarSpectra.check_field_exists": [[1157, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.extract_sweeps": [[1158, "pyart-testing-radarspectra-extract-sweeps"]], "pyart.testing.RadarSpectra.get_azimuth": [[1159, "pyart-testing-radarspectra-get-azimuth"]], "pyart.testing.RadarSpectra.get_elevation": [[1160, "pyart-testing-radarspectra-get-elevation"]], "pyart.testing.RadarSpectra.get_end": [[1161, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_field": [[1162, "pyart-testing-radarspectra-get-field"]], "pyart.testing.RadarSpectra.get_gate_area": [[1163, "pyart-testing-radarspectra-get-gate-area"]], "pyart.testing.RadarSpectra.get_gate_lat_lon_alt": [[1164, "pyart-testing-radarspectra-get-gate-lat-lon-alt"]], "pyart.testing.RadarSpectra.get_gate_x_y_z": [[1165, "pyart-testing-radarspectra-get-gate-x-y-z"]], "pyart.testing.RadarSpectra.get_nyquist_vel": [[1166, "pyart-testing-radarspectra-get-nyquist-vel"]], "pyart.testing.RadarSpectra.get_slice": [[1167, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[1168, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[1169, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.info": [[1170, "pyart-testing-radarspectra-info"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[1171, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[1172, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[1173, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[1174, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[1175, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[1176, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[1177, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[1178, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[1179, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[1180, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[1181, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.get_metadata": [[1182, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[1183, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[1184, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[1185, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[1186, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[1187, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_normal_storm": [[1188, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[1189, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[1190, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[1191, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[1192, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[1193, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[1194, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[1195, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[1196, "pyart-util"]], "pyart.util.angular_mean": [[1197, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[1198, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[1199, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[1200, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[1201, "pyart-util-angular-texture-2d"]], "pyart.util.colocated_gates": [[1202, "pyart-util-colocated-gates"]], "pyart.util.colocated_gates2": [[1203, "pyart-util-colocated-gates2"]], "pyart.util.compute_azimuthal_average": [[1204, "pyart-util-compute-azimuthal-average"]], "pyart.util.compute_corr": [[1205, "pyart-util-compute-corr"]], "pyart.util.compute_directional_stats": [[1206, "pyart-util-compute-directional-stats"]], "pyart.util.compute_mse": [[1207, "pyart-util-compute-mse"]], "pyart.util.compute_nse": [[1208, "pyart-util-compute-nse"]], "pyart.util.cross_section_ppi": [[1209, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[1210, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[1211, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[1212, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[1213, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[1214, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[1215, "pyart-util-datetimes-from-radar"]], "pyart.util.estimate_noise_hs74": [[1216, "pyart-util-estimate-noise-hs74"]], "pyart.util.estimate_noise_ivic13": [[1217, "pyart-util-estimate-noise-ivic13"]], "pyart.util.find_neighbour_gates": [[1218, "pyart-util-find-neighbour-gates"]], "pyart.util.for_azimuth": [[1219, "pyart-util-for-azimuth"]], "Assumptions": [[1219, "assumptions"], [1245, "assumptions"]], "pyart.util.get_column_rays": [[1220, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[1221, "pyart-util-get-field-location"]], "pyart.util.get_ivic_flat_reg_var_max": [[1222, "pyart-util-get-ivic-flat-reg-var-max"]], "pyart.util.get_ivic_pct": [[1223, "pyart-util-get-ivic-pct"]], "pyart.util.get_ivic_snr_thr": [[1224, "pyart-util-get-ivic-snr-thr"]], "pyart.util.get_target_elevations": [[1225, "pyart-util-get-target-elevations"]], "pyart.util.grid_texture_2d": [[1226, "pyart-util-grid-texture-2d"]], "pyart.util.image_mute_radar": [[1227, "pyart-util-image-mute-radar"]], "pyart.util.interpol_spectra": [[1228, "pyart-util-interpol-spectra"]], "pyart.util.intersection": [[1229, "pyart-util-intersection"]], "pyart.util.interval_mean": [[1230, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[1231, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[1232, "pyart-util-is-vpt"]], "pyart.util.ivic_flat_reg_var_max_table": [[1233, "pyart-util-ivic-flat-reg-var-max-table"]], "pyart.util.ivic_flat_reg_wind_len_table": [[1234, "pyart-util-ivic-flat-reg-wind-len-table"]], "pyart.util.ivic_pct_table": [[1235, "pyart-util-ivic-pct-table"]], "pyart.util.ivic_snr_thr_table": [[1236, "pyart-util-ivic-snr-thr-table"]], "pyart.util.join_radar": [[1237, "pyart-util-join-radar"]], "pyart.util.join_spectra": [[1238, "pyart-util-join-spectra"]], "pyart.util.ma_broadcast_to": [[1239, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[1240, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[1241, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.radar_from_spectra": [[1242, "pyart-util-radar-from-spectra"]], "pyart.util.rolling_window": [[1243, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[1244, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[1245, "pyart-util-sphere-distance"]], "Parameter": [[1245, "parameter"]], "pyart.util.subset_radar": [[1246, "pyart-util-subset-radar"]], "pyart.util.subset_radar_spectra": [[1247, "pyart-util-subset-radar-spectra"]], "pyart.util.texture": [[1248, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[1249, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[1250, "pyart-util-to-vpt"]], "API Reference Manual": [[1251, "api-reference-manual"]], "Changelog": [[1252, "changelog"]], "Py-ART v1.15.0": [[1252, "py-art-v1-15-0"]], "Bugs fixed": [[1252, "bugs-fixed"], [1252, "id1"], [1252, "id6"], [1252, "id11"], [1252, "id19"], [1252, "id24"], [1252, "id29"], [1252, "id36"], [1252, "id41"], [1252, "id45"], [1252, "id49"], [1252, "id54"], [1252, "id59"], [1252, "id64"], [1252, "id69"], [1252, "id75"], [1252, "id81"], [1252, "id85"], [1252, "id89"], [1252, "id93"], [1252, "id98"], [1252, "id102"], [1252, "id106"], [1252, "id110"], [1252, "id116"], [1252, "id122"], [1252, "id126"], [1252, "id131"], [1252, "id138"], [1252, "id145"], [1252, "id151"], [1252, "id158"], [1252, "id164"]], "Other merged PRs": [[1252, "other-merged-prs"], [1252, "id2"], [1252, "id7"], [1252, "id13"], [1252, "id16"], [1252, "id21"], [1252, "id26"], [1252, "id33"], [1252, "id39"], [1252, "id43"], [1252, "id46"], [1252, "id52"], [1252, "id56"], [1252, "id62"], [1252, "id66"], [1252, "id72"], [1252, "id78"], [1252, "id83"], [1252, "id91"], [1252, "id96"], [1252, "id103"], [1252, "id113"], [1252, "id119"], [1252, "id124"], [1252, "id128"], [1252, "id135"], [1252, "id142"], [1252, "id148"], [1252, "id155"], [1252, "id161"], [1252, "id167"]], "Contributors to this release": [[1252, "contributors-to-this-release"], [1252, "id3"], [1252, "id4"], [1252, "id8"], [1252, "id10"], [1252, "id14"], [1252, "id17"], [1252, "id22"], [1252, "id27"], [1252, "id30"], [1252, "id34"], [1252, "id40"], [1252, "id44"], [1252, "id47"], [1252, "id53"], [1252, "id57"], [1252, "id63"], [1252, "id67"], [1252, "id73"], [1252, "id79"], [1252, "id84"], [1252, "id87"], [1252, "id92"], [1252, "id97"], [1252, "id100"], [1252, "id104"], [1252, "id108"], [1252, "id114"], [1252, "id120"], [1252, "id125"], [1252, "id129"], [1252, "id136"], [1252, "id143"], [1252, "id149"], [1252, "id156"], [1252, "id162"], [1252, "id168"], [1252, "id171"]], "Py-ART v1.14.6": [[1252, "py-art-v1-14-6"]], "Enhancements made": [[1252, "enhancements-made"], [1252, "id5"], [1252, "id15"], [1252, "id18"], [1252, "id23"], [1252, "id28"], [1252, "id31"], [1252, "id35"], [1252, "id48"], [1252, "id58"], [1252, "id68"], [1252, "id74"], [1252, "id80"], [1252, "id88"], [1252, "id101"], [1252, "id105"], [1252, "id109"], [1252, "id115"], [1252, "id121"], [1252, "id130"], [1252, "id137"], [1252, "id144"], [1252, "id150"], [1252, "id157"], [1252, "id163"], [1252, "id169"]], "Maintenance and upkeep improvements": [[1252, "maintenance-and-upkeep-improvements"], [1252, "id9"], [1252, "id12"], [1252, "id32"], [1252, "id37"], [1252, "id42"], [1252, "id50"], [1252, "id55"], [1252, "id60"], [1252, "id65"], [1252, "id70"], [1252, "id76"], [1252, "id82"], [1252, "id86"], [1252, "id90"], [1252, "id94"], [1252, "id99"], [1252, "id111"], [1252, "id117"], [1252, "id132"], [1252, "id139"], [1252, "id146"], [1252, "id152"], [1252, "id159"], [1252, "id165"], [1252, "id170"]], "Py-ART v1.14.5": [[1252, "py-art-v1-14-5"]], "Merged PRs": [[1252, "merged-prs"]], "Py-ART v1.14.4": [[1252, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[1252, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[1252, "py-art-v1-14-2"]], "Documentation improvements": [[1252, "documentation-improvements"], [1252, "id20"], [1252, "id25"], [1252, "id38"], [1252, "id51"], [1252, "id61"], [1252, "id71"], [1252, "id77"], [1252, "id95"], [1252, "id107"], [1252, "id112"], [1252, "id118"], [1252, "id123"], [1252, "id127"], [1252, "id133"], [1252, "id140"], [1252, "id147"], [1252, "id153"], [1252, "id160"], [1252, "id166"]], "Py-ART v1.14.1": [[1252, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[1252, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[1252, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[1252, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[1252, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[1252, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[1252, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[1252, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[1252, "py-art-v1-12-5"]], "PyART v1.12.4": [[1252, "pyart-v1-12-4"]], "PyART v1.12.2": [[1252, "pyart-v1-12-2"]], "PyART v1.12.0": [[1252, "pyart-v1-12-0"]], "PyART v1.11.8": [[1252, "pyart-v1-11-8"]], "Deprecated features": [[1252, "deprecated-features"], [1252, "id134"], [1252, "id141"], [1252, "id154"]], "PyART v1.11.6": [[1252, "pyart-v1-11-6"]], "PyART v1.11.5": [[1252, "pyart-v1-11-5"]], "PyART v1.11.3": [[1252, "pyart-v1-11-3"]], "PyART v1.11.2": [[1252, "pyart-v1-11-2"]], "PyART v1.11.1": [[1252, "pyart-v1-11-1"]], "PyART v1.11.0": [[1252, "pyart-v1-11-0"]], "PyART v1.10.4": [[1252, "pyart-v1-10-4"]], "PyART v1.10.3": [[1252, "pyart-v1-10-3"]], "PyART v1.10.2": [[1252, "pyart-v1-10-2"]], "PyART v1.10.1": [[1252, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[1252, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[1252, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[1252, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[1252, "pyart-v1-8-0"]], "PyART v1.7.0": [[1252, "pyart-v1-7-0"]], "PyART v1.6.0": [[1252, "pyart-v1-6-0"]], "PyART v1.5.0": [[1252, "pyart-v1-5-0"]], "PyART v1.4.0": [[1252, "pyart-v1-4-0"]], "PyART v1.3.0": [[1252, "pyart-v1-3-0"]], "Moment correction examples": [[1253, "moment-correction-examples"], [1257, "moment-correction-examples"]], "Correct reflectivity attenuation": [[1254, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[1255, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[1256, "computation-times"], [1261, "computation-times"], [1266, "computation-times"], [1285, "computation-times"], [1292, "computation-times"]], "Example Gallery": [[1257, "example-gallery"]], "Input/Output Examples": [[1257, "input-output-examples"], [1258, "input-output-examples"]], "Mapping examples": [[1257, "mapping-examples"], [1262, "mapping-examples"]], "Plotting examples": [[1257, "plotting-examples"], [1267, "plotting-examples"]], "Retrieval Examples": [[1257, "retrieval-examples"], [1286, "retrieval-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[1259, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[1259, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[1259, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[1260, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[1260, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[1263, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[1264, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[1265, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[1268, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[1269, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[1270, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[1271, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[1272, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[1273, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[1274, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[1275, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[1276, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[1277, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [1278, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[1279, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [1280, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[1281, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[1282, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[1283, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[1284, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[1287, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[1288, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[1289, "convective-stratiform-classification"]], "How the algorithm works": [[1289, "how-the-algorithm-works"]], "Examples": [[1289, "examples"]], "Summary of recommendations and best practices": [[1289, "summary-of-recommendations-and-best-practices"]], "References": [[1289, "references"]], "Calculate and Plot hydrometeor classification": [[1290, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[1291, "calculate-and-plot-vad-profile"]], "The Python ARM Radar Toolkit - Py-ART": [[1293, "the-python-arm-radar-toolkit-py-art"]], "About the MeteoSwiss fork of Py-ART": [[1293, "about-the-meteoswiss-fork-of-py-art"]], "Citing Py-ART": [[1293, "citing-py-art"]], "What can Py-ART do?": [[1293, "what-can-py-art-do"]], "Short Courses": [[1293, "short-courses"]], "Install": [[1293, "install"], [1303, "install"]], "Dependencies": [[1293, "dependencies"]], "Optional Dependences": [[1293, "optional-dependences"]], "Getting help": [[1293, "getting-help"]], "Contributing": [[1293, "contributing"]], "Notebook Gallery": [[1294, "notebook-gallery"]], "Notebooks": [[1294, null]], "Creating a basic ingest of a NetCDF file": [[1295, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[1296, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[1297, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[1299, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[1300, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[1301, "the-py-art-radar-object-and-indexing"]], "Installation": [[1302, "installation"]], "Required Dependencies": [[1302, "required-dependencies"]], "Optional Dependencies": [[1302, "optional-dependencies"]], "Obtaining the latest source": [[1302, "obtaining-the-latest-source"]], "Installing from Source": [[1302, "installing-from-source"]], "Frequently asked questions": [[1302, "frequently-asked-questions"]], "Contributor\u2019s Guide": [[1303, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[1303, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[1303, "important-links"]], "Citing": [[1303, "citing"]], "Resources": [[1303, "resources"]], "Code Style": [[1303, "code-style"]], "Python File Setup": [[1303, "python-file-setup"]], "Testing": [[1303, "testing"]], "GitHub": [[1303, "github"]], "Blog Posts": [[1303, "blog-posts"]], "User Guide": [[1304, "user-guide"]], "Setting up an Environment": [[1305, "setting-up-an-environment"]], "Anaconda": [[1305, "anaconda"]], "Setting a Channel": [[1305, "setting-a-channel"]], "Creating an Environment": [[1305, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[1305, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[1305, "more-information"]]}, "indexentries": {"read_bin() (in module pyart.aux_io)": [[0, "pyart.aux_io.read_bin"], [539, "pyart.aux_io.read_bin"]], "read_bin_mf() (in module pyart.aux_io)": [[1, "pyart.aux_io.read_bin_mf"], [540, "pyart.aux_io.read_bin_mf"]], "read_cartesian_metranet() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_cartesian_metranet"], [541, "pyart.aux_io.read_cartesian_metranet"]], "read_cf1() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_cf1"], [542, "pyart.aux_io.read_cf1"]], "read_cf1_cartesian() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_cf1_cartesian"], [543, "pyart.aux_io.read_cf1_cartesian"]], "read_cf1_cartesian_mf() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_cf1_cartesian_mf"], [544, "pyart.aux_io.read_cf1_cartesian_mf"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_d3r_gcpex_nc"], [545, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_dat_mf() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_dat_mf"], [546, "pyart.aux_io.read_dat_mf"]], "read_gamic() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_gamic"], [550, "pyart.aux_io.read_gamic"]], "read_gif() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_gif"], [551, "pyart.aux_io.read_gif"]], "read_grib() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_grib"], [552, "pyart.aux_io.read_grib"]], "read_hpl() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_hpl"], [553, "pyart.aux_io.read_hpl"]], "read_iq() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_iq"], [554, "pyart.aux_io.read_iq"]], "read_kazr() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_kazr"], [555, "pyart.aux_io.read_kazr"]], "read_metranet() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_metranet"], [556, "pyart.aux_io.read_metranet"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[15, "pyart.aux_io.read_noxp_iphex_nc"], [557, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_grid_h5() (in module pyart.aux_io)": [[16, "pyart.aux_io.read_odim_grid_h5"], [558, "pyart.aux_io.read_odim_grid_h5"]], "read_odim_h5() (in module pyart.aux_io)": [[17, "pyart.aux_io.read_odim_h5"], [559, "pyart.aux_io.read_odim_h5"]], "read_odim_vp_h5() (in module pyart.aux_io)": [[18, "pyart.aux_io.read_odim_vp_h5"], [560, "pyart.aux_io.read_odim_vp_h5"]], "read_pattern() (in module pyart.aux_io)": [[19, "pyart.aux_io.read_pattern"], [561, "pyart.aux_io.read_pattern"]], "read_png() (in module pyart.aux_io)": [[20, "pyart.aux_io.read_png"], [562, "pyart.aux_io.read_png"]], "read_radx() (in module pyart.aux_io)": [[21, "pyart.aux_io.read_radx"], [568, "pyart.aux_io.read_radx"]], "read_rainbow_psr() (in module pyart.aux_io)": [[22, "pyart.aux_io.read_rainbow_psr"], [569, "pyart.aux_io.read_rainbow_psr"]], "read_rainbow_psr_spectra() (in module pyart.aux_io)": [[23, "pyart.aux_io.read_rainbow_psr_spectra"], [570, "pyart.aux_io.read_rainbow_psr_spectra"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[24, "pyart.aux_io.read_rainbow_wrl"], [571, "pyart.aux_io.read_rainbow_wrl"]], "read_spectra() (in module pyart.aux_io)": [[25, "pyart.aux_io.read_spectra"], [573, "pyart.aux_io.read_spectra"]], "write_odim_grid_h5() (in module pyart.aux_io)": [[26, "pyart.aux_io.write_odim_grid_h5"], [574, "pyart.aux_io.write_odim_grid_h5"]], "write_odim_h5() (in module pyart.aux_io)": [[27, "pyart.aux_io.write_odim_h5"], [575, "pyart.aux_io.write_odim_h5"]], "write_spectra() (in module pyart.aux_io)": [[28, "pyart.aux_io.write_spectra"], [577, "pyart.aux_io.write_spectra"]], "texture_of_complex_phase() (in module pyart.bridge)": [[29, "pyart.bridge.texture_of_complex_phase"], [579, "pyart.bridge.texture_of_complex_phase"]], "filemetadata (class in pyart.config)": [[30, "pyart.config.FileMetadata"], [581, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[31, "pyart.config.FileMetadata.__call__"], [582, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[32, "pyart.config.FileMetadata.get_field_name"], [583, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[33, "pyart.config.FileMetadata.get_metadata"], [584, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[34, "pyart.config.get_field_colormap"], [585, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[35, "pyart.config.get_field_limits"], [586, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[36, "pyart.config.get_field_mapping"], [587, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[37, "pyart.config.get_field_name"], [588, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[38, "pyart.config.get_fillvalue"], [589, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[39, "pyart.config.get_metadata"], [590, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[40, "pyart.config.load_config"], [591, "pyart.config.load_config"]], "grid (class in pyart.core)": [[41, "pyart.core.Grid"], [593, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[42, "pyart.core.Grid.add_field"], [594, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[43, "pyart.core.Grid.get_point_longitude_latitude"], [595, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[44, "pyart.core.Grid.get_projparams"], [596, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[45, "pyart.core.Grid.init_point_altitude"], [597, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[46, "pyart.core.Grid.init_point_longitude_latitude"], [598, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[47, "pyart.core.Grid.init_point_x_y_z"], [599, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[48, "pyart.core.Grid.projection_proj"], [600, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[49, "pyart.core.Grid.to_xarray"], [601, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[50, "pyart.core.Grid.write"], [602, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[51, "pyart.core.HorizontalWindProfile"], [603, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[52, "pyart.core.HorizontalWindProfile.from_u_and_v"], [604, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[53, "pyart.core.HorizontalWindProfile.u_wind"], [605, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[54, "pyart.core.HorizontalWindProfile.v_wind"], [606, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[55, "pyart.core.Radar"], [607, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[56, "pyart.core.Radar.add_field"], [608, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[57, "pyart.core.Radar.add_field_like"], [609, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[58, "pyart.core.Radar.add_filter"], [610, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[59, "pyart.core.Radar.check_field_exists"], [611, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[60, "pyart.core.Radar.extract_sweeps"], [612, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_azimuth"], [613, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[62, "pyart.core.Radar.get_elevation"], [614, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[63, "pyart.core.Radar.get_end"], [615, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[64, "pyart.core.Radar.get_field"], [616, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[65, "pyart.core.Radar.get_gate_area"], [617, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[66, "pyart.core.Radar.get_gate_lat_lon_alt"], [618, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[67, "pyart.core.Radar.get_gate_x_y_z"], [619, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[68, "pyart.core.Radar.get_nyquist_vel"], [620, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[69, "pyart.core.Radar.get_slice"], [621, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[70, "pyart.core.Radar.get_start"], [622, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[71, "pyart.core.Radar.get_start_end"], [623, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[72, "pyart.core.Radar.info"], [624, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[73, "pyart.core.Radar.init_gate_altitude"], [625, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[74, "pyart.core.Radar.init_gate_longitude_latitude"], [626, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[75, "pyart.core.Radar.init_gate_x_y_z"], [627, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[76, "pyart.core.Radar.init_rays_per_sweep"], [628, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[77, "pyart.core.Radar.iter_azimuth"], [629, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[78, "pyart.core.Radar.iter_elevation"], [630, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[79, "pyart.core.Radar.iter_end"], [631, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[80, "pyart.core.Radar.iter_field"], [632, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[81, "pyart.core.Radar.iter_slice"], [633, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[82, "pyart.core.Radar.iter_start"], [634, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[83, "pyart.core.Radar.iter_start_end"], [635, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[84, "pyart.core.RadarSpectra"], [636, "pyart.core.RadarSpectra"]], "add_field() (pyart.core.radarspectra method)": [[85, "pyart.core.RadarSpectra.add_field"], [637, "pyart.core.RadarSpectra.add_field"]], "add_field_like() (pyart.core.radarspectra method)": [[86, "pyart.core.RadarSpectra.add_field_like"], [638, "pyart.core.RadarSpectra.add_field_like"]], "add_filter() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.add_filter"], [639, "pyart.core.RadarSpectra.add_filter"]], "check_field_exists() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.check_field_exists"], [640, "pyart.core.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.extract_sweeps"], [641, "pyart.core.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_azimuth"], [642, "pyart.core.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.get_elevation"], [643, "pyart.core.RadarSpectra.get_elevation"]], "get_end() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.get_end"], [644, "pyart.core.RadarSpectra.get_end"]], "get_field() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.get_field"], [645, "pyart.core.RadarSpectra.get_field"]], "get_gate_area() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.get_gate_area"], [646, "pyart.core.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"], [647, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.get_gate_x_y_z"], [648, "pyart.core.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.get_nyquist_vel"], [649, "pyart.core.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.get_slice"], [650, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.get_start"], [651, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.get_start_end"], [652, "pyart.core.RadarSpectra.get_start_end"]], "info() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.info"], [653, "pyart.core.RadarSpectra.info"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[102, "pyart.core.RadarSpectra.init_gate_altitude"], [654, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[103, "pyart.core.RadarSpectra.init_gate_longitude_latitude"], [655, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[104, "pyart.core.RadarSpectra.init_gate_x_y_z"], [656, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[105, "pyart.core.RadarSpectra.init_rays_per_sweep"], [657, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[106, "pyart.core.RadarSpectra.iter_azimuth"], [658, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[107, "pyart.core.RadarSpectra.iter_elevation"], [659, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[108, "pyart.core.RadarSpectra.iter_end"], [660, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[109, "pyart.core.RadarSpectra.iter_field"], [661, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[110, "pyart.core.RadarSpectra.iter_slice"], [662, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[111, "pyart.core.RadarSpectra.iter_start"], [663, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[112, "pyart.core.RadarSpectra.iter_start_end"], [664, "pyart.core.RadarSpectra.iter_start_end"]], "antenna_to_cartesian() (in module pyart.core)": [[113, "pyart.core.antenna_to_cartesian"], [665, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[114, "pyart.core.antenna_vectors_to_cartesian"], [666, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[115, "pyart.core.cartesian_to_antenna"], [667, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[116, "pyart.core.cartesian_to_geographic"], [668, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[117, "pyart.core.cartesian_to_geographic_aeqd"], [669, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[118, "pyart.core.cartesian_vectors_to_geographic"], [670, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[119, "pyart.core.geographic_to_cartesian"], [671, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[120, "pyart.core.geographic_to_cartesian_aeqd"], [672, "pyart.core.geographic_to_cartesian_aeqd"]], "wgs84_to_swissch1903() (in module pyart.core)": [[121, "pyart.core.wgs84_to_swissCH1903"], [673, "pyart.core.wgs84_to_swissCH1903"]], "calculate_attenuation() (in module pyart.correct)": [[122, "pyart.correct.calculate_attenuation"], [703, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[123, "pyart.correct.calculate_attenuation_philinear"], [704, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[124, "pyart.correct.calculate_attenuation_zphi"], [705, "pyart.correct.calculate_attenuation_zphi"]], "compute_apparent_vpr() (in module pyart.correct)": [[125, "pyart.correct.compute_apparent_vpr"], [706, "pyart.correct.compute_apparent_vpr"]], "compute_theoretical_vpr() (in module pyart.correct)": [[126, "pyart.correct.compute_theoretical_vpr"], [707, "pyart.correct.compute_theoretical_vpr"]], "correct_bias() (in module pyart.correct)": [[127, "pyart.correct.correct_bias"], [708, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[128, "pyart.correct.correct_noise_rhohv"], [709, "pyart.correct.correct_noise_rhohv"]], "correct_sys_phase() (in module pyart.correct)": [[129, "pyart.correct.correct_sys_phase"], [710, "pyart.correct.correct_sys_phase"]], "correct_visibility() (in module pyart.correct)": [[130, "pyart.correct.correct_visibility"], [711, "pyart.correct.correct_visibility"]], "correct_vpr() (in module pyart.correct)": [[131, "pyart.correct.correct_vpr"], [712, "pyart.correct.correct_vpr"]], "correct_vpr_spatialised() (in module pyart.correct)": [[132, "pyart.correct.correct_vpr_spatialised"], [713, "pyart.correct.correct_vpr_spatialised"]], "dealias_fourdd() (in module pyart.correct)": [[133, "pyart.correct.dealias_fourdd"], [714, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[134, "pyart.correct.dealias_region_based"], [715, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[135, "pyart.correct.dealias_unwrap_phase"], [716, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[136, "pyart.correct.despeckle_field"], [717, "pyart.correct.despeckle_field"]], "det_sys_phase_ray() (in module pyart.correct)": [[137, "pyart.correct.det_sys_phase_ray"], [718, "pyart.correct.det_sys_phase_ray"]], "est_rhohv_rain() (in module pyart.correct)": [[138, "pyart.correct.est_rhohv_rain"], [719, "pyart.correct.est_rhohv_rain"]], "est_zdr_precip() (in module pyart.correct)": [[139, "pyart.correct.est_zdr_precip"], [720, "pyart.correct.est_zdr_precip"]], "est_zdr_snow() (in module pyart.correct)": [[140, "pyart.correct.est_zdr_snow"], [721, "pyart.correct.est_zdr_snow"]], "find_objects() (in module pyart.correct)": [[141, "pyart.correct.find_objects"], [722, "pyart.correct.find_objects"]], "get_mask_fzl() (in module pyart.correct)": [[142, "pyart.correct.get_mask_fzl"], [724, "pyart.correct.get_mask_fzl"]], "get_sun_hits() (in module pyart.correct)": [[143, "pyart.correct.get_sun_hits"], [725, "pyart.correct.get_sun_hits"]], "get_sun_hits_ivic() (in module pyart.correct)": [[144, "pyart.correct.get_sun_hits_ivic"], [726, "pyart.correct.get_sun_hits_ivic"]], "get_sun_hits_psr() (in module pyart.correct)": [[145, "pyart.correct.get_sun_hits_psr"], [727, "pyart.correct.get_sun_hits_psr"]], "phase_proc_lp() (in module pyart.correct)": [[146, "pyart.correct.phase_proc_lp"], [729, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[147, "pyart.correct.phase_proc_lp_gf"], [730, "pyart.correct.phase_proc_lp_gf"]], "ptoa_to_sf() (in module pyart.correct)": [[148, "pyart.correct.ptoa_to_sf"], [731, "pyart.correct.ptoa_to_sf"]], "scanning_losses() (in module pyart.correct)": [[149, "pyart.correct.scanning_losses"], [733, "pyart.correct.scanning_losses"]], "selfconsistency_bias() (in module pyart.correct)": [[150, "pyart.correct.selfconsistency_bias"], [734, "pyart.correct.selfconsistency_bias"]], "selfconsistency_bias2() (in module pyart.correct)": [[151, "pyart.correct.selfconsistency_bias2"], [735, "pyart.correct.selfconsistency_bias2"]], "selfconsistency_kdp_phidp() (in module pyart.correct)": [[152, "pyart.correct.selfconsistency_kdp_phidp"], [736, "pyart.correct.selfconsistency_kdp_phidp"]], "smooth_masked() (in module pyart.correct)": [[153, "pyart.correct.smooth_masked"], [737, "pyart.correct.smooth_masked"]], "smooth_phidp_double_window() (in module pyart.correct)": [[154, "pyart.correct.smooth_phidp_double_window"], [738, "pyart.correct.smooth_phidp_double_window"]], "smooth_phidp_single_window() (in module pyart.correct)": [[155, "pyart.correct.smooth_phidp_single_window"], [739, "pyart.correct.smooth_phidp_single_window"]], "solar_flux_lookup() (in module pyart.correct)": [[156, "pyart.correct.solar_flux_lookup"], [740, "pyart.correct.solar_flux_lookup"]], "sun_position_mfr() (in module pyart.correct)": [[157, "pyart.correct.sun_position_mfr"], [741, "pyart.correct.sun_position_mfr"]], "sun_position_pysolar() (in module pyart.correct)": [[158, "pyart.correct.sun_position_pysolar"], [742, "pyart.correct.sun_position_pysolar"]], "sun_power() (in module pyart.correct)": [[159, "pyart.correct.sun_power"], [743, "pyart.correct.sun_power"]], "sun_retrieval() (in module pyart.correct)": [[160, "pyart.correct.sun_retrieval"], [744, "pyart.correct.sun_retrieval"]], "deprecatedattribute": [[161, "pyart.exceptions.DeprecatedAttribute"]], "deprecatedfunctionname": [[162, "pyart.exceptions.DeprecatedFunctionName"]], "missingoptionaldependency": [[163, "pyart.exceptions.MissingOptionalDependency"]], "_deprecated_alias() (in module pyart.exceptions)": [[164, "pyart.exceptions._deprecated_alias"]], "gatefilter (class in pyart.filters)": [[165, "pyart.filters.GateFilter"], [747, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[166, "pyart.filters.GateFilter.copy"], [748, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[167, "pyart.filters.GateFilter.exclude_above"], [749, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[168, "pyart.filters.GateFilter.exclude_all"], [750, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[169, "pyart.filters.GateFilter.exclude_below"], [751, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[170, "pyart.filters.GateFilter.exclude_equal"], [752, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.exclude_gates"], [753, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_inside"], [754, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_invalid"], [755, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_masked"], [756, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_none"], [757, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_not_equal"], [758, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_outside"], [759, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_transition"], [760, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[179, "pyart.filters.GateFilter.gate_excluded"], [761, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[180, "pyart.filters.GateFilter.gate_included"], [762, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.include_above"], [763, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.include_all"], [764, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.include_below"], [765, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[184, "pyart.filters.GateFilter.include_equal"], [766, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.include_gates"], [767, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_inside"], [768, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_none"], [769, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_not_equal"], [770, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_not_masked"], [771, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_not_transition"], [772, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_outside"], [773, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_valid"], [774, "pyart.filters.GateFilter.include_valid"]], "birds_gate_filter() (in module pyart.filters)": [[193, "pyart.filters.birds_gate_filter"], [775, "pyart.filters.birds_gate_filter"]], "class_based_gate_filter() (in module pyart.filters)": [[194, "pyart.filters.class_based_gate_filter"], [776, "pyart.filters.class_based_gate_filter"]], "iso0_based_gate_filter() (in module pyart.filters)": [[195, "pyart.filters.iso0_based_gate_filter"], [777, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[196, "pyart.filters.moment_and_texture_based_gate_filter"], [778, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[197, "pyart.filters.moment_based_gate_filter"], [779, "pyart.filters.moment_based_gate_filter"]], "snr_based_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.snr_based_gate_filter"], [780, "pyart.filters.snr_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.temp_based_gate_filter"], [781, "pyart.filters.temp_based_gate_filter"]], "visibility_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.visibility_based_gate_filter"], [782, "pyart.filters.visibility_based_gate_filter"]], "airborneradardisplay (class in pyart.graph)": [[201, "pyart.graph.AirborneRadarDisplay"], [784, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[202, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"], [785, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[203, "pyart.graph.AirborneRadarDisplay.generate_filename"], [786, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[204, "pyart.graph.AirborneRadarDisplay.generate_ray_title"], [787, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[205, "pyart.graph.AirborneRadarDisplay.generate_title"], [788, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"], [789, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"], [790, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"], [791, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[209, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"], [792, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[210, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"], [793, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"], [794, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"], [795, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"], [796, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"], [797, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"], [798, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"], [799, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.plot"], [800, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"], [801, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.plot_colorbar"], [802, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[220, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"], [803, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[221, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"], [804, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"], [805, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_label"], [806, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_labels"], [807, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_ppi"], [808, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_range_ring"], [809, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_range_rings"], [810, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_ray"], [811, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_rhi"], [812, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"], [813, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_vpt"], [814, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_xsection"], [815, "pyart.graph.AirborneRadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[233, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"], [816, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[234, "pyart.graph.AirborneRadarDisplay.set_limits"], [817, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[235, "pyart.graph.GridMapDisplay"], [818, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.cartopy_coastlines"], [819, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"], [820, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.cartopy_states"], [821, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.generate_filename"], [822, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.generate_grid_title"], [823, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"], [824, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"], [825, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.plot_colorbar"], [826, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.plot_crosshairs"], [827, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.plot_grid"], [828, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_grid_contour() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.plot_grid_contour"], [829, "pyart.graph.GridMapDisplay.plot_grid_contour"]], "plot_grid_raw() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_grid_raw"], [830, "pyart.graph.GridMapDisplay.plot_grid_raw"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_latitude_slice"], [831, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.plot_latitudinal_level"], [832, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_latlon_level() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.plot_latlon_level"], [833, "pyart.graph.GridMapDisplay.plot_latlon_level"]], "plot_latlon_slice() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_latlon_slice"], [834, "pyart.graph.GridMapDisplay.plot_latlon_slice"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_longitude_slice"], [835, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_longitudinal_level"], [836, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[254, "pyart.graph.GridMapDisplayBasemap"], [837, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[255, "pyart.graph.GridMapDisplayBasemap.generate_filename"], [838, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[256, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"], [839, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[257, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"], [840, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[258, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"], [841, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.get_basemap"], [842, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.plot_basemap"], [843, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"], [844, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"], [845, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.plot_grid"], [846, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"], [847, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"], [848, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"], [849, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"], [850, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[268, "pyart.graph.RadarDisplay"], [851, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.generate_az_rhi_title"], [852, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[270, "pyart.graph.RadarDisplay.generate_filename"], [853, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[271, "pyart.graph.RadarDisplay.generate_ray_title"], [854, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.generate_title"], [855, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.generate_vpt_title"], [856, "pyart.graph.RadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.generate_xsection_title"], [857, "pyart.graph.RadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.label_xaxis_r"], [858, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[276, "pyart.graph.RadarDisplay.label_xaxis_rays"], [859, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[277, "pyart.graph.RadarDisplay.label_xaxis_time"], [860, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.label_xaxis_x"], [861, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.label_xaxis_xsection"], [862, "pyart.graph.RadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.label_yaxis_field"], [863, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radardisplay method)": [[281, "pyart.graph.RadarDisplay.label_yaxis_xsection"], [864, "pyart.graph.RadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.label_yaxis_y"], [865, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.label_yaxis_z"], [866, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot"], [867, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"], [868, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot_colorbar"], [869, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_cr_raster"], [870, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[288, "pyart.graph.RadarDisplay.plot_cross_hair"], [871, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[289, "pyart.graph.RadarDisplay.plot_grid_lines"], [872, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[290, "pyart.graph.RadarDisplay.plot_label"], [873, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[291, "pyart.graph.RadarDisplay.plot_labels"], [874, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[292, "pyart.graph.RadarDisplay.plot_ppi"], [875, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[293, "pyart.graph.RadarDisplay.plot_range_ring"], [876, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[294, "pyart.graph.RadarDisplay.plot_range_rings"], [877, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[295, "pyart.graph.RadarDisplay.plot_ray"], [878, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[296, "pyart.graph.RadarDisplay.plot_rhi"], [879, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[297, "pyart.graph.RadarDisplay.plot_vpt"], [880, "pyart.graph.RadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radardisplay method)": [[298, "pyart.graph.RadarDisplay.plot_xsection"], [881, "pyart.graph.RadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[299, "pyart.graph.RadarDisplay.set_aspect_ratio"], [882, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[300, "pyart.graph.RadarDisplay.set_limits"], [883, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[301, "pyart.graph.RadarMapDisplay"], [884, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"], [885, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.generate_filename"], [886, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.generate_ray_title"], [887, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.generate_title"], [888, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.generate_vpt_title"], [889, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.generate_xsection_title"], [890, "pyart.graph.RadarMapDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.label_xaxis_r"], [891, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[309, "pyart.graph.RadarMapDisplay.label_xaxis_rays"], [892, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[310, "pyart.graph.RadarMapDisplay.label_xaxis_time"], [893, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.label_xaxis_x"], [894, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"], [895, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.label_yaxis_field"], [896, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"], [897, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.label_yaxis_y"], [898, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.label_yaxis_z"], [899, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot"], [900, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"], [901, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_colorbar"], [902, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_cr_raster"], [903, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[321, "pyart.graph.RadarMapDisplay.plot_cross_hair"], [904, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[322, "pyart.graph.RadarMapDisplay.plot_grid_lines"], [905, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_label"], [906, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_labels"], [907, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[325, "pyart.graph.RadarMapDisplay.plot_line_geo"], [908, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[326, "pyart.graph.RadarMapDisplay.plot_line_xy"], [909, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[327, "pyart.graph.RadarMapDisplay.plot_point"], [910, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[328, "pyart.graph.RadarMapDisplay.plot_ppi"], [911, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[329, "pyart.graph.RadarMapDisplay.plot_ppi_map"], [912, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[330, "pyart.graph.RadarMapDisplay.plot_range_ring"], [913, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[331, "pyart.graph.RadarMapDisplay.plot_range_rings"], [914, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[332, "pyart.graph.RadarMapDisplay.plot_ray"], [915, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[333, "pyart.graph.RadarMapDisplay.plot_rhi"], [916, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[334, "pyart.graph.RadarMapDisplay.plot_vpt"], [917, "pyart.graph.RadarMapDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplay method)": [[335, "pyart.graph.RadarMapDisplay.plot_xsection"], [918, "pyart.graph.RadarMapDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[336, "pyart.graph.RadarMapDisplay.set_aspect_ratio"], [919, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[337, "pyart.graph.RadarMapDisplay.set_limits"], [920, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[338, "pyart.graph.RadarMapDisplayBasemap"], [921, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"], [922, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.generate_filename"], [923, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"], [924, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[342, "pyart.graph.RadarMapDisplayBasemap.generate_title"], [925, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"], [926, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"], [927, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"], [928, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[346, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"], [929, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[347, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"], [930, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"], [931, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"], [932, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"], [933, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"], [934, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"], [935, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"], [936, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot"], [937, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"], [938, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"], [939, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"], [940, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"], [941, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"], [942, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_label"], [943, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[361, "pyart.graph.RadarMapDisplayBasemap.plot_labels"], [944, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[362, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"], [945, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[363, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"], [946, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[364, "pyart.graph.RadarMapDisplayBasemap.plot_point"], [947, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[365, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"], [948, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[366, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"], [949, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[367, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"], [950, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[368, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"], [951, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[369, "pyart.graph.RadarMapDisplayBasemap.plot_ray"], [952, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[370, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"], [953, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[371, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"], [954, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[372, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"], [955, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[373, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"], [956, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[374, "pyart.graph.RadarMapDisplayBasemap.set_limits"], [957, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "make_time_unit_str() (in module pyart.io)": [[375, "pyart.io.make_time_unit_str"], [960, "pyart.io.make_time_unit_str"]], "prepare_for_read() (in module pyart.io)": [[376, "pyart.io.prepare_for_read"], [961, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[377, "pyart.io.read"], [962, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[378, "pyart.io.read_arm_sonde"], [963, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[379, "pyart.io.read_arm_sonde_vap"], [964, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[380, "pyart.io.read_cfradial"], [965, "pyart.io.read_cfradial"]], "read_cfradial2() (in module pyart.io)": [[381, "pyart.io.read_cfradial2"], [966, "pyart.io.read_cfradial2"]], "read_chl() (in module pyart.io)": [[382, "pyart.io.read_chl"], [967, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[383, "pyart.io.read_grid"], [968, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[384, "pyart.io.read_grid_mdv"], [969, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[385, "pyart.io.read_mdv"], [970, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[386, "pyart.io.read_nexrad_archive"], [971, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[387, "pyart.io.read_nexrad_cdm"], [972, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[388, "pyart.io.read_nexrad_level3"], [973, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[389, "pyart.io.read_rsl"], [974, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[390, "pyart.io.read_sigmet"], [975, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[391, "pyart.io.read_uf"], [976, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[392, "pyart.io.write_cfradial"], [977, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[393, "pyart.io.write_grid"], [978, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[394, "pyart.io.write_grid_geotiff"], [979, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[395, "pyart.io.write_grid_mdv"], [980, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[396, "pyart.io.write_uf"], [981, "pyart.io.write_uf"]], "lazyloaddict (class in pyart.lazydict)": [[397, "pyart.lazydict.LazyLoadDict"], [983, "pyart.lazydict.LazyLoadDict"]], "__contains__() (pyart.lazydict.lazyloaddict method)": [[398, "pyart.lazydict.LazyLoadDict.__contains__"]], "__delattr__() (pyart.lazydict.lazyloaddict method)": [[399, "pyart.lazydict.LazyLoadDict.__delattr__"]], "__delitem__() (pyart.lazydict.lazyloaddict method)": [[400, "pyart.lazydict.LazyLoadDict.__delitem__"]], "__dir__() (pyart.lazydict.lazyloaddict method)": [[401, "pyart.lazydict.LazyLoadDict.__dir__"]], "__eq__() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.__eq__"]], "__format__() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.__format__"]], "__ge__() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.__ge__"]], "__getattribute__() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.__getattribute__"]], "__getitem__() (pyart.lazydict.lazyloaddict method)": [[406, "pyart.lazydict.LazyLoadDict.__getitem__"]], "__getstate__() (pyart.lazydict.lazyloaddict method)": [[407, "pyart.lazydict.LazyLoadDict.__getstate__"]], "__gt__() (pyart.lazydict.lazyloaddict method)": [[408, "pyart.lazydict.LazyLoadDict.__gt__"]], "__init__() (pyart.lazydict.lazyloaddict method)": [[409, "pyart.lazydict.LazyLoadDict.__init__"]], "__init_subclass__() (pyart.lazydict.lazyloaddict method)": [[410, "pyart.lazydict.LazyLoadDict.__init_subclass__"]], "__iter__() (pyart.lazydict.lazyloaddict method)": [[411, "pyart.lazydict.LazyLoadDict.__iter__"]], "__le__() (pyart.lazydict.lazyloaddict method)": [[412, "pyart.lazydict.LazyLoadDict.__le__"]], "__len__() (pyart.lazydict.lazyloaddict method)": [[413, "pyart.lazydict.LazyLoadDict.__len__"]], "__lt__() (pyart.lazydict.lazyloaddict method)": [[414, "pyart.lazydict.LazyLoadDict.__lt__"]], "__ne__() (pyart.lazydict.lazyloaddict method)": [[415, "pyart.lazydict.LazyLoadDict.__ne__"]], "__new__() (pyart.lazydict.lazyloaddict method)": [[416, "pyart.lazydict.LazyLoadDict.__new__"]], "__reduce__() (pyart.lazydict.lazyloaddict method)": [[417, "pyart.lazydict.LazyLoadDict.__reduce__"]], "__reduce_ex__() (pyart.lazydict.lazyloaddict method)": [[418, "pyart.lazydict.LazyLoadDict.__reduce_ex__"]], "__repr__() (pyart.lazydict.lazyloaddict method)": [[419, "pyart.lazydict.LazyLoadDict.__repr__"]], "__setattr__() (pyart.lazydict.lazyloaddict method)": [[420, "pyart.lazydict.LazyLoadDict.__setattr__"]], "__setitem__() (pyart.lazydict.lazyloaddict method)": [[421, "pyart.lazydict.LazyLoadDict.__setitem__"]], "__sizeof__() (pyart.lazydict.lazyloaddict method)": [[422, "pyart.lazydict.LazyLoadDict.__sizeof__"]], "__str__() (pyart.lazydict.lazyloaddict method)": [[423, "pyart.lazydict.LazyLoadDict.__str__"]], "__subclasshook__() (pyart.lazydict.lazyloaddict class method)": [[424, "pyart.lazydict.LazyLoadDict.__subclasshook__"]], "clear() (pyart.lazydict.lazyloaddict method)": [[425, "pyart.lazydict.LazyLoadDict.clear"], [984, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[426, "pyart.lazydict.LazyLoadDict.copy"], [985, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[427, "pyart.lazydict.LazyLoadDict.get"], [986, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[428, "pyart.lazydict.LazyLoadDict.has_key"], [987, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[429, "pyart.lazydict.LazyLoadDict.items"], [988, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[430, "pyart.lazydict.LazyLoadDict.keys"], [989, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[431, "pyart.lazydict.LazyLoadDict.pop"], [990, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[432, "pyart.lazydict.LazyLoadDict.popitem"], [991, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[433, "pyart.lazydict.LazyLoadDict.set_lazy"], [992, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[434, "pyart.lazydict.LazyLoadDict.setdefault"], [993, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[435, "pyart.lazydict.LazyLoadDict.update"], [994, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[436, "pyart.lazydict.LazyLoadDict.values"], [995, "pyart.lazydict.LazyLoadDict.values"]], "example_roi_func_constant() (in module pyart.map)": [[437, "pyart.map.example_roi_func_constant"], [1011, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[438, "pyart.map.example_roi_func_dist"], [1012, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[439, "pyart.map.example_roi_func_dist_beam"], [1013, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[440, "pyart.map.grid_from_radars"], [1015, "pyart.map.grid_from_radars"]], "map_gates_to_grid() (in module pyart.map)": [[441, "pyart.map.map_gates_to_grid"], [1016, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[442, "pyart.map.map_to_grid"], [1017, "pyart.map.map_to_grid"]], "_destandardize() (in module pyart.retrieve)": [[443, "pyart.retrieve._destandardize"]], "_get_res_vol_sides() (in module pyart.retrieve)": [[444, "pyart.retrieve._get_res_vol_sides"]], "atmospheric_gas_att() (in module pyart.retrieve)": [[445, "pyart.retrieve.atmospheric_gas_att"], [1020, "pyart.retrieve.atmospheric_gas_att"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[446, "pyart.retrieve.calculate_snr_from_reflectivity"], [1021, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[447, "pyart.retrieve.calculate_velocity_texture"], [1022, "pyart.retrieve.calculate_velocity_texture"]], "compute_doppler_velocity() (in module pyart.retrieve)": [[448, "pyart.retrieve.compute_Doppler_velocity"], [1024, "pyart.retrieve.compute_Doppler_velocity"]], "compute_doppler_velocity_iq() (in module pyart.retrieve)": [[449, "pyart.retrieve.compute_Doppler_velocity_iq"], [1025, "pyart.retrieve.compute_Doppler_velocity_iq"]], "compute_doppler_width() (in module pyart.retrieve)": [[450, "pyart.retrieve.compute_Doppler_width"], [1026, "pyart.retrieve.compute_Doppler_width"]], "compute_doppler_width_iq() (in module pyart.retrieve)": [[451, "pyart.retrieve.compute_Doppler_width_iq"], [1027, "pyart.retrieve.compute_Doppler_width_iq"]], "compute_apparent_profile() (in module pyart.retrieve)": [[452, "pyart.retrieve.compute_apparent_profile"], [1028, "pyart.retrieve.compute_apparent_profile"]], "compute_bird_density() (in module pyart.retrieve)": [[453, "pyart.retrieve.compute_bird_density"], [1029, "pyart.retrieve.compute_bird_density"]], "compute_ccor() (in module pyart.retrieve)": [[454, "pyart.retrieve.compute_ccor"], [1030, "pyart.retrieve.compute_ccor"]], "compute_cdr() (in module pyart.retrieve)": [[455, "pyart.retrieve.compute_cdr"], [1031, "pyart.retrieve.compute_cdr"]], "compute_centroids() (in module pyart.retrieve)": [[456, "pyart.retrieve.compute_centroids"], [1032, "pyart.retrieve.compute_centroids"]], "compute_differential_phase() (in module pyart.retrieve)": [[457, "pyart.retrieve.compute_differential_phase"], [1033, "pyart.retrieve.compute_differential_phase"]], "compute_differential_phase_iq() (in module pyart.retrieve)": [[458, "pyart.retrieve.compute_differential_phase_iq"], [1034, "pyart.retrieve.compute_differential_phase_iq"]], "compute_differential_reflectivity() (in module pyart.retrieve)": [[459, "pyart.retrieve.compute_differential_reflectivity"], [1035, "pyart.retrieve.compute_differential_reflectivity"]], "compute_differential_reflectivity_iq() (in module pyart.retrieve)": [[460, "pyart.retrieve.compute_differential_reflectivity_iq"], [1036, "pyart.retrieve.compute_differential_reflectivity_iq"]], "compute_evp() (in module pyart.retrieve)": [[461, "pyart.retrieve.compute_evp"], [1037, "pyart.retrieve.compute_evp"]], "compute_iq() (in module pyart.retrieve)": [[462, "pyart.retrieve.compute_iq"], [1038, "pyart.retrieve.compute_iq"]], "compute_l() (in module pyart.retrieve)": [[463, "pyart.retrieve.compute_l"], [1039, "pyart.retrieve.compute_l"]], "compute_mean_phase_iq() (in module pyart.retrieve)": [[464, "pyart.retrieve.compute_mean_phase_iq"], [1040, "pyart.retrieve.compute_mean_phase_iq"]], "compute_noise_power() (in module pyart.retrieve)": [[465, "pyart.retrieve.compute_noise_power"], [1041, "pyart.retrieve.compute_noise_power"]], "compute_noisedbz() (in module pyart.retrieve)": [[466, "pyart.retrieve.compute_noisedBZ"], [1042, "pyart.retrieve.compute_noisedBZ"]], "compute_pol_variables() (in module pyart.retrieve)": [[467, "pyart.retrieve.compute_pol_variables"], [1043, "pyart.retrieve.compute_pol_variables"]], "compute_pol_variables_iq() (in module pyart.retrieve)": [[468, "pyart.retrieve.compute_pol_variables_iq"], [1044, "pyart.retrieve.compute_pol_variables_iq"]], "compute_qvp() (in module pyart.retrieve)": [[469, "pyart.retrieve.compute_qvp"], [1045, "pyart.retrieve.compute_qvp"]], "compute_radial_noise_hs() (in module pyart.retrieve)": [[470, "pyart.retrieve.compute_radial_noise_hs"], [1046, "pyart.retrieve.compute_radial_noise_hs"]], "compute_radial_noise_ivic() (in module pyart.retrieve)": [[471, "pyart.retrieve.compute_radial_noise_ivic"], [1047, "pyart.retrieve.compute_radial_noise_ivic"]], "compute_rcs() (in module pyart.retrieve)": [[472, "pyart.retrieve.compute_rcs"], [1048, "pyart.retrieve.compute_rcs"]], "compute_rcs_from_pr() (in module pyart.retrieve)": [[473, "pyart.retrieve.compute_rcs_from_pr"], [1049, "pyart.retrieve.compute_rcs_from_pr"]], "compute_reflectivity() (in module pyart.retrieve)": [[474, "pyart.retrieve.compute_reflectivity"], [1050, "pyart.retrieve.compute_reflectivity"]], "compute_reflectivity_iq() (in module pyart.retrieve)": [[475, "pyart.retrieve.compute_reflectivity_iq"], [1051, "pyart.retrieve.compute_reflectivity_iq"]], "compute_rhohv() (in module pyart.retrieve)": [[476, "pyart.retrieve.compute_rhohv"], [1052, "pyart.retrieve.compute_rhohv"]], "compute_rhohv_iq() (in module pyart.retrieve)": [[477, "pyart.retrieve.compute_rhohv_iq"], [1053, "pyart.retrieve.compute_rhohv_iq"]], "compute_rqvp() (in module pyart.retrieve)": [[478, "pyart.retrieve.compute_rqvp"], [1054, "pyart.retrieve.compute_rqvp"]], "compute_signal_power() (in module pyart.retrieve)": [[479, "pyart.retrieve.compute_signal_power"], [1055, "pyart.retrieve.compute_signal_power"]], "compute_snr() (in module pyart.retrieve)": [[480, "pyart.retrieve.compute_snr"], [1056, "pyart.retrieve.compute_snr"]], "compute_spectra() (in module pyart.retrieve)": [[481, "pyart.retrieve.compute_spectra"], [1057, "pyart.retrieve.compute_spectra"]], "compute_spectral_differential_phase() (in module pyart.retrieve)": [[482, "pyart.retrieve.compute_spectral_differential_phase"], [1058, "pyart.retrieve.compute_spectral_differential_phase"]], "compute_spectral_differential_reflectivity() (in module pyart.retrieve)": [[483, "pyart.retrieve.compute_spectral_differential_reflectivity"], [1059, "pyart.retrieve.compute_spectral_differential_reflectivity"]], "compute_spectral_noise() (in module pyart.retrieve)": [[484, "pyart.retrieve.compute_spectral_noise"], [1060, "pyart.retrieve.compute_spectral_noise"]], "compute_spectral_phase() (in module pyart.retrieve)": [[485, "pyart.retrieve.compute_spectral_phase"], [1061, "pyart.retrieve.compute_spectral_phase"]], "compute_spectral_power() (in module pyart.retrieve)": [[486, "pyart.retrieve.compute_spectral_power"], [1062, "pyart.retrieve.compute_spectral_power"]], "compute_spectral_reflectivity() (in module pyart.retrieve)": [[487, "pyart.retrieve.compute_spectral_reflectivity"], [1063, "pyart.retrieve.compute_spectral_reflectivity"]], "compute_spectral_rhohv() (in module pyart.retrieve)": [[488, "pyart.retrieve.compute_spectral_rhohv"], [1064, "pyart.retrieve.compute_spectral_rhohv"]], "compute_st1_iq() (in module pyart.retrieve)": [[489, "pyart.retrieve.compute_st1_iq"], [1065, "pyart.retrieve.compute_st1_iq"]], "compute_st2_iq() (in module pyart.retrieve)": [[490, "pyart.retrieve.compute_st2_iq"], [1066, "pyart.retrieve.compute_st2_iq"]], "compute_svp() (in module pyart.retrieve)": [[491, "pyart.retrieve.compute_svp"], [1067, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[492, "pyart.retrieve.compute_ts_along_coord"], [1068, "pyart.retrieve.compute_ts_along_coord"]], "compute_vol_refl() (in module pyart.retrieve)": [[493, "pyart.retrieve.compute_vol_refl"], [1069, "pyart.retrieve.compute_vol_refl"]], "compute_vp() (in module pyart.retrieve)": [[494, "pyart.retrieve.compute_vp"], [1070, "pyart.retrieve.compute_vp"]], "compute_wbn_iq() (in module pyart.retrieve)": [[495, "pyart.retrieve.compute_wbn_iq"], [1071, "pyart.retrieve.compute_wbn_iq"]], "conv_strat_yuter() (in module pyart.retrieve)": [[496, "pyart.retrieve.conv_strat_yuter"], [1072, "pyart.retrieve.conv_strat_yuter"]], "data_for_centroids() (in module pyart.retrieve)": [[497, "pyart.retrieve.data_for_centroids"], [1073, "pyart.retrieve.data_for_centroids"]], "detect_ml() (in module pyart.retrieve)": [[498, "pyart.retrieve.detect_ml"], [1074, "pyart.retrieve.detect_ml"]], "determine_medoids() (in module pyart.retrieve)": [[499, "pyart.retrieve.determine_medoids"], [1075, "pyart.retrieve.determine_medoids"]], "est_rain_rate_a() (in module pyart.retrieve)": [[500, "pyart.retrieve.est_rain_rate_a"], [1076, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[501, "pyart.retrieve.est_rain_rate_hydro"], [1077, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[502, "pyart.retrieve.est_rain_rate_kdp"], [1078, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[503, "pyart.retrieve.est_rain_rate_z"], [1079, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[504, "pyart.retrieve.est_rain_rate_za"], [1080, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[505, "pyart.retrieve.est_rain_rate_zkdp"], [1081, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[506, "pyart.retrieve.est_rain_rate_zpoly"], [1082, "pyart.retrieve.est_rain_rate_zpoly"]], "est_vertical_windshear() (in module pyart.retrieve)": [[507, "pyart.retrieve.est_vertical_windshear"], [1083, "pyart.retrieve.est_vertical_windshear"]], "est_wind_profile() (in module pyart.retrieve)": [[508, "pyart.retrieve.est_wind_profile"], [1084, "pyart.retrieve.est_wind_profile"]], "est_wind_vel() (in module pyart.retrieve)": [[509, "pyart.retrieve.est_wind_vel"], [1085, "pyart.retrieve.est_wind_vel"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[510, "pyart.retrieve.fetch_radar_time_profile"], [1086, "pyart.retrieve.fetch_radar_time_profile"]], "gecsx() (in module pyart.retrieve)": [[511, "pyart.retrieve.gecsx"], [1087, "pyart.retrieve.gecsx"]], "get_coeff_attg() (in module pyart.retrieve)": [[512, "pyart.retrieve.get_coeff_attg"], [1088, "pyart.retrieve.get_coeff_attg"]], "get_freq_band() (in module pyart.retrieve)": [[513, "pyart.retrieve.get_freq_band"], [1089, "pyart.retrieve.get_freq_band"]], "get_iso0_val() (in module pyart.retrieve)": [[514, "pyart.retrieve.get_iso0_val"], [1090, "pyart.retrieve.get_iso0_val"]], "get_ml_rng_limits() (in module pyart.retrieve)": [[515, "pyart.retrieve.get_ml_rng_limits"], [1091, "pyart.retrieve.get_ml_rng_limits"]], "grid_displacement_pc() (in module pyart.retrieve)": [[516, "pyart.retrieve.grid_displacement_pc"], [1092, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[517, "pyart.retrieve.grid_shift"], [1093, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[518, "pyart.retrieve.hydroclass_semisupervised"], [1094, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_leastsquare_double_window() (in module pyart.retrieve)": [[519, "pyart.retrieve.kdp_leastsquare_double_window"], [1095, "pyart.retrieve.kdp_leastsquare_double_window"]], "kdp_leastsquare_single_window() (in module pyart.retrieve)": [[520, "pyart.retrieve.kdp_leastsquare_single_window"], [1096, "pyart.retrieve.kdp_leastsquare_single_window"]], "kdp_maesaka() (in module pyart.retrieve)": [[521, "pyart.retrieve.kdp_maesaka"], [1097, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[522, "pyart.retrieve.kdp_schneebeli"], [1098, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[523, "pyart.retrieve.kdp_vulpiani"], [1099, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[524, "pyart.retrieve.map_profile_to_gates"], [1100, "pyart.retrieve.map_profile_to_gates"]], "melting_layer_giangrande() (in module pyart.retrieve)": [[525, "pyart.retrieve.melting_layer_giangrande"], [1101, "pyart.retrieve.melting_layer_giangrande"]], "melting_layer_hydroclass() (in module pyart.retrieve)": [[526, "pyart.retrieve.melting_layer_hydroclass"], [1102, "pyart.retrieve.melting_layer_hydroclass"]], "melting_layer_mf() (in module pyart.retrieve)": [[527, "pyart.retrieve.melting_layer_mf"], [1103, "pyart.retrieve.melting_layer_mf"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[528, "pyart.retrieve.quasi_vertical_profile"], [1104, "pyart.retrieve.quasi_vertical_profile"]], "select_samples() (in module pyart.retrieve)": [[529, "pyart.retrieve.select_samples"], [1105, "pyart.retrieve.select_samples"]], "steiner_conv_strat() (in module pyart.retrieve)": [[530, "pyart.retrieve.steiner_conv_strat"], [1106, "pyart.retrieve.steiner_conv_strat"]], "synthetic_obs_distribution() (in module pyart.retrieve)": [[531, "pyart.retrieve.synthetic_obs_distribution"], [1107, "pyart.retrieve.synthetic_obs_distribution"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[532, "pyart.retrieve.texture_of_complex_phase"], [1108, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[533, "pyart.retrieve.vad_browning"], [1109, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[534, "pyart.retrieve.vad_michelson"], [1110, "pyart.retrieve.vad_michelson"]], "_debug_info() (in module pyart)": [[535, "pyart._debug_info"]], "module": [[536, "module-pyart.aux_io"], [578, "module-pyart.bridge"], [580, "module-pyart.config"], [592, "module-pyart.core"], [674, "module-pyart.correct"], [745, "module-pyart.exceptions"], [746, "module-pyart.filters"], [783, "module-pyart.graph"], [959, "module-pyart.io"], [982, "module-pyart.lazydict"], [1006, "module-pyart.map"], [1019, "module-pyart.retrieve"], [1111, "module-pyart.testing"], [1196, "module-pyart.util"]], "pyart.aux_io": [[536, "module-pyart.aux_io"]], "convert_data() (in module pyart.aux_io)": [[537, "pyart.aux_io.convert_data"]], "get_library() (in module pyart.aux_io)": [[538, "pyart.aux_io.get_library"]], "read_edge_netcdf() (in module pyart.aux_io)": [[547, "pyart.aux_io.read_edge_netcdf"]], "read_file_c() (in module pyart.aux_io)": [[548, "pyart.aux_io.read_file_c"]], "read_file_py() (in module pyart.aux_io)": [[549, "pyart.aux_io.read_file_py"]], "read_product_c() (in module pyart.aux_io)": [[563, "pyart.aux_io.read_product_c"]], "read_product_py() (in module pyart.aux_io)": [[564, "pyart.aux_io.read_product_py"]], "read_psr_cpi_header() (in module pyart.aux_io)": [[565, "pyart.aux_io.read_psr_cpi_header"]], "read_psr_header() (in module pyart.aux_io)": [[566, "pyart.aux_io.read_psr_header"]], "read_psr_spectra() (in module pyart.aux_io)": [[567, "pyart.aux_io.read_psr_spectra"]], "read_sinarame_h5() (in module pyart.aux_io)": [[572, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[576, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[578, "module-pyart.bridge"]], "pyart.config": [[580, "module-pyart.config"]], "pyart.core": [[592, "module-pyart.core"]], "pyart.correct": [[674, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[675, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[676, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[677, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[678, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[679, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[680, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[681, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[682, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[683, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[684, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[685, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[686, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[687, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[688, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[689, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[690, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[691, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[692, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[693, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[694, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[695, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[696, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[697, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[698, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[699, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[700, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[701, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[702, "pyart.correct.GateFilter.include_valid"]], "gauss_fit() (in module pyart.correct)": [[723, "pyart.correct.gauss_fit"]], "moment_based_gate_filter() (in module pyart.correct)": [[728, "pyart.correct.moment_based_gate_filter"]], "retrieval_result() (in module pyart.correct)": [[732, "pyart.correct.retrieval_result"]], "pyart.exceptions": [[745, "module-pyart.exceptions"]], "pyart.filters": [[746, "module-pyart.filters"]], "pyart.graph": [[783, "module-pyart.graph"]], "plot_convstrat_scheme() (in module pyart.graph)": [[958, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[959, "module-pyart.io"]], "pyart.lazydict": [[982, "module-pyart.lazydict"]], "mutablemapping (class in pyart.lazydict)": [[996, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[997, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[998, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[999, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[1000, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[1001, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[1002, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[1003, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[1004, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[1005, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[1006, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[1007, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[1008, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[1009, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[1010, "pyart.map.GateMapper.time_tolerance"]], "get_earth_radius() (in module pyart.map)": [[1014, "pyart.map.get_earth_radius"]], "polar_to_cartesian() (in module pyart.map)": [[1018, "pyart.map.polar_to_cartesian"]], "pyart.retrieve": [[1019, "module-pyart.retrieve"]], "composite_reflectivity() (in module pyart.retrieve)": [[1023, "pyart.retrieve.composite_reflectivity"]], "pyart.testing": [[1111, "module-pyart.testing"]], "grid (class in pyart.testing)": [[1112, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[1113, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[1114, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[1115, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[1116, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[1117, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[1118, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[1119, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[1120, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[1121, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[1122, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[1123, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[1124, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[1125, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[1126, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[1127, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[1128, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[1129, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[1130, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[1131, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[1132, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[1133, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[1134, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[1135, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[1136, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[1137, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[1138, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[1139, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[1140, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[1141, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[1142, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[1143, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[1144, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[1145, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[1146, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[1147, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[1148, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[1149, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[1150, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[1151, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[1152, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[1153, "pyart.testing.RadarSpectra"]], "add_field() (pyart.testing.radarspectra method)": [[1154, "pyart.testing.RadarSpectra.add_field"]], "add_field_like() (pyart.testing.radarspectra method)": [[1155, "pyart.testing.RadarSpectra.add_field_like"]], "add_filter() (pyart.testing.radarspectra method)": [[1156, "pyart.testing.RadarSpectra.add_filter"]], "check_field_exists() (pyart.testing.radarspectra method)": [[1157, "pyart.testing.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.testing.radarspectra method)": [[1158, "pyart.testing.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.testing.radarspectra method)": [[1159, "pyart.testing.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.testing.radarspectra method)": [[1160, "pyart.testing.RadarSpectra.get_elevation"]], "get_end() (pyart.testing.radarspectra method)": [[1161, "pyart.testing.RadarSpectra.get_end"]], "get_field() (pyart.testing.radarspectra method)": [[1162, "pyart.testing.RadarSpectra.get_field"]], "get_gate_area() (pyart.testing.radarspectra method)": [[1163, "pyart.testing.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radarspectra method)": [[1164, "pyart.testing.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radarspectra method)": [[1165, "pyart.testing.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radarspectra method)": [[1166, "pyart.testing.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.testing.radarspectra method)": [[1167, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[1168, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[1169, "pyart.testing.RadarSpectra.get_start_end"]], "info() (pyart.testing.radarspectra method)": [[1170, "pyart.testing.RadarSpectra.info"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[1171, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[1172, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[1173, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[1174, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[1175, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[1176, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[1177, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[1178, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[1179, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[1180, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[1181, "pyart.testing.RadarSpectra.iter_start_end"]], "get_metadata() (in module pyart.testing)": [[1182, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[1183, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[1184, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[1185, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[1186, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[1187, "pyart.testing.make_empty_spectra_radar"]], "make_normal_storm() (in module pyart.testing)": [[1188, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[1189, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[1190, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[1191, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[1192, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[1193, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[1194, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[1195, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[1196, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[1197, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[1198, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[1199, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[1200, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[1201, "pyart.util.angular_texture_2d"]], "colocated_gates() (in module pyart.util)": [[1202, "pyart.util.colocated_gates"]], "colocated_gates2() (in module pyart.util)": [[1203, "pyart.util.colocated_gates2"]], "compute_azimuthal_average() (in module pyart.util)": [[1204, "pyart.util.compute_azimuthal_average"]], "compute_corr() (in module pyart.util)": [[1205, "pyart.util.compute_corr"]], "compute_directional_stats() (in module pyart.util)": [[1206, "pyart.util.compute_directional_stats"]], "compute_mse() (in module pyart.util)": [[1207, "pyart.util.compute_mse"]], "compute_nse() (in module pyart.util)": [[1208, "pyart.util.compute_nse"]], "cross_section_ppi() (in module pyart.util)": [[1209, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[1210, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[1211, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[1212, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[1213, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[1214, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[1215, "pyart.util.datetimes_from_radar"]], "estimate_noise_hs74() (in module pyart.util)": [[1216, "pyart.util.estimate_noise_hs74"]], "estimate_noise_ivic13() (in module pyart.util)": [[1217, "pyart.util.estimate_noise_ivic13"]], "find_neighbour_gates() (in module pyart.util)": [[1218, "pyart.util.find_neighbour_gates"]], "for_azimuth() (in module pyart.util)": [[1219, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[1220, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[1221, "pyart.util.get_field_location"]], "get_ivic_flat_reg_var_max() (in module pyart.util)": [[1222, "pyart.util.get_ivic_flat_reg_var_max"]], "get_ivic_pct() (in module pyart.util)": [[1223, "pyart.util.get_ivic_pct"]], "get_ivic_snr_thr() (in module pyart.util)": [[1224, "pyart.util.get_ivic_snr_thr"]], "get_target_elevations() (in module pyart.util)": [[1225, "pyart.util.get_target_elevations"]], "grid_texture_2d() (in module pyart.util)": [[1226, "pyart.util.grid_texture_2d"]], "image_mute_radar() (in module pyart.util)": [[1227, "pyart.util.image_mute_radar"]], "interpol_spectra() (in module pyart.util)": [[1228, "pyart.util.interpol_spectra"]], "intersection() (in module pyart.util)": [[1229, "pyart.util.intersection"]], "interval_mean() (in module pyart.util)": [[1230, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[1231, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[1232, "pyart.util.is_vpt"]], "ivic_flat_reg_var_max_table() (in module pyart.util)": [[1233, "pyart.util.ivic_flat_reg_var_max_table"]], "ivic_flat_reg_wind_len_table() (in module pyart.util)": [[1234, "pyart.util.ivic_flat_reg_wind_len_table"]], "ivic_pct_table() (in module pyart.util)": [[1235, "pyart.util.ivic_pct_table"]], "ivic_snr_thr_table() (in module pyart.util)": [[1236, "pyart.util.ivic_snr_thr_table"]], "join_radar() (in module pyart.util)": [[1237, "pyart.util.join_radar"]], "join_spectra() (in module pyart.util)": [[1238, "pyart.util.join_spectra"]], "ma_broadcast_to() (in module pyart.util)": [[1239, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[1240, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[1241, "pyart.util.mean_of_two_angles_deg"]], "radar_from_spectra() (in module pyart.util)": [[1242, "pyart.util.radar_from_spectra"]], "rolling_window() (in module pyart.util)": [[1243, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[1244, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[1245, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[1246, "pyart.util.subset_radar"]], "subset_radar_spectra() (in module pyart.util)": [[1247, "pyart.util.subset_radar_spectra"]], "texture() (in module pyart.util)": [[1248, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[1249, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[1250, "pyart.util.to_vpt"]]}})