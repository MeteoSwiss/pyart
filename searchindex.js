Search.setIndex({"docnames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/generated/pyart.aux_io.read_bin", "API/generated/generated/pyart.aux_io.read_bin_mf", "API/generated/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/generated/pyart.aux_io.read_cf1", "API/generated/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/generated/pyart.aux_io.read_dat_mf", "API/generated/generated/pyart.aux_io.read_gamic", "API/generated/generated/pyart.aux_io.read_gif", "API/generated/generated/pyart.aux_io.read_grib", "API/generated/generated/pyart.aux_io.read_hpl", "API/generated/generated/pyart.aux_io.read_iq", "API/generated/generated/pyart.aux_io.read_kazr", "API/generated/generated/pyart.aux_io.read_metranet", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/generated/pyart.aux_io.read_odim_h5", "API/generated/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/generated/pyart.aux_io.read_pattern", "API/generated/generated/pyart.aux_io.read_png", "API/generated/generated/pyart.aux_io.read_radx", "API/generated/generated/pyart.aux_io.read_rainbow_psr", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/generated/pyart.aux_io.read_skyecho", "API/generated/generated/pyart.aux_io.read_spectra", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/generated/pyart.aux_io.write_odim_h5", "API/generated/generated/pyart.aux_io.write_spectra", "API/generated/generated/pyart.bridge.texture_of_complex_phase", "API/generated/generated/pyart.config.FileMetadata", "API/generated/generated/pyart.config.FileMetadata.__call__", "API/generated/generated/pyart.config.FileMetadata.get_field_name", "API/generated/generated/pyart.config.FileMetadata.get_metadata", "API/generated/generated/pyart.config.get_field_colormap", "API/generated/generated/pyart.config.get_field_limits", "API/generated/generated/pyart.config.get_field_mapping", "API/generated/generated/pyart.config.get_field_name", "API/generated/generated/pyart.config.get_fillvalue", "API/generated/generated/pyart.config.get_metadata", "API/generated/generated/pyart.config.load_config", "API/generated/generated/pyart.core.Grid", "API/generated/generated/pyart.core.Grid.add_field", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.get_projparams", "API/generated/generated/pyart.core.Grid.init_point_altitude", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/generated/pyart.core.Grid.projection_proj", "API/generated/generated/pyart.core.Grid.to_xarray", "API/generated/generated/pyart.core.Grid.write", "API/generated/generated/pyart.core.HorizontalWindProfile", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/generated/pyart.core.Radar", "API/generated/generated/pyart.core.Radar.add_field", "API/generated/generated/pyart.core.Radar.add_field_like", "API/generated/generated/pyart.core.Radar.add_filter", "API/generated/generated/pyart.core.Radar.check_field_exists", "API/generated/generated/pyart.core.Radar.extract_sweeps", "API/generated/generated/pyart.core.Radar.get_azimuth", "API/generated/generated/pyart.core.Radar.get_elevation", "API/generated/generated/pyart.core.Radar.get_end", "API/generated/generated/pyart.core.Radar.get_field", "API/generated/generated/pyart.core.Radar.get_gate_area", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/generated/pyart.core.Radar.get_slice", "API/generated/generated/pyart.core.Radar.get_start", "API/generated/generated/pyart.core.Radar.get_start_end", "API/generated/generated/pyart.core.Radar.info", "API/generated/generated/pyart.core.Radar.init_gate_altitude", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/generated/pyart.core.Radar.iter_azimuth", "API/generated/generated/pyart.core.Radar.iter_elevation", "API/generated/generated/pyart.core.Radar.iter_end", "API/generated/generated/pyart.core.Radar.iter_field", "API/generated/generated/pyart.core.Radar.iter_slice", "API/generated/generated/pyart.core.Radar.iter_start", "API/generated/generated/pyart.core.Radar.iter_start_end", "API/generated/generated/pyart.core.RadarSpectra", "API/generated/generated/pyart.core.RadarSpectra.add_field", "API/generated/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/generated/pyart.core.RadarSpectra.add_filter", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/generated/pyart.core.RadarSpectra.get_end", "API/generated/generated/pyart.core.RadarSpectra.get_field", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/generated/pyart.core.RadarSpectra.get_slice", "API/generated/generated/pyart.core.RadarSpectra.get_start", "API/generated/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/generated/pyart.core.RadarSpectra.info", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/generated/pyart.core.RadarSpectra.iter_end", "API/generated/generated/pyart.core.RadarSpectra.iter_field", "API/generated/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/generated/pyart.core.RadarSpectra.iter_start", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/generated/pyart.core.antenna_to_cartesian", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/generated/pyart.core.cartesian_to_antenna", "API/generated/generated/pyart.core.cartesian_to_geographic", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/generated/pyart.core.geographic_to_cartesian", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/generated/pyart.correct.calculate_attenuation", "API/generated/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/generated/pyart.correct.compute_apparent_vpr", "API/generated/generated/pyart.correct.compute_theoretical_vpr", "API/generated/generated/pyart.correct.correct_bias", "API/generated/generated/pyart.correct.correct_noise_rhohv", "API/generated/generated/pyart.correct.correct_sys_phase", "API/generated/generated/pyart.correct.correct_visibility", "API/generated/generated/pyart.correct.correct_vpr", "API/generated/generated/pyart.correct.correct_vpr_spatialised", "API/generated/generated/pyart.correct.dealias_fourdd", "API/generated/generated/pyart.correct.dealias_region_based", "API/generated/generated/pyart.correct.dealias_unwrap_phase", "API/generated/generated/pyart.correct.despeckle_field", "API/generated/generated/pyart.correct.det_sys_phase_ray", "API/generated/generated/pyart.correct.est_rhohv_rain", "API/generated/generated/pyart.correct.est_zdr_precip", "API/generated/generated/pyart.correct.est_zdr_snow", "API/generated/generated/pyart.correct.find_objects", "API/generated/generated/pyart.correct.get_mask_fzl", "API/generated/generated/pyart.correct.get_sun_hits", "API/generated/generated/pyart.correct.get_sun_hits_ivic", "API/generated/generated/pyart.correct.get_sun_hits_psr", "API/generated/generated/pyart.correct.phase_proc_lp", "API/generated/generated/pyart.correct.phase_proc_lp_gf", "API/generated/generated/pyart.correct.ptoa_to_sf", "API/generated/generated/pyart.correct.scanning_losses", "API/generated/generated/pyart.correct.selfconsistency_bias", "API/generated/generated/pyart.correct.selfconsistency_bias2", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/generated/pyart.correct.smooth_masked", "API/generated/generated/pyart.correct.smooth_phidp_double_window", "API/generated/generated/pyart.correct.smooth_phidp_single_window", "API/generated/generated/pyart.correct.solar_flux_lookup", "API/generated/generated/pyart.correct.sun_position_mfr", "API/generated/generated/pyart.correct.sun_position_pysolar", "API/generated/generated/pyart.correct.sun_power", "API/generated/generated/pyart.correct.sun_retrieval", "API/generated/generated/pyart.exceptions.DeprecatedAttribute", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName", "API/generated/generated/pyart.exceptions.MissingOptionalDependency", "API/generated/generated/pyart.exceptions._deprecated_alias", "API/generated/generated/pyart.filters.GateFilter", "API/generated/generated/pyart.filters.GateFilter.copy", "API/generated/generated/pyart.filters.GateFilter.exclude_above", "API/generated/generated/pyart.filters.GateFilter.exclude_all", "API/generated/generated/pyart.filters.GateFilter.exclude_below", "API/generated/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/generated/pyart.filters.GateFilter.exclude_none", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/generated/pyart.filters.GateFilter.gate_included", "API/generated/generated/pyart.filters.GateFilter.include_above", "API/generated/generated/pyart.filters.GateFilter.include_all", "API/generated/generated/pyart.filters.GateFilter.include_below", "API/generated/generated/pyart.filters.GateFilter.include_equal", "API/generated/generated/pyart.filters.GateFilter.include_gates", "API/generated/generated/pyart.filters.GateFilter.include_inside", "API/generated/generated/pyart.filters.GateFilter.include_none", "API/generated/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/generated/pyart.filters.GateFilter.include_outside", "API/generated/generated/pyart.filters.GateFilter.include_valid", "API/generated/generated/pyart.filters.birds_gate_filter", "API/generated/generated/pyart.filters.class_based_gate_filter", "API/generated/generated/pyart.filters.iso0_based_gate_filter", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/generated/pyart.filters.moment_based_gate_filter", "API/generated/generated/pyart.filters.snr_based_gate_filter", "API/generated/generated/pyart.filters.temp_based_gate_filter", "API/generated/generated/pyart.filters.visibility_based_gate_filter", "API/generated/generated/pyart.graph.AirborneRadarDisplay", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/generated/pyart.graph.GridMapDisplay", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/generated/pyart.graph.RadarDisplay", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarDisplay.plot", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplay", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/generated/pyart.io.make_time_unit_str", "API/generated/generated/pyart.io.prepare_for_read", "API/generated/generated/pyart.io.read", "API/generated/generated/pyart.io.read_arm_sonde", "API/generated/generated/pyart.io.read_arm_sonde_vap", "API/generated/generated/pyart.io.read_cfradial", "API/generated/generated/pyart.io.read_cfradial2", "API/generated/generated/pyart.io.read_chl", "API/generated/generated/pyart.io.read_grid", "API/generated/generated/pyart.io.read_grid_mdv", "API/generated/generated/pyart.io.read_mdv", "API/generated/generated/pyart.io.read_nexrad_archive", "API/generated/generated/pyart.io.read_nexrad_cdm", "API/generated/generated/pyart.io.read_nexrad_level3", "API/generated/generated/pyart.io.read_rsl", "API/generated/generated/pyart.io.read_sigmet", "API/generated/generated/pyart.io.read_uf", "API/generated/generated/pyart.io.write_cfradial", "API/generated/generated/pyart.io.write_grid", "API/generated/generated/pyart.io.write_grid_geotiff", "API/generated/generated/pyart.io.write_grid_mdv", "API/generated/generated/pyart.io.write_uf", "API/generated/generated/pyart.lazydict.LazyLoadDict", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/generated/pyart.map.example_roi_func_constant", "API/generated/generated/pyart.map.example_roi_func_dist", "API/generated/generated/pyart.map.example_roi_func_dist_beam", "API/generated/generated/pyart.map.grid_from_radars", "API/generated/generated/pyart.map.map_gates_to_grid", "API/generated/generated/pyart.map.map_to_grid", "API/generated/generated/pyart.retrieve._destandardize", "API/generated/generated/pyart.retrieve._get_res_vol_sides", "API/generated/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/generated/pyart.retrieve.compute_Doppler_width", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/generated/pyart.retrieve.compute_apparent_profile", "API/generated/generated/pyart.retrieve.compute_bird_density", "API/generated/generated/pyart.retrieve.compute_ccor", "API/generated/generated/pyart.retrieve.compute_cdr", "API/generated/generated/pyart.retrieve.compute_centroids", "API/generated/generated/pyart.retrieve.compute_differential_phase", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_evp", "API/generated/generated/pyart.retrieve.compute_iq", "API/generated/generated/pyart.retrieve.compute_l", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/generated/pyart.retrieve.compute_noise_power", "API/generated/generated/pyart.retrieve.compute_noisedBZ", "API/generated/generated/pyart.retrieve.compute_pol_variables", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/generated/pyart.retrieve.compute_qvp", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/generated/pyart.retrieve.compute_rcs", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/generated/pyart.retrieve.compute_reflectivity", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_rhohv", "API/generated/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/generated/pyart.retrieve.compute_rqvp", "API/generated/generated/pyart.retrieve.compute_signal_power", "API/generated/generated/pyart.retrieve.compute_snr", "API/generated/generated/pyart.retrieve.compute_spectra", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_noise", "API/generated/generated/pyart.retrieve.compute_spectral_phase", "API/generated/generated/pyart.retrieve.compute_spectral_power", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/generated/pyart.retrieve.compute_st1_iq", "API/generated/generated/pyart.retrieve.compute_st2_iq", "API/generated/generated/pyart.retrieve.compute_svp", "API/generated/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/generated/pyart.retrieve.compute_vol_refl", "API/generated/generated/pyart.retrieve.compute_vp", "API/generated/generated/pyart.retrieve.compute_wbn_iq", "API/generated/generated/pyart.retrieve.conv_strat_yuter", "API/generated/generated/pyart.retrieve.data_for_centroids", "API/generated/generated/pyart.retrieve.dealias_spectra", "API/generated/generated/pyart.retrieve.detect_ml", "API/generated/generated/pyart.retrieve.determine_medoids", "API/generated/generated/pyart.retrieve.est_rain_rate_a", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/generated/pyart.retrieve.est_rain_rate_z", "API/generated/generated/pyart.retrieve.est_rain_rate_za", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/generated/pyart.retrieve.est_vertical_windshear", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/generated/pyart.retrieve.est_wind_profile", "API/generated/generated/pyart.retrieve.est_wind_vel", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/generated/pyart.retrieve.gecsx", "API/generated/generated/pyart.retrieve.get_coeff_attg", "API/generated/generated/pyart.retrieve.get_freq_band", "API/generated/generated/pyart.retrieve.get_iso0_val", "API/generated/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/generated/pyart.retrieve.grid_displacement_pc", "API/generated/generated/pyart.retrieve.grid_shift", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/generated/pyart.retrieve.kdp_maesaka", "API/generated/generated/pyart.retrieve.kdp_schneebeli", "API/generated/generated/pyart.retrieve.kdp_vulpiani", "API/generated/generated/pyart.retrieve.map_profile_to_gates", "API/generated/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/generated/pyart.retrieve.melting_layer_mf", "API/generated/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/generated/pyart.retrieve.select_samples", "API/generated/generated/pyart.retrieve.steiner_conv_strat", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/generated/pyart.retrieve.vad_browning", "API/generated/generated/pyart.retrieve.vad_michelson", "API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.convert_data", "API/generated/pyart.aux_io.extract_sweeps_skyecho", "API/generated/pyart.aux_io.get_library", "API/generated/pyart.aux_io.get_sweep_time_coverage", "API/generated/pyart.aux_io.read_bin", "API/generated/pyart.aux_io.read_bin_mf", "API/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/pyart.aux_io.read_cf1", "API/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_dat_mf", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_file_c", "API/generated/pyart.aux_io.read_file_py", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_gif", "API/generated/pyart.aux_io.read_grib", "API/generated/pyart.aux_io.read_hpl", "API/generated/pyart.aux_io.read_iq", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_knmi_grid_h5", "API/generated/pyart.aux_io.read_mch_vad", "API/generated/pyart.aux_io.read_metranet", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_png", "API/generated/pyart.aux_io.read_product_c", "API/generated/pyart.aux_io.read_product_py", "API/generated/pyart.aux_io.read_psr_cpi_header", "API/generated/pyart.aux_io.read_psr_header", "API/generated/pyart.aux_io.read_psr_spectra", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_rainbow_psr", "API/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.read_skyecho", "API/generated/pyart.aux_io.read_spectra", "API/generated/pyart.aux_io.read_swissbirdradar_spectra", "API/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/pyart.aux_io.write_odim_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.aux_io.write_spectra", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_KE", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.add_field", "API/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/pyart.core.RadarSpectra.add_filter", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_field", "API/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.info", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.compute_apparent_vpr", "API/generated/pyart.correct.compute_theoretical_vpr", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.correct_sys_phase", "API/generated/pyart.correct.correct_visibility", "API/generated/pyart.correct.correct_vpr", "API/generated/pyart.correct.correct_vpr_spatialised", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.det_sys_phase_ray", "API/generated/pyart.correct.est_rhohv_rain", "API/generated/pyart.correct.est_zdr_precip", "API/generated/pyart.correct.est_zdr_snow", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.gauss_fit", "API/generated/pyart.correct.get_mask_fzl", "API/generated/pyart.correct.get_sun_hits", "API/generated/pyart.correct.get_sun_hits_ivic", "API/generated/pyart.correct.get_sun_hits_psr", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.ptoa_to_sf", "API/generated/pyart.correct.retrieval_result", "API/generated/pyart.correct.scanning_losses", "API/generated/pyart.correct.selfconsistency_bias", "API/generated/pyart.correct.selfconsistency_bias2", "API/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/pyart.correct.smooth_masked", "API/generated/pyart.correct.smooth_phidp_double_window", "API/generated/pyart.correct.smooth_phidp_single_window", "API/generated/pyart.correct.solar_flux_lookup", "API/generated/pyart.correct.sun_position_mfr", "API/generated/pyart.correct.sun_position_pysolar", "API/generated/pyart.correct.sun_power", "API/generated/pyart.correct.sun_retrieval", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.birds_gate_filter", "API/generated/pyart.filters.class_based_gate_filter", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.snr_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.filters.visibility_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.make_time_unit_str", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_cfradial2", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.get_earth_radius", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.map.polar_to_cartesian", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/pyart.retrieve.compute_Doppler_width", "API/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/pyart.retrieve.compute_apparent_profile", "API/generated/pyart.retrieve.compute_bird_density", "API/generated/pyart.retrieve.compute_ccor", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_centroids", "API/generated/pyart.retrieve.compute_differential_phase", "API/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_iq", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/pyart.retrieve.compute_noise_power", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_pol_variables", "API/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/pyart.retrieve.compute_rcs", "API/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/pyart.retrieve.compute_reflectivity", "API/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/pyart.retrieve.compute_rhohv", "API/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_signal_power", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_spectra", "API/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/pyart.retrieve.compute_spectral_noise", "API/generated/pyart.retrieve.compute_spectral_phase", "API/generated/pyart.retrieve.compute_spectral_power", "API/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/pyart.retrieve.compute_st1_iq", "API/generated/pyart.retrieve.compute_st2_iq", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vol_refl", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.compute_wbn_iq", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.data_for_centroids", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.detect_ml", "API/generated/pyart.retrieve.determine_medoids", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.est_vertical_windshear", "API/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/pyart.retrieve.est_wind_profile", "API/generated/pyart.retrieve.est_wind_vel", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.gecsx", "API/generated/pyart.retrieve.get_coeff_attg", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.get_iso0_val", "API/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/pyart.retrieve.melting_layer_mf", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.select_samples", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.add_field", "API/generated/pyart.testing.RadarSpectra.add_field_like", "API/generated/pyart.testing.RadarSpectra.add_filter", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.extract_sweeps", "API/generated/pyart.testing.RadarSpectra.get_azimuth", "API/generated/pyart.testing.RadarSpectra.get_elevation", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_field", "API/generated/pyart.testing.RadarSpectra.get_gate_area", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.info", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.colocated_gates", "API/generated/pyart.util.colocated_gates2", "API/generated/pyart.util.compute_azimuthal_average", "API/generated/pyart.util.compute_corr", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.compute_mse", "API/generated/pyart.util.compute_nse", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.estimate_noise_ivic13", "API/generated/pyart.util.find_neighbour_gates", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/pyart.util.get_ivic_pct", "API/generated/pyart.util.get_ivic_snr_thr", "API/generated/pyart.util.get_target_elevations", "API/generated/pyart.util.grid_texture_2d", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interpol_spectra", "API/generated/pyart.util.intersection", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/pyart.util.ivic_pct_table", "API/generated/pyart.util.ivic_snr_thr_table", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.join_spectra", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.radar_from_spectra", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.subset_radar_spectra", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "changelog", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/read_mch_metranet_data", "notebooks/swiss_doppler", "notebooks/swiss_thunderstorm", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/generated/pyart.aux_io.read_bin.rst", "API/generated/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/generated/pyart.aux_io.read_cf1.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/generated/pyart.aux_io.read_gamic.rst", "API/generated/generated/pyart.aux_io.read_gif.rst", "API/generated/generated/pyart.aux_io.read_grib.rst", "API/generated/generated/pyart.aux_io.read_hpl.rst", "API/generated/generated/pyart.aux_io.read_iq.rst", "API/generated/generated/pyart.aux_io.read_kazr.rst", "API/generated/generated/pyart.aux_io.read_metranet.rst", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/generated/pyart.aux_io.read_pattern.rst", "API/generated/generated/pyart.aux_io.read_png.rst", "API/generated/generated/pyart.aux_io.read_radx.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/generated/pyart.aux_io.read_skyecho.rst", "API/generated/generated/pyart.aux_io.read_spectra.rst", "API/generated/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/generated/pyart.aux_io.write_spectra.rst", "API/generated/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/generated/pyart.config.FileMetadata.rst", "API/generated/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/generated/pyart.config.get_field_colormap.rst", "API/generated/generated/pyart.config.get_field_limits.rst", "API/generated/generated/pyart.config.get_field_mapping.rst", "API/generated/generated/pyart.config.get_field_name.rst", "API/generated/generated/pyart.config.get_fillvalue.rst", "API/generated/generated/pyart.config.get_metadata.rst", "API/generated/generated/pyart.config.load_config.rst", "API/generated/generated/pyart.core.Grid.rst", "API/generated/generated/pyart.core.Grid.add_field.rst", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.get_projparams.rst", "API/generated/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/generated/pyart.core.Grid.projection_proj.rst", "API/generated/generated/pyart.core.Grid.to_xarray.rst", "API/generated/generated/pyart.core.Grid.write.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/generated/pyart.core.Radar.rst", "API/generated/generated/pyart.core.Radar.add_field.rst", "API/generated/generated/pyart.core.Radar.add_field_like.rst", "API/generated/generated/pyart.core.Radar.add_filter.rst", "API/generated/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/generated/pyart.core.Radar.get_elevation.rst", "API/generated/generated/pyart.core.Radar.get_end.rst", "API/generated/generated/pyart.core.Radar.get_field.rst", "API/generated/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/generated/pyart.core.Radar.get_slice.rst", "API/generated/generated/pyart.core.Radar.get_start.rst", "API/generated/generated/pyart.core.Radar.get_start_end.rst", "API/generated/generated/pyart.core.Radar.info.rst", "API/generated/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/generated/pyart.core.Radar.iter_end.rst", "API/generated/generated/pyart.core.Radar.iter_field.rst", "API/generated/generated/pyart.core.Radar.iter_slice.rst", "API/generated/generated/pyart.core.Radar.iter_start.rst", "API/generated/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.info.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/generated/pyart.correct.calculate_attenuation.rst", "API/generated/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/generated/pyart.correct.correct_bias.rst", "API/generated/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/generated/pyart.correct.correct_sys_phase.rst", "API/generated/generated/pyart.correct.correct_visibility.rst", "API/generated/generated/pyart.correct.correct_vpr.rst", "API/generated/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/generated/pyart.correct.dealias_fourdd.rst", "API/generated/generated/pyart.correct.dealias_region_based.rst", "API/generated/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/generated/pyart.correct.despeckle_field.rst", "API/generated/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/generated/pyart.correct.est_zdr_precip.rst", "API/generated/generated/pyart.correct.est_zdr_snow.rst", "API/generated/generated/pyart.correct.find_objects.rst", "API/generated/generated/pyart.correct.get_mask_fzl.rst", "API/generated/generated/pyart.correct.get_sun_hits.rst", "API/generated/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/generated/pyart.correct.phase_proc_lp.rst", "API/generated/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/generated/pyart.correct.scanning_losses.rst", "API/generated/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/generated/pyart.correct.smooth_masked.rst", "API/generated/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/generated/pyart.correct.sun_position_mfr.rst", "API/generated/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/generated/pyart.correct.sun_power.rst", "API/generated/generated/pyart.correct.sun_retrieval.rst", "API/generated/generated/pyart.exceptions.DeprecatedAttribute.rst", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName.rst", "API/generated/generated/pyart.exceptions.MissingOptionalDependency.rst", "API/generated/generated/pyart.exceptions._deprecated_alias.rst", "API/generated/generated/pyart.filters.GateFilter.rst", "API/generated/generated/pyart.filters.GateFilter.copy.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/generated/pyart.filters.birds_gate_filter.rst", "API/generated/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.GridMapDisplay.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.RadarDisplay.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/generated/pyart.io.make_time_unit_str.rst", "API/generated/generated/pyart.io.prepare_for_read.rst", "API/generated/generated/pyart.io.read.rst", "API/generated/generated/pyart.io.read_arm_sonde.rst", "API/generated/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/generated/pyart.io.read_cfradial.rst", "API/generated/generated/pyart.io.read_cfradial2.rst", "API/generated/generated/pyart.io.read_chl.rst", "API/generated/generated/pyart.io.read_grid.rst", "API/generated/generated/pyart.io.read_grid_mdv.rst", "API/generated/generated/pyart.io.read_mdv.rst", "API/generated/generated/pyart.io.read_nexrad_archive.rst", "API/generated/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/generated/pyart.io.read_nexrad_level3.rst", "API/generated/generated/pyart.io.read_rsl.rst", "API/generated/generated/pyart.io.read_sigmet.rst", "API/generated/generated/pyart.io.read_uf.rst", "API/generated/generated/pyart.io.write_cfradial.rst", "API/generated/generated/pyart.io.write_grid.rst", "API/generated/generated/pyart.io.write_grid_geotiff.rst", "API/generated/generated/pyart.io.write_grid_mdv.rst", "API/generated/generated/pyart.io.write_uf.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/generated/pyart.map.example_roi_func_constant.rst", "API/generated/generated/pyart.map.example_roi_func_dist.rst", "API/generated/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/generated/pyart.map.grid_from_radars.rst", "API/generated/generated/pyart.map.map_gates_to_grid.rst", "API/generated/generated/pyart.map.map_to_grid.rst", "API/generated/generated/pyart.retrieve._destandardize.rst", "API/generated/generated/pyart.retrieve._get_res_vol_sides.rst", "API/generated/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/generated/pyart.retrieve.compute_ccor.rst", "API/generated/generated/pyart.retrieve.compute_cdr.rst", "API/generated/generated/pyart.retrieve.compute_centroids.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_evp.rst", "API/generated/generated/pyart.retrieve.compute_iq.rst", "API/generated/generated/pyart.retrieve.compute_l.rst", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/generated/pyart.retrieve.compute_qvp.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/generated/pyart.retrieve.compute_rcs.rst", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/generated/pyart.retrieve.compute_snr.rst", "API/generated/generated/pyart.retrieve.compute_spectra.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/generated/pyart.retrieve.compute_svp.rst", "API/generated/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/generated/pyart.retrieve.compute_vp.rst", "API/generated/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/generated/pyart.retrieve.detect_ml.rst", "API/generated/generated/pyart.retrieve.determine_medoids.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/generated/pyart.retrieve.gecsx.rst", "API/generated/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/generated/pyart.retrieve.get_freq_band.rst", "API/generated/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/generated/pyart.retrieve.grid_shift.rst", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/generated/pyart.retrieve.select_samples.rst", "API/generated/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/generated/pyart.retrieve.vad_browning.rst", "API/generated/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.convert_data.rst", "API/generated/pyart.aux_io.extract_sweeps_skyecho.rst", "API/generated/pyart.aux_io.get_library.rst", "API/generated/pyart.aux_io.get_sweep_time_coverage.rst", "API/generated/pyart.aux_io.read_bin.rst", "API/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/pyart.aux_io.read_cf1.rst", "API/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_file_c.rst", "API/generated/pyart.aux_io.read_file_py.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_gif.rst", "API/generated/pyart.aux_io.read_grib.rst", "API/generated/pyart.aux_io.read_hpl.rst", "API/generated/pyart.aux_io.read_iq.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_knmi_grid_h5.rst", "API/generated/pyart.aux_io.read_mch_vad.rst", "API/generated/pyart.aux_io.read_metranet.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_png.rst", "API/generated/pyart.aux_io.read_product_c.rst", "API/generated/pyart.aux_io.read_product_py.rst", "API/generated/pyart.aux_io.read_psr_cpi_header.rst", "API/generated/pyart.aux_io.read_psr_header.rst", "API/generated/pyart.aux_io.read_psr_spectra.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.read_skyecho.rst", "API/generated/pyart.aux_io.read_spectra.rst", "API/generated/pyart.aux_io.read_swissbirdradar_spectra.rst", "API/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.aux_io.write_spectra.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_KE.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.info.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.correct_sys_phase.rst", "API/generated/pyart.correct.correct_visibility.rst", "API/generated/pyart.correct.correct_vpr.rst", "API/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/pyart.correct.est_zdr_precip.rst", "API/generated/pyart.correct.est_zdr_snow.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.gauss_fit.rst", "API/generated/pyart.correct.get_mask_fzl.rst", "API/generated/pyart.correct.get_sun_hits.rst", "API/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/pyart.correct.retrieval_result.rst", "API/generated/pyart.correct.scanning_losses.rst", "API/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/pyart.correct.smooth_masked.rst", "API/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/pyart.correct.sun_position_mfr.rst", "API/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/pyart.correct.sun_power.rst", "API/generated/pyart.correct.sun_retrieval.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.birds_gate_filter.rst", "API/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.make_time_unit_str.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_cfradial2.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.get_earth_radius.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.map.polar_to_cartesian.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/pyart.retrieve.compute_ccor.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_centroids.rst", "API/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_iq.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/pyart.retrieve.compute_rcs.rst", "API/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_spectra.rst", "API/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.detect_ml.rst", "API/generated/pyart.retrieve.determine_medoids.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.gecsx.rst", "API/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.select_samples.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.add_field.rst", "API/generated/pyart.testing.RadarSpectra.add_field_like.rst", "API/generated/pyart.testing.RadarSpectra.add_filter.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.testing.RadarSpectra.get_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.get_elevation.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_field.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_area.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.info.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.colocated_gates.rst", "API/generated/pyart.util.colocated_gates2.rst", "API/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/pyart.util.compute_corr.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.compute_mse.rst", "API/generated/pyart.util.compute_nse.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/pyart.util.find_neighbour_gates.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/pyart.util.get_ivic_pct.rst", "API/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/pyart.util.get_target_elevations.rst", "API/generated/pyart.util.grid_texture_2d.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interpol_spectra.rst", "API/generated/pyart.util.intersection.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/pyart.util.ivic_pct_table.rst", "API/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.join_spectra.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.radar_from_spectra.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.subset_radar_spectra.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "changelog.md", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/read_mch_metranet_data.ipynb", "notebooks/swiss_doppler.ipynb", "notebooks/swiss_thunderstorm.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_spectra", "pyart.bridge.texture_of_complex_phase", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions.DeprecatedAttribute", "pyart.exceptions.DeprecatedFunctionName", "pyart.exceptions.MissingOptionalDependency", "pyart.exceptions._deprecated_alias", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.__contains__", "pyart.lazydict.LazyLoadDict.__delattr__", "pyart.lazydict.LazyLoadDict.__delitem__", "pyart.lazydict.LazyLoadDict.__dir__", "pyart.lazydict.LazyLoadDict.__eq__", "pyart.lazydict.LazyLoadDict.__format__", "pyart.lazydict.LazyLoadDict.__ge__", "pyart.lazydict.LazyLoadDict.__getattribute__", "pyart.lazydict.LazyLoadDict.__getitem__", "pyart.lazydict.LazyLoadDict.__getstate__", "pyart.lazydict.LazyLoadDict.__gt__", "pyart.lazydict.LazyLoadDict.__init__", "pyart.lazydict.LazyLoadDict.__init_subclass__", "pyart.lazydict.LazyLoadDict.__iter__", "pyart.lazydict.LazyLoadDict.__le__", "pyart.lazydict.LazyLoadDict.__len__", "pyart.lazydict.LazyLoadDict.__lt__", "pyart.lazydict.LazyLoadDict.__ne__", "pyart.lazydict.LazyLoadDict.__new__", "pyart.lazydict.LazyLoadDict.__reduce__", "pyart.lazydict.LazyLoadDict.__reduce_ex__", "pyart.lazydict.LazyLoadDict.__repr__", "pyart.lazydict.LazyLoadDict.__setattr__", "pyart.lazydict.LazyLoadDict.__setitem__", "pyart.lazydict.LazyLoadDict.__sizeof__", "pyart.lazydict.LazyLoadDict.__str__", "pyart.lazydict.LazyLoadDict.__subclasshook__", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve._destandardize", "pyart.retrieve._get_res_vol_sides", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart._debug_info", "pyart.aux_io", "pyart.aux_io.convert_data", "pyart.aux_io.extract_sweeps_skyecho", "pyart.aux_io.get_library", "pyart.aux_io.get_sweep_time_coverage", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_file_c", "pyart.aux_io.read_file_py", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_knmi_grid_h5", "pyart.aux_io.read_mch_vad", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_product_c", "pyart.aux_io.read_product_py", "pyart.aux_io.read_psr_cpi_header", "pyart.aux_io.read_psr_header", "pyart.aux_io.read_psr_spectra", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.read_skyecho", "pyart.aux_io.read_spectra", "pyart.aux_io.read_swissbirdradar_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_KE", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.gauss_fit", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.retrieval_result", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.get_earth_radius", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.map.polar_to_cartesian", "pyart.retrieve", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.dealias_spectra", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.add_field", "pyart.testing.RadarSpectra.add_field_like", "pyart.testing.RadarSpectra.add_filter", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.extract_sweeps", "pyart.testing.RadarSpectra.get_azimuth", "pyart.testing.RadarSpectra.get_elevation", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_field", "pyart.testing.RadarSpectra.get_gate_area", "pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "pyart.testing.RadarSpectra.get_gate_x_y_z", "pyart.testing.RadarSpectra.get_nyquist_vel", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.info", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Manual", "Changelog", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "About the MeteoSwiss fork of Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "Reading MeteoSwiss Metranet data with Py-ART", "Processing of Doppler wind data from a Swiss volumetric scan", "Filtering and retrievals on raw Swiss C-band data", "The Py-ART Radar object and indexing", "Computation times", "Installation", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"filenam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44, 54, 207, 243, 259, 274, 307, 333, 344, 370, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 604, 615, 799, 835, 851, 866, 899, 925, 936, 962, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1136, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1323], "basepath": [0, 544], "none": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 45, 55, 59, 62, 70, 71, 88, 91, 99, 100, 117, 118, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 164, 197, 198, 199, 200, 201, 202, 203, 204, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 429, 431, 439, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 538, 539, 540, 541, 544, 547, 548, 549, 550, 551, 552, 553, 554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 591, 593, 595, 599, 604, 606, 616, 620, 623, 631, 632, 649, 652, 660, 661, 678, 679, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 747, 748, 749, 751, 752, 757, 788, 789, 790, 791, 792, 793, 794, 795, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 856, 857, 858, 859, 860, 861, 862, 863, 864, 868, 871, 872, 873, 874, 875, 876, 877, 878, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 938, 941, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 953, 954, 955, 956, 957, 960, 961, 962, 964, 965, 966, 967, 968, 969, 970, 971, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 999, 1007, 1010, 1011, 1017, 1020, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1123, 1124, 1125, 1127, 1137, 1139, 1142, 1150, 1151, 1168, 1171, 1179, 1180, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1233, 1242, 1244, 1259, 1261, 1262, 1285, 1294, 1304, 1317, 1319, 1320, 1323], "sweep_dir": [0, 544], "dir_timeformat": [0, 544], "y": [0, 3, 9, 22, 45, 51, 53, 71, 79, 100, 108, 117, 118, 119, 120, 121, 122, 123, 124, 205, 207, 219, 222, 224, 227, 229, 232, 233, 234, 235, 236, 238, 249, 251, 255, 257, 267, 269, 271, 272, 274, 286, 289, 291, 294, 296, 299, 300, 301, 302, 304, 305, 307, 319, 322, 324, 327, 330, 332, 336, 337, 338, 339, 341, 342, 344, 356, 359, 361, 364, 367, 369, 373, 374, 375, 376, 378, 441, 442, 443, 444, 445, 446, 500, 522, 523, 536, 544, 548, 554, 572, 606, 612, 614, 632, 640, 661, 669, 678, 679, 680, 681, 682, 683, 684, 685, 797, 799, 811, 814, 816, 819, 821, 824, 825, 826, 827, 828, 830, 841, 843, 847, 849, 859, 861, 863, 864, 866, 878, 881, 883, 886, 888, 891, 892, 893, 894, 896, 897, 899, 911, 914, 916, 919, 922, 924, 928, 929, 930, 931, 933, 934, 936, 948, 951, 953, 956, 959, 961, 965, 966, 967, 968, 970, 1020, 1024, 1025, 1026, 1028, 1029, 1030, 1085, 1107, 1108, 1121, 1127, 1133, 1135, 1151, 1159, 1180, 1188, 1199, 1241, 1278, 1284, 1285, 1294, 1295, 1302, 1304, 1318], "m": [0, 3, 9, 14, 16, 22, 24, 25, 69, 72, 98, 101, 119, 125, 129, 130, 135, 136, 139, 146, 147, 152, 154, 155, 156, 160, 163, 197, 199, 203, 207, 274, 307, 344, 444, 456, 465, 470, 473, 475, 482, 495, 496, 498, 505, 517, 521, 522, 524, 527, 528, 531, 533, 534, 536, 544, 545, 548, 554, 562, 566, 572, 579, 580, 630, 633, 659, 662, 680, 686, 719, 720, 725, 726, 729, 737, 738, 744, 747, 748, 749, 753, 756, 788, 790, 794, 799, 866, 899, 936, 1028, 1031, 1041, 1050, 1055, 1058, 1060, 1067, 1080, 1081, 1083, 1090, 1102, 1106, 1107, 1109, 1112, 1113, 1116, 1118, 1119, 1121, 1149, 1152, 1178, 1181, 1217, 1218, 1232, 1233, 1242, 1244, 1261, 1262, 1274, 1286, 1295, 1304, 1306, 1309, 1317, 1318, 1319, 1322, 1323], "d": [0, 3, 9, 22, 128, 139, 207, 274, 307, 344, 401, 429, 431, 433, 434, 435, 436, 438, 439, 440, 482, 495, 503, 529, 540, 544, 548, 554, 572, 718, 729, 799, 866, 899, 936, 996, 997, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1067, 1080, 1088, 1114, 1125, 1302, 1323], "file_prefix": [0, 544], "sweep_start_tim": [0, 544], "sweep_end_tim": [0, 27, 544, 583], "field_nam": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36, 46, 60, 61, 63, 68, 84, 89, 90, 92, 97, 113, 131, 134, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 447, 465, 473, 482, 495, 496, 498, 544, 548, 550, 551, 552, 553, 554, 558, 560, 562, 563, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 583, 584, 585, 586, 587, 593, 595, 607, 621, 622, 624, 629, 645, 650, 651, 653, 658, 674, 721, 724, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 1031, 1050, 1058, 1067, 1080, 1081, 1083, 1128, 1140, 1141, 1143, 1148, 1164, 1169, 1170, 1172, 1177, 1193, 1219, 1261, 1262, 1278, 1315], "additional_metadata": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 34, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 544, 547, 548, 549, 550, 553, 554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 583, 584, 585, 593, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989], "file_field_nam": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 36, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 544, 550, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 593, 595, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 994], "fals": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 30, 31, 32, 34, 46, 47, 54, 60, 61, 62, 65, 66, 68, 70, 71, 72, 89, 90, 91, 94, 95, 97, 99, 100, 101, 118, 122, 125, 126, 135, 137, 138, 139, 150, 151, 154, 155, 164, 169, 171, 173, 175, 181, 182, 185, 187, 189, 194, 195, 207, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 264, 267, 269, 271, 274, 289, 291, 296, 299, 300, 301, 302, 307, 322, 324, 332, 333, 336, 337, 338, 339, 344, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 428, 432, 445, 446, 451, 460, 464, 471, 472, 474, 475, 477, 479, 480, 481, 486, 487, 490, 491, 492, 500, 503, 504, 506, 515, 524, 525, 526, 527, 528, 529, 531, 532, 544, 545, 550, 551, 552, 553, 556, 557, 558, 562, 563, 564, 566, 567, 568, 569, 570, 573, 574, 579, 580, 581, 582, 583, 584, 586, 587, 589, 593, 607, 608, 615, 621, 622, 623, 626, 627, 629, 631, 632, 633, 650, 651, 652, 655, 656, 658, 660, 661, 662, 679, 683, 686, 688, 690, 692, 694, 700, 701, 704, 706, 708, 713, 714, 716, 725, 727, 728, 729, 742, 743, 747, 748, 757, 760, 762, 764, 766, 772, 773, 776, 778, 780, 785, 786, 799, 814, 816, 821, 824, 825, 826, 827, 828, 831, 841, 843, 844, 845, 847, 849, 850, 856, 859, 861, 863, 866, 881, 883, 888, 891, 892, 893, 894, 899, 914, 916, 924, 925, 928, 929, 930, 931, 936, 951, 953, 961, 962, 965, 966, 967, 968, 971, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 1000, 1029, 1030, 1035, 1045, 1049, 1056, 1057, 1059, 1060, 1062, 1064, 1065, 1066, 1071, 1072, 1075, 1076, 1077, 1085, 1088, 1089, 1091, 1100, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1128, 1129, 1136, 1137, 1140, 1141, 1142, 1145, 1146, 1148, 1150, 1151, 1152, 1169, 1170, 1171, 1174, 1175, 1177, 1179, 1180, 1181, 1209, 1210, 1226, 1227, 1228, 1229, 1230, 1232, 1237, 1239, 1247, 1251, 1265, 1285, 1292, 1294, 1295, 1297, 1304, 1311, 1312, 1316, 1317, 1320, 1323], "exclude_field": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 544, 550, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 593, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 994], "include_field": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 62, 91, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 544, 550, 553, 558, 562, 563, 564, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 593, 623, 652, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 1142, 1171], "kwarg": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 137, 138, 139, 221, 222, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 264, 267, 268, 269, 270, 271, 288, 289, 296, 300, 301, 302, 321, 322, 329, 330, 331, 332, 333, 334, 337, 338, 339, 358, 359, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 420, 444, 445, 446, 527, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 562, 564, 566, 567, 568, 569, 570, 571, 572, 578, 579, 580, 581, 582, 583, 584, 727, 728, 729, 813, 814, 821, 825, 826, 827, 828, 840, 841, 843, 844, 845, 846, 847, 848, 849, 856, 859, 860, 861, 862, 863, 880, 881, 888, 892, 893, 894, 913, 914, 921, 922, 923, 924, 925, 926, 929, 930, 931, 950, 951, 958, 959, 960, 961, 962, 963, 966, 967, 968, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 989, 1028, 1029, 1030, 1112, 1226, 1227, 1228, 1229, 1230, 1318], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 105, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215, 219, 220, 221, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 329, 330, 331, 333, 334, 342, 366, 367, 368, 370, 371, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 410, 413, 415, 417, 425, 427, 430, 432, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 666, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 807, 811, 812, 813, 826, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 921, 922, 923, 925, 926, 934, 958, 959, 960, 962, 963, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 998, 1000, 1005, 1020, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1185, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1269, 1270, 1272, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323, 1325], "read": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 36, 169, 222, 233, 289, 300, 322, 337, 359, 374, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 593, 595, 688, 760, 814, 825, 881, 892, 914, 929, 951, 966, 974, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 994, 1267, 1269, 1270, 1272, 1273, 1276, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1289, 1291, 1294, 1295, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1315, 1316, 1320, 1321], "skyecho": [0, 1, 27, 544, 546, 583, 1267], "netcdf": [0, 1, 5, 6, 7, 8, 13, 15, 17, 21, 27, 28, 32, 54, 382, 383, 384, 385, 387, 391, 396, 397, 516, 544, 546, 550, 551, 552, 553, 555, 561, 563, 567, 571, 583, 584, 589, 615, 976, 977, 978, 979, 981, 985, 990, 991, 1101, 1136, 1226, 1229, 1267, 1309, 1310], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 44, 54, 59, 76, 88, 105, 126, 127, 128, 133, 137, 138, 139, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 197, 198, 199, 200, 201, 202, 203, 204, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 450, 452, 453, 454, 455, 461, 462, 463, 464, 468, 469, 471, 472, 478, 479, 480, 481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 502, 503, 517, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 538, 541, 542, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 593, 595, 598, 599, 600, 601, 604, 615, 620, 637, 649, 666, 716, 717, 718, 723, 727, 728, 729, 731, 732, 733, 734, 737, 741, 742, 743, 747, 748, 749, 751, 752, 788, 789, 790, 791, 792, 793, 794, 795, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1034, 1037, 1038, 1039, 1040, 1046, 1047, 1048, 1049, 1053, 1054, 1056, 1057, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1102, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1123, 1126, 1136, 1139, 1156, 1168, 1185, 1198, 1259, 1267, 1269, 1271, 1272, 1274, 1275, 1276, 1279, 1281, 1282, 1283, 1286, 1288, 1291, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1316, 1318, 1319, 1320, 1321, 1322, 1325], "creat": [0, 30, 31, 32, 45, 56, 59, 61, 64, 88, 90, 93, 137, 138, 139, 140, 168, 197, 198, 199, 200, 201, 202, 203, 204, 205, 221, 235, 239, 258, 272, 288, 301, 305, 321, 333, 338, 342, 358, 370, 375, 391, 396, 397, 398, 399, 400, 445, 446, 465, 473, 482, 495, 496, 498, 514, 534, 539, 540, 544, 586, 587, 589, 606, 617, 620, 622, 625, 649, 651, 654, 727, 728, 729, 730, 741, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 813, 827, 831, 850, 864, 880, 893, 897, 913, 925, 930, 934, 950, 962, 967, 985, 990, 991, 992, 993, 994, 1029, 1030, 1050, 1058, 1067, 1080, 1081, 1083, 1099, 1119, 1124, 1125, 1127, 1137, 1139, 1141, 1144, 1168, 1170, 1173, 1258, 1259, 1269, 1270, 1272, 1275, 1278, 1279, 1280, 1282, 1283, 1285, 1299, 1300, 1304, 1309, 1310, 1312, 1315, 1318, 1319, 1321, 1323], "new": [0, 44, 61, 62, 64, 90, 91, 93, 140, 173, 175, 182, 189, 194, 465, 473, 482, 495, 496, 498, 523, 534, 539, 544, 604, 622, 623, 625, 651, 652, 654, 692, 694, 701, 708, 713, 730, 764, 766, 773, 780, 785, 1050, 1058, 1067, 1080, 1081, 1083, 1108, 1119, 1124, 1141, 1142, 1144, 1170, 1171, 1173, 1219, 1242, 1257, 1261, 1262, 1278, 1302, 1305, 1309, 1312, 1313, 1323, 1325], "cf": [0, 5, 6, 7, 13, 23, 28, 32, 59, 88, 384, 385, 396, 397, 516, 544, 550, 551, 552, 561, 578, 584, 589, 620, 649, 978, 979, 990, 991, 1101, 1139, 1168, 1272, 1282, 1300, 1309, 1320, 1321], "radial": [0, 5, 6, 7, 13, 23, 28, 32, 59, 88, 137, 138, 384, 385, 396, 451, 474, 475, 514, 515, 527, 539, 540, 544, 550, 551, 552, 561, 578, 584, 589, 620, 649, 727, 728, 978, 979, 990, 1035, 1059, 1060, 1099, 1100, 1112, 1124, 1125, 1139, 1168, 1216, 1232, 1259, 1268, 1272, 1274, 1282, 1300, 1309, 1313, 1318, 1320, 1321], "singl": [0, 31, 44, 138, 139, 140, 145, 154, 227, 228, 230, 232, 294, 295, 297, 299, 327, 328, 334, 336, 364, 365, 371, 373, 398, 446, 544, 587, 604, 728, 729, 730, 735, 747, 819, 820, 822, 824, 886, 887, 889, 891, 919, 920, 926, 928, 956, 957, 963, 965, 992, 1030, 1204, 1265, 1272, 1274, 1277, 1278, 1281, 1302, 1317, 1318, 1321, 1323], "sweep": [0, 1, 27, 31, 39, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 114, 115, 116, 137, 138, 139, 142, 145, 147, 148, 182, 194, 197, 200, 201, 207, 209, 221, 222, 224, 229, 233, 234, 235, 236, 274, 276, 288, 289, 291, 296, 300, 301, 302, 307, 309, 321, 322, 324, 332, 333, 337, 338, 339, 344, 346, 358, 359, 361, 369, 370, 374, 375, 376, 390, 391, 392, 394, 451, 473, 495, 539, 544, 546, 583, 587, 599, 620, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 642, 643, 644, 645, 646, 647, 648, 649, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 671, 672, 673, 674, 675, 676, 677, 701, 713, 727, 728, 729, 732, 735, 738, 739, 741, 773, 785, 788, 791, 792, 799, 801, 813, 814, 816, 821, 825, 826, 827, 828, 866, 868, 880, 881, 883, 888, 892, 893, 894, 899, 901, 913, 914, 916, 924, 925, 929, 930, 931, 936, 938, 950, 951, 953, 961, 962, 966, 967, 968, 984, 985, 986, 988, 1020, 1031, 1035, 1058, 1080, 1124, 1139, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1200, 1201, 1224, 1225, 1267, 1270, 1274, 1278, 1294, 1295, 1297, 1302, 1304, 1306, 1313, 1316, 1317, 1318, 1319, 1320], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 76, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 105, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 599, 600, 603, 604, 606, 607, 608, 615, 616, 617, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 637, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 666, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 692, 694, 701, 708, 713, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 760, 764, 766, 773, 780, 785, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 1020, 1022, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1136, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1156, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1185, 1197, 1198, 1199, 1200, 1201, 1202, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1261, 1262, 1264, 1265, 1298, 1304, 1312, 1313, 1315, 1320, 1322, 1323], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 54, 59, 60, 61, 63, 68, 88, 89, 90, 92, 97, 120, 122, 123, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 168, 173, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 407, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 593, 595, 596, 599, 600, 604, 606, 607, 615, 620, 621, 622, 624, 629, 649, 650, 651, 653, 658, 681, 683, 684, 692, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 747, 748, 749, 750, 751, 752, 764, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 853, 854, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 897, 898, 899, 900, 901, 902, 903, 913, 914, 915, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 934, 935, 936, 937, 938, 939, 940, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1022, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1105, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1127, 1128, 1136, 1139, 1140, 1141, 1143, 1148, 1168, 1169, 1170, 1172, 1177, 1198, 1219, 1221, 1242, 1259, 1261, 1262, 1264], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 38, 39, 40, 41, 44, 45, 46, 59, 60, 61, 63, 68, 76, 88, 89, 90, 92, 97, 105, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 168, 173, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 403, 409, 424, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 542, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 591, 593, 595, 598, 599, 600, 601, 604, 606, 607, 620, 621, 622, 624, 629, 637, 649, 650, 651, 653, 658, 666, 692, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 747, 748, 749, 751, 752, 764, 788, 789, 790, 791, 792, 793, 794, 795, 814, 816, 821, 824, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 925, 928, 929, 930, 931, 951, 953, 961, 962, 965, 966, 967, 968, 975, 976, 977, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 992, 993, 994, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1105, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1127, 1128, 1139, 1140, 1141, 1143, 1148, 1156, 1168, 1169, 1170, 1172, 1177, 1185, 1198, 1211, 1217, 1218, 1219, 1242, 1259, 1264, 1267, 1274, 1312, 1317, 1319, 1320], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 45, 46, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 81, 82, 84, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 101, 110, 111, 113, 131, 132, 135, 136, 137, 138, 139, 143, 144, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 164, 173, 182, 194, 197, 205, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 267, 269, 271, 272, 289, 291, 296, 299, 300, 301, 302, 305, 322, 324, 332, 333, 336, 337, 338, 339, 342, 359, 361, 369, 370, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 444, 446, 447, 453, 455, 457, 460, 462, 464, 465, 466, 468, 469, 473, 479, 481, 482, 485, 488, 493, 494, 495, 496, 498, 499, 501, 502, 503, 513, 514, 516, 517, 520, 525, 526, 527, 528, 529, 531, 534, 535, 536, 537, 539, 540, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 599, 605, 606, 607, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 642, 643, 645, 649, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 671, 672, 674, 692, 701, 713, 721, 722, 725, 726, 727, 728, 729, 733, 734, 736, 737, 738, 739, 740, 745, 747, 748, 749, 750, 751, 752, 757, 764, 773, 785, 788, 797, 814, 816, 821, 824, 825, 826, 827, 828, 831, 841, 843, 844, 845, 847, 849, 850, 859, 861, 863, 864, 881, 883, 888, 891, 892, 893, 894, 897, 914, 916, 924, 925, 928, 929, 930, 931, 934, 951, 953, 961, 962, 965, 966, 967, 968, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 993, 994, 1019, 1020, 1028, 1030, 1031, 1036, 1038, 1040, 1042, 1045, 1047, 1049, 1050, 1051, 1053, 1054, 1058, 1064, 1066, 1067, 1070, 1073, 1078, 1079, 1080, 1081, 1083, 1084, 1086, 1087, 1088, 1098, 1099, 1101, 1102, 1105, 1110, 1111, 1112, 1113, 1114, 1116, 1119, 1120, 1121, 1122, 1124, 1125, 1127, 1128, 1139, 1140, 1141, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1161, 1162, 1164, 1168, 1169, 1170, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1190, 1191, 1193, 1198, 1204, 1217, 1218, 1242, 1261, 1262, 1265, 1267, 1269, 1270, 1272, 1273, 1276, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1297, 1299, 1301, 1302, 1304, 1306, 1309, 1310, 1311, 1312, 1313, 1320, 1321, 1323], "from": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 39, 40, 41, 44, 45, 48, 53, 56, 59, 61, 64, 68, 69, 70, 71, 88, 90, 93, 97, 98, 99, 100, 117, 118, 119, 121, 124, 125, 126, 127, 128, 132, 137, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 154, 155, 156, 164, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 222, 223, 224, 229, 232, 233, 234, 235, 236, 239, 247, 249, 251, 252, 253, 255, 257, 258, 264, 265, 267, 269, 271, 272, 289, 290, 291, 296, 299, 300, 301, 302, 305, 322, 323, 324, 330, 332, 333, 336, 337, 338, 339, 342, 359, 360, 361, 367, 369, 370, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 429, 437, 439, 441, 442, 443, 445, 446, 450, 451, 452, 453, 454, 455, 457, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 507, 508, 509, 510, 511, 514, 516, 517, 522, 523, 525, 526, 527, 529, 530, 531, 534, 536, 538, 539, 540, 541, 542, 544, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 598, 599, 600, 601, 604, 606, 609, 614, 617, 620, 622, 625, 629, 630, 631, 632, 649, 651, 654, 658, 659, 660, 661, 678, 679, 680, 682, 685, 686, 688, 692, 694, 701, 708, 713, 716, 717, 718, 722, 727, 728, 729, 732, 733, 737, 738, 739, 740, 741, 742, 743, 745, 747, 748, 749, 757, 759, 760, 764, 766, 773, 780, 785, 788, 789, 790, 791, 792, 793, 794, 795, 797, 814, 815, 816, 821, 824, 825, 826, 827, 828, 831, 839, 841, 843, 844, 845, 847, 849, 850, 856, 857, 859, 861, 863, 864, 881, 882, 883, 888, 891, 892, 893, 894, 897, 914, 915, 916, 922, 924, 925, 928, 929, 930, 931, 934, 951, 952, 953, 959, 961, 962, 965, 966, 967, 968, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 1005, 1007, 1010, 1017, 1019, 1022, 1024, 1025, 1026, 1029, 1030, 1031, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1099, 1101, 1102, 1107, 1108, 1110, 1111, 1112, 1114, 1115, 1116, 1119, 1121, 1123, 1124, 1125, 1127, 1130, 1135, 1139, 1141, 1144, 1148, 1149, 1150, 1151, 1168, 1170, 1173, 1177, 1178, 1179, 1180, 1204, 1216, 1224, 1225, 1231, 1234, 1235, 1236, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1257, 1259, 1267, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1288, 1291, 1297, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1315, 1316, 1317, 1319, 1320, 1321, 1323, 1325], "base": [0, 59, 64, 65, 66, 68, 69, 70, 71, 72, 88, 93, 94, 95, 97, 98, 99, 100, 101, 138, 139, 169, 197, 198, 199, 200, 201, 202, 203, 204, 235, 301, 338, 375, 398, 443, 445, 446, 455, 475, 482, 500, 503, 527, 544, 620, 625, 626, 627, 629, 630, 631, 632, 633, 649, 654, 655, 656, 658, 659, 660, 661, 662, 688, 728, 729, 741, 760, 788, 789, 790, 791, 792, 793, 794, 795, 827, 893, 930, 967, 992, 1026, 1029, 1030, 1040, 1060, 1067, 1085, 1088, 1112, 1139, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1168, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1232, 1242, 1268, 1271, 1272, 1274, 1309, 1313, 1316, 1319, 1320, 1321, 1323], "path": [0, 23, 127, 128, 139, 544, 578, 588, 717, 718, 729, 1137, 1198, 1274, 1275, 1309, 1319, 1322, 1323], "where": [0, 5, 6, 7, 28, 70, 71, 99, 100, 117, 121, 124, 127, 128, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 151, 158, 159, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 200, 201, 222, 229, 232, 233, 234, 235, 236, 250, 266, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 384, 385, 465, 473, 474, 482, 495, 496, 498, 500, 515, 530, 531, 533, 540, 544, 550, 551, 552, 584, 588, 631, 632, 660, 661, 678, 682, 685, 690, 692, 693, 694, 695, 696, 697, 699, 700, 701, 704, 706, 707, 708, 709, 711, 712, 713, 714, 715, 717, 718, 723, 725, 726, 727, 728, 729, 731, 732, 733, 734, 737, 741, 743, 751, 752, 762, 764, 765, 766, 767, 768, 769, 771, 772, 773, 776, 778, 779, 780, 781, 783, 784, 785, 786, 787, 788, 791, 792, 814, 821, 824, 825, 826, 827, 828, 842, 858, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968, 971, 978, 979, 1036, 1050, 1058, 1059, 1067, 1080, 1081, 1083, 1085, 1100, 1115, 1116, 1118, 1125, 1150, 1151, 1179, 1180, 1219, 1224, 1225, 1233, 1234, 1242, 1264, 1274, 1275, 1278, 1283, 1286, 1302, 1304, 1309, 1312, 1316, 1325], "store": [0, 3, 9, 14, 16, 22, 26, 30, 31, 32, 45, 59, 88, 137, 138, 139, 154, 155, 401, 425, 446, 465, 473, 482, 495, 496, 498, 533, 544, 548, 554, 562, 566, 572, 581, 586, 587, 589, 606, 620, 649, 727, 728, 729, 747, 748, 996, 1030, 1036, 1050, 1058, 1067, 1080, 1081, 1083, 1118, 1127, 1139, 1168, 1274, 1302, 1309, 1312, 1315, 1317, 1318, 1319, 1320, 1325], "extract": [0, 10, 222, 289, 322, 359, 394, 496, 516, 544, 558, 814, 881, 914, 951, 988, 1081, 1101, 1224, 1225, 1236, 1272, 1278, 1299, 1301, 1304, 1307, 1309, 1321], "If": [0, 6, 7, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 29, 30, 31, 44, 45, 46, 59, 61, 62, 63, 70, 88, 90, 91, 92, 99, 120, 122, 123, 125, 129, 131, 135, 136, 137, 140, 144, 145, 148, 154, 155, 156, 182, 194, 197, 200, 201, 207, 209, 222, 223, 228, 229, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 289, 290, 295, 296, 300, 301, 302, 307, 309, 322, 323, 328, 331, 332, 333, 337, 338, 339, 344, 346, 359, 360, 365, 368, 369, 370, 374, 375, 376, 381, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 428, 435, 439, 446, 449, 455, 460, 464, 465, 466, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 485, 486, 487, 490, 491, 492, 495, 496, 498, 500, 503, 504, 505, 506, 507, 509, 510, 514, 515, 516, 517, 524, 527, 528, 529, 530, 531, 532, 535, 536, 544, 545, 551, 552, 553, 556, 557, 562, 564, 566, 567, 568, 569, 570, 573, 574, 579, 580, 581, 582, 583, 585, 586, 587, 604, 606, 607, 620, 622, 623, 624, 631, 649, 651, 652, 653, 660, 681, 683, 684, 686, 701, 713, 719, 721, 725, 726, 727, 730, 734, 735, 739, 741, 747, 748, 749, 773, 785, 788, 791, 792, 799, 801, 814, 815, 820, 821, 825, 826, 827, 828, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 856, 857, 858, 859, 860, 861, 862, 863, 866, 868, 881, 882, 887, 888, 892, 893, 894, 899, 901, 914, 915, 920, 923, 924, 925, 929, 930, 931, 936, 938, 951, 952, 957, 960, 961, 962, 966, 967, 968, 971, 975, 977, 980, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 996, 1003, 1007, 1014, 1017, 1030, 1033, 1040, 1045, 1049, 1050, 1051, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1070, 1071, 1072, 1075, 1076, 1077, 1080, 1081, 1083, 1085, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1099, 1100, 1101, 1102, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1127, 1128, 1139, 1141, 1142, 1143, 1150, 1168, 1170, 1171, 1172, 1179, 1219, 1224, 1225, 1231, 1232, 1250, 1251, 1252, 1261, 1262, 1304, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1319, 1320, 1322, 1323, 1325], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 44, 45, 46, 47, 52, 59, 61, 62, 69, 70, 71, 72, 76, 88, 90, 91, 98, 99, 100, 101, 105, 117, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 157, 158, 164, 167, 169, 171, 173, 174, 175, 176, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 194, 195, 197, 200, 201, 207, 209, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 236, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 289, 290, 291, 294, 295, 296, 299, 300, 301, 302, 305, 307, 309, 322, 323, 324, 327, 328, 332, 333, 336, 337, 338, 339, 342, 344, 346, 359, 360, 361, 364, 365, 369, 370, 373, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 414, 428, 435, 436, 439, 444, 445, 446, 449, 451, 456, 458, 460, 464, 465, 466, 469, 473, 474, 475, 479, 482, 486, 488, 495, 496, 498, 500, 502, 504, 505, 506, 509, 510, 515, 516, 517, 520, 524, 525, 527, 528, 529, 531, 532, 533, 535, 536, 539, 544, 547, 548, 549, 550, 551, 552, 553, 554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 599, 604, 606, 607, 608, 613, 620, 622, 623, 630, 631, 632, 633, 637, 649, 651, 652, 659, 660, 661, 662, 666, 678, 681, 682, 683, 684, 685, 688, 690, 692, 693, 694, 695, 697, 699, 700, 701, 704, 706, 707, 708, 709, 711, 713, 714, 716, 717, 718, 719, 721, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 739, 741, 742, 743, 746, 747, 748, 749, 750, 751, 757, 760, 762, 764, 765, 766, 767, 769, 771, 772, 773, 776, 778, 779, 780, 781, 783, 785, 786, 788, 791, 792, 799, 801, 814, 815, 816, 819, 820, 821, 824, 825, 826, 827, 828, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 856, 857, 858, 859, 860, 861, 862, 863, 866, 868, 881, 882, 883, 886, 887, 888, 891, 892, 893, 894, 897, 899, 901, 914, 915, 916, 919, 920, 924, 925, 928, 929, 930, 931, 934, 936, 938, 951, 952, 953, 956, 957, 961, 962, 965, 966, 967, 968, 971, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 1003, 1004, 1007, 1009, 1014, 1015, 1017, 1020, 1028, 1029, 1030, 1031, 1033, 1035, 1036, 1041, 1043, 1045, 1049, 1050, 1051, 1054, 1058, 1059, 1060, 1064, 1067, 1071, 1073, 1080, 1081, 1083, 1085, 1087, 1089, 1090, 1091, 1094, 1095, 1100, 1101, 1102, 1105, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1124, 1127, 1128, 1129, 1134, 1139, 1141, 1142, 1149, 1150, 1151, 1152, 1156, 1168, 1170, 1171, 1178, 1179, 1180, 1181, 1185, 1204, 1216, 1217, 1218, 1224, 1225, 1231, 1232, 1234, 1241, 1242, 1244, 1247, 1250, 1251, 1252, 1254, 1260, 1261, 1262, 1264, 1265, 1266, 1269, 1274, 1275, 1278, 1283, 1284, 1285, 1286, 1289, 1294, 1295, 1302, 1304, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1325], "current": [0, 42, 47, 135, 136, 137, 173, 175, 182, 189, 194, 207, 209, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 247, 249, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 274, 276, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 309, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 344, 346, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 389, 448, 465, 473, 482, 495, 496, 498, 517, 527, 544, 597, 602, 608, 692, 694, 701, 708, 713, 725, 726, 727, 764, 766, 773, 780, 785, 799, 801, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 839, 841, 842, 843, 844, 845, 847, 849, 856, 857, 858, 859, 861, 863, 866, 868, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 899, 901, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 933, 936, 938, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 970, 983, 1021, 1023, 1050, 1058, 1067, 1080, 1081, 1083, 1102, 1112, 1129, 1267, 1323], "directori": [0, 44, 541, 544, 604, 1137, 1266, 1274, 1322, 1323], "time": [0, 1, 3, 9, 18, 22, 27, 30, 32, 45, 53, 54, 59, 88, 135, 136, 137, 161, 162, 207, 209, 222, 224, 229, 233, 234, 235, 236, 274, 276, 289, 291, 296, 300, 301, 302, 307, 309, 322, 324, 332, 333, 337, 338, 339, 344, 346, 359, 361, 369, 370, 374, 375, 376, 379, 382, 383, 394, 396, 397, 446, 455, 464, 465, 472, 473, 481, 482, 495, 496, 498, 516, 522, 531, 533, 544, 546, 548, 554, 564, 568, 572, 583, 586, 589, 606, 614, 615, 620, 649, 725, 726, 727, 754, 755, 799, 801, 814, 816, 821, 825, 826, 827, 828, 866, 868, 881, 883, 888, 892, 893, 894, 899, 901, 914, 916, 924, 925, 929, 930, 931, 936, 938, 951, 953, 961, 962, 966, 967, 968, 973, 976, 977, 988, 990, 991, 1020, 1023, 1030, 1031, 1040, 1049, 1050, 1057, 1058, 1066, 1067, 1080, 1081, 1083, 1101, 1107, 1116, 1118, 1127, 1135, 1136, 1139, 1168, 1226, 1229, 1267, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1311, 1317, 1318, 1320, 1323, 1325], "format": [0, 3, 9, 22, 26, 32, 53, 54, 59, 88, 207, 209, 222, 224, 229, 232, 233, 234, 235, 236, 274, 276, 289, 291, 296, 299, 300, 301, 302, 307, 309, 322, 324, 332, 333, 336, 337, 338, 339, 344, 346, 359, 361, 369, 370, 373, 374, 375, 376, 381, 391, 393, 395, 396, 397, 399, 542, 543, 544, 548, 554, 572, 581, 589, 614, 615, 620, 649, 799, 801, 814, 816, 821, 824, 825, 826, 827, 828, 866, 868, 881, 883, 888, 891, 892, 893, 894, 899, 901, 914, 916, 924, 925, 928, 929, 930, 931, 936, 938, 951, 953, 961, 962, 965, 966, 967, 968, 972, 975, 985, 987, 989, 990, 991, 993, 1135, 1136, 1139, 1168, 1267, 1295, 1309, 1311, 1317], "prefix": [0, 62, 91, 544, 623, 652, 1137, 1142, 1171], "add": [0, 3, 9, 22, 46, 60, 61, 89, 90, 140, 151, 222, 224, 229, 232, 233, 234, 235, 236, 249, 250, 251, 252, 253, 255, 257, 264, 266, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 462, 465, 473, 482, 495, 498, 544, 548, 554, 572, 607, 621, 622, 650, 651, 730, 743, 814, 816, 821, 824, 825, 826, 827, 828, 841, 842, 843, 844, 845, 847, 849, 856, 858, 859, 861, 863, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 925, 928, 929, 930, 931, 951, 953, 961, 962, 965, 966, 967, 968, 1047, 1050, 1058, 1067, 1080, 1083, 1128, 1140, 1141, 1169, 1170, 1267, 1278, 1283, 1284, 1285, 1294, 1295, 1297, 1302, 1304, 1305, 1313, 1319, 1322, 1323, 1325], "contain": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 33, 39, 44, 45, 46, 47, 59, 60, 64, 65, 66, 68, 69, 70, 71, 72, 88, 89, 93, 94, 95, 97, 98, 99, 100, 101, 126, 127, 128, 129, 135, 136, 137, 138, 139, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 197, 198, 199, 200, 201, 202, 203, 204, 211, 222, 229, 232, 233, 234, 235, 236, 238, 248, 278, 289, 296, 299, 300, 301, 302, 304, 311, 322, 332, 333, 336, 337, 338, 339, 341, 348, 359, 369, 370, 373, 374, 375, 376, 378, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 524, 527, 528, 529, 530, 531, 532, 533, 534, 536, 538, 540, 544, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 591, 599, 604, 606, 607, 608, 620, 621, 625, 626, 627, 629, 630, 631, 632, 633, 649, 650, 654, 655, 656, 658, 659, 660, 661, 662, 716, 717, 718, 719, 725, 726, 727, 728, 729, 735, 737, 738, 739, 740, 741, 742, 743, 747, 748, 749, 788, 789, 790, 791, 792, 793, 794, 795, 803, 814, 821, 824, 825, 826, 827, 828, 830, 840, 870, 881, 888, 891, 892, 893, 894, 896, 903, 914, 924, 925, 928, 929, 930, 931, 933, 940, 951, 961, 962, 965, 966, 967, 968, 970, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 991, 992, 993, 994, 996, 1009, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1066, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1123, 1125, 1127, 1128, 1129, 1139, 1140, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1168, 1169, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1216, 1217, 1218, 1224, 1225, 1232, 1236, 1259, 1261, 1262, 1265, 1275, 1287, 1288, 1309, 1311, 1312, 1315, 1317, 1318, 1319, 1320, 1322, 1323, 1325], "datetim": [0, 1, 27, 161, 162, 207, 209, 229, 233, 235, 274, 276, 296, 300, 301, 307, 309, 332, 337, 338, 344, 346, 369, 374, 375, 379, 382, 383, 400, 465, 473, 482, 495, 496, 498, 544, 546, 583, 754, 755, 799, 801, 821, 825, 827, 866, 868, 888, 892, 893, 899, 901, 924, 929, 930, 936, 938, 961, 966, 967, 973, 976, 977, 994, 1050, 1058, 1067, 1080, 1081, 1083, 1226, 1227, 1228, 1229, 1230], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 45, 46, 53, 54, 60, 61, 62, 64, 65, 66, 68, 76, 85, 88, 89, 90, 91, 93, 94, 95, 97, 105, 114, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 162, 169, 197, 198, 199, 200, 201, 202, 203, 204, 205, 223, 236, 239, 247, 251, 252, 258, 265, 272, 290, 302, 305, 323, 333, 339, 342, 360, 376, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 426, 427, 433, 434, 437, 440, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 526, 531, 532, 533, 534, 538, 539, 540, 541, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 591, 595, 606, 607, 614, 615, 621, 622, 623, 625, 626, 627, 629, 637, 646, 649, 650, 651, 652, 654, 655, 656, 658, 666, 675, 688, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 747, 748, 749, 751, 752, 754, 755, 760, 788, 789, 790, 791, 792, 793, 794, 795, 797, 815, 828, 831, 839, 843, 844, 850, 857, 864, 882, 894, 897, 915, 925, 931, 934, 952, 968, 973, 974, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 1001, 1002, 1005, 1008, 1012, 1013, 1018, 1020, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1148, 1156, 1165, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1177, 1185, 1194, 1199, 1200, 1201, 1202, 1204, 1217, 1218, 1219, 1231, 1233, 1235, 1236, 1240, 1242, 1243, 1244, 1247, 1252, 1253, 1257, 1258, 1261, 1262, 1264, 1265, 1274, 1278, 1285, 1286, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1302, 1304, 1305, 1309, 1310, 1311, 1315, 1316, 1317, 1318, 1319, 1323], "The": [0, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 32, 44, 45, 59, 88, 117, 121, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 168, 198, 199, 203, 227, 252, 294, 327, 364, 370, 380, 381, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 414, 444, 445, 446, 447, 448, 451, 453, 456, 460, 465, 466, 469, 470, 472, 473, 482, 484, 485, 488, 490, 495, 496, 498, 500, 501, 502, 503, 515, 517, 520, 522, 524, 525, 526, 527, 528, 529, 531, 532, 535, 536, 537, 539, 543, 544, 548, 549, 553, 554, 561, 562, 564, 566, 567, 568, 569, 570, 572, 577, 579, 580, 581, 582, 583, 585, 586, 587, 589, 590, 604, 606, 620, 649, 678, 682, 685, 686, 716, 717, 718, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 738, 739, 740, 746, 747, 748, 749, 750, 751, 752, 789, 790, 794, 819, 844, 886, 919, 956, 962, 974, 975, 980, 982, 983, 984, 985, 986, 987, 988, 990, 991, 992, 993, 994, 996, 1020, 1021, 1022, 1023, 1028, 1029, 1030, 1035, 1036, 1038, 1041, 1045, 1050, 1051, 1054, 1055, 1057, 1058, 1067, 1069, 1070, 1073, 1075, 1080, 1081, 1083, 1085, 1086, 1087, 1088, 1100, 1102, 1105, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1120, 1121, 1122, 1124, 1127, 1139, 1168, 1198, 1211, 1212, 1213, 1216, 1219, 1220, 1221, 1222, 1223, 1231, 1232, 1233, 1237, 1238, 1239, 1241, 1243, 1245, 1246, 1248, 1249, 1250, 1251, 1254, 1257, 1259, 1261, 1262, 1264, 1272, 1274, 1275, 1286, 1297, 1304, 1309, 1310, 1313, 1316, 1317, 1318, 1319, 1322], "start": [0, 1, 18, 30, 45, 59, 74, 75, 86, 87, 88, 103, 104, 115, 116, 248, 394, 400, 474, 496, 516, 531, 544, 546, 556, 564, 568, 586, 606, 620, 635, 636, 647, 648, 649, 664, 665, 676, 677, 840, 988, 994, 1059, 1081, 1101, 1116, 1127, 1139, 1154, 1155, 1166, 1167, 1168, 1183, 1184, 1195, 1196, 1227, 1274, 1283, 1284, 1294, 1295, 1309, 1311, 1317, 1319, 1323, 1324], "end": [0, 1, 18, 27, 30, 44, 67, 75, 83, 87, 96, 104, 112, 116, 126, 127, 128, 138, 139, 142, 143, 146, 151, 154, 155, 156, 248, 531, 544, 546, 564, 568, 583, 586, 604, 628, 636, 644, 648, 657, 665, 673, 677, 716, 717, 718, 728, 729, 732, 733, 737, 743, 747, 748, 749, 840, 1116, 1147, 1155, 1163, 1167, 1176, 1184, 1192, 1196, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1318], "period": [0, 145, 544, 735, 1313], "we": [0, 147, 515, 544, 738, 1100, 1267, 1274, 1275, 1278, 1283, 1302, 1304, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1324, 1325], "want": [0, 8, 544, 553, 1275, 1309, 1316, 1320, 1323, 1325], "dict": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 33, 34, 37, 40, 45, 46, 48, 53, 59, 60, 88, 89, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 205, 272, 305, 333, 342, 380, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 445, 446, 447, 451, 456, 457, 459, 460, 467, 470, 474, 475, 476, 477, 483, 484, 497, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 544, 547, 548, 549, 550, 551, 552, 553, 554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 575, 576, 579, 580, 581, 582, 583, 584, 585, 591, 593, 596, 600, 606, 607, 609, 614, 620, 621, 649, 650, 681, 683, 684, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 738, 739, 740, 742, 743, 747, 748, 749, 751, 752, 797, 864, 897, 925, 934, 974, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 991, 993, 994, 996, 1029, 1030, 1031, 1035, 1041, 1042, 1044, 1045, 1052, 1055, 1059, 1060, 1061, 1062, 1068, 1069, 1082, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1127, 1128, 1130, 1135, 1139, 1140, 1168, 1169, 1217, 1218, 1219, 1244, 1259, 1311], "option": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 45, 46, 47, 54, 55, 59, 60, 61, 62, 65, 66, 68, 70, 71, 76, 88, 91, 94, 95, 97, 99, 100, 117, 118, 119, 121, 122, 124, 126, 127, 128, 131, 132, 137, 138, 139, 140, 145, 146, 150, 151, 167, 169, 173, 175, 182, 189, 194, 222, 229, 233, 234, 235, 236, 238, 249, 251, 253, 255, 257, 264, 267, 269, 271, 289, 296, 300, 301, 302, 304, 322, 330, 331, 332, 333, 337, 338, 339, 341, 359, 367, 368, 369, 370, 374, 375, 376, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 446, 447, 450, 451, 459, 467, 469, 470, 484, 488, 489, 490, 491, 500, 503, 505, 506, 507, 508, 509, 510, 511, 514, 516, 517, 522, 523, 524, 527, 528, 529, 530, 536, 538, 539, 540, 544, 547, 548, 549, 550, 553, 554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 591, 599, 606, 607, 608, 615, 616, 620, 621, 622, 623, 626, 627, 629, 631, 632, 637, 649, 652, 655, 656, 658, 660, 661, 678, 679, 680, 682, 683, 685, 688, 692, 694, 701, 708, 713, 716, 717, 718, 721, 722, 727, 728, 729, 730, 735, 737, 742, 743, 760, 764, 766, 773, 780, 785, 814, 821, 825, 826, 827, 828, 830, 841, 843, 845, 847, 849, 856, 859, 861, 863, 881, 888, 892, 893, 894, 896, 914, 922, 923, 924, 925, 929, 930, 931, 933, 951, 959, 960, 961, 962, 966, 967, 968, 970, 971, 974, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1030, 1031, 1034, 1035, 1044, 1052, 1054, 1055, 1069, 1073, 1074, 1075, 1076, 1085, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1101, 1102, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1136, 1139, 1140, 1141, 1142, 1145, 1146, 1148, 1150, 1151, 1156, 1168, 1171, 1174, 1175, 1177, 1179, 1180, 1224, 1225, 1231, 1247, 1259, 1264, 1265, 1267, 1304, 1320], "dictionari": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 37, 40, 43, 45, 46, 59, 60, 61, 63, 88, 89, 90, 92, 120, 122, 123, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 145, 147, 148, 149, 150, 151, 154, 155, 156, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 404, 430, 432, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 464, 468, 469, 474, 478, 479, 480, 481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 524, 530, 531, 532, 533, 536, 537, 538, 544, 547, 548, 549, 550, 551, 552, 553, 554, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 570, 572, 575, 576, 579, 580, 581, 582, 583, 584, 585, 589, 591, 593, 595, 596, 600, 603, 606, 607, 620, 621, 622, 624, 649, 650, 651, 653, 681, 683, 684, 716, 717, 718, 719, 720, 725, 726, 727, 728, 729, 730, 735, 738, 739, 740, 742, 743, 747, 748, 749, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 995, 996, 998, 1000, 1028, 1029, 1030, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1043, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1059, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1109, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1127, 1128, 1139, 1140, 1141, 1143, 1168, 1169, 1170, 1172, 1197, 1217, 1218, 1219, 1259, 1275, 1312, 1320], "map": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 40, 45, 59, 88, 121, 124, 227, 251, 252, 253, 264, 294, 305, 327, 329, 330, 331, 333, 334, 342, 364, 366, 367, 368, 370, 371, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 439, 530, 544, 550, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 593, 600, 606, 620, 649, 682, 685, 819, 843, 844, 845, 856, 886, 897, 919, 921, 922, 923, 925, 926, 934, 956, 958, 959, 960, 962, 963, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 1007, 1017, 1036, 1115, 1127, 1139, 1168, 1278, 1281, 1282, 1284, 1285, 1300, 1302, 1304, 1309, 1310, 1317, 1318, 1319, 1321, 1323], "field": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 45, 46, 53, 59, 60, 61, 62, 63, 68, 71, 84, 88, 89, 90, 91, 92, 97, 100, 113, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 169, 171, 173, 174, 175, 176, 177, 178, 180, 181, 185, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 221, 222, 223, 224, 229, 232, 233, 234, 235, 236, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 288, 289, 290, 291, 296, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 317, 321, 322, 323, 324, 332, 333, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 354, 358, 359, 360, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 538, 539, 540, 544, 548, 550, 551, 552, 553, 554, 558, 560, 562, 563, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 593, 595, 598, 599, 600, 601, 606, 607, 614, 620, 621, 622, 623, 624, 629, 632, 645, 649, 650, 651, 652, 653, 658, 661, 674, 687, 688, 690, 692, 693, 694, 695, 696, 697, 699, 700, 704, 706, 707, 708, 709, 711, 712, 714, 715, 716, 717, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 741, 742, 743, 747, 748, 749, 751, 752, 760, 762, 764, 765, 766, 767, 768, 769, 771, 772, 776, 778, 779, 780, 781, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 809, 813, 814, 815, 816, 821, 824, 825, 826, 827, 828, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 876, 880, 881, 882, 883, 888, 891, 892, 893, 894, 897, 898, 899, 900, 901, 902, 903, 909, 913, 914, 915, 916, 924, 925, 928, 929, 930, 931, 934, 935, 936, 937, 938, 939, 940, 946, 950, 951, 952, 953, 961, 962, 965, 966, 967, 968, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1022, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1123, 1124, 1125, 1127, 1128, 1135, 1139, 1140, 1141, 1142, 1143, 1148, 1151, 1164, 1168, 1169, 1170, 1171, 1172, 1177, 1180, 1193, 1199, 1200, 1201, 1202, 1204, 1207, 1208, 1209, 1210, 1216, 1217, 1218, 1219, 1221, 1236, 1241, 1242, 1244, 1259, 1261, 1262, 1263, 1264, 1267, 1269, 1272, 1274, 1278, 1279, 1280, 1283, 1284, 1286, 1297, 1301, 1302, 1303, 1304, 1305, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1323], "radar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 45, 53, 88, 90, 91, 93, 94, 95, 97, 100, 105, 117, 118, 119, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 169, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 221, 222, 227, 229, 233, 234, 235, 236, 249, 253, 255, 257, 267, 269, 271, 272, 288, 289, 294, 296, 300, 301, 302, 305, 321, 322, 327, 330, 332, 333, 337, 338, 339, 342, 358, 359, 364, 367, 369, 370, 374, 375, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 544, 547, 548, 550, 551, 552, 553, 554, 555, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 591, 593, 595, 599, 605, 606, 614, 649, 651, 652, 654, 655, 656, 658, 661, 666, 678, 679, 680, 688, 701, 713, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 756, 757, 760, 773, 785, 788, 789, 790, 791, 792, 793, 794, 795, 797, 813, 814, 819, 821, 825, 826, 827, 828, 841, 845, 847, 849, 859, 861, 863, 864, 880, 881, 886, 888, 892, 893, 894, 897, 913, 914, 919, 922, 924, 925, 929, 930, 931, 934, 950, 951, 956, 959, 961, 962, 966, 967, 968, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 993, 994, 1019, 1020, 1022, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1127, 1135, 1168, 1170, 1171, 1173, 1174, 1175, 1177, 1180, 1185, 1200, 1201, 1202, 1204, 1207, 1208, 1209, 1210, 1217, 1218, 1219, 1221, 1224, 1225, 1228, 1230, 1232, 1233, 1234, 1235, 1236, 1240, 1242, 1244, 1247, 1252, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1303, 1304, 1305, 1306, 1307, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1321, 1324], "unlik": [0, 5, 10, 15, 27, 28, 384, 385, 544, 550, 558, 563, 583, 584, 978, 979], "other": [0, 5, 10, 15, 26, 27, 28, 45, 53, 55, 59, 88, 137, 138, 139, 140, 145, 197, 201, 222, 224, 229, 232, 233, 234, 235, 236, 251, 252, 253, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 387, 390, 392, 394, 398, 406, 446, 500, 517, 531, 533, 534, 539, 544, 550, 558, 563, 581, 583, 584, 606, 614, 616, 620, 649, 727, 728, 729, 730, 735, 741, 788, 792, 814, 816, 821, 824, 825, 826, 827, 828, 843, 844, 845, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 925, 928, 929, 930, 931, 951, 953, 961, 962, 965, 966, 967, 968, 975, 978, 979, 981, 984, 986, 988, 992, 1020, 1030, 1085, 1102, 1116, 1118, 1119, 1124, 1127, 1135, 1139, 1168, 1200, 1201, 1202, 1267, 1304, 1309, 1311, 1318, 1322, 1323, 1325], "function": [0, 5, 10, 13, 15, 27, 28, 44, 70, 99, 145, 147, 148, 149, 166, 168, 197, 198, 199, 200, 201, 202, 203, 204, 221, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 288, 289, 296, 300, 301, 302, 305, 321, 322, 332, 337, 338, 339, 342, 358, 359, 369, 374, 375, 376, 381, 384, 385, 388, 389, 395, 398, 441, 442, 443, 445, 446, 447, 460, 466, 482, 485, 500, 527, 529, 535, 537, 539, 542, 544, 550, 558, 561, 563, 583, 584, 588, 592, 604, 605, 631, 660, 735, 738, 739, 740, 741, 759, 788, 789, 790, 791, 792, 793, 794, 795, 796, 813, 814, 821, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 880, 881, 888, 892, 893, 894, 897, 913, 914, 924, 929, 930, 931, 934, 950, 951, 961, 966, 967, 968, 971, 972, 975, 978, 979, 982, 983, 989, 992, 1019, 1020, 1024, 1025, 1026, 1029, 1030, 1031, 1032, 1036, 1045, 1051, 1067, 1070, 1085, 1112, 1114, 1120, 1122, 1124, 1126, 1150, 1179, 1211, 1236, 1242, 1247, 1248, 1249, 1258, 1259, 1265, 1266, 1267, 1283, 1302, 1304, 1309, 1313, 1315, 1317, 1318, 1319, 1320, 1322, 1323], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 44, 45, 47, 59, 61, 62, 65, 66, 68, 70, 71, 72, 88, 90, 91, 94, 95, 97, 99, 100, 101, 120, 122, 123, 126, 127, 128, 132, 137, 138, 139, 142, 143, 144, 145, 146, 148, 150, 151, 154, 155, 156, 169, 173, 182, 197, 198, 199, 200, 201, 202, 203, 204, 221, 253, 288, 305, 321, 333, 342, 358, 370, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 414, 428, 439, 445, 446, 449, 451, 460, 465, 473, 475, 482, 495, 496, 498, 500, 514, 515, 516, 517, 527, 528, 529, 533, 536, 539, 540, 541, 544, 547, 548, 549, 550, 551, 552, 553, 554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 599, 604, 606, 608, 620, 622, 623, 626, 627, 629, 631, 632, 633, 649, 651, 652, 655, 656, 658, 660, 661, 662, 681, 683, 684, 688, 692, 701, 716, 717, 718, 722, 727, 728, 729, 732, 733, 734, 735, 737, 739, 741, 742, 743, 747, 748, 749, 760, 764, 773, 788, 789, 790, 791, 792, 793, 794, 795, 813, 845, 880, 897, 913, 925, 934, 950, 962, 971, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 993, 994, 996, 1007, 1009, 1017, 1020, 1022, 1029, 1030, 1033, 1035, 1036, 1045, 1050, 1058, 1060, 1067, 1080, 1081, 1083, 1085, 1099, 1100, 1101, 1102, 1112, 1113, 1114, 1118, 1121, 1124, 1125, 1127, 1129, 1139, 1141, 1142, 1145, 1146, 1148, 1150, 1151, 1152, 1168, 1170, 1171, 1174, 1175, 1177, 1179, 1180, 1181, 1204, 1216, 1231, 1241, 1242, 1247, 1250, 1251, 1252, 1265, 1266, 1269, 1270, 1274, 1275, 1278, 1279, 1283, 1284, 1285, 1286, 1289, 1295, 1302, 1304, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1325], "have": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 47, 59, 62, 70, 88, 91, 99, 126, 127, 128, 137, 173, 175, 182, 189, 194, 222, 233, 258, 289, 300, 322, 333, 337, 359, 374, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 449, 456, 496, 500, 517, 522, 531, 532, 544, 550, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 608, 620, 623, 631, 649, 652, 660, 692, 694, 701, 708, 713, 716, 717, 718, 727, 764, 766, 773, 780, 785, 814, 825, 850, 881, 892, 914, 925, 929, 951, 966, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 1033, 1041, 1081, 1085, 1102, 1107, 1116, 1117, 1129, 1139, 1142, 1150, 1168, 1171, 1179, 1219, 1232, 1252, 1274, 1275, 1302, 1304, 1309, 1315, 1317, 1318, 1319, 1322, 1323, 1324, 1325], "valu": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 42, 44, 45, 59, 62, 88, 91, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 164, 169, 171, 173, 174, 175, 177, 180, 182, 185, 187, 188, 189, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 289, 290, 291, 293, 296, 297, 298, 299, 300, 301, 302, 322, 323, 324, 326, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 359, 360, 361, 363, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 408, 410, 412, 416, 418, 419, 424, 425, 435, 436, 445, 446, 447, 449, 451, 456, 460, 465, 470, 473, 477, 482, 483, 495, 496, 498, 500, 501, 503, 506, 509, 510, 514, 517, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 536, 539, 540, 543, 544, 547, 548, 549, 550, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 597, 599, 602, 604, 606, 620, 623, 649, 652, 681, 682, 683, 684, 685, 688, 690, 692, 693, 694, 696, 699, 701, 704, 706, 707, 708, 711, 713, 715, 716, 717, 718, 719, 720, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 741, 742, 743, 745, 747, 748, 749, 751, 752, 757, 760, 762, 764, 765, 766, 768, 771, 773, 776, 778, 779, 780, 783, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 814, 815, 816, 818, 821, 822, 823, 824, 825, 826, 827, 828, 839, 841, 843, 844, 845, 847, 849, 856, 857, 859, 861, 863, 881, 882, 883, 885, 888, 889, 890, 891, 892, 893, 894, 914, 915, 916, 918, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 951, 952, 953, 955, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 971, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 1003, 1004, 1009, 1014, 1015, 1029, 1030, 1033, 1035, 1036, 1041, 1045, 1050, 1055, 1058, 1062, 1067, 1068, 1080, 1081, 1083, 1085, 1086, 1088, 1091, 1094, 1095, 1099, 1102, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1121, 1124, 1125, 1127, 1139, 1142, 1168, 1171, 1200, 1201, 1202, 1216, 1221, 1231, 1238, 1242, 1245, 1246, 1248, 1250, 1252, 1267, 1275, 1278, 1283, 1286, 1302, 1303, 1304, 1312, 1313, 1316, 1317, 1318, 1323], "ar": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44, 45, 59, 70, 72, 88, 99, 101, 121, 124, 125, 126, 127, 128, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 151, 154, 155, 156, 182, 194, 197, 199, 200, 201, 202, 203, 204, 222, 228, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 289, 295, 296, 300, 301, 302, 322, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 430, 443, 444, 445, 446, 451, 460, 466, 469, 474, 485, 486, 488, 490, 496, 500, 505, 506, 507, 509, 510, 514, 517, 524, 527, 529, 536, 539, 540, 542, 544, 550, 553, 557, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 604, 606, 620, 631, 633, 649, 660, 662, 682, 685, 686, 701, 713, 716, 717, 718, 725, 726, 727, 728, 729, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 743, 747, 748, 749, 759, 773, 785, 788, 790, 791, 792, 793, 794, 795, 814, 820, 821, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 856, 859, 861, 863, 881, 887, 888, 892, 893, 894, 914, 920, 921, 922, 923, 924, 925, 926, 929, 930, 931, 951, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 990, 991, 992, 993, 994, 996, 998, 1026, 1028, 1029, 1030, 1035, 1036, 1045, 1051, 1054, 1059, 1070, 1071, 1073, 1075, 1081, 1085, 1090, 1091, 1092, 1094, 1095, 1099, 1102, 1109, 1112, 1114, 1121, 1124, 1125, 1127, 1139, 1150, 1152, 1168, 1179, 1181, 1200, 1201, 1202, 1224, 1225, 1231, 1234, 1245, 1246, 1248, 1250, 1251, 1260, 1265, 1270, 1272, 1274, 1275, 1278, 1283, 1285, 1286, 1294, 1297, 1302, 1304, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1325], "still": [0, 5, 10, 15, 27, 28, 137, 305, 342, 384, 385, 400, 446, 544, 550, 558, 563, 583, 584, 727, 897, 934, 978, 979, 994, 1030, 1247, 1274, 1323], "includ": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 34, 36, 59, 64, 70, 71, 88, 93, 99, 100, 126, 127, 128, 137, 138, 139, 140, 142, 143, 145, 146, 154, 155, 156, 169, 173, 175, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 445, 446, 523, 539, 544, 547, 548, 549, 550, 553, 554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 583, 584, 585, 588, 589, 593, 595, 620, 625, 631, 632, 649, 654, 660, 661, 688, 692, 694, 698, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 727, 728, 729, 730, 732, 733, 735, 737, 741, 747, 748, 749, 759, 760, 764, 766, 770, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 814, 821, 825, 826, 827, 828, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 1029, 1030, 1108, 1124, 1139, 1144, 1150, 1151, 1168, 1173, 1179, 1180, 1219, 1254, 1274, 1278, 1297, 1309, 1316, 1317, 1322, 1323], "exclud": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 62, 91, 126, 127, 128, 151, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 191, 194, 197, 199, 200, 201, 202, 203, 204, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 503, 527, 528, 529, 531, 534, 539, 540, 544, 550, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 593, 623, 652, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 708, 710, 713, 716, 717, 718, 741, 743, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 780, 782, 785, 788, 790, 791, 792, 793, 794, 795, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 993, 994, 1088, 1112, 1113, 1114, 1116, 1119, 1124, 1125, 1142, 1171, 1270, 1279, 1316], "them": [0, 5, 10, 15, 18, 19, 20, 27, 28, 70, 99, 137, 138, 139, 140, 239, 258, 333, 384, 385, 394, 446, 503, 514, 532, 542, 544, 550, 556, 558, 563, 568, 569, 570, 583, 584, 631, 660, 727, 728, 729, 730, 831, 850, 925, 978, 979, 988, 1030, 1088, 1099, 1117, 1150, 1179, 1232, 1267, 1283, 1309, 1317, 1318, 1325], "us": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 39, 44, 45, 47, 59, 61, 68, 70, 71, 88, 90, 97, 99, 100, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 169, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 309, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 344, 346, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 372, 373, 374, 375, 376, 378, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 428, 444, 445, 446, 447, 450, 452, 453, 454, 455, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 517, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 547, 548, 549, 550, 553, 554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 591, 593, 599, 604, 606, 608, 620, 622, 629, 631, 632, 649, 651, 658, 660, 661, 681, 682, 683, 684, 685, 688, 701, 713, 716, 717, 718, 719, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 760, 773, 785, 788, 789, 790, 791, 792, 793, 794, 795, 797, 799, 801, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 868, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 899, 901, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 936, 938, 950, 951, 952, 953, 954, 955, 956, 957, 960, 961, 962, 964, 965, 966, 967, 968, 970, 971, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 996, 1020, 1028, 1029, 1030, 1031, 1034, 1036, 1037, 1038, 1039, 1040, 1042, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1102, 1105, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1139, 1141, 1148, 1150, 1151, 1168, 1170, 1177, 1179, 1180, 1204, 1211, 1216, 1218, 1219, 1221, 1224, 1225, 1231, 1232, 1247, 1248, 1252, 1254, 1259, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1271, 1272, 1273, 1274, 1275, 1277, 1281, 1282, 1283, 1284, 1286, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1300, 1302, 1304, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325], "which": [0, 5, 10, 13, 15, 27, 28, 30, 31, 33, 45, 47, 55, 56, 59, 64, 68, 81, 82, 84, 85, 88, 93, 97, 110, 111, 113, 114, 129, 130, 133, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 150, 151, 154, 155, 156, 158, 159, 165, 166, 168, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 222, 223, 227, 228, 229, 232, 233, 234, 235, 236, 239, 247, 249, 251, 252, 255, 257, 258, 264, 265, 267, 269, 271, 289, 290, 294, 295, 296, 299, 300, 301, 302, 322, 323, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 380, 381, 383, 384, 385, 390, 391, 394, 395, 397, 398, 399, 400, 401, 425, 441, 442, 443, 444, 445, 446, 450, 451, 453, 455, 456, 460, 469, 471, 472, 480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 496, 501, 502, 504, 514, 515, 516, 517, 524, 525, 526, 527, 528, 529, 531, 533, 536, 538, 539, 540, 544, 550, 558, 561, 563, 583, 584, 586, 587, 591, 606, 608, 616, 617, 620, 625, 629, 642, 643, 645, 646, 649, 654, 658, 671, 672, 674, 675, 688, 692, 694, 701, 708, 713, 719, 720, 723, 727, 728, 729, 730, 731, 732, 733, 734, 737, 738, 741, 742, 743, 747, 748, 749, 751, 752, 760, 764, 766, 773, 780, 785, 788, 789, 790, 791, 792, 793, 794, 795, 814, 815, 819, 820, 821, 824, 825, 826, 827, 828, 831, 839, 841, 843, 844, 847, 849, 850, 856, 857, 859, 861, 863, 881, 882, 886, 887, 888, 891, 892, 893, 894, 914, 915, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 951, 952, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 967, 968, 974, 975, 977, 978, 979, 984, 985, 988, 989, 991, 992, 993, 994, 996, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1034, 1035, 1038, 1040, 1041, 1045, 1054, 1056, 1057, 1065, 1066, 1067, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1086, 1087, 1089, 1099, 1100, 1101, 1102, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1118, 1121, 1123, 1124, 1125, 1127, 1129, 1139, 1144, 1148, 1161, 1162, 1164, 1165, 1168, 1173, 1177, 1190, 1191, 1193, 1194, 1216, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1231, 1232, 1235, 1236, 1241, 1242, 1245, 1246, 1259, 1264, 1267, 1270, 1274, 1275, 1278, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1302, 1309, 1313, 1315, 1317, 1318, 1319, 1320, 1322, 1323], "renam": [0, 5, 10, 15, 27, 28, 44, 165, 166, 168, 384, 385, 395, 544, 550, 558, 563, 583, 584, 604, 978, 979, 989], "kei": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 32, 45, 46, 59, 60, 61, 88, 89, 90, 120, 122, 123, 137, 138, 139, 333, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 401, 402, 404, 410, 415, 417, 425, 430, 432, 435, 436, 437, 439, 445, 446, 469, 488, 490, 491, 516, 517, 544, 550, 551, 552, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 589, 606, 607, 620, 621, 622, 649, 650, 651, 681, 683, 684, 727, 728, 729, 925, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 990, 991, 993, 994, 995, 996, 998, 1000, 1003, 1004, 1005, 1007, 1009, 1014, 1015, 1017, 1029, 1030, 1054, 1073, 1075, 1076, 1101, 1102, 1127, 1128, 1139, 1140, 1141, 1168, 1169, 1170, 1204, 1311, 1312, 1316], "uniform": [0, 5, 10, 13, 15, 27, 28, 72, 101, 138, 139, 384, 385, 393, 451, 537, 544, 550, 558, 561, 563, 583, 584, 633, 662, 728, 729, 978, 979, 987, 1035, 1122, 1152, 1181, 1243, 1283, 1286, 1309, 1311], "bool": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 46, 47, 54, 60, 61, 62, 65, 66, 68, 70, 71, 72, 89, 90, 91, 94, 95, 97, 99, 100, 101, 118, 122, 125, 126, 135, 136, 137, 138, 139, 150, 151, 154, 155, 156, 169, 173, 175, 182, 189, 194, 207, 209, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 264, 267, 269, 271, 274, 276, 289, 291, 296, 299, 300, 301, 302, 307, 309, 322, 324, 332, 333, 336, 337, 338, 339, 344, 346, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 446, 451, 455, 460, 464, 471, 472, 474, 475, 477, 479, 480, 481, 486, 487, 490, 491, 492, 500, 503, 504, 506, 509, 510, 517, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 536, 544, 550, 551, 552, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 593, 607, 608, 615, 621, 622, 623, 626, 627, 629, 631, 632, 633, 650, 651, 652, 655, 656, 658, 660, 661, 662, 679, 683, 686, 688, 692, 694, 701, 708, 713, 716, 725, 726, 727, 728, 729, 742, 743, 747, 748, 749, 760, 764, 766, 773, 780, 785, 799, 801, 814, 816, 821, 824, 825, 826, 827, 828, 831, 841, 843, 844, 845, 847, 849, 850, 856, 859, 861, 863, 866, 868, 881, 883, 888, 891, 892, 893, 894, 899, 901, 914, 916, 924, 925, 928, 929, 930, 931, 936, 938, 951, 953, 961, 962, 965, 966, 967, 968, 971, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 1030, 1035, 1040, 1045, 1049, 1056, 1057, 1059, 1060, 1062, 1064, 1065, 1066, 1071, 1072, 1075, 1076, 1077, 1085, 1088, 1089, 1091, 1094, 1095, 1102, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1128, 1129, 1136, 1140, 1141, 1142, 1145, 1146, 1148, 1150, 1151, 1152, 1169, 1170, 1171, 1174, 1175, 1177, 1179, 1180, 1181, 1232, 1247, 1265], "true": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 45, 46, 47, 54, 59, 60, 61, 62, 65, 66, 68, 70, 71, 72, 88, 89, 90, 91, 94, 95, 97, 99, 100, 101, 118, 122, 126, 135, 136, 137, 138, 139, 150, 151, 154, 155, 156, 161, 169, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 207, 209, 222, 224, 229, 232, 233, 234, 235, 236, 239, 249, 251, 252, 253, 255, 257, 258, 264, 267, 269, 271, 274, 276, 289, 291, 296, 299, 300, 301, 302, 307, 309, 322, 324, 332, 333, 336, 337, 338, 339, 344, 346, 359, 361, 369, 370, 373, 374, 375, 376, 380, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 428, 432, 445, 446, 451, 455, 460, 464, 471, 472, 474, 475, 479, 480, 481, 486, 487, 490, 491, 492, 500, 503, 504, 506, 509, 510, 515, 517, 524, 527, 528, 529, 531, 532, 533, 535, 536, 544, 545, 550, 551, 552, 553, 556, 557, 558, 562, 563, 564, 566, 567, 568, 569, 570, 573, 574, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 593, 606, 607, 608, 615, 620, 621, 622, 623, 626, 627, 629, 631, 632, 633, 649, 650, 651, 652, 655, 656, 658, 660, 661, 662, 679, 683, 688, 690, 692, 693, 694, 695, 696, 697, 699, 700, 701, 704, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 725, 726, 727, 728, 729, 736, 742, 743, 747, 748, 749, 754, 760, 762, 764, 765, 766, 767, 768, 769, 771, 772, 773, 776, 778, 779, 780, 781, 783, 784, 785, 786, 787, 799, 801, 814, 816, 821, 824, 825, 826, 827, 828, 831, 841, 843, 844, 845, 847, 849, 850, 856, 859, 861, 863, 866, 868, 881, 883, 888, 891, 892, 893, 894, 899, 901, 914, 916, 924, 925, 928, 929, 930, 931, 936, 938, 951, 953, 961, 962, 965, 966, 967, 968, 971, 974, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 1000, 1029, 1030, 1035, 1040, 1045, 1049, 1056, 1057, 1059, 1060, 1064, 1065, 1066, 1071, 1072, 1075, 1076, 1077, 1085, 1088, 1089, 1091, 1094, 1095, 1100, 1102, 1109, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1127, 1128, 1129, 1136, 1137, 1139, 1140, 1141, 1142, 1145, 1146, 1148, 1150, 1151, 1152, 1168, 1169, 1170, 1171, 1174, 1175, 1177, 1179, 1180, 1181, 1209, 1210, 1232, 1247, 1265, 1285, 1292, 1293, 1294, 1295, 1304, 1306, 1312, 1313, 1317, 1318, 1319, 1320, 1323], "forc": [0, 5, 10, 15, 18, 19, 20, 27, 28, 384, 385, 395, 451, 532, 544, 550, 558, 563, 568, 569, 570, 583, 584, 978, 979, 989, 1035, 1117, 1252], "case": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 39, 120, 122, 123, 137, 139, 182, 194, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 439, 517, 544, 550, 551, 552, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 586, 587, 599, 681, 683, 684, 701, 713, 727, 729, 773, 785, 972, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 1007, 1017, 1102, 1267, 1274, 1275, 1278, 1295, 1317, 1323], "ignor": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 137, 138, 139, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 451, 544, 550, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 727, 728, 729, 814, 816, 821, 824, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 925, 928, 929, 930, 931, 951, 953, 961, 962, 965, 966, 967, 968, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 1035, 1269, 1278, 1319], "list": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 34, 62, 91, 135, 136, 144, 198, 205, 224, 228, 231, 252, 258, 272, 291, 295, 298, 305, 324, 328, 335, 342, 361, 365, 372, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 446, 460, 465, 466, 471, 472, 473, 482, 485, 495, 496, 498, 502, 516, 523, 544, 550, 551, 552, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 586, 587, 593, 623, 652, 725, 726, 734, 789, 797, 816, 820, 823, 844, 850, 864, 883, 887, 890, 897, 916, 920, 927, 934, 953, 957, 964, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 1022, 1030, 1045, 1050, 1051, 1056, 1057, 1058, 1067, 1070, 1080, 1081, 1083, 1087, 1101, 1108, 1142, 1171, 1219, 1224, 1225, 1235, 1274, 1323, 1324], "appli": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 59, 62, 88, 91, 131, 134, 135, 136, 138, 139, 145, 150, 151, 152, 163, 197, 200, 201, 222, 223, 229, 232, 233, 234, 235, 236, 247, 265, 289, 290, 296, 299, 300, 301, 302, 322, 323, 332, 333, 336, 337, 338, 339, 359, 360, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 444, 446, 455, 469, 471, 474, 487, 488, 490, 491, 500, 506, 531, 533, 544, 550, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 620, 623, 649, 652, 721, 724, 725, 726, 728, 729, 735, 741, 742, 743, 744, 756, 788, 791, 792, 814, 815, 821, 824, 825, 826, 827, 828, 839, 857, 881, 882, 888, 891, 892, 893, 894, 914, 915, 924, 925, 928, 929, 930, 931, 951, 952, 961, 962, 965, 966, 967, 968, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 993, 1020, 1028, 1030, 1036, 1040, 1054, 1056, 1059, 1072, 1073, 1075, 1076, 1085, 1091, 1116, 1118, 1139, 1142, 1168, 1171, 1231, 1232, 1274, 1283, 1294, 1304, 1313], "after": [0, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 137, 138, 168, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 401, 517, 527, 544, 550, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 727, 728, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 996, 1102, 1112, 1232, 1275, 1304, 1318, 1319, 1322, 1323, 1325], "set": [0, 5, 8, 10, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44, 45, 59, 70, 71, 72, 88, 99, 100, 101, 120, 121, 122, 123, 124, 125, 126, 127, 128, 137, 138, 139, 150, 151, 154, 155, 169, 173, 175, 182, 189, 194, 197, 199, 200, 201, 202, 203, 204, 222, 224, 229, 232, 233, 234, 235, 236, 237, 238, 251, 252, 253, 289, 291, 296, 299, 300, 301, 302, 303, 304, 322, 324, 332, 333, 336, 337, 338, 339, 340, 341, 359, 361, 369, 370, 373, 374, 375, 376, 377, 378, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 425, 433, 434, 437, 438, 446, 474, 482, 505, 506, 507, 509, 510, 517, 527, 528, 529, 544, 550, 553, 558, 562, 563, 564, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 604, 606, 620, 631, 632, 633, 649, 660, 661, 662, 681, 682, 683, 684, 685, 686, 688, 692, 694, 701, 708, 713, 716, 717, 718, 727, 728, 729, 741, 742, 743, 747, 748, 760, 764, 766, 773, 780, 785, 788, 790, 791, 792, 793, 794, 795, 814, 816, 821, 824, 825, 826, 827, 828, 829, 830, 843, 844, 845, 881, 883, 888, 891, 892, 893, 894, 895, 896, 914, 916, 924, 925, 928, 929, 930, 931, 932, 933, 951, 953, 961, 962, 965, 966, 967, 968, 969, 970, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 1001, 1002, 1005, 1006, 1012, 1013, 1016, 1030, 1059, 1067, 1090, 1091, 1092, 1094, 1095, 1102, 1112, 1113, 1114, 1127, 1139, 1150, 1151, 1152, 1168, 1179, 1180, 1181, 1200, 1201, 1202, 1209, 1210, 1216, 1219, 1252, 1255, 1256, 1267, 1275, 1278, 1284, 1291, 1294, 1295, 1298, 1299, 1304, 1309, 1313, 1318, 1322, 1323, 1324], "all": [0, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 45, 47, 59, 62, 70, 71, 88, 91, 99, 100, 118, 137, 138, 139, 143, 144, 145, 150, 151, 154, 155, 156, 169, 172, 179, 182, 186, 191, 194, 197, 201, 222, 228, 229, 232, 233, 234, 235, 236, 251, 252, 289, 295, 296, 299, 300, 301, 302, 322, 328, 332, 333, 336, 337, 338, 339, 359, 365, 369, 370, 373, 374, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 415, 429, 444, 445, 446, 451, 465, 473, 482, 495, 498, 500, 502, 516, 517, 523, 527, 529, 542, 544, 550, 551, 552, 553, 558, 562, 563, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 606, 608, 620, 623, 631, 632, 649, 652, 660, 661, 679, 688, 691, 698, 701, 705, 710, 713, 727, 728, 729, 733, 734, 735, 741, 742, 743, 747, 748, 749, 760, 763, 770, 773, 777, 782, 785, 788, 792, 814, 820, 821, 824, 825, 826, 827, 828, 843, 844, 881, 887, 888, 891, 892, 893, 894, 914, 920, 924, 925, 928, 929, 930, 931, 951, 957, 961, 962, 965, 966, 967, 968, 971, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 997, 1009, 1010, 1028, 1029, 1030, 1035, 1050, 1058, 1067, 1080, 1083, 1085, 1087, 1101, 1102, 1108, 1112, 1114, 1127, 1129, 1139, 1142, 1150, 1151, 1168, 1171, 1179, 1180, 1219, 1231, 1266, 1272, 1283, 1302, 1303, 1304, 1306, 1309, 1317, 1318, 1319, 1320, 1321, 1323, 1325], "specifi": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 52, 59, 62, 70, 71, 88, 91, 99, 100, 120, 122, 123, 137, 138, 139, 173, 175, 189, 222, 224, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 264, 267, 268, 269, 270, 271, 289, 291, 296, 300, 301, 302, 322, 324, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 361, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 435, 445, 446, 503, 527, 528, 529, 544, 547, 548, 549, 550, 553, 554, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 606, 613, 620, 623, 631, 632, 649, 652, 660, 661, 681, 683, 684, 692, 694, 708, 727, 728, 729, 759, 764, 766, 780, 814, 816, 821, 825, 826, 827, 828, 840, 841, 843, 844, 845, 846, 847, 848, 849, 856, 859, 860, 861, 862, 863, 881, 883, 888, 892, 893, 894, 914, 916, 921, 922, 923, 924, 925, 926, 929, 930, 931, 951, 953, 958, 959, 960, 961, 962, 963, 966, 967, 968, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 992, 993, 994, 995, 996, 1003, 1014, 1020, 1029, 1030, 1088, 1112, 1113, 1114, 1127, 1134, 1139, 1142, 1150, 1151, 1168, 1171, 1179, 1180, 1219, 1259, 1264, 1267, 1270, 1274, 1315, 1316, 1318, 1322], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 183, 184, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 243, 244, 245, 246, 259, 260, 261, 262, 273, 274, 275, 276, 277, 278, 306, 307, 308, 309, 310, 311, 343, 344, 345, 346, 347, 348, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 406, 407, 408, 409, 412, 416, 417, 418, 419, 423, 427, 428, 430, 435, 436, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 591, 595, 596, 597, 598, 599, 600, 601, 602, 603, 608, 609, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 642, 643, 644, 645, 646, 647, 648, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 702, 703, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 761, 774, 775, 788, 789, 790, 791, 792, 793, 794, 795, 798, 799, 800, 801, 802, 803, 835, 836, 837, 838, 851, 852, 853, 854, 865, 866, 867, 868, 869, 870, 898, 899, 900, 901, 902, 903, 935, 936, 937, 938, 939, 940, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 998, 1003, 1004, 1014, 1015, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1130, 1137, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1302, 1304, 1312, 1315, 1320, 1323], "note": [0, 5, 13, 27, 28, 61, 90, 117, 137, 145, 173, 175, 182, 189, 194, 251, 252, 333, 384, 385, 388, 389, 399, 522, 527, 539, 544, 550, 561, 583, 584, 622, 651, 678, 692, 694, 701, 708, 713, 727, 735, 764, 766, 773, 780, 785, 843, 844, 925, 978, 979, 982, 983, 993, 1107, 1112, 1124, 1141, 1170, 1274, 1275, 1285, 1304, 1318, 1319, 1322, 1323], "ha": [0, 5, 8, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 59, 88, 132, 137, 165, 166, 168, 207, 243, 258, 259, 274, 307, 342, 344, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 432, 439, 504, 506, 509, 510, 544, 550, 553, 561, 562, 564, 566, 567, 568, 569, 570, 573, 574, 579, 580, 581, 582, 583, 584, 585, 588, 620, 649, 722, 727, 799, 835, 850, 851, 866, 899, 934, 936, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 993, 1000, 1007, 1017, 1019, 1089, 1091, 1094, 1095, 1139, 1168, 1204, 1231, 1243, 1264, 1267, 1274, 1283, 1304, 1309, 1315, 1317, 1318, 1320, 1322, 1323, 1325], "been": [0, 5, 13, 26, 27, 28, 132, 137, 165, 166, 168, 173, 175, 182, 189, 194, 258, 342, 384, 385, 387, 390, 391, 392, 394, 504, 544, 550, 561, 573, 574, 581, 583, 584, 692, 694, 701, 708, 713, 722, 727, 764, 766, 773, 780, 785, 850, 934, 978, 979, 981, 984, 985, 986, 988, 1089, 1219, 1231, 1274, 1304, 1309, 1315, 1319, 1322, 1323], "test": [0, 5, 13, 26, 27, 28, 137, 384, 385, 390, 392, 401, 460, 493, 494, 542, 544, 550, 561, 581, 583, 584, 727, 978, 979, 984, 986, 996, 1045, 1078, 1079, 1267, 1269, 1270, 1278, 1279, 1280, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1309, 1311], "stream": [0, 5, 13, 27, 28, 76, 105, 384, 385, 541, 544, 550, 561, 583, 584, 637, 666, 978, 979, 1156, 1185], "cfradial": [0, 5, 13, 27, 28, 384, 385, 544, 550, 561, 583, 584, 588, 978, 979, 1272, 1282, 1283, 1297, 1299, 1300, 1311, 1319, 1321], "get": [1, 25, 39, 147, 148, 149, 152, 163, 240, 241, 242, 263, 401, 410, 438, 518, 521, 531, 537, 546, 580, 599, 738, 739, 740, 744, 756, 832, 833, 834, 855, 996, 1006, 1016, 1020, 1031, 1103, 1106, 1116, 1122, 1237, 1238, 1239, 1240, 1248, 1249, 1250, 1251, 1267, 1275, 1294, 1295, 1304, 1311, 1313, 1316, 1318, 1320, 1322, 1323, 1324, 1325], "each": [1, 2, 3, 9, 11, 22, 45, 53, 55, 59, 69, 88, 98, 126, 127, 128, 130, 138, 139, 140, 141, 142, 143, 146, 154, 155, 156, 164, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 394, 398, 400, 444, 445, 446, 460, 496, 501, 503, 504, 514, 520, 521, 524, 531, 532, 533, 535, 537, 539, 546, 547, 548, 554, 559, 572, 588, 606, 614, 616, 620, 630, 649, 659, 716, 717, 718, 720, 728, 729, 730, 731, 732, 733, 737, 747, 748, 749, 757, 814, 821, 825, 826, 827, 841, 847, 849, 859, 861, 863, 881, 888, 892, 893, 914, 924, 925, 929, 930, 951, 961, 962, 966, 967, 988, 992, 994, 1020, 1028, 1029, 1030, 1045, 1081, 1086, 1088, 1089, 1099, 1105, 1106, 1109, 1116, 1117, 1118, 1120, 1122, 1124, 1127, 1135, 1139, 1149, 1168, 1178, 1200, 1201, 1202, 1237, 1238, 1239, 1241, 1248, 1249, 1250, 1251, 1274, 1279, 1294, 1297, 1304, 1316, 1320, 1323], "assum": [1, 3, 9, 59, 88, 117, 118, 137, 140, 141, 142, 143, 154, 155, 156, 476, 477, 502, 515, 517, 522, 527, 529, 530, 546, 548, 554, 620, 649, 678, 679, 727, 730, 731, 732, 733, 747, 748, 749, 1061, 1062, 1087, 1100, 1102, 1107, 1112, 1114, 1115, 1139, 1168, 1319], "clockwis": [1, 59, 88, 546, 620, 649, 1139, 1168], "rotat": [1, 59, 88, 205, 546, 620, 649, 797, 1139, 1168], "north": [1, 55, 59, 88, 251, 252, 264, 333, 370, 546, 616, 620, 649, 843, 844, 856, 925, 962, 1031, 1139, 1168, 1236, 1287, 1319, 1320], "tstart": [1, 546], "tend": [1, 546, 1318], "arrai": [1, 8, 14, 16, 26, 45, 47, 53, 55, 56, 61, 65, 66, 68, 69, 70, 71, 72, 90, 94, 95, 97, 98, 99, 100, 101, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 138, 139, 145, 146, 157, 160, 163, 164, 169, 173, 175, 182, 189, 194, 205, 211, 222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 272, 278, 289, 290, 291, 296, 300, 301, 302, 305, 311, 322, 323, 324, 329, 330, 332, 333, 337, 338, 339, 342, 348, 359, 360, 361, 366, 367, 369, 370, 374, 375, 376, 445, 446, 447, 448, 449, 460, 470, 500, 501, 504, 521, 524, 528, 529, 530, 535, 537, 539, 540, 543, 546, 553, 556, 557, 562, 566, 573, 574, 581, 606, 608, 614, 616, 617, 622, 626, 627, 629, 630, 631, 632, 633, 651, 655, 656, 658, 659, 660, 661, 662, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 692, 694, 701, 708, 713, 727, 728, 729, 735, 736, 737, 745, 750, 753, 756, 757, 760, 764, 766, 773, 780, 785, 797, 803, 814, 815, 816, 821, 825, 826, 827, 828, 839, 841, 843, 844, 845, 847, 849, 856, 857, 859, 861, 863, 864, 870, 881, 882, 883, 888, 892, 893, 894, 897, 903, 914, 915, 916, 921, 922, 924, 925, 929, 930, 931, 934, 940, 951, 952, 953, 958, 959, 961, 962, 966, 967, 968, 1020, 1029, 1030, 1031, 1033, 1045, 1055, 1085, 1086, 1089, 1106, 1109, 1113, 1114, 1115, 1120, 1122, 1124, 1125, 1127, 1129, 1135, 1141, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1170, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1212, 1213, 1214, 1215, 1216, 1220, 1222, 1223, 1229, 1230, 1231, 1232, 1237, 1238, 1239, 1240, 1241, 1245, 1246, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1258, 1278, 1291, 1304, 1306, 1311, 1312, 1313, 1315, 1316, 1317, 1319, 1320, 1323], "sweep_start": [1, 546], "sweep_end": [1, 546], "indic": [1, 36, 45, 59, 83, 86, 87, 88, 112, 115, 116, 151, 154, 155, 169, 173, 182, 194, 249, 394, 503, 527, 528, 529, 534, 539, 540, 546, 595, 606, 620, 644, 647, 648, 649, 673, 676, 677, 688, 692, 701, 713, 736, 743, 747, 748, 760, 764, 773, 785, 841, 988, 1088, 1112, 1113, 1114, 1119, 1124, 1125, 1127, 1139, 1163, 1166, 1167, 1168, 1192, 1195, 1196, 1232, 1233, 1235, 1274, 1291, 1318, 1319], "chy0": [2, 4, 6, 7, 11, 547, 549, 551, 552, 559], "255": [2, 4, 6, 11, 398, 547, 549, 551, 559, 992, 1317], "0": [2, 3, 4, 6, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 30, 31, 39, 47, 59, 64, 65, 66, 68, 69, 70, 71, 72, 88, 93, 94, 95, 97, 98, 99, 100, 101, 121, 124, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 162, 169, 194, 197, 199, 200, 201, 202, 203, 204, 205, 221, 222, 229, 232, 233, 234, 235, 236, 237, 251, 252, 253, 267, 272, 288, 289, 296, 299, 300, 301, 302, 303, 305, 321, 322, 331, 332, 333, 336, 337, 338, 339, 340, 342, 358, 359, 368, 369, 370, 373, 374, 375, 376, 377, 394, 398, 445, 446, 447, 450, 456, 460, 462, 464, 465, 469, 472, 473, 474, 476, 477, 481, 482, 483, 488, 495, 496, 497, 498, 500, 503, 504, 506, 508, 509, 510, 512, 513, 514, 517, 520, 523, 524, 525, 527, 528, 531, 532, 533, 534, 535, 536, 537, 540, 547, 548, 549, 551, 554, 559, 562, 566, 568, 569, 570, 572, 579, 580, 586, 587, 599, 608, 620, 625, 626, 627, 629, 630, 631, 632, 633, 649, 654, 655, 656, 658, 659, 660, 661, 662, 682, 685, 688, 713, 716, 717, 719, 720, 721, 723, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 747, 748, 749, 751, 752, 755, 760, 785, 788, 790, 791, 792, 793, 794, 795, 797, 813, 814, 821, 824, 825, 826, 827, 828, 829, 843, 844, 845, 859, 864, 880, 881, 888, 891, 892, 893, 894, 895, 897, 913, 914, 923, 924, 925, 928, 929, 930, 931, 932, 934, 950, 951, 960, 961, 962, 965, 966, 967, 968, 969, 988, 992, 1020, 1029, 1030, 1034, 1036, 1041, 1045, 1047, 1049, 1050, 1054, 1057, 1058, 1059, 1061, 1062, 1066, 1067, 1068, 1073, 1080, 1081, 1082, 1083, 1085, 1088, 1089, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1102, 1105, 1108, 1109, 1110, 1112, 1113, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1125, 1129, 1139, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1168, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1217, 1218, 1221, 1232, 1237, 1238, 1239, 1243, 1244, 1247, 1252, 1267, 1269, 1270, 1271, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323], "chx0": [2, 4, 6, 7, 11, 547, 549, 551, 552, 559], "160": [2, 4, 6, 11, 547, 549, 551, 559, 1306, 1315, 1317, 1318], "xre": [2, 3, 9, 11, 22, 547, 548, 554, 559, 572], "1": [2, 3, 5, 6, 7, 9, 11, 14, 18, 19, 20, 22, 26, 30, 31, 45, 59, 69, 88, 98, 117, 121, 124, 129, 130, 135, 136, 137, 139, 147, 148, 149, 150, 151, 152, 163, 182, 197, 236, 252, 272, 302, 339, 376, 384, 390, 391, 392, 397, 445, 446, 449, 455, 456, 460, 465, 467, 469, 473, 474, 477, 482, 483, 488, 495, 496, 500, 504, 506, 514, 517, 518, 524, 527, 529, 531, 533, 535, 539, 540, 547, 548, 550, 551, 552, 554, 559, 562, 568, 569, 570, 572, 581, 586, 587, 606, 620, 630, 649, 659, 678, 682, 685, 701, 719, 720, 725, 726, 727, 729, 738, 739, 740, 742, 743, 744, 756, 773, 788, 828, 844, 864, 894, 931, 968, 978, 984, 985, 986, 991, 1029, 1030, 1033, 1040, 1041, 1045, 1050, 1052, 1054, 1058, 1059, 1062, 1067, 1068, 1073, 1080, 1081, 1085, 1089, 1091, 1099, 1102, 1103, 1109, 1112, 1114, 1116, 1118, 1120, 1124, 1125, 1127, 1139, 1149, 1168, 1178, 1217, 1218, 1219, 1221, 1231, 1232, 1238, 1244, 1250, 1251, 1258, 1266, 1269, 1270, 1274, 1278, 1279, 1280, 1283, 1284, 1285, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1302, 1304, 1305, 1306, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1323], "yre": [2, 3, 9, 11, 22, 547, 548, 554, 559, 572], "nx": [2, 3, 9, 11, 22, 45, 547, 548, 554, 559, 572, 606, 1127, 1318], "710": [2, 11, 547, 559], "ny": [2, 3, 9, 11, 22, 45, 547, 548, 554, 559, 572, 606, 1127, 1318], "640": [2, 11, 547, 559], "nz": [2, 3, 9, 11, 22, 45, 547, 548, 554, 559, 572, 606, 1127, 1318], "meteoswiss": [2, 11, 30, 31, 547, 559, 586, 587, 1267, 1305, 1306, 1310, 1318, 1319, 1322, 1323], "oper": [2, 3, 9, 11, 135, 136, 173, 175, 182, 189, 194, 394, 444, 529, 536, 547, 548, 554, 559, 692, 694, 701, 708, 713, 725, 726, 764, 766, 773, 780, 785, 988, 1028, 1114, 1121, 1304, 1318, 1319, 1322], "binari": [2, 3, 9, 18, 19, 20, 30, 31, 32, 380, 547, 548, 554, 568, 569, 570, 586, 587, 589, 974, 1317], "retriev": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 35, 37, 45, 65, 66, 68, 69, 70, 71, 72, 94, 95, 97, 98, 99, 100, 101, 135, 136, 148, 164, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 594, 596, 606, 626, 627, 629, 630, 631, 632, 633, 655, 656, 658, 659, 660, 661, 662, 725, 726, 739, 745, 757, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 1127, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1217, 1218, 1232, 1267, 1303, 1304, 1305, 1306, 1307, 1310, 1313, 1318, 1321, 1323], "metadata": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 43, 44, 45, 46, 59, 60, 61, 88, 89, 90, 126, 127, 128, 137, 138, 139, 141, 142, 143, 144, 150, 151, 154, 155, 156, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 450, 457, 476, 477, 483, 497, 503, 517, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 586, 587, 589, 591, 593, 594, 596, 603, 604, 606, 607, 620, 621, 622, 649, 650, 651, 716, 717, 718, 727, 728, 729, 731, 732, 733, 734, 742, 743, 747, 748, 749, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 993, 1031, 1034, 1036, 1042, 1061, 1062, 1068, 1082, 1088, 1102, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1123, 1127, 1128, 1139, 1140, 1141, 1168, 1169, 1170, 1197, 1199, 1204, 1259, 1275, 1292, 1293, 1297, 1320], "dure": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 132, 137, 138, 139, 182, 194, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 500, 527, 536, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 593, 701, 713, 722, 727, 728, 729, 773, 785, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 1085, 1112, 1121, 1318, 1319, 1322, 1325], "ani": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 44, 60, 61, 89, 90, 126, 127, 128, 137, 138, 139, 140, 150, 151, 169, 173, 175, 182, 189, 194, 197, 200, 201, 305, 342, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 446, 501, 524, 531, 532, 547, 548, 549, 550, 551, 552, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 584, 585, 586, 587, 589, 604, 621, 622, 650, 651, 688, 692, 694, 701, 708, 713, 716, 717, 718, 727, 728, 729, 730, 741, 742, 743, 760, 764, 766, 773, 780, 785, 788, 791, 792, 897, 934, 975, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 994, 1030, 1036, 1086, 1109, 1116, 1117, 1140, 1141, 1169, 1170, 1199, 1265, 1311, 1317], "success": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989], "unless": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 72, 101, 120, 122, 123, 139, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 633, 662, 681, 683, 684, 729, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 993, 1152, 1181], "explicitli": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989], "A": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 33, 34, 45, 59, 61, 88, 90, 121, 124, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 168, 169, 197, 198, 199, 200, 201, 202, 203, 204, 205, 239, 252, 258, 272, 305, 331, 342, 368, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 401, 444, 445, 446, 451, 455, 456, 465, 473, 500, 501, 503, 505, 514, 517, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 536, 538, 539, 540, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 591, 593, 606, 620, 622, 649, 651, 682, 685, 688, 716, 717, 718, 719, 720, 723, 725, 726, 727, 728, 729, 731, 732, 733, 734, 737, 741, 742, 743, 747, 748, 749, 751, 752, 760, 788, 789, 790, 791, 792, 793, 794, 795, 797, 831, 844, 850, 864, 897, 923, 934, 960, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 991, 995, 996, 1009, 1028, 1029, 1030, 1035, 1036, 1040, 1041, 1050, 1058, 1085, 1086, 1088, 1090, 1099, 1102, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1121, 1123, 1124, 1125, 1127, 1139, 1141, 1168, 1170, 1242, 1286, 1304, 1308, 1309, 1317, 1319, 1323], "default": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 40, 44, 45, 59, 65, 66, 68, 70, 71, 76, 88, 94, 95, 97, 99, 100, 105, 120, 121, 122, 123, 124, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 154, 155, 156, 158, 159, 169, 173, 175, 182, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 229, 232, 233, 234, 235, 236, 238, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 296, 299, 300, 301, 302, 304, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 332, 333, 336, 337, 338, 339, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 369, 370, 373, 374, 375, 376, 378, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 405, 407, 414, 431, 446, 450, 452, 453, 454, 455, 461, 462, 463, 464, 468, 469, 471, 472, 475, 478, 479, 480, 481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 499, 500, 501, 502, 503, 506, 509, 510, 516, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 538, 539, 547, 548, 549, 553, 554, 558, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 586, 587, 589, 591, 600, 604, 606, 620, 626, 627, 629, 631, 632, 637, 649, 655, 656, 658, 660, 661, 666, 681, 682, 683, 684, 685, 688, 692, 694, 701, 708, 713, 716, 717, 718, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 739, 741, 742, 743, 747, 748, 749, 751, 752, 760, 764, 766, 773, 780, 785, 788, 789, 790, 791, 792, 793, 794, 795, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 821, 824, 825, 826, 827, 828, 830, 839, 841, 843, 844, 845, 847, 849, 856, 857, 859, 861, 863, 871, 872, 873, 874, 875, 876, 877, 878, 879, 881, 882, 883, 888, 891, 892, 893, 894, 896, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 924, 925, 928, 929, 930, 931, 933, 941, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 953, 961, 962, 965, 966, 967, 968, 970, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 999, 1011, 1030, 1034, 1036, 1037, 1038, 1039, 1040, 1046, 1047, 1048, 1049, 1053, 1054, 1056, 1057, 1060, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1084, 1085, 1086, 1087, 1088, 1091, 1094, 1095, 1101, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1123, 1124, 1127, 1139, 1145, 1146, 1148, 1150, 1151, 1156, 1168, 1174, 1175, 1177, 1179, 1180, 1185, 1200, 1201, 1202, 1219, 1221, 1231, 1232, 1259, 1294, 1295, 1304, 1309, 1319, 1322, 1323, 1325], "introduct": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 582, 585, 975, 980, 982, 983, 984, 985, 986, 987, 988, 1323], "addit": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 34, 137, 138, 139, 145, 221, 222, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 288, 289, 296, 300, 301, 302, 321, 322, 329, 330, 331, 332, 333, 334, 337, 338, 339, 358, 359, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 444, 446, 474, 475, 500, 542, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 593, 727, 728, 729, 735, 813, 814, 821, 825, 826, 827, 828, 840, 841, 843, 844, 845, 846, 847, 848, 849, 859, 860, 861, 862, 863, 880, 881, 888, 892, 893, 894, 913, 914, 921, 922, 923, 924, 925, 926, 929, 930, 931, 950, 951, 958, 959, 960, 961, 962, 963, 966, 967, 968, 971, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 1020, 1028, 1030, 1059, 1060, 1085, 1242, 1272, 1274, 1301, 1304, 1309], "specif": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 126, 127, 128, 143, 144, 154, 155, 156, 182, 194, 342, 370, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 446, 501, 505, 506, 507, 509, 510, 516, 517, 524, 525, 526, 527, 528, 529, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 701, 713, 716, 717, 718, 733, 734, 747, 748, 749, 773, 785, 934, 962, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 1030, 1086, 1090, 1091, 1092, 1094, 1095, 1101, 1102, 1109, 1110, 1111, 1112, 1113, 1114, 1242, 1269, 1283, 1304, 1309, 1319, 1323, 1325], "py": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 44, 45, 59, 88, 120, 122, 123, 126, 127, 128, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 169, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 305, 322, 324, 332, 333, 337, 338, 339, 342, 359, 361, 369, 370, 374, 375, 376, 386, 387, 388, 389, 393, 395, 398, 450, 451, 452, 453, 454, 455, 461, 462, 463, 464, 468, 469, 471, 472, 478, 479, 480, 481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 502, 503, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 538, 541, 542, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 586, 587, 590, 591, 592, 604, 605, 606, 620, 649, 681, 683, 684, 688, 716, 717, 718, 723, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 741, 742, 743, 747, 748, 749, 751, 752, 758, 760, 788, 789, 790, 791, 792, 793, 794, 795, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 897, 914, 916, 924, 925, 929, 930, 931, 934, 951, 953, 961, 962, 966, 967, 968, 980, 981, 982, 983, 987, 989, 992, 1019, 1031, 1034, 1035, 1037, 1038, 1039, 1040, 1046, 1047, 1048, 1049, 1053, 1054, 1056, 1057, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1123, 1127, 1139, 1168, 1211, 1235, 1236, 1259, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1310, 1311, 1312, 1313, 1315, 1318, 1319, 1321, 1322, 1325], "art": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 44, 45, 59, 88, 120, 122, 123, 126, 127, 128, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 156, 158, 159, 169, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 305, 322, 324, 332, 333, 337, 338, 339, 342, 359, 361, 369, 370, 374, 375, 376, 386, 387, 388, 389, 393, 395, 398, 450, 451, 452, 453, 454, 455, 461, 462, 463, 464, 468, 469, 471, 472, 478, 479, 480, 481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 502, 503, 517, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 538, 542, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 586, 587, 590, 591, 592, 604, 605, 606, 620, 649, 681, 683, 684, 688, 716, 717, 718, 723, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 741, 742, 743, 747, 748, 749, 751, 752, 758, 760, 788, 789, 790, 791, 792, 793, 794, 795, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 897, 914, 916, 924, 925, 929, 930, 931, 934, 951, 953, 961, 962, 966, 967, 968, 980, 981, 982, 983, 987, 989, 992, 1019, 1034, 1035, 1037, 1038, 1039, 1040, 1046, 1047, 1048, 1049, 1053, 1054, 1056, 1057, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1123, 1127, 1139, 1168, 1211, 1235, 1236, 1259, 1266, 1267, 1269, 1270, 1272, 1273, 1274, 1275, 1282, 1283, 1285, 1302, 1310, 1311, 1312, 1313, 1315, 1318, 1319, 1322, 1325], "configur": [2, 3, 4, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 33, 38, 39, 41, 44, 126, 127, 128, 133, 137, 138, 139, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 197, 198, 199, 200, 201, 202, 203, 204, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 450, 452, 453, 454, 455, 461, 462, 463, 464, 468, 469, 471, 472, 478, 479, 480, 481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 502, 503, 517, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 538, 547, 548, 549, 553, 554, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 579, 580, 581, 582, 585, 591, 592, 598, 599, 601, 604, 716, 717, 718, 723, 727, 728, 729, 731, 732, 733, 734, 737, 741, 742, 743, 747, 748, 749, 751, 752, 788, 789, 790, 791, 792, 793, 794, 795, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 1034, 1037, 1038, 1039, 1040, 1046, 1047, 1048, 1049, 1053, 1054, 1056, 1057, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1102, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1123, 1259, 1274, 1278, 1303, 1319, 1323], "float": [2, 3, 4, 6, 7, 9, 11, 14, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 39, 72, 101, 117, 118, 119, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 173, 197, 199, 200, 201, 202, 203, 204, 205, 206, 222, 224, 225, 229, 230, 232, 233, 234, 235, 236, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 266, 267, 268, 269, 270, 271, 272, 273, 289, 291, 292, 296, 297, 299, 300, 301, 302, 305, 306, 322, 324, 325, 331, 332, 333, 334, 336, 337, 338, 339, 342, 343, 359, 361, 362, 368, 369, 370, 371, 373, 374, 375, 376, 398, 441, 442, 443, 444, 446, 447, 449, 450, 451, 456, 457, 460, 462, 465, 470, 472, 473, 474, 476, 477, 482, 483, 495, 496, 497, 498, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 543, 547, 548, 549, 551, 552, 554, 559, 562, 566, 568, 569, 570, 572, 579, 580, 581, 585, 586, 587, 599, 633, 662, 678, 679, 680, 682, 685, 692, 716, 717, 718, 719, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 764, 788, 790, 791, 792, 793, 794, 795, 797, 798, 814, 816, 817, 821, 822, 824, 825, 826, 827, 828, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 856, 858, 859, 860, 861, 862, 863, 864, 865, 881, 883, 884, 888, 889, 891, 892, 893, 894, 897, 898, 914, 916, 917, 923, 924, 925, 926, 928, 929, 930, 931, 934, 935, 951, 953, 954, 960, 961, 962, 963, 965, 966, 967, 968, 971, 992, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1030, 1033, 1034, 1035, 1041, 1042, 1045, 1047, 1050, 1055, 1057, 1058, 1059, 1061, 1062, 1067, 1068, 1080, 1081, 1082, 1083, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1152, 1181, 1199, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1252, 1260, 1261, 1262, 1267, 1318], "swiss": [2, 4, 6, 7, 11, 125, 547, 549, 551, 552, 559, 686, 1310], "coordin": [2, 3, 4, 6, 7, 9, 11, 22, 45, 47, 53, 59, 70, 88, 99, 117, 118, 119, 120, 121, 122, 123, 124, 125, 162, 211, 222, 229, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 278, 289, 296, 300, 301, 302, 311, 322, 332, 333, 337, 338, 339, 348, 359, 369, 370, 374, 375, 376, 397, 444, 446, 496, 503, 517, 547, 548, 549, 551, 552, 554, 559, 572, 606, 608, 614, 620, 631, 649, 660, 678, 679, 680, 681, 682, 683, 684, 685, 686, 755, 803, 814, 821, 825, 826, 827, 828, 841, 847, 849, 859, 861, 863, 870, 881, 888, 892, 893, 894, 903, 914, 924, 925, 929, 930, 931, 940, 951, 961, 962, 966, 967, 968, 991, 1019, 1020, 1022, 1028, 1030, 1031, 1081, 1088, 1102, 1127, 1129, 1135, 1139, 1150, 1168, 1179, 1199, 1216, 1241, 1267, 1268, 1272, 1275, 1277, 1278, 1279, 1280, 1302, 1309, 1315, 1320], "posit": [2, 4, 6, 7, 11, 25, 26, 59, 88, 121, 124, 127, 128, 137, 147, 148, 149, 153, 161, 162, 164, 475, 477, 483, 503, 514, 527, 531, 532, 533, 539, 540, 547, 549, 551, 552, 559, 580, 581, 620, 649, 682, 685, 717, 718, 727, 738, 739, 740, 745, 746, 754, 755, 757, 1036, 1060, 1062, 1068, 1088, 1099, 1112, 1116, 1117, 1118, 1124, 1125, 1139, 1168, 1217, 1218, 1278, 1283, 1285, 1318, 1319, 1320], "south": [2, 4, 6, 7, 11, 547, 549, 551, 552, 559, 1031, 1287, 1318], "western": [2, 4, 6, 7, 11, 547, 549, 551, 552, 559], "point": [2, 3, 4, 6, 7, 9, 11, 22, 44, 45, 47, 61, 90, 122, 126, 127, 128, 142, 143, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 211, 225, 230, 236, 248, 249, 250, 266, 278, 292, 297, 302, 305, 311, 325, 330, 331, 334, 339, 348, 362, 367, 368, 371, 376, 388, 389, 392, 394, 398, 444, 445, 446, 448, 456, 465, 473, 476, 477, 482, 483, 495, 498, 500, 514, 531, 536, 547, 548, 549, 551, 552, 554, 559, 572, 604, 606, 608, 622, 651, 683, 716, 717, 718, 732, 733, 737, 738, 739, 740, 743, 746, 747, 748, 749, 750, 803, 817, 822, 828, 840, 841, 842, 858, 870, 884, 889, 894, 897, 903, 917, 922, 923, 926, 931, 940, 954, 959, 960, 963, 968, 982, 983, 986, 988, 992, 1028, 1029, 1030, 1041, 1050, 1058, 1061, 1062, 1067, 1068, 1080, 1083, 1085, 1099, 1116, 1121, 1127, 1129, 1141, 1170, 1199, 1219, 1221, 1231, 1232, 1236, 1238, 1247, 1250, 1265, 1267, 1272, 1284, 1291, 1301, 1304, 1307, 1309, 1313, 1315, 1318, 1319, 1320, 1321], "grid": [2, 3, 4, 6, 7, 9, 11, 12, 18, 22, 30, 39, 59, 88, 224, 226, 234, 236, 239, 243, 248, 250, 251, 252, 253, 254, 256, 258, 259, 264, 266, 267, 268, 270, 291, 293, 302, 324, 326, 339, 361, 363, 376, 387, 388, 397, 398, 399, 441, 442, 443, 444, 445, 446, 465, 473, 482, 495, 498, 500, 517, 522, 523, 536, 547, 548, 549, 551, 552, 554, 559, 560, 564, 568, 572, 586, 599, 620, 649, 816, 818, 826, 828, 831, 835, 840, 842, 843, 844, 845, 846, 848, 850, 851, 856, 858, 859, 860, 862, 883, 885, 894, 916, 918, 931, 953, 955, 968, 981, 982, 991, 992, 993, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1050, 1058, 1067, 1080, 1083, 1085, 1102, 1107, 1108, 1121, 1139, 1168, 1199, 1203, 1205, 1206, 1227, 1241, 1243, 1261, 1262, 1267, 1272, 1277, 1281, 1282, 1285, 1295, 1298, 1300, 1304, 1309, 1310, 1317, 1318, 1319, 1321], "resolut": [2, 3, 9, 11, 22, 59, 88, 129, 130, 135, 136, 222, 224, 225, 229, 230, 233, 234, 235, 236, 252, 264, 289, 291, 292, 296, 297, 300, 301, 302, 322, 324, 325, 332, 333, 334, 337, 338, 339, 359, 361, 362, 369, 370, 371, 374, 375, 376, 390, 448, 456, 465, 473, 482, 495, 498, 500, 517, 521, 527, 533, 536, 547, 548, 554, 559, 572, 620, 649, 719, 720, 725, 726, 814, 816, 817, 821, 822, 825, 826, 827, 828, 844, 856, 881, 883, 884, 888, 889, 892, 893, 894, 914, 916, 917, 924, 925, 926, 929, 930, 931, 951, 953, 954, 961, 962, 963, 966, 967, 968, 984, 1031, 1041, 1050, 1058, 1067, 1080, 1083, 1085, 1102, 1106, 1112, 1118, 1121, 1139, 1168, 1232, 1275, 1288, 1291, 1313, 1315, 1316, 1317, 1318, 1319], "km": [2, 3, 9, 11, 22, 117, 121, 124, 205, 225, 230, 231, 238, 272, 292, 297, 298, 304, 305, 325, 334, 335, 341, 342, 362, 370, 371, 372, 378, 449, 457, 470, 497, 500, 501, 517, 520, 521, 524, 527, 547, 548, 554, 559, 572, 678, 682, 685, 797, 817, 822, 823, 830, 864, 884, 889, 890, 896, 897, 917, 926, 927, 933, 934, 954, 962, 963, 964, 970, 1033, 1042, 1055, 1082, 1085, 1086, 1102, 1105, 1106, 1109, 1112, 1232, 1234, 1260, 1287, 1292, 1293, 1295, 1302, 1315, 1318, 1319], "int": [2, 3, 9, 11, 14, 16, 22, 26, 39, 45, 47, 59, 65, 66, 68, 69, 70, 71, 72, 88, 94, 95, 97, 98, 99, 100, 101, 128, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 154, 155, 156, 158, 159, 164, 182, 194, 198, 200, 207, 208, 209, 221, 225, 229, 230, 232, 233, 234, 236, 243, 244, 245, 246, 251, 252, 253, 259, 260, 261, 262, 264, 267, 274, 275, 276, 288, 292, 296, 297, 299, 300, 302, 307, 308, 309, 321, 325, 332, 333, 334, 336, 337, 339, 344, 345, 346, 358, 362, 369, 370, 371, 373, 374, 376, 398, 446, 451, 455, 456, 460, 464, 465, 469, 470, 471, 472, 473, 474, 475, 481, 482, 487, 488, 490, 491, 495, 500, 501, 504, 514, 517, 525, 526, 527, 529, 531, 533, 535, 537, 539, 540, 543, 547, 548, 554, 559, 562, 566, 572, 581, 599, 606, 608, 620, 626, 627, 629, 630, 631, 632, 633, 649, 655, 656, 658, 659, 660, 661, 662, 701, 713, 718, 723, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 738, 739, 742, 743, 745, 747, 748, 749, 751, 752, 757, 773, 785, 789, 791, 799, 800, 801, 813, 817, 821, 822, 824, 825, 826, 828, 835, 836, 837, 838, 843, 844, 845, 851, 852, 853, 854, 856, 859, 866, 867, 868, 880, 884, 888, 889, 891, 892, 894, 899, 900, 901, 913, 917, 924, 925, 926, 928, 929, 931, 936, 937, 938, 950, 954, 961, 962, 963, 965, 966, 968, 992, 1030, 1031, 1035, 1040, 1041, 1045, 1049, 1050, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1066, 1067, 1072, 1073, 1075, 1076, 1080, 1085, 1086, 1089, 1099, 1102, 1110, 1111, 1112, 1114, 1116, 1118, 1120, 1122, 1124, 1125, 1127, 1129, 1139, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1168, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1200, 1201, 1202, 1216, 1219, 1221, 1231, 1232, 1233, 1235, 1237, 1241, 1264, 1318, 1323], "dimens": [2, 3, 9, 11, 22, 45, 88, 137, 388, 446, 500, 516, 522, 527, 529, 536, 547, 548, 554, 559, 572, 606, 649, 727, 982, 1030, 1036, 1085, 1101, 1107, 1112, 1114, 1121, 1127, 1168, 1241, 1261, 1262, 1302, 1304, 1311, 1315, 1318, 1320], "1536": [3, 9, 548, 554], "dtype": [3, 8, 169, 446, 548, 553, 688, 760, 1030, 1267, 1311, 1313, 1320], "float32": [3, 16, 26, 399, 548, 566, 581, 993, 1267, 1302, 1311, 1313, 1320], "date_format": [3, 9, 22, 548, 554, 572], "added_tim": [3, 9, 22, 548, 554, 572], "86400": [3, 548], "x_offset": [3, 9, 22, 548, 554, 572], "619652": [3, 9, 548, 554], "074056": [3, 9, 548, 554], "y_offset": [3, 9, 22, 548, 554, 572], "3526818": [3, 9, 548, 554], "337932": [3, 9, 548, 554], "lat_0": [3, 9, 22, 45, 59, 88, 121, 124, 333, 370, 548, 554, 572, 606, 620, 649, 682, 685, 925, 962, 1127, 1139, 1168, 1291, 1319], "90": [3, 9, 515, 548, 554, 1100, 1247, 1323], "lon_0": [3, 9, 22, 45, 59, 88, 121, 124, 333, 370, 548, 554, 572, 606, 620, 649, 682, 685, 925, 962, 1127, 1139, 1168, 1291, 1319], "proj": [3, 22, 45, 52, 59, 88, 120, 122, 123, 264, 342, 548, 572, 606, 613, 620, 649, 681, 683, 684, 856, 934, 1127, 1134, 1139, 1168], "gnom": [3, 548], "rainfall_accumul": [3, 548], "meteofr": [3, 9, 12, 22, 548, 554, 560, 572, 1309], "stereopolar": [3, 9, 548, 554], "project": [3, 9, 21, 22, 45, 48, 52, 59, 88, 120, 121, 122, 123, 124, 227, 239, 251, 252, 253, 264, 294, 305, 327, 333, 364, 370, 388, 397, 398, 446, 465, 473, 482, 495, 498, 515, 548, 554, 571, 572, 590, 606, 609, 613, 620, 649, 681, 682, 683, 684, 685, 819, 831, 843, 844, 845, 856, 886, 897, 919, 925, 956, 962, 982, 991, 992, 1030, 1031, 1050, 1058, 1067, 1080, 1083, 1100, 1127, 1130, 1134, 1139, 1168, 1274, 1275, 1278, 1284, 1285, 1291, 1298, 1302, 1304, 1309, 1312, 1313, 1315, 1316, 1318, 1319, 1322], "type": [3, 8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 34, 40, 59, 88, 138, 139, 154, 155, 156, 157, 205, 272, 305, 342, 381, 386, 388, 389, 390, 391, 393, 394, 395, 399, 400, 447, 460, 465, 473, 482, 495, 498, 504, 506, 524, 527, 537, 548, 553, 562, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 585, 586, 587, 593, 600, 620, 649, 728, 729, 747, 748, 749, 750, 797, 864, 897, 934, 975, 980, 982, 983, 984, 985, 987, 988, 989, 993, 994, 1045, 1050, 1058, 1067, 1080, 1083, 1089, 1091, 1109, 1112, 1122, 1139, 1168, 1219, 1221, 1317, 1319, 1320, 1323], "date": [3, 9, 22, 382, 383, 548, 554, 572, 976, 977, 1266, 1274, 1275], "second": [3, 9, 22, 55, 56, 57, 58, 61, 72, 90, 101, 117, 137, 394, 401, 514, 529, 539, 548, 554, 572, 616, 617, 618, 619, 622, 633, 651, 662, 678, 727, 988, 996, 1020, 1099, 1114, 1124, 1141, 1152, 1170, 1181, 1255, 1256, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1316, 1317, 1320, 1323], "nomin": [3, 9, 14, 22, 24, 25, 548, 554, 562, 572, 579, 580], "24h": [3, 9, 548, 554], "accumul": [3, 9, 531, 548, 554, 1116, 1267, 1304], "mf": [3, 9, 147, 148, 149, 548, 554, 738, 739, 740], "x": [3, 9, 21, 22, 45, 51, 53, 71, 79, 88, 100, 108, 117, 118, 119, 120, 121, 122, 123, 124, 205, 211, 215, 222, 224, 227, 229, 232, 233, 234, 235, 236, 238, 249, 251, 255, 257, 267, 269, 271, 272, 278, 282, 289, 291, 294, 296, 299, 300, 301, 302, 304, 305, 311, 315, 322, 324, 327, 330, 332, 336, 337, 338, 339, 341, 342, 348, 352, 359, 361, 364, 367, 369, 373, 374, 375, 376, 378, 441, 442, 443, 444, 445, 446, 460, 500, 505, 519, 522, 523, 527, 528, 529, 536, 537, 548, 554, 571, 572, 606, 612, 614, 632, 640, 649, 661, 669, 678, 679, 680, 681, 682, 683, 684, 685, 797, 803, 807, 814, 816, 819, 821, 824, 825, 826, 827, 828, 830, 841, 843, 847, 849, 859, 861, 863, 864, 870, 874, 881, 883, 886, 888, 891, 892, 893, 894, 896, 897, 903, 907, 914, 916, 919, 922, 924, 928, 929, 930, 931, 933, 934, 940, 944, 951, 953, 956, 959, 961, 965, 966, 967, 968, 970, 1020, 1024, 1025, 1026, 1028, 1029, 1030, 1045, 1085, 1090, 1104, 1107, 1108, 1112, 1113, 1114, 1121, 1122, 1127, 1133, 1135, 1151, 1159, 1168, 1180, 1188, 1199, 1241, 1278, 1284, 1285, 1294, 1295, 1304, 1315, 1316, 1318, 1319, 1320, 1322], "offset": [3, 9, 18, 19, 20, 22, 30, 31, 32, 126, 133, 150, 151, 158, 159, 205, 272, 305, 331, 342, 368, 462, 472, 500, 548, 554, 568, 569, 570, 572, 586, 587, 589, 716, 723, 742, 743, 751, 752, 797, 864, 897, 923, 934, 960, 1047, 1057, 1085, 1247], "origin": [3, 9, 22, 45, 53, 137, 138, 139, 205, 272, 305, 342, 394, 396, 397, 401, 430, 446, 548, 554, 572, 606, 614, 727, 728, 729, 797, 864, 897, 934, 988, 990, 991, 996, 998, 1030, 1127, 1135, 1224, 1225, 1243, 1278, 1279, 1280, 1303, 1304, 1309, 1323], "stereo": [3, 9, 548, 554], "polar": [3, 9, 26, 142, 143, 144, 147, 148, 149, 152, 154, 155, 156, 197, 388, 389, 503, 517, 529, 548, 554, 573, 581, 732, 733, 734, 738, 739, 740, 744, 747, 748, 749, 788, 982, 983, 1031, 1088, 1102, 1114, 1267, 1319], "correspond": [3, 9, 13, 22, 121, 124, 169, 221, 251, 252, 253, 267, 288, 321, 358, 382, 435, 446, 466, 485, 537, 543, 548, 554, 561, 572, 682, 685, 688, 760, 813, 843, 844, 845, 859, 880, 913, 950, 976, 1003, 1014, 1030, 1051, 1070, 1122, 1231, 1235, 1237, 1238, 1239, 1248, 1249, 1250, 1251, 1274, 1286, 1313, 1317, 1319, 1320, 1323], "northwest": [3, 9, 22, 548, 554, 572], "corner": [3, 9, 22, 224, 291, 324, 331, 361, 368, 548, 554, 572, 816, 883, 916, 923, 953, 960, 1318], "metropolitan": [3, 9, 22, 548, 554, 572], "french": [3, 9, 22, 548, 554, 572], "composit": [3, 9, 22, 398, 548, 554, 572, 992, 1036, 1272, 1301, 1307, 1321], "9": [3, 9, 22, 30, 31, 129, 135, 136, 197, 236, 302, 339, 376, 388, 524, 531, 533, 548, 554, 572, 586, 587, 719, 725, 726, 788, 828, 894, 931, 968, 982, 1109, 1116, 1118, 1231, 1275, 1286, 1295, 1298, 1302, 1303, 1304, 1311, 1316, 1317, 1319, 1320], "965": [3, 9, 22, 548, 554, 572], "53": [3, 9, 22, 150, 151, 548, 554, 572, 742, 743], "670": [3, 9, 22, 548, 554, 572], "deg": [3, 9, 14, 22, 24, 25, 125, 140, 145, 153, 163, 197, 199, 203, 449, 465, 495, 496, 498, 501, 515, 517, 520, 524, 527, 548, 554, 562, 572, 579, 580, 686, 730, 735, 746, 756, 788, 790, 794, 1033, 1050, 1080, 1081, 1083, 1086, 1100, 1102, 1105, 1109, 1112, 1217, 1233, 1244, 1261, 1262, 1306, 1318], "latitud": [3, 9, 22, 29, 45, 47, 50, 53, 55, 59, 70, 88, 99, 120, 121, 122, 124, 125, 161, 162, 205, 227, 228, 248, 250, 251, 252, 254, 255, 256, 264, 266, 268, 269, 270, 272, 294, 295, 305, 327, 328, 329, 331, 333, 342, 364, 365, 366, 368, 370, 446, 465, 495, 498, 548, 554, 572, 585, 606, 608, 611, 614, 616, 620, 631, 649, 660, 681, 682, 683, 685, 686, 754, 755, 797, 819, 820, 840, 842, 843, 844, 846, 847, 848, 856, 858, 860, 861, 862, 864, 886, 887, 897, 919, 920, 921, 923, 925, 934, 956, 957, 958, 960, 962, 1027, 1030, 1050, 1080, 1083, 1127, 1129, 1132, 1135, 1139, 1150, 1168, 1179, 1217, 1234, 1235, 1236, 1244, 1260, 1267, 1272, 1273, 1276, 1284, 1291, 1298, 1302, 1304, 1311, 1312, 1318, 1319, 1320, 1321], "longitud": [3, 9, 22, 29, 45, 47, 50, 53, 55, 59, 70, 88, 99, 120, 121, 122, 124, 125, 161, 162, 205, 227, 228, 248, 250, 251, 252, 254, 256, 257, 264, 266, 268, 270, 271, 272, 294, 295, 305, 327, 328, 329, 331, 333, 342, 364, 365, 366, 368, 370, 446, 465, 495, 498, 548, 554, 572, 585, 606, 608, 611, 614, 616, 620, 631, 649, 660, 681, 682, 683, 685, 686, 754, 755, 797, 819, 820, 840, 842, 843, 844, 846, 848, 849, 856, 858, 860, 862, 863, 864, 886, 887, 897, 919, 920, 921, 923, 925, 934, 956, 957, 958, 960, 962, 1030, 1050, 1080, 1083, 1127, 1129, 1132, 1135, 1139, 1150, 1168, 1179, 1217, 1234, 1235, 1236, 1244, 1260, 1272, 1273, 1276, 1284, 1291, 1298, 1302, 1304, 1311, 1312, 1318, 1319, 1320, 1321], "stereograph": [3, 9, 548, 554], "can": [3, 4, 13, 14, 16, 18, 22, 24, 25, 26, 30, 31, 32, 44, 59, 68, 71, 88, 97, 100, 120, 122, 123, 127, 128, 135, 136, 137, 140, 142, 143, 146, 147, 148, 149, 154, 155, 156, 157, 169, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 221, 288, 321, 358, 380, 388, 389, 391, 394, 398, 399, 400, 428, 445, 446, 453, 456, 460, 465, 469, 472, 473, 482, 488, 490, 495, 496, 498, 501, 503, 517, 520, 524, 527, 528, 529, 531, 533, 534, 537, 540, 541, 548, 549, 561, 562, 564, 566, 568, 572, 579, 580, 581, 586, 587, 589, 590, 604, 620, 629, 632, 649, 658, 661, 681, 683, 684, 688, 701, 713, 717, 718, 725, 726, 727, 730, 732, 733, 737, 738, 739, 740, 741, 747, 748, 749, 750, 760, 773, 785, 788, 789, 790, 791, 792, 793, 794, 795, 813, 880, 913, 950, 974, 982, 983, 985, 988, 992, 993, 994, 1029, 1030, 1031, 1038, 1041, 1045, 1050, 1054, 1057, 1058, 1067, 1073, 1075, 1080, 1081, 1083, 1086, 1088, 1102, 1105, 1109, 1112, 1113, 1114, 1116, 1118, 1119, 1122, 1125, 1139, 1148, 1151, 1168, 1177, 1180, 1219, 1248, 1254, 1267, 1274, 1275, 1278, 1283, 1302, 1304, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1325], "webmerc": [3, 22, 548, 572], "stere": [3, 22, 370, 548, 572, 962], "reader": [4, 14, 16, 549, 562, 566, 1267, 1275, 1309], "c": [4, 14, 16, 76, 105, 117, 121, 124, 126, 128, 132, 137, 139, 264, 370, 428, 455, 460, 465, 473, 475, 505, 519, 527, 528, 529, 534, 537, 540, 545, 549, 562, 566, 637, 666, 678, 682, 685, 716, 718, 722, 727, 729, 856, 962, 1040, 1045, 1050, 1058, 1060, 1090, 1104, 1112, 1113, 1114, 1119, 1122, 1125, 1156, 1185, 1204, 1232, 1267, 1278, 1309, 1310, 1312, 1315, 1317, 1318, 1322, 1323, 1325], "metranet": [4, 6, 7, 14, 16, 545, 549, 551, 552, 556, 557, 562, 566, 573, 574, 1267, 1310], "product": [4, 392, 394, 517, 540, 549, 986, 988, 1036, 1102, 1125, 1267], "librari": [4, 14, 16, 162, 381, 391, 394, 397, 398, 545, 549, 562, 566, 755, 975, 985, 988, 991, 992, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1322, 1323], "either": [4, 14, 16, 18, 30, 31, 127, 128, 137, 138, 139, 142, 143, 146, 154, 155, 156, 164, 222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 299, 300, 301, 302, 322, 323, 324, 332, 336, 337, 338, 339, 359, 360, 361, 369, 373, 374, 375, 376, 383, 439, 465, 473, 482, 495, 501, 502, 506, 509, 510, 517, 524, 549, 562, 564, 566, 568, 586, 587, 717, 718, 727, 728, 729, 732, 733, 737, 747, 748, 749, 757, 814, 815, 816, 821, 824, 825, 826, 827, 828, 839, 841, 843, 844, 845, 847, 849, 857, 859, 861, 863, 881, 882, 883, 888, 891, 892, 893, 894, 914, 915, 916, 924, 928, 929, 930, 931, 951, 952, 953, 961, 965, 966, 967, 968, 977, 1007, 1017, 1050, 1058, 1067, 1080, 1086, 1087, 1091, 1094, 1095, 1102, 1109, 1304, 1309, 1317, 1318, 1319, 1322, 1323], "python": [4, 14, 16, 44, 398, 541, 549, 562, 566, 604, 992, 1267, 1269, 1270, 1272, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1319, 1320, 1322, 1325], "delay_field_load": [5, 6, 7, 28, 381, 384, 385, 388, 389, 390, 393, 395, 550, 551, 552, 584, 975, 978, 979, 982, 983, 984, 987, 989], "delai": [5, 6, 7, 28, 381, 384, 385, 388, 389, 390, 393, 550, 551, 552, 584, 975, 978, 979, 982, 983, 984, 987, 1232], "load": [5, 6, 7, 28, 44, 381, 384, 385, 388, 389, 390, 393, 401, 437, 545, 550, 551, 552, 584, 604, 975, 978, 979, 982, 983, 984, 987, 995, 996, 1005, 1317, 1318, 1319, 1320], "until": [5, 6, 7, 28, 44, 138, 381, 384, 385, 388, 389, 390, 393, 550, 551, 552, 584, 604, 728, 975, 978, 979, 982, 983, 984, 987, 1318], "particular": [5, 6, 7, 28, 381, 384, 385, 388, 389, 390, 393, 446, 496, 518, 531, 550, 551, 552, 584, 975, 978, 979, 982, 983, 984, 987, 1030, 1081, 1103, 1116, 1309], "access": [5, 6, 7, 28, 34, 45, 59, 70, 71, 88, 99, 100, 169, 381, 384, 385, 388, 389, 390, 393, 401, 550, 551, 552, 584, 593, 606, 620, 631, 632, 649, 660, 661, 688, 760, 975, 978, 979, 982, 983, 984, 987, 996, 1127, 1139, 1150, 1151, 1168, 1179, 1180, 1198, 1274, 1275, 1315, 1320], "In": [5, 6, 7, 28, 30, 31, 120, 122, 123, 139, 145, 381, 384, 385, 388, 389, 390, 392, 393, 439, 496, 527, 540, 550, 551, 552, 584, 586, 587, 681, 683, 684, 729, 735, 972, 975, 978, 979, 982, 983, 984, 986, 987, 1007, 1017, 1020, 1036, 1081, 1112, 1125, 1216, 1269, 1270, 1275, 1304, 1309, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1322, 1323], "attribut": [5, 6, 7, 18, 19, 20, 28, 30, 31, 32, 45, 48, 49, 50, 51, 52, 59, 70, 71, 77, 78, 79, 80, 88, 99, 100, 106, 107, 108, 109, 137, 165, 169, 182, 194, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 381, 384, 385, 386, 388, 389, 390, 393, 396, 397, 400, 477, 550, 551, 552, 564, 568, 569, 570, 584, 586, 587, 589, 606, 609, 610, 611, 612, 613, 620, 631, 632, 638, 639, 640, 641, 649, 660, 661, 667, 668, 669, 670, 688, 701, 713, 727, 760, 773, 785, 814, 821, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 975, 978, 979, 980, 982, 983, 984, 987, 990, 991, 994, 1062, 1127, 1130, 1131, 1132, 1133, 1134, 1139, 1150, 1151, 1157, 1158, 1159, 1160, 1168, 1179, 1180, 1186, 1187, 1188, 1189, 1274, 1302, 1311, 1317, 1320], "lazyloaddict": [5, 6, 7, 28, 45, 59, 88, 381, 384, 385, 388, 389, 390, 393, 550, 551, 552, 584, 606, 620, 649, 975, 978, 979, 982, 983, 984, 987, 1127, 1139, 1168], "provid": [5, 6, 7, 8, 13, 28, 59, 62, 88, 91, 137, 228, 252, 295, 328, 333, 365, 383, 384, 385, 386, 391, 394, 398, 399, 400, 401, 433, 434, 440, 517, 524, 550, 551, 552, 553, 561, 584, 620, 623, 649, 652, 727, 820, 844, 887, 920, 925, 957, 977, 978, 979, 980, 985, 988, 992, 993, 994, 996, 1001, 1002, 1008, 1009, 1012, 1013, 1018, 1020, 1102, 1109, 1139, 1142, 1168, 1171, 1242, 1259, 1266, 1275, 1302, 1304, 1309, 1316, 1317, 1319, 1322, 1323], "speedup": [5, 6, 7, 28, 251, 252, 333, 370, 384, 385, 550, 551, 552, 584, 843, 844, 925, 962, 978, 979], "number": [5, 6, 7, 14, 16, 26, 28, 32, 44, 45, 59, 65, 66, 68, 69, 70, 71, 72, 88, 94, 95, 97, 98, 99, 100, 101, 126, 127, 128, 133, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 158, 159, 164, 221, 225, 229, 230, 232, 233, 234, 235, 252, 288, 292, 296, 297, 299, 300, 301, 321, 325, 332, 333, 334, 336, 337, 338, 358, 362, 369, 370, 371, 373, 374, 375, 384, 385, 392, 398, 399, 417, 444, 445, 446, 456, 460, 465, 469, 470, 473, 474, 475, 482, 488, 495, 501, 503, 504, 514, 523, 525, 526, 527, 529, 531, 533, 535, 537, 542, 550, 551, 552, 562, 566, 581, 584, 589, 604, 606, 620, 626, 627, 629, 630, 631, 632, 633, 649, 655, 656, 658, 659, 660, 661, 662, 716, 717, 718, 723, 725, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 739, 742, 743, 745, 747, 748, 749, 750, 751, 752, 757, 813, 817, 821, 822, 824, 825, 826, 827, 844, 880, 884, 888, 889, 891, 892, 893, 913, 917, 924, 925, 926, 928, 929, 930, 950, 954, 961, 962, 963, 965, 966, 967, 972, 978, 979, 986, 992, 993, 1028, 1029, 1030, 1031, 1041, 1045, 1050, 1054, 1055, 1058, 1059, 1060, 1067, 1073, 1080, 1086, 1088, 1089, 1099, 1108, 1110, 1111, 1112, 1114, 1116, 1118, 1120, 1122, 1127, 1139, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1168, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1199, 1200, 1201, 1202, 1219, 1221, 1231, 1232, 1237, 1238, 1239, 1248, 1249, 1250, 1251, 1265, 1283, 1285, 1309, 1317, 1318, 1320, 1323], "gate": [5, 6, 7, 28, 59, 69, 70, 71, 88, 98, 99, 100, 117, 118, 119, 126, 127, 128, 133, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 150, 151, 154, 155, 156, 158, 159, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 272, 289, 296, 300, 301, 305, 322, 332, 333, 337, 338, 342, 359, 369, 370, 374, 375, 384, 385, 390, 391, 392, 393, 444, 445, 446, 474, 475, 502, 503, 512, 513, 514, 527, 528, 529, 530, 531, 532, 533, 534, 539, 540, 550, 551, 552, 584, 620, 630, 631, 632, 649, 659, 660, 661, 678, 679, 680, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 723, 727, 728, 729, 730, 731, 732, 733, 735, 737, 739, 741, 742, 743, 747, 748, 749, 751, 752, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 814, 821, 825, 826, 827, 841, 847, 849, 859, 861, 863, 864, 881, 888, 892, 893, 897, 914, 924, 925, 929, 930, 934, 951, 961, 962, 966, 967, 978, 979, 984, 985, 986, 987, 1020, 1028, 1029, 1030, 1031, 1059, 1060, 1087, 1088, 1097, 1098, 1099, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1124, 1125, 1139, 1149, 1150, 1151, 1168, 1178, 1179, 1180, 1200, 1201, 1202, 1216, 1217, 1218, 1232, 1233, 1235, 1236, 1241, 1244, 1270, 1275, 1278, 1279, 1280, 1284, 1311, 1313, 1315, 1316, 1317, 1319, 1320], "vari": [5, 6, 7, 28, 384, 385, 388, 550, 551, 552, 584, 978, 979, 982, 1252, 1304, 1317], "between": [5, 6, 7, 14, 24, 25, 28, 30, 31, 47, 59, 70, 71, 88, 99, 100, 118, 121, 122, 135, 136, 137, 138, 140, 145, 147, 148, 149, 156, 182, 194, 197, 200, 201, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 384, 385, 390, 393, 399, 400, 458, 460, 500, 506, 514, 517, 532, 533, 550, 551, 552, 562, 579, 580, 584, 586, 587, 608, 620, 631, 632, 649, 660, 661, 679, 682, 683, 701, 713, 725, 726, 727, 728, 730, 735, 738, 739, 740, 741, 749, 773, 785, 788, 791, 792, 814, 821, 825, 826, 827, 828, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 971, 978, 979, 984, 987, 993, 994, 1020, 1043, 1045, 1085, 1091, 1099, 1102, 1117, 1118, 1129, 1139, 1150, 1151, 1168, 1179, 1180, 1211, 1218, 1220, 1222, 1223, 1250, 1251, 1260, 1267, 1278, 1284, 1294, 1304, 1313, 1315, 1318, 1319, 1323, 1325], "rai": [5, 6, 7, 28, 31, 59, 67, 70, 71, 72, 73, 74, 75, 88, 96, 99, 100, 101, 102, 103, 104, 118, 126, 127, 128, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 151, 154, 155, 156, 182, 194, 200, 206, 208, 211, 213, 214, 222, 229, 232, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 273, 275, 278, 280, 281, 289, 296, 299, 300, 301, 302, 306, 308, 311, 313, 314, 322, 332, 333, 336, 337, 338, 339, 343, 345, 348, 350, 351, 359, 369, 370, 373, 374, 375, 376, 383, 384, 385, 390, 393, 394, 448, 451, 470, 475, 503, 531, 532, 533, 539, 550, 551, 552, 584, 587, 620, 628, 631, 632, 633, 634, 635, 636, 649, 657, 660, 661, 662, 663, 664, 665, 679, 701, 713, 716, 717, 718, 725, 726, 727, 728, 729, 731, 732, 733, 735, 737, 738, 739, 743, 747, 748, 749, 773, 785, 791, 798, 800, 803, 805, 806, 814, 821, 824, 825, 826, 827, 828, 841, 847, 849, 859, 861, 863, 865, 867, 870, 872, 873, 881, 888, 891, 892, 893, 894, 898, 900, 903, 905, 906, 914, 924, 925, 928, 929, 930, 931, 935, 937, 940, 942, 943, 951, 961, 962, 965, 966, 967, 968, 977, 978, 979, 984, 987, 988, 1020, 1035, 1055, 1060, 1088, 1116, 1117, 1118, 1124, 1139, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1168, 1176, 1179, 1180, 1181, 1182, 1183, 1184, 1200, 1201, 1202, 1204, 1221, 1228, 1230, 1232, 1233, 1235, 1237, 1238, 1239, 1248, 1249, 1250, 1251, 1264, 1265, 1267, 1279, 1311, 1320, 1323], "ngates_vari": [5, 6, 7, 28, 384, 385, 550, 551, 552, 584, 978, 979], "recommend": [5, 6, 7, 28, 44, 59, 88, 137, 139, 370, 384, 385, 394, 446, 500, 527, 550, 551, 552, 584, 604, 620, 649, 727, 729, 962, 978, 979, 988, 1030, 1085, 1112, 1139, 1168, 1216, 1283, 1309, 1322, 1323, 1324, 1325], "read_altitude_from_nc": [8, 553], "d3r": [8, 553], "gcpex": [8, 553], "odim_h5": [8, 18, 19, 20, 30, 31, 553, 564, 568, 569, 570, 586, 587, 1267], "found": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 44, 135, 136, 140, 141, 167, 381, 386, 388, 389, 390, 391, 393, 394, 395, 435, 445, 446, 504, 516, 553, 562, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 585, 604, 725, 726, 730, 731, 975, 980, 982, 983, 984, 985, 987, 988, 989, 1003, 1014, 1029, 1030, 1036, 1089, 1101, 1248, 1275, 1309, 1317, 1322, 1323, 1325], "doe": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 63, 92, 120, 122, 123, 137, 138, 139, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 414, 439, 553, 562, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 585, 624, 653, 681, 683, 684, 727, 728, 729, 814, 816, 821, 824, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 925, 928, 929, 930, 931, 951, 953, 961, 962, 965, 966, 967, 968, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 1007, 1017, 1143, 1172, 1265, 1295, 1309, 1311, 1317, 1322, 1323, 1325], "appear": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 553, 562, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 585, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 1247], "place": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 146, 223, 227, 228, 247, 250, 265, 266, 290, 294, 295, 323, 327, 328, 360, 364, 365, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 456, 533, 553, 562, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 585, 737, 815, 819, 820, 839, 842, 857, 858, 882, 886, 887, 915, 919, 920, 952, 956, 957, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 993, 994, 1041, 1118, 1265, 1315, 1322], "defin": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 30, 31, 45, 59, 88, 120, 122, 123, 126, 127, 128, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 150, 151, 154, 155, 156, 158, 159, 197, 198, 199, 200, 201, 202, 203, 204, 227, 228, 232, 294, 295, 299, 327, 328, 336, 364, 365, 373, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 400, 445, 446, 451, 482, 496, 501, 517, 524, 525, 526, 527, 531, 532, 533, 536, 553, 562, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 585, 586, 587, 606, 620, 649, 681, 683, 684, 716, 717, 718, 723, 725, 726, 727, 730, 731, 732, 733, 734, 737, 741, 742, 743, 747, 748, 749, 751, 752, 788, 789, 790, 791, 792, 793, 794, 795, 819, 820, 824, 886, 887, 891, 919, 920, 928, 956, 957, 965, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 994, 1029, 1030, 1035, 1067, 1081, 1086, 1102, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1121, 1127, 1139, 1168, 1216, 1284, 1285, 1302, 1304, 1319], "mdv": [8, 14, 16, 18, 19, 20, 24, 25, 26, 29, 388, 389, 399, 553, 562, 564, 566, 568, 569, 570, 579, 580, 581, 582, 585, 982, 983, 993, 1270, 1272, 1279, 1282, 1300, 1309, 1313, 1315, 1321], "like": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 39, 55, 56, 76, 105, 120, 121, 123, 124, 125, 138, 139, 380, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 433, 434, 503, 531, 532, 533, 541, 553, 562, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 585, 599, 616, 617, 637, 666, 681, 682, 684, 685, 686, 728, 729, 974, 975, 980, 982, 983, 984, 985, 986, 987, 988, 989, 992, 993, 994, 995, 996, 1001, 1002, 1012, 1013, 1036, 1088, 1116, 1117, 1118, 1156, 1185, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1231, 1232, 1245, 1274, 1275, 1278, 1309, 1311, 1313, 1315, 1319, 1323], "onli": [8, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 64, 70, 71, 93, 99, 100, 126, 127, 128, 132, 137, 139, 141, 146, 150, 151, 154, 155, 156, 169, 222, 233, 251, 252, 289, 300, 322, 333, 337, 359, 370, 374, 381, 386, 388, 389, 390, 391, 392, 393, 394, 446, 503, 517, 527, 553, 562, 564, 566, 567, 568, 569, 570, 579, 580, 581, 582, 585, 588, 625, 631, 632, 654, 660, 661, 688, 716, 717, 718, 722, 727, 729, 731, 737, 742, 743, 747, 748, 749, 760, 814, 825, 843, 844, 881, 892, 914, 925, 929, 951, 962, 966, 975, 980, 982, 983, 984, 985, 986, 987, 988, 1030, 1088, 1102, 1112, 1144, 1150, 1151, 1173, 1179, 1180, 1224, 1225, 1237, 1247, 1254, 1261, 1262, 1267, 1278, 1285, 1295, 1304, 1312, 1313, 1315, 1317, 1318, 1319, 1323], "you": [8, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 503, 553, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1088, 1274, 1304, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1319, 1320, 1322, 1323, 1325], "altitud": [8, 29, 45, 59, 70, 88, 99, 125, 129, 130, 135, 136, 147, 150, 151, 205, 236, 302, 339, 376, 446, 456, 517, 520, 521, 533, 536, 553, 585, 606, 620, 631, 649, 660, 686, 719, 720, 725, 726, 738, 742, 743, 797, 828, 894, 931, 968, 1030, 1031, 1036, 1041, 1102, 1105, 1106, 1118, 1121, 1127, 1139, 1150, 1168, 1179, 1217, 1234, 1244, 1260, 1267, 1295, 1306, 1311, 1315, 1318, 1320], "np": [8, 14, 16, 26, 470, 540, 553, 562, 566, 581, 1020, 1055, 1125, 1258, 1267, 1278, 1279, 1283, 1286, 1291, 1294, 1295, 1297, 1302, 1304, 1305, 1306, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1323], "295": [8, 553], "float64": [8, 445, 446, 553, 1029, 1030, 1302, 1320], "nd": [9, 554], "65535": [9, 554], "h": [9, 14, 139, 147, 148, 149, 207, 264, 274, 307, 344, 370, 455, 462, 468, 469, 473, 474, 488, 493, 494, 499, 510, 534, 554, 562, 729, 738, 739, 740, 799, 856, 866, 899, 936, 962, 1040, 1047, 1053, 1054, 1058, 1059, 1073, 1078, 1079, 1084, 1095, 1119, 1231, 1278, 1285, 1319], "": [9, 44, 45, 59, 72, 76, 88, 101, 105, 117, 118, 121, 124, 138, 139, 150, 151, 152, 163, 207, 209, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 274, 276, 289, 296, 300, 301, 302, 307, 309, 322, 332, 337, 338, 339, 344, 346, 359, 369, 374, 375, 376, 433, 434, 440, 444, 460, 469, 473, 474, 475, 476, 488, 500, 505, 506, 519, 522, 527, 528, 529, 531, 534, 536, 537, 540, 554, 604, 606, 620, 633, 637, 649, 662, 666, 678, 679, 682, 685, 728, 729, 742, 743, 744, 756, 799, 801, 814, 821, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 866, 868, 881, 888, 892, 893, 894, 899, 901, 914, 924, 929, 930, 931, 936, 938, 951, 961, 966, 967, 968, 1001, 1002, 1008, 1012, 1013, 1018, 1020, 1022, 1028, 1045, 1054, 1058, 1059, 1060, 1061, 1073, 1085, 1090, 1091, 1104, 1107, 1112, 1113, 1114, 1116, 1119, 1121, 1122, 1125, 1127, 1139, 1152, 1156, 1168, 1181, 1185, 1231, 1232, 1242, 1274, 1275, 1278, 1283, 1285, 1286, 1295, 1302, 1304, 1306, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1324], "radar_estimated_rain_r": [9, 554, 1317, 1319], "integ": [9, 222, 289, 322, 359, 400, 522, 523, 554, 814, 881, 914, 951, 994, 1107, 1108], "repres": [9, 59, 88, 133, 137, 141, 142, 143, 144, 154, 155, 156, 158, 159, 501, 514, 517, 524, 525, 526, 531, 533, 539, 540, 554, 620, 649, 723, 727, 731, 732, 733, 734, 747, 748, 749, 751, 752, 1086, 1099, 1102, 1109, 1110, 1111, 1116, 1118, 1124, 1125, 1139, 1168, 1200, 1201, 1265], "No": [9, 70, 71, 99, 100, 139, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 398, 446, 455, 517, 554, 631, 632, 660, 661, 729, 814, 821, 825, 826, 827, 828, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 992, 1030, 1040, 1102, 1150, 1151, 1179, 1180, 1317, 1319], "valid_range_from_fil": [10, 558], "units_from_fil": [10, 558], "pulse_width": [10, 152, 163, 400, 476, 558, 744, 756, 994, 1061], "gamic": [10, 558], "hdf5": [10, 19, 30, 31, 558, 569, 586, 587, 1309], "valid": [10, 45, 59, 88, 126, 135, 136, 137, 141, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 196, 223, 247, 265, 290, 323, 360, 390, 399, 400, 446, 449, 460, 465, 469, 473, 474, 475, 482, 488, 495, 501, 503, 514, 525, 526, 531, 533, 558, 606, 620, 649, 715, 716, 725, 726, 727, 731, 737, 738, 739, 740, 747, 748, 749, 750, 751, 752, 787, 815, 839, 857, 882, 915, 952, 984, 993, 994, 1030, 1033, 1045, 1050, 1054, 1058, 1059, 1060, 1067, 1073, 1080, 1086, 1088, 1099, 1110, 1111, 1116, 1118, 1127, 1139, 1168, 1219, 1221, 1224, 1225, 1231, 1232, 1323], "rang": [10, 14, 16, 24, 25, 26, 59, 69, 71, 88, 98, 100, 117, 118, 119, 128, 133, 135, 136, 141, 142, 143, 144, 147, 158, 159, 197, 205, 222, 224, 229, 230, 231, 233, 234, 235, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 272, 289, 291, 296, 297, 298, 300, 301, 305, 322, 324, 332, 333, 334, 335, 337, 338, 342, 359, 361, 369, 370, 371, 372, 374, 375, 393, 448, 449, 456, 465, 469, 470, 482, 488, 495, 496, 502, 503, 514, 517, 521, 527, 529, 531, 532, 533, 558, 562, 566, 579, 580, 581, 620, 630, 632, 649, 659, 661, 678, 679, 680, 718, 723, 725, 726, 731, 732, 733, 734, 738, 751, 752, 788, 797, 814, 816, 821, 822, 823, 825, 826, 827, 841, 843, 844, 845, 847, 849, 856, 859, 861, 863, 864, 881, 883, 888, 889, 890, 892, 893, 897, 914, 916, 924, 925, 926, 927, 929, 930, 934, 951, 953, 961, 962, 963, 964, 966, 967, 987, 1031, 1033, 1041, 1050, 1054, 1055, 1067, 1073, 1080, 1081, 1087, 1088, 1099, 1102, 1106, 1112, 1114, 1116, 1117, 1118, 1139, 1149, 1151, 1168, 1178, 1180, 1221, 1233, 1244, 1250, 1251, 1261, 1262, 1267, 1283, 1288, 1291, 1297, 1306, 1311, 1318, 1320], "valid_min": [10, 137, 138, 139, 386, 558, 727, 728, 729, 980, 1304, 1320], "valid_max": [10, 137, 138, 139, 386, 558, 727, 728, 729, 980, 1304, 1320], "when": [10, 18, 19, 20, 32, 34, 45, 59, 60, 61, 65, 66, 68, 70, 71, 88, 89, 90, 94, 95, 97, 99, 100, 135, 136, 137, 138, 139, 150, 151, 154, 161, 162, 167, 168, 169, 173, 175, 182, 189, 194, 222, 229, 233, 234, 235, 236, 251, 252, 258, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 342, 359, 369, 370, 374, 375, 376, 390, 391, 393, 394, 396, 400, 401, 414, 446, 451, 460, 465, 473, 482, 495, 498, 506, 509, 510, 514, 517, 520, 525, 527, 528, 529, 533, 539, 540, 558, 568, 569, 570, 589, 593, 606, 620, 621, 622, 626, 627, 629, 631, 632, 649, 650, 651, 655, 656, 658, 660, 661, 688, 692, 694, 701, 708, 713, 725, 726, 727, 728, 729, 742, 743, 747, 754, 755, 760, 764, 766, 773, 780, 785, 814, 821, 825, 826, 827, 828, 843, 844, 850, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 934, 951, 961, 962, 966, 967, 968, 984, 985, 987, 988, 990, 994, 996, 1020, 1030, 1031, 1035, 1045, 1050, 1058, 1067, 1080, 1083, 1091, 1094, 1095, 1099, 1102, 1105, 1110, 1112, 1113, 1114, 1118, 1124, 1125, 1126, 1127, 1139, 1140, 1141, 1145, 1146, 1148, 1150, 1151, 1168, 1169, 1170, 1174, 1175, 1177, 1179, 1180, 1231, 1252, 1267, 1283, 1304, 1309, 1312, 1313, 1316, 1318, 1322, 1323, 1325], "thei": [10, 72, 101, 137, 138, 139, 145, 154, 155, 156, 173, 175, 182, 370, 386, 394, 400, 460, 496, 527, 542, 556, 558, 633, 662, 692, 694, 701, 727, 728, 729, 735, 747, 748, 749, 764, 766, 773, 962, 980, 988, 994, 1045, 1081, 1112, 1152, 1181, 1304, 1317, 1323], "present": [10, 44, 45, 59, 88, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 399, 400, 439, 446, 558, 604, 606, 620, 649, 814, 821, 825, 826, 827, 828, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 993, 994, 1007, 1017, 1030, 1127, 1139, 1168, 1311, 1316], "unit": [10, 18, 19, 20, 69, 98, 120, 121, 122, 123, 124, 135, 136, 138, 139, 212, 215, 216, 217, 218, 219, 220, 227, 279, 282, 283, 284, 285, 286, 287, 294, 312, 315, 316, 317, 318, 319, 320, 327, 349, 352, 353, 354, 355, 356, 357, 364, 379, 386, 388, 469, 488, 490, 522, 558, 568, 569, 570, 630, 659, 681, 682, 683, 684, 685, 725, 726, 728, 729, 804, 807, 808, 809, 810, 811, 812, 819, 871, 874, 875, 876, 877, 878, 879, 886, 904, 907, 908, 909, 910, 911, 912, 919, 941, 944, 945, 946, 947, 948, 949, 956, 973, 980, 982, 1054, 1073, 1075, 1107, 1126, 1149, 1178, 1204, 1219, 1231, 1232, 1292, 1297, 1304, 1309, 1312, 1317, 1320, 1323], "avail": [10, 18, 19, 20, 59, 70, 71, 72, 88, 99, 100, 101, 126, 127, 128, 145, 146, 154, 155, 156, 182, 194, 249, 251, 252, 253, 255, 257, 267, 269, 271, 388, 398, 517, 558, 568, 569, 570, 590, 620, 631, 632, 633, 649, 660, 661, 662, 701, 713, 716, 717, 718, 735, 737, 747, 748, 749, 773, 785, 841, 843, 844, 845, 847, 849, 859, 861, 863, 982, 992, 1102, 1139, 1150, 1151, 1152, 1168, 1179, 1180, 1181, 1219, 1254, 1272, 1274, 1283, 1309, 1317], "mandatori": [10, 558], "processor": [10, 558], "pulsewidth": [10, 517, 558, 1102], "enum": [10, 558], "should": [10, 26, 36, 45, 59, 61, 68, 88, 90, 97, 132, 137, 138, 139, 146, 151, 169, 173, 205, 250, 266, 333, 370, 380, 394, 397, 399, 400, 428, 445, 446, 500, 503, 514, 517, 525, 526, 527, 528, 529, 534, 536, 539, 540, 542, 558, 581, 595, 606, 620, 622, 629, 649, 651, 658, 688, 692, 722, 727, 728, 729, 737, 743, 760, 764, 797, 842, 858, 925, 962, 971, 972, 974, 988, 991, 993, 994, 1029, 1030, 1085, 1088, 1099, 1102, 1110, 1111, 1112, 1113, 1114, 1119, 1121, 1124, 1125, 1127, 1139, 1141, 1148, 1168, 1170, 1177, 1231, 1232, 1283, 1304, 1309, 1322, 1323, 1325], "u": [10, 55, 56, 57, 121, 124, 524, 539, 540, 558, 616, 617, 618, 682, 685, 1109, 1124, 1125, 1275, 1306, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1319, 1320, 1323], "gif": [11, 559, 1267], "precipitation_typ": [12, 22, 560, 572], "grib": [12, 560], "locat": [13, 45, 47, 59, 69, 70, 71, 88, 98, 99, 100, 205, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 264, 265, 267, 269, 271, 272, 289, 290, 291, 294, 295, 296, 297, 298, 300, 301, 302, 305, 322, 323, 324, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 342, 359, 360, 361, 364, 365, 367, 369, 370, 371, 372, 374, 375, 376, 390, 391, 393, 399, 444, 445, 446, 561, 606, 608, 620, 630, 631, 632, 649, 659, 660, 661, 797, 814, 815, 816, 819, 820, 821, 822, 823, 825, 826, 827, 828, 839, 841, 843, 844, 845, 847, 849, 856, 857, 859, 861, 863, 864, 881, 882, 883, 886, 887, 888, 889, 890, 892, 893, 894, 897, 914, 915, 916, 919, 920, 922, 924, 925, 926, 927, 929, 930, 931, 934, 951, 952, 953, 956, 957, 959, 961, 962, 963, 964, 966, 967, 968, 984, 985, 987, 993, 1020, 1028, 1029, 1030, 1127, 1129, 1139, 1149, 1150, 1151, 1168, 1178, 1179, 1180, 1199, 1211, 1218, 1234, 1235, 1236, 1289, 1291, 1302, 1309, 1315, 1318, 1322, 1323], "hpl": [13, 561], "ascii": [13, 561], "halo": [13, 561], "photono": [13, 561], "steamlin": [13, 561], "lidar": [13, 513, 561, 1098, 1267, 1309], "come": [13, 531, 561, 1116, 1304], "assign": [13, 137, 154, 524, 561, 727, 747, 1109, 1304], "lat": [13, 54, 70, 99, 120, 121, 122, 123, 124, 125, 161, 162, 211, 236, 249, 250, 251, 252, 254, 255, 256, 257, 266, 268, 269, 270, 271, 278, 302, 311, 329, 331, 333, 339, 348, 366, 368, 376, 397, 398, 465, 495, 498, 561, 615, 631, 660, 681, 682, 683, 684, 685, 686, 754, 755, 803, 828, 841, 842, 843, 844, 846, 847, 848, 849, 858, 860, 861, 862, 863, 870, 894, 903, 921, 923, 925, 931, 940, 958, 960, 968, 991, 992, 1050, 1080, 1083, 1136, 1150, 1179, 1284, 1285, 1298, 1315, 1318], "lon": [13, 54, 70, 99, 120, 121, 122, 123, 124, 125, 161, 162, 211, 236, 249, 250, 251, 252, 254, 255, 256, 257, 266, 268, 269, 270, 271, 278, 302, 311, 329, 331, 333, 339, 348, 366, 368, 376, 397, 398, 465, 495, 498, 561, 615, 631, 660, 681, 682, 683, 684, 685, 686, 754, 755, 803, 828, 841, 842, 843, 844, 846, 847, 848, 849, 858, 860, 861, 862, 863, 870, 894, 903, 921, 923, 925, 931, 940, 958, 960, 968, 991, 992, 1050, 1080, 1083, 1136, 1150, 1179, 1285, 1298, 1318], "alt": [13, 54, 70, 99, 125, 397, 561, 615, 631, 660, 686, 991, 1136, 1150, 1179, 1318], "ad": [13, 45, 59, 61, 88, 90, 145, 150, 151, 258, 331, 368, 445, 500, 517, 561, 606, 620, 622, 649, 651, 735, 742, 743, 850, 923, 960, 1029, 1085, 1102, 1127, 1139, 1141, 1168, 1170, 1267, 1294, 1295, 1311, 1312, 1322, 1323], "global": [13, 59, 88, 561, 620, 649, 1139, 1168, 1320, 1322], "variabl": [13, 32, 44, 45, 53, 54, 55, 59, 69, 88, 98, 169, 205, 239, 258, 272, 305, 342, 396, 397, 460, 471, 472, 504, 506, 516, 524, 527, 530, 534, 535, 537, 561, 589, 604, 606, 614, 615, 616, 620, 630, 649, 659, 688, 760, 797, 831, 850, 864, 897, 934, 990, 991, 1020, 1031, 1045, 1056, 1057, 1089, 1091, 1101, 1109, 1112, 1115, 1119, 1120, 1122, 1127, 1135, 1136, 1139, 1149, 1168, 1178, 1231, 1267, 1274, 1278, 1302, 1304, 1309, 1311, 1312, 1317, 1319, 1320, 1322], "location_campaign": [13, 561], "script": [13, 44, 541, 561, 604, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306], "filenames_iq": [14, 562], "nbyte": [14, 16, 26, 562, 566, 581], "4": [14, 16, 26, 30, 31, 59, 88, 117, 118, 125, 135, 136, 154, 155, 384, 388, 444, 451, 530, 531, 562, 566, 581, 586, 587, 620, 649, 678, 679, 686, 725, 726, 747, 748, 978, 982, 1028, 1035, 1115, 1116, 1139, 1168, 1250, 1274, 1275, 1283, 1286, 1292, 1293, 1294, 1295, 1297, 1298, 1304, 1306, 1309, 1316, 1317, 1318, 1319, 1323], "prf": [14, 562, 1318], "ang_tol": [14, 24, 25, 473, 495, 496, 562, 579, 580, 1058, 1080, 1081], "noise_h": [14, 562], "noise_v": [14, 562], "rconst_h": [14, 562], "rconst_v": [14, 562], "radconst_h": [14, 562], "radconst_v": [14, 562], "mfloss_h": [14, 562], "mfloss_v": [14, 562], "azi_min": [14, 24, 25, 562, 579, 580, 1261, 1262], "azi_max": [14, 24, 25, 562, 579, 580, 1261, 1262], "ele_min": [14, 24, 25, 562, 579, 580, 1261, 1262], "ele_max": [14, 24, 25, 562, 579, 580, 1261, 1262], "rng_min": [14, 24, 25, 521, 562, 579, 580, 1106, 1261, 1262], "rng_max": [14, 24, 25, 521, 562, 579, 580, 1106, 1261, 1262], "rad4alp": [14, 562, 1267], "iq": [14, 453, 455, 462, 464, 466, 468, 472, 479, 481, 485, 493, 494, 499, 562, 1038, 1040, 1047, 1049, 1051, 1053, 1057, 1064, 1066, 1070, 1078, 1079, 1084, 1309], "refer": [14, 18, 24, 25, 30, 33, 45, 59, 61, 88, 90, 117, 121, 124, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 142, 143, 146, 150, 151, 152, 153, 154, 155, 156, 160, 163, 211, 236, 278, 302, 311, 339, 348, 376, 390, 391, 392, 444, 455, 456, 460, 465, 469, 470, 473, 474, 475, 477, 482, 483, 488, 495, 496, 498, 500, 501, 503, 505, 517, 520, 524, 527, 528, 529, 531, 533, 534, 536, 538, 539, 540, 562, 564, 568, 579, 580, 586, 591, 606, 620, 622, 649, 651, 678, 682, 685, 716, 717, 718, 719, 720, 722, 725, 726, 727, 728, 729, 732, 733, 737, 742, 743, 744, 746, 747, 748, 749, 753, 756, 803, 828, 870, 894, 903, 931, 940, 968, 984, 985, 986, 1028, 1036, 1040, 1041, 1045, 1050, 1054, 1055, 1058, 1059, 1060, 1062, 1067, 1068, 1073, 1080, 1081, 1083, 1085, 1086, 1088, 1090, 1102, 1105, 1109, 1112, 1113, 1114, 1116, 1118, 1119, 1121, 1123, 1124, 1125, 1127, 1139, 1141, 1168, 1170, 1231, 1232, 1242, 1257, 1309, 1320, 1323], "rainbow": [14, 24, 25, 26, 562, 579, 580, 581], "byte": [14, 16, 26, 398, 426, 562, 566, 581, 992, 1267, 1317], "numpi": [14, 16, 26, 61, 90, 175, 189, 556, 557, 562, 566, 573, 574, 581, 622, 651, 694, 708, 766, 780, 1141, 1170, 1254, 1267, 1269, 1278, 1279, 1283, 1286, 1291, 1294, 1295, 1297, 1302, 1304, 1305, 1306, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1325], "e": [14, 16, 26, 31, 139, 145, 150, 151, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 382, 398, 439, 458, 496, 500, 527, 531, 533, 536, 562, 566, 581, 587, 729, 735, 742, 743, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 976, 992, 1007, 1017, 1043, 1081, 1085, 1112, 1116, 1118, 1121, 1217, 1218, 1242, 1244, 1274, 1286, 1304, 1318, 1322, 1323], "g": [14, 16, 26, 31, 145, 398, 444, 495, 517, 527, 529, 540, 562, 566, 581, 587, 735, 992, 1028, 1080, 1102, 1112, 1114, 1125], "go": [14, 16, 26, 146, 154, 155, 156, 460, 486, 505, 506, 507, 509, 510, 524, 533, 562, 566, 581, 737, 747, 748, 749, 1045, 1071, 1090, 1091, 1092, 1094, 1095, 1109, 1118, 1217, 1218, 1244, 1261, 1262, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1312], "float6432": [14, 562], "scan": [14, 18, 30, 31, 59, 88, 137, 138, 139, 140, 143, 153, 205, 221, 222, 224, 235, 272, 288, 289, 291, 301, 305, 321, 322, 324, 338, 342, 358, 359, 361, 375, 390, 503, 531, 533, 562, 564, 568, 586, 587, 620, 649, 727, 728, 729, 730, 733, 746, 797, 813, 814, 816, 827, 864, 880, 881, 883, 893, 897, 913, 914, 916, 930, 934, 950, 951, 953, 967, 984, 1031, 1036, 1088, 1116, 1118, 1139, 1168, 1200, 1201, 1234, 1247, 1252, 1259, 1265, 1267, 1275, 1278, 1288, 1289, 1299, 1310, 1319], "toler": [14, 24, 25, 465, 473, 495, 496, 498, 512, 513, 562, 579, 580, 1020, 1021, 1023, 1050, 1058, 1080, 1081, 1083, 1097, 1098, 1217, 1224, 1225, 1240, 1244], "angl": [14, 24, 25, 59, 65, 66, 88, 94, 95, 117, 118, 119, 135, 136, 147, 148, 149, 152, 153, 160, 161, 162, 163, 205, 222, 234, 272, 289, 305, 322, 342, 359, 449, 473, 495, 496, 515, 517, 521, 529, 531, 533, 534, 557, 562, 579, 580, 620, 626, 627, 649, 655, 656, 678, 679, 680, 725, 726, 738, 739, 740, 744, 746, 753, 754, 755, 756, 797, 814, 826, 864, 881, 897, 914, 934, 951, 1033, 1058, 1080, 1081, 1100, 1102, 1106, 1114, 1116, 1118, 1119, 1139, 1145, 1146, 1168, 1174, 1175, 1212, 1213, 1214, 1215, 1219, 1224, 1225, 1234, 1235, 1240, 1244, 1252, 1255, 1256, 1265, 1267, 1297, 1299, 1306, 1311, 1320], "distanc": [14, 24, 25, 45, 53, 71, 100, 117, 118, 119, 222, 233, 289, 300, 322, 337, 359, 374, 441, 442, 443, 445, 446, 465, 470, 495, 503, 522, 524, 529, 531, 532, 533, 562, 579, 580, 606, 614, 632, 661, 678, 679, 680, 814, 825, 881, 892, 914, 929, 951, 966, 1020, 1021, 1024, 1025, 1026, 1029, 1030, 1031, 1050, 1055, 1080, 1088, 1107, 1109, 1114, 1116, 1117, 1118, 1127, 1135, 1151, 1180, 1218, 1224, 1225, 1232, 1234, 1235, 1236, 1260, 1278, 1287, 1292, 1293, 1294, 1318], "psr": [14, 24, 25, 149, 562, 575, 576, 577, 579, 580, 740, 1243, 1257], "estim": [14, 128, 141, 142, 143, 144, 147, 148, 154, 155, 156, 164, 199, 203, 224, 291, 324, 361, 457, 469, 470, 472, 474, 475, 477, 488, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 527, 528, 529, 532, 534, 562, 718, 731, 732, 733, 734, 736, 738, 739, 747, 748, 749, 757, 790, 794, 816, 883, 916, 953, 1042, 1054, 1055, 1057, 1059, 1060, 1062, 1073, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1112, 1113, 1114, 1117, 1119, 1231, 1232, 1304, 1318], "v": [14, 26, 55, 56, 58, 147, 148, 149, 435, 436, 439, 462, 468, 493, 494, 499, 515, 531, 539, 540, 562, 581, 616, 617, 619, 738, 739, 740, 1003, 1004, 1007, 1014, 1015, 1017, 1047, 1053, 1078, 1079, 1084, 1100, 1116, 1124, 1125, 1294, 1295, 1306, 1323], "nois": [14, 24, 25, 132, 144, 147, 148, 149, 202, 450, 455, 464, 469, 470, 471, 472, 474, 475, 479, 480, 481, 484, 487, 488, 490, 491, 492, 499, 502, 562, 579, 580, 722, 734, 738, 739, 740, 793, 1034, 1040, 1049, 1054, 1055, 1056, 1057, 1059, 1060, 1064, 1065, 1066, 1069, 1072, 1073, 1075, 1076, 1077, 1084, 1087, 1231, 1232, 1237, 1248, 1313], "power": [14, 24, 25, 126, 128, 147, 148, 149, 150, 151, 152, 163, 164, 201, 464, 469, 471, 474, 475, 477, 479, 480, 482, 483, 487, 488, 490, 491, 502, 505, 506, 507, 508, 509, 510, 517, 562, 579, 580, 716, 718, 738, 739, 740, 741, 742, 743, 744, 756, 757, 792, 1049, 1054, 1056, 1059, 1060, 1062, 1064, 1065, 1067, 1068, 1072, 1073, 1075, 1076, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1102, 1232, 1237], "adu": [14, 469, 471, 472, 486, 487, 488, 489, 490, 491, 492, 562, 1054, 1056, 1057, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "dynam": [14, 138, 562, 728], "factor": [14, 117, 118, 119, 129, 150, 151, 400, 456, 497, 505, 506, 507, 508, 509, 510, 517, 533, 535, 562, 597, 678, 679, 680, 719, 742, 743, 994, 1036, 1041, 1082, 1090, 1091, 1092, 1093, 1094, 1095, 1102, 1118, 1120, 1216, 1285, 1293, 1299, 1315], "convers": [14, 30, 31, 473, 495, 562, 586, 587, 1058, 1080, 1216, 1317], "dbadu": [14, 469, 488, 490, 562, 1054, 1073, 1075], "dbm": [14, 147, 148, 149, 152, 163, 164, 469, 474, 475, 477, 483, 488, 490, 562, 738, 739, 740, 744, 756, 757, 1054, 1059, 1060, 1062, 1068, 1073, 1075], "dbz": [14, 26, 126, 132, 150, 151, 447, 456, 460, 470, 484, 500, 524, 531, 536, 562, 581, 716, 722, 742, 743, 1041, 1045, 1055, 1069, 1085, 1109, 1116, 1121, 1274, 1278, 1285, 1292, 1293, 1299, 1304, 1317, 1319, 1320], "constant": [14, 136, 390, 441, 445, 446, 476, 477, 483, 497, 522, 527, 562, 726, 984, 1024, 1029, 1030, 1061, 1062, 1068, 1082, 1107, 1112, 1275, 1318], "match": [14, 137, 140, 145, 205, 272, 305, 342, 394, 477, 483, 514, 539, 540, 562, 727, 730, 735, 797, 864, 897, 934, 988, 1020, 1062, 1068, 1099, 1124, 1125, 1278, 1285, 1318], "filter": [14, 62, 91, 135, 136, 137, 138, 139, 140, 143, 144, 145, 154, 155, 156, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 445, 446, 458, 477, 483, 525, 526, 527, 528, 529, 562, 623, 652, 688, 692, 694, 701, 708, 713, 725, 726, 727, 728, 729, 730, 733, 734, 735, 741, 747, 748, 749, 814, 821, 825, 826, 827, 828, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 1020, 1029, 1030, 1043, 1062, 1068, 1110, 1111, 1112, 1113, 1114, 1142, 1171, 1270, 1278, 1279, 1280, 1284, 1303, 1310, 1313, 1316, 1317, 1318], "loss": [14, 153, 477, 483, 517, 562, 746, 1062, 1068, 1102], "receiv": [14, 152, 153, 160, 163, 477, 483, 562, 744, 746, 753, 756, 1062, 1068, 1313], "db": [14, 146, 147, 148, 152, 153, 163, 164, 199, 203, 449, 450, 477, 483, 517, 531, 562, 737, 738, 739, 744, 746, 756, 757, 790, 794, 1033, 1034, 1062, 1068, 1102, 1116, 1237, 1294, 1319, 1320], "minimum": [14, 24, 25, 126, 133, 135, 136, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 197, 200, 201, 202, 203, 204, 222, 224, 229, 232, 233, 234, 235, 236, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 444, 446, 460, 465, 469, 473, 475, 482, 488, 495, 496, 500, 504, 514, 517, 521, 525, 526, 531, 533, 562, 579, 580, 716, 723, 725, 726, 731, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 747, 748, 749, 750, 751, 752, 788, 791, 792, 793, 794, 795, 814, 816, 821, 824, 825, 826, 827, 828, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 925, 928, 929, 930, 931, 951, 953, 961, 962, 965, 966, 967, 968, 992, 1028, 1030, 1045, 1050, 1054, 1058, 1060, 1067, 1073, 1080, 1081, 1085, 1089, 1099, 1102, 1106, 1110, 1111, 1116, 1118, 1199, 1219, 1221, 1231, 1232, 1244, 1304, 1315], "maximum": [14, 16, 24, 25, 88, 129, 130, 133, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 197, 199, 200, 201, 202, 222, 224, 229, 232, 233, 234, 235, 236, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 444, 446, 456, 460, 465, 473, 482, 495, 496, 498, 500, 501, 503, 506, 509, 510, 514, 521, 527, 531, 532, 533, 562, 566, 579, 580, 649, 719, 720, 723, 725, 726, 727, 728, 731, 732, 733, 734, 737, 738, 739, 740, 741, 742, 743, 747, 748, 749, 751, 752, 788, 790, 791, 792, 793, 814, 816, 821, 824, 825, 826, 827, 828, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 925, 928, 929, 930, 931, 951, 953, 961, 962, 965, 966, 967, 968, 971, 992, 1028, 1030, 1036, 1041, 1045, 1050, 1058, 1067, 1080, 1081, 1083, 1085, 1086, 1088, 1091, 1094, 1095, 1099, 1106, 1112, 1116, 1117, 1118, 1168, 1199, 1216, 1232, 1237, 1247, 1248, 1249, 1303, 1304, 1320], "keep": [14, 24, 25, 34, 137, 144, 198, 394, 501, 556, 562, 579, 580, 593, 727, 734, 789, 988, 1086, 1261, 1262, 1278, 1304, 1323, 1325], "k": [15, 124, 226, 227, 228, 230, 231, 232, 252, 293, 294, 295, 297, 298, 299, 326, 327, 328, 334, 335, 336, 363, 364, 365, 371, 372, 373, 431, 435, 436, 438, 439, 460, 517, 527, 539, 563, 685, 818, 819, 820, 822, 823, 824, 844, 885, 886, 887, 889, 890, 891, 918, 919, 920, 926, 927, 928, 955, 956, 957, 963, 964, 965, 999, 1003, 1004, 1006, 1007, 1011, 1014, 1015, 1016, 1017, 1045, 1102, 1112, 1124, 1284, 1291, 1294, 1295, 1323], "band": [15, 21, 126, 128, 132, 398, 460, 465, 499, 505, 519, 527, 528, 529, 536, 537, 563, 571, 716, 718, 722, 992, 1045, 1050, 1084, 1090, 1104, 1112, 1113, 1114, 1121, 1122, 1310, 1318], "arm": [15, 32, 54, 382, 383, 396, 397, 516, 563, 589, 615, 976, 977, 990, 991, 1101, 1136, 1199, 1204, 1267, 1280, 1295, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1322, 1325], "zenith": [15, 563], "kazr": [15, 563], "ingest": [15, 563, 1309, 1310], "rmax": [16, 197, 482, 566, 788, 1067, 1244], "noxp": [17, 567], "iphex": [17, 567], "gain": [18, 19, 20, 30, 31, 32, 152, 163, 477, 517, 568, 569, 570, 586, 587, 589, 744, 756, 1062, 1102], "nodata": [18, 19, 20, 30, 31, 568, 569, 570, 586, 587, 1267], "nan": [18, 19, 20, 137, 177, 196, 197, 201, 529, 556, 557, 568, 569, 570, 573, 574, 696, 715, 727, 741, 768, 787, 788, 792, 1114, 1302, 1317, 1318], "undetect": [18, 19, 20, 30, 31, 568, 569, 570, 586, 587, 1267], "use_file_convers": [18, 19, 20, 568, 569, 570], "time_ref": [18, 30, 564, 568, 586], "convert": [18, 19, 20, 23, 30, 31, 53, 125, 152, 500, 543, 568, 569, 570, 578, 586, 587, 614, 686, 744, 1085, 1135, 1247, 1265, 1304, 1318], "what": [18, 19, 20, 30, 137, 446, 564, 568, 569, 570, 586, 727, 759, 1030, 1274, 1283, 1311, 1313, 1316, 1323, 1325], "user": [18, 19, 20, 26, 44, 62, 91, 127, 128, 140, 370, 398, 487, 491, 568, 569, 570, 581, 604, 623, 652, 717, 718, 730, 962, 992, 1072, 1076, 1142, 1171, 1264, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1325], "physic": [18, 19, 20, 30, 31, 32, 500, 556, 557, 568, 569, 570, 573, 574, 586, 587, 589, 745, 1020, 1036, 1085, 1304, 1317, 1319], "otherwis": [18, 19, 20, 137, 154, 155, 407, 428, 435, 460, 465, 471, 473, 480, 482, 486, 487, 491, 495, 496, 498, 504, 506, 509, 510, 515, 517, 522, 556, 557, 568, 569, 570, 573, 574, 727, 747, 748, 1003, 1014, 1045, 1050, 1056, 1058, 1065, 1067, 1071, 1072, 1076, 1080, 1081, 1083, 1089, 1091, 1094, 1095, 1100, 1102, 1107, 1223, 1254], "pass": [18, 19, 20, 120, 122, 123, 137, 138, 139, 221, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 288, 289, 296, 300, 301, 302, 321, 322, 329, 330, 331, 332, 333, 334, 337, 338, 339, 358, 359, 366, 367, 368, 369, 370, 371, 374, 375, 376, 380, 381, 390, 392, 444, 446, 514, 527, 568, 569, 570, 681, 683, 684, 727, 728, 729, 813, 814, 821, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 856, 859, 861, 863, 880, 881, 888, 892, 893, 894, 913, 914, 921, 922, 923, 924, 925, 926, 929, 930, 931, 950, 951, 958, 959, 960, 961, 962, 963, 966, 967, 968, 974, 975, 984, 986, 1028, 1030, 1099, 1112, 1274, 1275, 1312, 1315, 1318], "mid": [18, 30, 564, 568, 586], "expect": [18, 30, 236, 302, 339, 376, 529, 564, 568, 586, 828, 894, 931, 968, 1114, 1319, 1323], "starttim": [18, 30, 564, 568, 586], "middl": [18, 25, 30, 564, 568, 580, 586], "endtim": [18, 30, 564, 568, 586], "include_dataset": [19, 569], "exclude_dataset": [19, 569], "dataset": [19, 30, 31, 253, 333, 370, 390, 392, 472, 516, 569, 586, 587, 845, 925, 962, 984, 986, 1057, 1101, 1226, 1229, 1236, 1267, 1274, 1302, 1305, 1306, 1309, 1311], "given": [19, 36, 39, 40, 41, 43, 45, 47, 59, 65, 66, 67, 68, 71, 72, 73, 74, 75, 88, 94, 95, 96, 97, 100, 101, 102, 103, 104, 135, 136, 137, 153, 160, 161, 163, 171, 173, 174, 175, 176, 178, 180, 181, 185, 187, 188, 189, 190, 192, 193, 195, 197, 200, 201, 222, 227, 228, 248, 249, 250, 254, 255, 256, 257, 266, 268, 269, 270, 271, 289, 294, 295, 322, 327, 328, 329, 330, 359, 364, 365, 366, 367, 435, 445, 446, 460, 482, 487, 491, 515, 517, 524, 530, 569, 595, 599, 600, 601, 603, 606, 608, 620, 626, 627, 628, 629, 632, 633, 634, 635, 636, 649, 655, 656, 657, 658, 661, 662, 663, 664, 665, 690, 692, 693, 694, 695, 697, 699, 700, 704, 706, 707, 708, 709, 711, 712, 714, 725, 726, 727, 741, 746, 753, 754, 756, 762, 764, 765, 766, 767, 769, 771, 772, 776, 778, 779, 780, 781, 783, 784, 786, 788, 791, 792, 814, 819, 820, 840, 841, 842, 846, 847, 848, 849, 858, 860, 861, 862, 863, 881, 886, 887, 914, 919, 920, 921, 922, 951, 956, 957, 958, 959, 1003, 1014, 1020, 1027, 1029, 1030, 1045, 1067, 1072, 1076, 1100, 1102, 1109, 1115, 1127, 1129, 1139, 1145, 1146, 1147, 1148, 1151, 1152, 1153, 1154, 1155, 1168, 1174, 1175, 1176, 1177, 1180, 1181, 1182, 1183, 1184, 1197, 1235, 1236, 1245, 1246, 1259, 1302, 1304, 1309, 1318], "dataset1": [19, 569], "dataset2": [19, 569], "vertic": [20, 59, 88, 130, 132, 137, 143, 222, 223, 224, 229, 233, 234, 235, 236, 244, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 337, 338, 339, 359, 360, 361, 369, 374, 375, 376, 398, 456, 462, 463, 464, 465, 468, 473, 480, 481, 482, 493, 494, 495, 498, 499, 501, 512, 513, 514, 515, 520, 522, 524, 533, 534, 570, 620, 649, 720, 722, 727, 733, 814, 815, 816, 821, 825, 826, 827, 828, 836, 839, 841, 843, 845, 847, 849, 857, 859, 861, 863, 881, 882, 883, 888, 892, 893, 894, 914, 915, 916, 924, 929, 930, 931, 951, 952, 953, 961, 966, 967, 968, 992, 1041, 1047, 1048, 1049, 1050, 1053, 1058, 1065, 1066, 1067, 1078, 1079, 1080, 1083, 1084, 1086, 1097, 1098, 1099, 1100, 1105, 1107, 1109, 1118, 1119, 1139, 1168, 1247, 1265, 1295, 1305, 1306, 1309, 1318, 1319], "profil": [20, 31, 55, 129, 130, 135, 136, 137, 382, 383, 456, 465, 473, 482, 495, 498, 514, 516, 528, 529, 530, 533, 534, 570, 587, 616, 719, 720, 725, 726, 727, 976, 977, 1041, 1050, 1058, 1067, 1080, 1083, 1099, 1101, 1113, 1114, 1115, 1118, 1119, 1223, 1259, 1270, 1272, 1301, 1307, 1309, 1317, 1318, 1321, 1323], "those": [20, 62, 69, 91, 98, 138, 139, 169, 394, 445, 474, 542, 570, 623, 630, 652, 659, 688, 728, 729, 760, 988, 1029, 1059, 1142, 1149, 1171, 1178, 1250, 1266, 1325], "vol2bird": [20, 570], "pattern": [21, 135, 136, 533, 571, 725, 726, 1118, 1294], "25": [22, 154, 155, 572, 747, 748, 1274, 1278, 1294, 1295, 1298, 1302, 1311, 1316, 1317, 1318, 1319], "889375": [22, 572], "418": [22, 572], "4794775": [22, 572], "243": [22, 572], "png": [22, 207, 243, 259, 274, 307, 344, 572, 799, 835, 851, 866, 899, 936], "web": [22, 380, 390, 398, 572, 974, 984, 992, 1274, 1275], "mercat": [22, 264, 572, 856], "radx_dir": [23, 578], "first": [23, 27, 32, 59, 72, 88, 101, 137, 139, 141, 146, 382, 383, 393, 396, 446, 477, 500, 527, 528, 529, 536, 578, 583, 589, 620, 633, 649, 662, 727, 729, 731, 737, 976, 977, 987, 990, 1020, 1030, 1062, 1085, 1112, 1113, 1114, 1121, 1139, 1152, 1168, 1181, 1226, 1228, 1255, 1256, 1267, 1270, 1274, 1275, 1288, 1297, 1302, 1304, 1313, 1315, 1316, 1317, 1318, 1320, 1323], "radxconvert": [23, 578], "radx": [23, 578], "instal": [23, 120, 122, 123, 140, 145, 398, 542, 578, 681, 683, 684, 730, 735, 992, 1317, 1324, 1325], "filenames_psr": [24, 25, 579, 580], "undo_txcorr": [24, 25, 579, 580], "cpi": [24, 25, 575, 579, 580], "mean": [24, 29, 117, 157, 453, 455, 465, 468, 472, 473, 482, 495, 502, 539, 579, 585, 678, 750, 1038, 1040, 1050, 1053, 1057, 1058, 1067, 1080, 1087, 1124, 1212, 1213, 1219, 1221, 1222, 1231, 1232, 1237, 1245, 1255, 1256, 1274, 1275, 1316, 1317, 1318, 1320, 1323], "5": [24, 25, 26, 45, 126, 128, 135, 136, 137, 140, 145, 147, 148, 149, 150, 154, 155, 156, 164, 201, 222, 229, 232, 233, 234, 235, 236, 252, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 397, 445, 446, 460, 500, 501, 504, 506, 512, 513, 520, 524, 531, 533, 535, 579, 580, 581, 606, 716, 718, 725, 726, 727, 730, 735, 738, 739, 740, 741, 742, 747, 748, 749, 757, 792, 814, 821, 824, 825, 826, 827, 828, 844, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968, 991, 1029, 1030, 1045, 1085, 1086, 1089, 1091, 1097, 1098, 1105, 1109, 1116, 1118, 1120, 1127, 1247, 1269, 1270, 1275, 1283, 1286, 1288, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1302, 1304, 1305, 1306, 1307, 1311, 1313, 1316, 1317, 1318, 1319, 1320, 1323], "correct": [24, 25, 68, 71, 97, 100, 169, 197, 198, 199, 200, 201, 202, 203, 204, 388, 458, 516, 517, 527, 579, 580, 629, 632, 658, 661, 760, 788, 789, 790, 791, 792, 793, 794, 795, 982, 1043, 1101, 1102, 1112, 1148, 1151, 1177, 1180, 1204, 1267, 1270, 1271, 1275, 1285, 1305, 1309, 1313, 1318, 1321, 1323], "transmit": [24, 25, 477, 579, 580, 1062, 1313], "remov": [24, 25, 45, 59, 70, 71, 88, 99, 100, 126, 127, 128, 137, 142, 143, 146, 154, 155, 156, 197, 198, 199, 200, 201, 202, 203, 204, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 404, 429, 435, 436, 472, 500, 514, 579, 580, 606, 620, 631, 632, 649, 660, 661, 716, 717, 718, 727, 732, 733, 737, 741, 747, 748, 749, 788, 789, 790, 791, 792, 793, 794, 795, 814, 821, 825, 826, 827, 828, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 997, 1003, 1004, 1010, 1014, 1015, 1057, 1085, 1099, 1127, 1139, 1150, 1151, 1168, 1179, 1180, 1232, 1269, 1279, 1285, 1294, 1304, 1313, 1316, 1323], "signal": [24, 25, 26, 132, 144, 147, 148, 149, 164, 201, 202, 450, 453, 455, 458, 464, 466, 469, 471, 472, 474, 475, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 502, 517, 579, 580, 581, 722, 734, 738, 739, 740, 741, 757, 792, 793, 1034, 1038, 1040, 1043, 1049, 1051, 1054, 1056, 1057, 1059, 1060, 1064, 1065, 1066, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1087, 1102, 1231, 1232, 1237], "low_prf": [24, 25, 579, 580], "intermediate_prf": [24, 25, 579, 580], "high_prf": [24, 25, 579, 580], "within": [24, 44, 61, 62, 90, 91, 133, 137, 138, 139, 140, 141, 142, 143, 144, 151, 154, 155, 156, 158, 159, 169, 197, 236, 302, 339, 376, 444, 445, 446, 451, 465, 473, 482, 495, 498, 501, 524, 525, 526, 531, 579, 604, 622, 623, 651, 652, 688, 723, 727, 728, 729, 730, 731, 732, 733, 734, 743, 747, 748, 749, 751, 752, 760, 788, 828, 894, 931, 968, 1028, 1029, 1030, 1035, 1050, 1058, 1067, 1080, 1083, 1086, 1109, 1110, 1111, 1116, 1141, 1142, 1170, 1171, 1211, 1224, 1225, 1233, 1234, 1236, 1245, 1246, 1266, 1274, 1275, 1285, 1286, 1309, 1313, 1315, 1319, 1323, 1325], "step": [24, 135, 136, 148, 236, 302, 339, 376, 398, 465, 473, 475, 482, 495, 496, 498, 531, 533, 579, 725, 726, 739, 828, 894, 931, 968, 992, 1050, 1058, 1060, 1067, 1080, 1081, 1083, 1116, 1118, 1232, 1239, 1251, 1274, 1294, 1295, 1304, 1325], "taken": [24, 117, 125, 150, 151, 222, 289, 322, 359, 579, 678, 686, 742, 743, 814, 881, 914, 951, 1204, 1224, 1225, 1231, 1245, 1246, 1287], "fold": [25, 137, 138, 502, 580, 727, 728, 1087, 1274, 1318], "positive_awai": [25, 580], "complex": [25, 33, 469, 471, 480, 486, 487, 488, 489, 490, 491, 492, 538, 577, 580, 591, 1054, 1056, 1065, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1123], "spectra": [25, 28, 29, 32, 88, 452, 454, 455, 461, 463, 466, 469, 471, 474, 478, 480, 485, 486, 487, 488, 489, 490, 491, 492, 502, 577, 580, 584, 585, 589, 649, 1037, 1039, 1040, 1046, 1048, 1051, 1054, 1056, 1059, 1063, 1065, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1087, 1168, 1202, 1208, 1231, 1243, 1253, 1262], "so": [25, 138, 222, 233, 289, 300, 322, 337, 359, 374, 394, 446, 449, 580, 728, 736, 814, 825, 881, 892, 914, 929, 951, 966, 988, 1030, 1033, 1243, 1267, 1274, 1275, 1304, 1317, 1318, 1319, 1323, 1325], "doppler": [25, 88, 117, 137, 138, 139, 197, 452, 453, 454, 455, 458, 469, 472, 474, 488, 502, 514, 539, 580, 649, 678, 727, 728, 729, 788, 1037, 1038, 1039, 1040, 1043, 1054, 1057, 1059, 1073, 1087, 1099, 1124, 1168, 1231, 1232, 1267, 1268, 1271, 1272, 1287, 1297, 1309, 1310, 1320, 1321, 1323], "revers": [25, 222, 233, 289, 300, 322, 337, 359, 374, 394, 527, 580, 814, 825, 881, 892, 914, 929, 951, 966, 988, 1112], "veloc": [25, 26, 39, 72, 88, 101, 137, 138, 139, 197, 451, 452, 453, 502, 512, 513, 514, 515, 522, 539, 540, 580, 581, 599, 633, 649, 662, 727, 728, 729, 788, 1035, 1037, 1038, 1087, 1097, 1098, 1099, 1100, 1107, 1124, 1125, 1152, 1168, 1181, 1216, 1259, 1268, 1271, 1272, 1274, 1283, 1287, 1295, 1297, 1309, 1310, 1316, 1317, 1320, 1321, 1323], "awai": [25, 580, 1318], "routin": [26, 30, 31, 32, 396, 445, 542, 581, 586, 587, 589, 759, 990, 1029, 1267, 1309, 1317, 1319], "rainbow5": [26, 581], "version": [26, 45, 136, 168, 524, 525, 526, 539, 541, 581, 606, 726, 1022, 1109, 1110, 1111, 1124, 1127, 1211, 1267, 1309, 1317, 1320, 1322, 1323, 1325], "22": [26, 143, 152, 160, 163, 581, 733, 744, 753, 756, 1274, 1283, 1302], "3": [26, 59, 88, 117, 118, 129, 130, 137, 138, 146, 153, 163, 197, 199, 200, 203, 234, 388, 392, 398, 444, 446, 457, 497, 500, 514, 531, 533, 581, 620, 649, 678, 679, 719, 720, 727, 728, 737, 746, 756, 788, 790, 791, 794, 826, 982, 986, 992, 1028, 1030, 1042, 1082, 1085, 1099, 1116, 1118, 1139, 1168, 1199, 1232, 1239, 1251, 1269, 1270, 1272, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325], "34": [26, 536, 581, 1121, 1304, 1319], "16": [26, 154, 158, 505, 525, 539, 581, 747, 751, 1090, 1110, 1124, 1269, 1270, 1278, 1290, 1296, 1303, 1313, 1317, 1319, 1320, 1323], "35": [26, 139, 150, 151, 460, 581, 729, 742, 743, 1045, 1283, 1292, 1294, 1295, 1316], "sinc": [26, 515, 527, 581, 1036, 1100, 1112, 1304, 1312, 1315, 1318, 1319, 1320], "evolv": [26, 581], "constantli": [26, 581], "guaranti": [26, 581], "work": [26, 121, 124, 251, 252, 305, 333, 342, 370, 390, 392, 502, 536, 581, 682, 685, 843, 844, 897, 925, 934, 962, 984, 986, 1087, 1121, 1275, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1325], "necessari": [26, 581], "adapt": [26, 117, 152, 153, 160, 163, 581, 678, 744, 746, 753, 756, 1267, 1325], "code": [26, 44, 137, 522, 539, 581, 604, 727, 1107, 1124, 1267, 1269, 1270, 1272, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1319, 1322, 1325], "accord": [26, 132, 134, 394, 446, 449, 460, 467, 474, 475, 505, 506, 507, 509, 510, 581, 722, 724, 988, 1030, 1033, 1045, 1052, 1059, 1060, 1090, 1091, 1092, 1094, 1095, 1239, 1251], "its": [26, 164, 249, 527, 581, 745, 757, 841, 1112, 1254, 1309, 1318, 1322, 1323, 1325], "own": [26, 542, 581, 1283, 1309, 1319, 1322], "rais": [26, 45, 46, 52, 60, 61, 63, 72, 89, 90, 92, 101, 167, 381, 393, 407, 435, 436, 581, 606, 607, 613, 621, 622, 624, 633, 650, 651, 653, 662, 975, 987, 1003, 1004, 1014, 1015, 1127, 1128, 1134, 1140, 1141, 1143, 1152, 1169, 1170, 1172, 1181], "an": [26, 30, 31, 39, 43, 44, 45, 53, 59, 61, 62, 65, 66, 72, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 95, 101, 110, 111, 112, 113, 114, 115, 116, 130, 137, 138, 139, 140, 150, 151, 165, 168, 177, 197, 199, 200, 201, 202, 203, 204, 205, 227, 294, 327, 364, 370, 394, 397, 398, 440, 444, 445, 446, 466, 473, 474, 475, 495, 504, 516, 543, 556, 557, 573, 574, 581, 586, 587, 599, 603, 604, 606, 614, 620, 622, 623, 626, 627, 633, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 655, 656, 662, 671, 672, 673, 674, 675, 676, 677, 696, 720, 727, 728, 729, 730, 741, 742, 743, 768, 788, 790, 791, 792, 793, 794, 795, 797, 819, 886, 919, 956, 962, 988, 991, 992, 1008, 1018, 1020, 1028, 1029, 1030, 1051, 1058, 1059, 1060, 1080, 1089, 1101, 1127, 1135, 1139, 1141, 1142, 1145, 1146, 1152, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1174, 1175, 1181, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1216, 1225, 1229, 1230, 1245, 1246, 1250, 1251, 1263, 1265, 1267, 1272, 1275, 1278, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1299, 1300, 1302, 1304, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1324], "issu": [26, 44, 168, 305, 342, 394, 397, 581, 604, 897, 934, 988, 991, 1267, 1272, 1273, 1276, 1309, 1321, 1322, 1323, 1325], "upstream": [26, 581, 1323], "reflect": [26, 61, 90, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 140, 141, 142, 143, 144, 147, 148, 150, 151, 154, 155, 156, 158, 159, 169, 197, 200, 201, 224, 291, 324, 361, 450, 452, 454, 456, 457, 461, 463, 464, 470, 476, 477, 478, 479, 480, 483, 484, 486, 487, 491, 497, 500, 501, 503, 506, 508, 509, 510, 511, 517, 524, 525, 527, 531, 533, 535, 536, 581, 622, 651, 688, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 730, 731, 732, 733, 734, 738, 739, 741, 742, 743, 747, 748, 749, 751, 752, 760, 788, 791, 792, 816, 883, 916, 953, 971, 1020, 1034, 1036, 1037, 1039, 1041, 1042, 1046, 1048, 1049, 1055, 1061, 1062, 1063, 1064, 1065, 1068, 1069, 1071, 1072, 1076, 1082, 1085, 1086, 1088, 1091, 1093, 1094, 1095, 1096, 1102, 1109, 1110, 1112, 1116, 1118, 1120, 1121, 1141, 1170, 1207, 1209, 1210, 1242, 1268, 1270, 1271, 1272, 1274, 1275, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1290, 1293, 1296, 1297, 1299, 1300, 1301, 1302, 1304, 1307, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321], "dbuz": [26, 581], "dbzv": [26, 581], "dbuzv": [26, 581], "vu": [26, 581], "vv": [26, 581], "vvu": [26, 581], "spectrum": [26, 29, 454, 455, 502, 581, 585, 1039, 1040, 1087, 1231, 1232, 1267, 1320], "width": [26, 129, 152, 153, 163, 164, 250, 252, 266, 333, 370, 446, 454, 455, 456, 476, 581, 719, 744, 745, 746, 756, 757, 842, 844, 858, 925, 962, 1030, 1039, 1040, 1041, 1061, 1320], "w": [26, 76, 105, 139, 152, 160, 163, 460, 503, 517, 524, 531, 533, 581, 637, 666, 729, 744, 753, 756, 1045, 1088, 1102, 1109, 1116, 1118, 1156, 1185, 1305, 1317, 1318, 1319], "wu": [26, 444, 581, 1028, 1315], "wv": [26, 581], "wvu": [26, 581], "differenti": [26, 33, 126, 127, 128, 133, 141, 143, 144, 147, 148, 150, 151, 154, 155, 156, 158, 159, 197, 200, 461, 462, 463, 464, 468, 472, 486, 487, 501, 503, 507, 510, 524, 525, 526, 527, 528, 529, 531, 534, 538, 581, 591, 716, 717, 718, 723, 731, 733, 734, 738, 739, 742, 743, 747, 748, 749, 751, 752, 788, 791, 1046, 1047, 1048, 1049, 1053, 1057, 1071, 1072, 1086, 1088, 1092, 1095, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1119, 1123, 1287, 1309, 1319], "zdr": [26, 127, 128, 132, 143, 144, 147, 148, 154, 155, 156, 164, 200, 447, 459, 460, 524, 581, 717, 718, 722, 733, 734, 738, 739, 747, 748, 749, 757, 791, 1044, 1045, 1109, 1317, 1319], "zdru": [26, 581], "co": [26, 117, 121, 124, 142, 143, 144, 154, 155, 156, 197, 500, 515, 581, 678, 682, 685, 732, 733, 734, 747, 748, 749, 788, 1085, 1100, 1218, 1304], "correl": [26, 142, 143, 144, 154, 155, 156, 197, 200, 201, 501, 503, 522, 524, 531, 533, 581, 732, 733, 734, 741, 747, 748, 749, 788, 791, 792, 1086, 1088, 1107, 1109, 1116, 1118, 1220, 1222, 1242, 1286, 1287, 1303, 1304], "coeffici": [26, 126, 127, 128, 147, 148, 149, 150, 151, 152, 163, 197, 460, 501, 503, 504, 524, 531, 581, 716, 717, 718, 738, 739, 740, 742, 743, 744, 756, 788, 1045, 1086, 1088, 1089, 1109, 1116, 1220, 1222, 1223, 1242, 1286, 1287, 1303], "rhohv": [26, 132, 142, 143, 144, 154, 155, 156, 200, 201, 447, 456, 459, 460, 467, 471, 480, 481, 492, 524, 531, 533, 581, 722, 732, 733, 734, 741, 747, 748, 749, 791, 792, 1041, 1044, 1045, 1052, 1056, 1065, 1066, 1077, 1109, 1116, 1118, 1286, 1319, 1320], "rhohvu": [26, 581], "phase": [26, 33, 126, 127, 128, 133, 139, 141, 143, 144, 150, 151, 154, 155, 156, 158, 159, 200, 461, 462, 468, 472, 486, 489, 495, 501, 503, 507, 510, 522, 524, 525, 526, 527, 528, 529, 534, 538, 581, 591, 716, 717, 718, 723, 729, 731, 733, 734, 742, 743, 747, 748, 749, 751, 752, 791, 1046, 1047, 1053, 1057, 1071, 1074, 1080, 1086, 1088, 1092, 1095, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1119, 1123, 1287, 1309, 1313, 1319], "phidp": [26, 127, 128, 133, 141, 143, 144, 150, 151, 154, 155, 156, 158, 159, 200, 525, 526, 527, 581, 717, 718, 723, 731, 733, 734, 742, 743, 747, 748, 749, 751, 752, 791, 1110, 1111, 1112, 1309, 1319], "uphidp": [26, 581], "uphidpu": [26, 581], "kdp": [26, 144, 150, 151, 154, 155, 156, 447, 460, 507, 510, 524, 525, 526, 527, 528, 529, 581, 734, 742, 743, 747, 748, 749, 1045, 1092, 1095, 1109, 1110, 1111, 1112, 1113, 1114, 1305, 1309], "ukdp": [26, 581], "ukdpu": [26, 581], "qualiti": [26, 132, 152, 153, 160, 163, 201, 528, 529, 581, 722, 741, 744, 746, 753, 756, 792, 1113, 1114, 1274], "sqi": [26, 581], "sqiu": [26, 581], "sqiv": [26, 581], "sqivu": [26, 581], "temperatur": [26, 127, 128, 135, 136, 142, 143, 144, 146, 154, 155, 156, 203, 501, 520, 524, 531, 533, 581, 717, 718, 725, 726, 732, 733, 734, 737, 747, 748, 749, 794, 1086, 1105, 1109, 1116, 1118, 1305, 1319], "temp": [26, 581, 1267, 1319], "bin": [26, 59, 88, 117, 118, 119, 128, 141, 142, 143, 144, 147, 158, 159, 393, 465, 473, 482, 495, 498, 502, 521, 525, 526, 535, 581, 620, 649, 678, 679, 680, 718, 731, 732, 733, 734, 738, 751, 752, 987, 1050, 1058, 1067, 1080, 1083, 1087, 1106, 1110, 1111, 1120, 1139, 1168, 1231, 1237, 1248, 1278, 1313, 1320], "respect": [26, 59, 88, 161, 162, 164, 449, 500, 501, 503, 524, 531, 532, 533, 535, 536, 581, 620, 649, 745, 754, 755, 757, 1033, 1085, 1086, 1088, 1109, 1116, 1117, 1118, 1120, 1121, 1139, 1168], "iso0": [26, 127, 135, 136, 142, 143, 146, 154, 155, 156, 199, 460, 501, 503, 520, 524, 531, 532, 533, 537, 581, 717, 725, 726, 732, 733, 737, 747, 748, 749, 790, 1045, 1086, 1088, 1105, 1109, 1116, 1117, 1118, 1122], "visibl": [26, 134, 204, 517, 581, 724, 795, 1102, 1244, 1274, 1309], "digit": [26, 236, 302, 339, 376, 517, 556, 557, 573, 574, 581, 828, 894, 931, 968, 1102, 1267, 1317], "elev": [26, 31, 59, 66, 71, 82, 88, 95, 100, 111, 117, 118, 119, 135, 136, 143, 144, 147, 148, 149, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 197, 205, 222, 224, 229, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 272, 289, 291, 296, 300, 301, 302, 305, 322, 324, 332, 333, 337, 338, 339, 342, 359, 361, 369, 370, 374, 375, 376, 394, 449, 473, 495, 496, 515, 517, 521, 529, 531, 581, 587, 620, 627, 632, 643, 649, 656, 661, 672, 678, 679, 680, 725, 726, 733, 734, 736, 738, 739, 740, 744, 745, 746, 747, 748, 749, 753, 754, 755, 756, 757, 788, 797, 814, 816, 821, 825, 826, 827, 828, 841, 847, 849, 859, 861, 863, 864, 881, 883, 888, 892, 893, 894, 897, 914, 916, 924, 925, 929, 930, 931, 934, 951, 953, 961, 962, 966, 967, 968, 988, 1033, 1058, 1080, 1081, 1100, 1102, 1106, 1114, 1116, 1139, 1146, 1151, 1162, 1168, 1175, 1180, 1191, 1225, 1240, 1244, 1247, 1252, 1267, 1278, 1303, 1311, 1317, 1318, 1319, 1320], "model": [26, 30, 31, 59, 88, 117, 118, 135, 136, 138, 236, 302, 339, 376, 391, 397, 517, 531, 533, 581, 586, 587, 620, 649, 678, 679, 725, 726, 728, 828, 894, 931, 968, 985, 991, 1102, 1116, 1118, 1139, 1168, 1223, 1305, 1319], "dem": [26, 236, 302, 339, 376, 517, 581, 828, 894, 931, 968, 1102, 1309], "vi": [26, 460, 524, 581, 1045, 1109, 1305, 1317, 1319], "introduc": [26, 395, 529, 531, 581, 989, 1114, 1116], "swissbirdradar": [29, 585, 1267], "degre": [29, 47, 55, 69, 70, 98, 99, 117, 118, 119, 120, 121, 122, 123, 124, 125, 146, 150, 151, 161, 162, 203, 205, 222, 227, 228, 236, 248, 250, 254, 256, 264, 266, 268, 270, 272, 289, 294, 295, 302, 305, 322, 327, 328, 331, 333, 339, 342, 359, 364, 365, 368, 370, 376, 465, 476, 495, 531, 539, 585, 608, 616, 630, 631, 659, 660, 678, 679, 680, 681, 682, 683, 684, 685, 686, 736, 737, 742, 743, 754, 755, 794, 797, 814, 819, 820, 828, 840, 842, 846, 848, 856, 858, 860, 862, 864, 881, 886, 887, 894, 897, 914, 919, 920, 923, 925, 931, 934, 951, 956, 957, 960, 962, 968, 1027, 1050, 1061, 1080, 1116, 1124, 1129, 1149, 1150, 1178, 1179, 1213, 1215, 1224, 1225, 1234, 1235, 1236, 1247, 1256, 1260, 1299, 1302, 1320, 1323], "abov": [29, 55, 56, 59, 61, 88, 90, 126, 127, 128, 129, 130, 135, 136, 137, 140, 142, 143, 145, 146, 150, 151, 154, 155, 156, 158, 171, 185, 197, 199, 200, 201, 203, 227, 228, 294, 295, 327, 328, 364, 365, 446, 449, 450, 460, 500, 504, 525, 531, 533, 539, 585, 616, 617, 620, 622, 649, 651, 690, 704, 716, 717, 718, 719, 720, 725, 726, 727, 730, 732, 733, 735, 737, 741, 742, 743, 747, 748, 749, 751, 762, 776, 788, 790, 791, 792, 794, 819, 820, 886, 887, 919, 920, 956, 957, 971, 1030, 1033, 1034, 1045, 1085, 1089, 1110, 1116, 1118, 1124, 1139, 1141, 1168, 1170, 1231, 1232, 1235, 1236, 1272, 1278, 1293, 1295, 1301, 1306, 1307, 1309, 1311, 1313, 1318, 1321, 1323, 1325], "sea": [29, 55, 56, 59, 88, 539, 585, 616, 617, 620, 649, 1124, 1139, 1168, 1323], "level": [29, 30, 31, 47, 53, 55, 56, 59, 76, 88, 105, 127, 128, 243, 244, 245, 246, 251, 252, 253, 255, 257, 259, 260, 261, 262, 267, 269, 271, 390, 391, 392, 398, 399, 469, 474, 488, 503, 522, 531, 532, 533, 536, 539, 585, 586, 587, 608, 614, 616, 617, 620, 637, 649, 666, 717, 718, 835, 836, 837, 838, 843, 844, 845, 847, 849, 851, 852, 853, 854, 859, 861, 863, 984, 985, 986, 992, 993, 1054, 1059, 1073, 1088, 1107, 1116, 1117, 1118, 1121, 1124, 1129, 1135, 1139, 1156, 1168, 1185, 1231, 1232, 1294, 1295, 1298, 1303, 1309, 1315, 1317, 1319, 1320, 1323], "meter": [29, 55, 56, 57, 58, 70, 71, 72, 99, 100, 101, 117, 118, 119, 120, 121, 122, 123, 124, 125, 146, 205, 236, 272, 302, 305, 330, 333, 339, 342, 367, 370, 376, 441, 442, 443, 444, 445, 446, 450, 500, 522, 527, 530, 536, 539, 585, 616, 617, 618, 619, 631, 632, 633, 660, 661, 662, 678, 679, 680, 681, 682, 683, 684, 685, 686, 737, 797, 828, 864, 894, 897, 922, 925, 931, 934, 959, 962, 968, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1034, 1085, 1107, 1112, 1115, 1121, 1124, 1150, 1151, 1152, 1179, 1180, 1181, 1199, 1234, 1260, 1278, 1306, 1315, 1318, 1320, 1323], "compress": [30, 31, 380, 388, 389, 586, 587, 974, 982, 983], "gzip": [30, 31, 380, 388, 389, 586, 587, 974, 982, 983], "compression_opt": [30, 31, 586, 587], "6": [30, 31, 132, 135, 136, 157, 158, 159, 200, 501, 506, 514, 517, 520, 524, 525, 526, 533, 586, 587, 722, 725, 726, 750, 751, 752, 791, 1086, 1091, 1099, 1102, 1105, 1109, 1110, 1111, 1118, 1232, 1239, 1251, 1275, 1278, 1283, 1284, 1288, 1291, 1302, 1303, 1305, 1306, 1309, 1311, 1313, 1316, 1317, 1318, 1319, 1320, 1322, 1325], "undefined_valu": [30, 31, 586, 587], "odim_convent": [30, 31, 586, 587], "v2_2": [30, 31, 586, 587], "write": [30, 31, 32, 396, 397, 398, 399, 400, 586, 587, 588, 589, 990, 991, 992, 993, 994, 1126, 1137, 1272, 1273, 1312], "eumetnet": [30, 31, 586, 587], "opera": [30, 31, 586, 587, 1267, 1309], "compliant": [30, 31, 396, 586, 587, 990], "produc": [30, 31, 32, 140, 387, 396, 398, 401, 474, 475, 534, 540, 586, 587, 589, 730, 981, 990, 992, 996, 1059, 1060, 1119, 1125, 1309, 1323], "follow": [30, 31, 32, 139, 197, 200, 201, 396, 397, 399, 400, 439, 445, 446, 502, 517, 524, 527, 531, 533, 586, 587, 589, 729, 741, 788, 791, 792, 990, 991, 993, 994, 1007, 1017, 1029, 1030, 1087, 1102, 1109, 1112, 1116, 1118, 1274, 1302, 1309, 1317, 1318, 1319, 1322, 1323], "inform": [30, 31, 39, 45, 59, 76, 88, 105, 126, 137, 147, 148, 149, 150, 151, 182, 194, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 386, 394, 397, 527, 536, 541, 545, 556, 557, 573, 574, 586, 587, 599, 606, 620, 637, 649, 666, 701, 713, 716, 727, 738, 739, 740, 742, 743, 773, 785, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 980, 988, 991, 1112, 1121, 1127, 1139, 1156, 1168, 1185, 1275, 1295, 1309, 1323], "http": [30, 31, 125, 390, 391, 392, 500, 522, 586, 587, 686, 984, 985, 986, 1036, 1085, 1107, 1242, 1267, 1275, 1286, 1295, 1304, 1309, 1317, 1322, 1323, 1325], "www": [30, 31, 125, 390, 391, 392, 522, 586, 587, 686, 984, 985, 986, 1107, 1323], "eu": [30, 31, 586, 587], "wp": [30, 31, 586, 587], "content": [30, 31, 586, 587, 1317], "upload": [30, 31, 586, 587], "2021": [30, 31, 586, 587, 1304, 1309, 1318], "07": [30, 31, 586, 587, 1275, 1281, 1286, 1300, 1304, 1320, 1321], "odim_h5_v2": [30, 31, 586, 587], "pdf": [30, 31, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 586, 587, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968], "process": [30, 31, 138, 150, 151, 252, 460, 517, 586, 587, 728, 742, 743, 844, 1045, 1102, 1267, 1274, 1309, 1310, 1319, 1323], "save": [30, 31, 54, 207, 222, 224, 229, 233, 234, 235, 236, 243, 259, 274, 289, 291, 296, 300, 301, 302, 307, 322, 324, 332, 333, 337, 338, 339, 344, 359, 361, 369, 370, 374, 375, 376, 397, 399, 586, 587, 615, 799, 814, 816, 821, 825, 826, 827, 828, 835, 851, 866, 881, 883, 888, 892, 893, 894, 899, 914, 916, 924, 925, 929, 930, 931, 936, 951, 953, 961, 962, 966, 967, 968, 991, 993, 1031, 1136, 1309, 1310], "equal": [30, 31, 62, 91, 120, 122, 123, 138, 174, 175, 180, 188, 189, 192, 370, 388, 399, 536, 539, 586, 587, 623, 652, 681, 683, 684, 693, 694, 699, 707, 708, 711, 728, 765, 766, 771, 779, 780, 783, 962, 982, 993, 1121, 1124, 1142, 1171, 1252, 1286, 1304, 1305, 1316, 1318, 1319], "_fillvalu": [30, 31, 32, 396, 397, 586, 587, 589, 990, 991, 1312, 1320], "fill": [30, 31, 42, 126, 127, 128, 536, 586, 587, 602, 716, 717, 718, 1121, 1311, 1312], "linear": [30, 31, 127, 135, 136, 150, 151, 390, 500, 529, 586, 587, 717, 725, 726, 742, 743, 984, 1085, 1114, 1219, 1231, 1232, 1243, 1259, 1304, 1309], "keyword": [30, 31, 32, 221, 288, 321, 333, 358, 370, 390, 392, 472, 517, 586, 587, 589, 813, 880, 913, 925, 950, 962, 984, 986, 1057, 1102, 1312, 1315], "scale_factor": [30, 31, 32, 399, 586, 587, 589, 993], "add_offset": [30, 31, 32, 399, 586, 587, 589, 993], "calcul": [30, 31, 32, 33, 45, 47, 59, 70, 71, 88, 99, 100, 117, 118, 122, 126, 127, 128, 142, 143, 146, 150, 151, 154, 155, 156, 161, 169, 197, 199, 200, 201, 202, 203, 204, 205, 236, 272, 302, 305, 339, 342, 376, 445, 446, 450, 451, 457, 476, 477, 483, 497, 500, 517, 522, 534, 538, 539, 540, 586, 587, 589, 591, 606, 608, 620, 631, 632, 649, 660, 661, 678, 679, 683, 688, 716, 717, 718, 732, 733, 737, 741, 742, 743, 747, 748, 749, 754, 760, 788, 790, 791, 792, 793, 794, 795, 797, 828, 864, 894, 897, 931, 934, 968, 1029, 1030, 1034, 1035, 1042, 1061, 1062, 1068, 1082, 1085, 1102, 1107, 1119, 1123, 1124, 1125, 1127, 1129, 1139, 1150, 1151, 1168, 1179, 1180, 1216, 1218, 1231, 1234, 1235, 1236, 1241, 1260, 1269, 1272, 1278, 1294, 1295, 1301, 1304, 1307, 1309, 1313, 1316, 1321, 1323], "fly": [30, 31, 32, 586, 587, 589], "_write_as_dtyp": [30, 31, 32, 399, 586, 587, 589, 993], "datatyp": [30, 31, 586, 587, 1267], "It": [30, 31, 146, 152, 414, 428, 446, 515, 529, 531, 539, 586, 587, 737, 744, 1030, 1100, 1114, 1116, 1124, 1216, 1231, 1278, 1317, 1319, 1323, 1325], "uint8": [30, 31, 399, 586, 587, 993], "uint16": [30, 31, 399, 586, 587, 993], "typic": [30, 31, 121, 124, 138, 169, 173, 175, 182, 189, 194, 398, 444, 445, 586, 587, 682, 685, 688, 692, 694, 701, 708, 713, 728, 760, 764, 766, 773, 780, 785, 992, 1028, 1029, 1325], "lzf": [30, 31, 586, 587], "recomend": [30, 31, 586, 587], "replac": [30, 31, 46, 60, 61, 62, 89, 90, 91, 138, 139, 173, 175, 182, 189, 194, 586, 587, 607, 621, 622, 623, 650, 651, 652, 692, 694, 701, 708, 713, 728, 729, 764, 766, 773, 780, 785, 1128, 1140, 1141, 1142, 1169, 1170, 1171, 1267], "exampl": [30, 31, 44, 61, 90, 169, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 401, 441, 442, 443, 445, 446, 586, 587, 604, 622, 651, 688, 760, 814, 821, 824, 825, 826, 827, 828, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968, 996, 1020, 1024, 1025, 1026, 1029, 1030, 1137, 1141, 1170, 1269, 1270, 1271, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1311, 1313, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1325], "NOT": [30, 31, 169, 586, 587, 688, 760], "written": [30, 31, 397, 399, 400, 586, 587, 991, 993, 994, 1267, 1309], "odim": [30, 31, 586, 587, 1267], "convent": [30, 31, 59, 88, 137, 453, 472, 514, 539, 540, 586, 587, 620, 649, 727, 1038, 1057, 1099, 1124, 1125, 1139, 1168, 1267, 1274, 1309, 1318, 1320], "v2_3": [30, 31, 586, 587], "support": [31, 251, 252, 333, 370, 381, 389, 390, 391, 392, 393, 401, 527, 542, 587, 843, 844, 925, 962, 975, 983, 984, 985, 986, 987, 995, 996, 1020, 1112, 1267, 1294, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1322], "featur": [31, 460, 587, 1045, 1286, 1304, 1309, 1319], "ppi": [31, 59, 88, 138, 139, 140, 145, 221, 225, 229, 288, 292, 296, 321, 325, 332, 333, 358, 362, 369, 370, 473, 495, 517, 529, 587, 620, 649, 728, 729, 730, 735, 813, 817, 821, 880, 884, 888, 913, 917, 924, 925, 950, 954, 961, 962, 1031, 1058, 1080, 1102, 1114, 1139, 1168, 1200, 1201, 1204, 1207, 1209, 1224, 1225, 1272, 1282, 1285, 1286, 1298, 1300, 1309, 1318, 1319, 1320, 1321], "pvol": [31, 587], "differ": [31, 120, 122, 123, 135, 136, 137, 147, 148, 149, 154, 155, 156, 500, 502, 506, 514, 527, 533, 587, 681, 683, 684, 725, 726, 727, 736, 738, 739, 740, 747, 748, 749, 971, 1020, 1085, 1087, 1091, 1099, 1112, 1118, 1250, 1252, 1267, 1274, 1278, 1304, 1315, 1317, 1318, 1319, 1322, 1323], "group": [31, 587, 1323], "sector": [31, 59, 88, 587, 620, 649, 1139, 1168, 1320], "azim": [31, 587], "rhi": [31, 59, 88, 221, 222, 233, 288, 289, 300, 321, 322, 337, 358, 359, 374, 473, 495, 503, 529, 531, 587, 620, 649, 813, 814, 825, 880, 881, 892, 913, 914, 929, 950, 951, 966, 1031, 1058, 1080, 1088, 1114, 1116, 1139, 1168, 1201, 1210, 1224, 1225, 1240, 1252, 1272, 1282, 1300, 1309, 1318, 1320, 1321], "Not": [31, 381, 389, 587, 975, 983], "yet": [31, 394, 587, 988, 1274, 1309], "fix": [31, 496, 542, 587, 1081, 1267, 1272, 1273, 1276, 1297, 1311, 1319, 1321, 1322, 1323, 1325], "stare": [31, 587], "mode": [31, 59, 76, 88, 105, 380, 496, 531, 587, 620, 637, 649, 666, 974, 1081, 1116, 1139, 1156, 1168, 1185, 1320, 1322, 1323], "netcdf4": [32, 54, 391, 396, 397, 589, 615, 985, 990, 991, 1136, 1292, 1309, 1311, 1322, 1325], "time_refer": [32, 396, 589, 990, 1311], "arm_time_vari": [32, 54, 396, 397, 589, 615, 990, 991, 1136], "standard": [32, 54, 59, 76, 88, 105, 117, 118, 137, 147, 148, 164, 396, 397, 398, 474, 501, 514, 528, 542, 589, 615, 620, 637, 649, 666, 678, 679, 727, 738, 739, 745, 757, 990, 991, 992, 1036, 1059, 1086, 1099, 1113, 1136, 1139, 1156, 1168, 1185, 1214, 1215, 1241, 1246, 1311, 1312, 1313, 1317, 1319, 1323], "attempt": [32, 138, 139, 396, 397, 589, 728, 729, 990, 991], "also": [32, 44, 59, 88, 173, 223, 247, 265, 290, 323, 360, 391, 392, 396, 398, 400, 438, 500, 589, 604, 620, 649, 692, 764, 815, 839, 857, 882, 915, 952, 985, 986, 990, 992, 994, 1006, 1016, 1020, 1085, 1139, 1168, 1274, 1278, 1304, 1309, 1311, 1315, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1325], "made": [32, 61, 90, 396, 451, 589, 622, 651, 990, 1035, 1141, 1170, 1265, 1323], "meet": [32, 173, 175, 182, 189, 194, 396, 589, 692, 694, 701, 708, 713, 764, 766, 773, 780, 785, 990], "mani": [32, 396, 460, 589, 990, 1045, 1309, 1315, 1318, 1323, 1325], "outlin": [32, 396, 527, 589, 990, 1112, 1231, 1232, 1323], "To": [32, 45, 61, 90, 197, 199, 200, 201, 202, 203, 204, 396, 397, 399, 589, 606, 622, 651, 741, 788, 790, 791, 792, 793, 794, 795, 990, 991, 993, 1127, 1141, 1170, 1265, 1309, 1312, 1315, 1318, 1322, 1323, 1325], "control": [32, 44, 137, 152, 153, 160, 163, 394, 396, 397, 446, 524, 527, 531, 589, 604, 727, 744, 746, 753, 756, 988, 990, 991, 1030, 1109, 1112, 1116, 1315], "how": [32, 61, 90, 394, 396, 397, 460, 503, 589, 622, 651, 988, 990, 991, 1045, 1088, 1141, 1170, 1274, 1275, 1283, 1284, 1285, 1309, 1312, 1315, 1316, 1317, 1325], "_zlib": [32, 396, 397, 589, 990, 991], "_deflatelevel": [32, 396, 397, 589, 990, 991], "_shuffl": [32, 396, 397, 589, 990, 991], "_fletcher32": [32, 396, 397, 589, 990, 991], "_contingu": [32, 396, 397, 589, 990, 991], "_chunksiz": [32, 396, 397, 589, 990, 991], "_endian": [32, 396, 397, 589, 990, 991], "_least_significant_digit": [32, 396, 397, 589, 990, 991], "see": [32, 61, 90, 118, 137, 169, 221, 235, 248, 252, 254, 256, 264, 268, 270, 288, 301, 321, 333, 338, 358, 370, 375, 388, 396, 397, 446, 500, 503, 522, 536, 589, 622, 651, 679, 688, 727, 760, 813, 827, 840, 844, 846, 848, 856, 860, 862, 880, 893, 913, 925, 930, 950, 962, 967, 982, 990, 991, 1030, 1031, 1085, 1088, 1107, 1121, 1141, 1170, 1274, 1275, 1283, 1304, 1311, 1313, 1315, 1316, 1317, 1318, 1323], "document": [32, 137, 248, 252, 254, 256, 264, 268, 270, 333, 370, 391, 396, 397, 589, 727, 840, 844, 846, 848, 856, 860, 862, 925, 962, 985, 990, 991, 1259, 1266, 1309, 1315, 1323], "detail": [32, 118, 137, 169, 252, 264, 333, 370, 396, 397, 444, 446, 500, 589, 679, 688, 727, 760, 844, 856, 925, 962, 990, 991, 1028, 1030, 1085, 1304, 1309, 1320, 1323], "one": [32, 40, 45, 53, 54, 59, 61, 88, 90, 135, 136, 145, 159, 173, 175, 182, 189, 194, 197, 201, 396, 397, 399, 444, 445, 446, 449, 493, 502, 503, 512, 513, 527, 528, 529, 531, 532, 533, 588, 589, 600, 606, 614, 615, 620, 622, 649, 651, 692, 694, 701, 708, 713, 725, 726, 735, 741, 752, 764, 766, 773, 780, 785, 788, 792, 990, 991, 993, 1020, 1028, 1029, 1030, 1033, 1036, 1078, 1087, 1088, 1097, 1098, 1112, 1113, 1114, 1116, 1117, 1118, 1127, 1135, 1136, 1139, 1141, 1168, 1170, 1221, 1224, 1225, 1242, 1252, 1253, 1259, 1267, 1272, 1277, 1278, 1283, 1309, 1312, 1317, 1318, 1319, 1320, 1323, 1325], "netcdf4_class": [32, 54, 396, 397, 589, 615, 990, 991, 1136], "netcdf3_class": [32, 54, 396, 397, 589, 615, 990, 991, 1136], "netcdf3_64bit": [32, 54, 396, 397, 589, 615, 990, 991, 1136], "non": [32, 120, 122, 123, 139, 394, 396, 500, 527, 529, 542, 589, 681, 683, 684, 729, 988, 990, 1085, 1112, 1114, 1304], "zero": [32, 396, 500, 517, 523, 527, 556, 589, 971, 990, 1085, 1102, 1108, 1112, 1252, 1259, 1267, 1304, 1312, 1316], "base_tim": [32, 54, 396, 397, 589, 615, 990, 991, 1136, 1302], "time_offset": [32, 54, 396, 397, 589, 615, 990, 991, 1136, 1302], "phidp_field": [33, 126, 127, 128, 133, 141, 143, 144, 150, 151, 154, 155, 156, 158, 159, 525, 526, 527, 528, 529, 538, 591, 716, 717, 718, 723, 731, 733, 734, 742, 743, 747, 748, 749, 751, 752, 1110, 1111, 1112, 1113, 1114, 1123, 1269, 1305, 1319], "phidp_texture_field": [33, 538, 591, 1123], "textur": [33, 200, 451, 538, 591, 791, 1035, 1123, 1216, 1241, 1264, 1309, 1313, 1319], "real": [33, 137, 538, 591, 727, 1123, 1272, 1282, 1304, 1309, 1323, 1325], "part": [33, 505, 538, 591, 1090, 1123, 1274, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320], "shift": [33, 133, 141, 150, 151, 154, 158, 159, 205, 272, 305, 342, 502, 523, 525, 526, 528, 538, 591, 723, 731, 742, 743, 747, 751, 752, 797, 864, 897, 934, 1087, 1108, 1110, 1111, 1113, 1123, 1313, 1319], "texture_field": [33, 538, 591, 1123], "gourlei": [33, 132, 154, 155, 156, 538, 591, 722, 747, 748, 749, 1123], "j": [33, 121, 124, 139, 150, 151, 152, 153, 160, 163, 500, 503, 524, 528, 529, 531, 534, 536, 538, 539, 540, 591, 682, 685, 729, 742, 743, 744, 746, 753, 756, 1036, 1085, 1088, 1109, 1113, 1114, 1116, 1119, 1121, 1123, 1124, 1125, 1269, 1270, 1279, 1280, 1287, 1288, 1290, 1292, 1296, 1299, 1304, 1309, 1323], "p": [33, 35, 37, 43, 117, 121, 124, 152, 153, 160, 163, 444, 455, 460, 469, 473, 474, 482, 488, 495, 505, 534, 538, 591, 594, 596, 603, 678, 682, 685, 744, 746, 753, 756, 1028, 1040, 1045, 1054, 1058, 1059, 1067, 1073, 1080, 1090, 1119, 1123, 1197, 1231, 1309, 1323], "tabari": [33, 538, 591, 1123], "parent": [33, 538, 591, 1123], "du": [33, 538, 591, 1123], "chatelet": [33, 538, 591, 1123], "fuzzi": [33, 538, 591, 1123], "logic": [33, 173, 175, 182, 189, 194, 538, 591, 692, 694, 701, 708, 713, 764, 766, 773, 780, 785, 1123], "algorithm": [33, 135, 136, 137, 138, 139, 148, 154, 155, 169, 428, 444, 446, 455, 460, 474, 475, 500, 503, 504, 527, 531, 536, 538, 591, 688, 725, 726, 727, 728, 729, 739, 747, 748, 760, 1028, 1030, 1040, 1045, 1059, 1060, 1085, 1088, 1089, 1112, 1116, 1121, 1123, 1268, 1271, 1272, 1309, 1318, 1319, 1321, 1323], "separ": [33, 149, 517, 522, 536, 538, 539, 591, 740, 1102, 1107, 1121, 1123, 1124, 1231, 1242, 1274, 1286, 1317, 1318, 1325], "precipit": [33, 133, 136, 141, 158, 159, 482, 495, 524, 538, 591, 723, 726, 731, 751, 752, 1067, 1080, 1109, 1123, 1242, 1278, 1286, 1304, 1318, 1319, 1323], "nonprecipit": [33, 538, 591, 1123], "echo": [33, 500, 517, 524, 538, 591, 1085, 1102, 1109, 1123, 1304, 1316, 1318], "polarimetr": [33, 126, 127, 128, 132, 150, 151, 465, 471, 472, 473, 482, 495, 503, 506, 524, 531, 534, 535, 538, 591, 716, 717, 718, 722, 742, 743, 1050, 1056, 1057, 1058, 1067, 1080, 1088, 1091, 1109, 1116, 1119, 1120, 1123, 1269, 1319], "observ": [33, 117, 135, 136, 152, 153, 155, 160, 163, 460, 482, 495, 500, 527, 533, 538, 591, 678, 725, 726, 744, 746, 748, 753, 756, 1045, 1067, 1080, 1085, 1112, 1118, 1123, 1223, 1304, 1319], "journal": [33, 137, 139, 444, 455, 469, 474, 475, 488, 505, 517, 538, 591, 727, 729, 1028, 1040, 1054, 1059, 1060, 1073, 1090, 1102, 1123, 1231, 1232, 1309, 1323], "atmospher": [33, 59, 88, 117, 118, 137, 138, 152, 163, 446, 449, 475, 505, 517, 530, 538, 591, 620, 649, 678, 679, 727, 728, 744, 756, 1030, 1033, 1060, 1090, 1102, 1115, 1123, 1139, 1168, 1232, 1274, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "ocean": [33, 137, 150, 151, 475, 500, 505, 517, 534, 538, 591, 727, 742, 743, 1060, 1085, 1090, 1102, 1119, 1123, 1232, 1274, 1304], "technologi": [33, 137, 475, 505, 517, 538, 591, 727, 1060, 1090, 1102, 1123, 1232], "24": [33, 538, 591, 1123, 1275, 1276, 1306, 1317, 1318], "8": [33, 76, 105, 125, 126, 137, 150, 154, 155, 200, 249, 251, 252, 253, 255, 257, 267, 269, 271, 538, 591, 637, 666, 686, 716, 727, 742, 747, 748, 791, 841, 843, 844, 845, 847, 849, 859, 861, 863, 1123, 1156, 1185, 1232, 1266, 1275, 1278, 1284, 1294, 1298, 1302, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1323], "1439": [33, 538, 591, 1123], "1451": [33, 538, 591, 1123], "class": [34, 45, 55, 59, 88, 169, 198, 205, 239, 251, 252, 258, 272, 305, 333, 342, 401, 414, 428, 445, 460, 503, 504, 517, 524, 542, 592, 593, 606, 616, 620, 649, 687, 688, 759, 760, 789, 796, 797, 831, 843, 844, 850, 864, 897, 925, 934, 995, 996, 1009, 1019, 1020, 1021, 1023, 1029, 1045, 1088, 1089, 1102, 1109, 1126, 1127, 1137, 1139, 1168, 1266, 1267, 1309, 1315, 1316, 1319, 1323], "filetyp": [34, 40, 593, 600], "need": [34, 59, 68, 70, 71, 88, 97, 99, 100, 135, 136, 167, 398, 410, 500, 593, 620, 629, 631, 632, 649, 658, 660, 661, 725, 726, 992, 1085, 1139, 1148, 1150, 1151, 1168, 1177, 1179, 1180, 1234, 1260, 1274, 1278, 1283, 1304, 1309, 1311, 1312, 1313, 1315, 1316, 1319, 1320, 1322, 1323, 1325], "being": [34, 36, 137, 197, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 446, 529, 593, 595, 727, 788, 814, 816, 821, 824, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 925, 928, 929, 930, 931, 951, 953, 961, 962, 965, 966, 967, 968, 1030, 1036, 1114, 1245, 1246, 1267, 1295, 1322], "string": [34, 45, 59, 88, 224, 227, 228, 232, 235, 250, 252, 266, 291, 294, 295, 299, 301, 324, 327, 328, 329, 330, 331, 334, 336, 338, 361, 364, 365, 366, 367, 368, 371, 373, 375, 379, 427, 445, 446, 466, 485, 516, 517, 522, 528, 529, 534, 539, 540, 543, 593, 606, 620, 649, 816, 819, 820, 824, 827, 842, 844, 858, 883, 886, 887, 891, 893, 916, 919, 920, 921, 922, 923, 926, 928, 930, 953, 956, 957, 958, 959, 960, 963, 965, 967, 973, 1029, 1030, 1051, 1070, 1101, 1102, 1107, 1113, 1114, 1119, 1124, 1125, 1127, 1139, 1168, 1217, 1218, 1283, 1323], "initi": [34, 49, 50, 51, 55, 77, 78, 79, 80, 106, 107, 108, 109, 137, 138, 169, 205, 272, 305, 342, 401, 535, 593, 610, 611, 612, 616, 638, 639, 640, 641, 667, 668, 669, 670, 688, 727, 728, 760, 797, 864, 897, 934, 996, 1120, 1131, 1132, 1133, 1157, 1158, 1159, 1160, 1186, 1187, 1188, 1189, 1285], "dic": [37, 45, 59, 60, 88, 89, 401, 413, 446, 596, 606, 620, 621, 649, 650, 996, 1030, 1127, 1139, 1140, 1168, 1169], "colormap": [38, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 598, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 992, 1272, 1282, 1286, 1300, 1305, 1319, 1321], "select": [39, 64, 73, 93, 102, 139, 465, 473, 482, 495, 498, 512, 513, 531, 533, 535, 599, 625, 634, 654, 663, 729, 1050, 1058, 1067, 1080, 1083, 1097, 1098, 1116, 1118, 1120, 1144, 1153, 1173, 1182], "limit": [39, 137, 138, 150, 151, 197, 199, 200, 201, 202, 203, 204, 224, 238, 264, 291, 304, 324, 341, 361, 378, 388, 399, 447, 521, 527, 531, 599, 727, 728, 741, 742, 743, 788, 790, 791, 792, 793, 794, 795, 816, 830, 856, 883, 896, 916, 933, 953, 970, 982, 993, 1106, 1112, 1116, 1261, 1262, 1279, 1280, 1284, 1309, 1315, 1319], "relat": [39, 128, 154, 155, 156, 399, 500, 506, 509, 510, 511, 528, 536, 599, 718, 747, 748, 749, 993, 1085, 1091, 1094, 1095, 1096, 1113, 1121, 1304, 1309, 1319, 1322, 1323], "instac": [39, 599], "nyquist": [39, 72, 101, 137, 138, 139, 451, 599, 633, 662, 727, 728, 729, 1035, 1152, 1181, 1216, 1313, 1318, 1320], "consid": [39, 126, 133, 135, 136, 140, 141, 142, 143, 144, 145, 147, 148, 154, 155, 156, 158, 159, 469, 474, 475, 488, 500, 512, 513, 521, 525, 526, 531, 532, 533, 599, 716, 723, 725, 726, 730, 731, 732, 733, 734, 735, 738, 739, 747, 748, 749, 751, 752, 971, 1054, 1059, 1060, 1073, 1085, 1097, 1098, 1106, 1110, 1111, 1116, 1117, 1118, 1221, 1224, 1225, 1231, 1232, 1247, 1304], "vmin": [39, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 599, 814, 816, 821, 824, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 925, 928, 929, 930, 931, 951, 953, 961, 962, 965, 966, 967, 968, 992, 1269, 1270, 1274, 1275, 1278, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1312, 1313, 1315, 1316, 1318, 1319], "vmax": [39, 222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 398, 599, 814, 816, 821, 824, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 925, 928, 929, 930, 931, 951, 953, 961, 962, 965, 966, 967, 968, 992, 1269, 1270, 1274, 1275, 1278, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1312, 1313, 1315, 1316, 1318, 1319], "2": [39, 117, 121, 125, 139, 140, 144, 145, 147, 148, 149, 152, 154, 155, 163, 200, 211, 222, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 249, 250, 251, 255, 257, 266, 267, 269, 271, 278, 289, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 311, 322, 324, 327, 328, 332, 335, 336, 337, 338, 339, 341, 348, 359, 361, 364, 365, 369, 370, 372, 373, 374, 375, 376, 378, 390, 391, 392, 394, 436, 444, 446, 455, 456, 474, 482, 497, 500, 517, 527, 533, 539, 599, 678, 682, 686, 729, 730, 734, 735, 738, 739, 740, 744, 747, 748, 756, 791, 803, 814, 816, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 841, 842, 843, 847, 849, 858, 859, 861, 863, 870, 881, 883, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 903, 914, 916, 919, 920, 924, 927, 928, 929, 930, 931, 933, 940, 951, 953, 956, 957, 961, 962, 964, 965, 966, 967, 968, 970, 984, 985, 986, 988, 1004, 1015, 1020, 1028, 1030, 1031, 1040, 1041, 1059, 1067, 1082, 1085, 1102, 1112, 1118, 1124, 1199, 1217, 1218, 1232, 1242, 1244, 1271, 1276, 1278, 1283, 1284, 1285, 1290, 1291, 1294, 1295, 1298, 1302, 1304, 1305, 1306, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1323], "tuplet": [39, 599], "minimun": [39, 599], "maximun": [39, 599], "teoric": [39, 599], "copi": [40, 44, 45, 61, 62, 64, 65, 66, 68, 90, 91, 93, 94, 95, 97, 183, 184, 401, 446, 600, 604, 606, 622, 623, 625, 626, 627, 629, 651, 652, 654, 655, 656, 658, 702, 703, 774, 775, 996, 1030, 1127, 1141, 1142, 1144, 1145, 1146, 1148, 1170, 1171, 1173, 1174, 1175, 1177, 1265, 1312], "field_map": [40, 600], "anoth": [40, 465, 473, 482, 495, 498, 600, 1020, 1050, 1058, 1067, 1080, 1083, 1242, 1278, 1311, 1316, 1319, 1322, 1325], "empti": [43, 407, 436, 528, 529, 603, 1004, 1015, 1113, 1114, 1197, 1199, 1202, 1267, 1311, 1318, 1319], "exist": [43, 46, 60, 61, 63, 89, 90, 92, 145, 173, 175, 182, 189, 194, 197, 200, 201, 394, 527, 603, 607, 621, 622, 624, 650, 651, 653, 692, 694, 701, 708, 713, 735, 741, 764, 766, 773, 780, 785, 788, 791, 792, 988, 1112, 1128, 1137, 1140, 1141, 1143, 1169, 1170, 1172, 1197, 1265, 1269, 1309, 1311], "self": [44, 150, 151, 154, 155, 156, 403, 406, 407, 408, 409, 412, 416, 418, 419, 423, 424, 604, 742, 743, 747, 748, 749, 1312, 1315, 1323], "descrip": [44, 604], "default_config": [44, 604, 1267], "These": [44, 137, 169, 264, 398, 446, 542, 604, 688, 727, 760, 856, 992, 1030, 1248, 1274, 1283, 1304, 1309, 1316, 1322, 1323], "modifi": [44, 59, 88, 140, 604, 620, 649, 730, 1139, 1168, 1272, 1282, 1300, 1321, 1323], "environment": [44, 604, 1309, 1322], "pyart_config": [44, 604, 1319], "execut": [44, 604, 1271, 1276, 1281, 1300, 1307, 1308, 1321], "full": [44, 76, 105, 140, 145, 394, 604, 637, 666, 730, 735, 988, 1156, 1185, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309], "permiss": [44, 604], "mai": [44, 137, 138, 173, 175, 182, 189, 194, 305, 342, 390, 392, 398, 401, 414, 446, 529, 531, 542, 604, 692, 694, 701, 708, 713, 727, 728, 764, 766, 773, 780, 785, 897, 934, 984, 986, 992, 996, 1030, 1114, 1116, 1211, 1304, 1309], "secur": [44, 604], "do": [44, 59, 88, 125, 137, 197, 200, 201, 398, 399, 515, 604, 620, 649, 686, 727, 741, 788, 791, 792, 992, 993, 1100, 1139, 1168, 1275, 1304, 1311, 1312, 1313, 1315, 1316, 1318, 1322, 1323, 1325], "un": [44, 604], "trust": [44, 604], "method": [44, 45, 61, 68, 70, 71, 90, 97, 99, 100, 126, 128, 133, 141, 150, 151, 154, 156, 169, 173, 175, 182, 189, 194, 234, 399, 400, 401, 414, 439, 445, 469, 488, 502, 516, 517, 525, 526, 527, 528, 529, 539, 604, 606, 622, 629, 631, 632, 651, 658, 660, 661, 688, 692, 694, 701, 708, 713, 716, 718, 723, 731, 742, 743, 747, 749, 760, 764, 766, 773, 780, 785, 826, 993, 994, 996, 1007, 1009, 1017, 1029, 1054, 1073, 1087, 1101, 1102, 1110, 1111, 1112, 1113, 1114, 1124, 1127, 1141, 1148, 1150, 1151, 1170, 1177, 1179, 1180, 1231, 1232, 1266, 1269, 1289, 1309, 1316, 1318, 1319, 1323], "chang": [44, 45, 59, 61, 65, 66, 68, 70, 88, 90, 94, 95, 97, 99, 137, 168, 169, 393, 401, 604, 606, 620, 622, 626, 627, 629, 631, 649, 651, 655, 656, 658, 660, 688, 727, 760, 987, 996, 1127, 1137, 1139, 1141, 1145, 1146, 1148, 1150, 1168, 1170, 1174, 1175, 1177, 1179, 1211, 1267, 1304, 1312, 1315, 1320, 1322, 1323], "home": [44, 604, 1269, 1274, 1275, 1323, 1325], "make": [44, 45, 503, 535, 604, 606, 1088, 1120, 1127, 1199, 1203, 1205, 1206, 1267, 1278, 1285, 1294, 1304, 1311, 1312, 1318, 1322, 1323, 1325], "adjust": [44, 121, 238, 304, 341, 378, 604, 682, 830, 896, 933, 970, 1283, 1286, 1294], "login": [44, 604], "shell": [44, 604], "session": [44, 604], "modif": [44, 61, 90, 604, 622, 651, 1141, 1170], "last": [44, 59, 88, 137, 146, 222, 223, 229, 233, 234, 235, 247, 249, 255, 257, 258, 265, 267, 269, 271, 289, 290, 296, 300, 301, 322, 323, 332, 333, 337, 338, 342, 359, 360, 369, 370, 374, 375, 604, 620, 649, 727, 737, 814, 815, 821, 825, 826, 827, 839, 841, 847, 849, 850, 857, 859, 861, 863, 881, 882, 888, 892, 893, 914, 915, 924, 925, 929, 930, 934, 951, 952, 961, 962, 966, 967, 1139, 1168, 1232, 1279, 1320], "origin_latitud": [45, 606, 1127], "origin_longitud": [45, 606, 1127], "origin_altitud": [45, 606, 1127], "z": [45, 51, 53, 59, 71, 79, 88, 100, 108, 117, 118, 119, 126, 128, 150, 151, 220, 287, 320, 357, 388, 398, 399, 441, 442, 443, 444, 445, 446, 500, 506, 509, 510, 511, 522, 606, 612, 614, 620, 632, 640, 649, 661, 669, 678, 679, 680, 716, 718, 742, 743, 812, 879, 912, 949, 982, 992, 993, 1024, 1025, 1026, 1028, 1029, 1030, 1036, 1085, 1091, 1094, 1095, 1096, 1107, 1127, 1133, 1135, 1139, 1151, 1159, 1168, 1180, 1188, 1199, 1238, 1269, 1292, 1294, 1295, 1304, 1309, 1312, 1319, 1323], "radar_latitud": [45, 606, 1127, 1234, 1260], "radar_longitud": [45, 606, 1127, 1234, 1260], "radar_altitud": [45, 521, 606, 1106, 1127], "radar_tim": [45, 606, 1127], "radar_nam": [45, 606, 1127], "rectilinear": [45, 606, 1127], "cartesian": [45, 47, 53, 59, 88, 117, 118, 119, 120, 121, 122, 123, 124, 388, 444, 445, 446, 503, 517, 574, 606, 608, 614, 620, 649, 678, 679, 680, 681, 682, 683, 684, 685, 982, 1019, 1020, 1028, 1029, 1030, 1031, 1088, 1102, 1127, 1129, 1135, 1139, 1168, 1267, 1272, 1277, 1281, 1284, 1309, 1310, 1318, 1321], "section": [45, 59, 61, 88, 90, 216, 218, 222, 236, 283, 285, 289, 302, 316, 318, 322, 339, 353, 355, 359, 376, 446, 457, 476, 477, 517, 606, 620, 622, 649, 651, 808, 810, 814, 828, 875, 877, 881, 894, 908, 910, 914, 931, 945, 947, 951, 968, 1030, 1042, 1061, 1062, 1102, 1127, 1139, 1141, 1168, 1170, 1224, 1225, 1237, 1267, 1272, 1282, 1300, 1304, 1309, 1318, 1321], "legaci": [45, 606, 1036, 1127], "befor": [45, 70, 99, 137, 145, 151, 168, 460, 465, 473, 482, 495, 498, 500, 531, 541, 606, 631, 660, 727, 735, 743, 1020, 1045, 1050, 1058, 1067, 1080, 1083, 1085, 1116, 1127, 1150, 1179, 1278, 1304, 1309, 1313, 1319, 1320, 1323], "from_legacy_paramet": [45, 606, 1127], "ax": [45, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 249, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 369, 370, 372, 373, 374, 375, 376, 377, 378, 441, 442, 443, 500, 523, 536, 606, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 839, 841, 842, 843, 844, 845, 847, 849, 856, 857, 858, 859, 861, 863, 871, 872, 873, 874, 875, 876, 877, 878, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 941, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 953, 954, 955, 956, 957, 961, 962, 964, 965, 966, 967, 968, 969, 970, 1024, 1025, 1026, 1085, 1108, 1121, 1127, 1269, 1270, 1274, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1298, 1302, 1303, 1304, 1305, 1306, 1313, 1317, 1318, 1319], "moment": [45, 53, 59, 88, 132, 137, 138, 139, 200, 201, 390, 391, 392, 446, 556, 557, 606, 614, 620, 649, 722, 727, 728, 729, 741, 791, 792, 984, 985, 986, 1030, 1127, 1135, 1139, 1168, 1231, 1275, 1282, 1300, 1309, 1316, 1317, 1319, 1321], "describ": [45, 59, 88, 129, 197, 198, 199, 200, 201, 202, 203, 204, 250, 266, 469, 475, 488, 606, 620, 649, 719, 741, 788, 789, 790, 791, 792, 793, 794, 795, 842, 858, 1054, 1060, 1073, 1127, 1139, 1168, 1304], "geograph": [45, 59, 70, 88, 99, 120, 121, 122, 123, 124, 125, 305, 333, 342, 370, 397, 446, 606, 620, 631, 649, 660, 681, 682, 683, 684, 685, 686, 897, 925, 934, 962, 991, 1030, 1127, 1139, 1150, 1168, 1179, 1309], "axi": [45, 53, 59, 88, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 247, 249, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 322, 323, 324, 325, 326, 327, 328, 332, 333, 335, 336, 337, 338, 339, 341, 359, 360, 361, 362, 363, 364, 365, 369, 370, 372, 373, 374, 375, 376, 378, 388, 398, 606, 614, 620, 649, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 839, 841, 842, 843, 844, 845, 847, 849, 856, 857, 858, 859, 861, 863, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 914, 915, 916, 917, 918, 919, 920, 924, 925, 927, 928, 929, 930, 931, 933, 951, 952, 953, 954, 955, 956, 957, 961, 962, 964, 965, 966, 967, 968, 970, 982, 992, 1127, 1135, 1139, 1168, 1221, 1269, 1284, 1295, 1304, 1306, 1318, 1319, 1320], "dimension": [45, 53, 137, 139, 444, 536, 606, 614, 727, 729, 1028, 1121, 1127, 1135, 1278, 1304], "space": [45, 59, 88, 122, 224, 291, 324, 361, 399, 446, 500, 514, 522, 606, 620, 649, 683, 816, 883, 916, 953, 993, 1030, 1085, 1099, 1107, 1127, 1139, 1168, 1275, 1304, 1311], "along": [45, 138, 145, 236, 248, 249, 254, 255, 256, 257, 268, 269, 270, 271, 302, 339, 376, 496, 606, 728, 735, 828, 840, 841, 846, 847, 848, 849, 860, 861, 862, 863, 894, 931, 968, 1081, 1127, 1221, 1224, 1225, 1235, 1236, 1264, 1304, 1318], "three": [45, 139, 197, 201, 398, 536, 606, 729, 741, 788, 792, 992, 1121, 1127, 1304, 1319], "repeat": [45, 517, 606, 1102, 1127], "throughout": [45, 606, 1127], "transform": [45, 59, 88, 120, 121, 122, 123, 124, 125, 227, 234, 294, 305, 327, 342, 364, 370, 397, 446, 447, 460, 466, 485, 524, 537, 606, 620, 649, 681, 682, 683, 684, 685, 686, 819, 826, 886, 897, 919, 934, 956, 962, 991, 1030, 1045, 1051, 1070, 1109, 1122, 1127, 1139, 1168, 1283, 1304, 1317], "pyart_aeqd": [45, 52, 59, 88, 120, 122, 123, 606, 613, 620, 649, 681, 683, 684, 1127, 1134, 1139, 1168], "nativ": [45, 59, 88, 120, 122, 123, 381, 446, 606, 620, 649, 681, 683, 684, 975, 1030, 1036, 1127, 1139, 1168], "azimuth": [45, 59, 65, 66, 69, 71, 81, 88, 94, 95, 98, 100, 110, 117, 118, 119, 120, 121, 122, 123, 124, 135, 136, 147, 148, 149, 161, 162, 164, 205, 206, 222, 224, 227, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 272, 273, 289, 291, 294, 296, 300, 301, 305, 306, 322, 324, 327, 332, 333, 337, 338, 342, 343, 359, 361, 364, 369, 370, 374, 375, 394, 398, 465, 495, 496, 512, 513, 515, 517, 529, 531, 539, 540, 556, 606, 620, 626, 627, 630, 632, 642, 649, 655, 656, 659, 661, 671, 678, 679, 680, 681, 682, 683, 684, 685, 725, 726, 736, 738, 739, 740, 745, 754, 755, 757, 797, 798, 814, 816, 819, 821, 825, 826, 827, 841, 847, 849, 859, 861, 863, 864, 865, 881, 883, 886, 888, 892, 893, 897, 898, 914, 916, 919, 924, 925, 929, 930, 934, 935, 951, 953, 956, 961, 962, 966, 967, 988, 992, 1036, 1050, 1080, 1081, 1097, 1098, 1100, 1102, 1114, 1116, 1124, 1125, 1127, 1139, 1145, 1146, 1149, 1151, 1161, 1168, 1174, 1175, 1178, 1180, 1190, 1219, 1224, 1225, 1233, 1234, 1235, 1240, 1244, 1252, 1265, 1267, 1297, 1299, 1302, 1311, 1320, 1323], "equidist": [45, 59, 88, 120, 121, 122, 123, 124, 227, 294, 327, 364, 370, 398, 446, 606, 620, 649, 681, 682, 683, 684, 685, 819, 886, 919, 956, 962, 992, 1030, 1127, 1139, 1168], "pyproj": [45, 59, 88, 120, 122, 123, 606, 620, 649, 681, 683, 684, 1127, 1139, 1168, 1322], "projparam": [45, 48, 59, 88, 120, 122, 123, 606, 609, 620, 649, 681, 683, 684, 1127, 1130, 1139, 1168], "special": [45, 59, 88, 606, 620, 649, 1127, 1139, 1168, 1267, 1317], "_include_lon_0_lat_0": [45, 59, 88, 606, 620, 649, 1127, 1139, 1168], "interpret": [45, 59, 88, 138, 139, 397, 606, 620, 649, 728, 729, 991, 1127, 1139, 1168, 1245, 1246], "requir": [45, 59, 88, 120, 122, 123, 137, 140, 145, 394, 398, 446, 452, 453, 454, 455, 461, 462, 463, 464, 468, 469, 471, 472, 478, 479, 480, 481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 502, 539, 542, 606, 620, 649, 681, 683, 684, 727, 730, 735, 988, 992, 1030, 1037, 1038, 1039, 1040, 1046, 1047, 1048, 1049, 1053, 1054, 1056, 1057, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1087, 1124, 1127, 1139, 1168, 1231, 1275, 1309, 1317, 1318, 1319, 1323, 1325], "get_projparam": [45, 606, 1127], "evalu": [45, 401, 410, 425, 430, 606, 996, 998, 1127], "up": [45, 59, 88, 127, 128, 135, 136, 154, 155, 156, 173, 175, 182, 189, 194, 482, 506, 509, 510, 530, 533, 606, 620, 649, 692, 694, 701, 708, 713, 717, 718, 725, 726, 747, 748, 749, 764, 766, 773, 780, 785, 1036, 1067, 1091, 1094, 1095, 1115, 1118, 1127, 1139, 1168, 1216, 1248, 1250, 1251, 1304, 1313, 1317, 1320, 1324], "collect": [45, 182, 194, 383, 390, 391, 392, 394, 445, 446, 606, 701, 713, 773, 785, 977, 984, 985, 986, 988, 1019, 1029, 1030, 1127, 1274, 1288, 1302, 1323, 1324, 1325], "nradar": [45, 606, 1127], "whose": [45, 393, 443, 606, 987, 1026, 1127], "wa": [45, 70, 71, 99, 100, 138, 139, 168, 182, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 606, 631, 632, 660, 661, 701, 728, 729, 773, 814, 821, 825, 826, 827, 828, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 1127, 1150, 1151, 1179, 1180, 1242, 1267, 1309, 1319, 1323, 1325], "projection_proj": [45, 606, 1127], "instanc": [45, 52, 56, 62, 91, 137, 138, 139, 222, 229, 232, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 399, 400, 503, 606, 613, 617, 623, 652, 727, 728, 729, 814, 821, 824, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968, 993, 994, 1031, 1036, 1088, 1127, 1134, 1142, 1171, 1242, 1252, 1253, 1259], "valueerror": [45, 46, 52, 60, 61, 89, 90, 606, 607, 613, 621, 622, 650, 651, 1127, 1128, 1134, 1140, 1141, 1169, 1170], "point_z": [45, 397, 606, 991, 1127], "point_x": [45, 397, 606, 991, 1127], "point_i": [45, 397, 606, 991, 1127], "func": [45, 168, 606, 1127], "init_point_x_y_z": [45, 606, 1127], "reset": [45, 50, 51, 59, 70, 78, 79, 80, 88, 99, 107, 108, 109, 606, 611, 612, 620, 631, 639, 640, 641, 649, 660, 668, 669, 670, 1127, 1132, 1133, 1139, 1150, 1158, 1159, 1160, 1168, 1179, 1187, 1188, 1189, 1316], "point_latitud": [45, 397, 606, 991, 1127], "point_longitud": [45, 397, 606, 991, 1127], "perform": [45, 59, 70, 71, 72, 88, 99, 100, 101, 132, 137, 138, 139, 145, 173, 175, 182, 189, 194, 222, 227, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 294, 296, 299, 300, 301, 302, 322, 327, 332, 333, 336, 337, 338, 339, 342, 359, 364, 369, 370, 373, 374, 375, 376, 390, 393, 398, 460, 465, 473, 482, 495, 502, 527, 606, 620, 631, 632, 633, 649, 660, 661, 662, 692, 694, 701, 708, 713, 722, 727, 728, 729, 735, 764, 766, 773, 780, 785, 814, 819, 821, 824, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 886, 888, 891, 892, 893, 894, 914, 919, 924, 925, 928, 929, 930, 931, 934, 951, 956, 961, 962, 965, 966, 967, 968, 984, 987, 992, 1045, 1050, 1058, 1067, 1080, 1087, 1112, 1127, 1139, 1150, 1151, 1152, 1168, 1179, 1180, 1181, 1265, 1268, 1269, 1270, 1272, 1279, 1280, 1284, 1309, 1318], "invers": [45, 59, 88, 152, 163, 466, 539, 606, 620, 649, 744, 756, 1051, 1124, 1127, 1139, 1168], "rel": [45, 59, 88, 127, 143, 146, 154, 155, 156, 199, 234, 331, 368, 447, 460, 535, 537, 606, 620, 649, 717, 733, 737, 747, 748, 749, 790, 826, 923, 960, 1045, 1120, 1122, 1127, 1139, 1168, 1320, 1323], "init_point_longitude_latitud": [45, 606, 1127], "point_altitud": [45, 49, 397, 606, 610, 991, 1127, 1131], "init_point_altitud": [45, 606, 1127], "init": [45, 239, 258, 401, 413, 606, 831, 850, 996, 1127, 1234], "field_dict": [46, 607, 1128], "replace_exist": [46, 60, 61, 62, 89, 90, 91, 607, 621, 622, 623, 650, 651, 652, 1128, 1140, 1141, 1142, 1169, 1170, 1171, 1304, 1312, 1313, 1323], "overwrit": [46, 607, 1128], "alreadi": [46, 60, 61, 89, 90, 152, 525, 526, 607, 621, 622, 650, 651, 744, 1110, 1111, 1128, 1140, 1141, 1169, 1170], "edg": [47, 71, 100, 118, 122, 137, 138, 139, 140, 145, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 523, 529, 555, 608, 632, 661, 679, 683, 727, 728, 729, 730, 735, 814, 821, 825, 826, 827, 841, 847, 849, 859, 861, 863, 881, 888, 892, 893, 914, 924, 925, 929, 930, 951, 961, 962, 966, 967, 1108, 1114, 1129, 1151, 1180, 1294, 1295, 1304, 1309], "height": [47, 53, 55, 56, 127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 199, 251, 252, 253, 267, 333, 370, 446, 447, 448, 450, 460, 465, 473, 482, 495, 498, 500, 501, 503, 516, 517, 520, 524, 530, 531, 532, 533, 535, 536, 537, 539, 540, 608, 614, 616, 617, 717, 718, 725, 726, 732, 733, 737, 747, 748, 749, 790, 843, 844, 845, 859, 925, 962, 1030, 1034, 1045, 1050, 1058, 1067, 1080, 1083, 1085, 1086, 1088, 1101, 1102, 1105, 1109, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1124, 1125, 1129, 1135, 1259, 1283, 1292, 1302, 1306, 1316, 1318, 1319, 1323], "determin": [47, 59, 88, 133, 137, 138, 139, 141, 158, 159, 249, 251, 252, 253, 255, 257, 264, 267, 269, 271, 333, 370, 381, 390, 391, 394, 399, 400, 451, 460, 469, 474, 488, 500, 503, 505, 506, 507, 509, 510, 535, 536, 539, 608, 620, 649, 723, 727, 728, 729, 731, 751, 752, 841, 843, 844, 845, 847, 849, 856, 859, 861, 863, 925, 962, 971, 975, 984, 985, 988, 993, 994, 1035, 1045, 1054, 1059, 1073, 1085, 1088, 1090, 1091, 1092, 1094, 1095, 1120, 1121, 1124, 1129, 1139, 1168, 1231, 1247, 1259, 1263, 1304, 1323], "same": [47, 59, 61, 69, 70, 71, 88, 90, 98, 99, 100, 121, 124, 137, 175, 189, 234, 333, 388, 394, 398, 399, 400, 446, 449, 460, 500, 522, 530, 608, 620, 622, 630, 631, 632, 649, 651, 659, 660, 661, 682, 685, 694, 708, 727, 766, 780, 826, 925, 982, 988, 992, 993, 994, 1030, 1031, 1033, 1045, 1085, 1107, 1115, 1129, 1139, 1141, 1149, 1150, 1151, 1168, 1170, 1178, 1179, 1180, 1234, 1244, 1260, 1265, 1274, 1294, 1295, 1304, 1311, 1316, 1317, 1318, 1323, 1325], "layout": [47, 387, 608, 981, 1129], "interpol": [47, 71, 100, 118, 122, 222, 229, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 383, 390, 445, 446, 465, 473, 482, 495, 498, 503, 516, 529, 530, 531, 539, 608, 632, 661, 679, 683, 814, 821, 825, 826, 827, 828, 841, 847, 849, 859, 861, 863, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 977, 984, 1029, 1030, 1031, 1050, 1058, 1067, 1080, 1083, 1088, 1101, 1114, 1115, 1116, 1124, 1129, 1151, 1180, 1243, 1259, 1267, 1275, 1304, 1315, 1318, 1319, 1323], "extrapol": [47, 118, 122, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 608, 679, 683, 814, 821, 825, 826, 827, 841, 847, 849, 859, 861, 863, 881, 888, 892, 893, 914, 924, 925, 929, 930, 951, 961, 962, 966, 967, 1129], "boundari": [47, 118, 122, 145, 241, 242, 264, 370, 529, 608, 679, 683, 735, 833, 834, 856, 962, 1114, 1129, 1305, 1317, 1319], "center": [47, 59, 71, 88, 100, 117, 118, 119, 121, 122, 124, 138, 222, 227, 229, 233, 234, 235, 249, 250, 254, 255, 256, 257, 266, 267, 268, 269, 270, 271, 289, 294, 296, 300, 301, 305, 322, 327, 332, 333, 337, 338, 359, 364, 369, 370, 374, 375, 390, 392, 441, 442, 443, 465, 473, 482, 495, 498, 521, 608, 620, 632, 649, 661, 678, 679, 680, 682, 683, 685, 728, 814, 819, 821, 825, 826, 827, 841, 842, 846, 847, 848, 849, 858, 859, 860, 861, 862, 863, 881, 886, 888, 892, 893, 897, 914, 919, 924, 925, 929, 930, 951, 956, 961, 962, 966, 967, 984, 986, 1024, 1025, 1026, 1050, 1058, 1067, 1080, 1083, 1106, 1129, 1139, 1151, 1168, 1180, 1199, 1216, 1219, 1241, 1283, 1313, 1318, 1319, 1320], "2d": [47, 69, 70, 71, 98, 99, 100, 118, 146, 388, 398, 448, 460, 524, 529, 535, 608, 630, 631, 632, 659, 660, 661, 679, 736, 737, 745, 982, 992, 1031, 1045, 1109, 1114, 1120, 1129, 1149, 1150, 1151, 1178, 1179, 1180, 1216, 1241, 1278, 1320], "point_": [50, 51, 611, 612, 1132, 1133], "properti": [52, 57, 58, 183, 184, 539, 613, 618, 619, 702, 703, 774, 775, 1021, 1023, 1124, 1134, 1317, 1323], "xarrai": [53, 239, 251, 252, 253, 614, 831, 843, 844, 845, 1135, 1236, 1298, 1302, 1309, 1322], "arm_alt_lat_lon_vari": [54, 397, 615, 991, 1136], "speed": [55, 56, 252, 446, 517, 539, 540, 616, 617, 844, 1030, 1102, 1124, 1125, 1216, 1306, 1318, 1323], "direct": [55, 76, 105, 394, 453, 472, 502, 515, 517, 527, 539, 540, 616, 637, 666, 988, 1038, 1057, 1087, 1100, 1102, 1112, 1124, 1125, 1156, 1185, 1306, 1318, 1323], "horizont": [55, 56, 57, 58, 59, 88, 126, 131, 132, 134, 137, 222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 337, 338, 339, 359, 360, 361, 369, 374, 375, 376, 382, 383, 456, 462, 463, 464, 468, 480, 481, 493, 494, 499, 512, 513, 515, 533, 539, 616, 617, 618, 619, 620, 649, 716, 721, 722, 724, 727, 814, 815, 816, 821, 825, 826, 827, 828, 839, 841, 843, 845, 847, 849, 857, 859, 861, 863, 881, 882, 883, 888, 892, 893, 894, 914, 915, 916, 924, 929, 930, 931, 951, 952, 953, 961, 966, 967, 968, 976, 977, 1041, 1047, 1048, 1049, 1053, 1065, 1066, 1078, 1079, 1084, 1097, 1098, 1100, 1118, 1124, 1139, 1168, 1259, 1285, 1295, 1318, 1320, 1323], "wind": [55, 56, 57, 58, 137, 138, 382, 383, 512, 513, 514, 515, 539, 540, 616, 617, 618, 619, 727, 728, 976, 977, 1097, 1098, 1099, 1100, 1124, 1125, 1259, 1267, 1306, 1310, 1323], "1d": [55, 56, 118, 122, 146, 460, 501, 504, 524, 537, 543, 616, 617, 679, 683, 736, 737, 745, 1045, 1086, 1089, 1109, 1122, 1221, 1232, 1237, 1238, 1239, 1240, 1248, 1249, 1250, 1251, 1320], "were": [55, 56, 173, 175, 182, 539, 616, 617, 692, 694, 701, 764, 766, 773, 1124, 1250, 1267, 1319, 1323], "sampl": [55, 56, 149, 460, 469, 488, 501, 535, 537, 539, 540, 616, 617, 740, 1045, 1054, 1073, 1086, 1120, 1122, 1124, 1125, 1126, 1203, 1205, 1206, 1231, 1274, 1275, 1283, 1303, 1305, 1306, 1309, 1323], "per": [55, 56, 57, 58, 72, 88, 101, 137, 155, 446, 539, 616, 617, 618, 619, 633, 649, 662, 727, 748, 1030, 1124, 1152, 1168, 1181, 1200, 1201, 1202, 1323], "east": [55, 222, 233, 289, 300, 322, 337, 359, 374, 616, 814, 825, 881, 892, 914, 929, 951, 966, 1031, 1236, 1287, 1319], "u_wind": [55, 56, 539, 540, 616, 617, 1124, 1125, 1306, 1318, 1323], "compon": [55, 56, 57, 58, 514, 515, 616, 617, 618, 619, 1099, 1100, 1323], "v_wind": [55, 56, 539, 540, 616, 617, 1124, 1125, 1306, 1318, 1323], "classmethod": [56, 428, 617], "_rang": [59, 88, 470, 620, 649, 1055, 1139, 1168], "scan_typ": [59, 88, 205, 221, 272, 288, 305, 321, 342, 358, 620, 649, 797, 813, 864, 880, 897, 913, 934, 950, 1139, 1168, 1320], "sweep_numb": [59, 88, 620, 649, 1139, 1168, 1292, 1311, 1320], "sweep_mod": [59, 88, 620, 649, 1139, 1168, 1311, 1320], "fixed_angl": [59, 88, 205, 272, 305, 342, 620, 649, 797, 864, 897, 934, 1139, 1168, 1252, 1292, 1293, 1297, 1311, 1320], "sweep_start_ray_index": [59, 88, 620, 649, 1139, 1168, 1311, 1320], "sweep_end_ray_index": [59, 88, 620, 649, 1139, 1168, 1311, 1320], "altitude_agl": [59, 88, 620, 649, 1139, 1168, 1320], "target_scan_r": [59, 88, 620, 649, 1139, 1168, 1320], "rays_are_index": [59, 88, 620, 649, 1139, 1168], "ray_angle_r": [59, 88, 620, 649, 1139, 1168], "scan_rat": [59, 88, 400, 620, 649, 994, 1139, 1168, 1320], "antenna_transit": [59, 70, 71, 88, 99, 100, 182, 194, 222, 229, 233, 234, 235, 236, 272, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 620, 631, 632, 649, 660, 661, 701, 713, 773, 785, 814, 821, 825, 826, 827, 828, 864, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 1139, 1150, 1151, 1168, 1179, 1180, 1320], "instrument_paramet": [59, 88, 137, 148, 400, 475, 477, 620, 649, 727, 739, 994, 1060, 1062, 1139, 1168, 1267, 1313, 1320], "radar_calibr": [59, 88, 469, 477, 488, 490, 491, 620, 649, 1054, 1062, 1073, 1075, 1076, 1139, 1168, 1320], "tilt": [59, 88, 205, 234, 333, 370, 534, 620, 649, 797, 826, 925, 962, 1119, 1139, 1168, 1275, 1291, 1298], "roll": [59, 88, 157, 205, 394, 620, 649, 750, 797, 988, 1139, 1168, 1258, 1264], "drift": [59, 88, 205, 620, 649, 797, 1139, 1168], "head": [59, 88, 205, 620, 649, 797, 1139, 1168], "pitch": [59, 88, 205, 620, 649, 797, 1139, 1168], "georefs_appli": [59, 88, 620, 649, 1139, 1168], "antenna": [59, 70, 71, 88, 99, 100, 117, 118, 119, 129, 135, 136, 146, 147, 148, 149, 152, 153, 160, 162, 163, 164, 182, 194, 199, 203, 222, 229, 233, 234, 235, 236, 272, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 456, 477, 483, 496, 517, 533, 620, 631, 632, 649, 660, 661, 678, 679, 680, 701, 713, 719, 725, 726, 737, 738, 739, 740, 744, 745, 746, 753, 755, 756, 757, 773, 785, 790, 794, 814, 821, 825, 826, 827, 828, 864, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 1036, 1041, 1062, 1068, 1081, 1102, 1118, 1139, 1150, 1151, 1168, 1179, 1180, 1252, 1267, 1268, 1272, 1277, 1278, 1279, 1280, 1309, 1315, 1320], "structur": [59, 88, 400, 536, 620, 649, 994, 1121, 1139, 1168, 1274, 1304, 1316], "under": [59, 88, 137, 138, 139, 446, 620, 649, 727, 728, 729, 1030, 1139, 1168, 1304, 1309, 1322, 1323], "sub": [59, 88, 620, 649, 1139, 1168], "meta_group": [59, 88, 620, 649, 1139, 1168, 1320], "instrument": [59, 88, 182, 194, 197, 200, 201, 400, 620, 649, 701, 713, 741, 773, 785, 788, 791, 792, 994, 1139, 1168, 1313, 1320], "volum": [59, 88, 137, 139, 140, 333, 370, 390, 391, 392, 400, 448, 465, 473, 482, 495, 496, 498, 501, 503, 514, 516, 521, 531, 533, 539, 540, 588, 620, 649, 727, 729, 730, 925, 962, 984, 985, 986, 994, 1020, 1050, 1058, 1067, 1080, 1081, 1083, 1086, 1088, 1099, 1101, 1106, 1116, 1118, 1124, 1125, 1139, 1168, 1224, 1225, 1227, 1244, 1261, 1262, 1265, 1272, 1282, 1300, 1321], "multipl": [59, 88, 152, 163, 460, 533, 535, 620, 649, 744, 756, 1045, 1118, 1120, 1139, 1168, 1267, 1272, 1277, 1282, 1294, 1300, 1316, 1321, 1325], "ground": [59, 88, 482, 517, 620, 649, 1031, 1036, 1067, 1102, 1139, 1168, 1274, 1318], "target": [59, 88, 153, 398, 476, 477, 620, 649, 746, 992, 1061, 1062, 1139, 1168, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1232, 1234, 1235, 1236, 1240, 1260, 1320], "thr": [59, 88, 620, 649, 1139, 1168], "index": [59, 74, 88, 103, 133, 141, 142, 143, 144, 146, 158, 159, 201, 235, 251, 252, 253, 255, 257, 267, 269, 271, 301, 338, 375, 398, 460, 474, 534, 620, 635, 649, 664, 723, 731, 732, 733, 734, 737, 741, 751, 752, 792, 827, 843, 844, 845, 847, 849, 859, 861, 863, 893, 930, 967, 992, 1020, 1031, 1036, 1045, 1059, 1119, 1139, 1154, 1168, 1183, 1310, 1323], "rays_per_sweep": [59, 80, 88, 109, 620, 641, 649, 670, 1139, 1160, 1168, 1189, 1200, 1201], "upon": [59, 88, 197, 198, 199, 200, 201, 202, 203, 204, 620, 649, 741, 788, 789, 790, 791, 792, 793, 794, 795, 1139, 1168], "prior": [59, 61, 88, 90, 145, 150, 151, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 394, 620, 622, 649, 651, 735, 742, 743, 814, 821, 824, 825, 826, 827, 828, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968, 988, 1139, 1141, 1168, 1170, 1275, 1309], "init_rays_per_sweep": [59, 88, 620, 649, 1139, 1168], "intend": [59, 88, 482, 620, 649, 1067, 1139, 1168], "rate": [59, 88, 500, 505, 506, 507, 508, 509, 510, 511, 524, 620, 649, 1085, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1109, 1139, 1168, 1304], "whether": [59, 88, 154, 155, 161, 173, 477, 525, 526, 531, 533, 620, 649, 692, 736, 747, 748, 754, 764, 1062, 1110, 1111, 1116, 1118, 1139, 1168, 1316], "regular": [59, 88, 399, 465, 473, 482, 495, 498, 556, 557, 573, 574, 620, 649, 993, 1031, 1050, 1058, 1067, 1080, 1083, 1139, 1168, 1283, 1309], "angular": [59, 88, 620, 649, 1139, 1168, 1216, 1255, 1256], "express": [59, 88, 620, 649, 1139, 1168], "360": [59, 88, 140, 145, 334, 371, 620, 649, 730, 735, 926, 963, 1139, 1168, 1306, 1311, 1318, 1320], "represent": [59, 88, 427, 620, 649, 1139, 1168], "forbidden": [59, 88, 620, 649, 1139, 1168], "plane": [59, 88, 398, 515, 620, 649, 992, 1100, 1139, 1168, 1320], "180": [59, 88, 119, 121, 154, 155, 533, 620, 649, 680, 682, 747, 748, 1118, 1139, 1168, 1311, 1323], "gate_z": [59, 71, 88, 100, 620, 632, 649, 661, 1139, 1151, 1168, 1180], "gate_x": [59, 71, 88, 100, 620, 632, 649, 661, 1139, 1151, 1168, 1180], "gate_i": [59, 71, 88, 100, 620, 632, 649, 661, 1139, 1151, 1168, 1180], "system": [59, 88, 120, 121, 122, 133, 141, 150, 151, 158, 159, 380, 390, 398, 444, 462, 472, 517, 620, 649, 681, 682, 683, 723, 731, 742, 743, 751, 752, 974, 984, 992, 1022, 1028, 1047, 1057, 1102, 1139, 1168, 1317, 1322], "earth": [59, 88, 117, 118, 121, 124, 517, 597, 620, 649, 678, 679, 682, 685, 1027, 1102, 1139, 1168, 1234, 1260], "radiu": [59, 88, 117, 118, 119, 121, 124, 441, 442, 443, 444, 445, 446, 500, 517, 536, 597, 620, 649, 678, 679, 680, 682, 685, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1085, 1102, 1121, 1139, 1168, 1234, 1260, 1304, 1315], "init_gate_x_y_z": [59, 88, 620, 649, 1139, 1168], "gate_latitud": [59, 70, 78, 88, 99, 107, 620, 631, 639, 649, 660, 668, 1139, 1150, 1158, 1168, 1179, 1187], "gate_longitud": [59, 70, 78, 88, 99, 107, 620, 631, 639, 649, 660, 668, 1139, 1150, 1158, 1168, 1179, 1187, 1311], "init_gate_longitude_latitud": [59, 88, 620, 649, 1139, 1168, 1311], "gate_altitud": [59, 70, 77, 88, 99, 106, 620, 631, 638, 649, 660, 667, 1139, 1150, 1157, 1168, 1179, 1186], "init_gate_altitud": [59, 88, 620, 649, 1139, 1168, 1311], "actual": [59, 88, 147, 394, 398, 444, 620, 649, 738, 988, 992, 1028, 1139, 1168, 1317, 1325], "flag": [59, 88, 137, 272, 394, 503, 528, 529, 532, 536, 620, 649, 727, 864, 988, 1088, 1113, 1114, 1117, 1121, 1139, 1168, 1217, 1218, 1244, 1247, 1325], "transit": [59, 70, 71, 88, 99, 100, 182, 194, 197, 200, 201, 222, 229, 233, 234, 235, 236, 272, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 482, 495, 528, 620, 631, 632, 649, 660, 661, 701, 713, 741, 773, 785, 788, 791, 792, 814, 821, 825, 826, 827, 828, 864, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 1067, 1080, 1113, 1139, 1150, 1151, 1168, 1179, 1180], "ye": [59, 88, 137, 620, 649, 727, 1139, 1168], "about": [59, 88, 517, 620, 649, 1102, 1139, 1168], "aircraft": [59, 88, 234, 394, 620, 649, 826, 988, 1139, 1168], "longitudin": [59, 88, 234, 246, 257, 261, 262, 271, 620, 649, 826, 838, 849, 853, 854, 863, 1139, 1168], "orthogon": [59, 88, 515, 620, 649, 1100, 1139, 1168], "platform": [59, 88, 620, 649, 1139, 1168], "right": [59, 88, 448, 502, 521, 620, 649, 1087, 1106, 1139, 1168, 1283, 1284, 1319], "wing": [59, 88, 620, 649, 1139, 1168], "down": [59, 88, 620, 649, 1139, 1168, 1266], "track": [59, 88, 620, 649, 1139, 1168], "compass": [59, 88, 620, 649, 1139, 1168], "nose": [59, 88, 620, 649, 1139, 1168], "had": [59, 88, 399, 620, 649, 993, 1139, 1168, 1274, 1325], "georefer": [59, 88, 620, 649, 1139, 1168], "lead": [59, 88, 620, 649, 1139, 1168, 1267, 1278], "centric": [59, 88, 620, 649, 1139, 1168], "avaiabl": [59, 88, 620, 649, 1139, 1168], "radar_paramet": [59, 88, 620, 649, 1139, 1168], "subconvent": [59, 88, 620, 649, 1139, 1168], "calibr": [59, 88, 152, 153, 160, 163, 505, 620, 649, 744, 746, 753, 756, 1090, 1139, 1168], "ngate": [59, 69, 88, 98, 620, 630, 649, 659, 1139, 1149, 1168, 1178, 1200, 1201, 1202, 1311, 1320], "nrai": [59, 69, 88, 98, 470, 620, 630, 649, 659, 1055, 1139, 1149, 1168, 1178, 1202, 1235, 1267, 1311, 1320], "nsweep": [59, 88, 620, 649, 1139, 1168, 1200, 1201, 1292, 1293, 1306, 1320], "loos": [60, 61, 89, 90, 621, 622, 650, 651, 1140, 1141, 1169, 1170, 1254], "existing_field_nam": [61, 90, 622, 651, 1141, 1170], "done": [61, 90, 135, 137, 145, 517, 536, 622, 651, 725, 727, 735, 1102, 1121, 1141, 1170, 1311, 1322, 1323, 1325], "both": [61, 90, 137, 197, 201, 381, 522, 523, 622, 651, 727, 741, 788, 792, 975, 1107, 1108, 1141, 1170, 1275, 1278, 1280, 1284, 1299, 1309, 1315, 1316, 1317, 1322, 1323], "reflectivity_copi": [61, 90, 622, 651, 1141, 1170], "take": [61, 90, 138, 152, 233, 300, 337, 374, 445, 446, 450, 527, 588, 622, 651, 728, 744, 825, 892, 929, 966, 1029, 1030, 1034, 1112, 1141, 1170, 1274, 1275, 1278, 1285, 1304, 1319, 1323], "gatefilt": [62, 91, 126, 127, 128, 137, 138, 139, 140, 145, 151, 197, 198, 199, 200, 201, 202, 203, 204, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 445, 446, 503, 527, 528, 529, 534, 539, 540, 623, 652, 716, 717, 718, 727, 728, 729, 730, 735, 741, 743, 788, 789, 790, 791, 792, 793, 794, 795, 814, 821, 824, 825, 826, 827, 828, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968, 1020, 1029, 1030, 1036, 1088, 1112, 1113, 1114, 1119, 1124, 1125, 1142, 1171, 1270, 1278, 1279, 1280, 1284, 1303, 1310, 1313, 1319, 1323], "updat": [62, 91, 502, 623, 652, 1087, 1142, 1171, 1267, 1285, 1304, 1309, 1317, 1323], "mask": [62, 91, 137, 138, 139, 140, 146, 157, 173, 175, 178, 182, 189, 193, 194, 197, 199, 200, 201, 202, 203, 204, 222, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 390, 391, 392, 446, 465, 473, 482, 495, 498, 530, 556, 557, 573, 574, 623, 652, 692, 694, 697, 701, 708, 712, 713, 727, 728, 729, 730, 737, 741, 750, 764, 766, 769, 773, 780, 784, 785, 788, 790, 791, 792, 793, 794, 795, 814, 821, 824, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968, 984, 985, 986, 1030, 1036, 1050, 1058, 1067, 1080, 1083, 1115, 1142, 1171, 1242, 1254, 1267, 1269, 1278, 1279, 1304, 1310, 1311, 1312, 1317, 1318, 1319, 1320], "condit": [62, 91, 137, 169, 173, 175, 182, 189, 194, 399, 623, 652, 688, 692, 694, 701, 708, 713, 727, 760, 764, 766, 773, 780, 785, 993, 1142, 1171, 1270, 1312, 1316], "append": [62, 91, 623, 652, 1142, 1171, 1306], "filtered_": [62, 91, 623, 652, 1142, 1171], "check": [63, 72, 92, 101, 138, 139, 140, 145, 154, 155, 393, 451, 502, 530, 624, 633, 653, 662, 728, 729, 730, 735, 747, 748, 987, 1035, 1087, 1115, 1143, 1152, 1172, 1181, 1234, 1244, 1260, 1265, 1309, 1322, 1323, 1324], "keyerror": [63, 92, 435, 436, 624, 653, 1003, 1004, 1014, 1015, 1143, 1172, 1322], "array_lik": [64, 93, 625, 654, 1144, 1173, 1246], "view": [65, 66, 68, 94, 95, 97, 401, 433, 434, 440, 626, 627, 629, 655, 656, 658, 996, 1001, 1002, 1008, 1012, 1013, 1018, 1145, 1146, 1148, 1174, 1175, 1177, 1284, 1313, 1315, 1320], "possibl": [65, 66, 68, 94, 95, 97, 394, 460, 531, 626, 627, 629, 655, 656, 658, 988, 1045, 1116, 1145, 1146, 1148, 1174, 1175, 1177, 1231, 1238, 1267, 1283, 1304, 1313, 1315, 1317, 1318], "underli": [65, 66, 68, 94, 95, 97, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 381, 626, 627, 629, 655, 656, 658, 814, 821, 825, 826, 827, 828, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 975, 1145, 1146, 1148, 1174, 1175, 1177, 1309], "get_gate_x_y_z": [68, 97, 629, 658, 1148, 1177, 1294, 1295], "obtain": [68, 71, 97, 100, 129, 154, 162, 456, 466, 476, 477, 485, 502, 531, 629, 632, 658, 661, 719, 747, 755, 1041, 1051, 1061, 1062, 1070, 1087, 1116, 1148, 1151, 1177, 1180, 1257, 1306, 1311, 1318, 1319, 1323], "plot": [68, 71, 97, 100, 205, 206, 207, 208, 209, 210, 211, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 465, 473, 482, 495, 498, 534, 540, 629, 632, 658, 661, 797, 798, 799, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 934, 935, 936, 937, 938, 939, 940, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 971, 1050, 1058, 1067, 1080, 1083, 1119, 1125, 1148, 1151, 1177, 1180, 1267, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1300, 1301, 1302, 1304, 1307, 1309, 1311, 1312, 1313, 1315, 1316, 1319, 1321], "spatial": [68, 71, 97, 100, 137, 629, 632, 658, 661, 727, 1148, 1151, 1177, 1180, 1267, 1315, 1319], "context": [68, 71, 97, 100, 629, 632, 658, 661, 1148, 1151, 1177, 1180, 1302, 1309, 1323], "request": [68, 97, 122, 390, 445, 446, 523, 629, 658, 683, 984, 1029, 1030, 1108, 1148, 1177, 1267, 1309, 1323], "area": [69, 98, 136, 222, 224, 229, 233, 234, 235, 236, 237, 289, 291, 296, 300, 301, 302, 303, 322, 324, 332, 333, 337, 338, 339, 340, 359, 361, 369, 370, 374, 375, 376, 377, 517, 529, 536, 630, 659, 726, 814, 816, 821, 825, 826, 827, 828, 829, 881, 883, 888, 892, 893, 894, 895, 914, 916, 924, 925, 929, 930, 931, 932, 951, 953, 961, 962, 966, 967, 968, 969, 1102, 1114, 1121, 1149, 1178, 1242], "squar": [69, 98, 154, 451, 522, 525, 526, 527, 539, 630, 659, 747, 1035, 1107, 1110, 1111, 1112, 1124, 1149, 1178, 1222], "assumpt": [69, 98, 515, 527, 630, 659, 1100, 1112, 1149, 1178], "size": [69, 98, 128, 137, 138, 140, 145, 200, 225, 292, 325, 362, 426, 443, 445, 446, 449, 451, 460, 471, 487, 490, 491, 500, 503, 527, 529, 531, 630, 659, 718, 727, 728, 730, 735, 791, 817, 884, 917, 954, 1026, 1029, 1030, 1033, 1035, 1045, 1056, 1072, 1075, 1076, 1085, 1088, 1112, 1114, 1116, 1149, 1178, 1216, 1232, 1241, 1249, 1264, 1285, 1298, 1302, 1304], "reset_gate_coord": [70, 99, 631, 660, 1150, 1179], "filter_transit": [70, 71, 99, 100, 222, 229, 233, 234, 235, 236, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 631, 632, 660, 661, 814, 821, 825, 826, 827, 828, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 1150, 1151, 1179, 1180], "With": [70, 71, 99, 100, 631, 632, 660, 661, 1150, 1151, 1179, 1180, 1309, 1310, 1311], "therefor": [70, 71, 99, 100, 527, 631, 632, 660, 661, 1112, 1150, 1151, 1179, 1180, 1313, 1319, 1320], "more": [70, 71, 76, 99, 100, 105, 138, 145, 154, 252, 398, 444, 445, 446, 500, 503, 536, 631, 632, 637, 660, 661, 666, 728, 735, 747, 844, 992, 1028, 1029, 1030, 1036, 1085, 1088, 1121, 1150, 1151, 1156, 1179, 1180, 1185, 1224, 1225, 1267, 1278, 1283, 1294, 1295, 1309, 1313, 1317, 1318, 1319, 1320, 1323], "effici": [70, 71, 99, 100, 445, 631, 632, 660, 661, 1029, 1150, 1151, 1179, 1180, 1223, 1309, 1313], "than": [70, 71, 99, 100, 138, 147, 151, 157, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 500, 517, 527, 631, 632, 660, 661, 728, 738, 743, 750, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1085, 1102, 1112, 1150, 1151, 1179, 1180, 1242, 1252, 1267, 1304, 1317, 1318, 1319, 1325], "through": [70, 71, 99, 100, 236, 302, 339, 376, 466, 485, 524, 631, 632, 660, 661, 828, 894, 931, 968, 1051, 1070, 1109, 1150, 1151, 1179, 1180, 1278, 1283, 1318, 1323], "pleas": [70, 99, 305, 342, 542, 631, 660, 897, 934, 1150, 1179, 1274, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "get_field": [71, 100, 632, 661, 1151, 1180, 1294, 1295, 1317], "check_uniform": [72, 101, 633, 662, 1152, 1181], "lookuperror": [72, 101, 633, 662, 1152, 1181], "except": [72, 101, 398, 633, 662, 992, 1009, 1152, 1181, 1315], "skip": [72, 101, 138, 139, 393, 451, 633, 662, 728, 729, 987, 1035, 1152, 1181, 1318, 1323], "nyquist_veloc": [72, 101, 138, 139, 400, 633, 662, 728, 729, 994, 1152, 1181, 1313, 1320], "slice": [73, 85, 102, 114, 248, 249, 254, 255, 256, 257, 268, 269, 270, 271, 634, 646, 663, 675, 840, 841, 846, 847, 848, 849, 860, 861, 862, 863, 1153, 1165, 1182, 1194, 1298, 1315, 1318, 1320], "out": [76, 105, 140, 143, 144, 151, 154, 155, 156, 199, 203, 396, 397, 398, 399, 400, 516, 525, 526, 541, 545, 556, 557, 573, 574, 637, 666, 730, 733, 734, 743, 747, 748, 749, 790, 794, 990, 991, 992, 993, 994, 1036, 1101, 1110, 1111, 1156, 1185, 1279, 1280, 1284, 1295, 1303, 1305, 1309, 1315, 1319, 1322, 1323, 1324], "_io": [76, 105, 637, 666, 1156, 1185], "textiowrapp": [76, 105, 637, 666, 1156, 1185], "stdout": [76, 105, 541, 637, 666, 1156, 1185], "encod": [76, 105, 399, 637, 666, 993, 1156, 1185, 1267], "utf": [76, 105, 637, 666, 1156, 1185], "print": [76, 105, 126, 150, 151, 239, 258, 394, 527, 541, 545, 556, 557, 573, 574, 637, 666, 716, 742, 743, 831, 850, 988, 1112, 1156, 1185, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1304, 1312, 1316, 1317, 1320], "compact": [76, 105, 637, 666, 1156, 1185], "f": [76, 105, 264, 370, 439, 637, 666, 856, 962, 1007, 1017, 1156, 1185, 1275, 1283, 1297, 1304, 1309, 1318, 1325], "minim": [76, 105, 502, 527, 536, 637, 666, 1087, 1112, 1121, 1156, 1185], "everyth": [76, 105, 637, 666, 1156, 1185, 1275, 1323], "output": [76, 105, 132, 398, 466, 485, 502, 503, 517, 524, 531, 533, 637, 666, 722, 992, 1036, 1051, 1070, 1087, 1088, 1102, 1109, 1116, 1118, 1156, 1185, 1234, 1267, 1309, 1317, 1319], "screen": [76, 105, 637, 666, 1156, 1185], "gate_": [79, 108, 640, 669, 1159, 1188], "iter": [81, 82, 83, 84, 85, 86, 87, 110, 111, 112, 113, 114, 115, 116, 148, 415, 439, 460, 475, 504, 527, 529, 642, 643, 644, 645, 646, 647, 648, 671, 672, 673, 674, 675, 676, 677, 739, 1007, 1017, 1045, 1060, 1089, 1112, 1114, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1232, 1320], "over": [83, 86, 87, 112, 115, 116, 135, 136, 137, 138, 142, 146, 154, 155, 199, 222, 224, 229, 233, 234, 235, 236, 253, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 415, 500, 517, 520, 533, 535, 644, 647, 648, 673, 676, 677, 725, 726, 727, 728, 732, 737, 747, 748, 790, 814, 816, 821, 825, 826, 827, 828, 845, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1085, 1102, 1105, 1118, 1120, 1163, 1166, 1167, 1192, 1195, 1196, 1231, 1241, 1278, 1304, 1306, 1309, 1312, 1318, 1320], "npuls": [88, 649, 1168, 1232, 1237, 1238, 1239, 1248, 1249, 1250, 1251], "doppler_veloc": [88, 502, 649, 1087, 1168], "doppler_frequ": [88, 649, 1168], "puls": [88, 148, 152, 163, 475, 476, 517, 649, 739, 744, 756, 1060, 1061, 1102, 1168, 1202, 1232, 1237, 1238, 1239, 1244, 1248, 1249, 1250, 1251, 1313], "npulses_max": [88, 649, 1168, 1202], "frequenc": [88, 127, 128, 400, 449, 460, 476, 477, 497, 505, 506, 507, 509, 510, 517, 518, 519, 527, 528, 529, 537, 649, 717, 718, 994, 1033, 1045, 1061, 1062, 1082, 1090, 1091, 1092, 1094, 1095, 1102, 1103, 1104, 1112, 1113, 1114, 1122, 1168, 1319], "ke": [117, 118, 119, 517, 597, 678, 679, 680, 1102], "kilomet": [117, 500, 678, 1085], "effect": [117, 118, 119, 152, 163, 173, 175, 182, 189, 194, 234, 445, 446, 497, 517, 678, 679, 680, 692, 694, 701, 708, 713, 744, 756, 764, 766, 773, 780, 785, 826, 1029, 1030, 1082, 1102, 1294, 1318], "scale": [117, 118, 119, 222, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 399, 400, 445, 446, 467, 527, 528, 678, 679, 680, 814, 821, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 993, 994, 1029, 1030, 1052, 1112, 1113, 1286, 1319], "equat": [117, 527, 678, 1112, 1231], "28": [117, 678, 1304, 1306, 1309, 1318, 1323], "b": [117, 500, 528, 540, 678, 971, 1085, 1113, 1125, 1323], "doviak": [117, 449, 678, 1033], "zrnic": [117, 449, 495, 678, 1033, 1080], "sqrt": [117, 121, 517, 678, 682, 1102, 1294, 1295, 1306, 1318], "r": [117, 120, 121, 122, 123, 124, 137, 139, 150, 151, 212, 227, 228, 250, 266, 279, 294, 295, 312, 327, 328, 329, 330, 349, 364, 365, 366, 367, 455, 465, 469, 474, 475, 482, 488, 500, 503, 506, 509, 510, 511, 531, 533, 536, 539, 678, 681, 682, 683, 684, 685, 727, 729, 742, 743, 804, 819, 820, 842, 858, 871, 886, 887, 904, 919, 920, 921, 922, 941, 956, 957, 958, 959, 1040, 1050, 1054, 1059, 1060, 1067, 1073, 1085, 1088, 1091, 1094, 1095, 1096, 1116, 1118, 1121, 1124, 1231, 1232, 1242, 1274, 1286, 1294, 1295, 1304, 1323], "sin": [117, 121, 124, 515, 678, 682, 685, 1100], "theta_": [117, 678], "arcsin": [117, 121, 678, 682], "frac": [117, 678], "theta_a": [117, 678], "arc": [117, 678, 1234], "length": [117, 150, 151, 154, 155, 156, 157, 158, 159, 503, 517, 527, 531, 678, 742, 743, 747, 748, 749, 750, 751, 752, 1088, 1102, 1112, 1116, 1237, 1248, 1249], "6371": [117, 121, 124, 678, 682, 685, 1234, 1260], "weather": [117, 137, 152, 153, 160, 163, 444, 465, 475, 482, 517, 527, 605, 678, 727, 744, 746, 753, 756, 1028, 1050, 1060, 1067, 1102, 1112, 1232, 1274, 1283, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "edit": [117, 678, 1323], "1993": [117, 449, 678, 1033], "21": [117, 678, 1267, 1317], "vector": [118, 122, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 470, 522, 524, 525, 526, 679, 683, 736, 745, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1055, 1107, 1109, 1110, 1111, 1220, 1222, 1223, 1318], "util": [118, 128, 137, 138, 234, 505, 679, 718, 727, 728, 826, 1090, 1126, 1275, 1286, 1299, 1302, 1304, 1317, 1318, 1319, 1323], "antenna_to_cartesian": [118, 679], "cartograph": [120, 121, 122, 123, 124, 342, 681, 682, 683, 684, 685, 934], "build": [120, 122, 123, 169, 173, 175, 182, 189, 194, 400, 541, 681, 683, 684, 688, 692, 694, 701, 708, 713, 760, 764, 766, 773, 780, 785, 994, 1309, 1322, 1323], "desir": [120, 122, 123, 173, 175, 182, 189, 194, 401, 482, 500, 539, 681, 683, 684, 692, 694, 701, 708, 713, 764, 766, 773, 780, 785, 996, 1067, 1085, 1124, 1198, 1238, 1239, 1251, 1261, 1262, 1302, 1316], "6370997": [121, 124, 682, 685], "rho": [121, 682, 1317], "arctan2": [121, 682, 1306, 1318], "snyder": [121, 124, 682, 685], "manual": [121, 124, 682, 685], "geolog": [121, 124, 682, 685], "survei": [121, 124, 682, 685], "profession": [121, 124, 682, 685], "paper": [121, 124, 503, 682, 685, 1088, 1309, 1323], "1395": [121, 124, 682, 685], "1987": [121, 124, 682, 685], "pp": [121, 124, 449, 465, 473, 482, 495, 682, 685, 1033, 1050, 1058, 1067, 1080], "191": [121, 124, 682, 685], "202": [121, 124, 682, 685], "find": [122, 138, 145, 154, 155, 444, 445, 446, 516, 533, 683, 728, 735, 747, 748, 1020, 1028, 1029, 1030, 1101, 1118, 1233, 1275, 1318, 1325], "arcco": [124, 685], "no_altitude_transform": [125, 686], "wgs84": [125, 236, 302, 339, 376, 398, 686, 828, 894, 931, 968, 992, 1027], "ch1903": [125, 686], "lv03": [125, 686], "formula": [125, 449, 686, 1033], "formeln": [125, 686], "und": [125, 686], "konstanten": [125, 686], "f\u00fcr": [125, 686], "die": [125, 686], "berechnung": [125, 686], "der": [125, 686], "schweizerischen": [125, 686], "schiefachsigen": [125, 686], "zylinderprojekt": [125, 686], "zwischen": [125, 686], "koordinatensystemen": [125, 686], "chapter": [125, 686], "n\u00e4herungsl\u00f6sungen": [125, 686], "bundesamt": [125, 686], "landestopografi": [125, 686], "swisstopo": [125, 686], "admin": [125, 686, 1323], "ch": [125, 686, 1305, 1306], "oktob": [125, 686], "2008": [125, 531, 686, 1116, 1275], "input": [125, 150, 151, 398, 466, 474, 475, 485, 501, 502, 517, 523, 524, 529, 531, 686, 742, 743, 992, 1031, 1051, 1059, 1060, 1070, 1086, 1087, 1102, 1108, 1109, 1114, 1116, 1219, 1242, 1304, 1316, 1319], "46": [125, 236, 302, 339, 376, 686, 828, 894, 931, 968, 1302, 1319], "38": [125, 686, 1275], "87": [125, 444, 686, 1028], "43": [125, 686], "49": [125, 686], "79": [125, 686], "650": [125, 686], "60": [125, 686, 1020, 1269, 1274, 1278, 1280, 1285, 1311, 1313, 1315, 1319], "result": [125, 135, 136, 137, 138, 139, 173, 175, 182, 189, 194, 222, 229, 232, 233, 234, 235, 236, 249, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 380, 397, 401, 446, 525, 526, 531, 532, 534, 539, 540, 686, 692, 694, 701, 708, 713, 725, 726, 727, 728, 729, 745, 764, 766, 773, 780, 785, 814, 821, 824, 825, 826, 827, 828, 841, 847, 849, 859, 861, 863, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968, 974, 991, 996, 1030, 1036, 1110, 1111, 1116, 1117, 1119, 1124, 1125, 1221, 1232, 1258, 1275, 1305, 1309, 1315, 1318, 1323], "chy": [125, 686], "699": [125, 686], "999": [125, 137, 401, 686, 727, 996], "76": [125, 686], "700000": [125, 686], "chx": [125, 686], "99": [125, 456, 533, 686, 1041, 1118, 1283], "97": [125, 143, 144, 686, 733, 734, 1278, 1280, 1284, 1286, 1298, 1302, 1304, 1311], "100000": [125, 686, 1315, 1318], "chh": [125, 686], "600": [125, 686, 1311], "05": [125, 137, 445, 446, 537, 686, 727, 1029, 1030, 1122, 1298, 1302], "z_offset": [126, 716], "debug": [126, 137, 150, 151, 239, 258, 394, 527, 541, 716, 727, 742, 743, 831, 850, 988, 1112], "doc": [126, 127, 128, 142, 143, 146, 151, 154, 155, 156, 716, 717, 718, 732, 733, 737, 743, 747, 748, 749, 1269, 1274, 1275, 1309, 1322, 1323, 1325], "15": [126, 517, 527, 716, 1102, 1112, 1242, 1269, 1270, 1274, 1275, 1276, 1283, 1286, 1292, 1293, 1294, 1295, 1298, 1299, 1302, 1306, 1313, 1318, 1320, 1321], "fzl": [126, 127, 128, 142, 143, 146, 150, 151, 154, 155, 156, 716, 717, 718, 732, 733, 737, 742, 743, 747, 748, 749, 1319], "4000": [126, 150, 151, 716, 742, 743, 1315], "rhv_min": [126, 716], "ncp_min": [126, 716], "a_coef": [126, 128, 716, 718], "06": [126, 716], "beta": [126, 128, 505, 506, 507, 508, 509, 510, 716, 718, 736, 745, 1090, 1091, 1092, 1093, 1094, 1095], "refl_field": [126, 127, 128, 129, 133, 135, 136, 141, 142, 143, 144, 150, 151, 154, 155, 156, 158, 159, 197, 200, 201, 446, 450, 476, 477, 483, 484, 497, 500, 501, 503, 506, 508, 509, 510, 511, 524, 525, 531, 536, 716, 717, 718, 719, 723, 725, 726, 731, 732, 733, 734, 741, 742, 743, 747, 748, 749, 751, 752, 788, 791, 792, 1030, 1034, 1061, 1062, 1068, 1069, 1082, 1085, 1086, 1088, 1091, 1093, 1094, 1095, 1096, 1109, 1110, 1116, 1121, 1269, 1304, 1305, 1319], "ncp_field": [126, 150, 151, 201, 716, 741, 742, 743, 792, 1269], "rhv_field": [126, 150, 151, 197, 200, 201, 501, 524, 531, 716, 741, 742, 743, 788, 791, 792, 1086, 1109, 1116, 1269, 1305, 1319], "spec_at_field": [126, 127, 128, 716, 717, 718], "corr_refl_field": [126, 127, 128, 135, 136, 716, 717, 718, 725, 726], "attenu": [126, 127, 128, 147, 148, 149, 163, 449, 477, 483, 505, 506, 509, 518, 716, 717, 718, 738, 739, 740, 756, 1033, 1062, 1068, 1090, 1091, 1094, 1103, 1267, 1268, 1271, 1272, 1305, 1309, 1321], "phi": [126, 128, 150, 716, 718, 742, 1269, 1317, 1319], "must": [126, 127, 128, 137, 333, 383, 387, 388, 393, 399, 449, 503, 517, 522, 527, 528, 529, 532, 716, 717, 718, 727, 925, 977, 981, 982, 987, 993, 1033, 1088, 1102, 1107, 1112, 1113, 1114, 1117, 1259, 1304, 1309, 1317, 1322, 1323], "copol_coeff": [126, 716, 1204, 1269, 1302, 1303, 1311], "norm_coherent_pow": [126, 716, 1204, 1269, 1311], "proc_dp_phase_shift": [126, 716, 1269, 1302, 1311], "reflectivity_horizont": [126, 137, 716, 727, 1204, 1269, 1278, 1283, 1285, 1289, 1291, 1292, 1293, 1297, 1299, 1302, 1303, 1304, 1311, 1312], "supress": [126, 239, 251, 252, 258, 333, 370, 716, 831, 843, 844, 850, 925, 962], "freez": [126, 127, 128, 142, 143, 146, 154, 155, 156, 465, 482, 503, 531, 532, 533, 716, 717, 718, 732, 733, 737, 747, 748, 749, 1050, 1067, 1088, 1116, 1117, 1118, 1319], "layer": [126, 127, 128, 129, 130, 135, 136, 142, 143, 146, 154, 155, 156, 199, 203, 398, 456, 503, 506, 521, 527, 531, 532, 533, 534, 716, 717, 718, 719, 720, 725, 726, 732, 733, 737, 747, 748, 749, 790, 794, 992, 1041, 1088, 1091, 1106, 1112, 1116, 1117, 1118, 1119, 1267, 1319], "combin": [126, 127, 128, 716, 717, 718, 1252, 1253, 1323], "normal": [126, 129, 135, 136, 150, 151, 201, 222, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 296, 300, 301, 302, 322, 332, 333, 337, 338, 339, 359, 369, 370, 374, 375, 376, 428, 524, 716, 719, 725, 726, 741, 742, 743, 792, 814, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 888, 892, 893, 894, 914, 924, 925, 929, 930, 931, 951, 961, 962, 966, 967, 968, 1109, 1254, 1294], "coher": [126, 150, 151, 201, 716, 741, 742, 743, 792], "zdr_field": [126, 127, 128, 132, 143, 144, 147, 148, 154, 155, 156, 197, 200, 459, 501, 524, 531, 716, 717, 718, 722, 733, 734, 738, 739, 747, 748, 749, 788, 791, 1044, 1086, 1109, 1116, 1305, 1319], "spec_at": [126, 127, 128, 716, 717, 718, 1269, 1305, 1319], "cor_z": [126, 127, 128, 716, 717, 718, 1269, 1305, 1319], "gu": [126, 128, 716, 718], "et": [126, 128, 132, 148, 475, 500, 524, 527, 531, 532, 536, 716, 718, 722, 739, 1060, 1085, 1109, 1112, 1116, 1117, 1121, 1304, 1319], "al": [126, 128, 132, 148, 475, 500, 524, 527, 528, 531, 532, 536, 716, 718, 722, 739, 1060, 1085, 1109, 1112, 1113, 1116, 1117, 1121, 1304, 1319], "heavi": [126, 128, 716, 718, 1242, 1286, 1294], "rain": [126, 128, 133, 141, 142, 143, 154, 155, 156, 158, 159, 456, 465, 482, 505, 506, 507, 508, 511, 536, 716, 718, 723, 731, 732, 733, 747, 748, 749, 751, 752, 1041, 1050, 1067, 1090, 1091, 1092, 1093, 1096, 1121, 1286, 1294, 1304, 1305, 1318, 1319], "jamc": [126, 128, 529, 716, 718, 1114], "2011": [126, 128, 716, 718, 1302], "50": [126, 128, 144, 460, 473, 496, 498, 524, 531, 716, 718, 734, 1045, 1058, 1081, 1083, 1109, 1116, 1216, 1280, 1298, 1302, 1305, 1315, 1317, 1318, 1319, 1320], "39": [126, 128, 716, 718, 1302], "58": [126, 128, 716, 718, 1281, 1302], "pia_coef": [127, 717], "pida_coef": [127, 717], "temp_field": [127, 128, 135, 136, 142, 143, 144, 146, 154, 155, 156, 203, 501, 524, 531, 533, 717, 718, 725, 726, 732, 733, 734, 737, 747, 748, 749, 794, 1086, 1109, 1116, 1118, 1305, 1319], "iso0_field": [127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 199, 501, 503, 524, 531, 532, 533, 717, 718, 725, 726, 732, 733, 737, 747, 748, 749, 790, 1086, 1088, 1109, 1116, 1117, 1118], "pia_field": [127, 128, 717, 718], "spec_diff_at_field": [127, 128, 717, 718], "pida_field": [127, 128, 717, 718], "corr_zdr_field": [127, 128, 717, 718], "temp_ref": [127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 501, 520, 524, 531, 533, 717, 718, 725, 726, 732, 733, 737, 747, 748, 749, 1086, 1105, 1109, 1116, 1118, 1305, 1319], "dependec": [127, 717], "comput": [127, 128, 129, 130, 132, 135, 136, 147, 148, 149, 153, 154, 155, 163, 200, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 517, 520, 524, 525, 526, 527, 528, 529, 531, 533, 535, 539, 717, 718, 719, 720, 722, 725, 726, 738, 739, 740, 745, 746, 747, 748, 756, 791, 1027, 1033, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1102, 1105, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1118, 1120, 1124, 1212, 1213, 1214, 1215, 1216, 1219, 1220, 1221, 1222, 1223, 1232, 1241, 1245, 1246, 1248, 1250, 1251, 1255, 1256, 1264, 1305, 1306, 1309, 1318], "depend": [127, 128, 167, 446, 506, 517, 531, 542, 717, 718, 1030, 1091, 1102, 1116, 1248, 1317, 1323], "refl": [127, 128, 717, 718, 1292], "integr": [127, 128, 153, 163, 717, 718, 746, 756, 1319], "pida_coeff": [127, 717], "0c": [127, 128, 146, 717, 718, 737], "isotherm": [127, 128, 146, 717, 718, 737], "height_over_iso0": [127, 128, 135, 136, 142, 143, 146, 154, 155, 156, 501, 524, 531, 533, 717, 718, 725, 726, 732, 733, 737, 747, 748, 749, 1086, 1109, 1116, 1118, 1316], "fixed_fzl": [127, 128, 143, 146, 154, 155, 156, 717, 718, 733, 737, 747, 748, 749], "pia_dict": [127, 128, 717, 718], "spec_diff_at": [127, 128, 717, 718, 1305, 1319], "pida_dict": [127, 128, 717, 718], "cor_zdr": [127, 128, 717, 718, 1305, 1319], "smooth_window_len": [128, 718], "smooth": [128, 145, 154, 155, 156, 157, 158, 159, 471, 487, 490, 491, 525, 526, 527, 718, 735, 747, 748, 749, 750, 751, 752, 1056, 1072, 1075, 1076, 1110, 1111, 1112, 1234, 1260, 1294, 1295, 1315], "window": [128, 137, 150, 151, 154, 155, 156, 157, 158, 159, 200, 451, 466, 471, 485, 487, 490, 491, 525, 526, 529, 531, 539, 718, 727, 742, 743, 747, 748, 749, 750, 751, 752, 791, 1035, 1051, 1056, 1070, 1072, 1075, 1076, 1110, 1111, 1114, 1116, 1124, 1216, 1237, 1241, 1248, 1249, 1258, 1264, 1309, 1323], "expon": [128, 150, 151, 505, 506, 507, 508, 509, 510, 718, 742, 743, 1090, 1091, 1092, 1093, 1094, 1095], "law": [128, 505, 506, 507, 508, 509, 510, 718, 1090, 1091, 1092, 1093, 1094, 1095], "ryzhkov": [128, 465, 473, 505, 531, 534, 718, 1050, 1058, 1090, 1116, 1119], "potenti": [128, 147, 505, 531, 718, 738, 1090, 1116], "rainfal": [128, 505, 506, 507, 508, 509, 510, 511, 527, 529, 718, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1112, 1114, 1319], "mitig": [128, 505, 718, 1090], "partial": [128, 505, 718, 1090], "beam": [128, 129, 153, 443, 445, 446, 456, 505, 517, 718, 719, 746, 1026, 1029, 1030, 1041, 1090, 1102], "blockag": [128, 505, 718, 1090], "network": [128, 138, 392, 505, 718, 728, 986, 1090, 1318], "jaot": [128, 132, 718, 722], "2014": [128, 505, 528, 534, 718, 1090, 1113, 1119], "31": [128, 158, 390, 505, 525, 718, 751, 984, 1090, 1110, 1275, 1302, 1317], "599": [128, 505, 718, 1090], "619": [128, 505, 718, 1090], "ml_top": [129, 130, 456, 521, 719, 720, 1041, 1106], "3000": [129, 130, 456, 520, 536, 719, 720, 1041, 1105, 1121, 1311, 1315], "ml_thick": [129, 130, 456, 719, 720, 1041], "200": [129, 130, 135, 136, 449, 456, 533, 719, 720, 725, 726, 1033, 1041, 1118, 1232, 1250, 1251, 1317, 1323], "val_ml": [129, 130, 719, 720], "val_dr": [129, 130, 719, 720], "h_max": [129, 130, 135, 136, 456, 533, 719, 720, 725, 726, 1041, 1118], "6000": [129, 130, 135, 136, 456, 531, 533, 719, 720, 725, 726, 1041, 1116, 1118, 1311, 1315], "h_re": [129, 130, 135, 136, 456, 533, 719, 720, 725, 726, 1041, 1118], "max_weight": [129, 135, 136, 719, 725, 726], "vpr_theo_dict": [129, 719], "normalized_reflect": [129, 719], "appar": [129, 456, 719, 1041], "vpr": [129, 135, 136, 719, 725, 726, 1267, 1309], "melt": [129, 130, 135, 136, 142, 143, 154, 155, 156, 199, 203, 456, 503, 506, 521, 527, 531, 532, 533, 534, 719, 720, 725, 726, 732, 733, 747, 748, 749, 790, 794, 1041, 1088, 1091, 1106, 1112, 1116, 1117, 1118, 1119, 1242, 1267, 1286, 1304, 1305, 1319], "top": [129, 130, 135, 136, 152, 163, 258, 446, 456, 503, 512, 513, 521, 530, 531, 532, 533, 719, 720, 725, 726, 744, 756, 850, 1030, 1041, 1088, 1097, 1098, 1106, 1115, 1116, 1117, 1118, 1283, 1302, 1315, 1323], "asl": [129, 130, 456, 719, 720, 1041], "thick": [129, 130, 135, 136, 142, 143, 146, 154, 155, 156, 199, 203, 456, 533, 719, 720, 725, 726, 732, 733, 737, 747, 748, 749, 790, 794, 1041, 1118], "peak": [129, 130, 135, 136, 456, 531, 533, 719, 720, 725, 726, 1041, 1116, 1118, 1231, 1267, 1313], "decreas": [129, 130, 135, 136, 501, 520, 524, 719, 720, 725, 726, 1086, 1105, 1109], "ratio": [129, 130, 135, 136, 144, 200, 201, 202, 237, 303, 340, 377, 450, 458, 459, 517, 719, 720, 725, 726, 734, 741, 791, 792, 793, 829, 895, 932, 969, 1034, 1043, 1044, 1102, 1319, 1320], "theoret": [129, 135, 136, 163, 444, 456, 537, 719, 725, 726, 756, 1028, 1041, 1122], "multipli": [129, 456, 466, 500, 533, 719, 971, 1041, 1051, 1085, 1118, 1304, 1311], "radar_out": [129, 456, 719, 1041], "conta": [129, 130, 456, 503, 531, 532, 533, 543, 719, 720, 1041, 1088, 1116, 1117, 1118], "ideal": [130, 720], "val_theo_dict": [130, 720], "bottom": [130, 331, 368, 456, 503, 521, 531, 532, 533, 720, 923, 960, 1041, 1088, 1106, 1116, 1117, 1118, 1283, 1285], "bia": [131, 136, 143, 144, 154, 155, 164, 721, 726, 733, 734, 745, 747, 748, 757], "magnitud": [131, 527, 721, 1112, 1306, 1320], "corrected_field": [131, 134, 721, 724], "urhohv_field": [132, 722], "snr_field": [132, 144, 202, 450, 484, 722, 734, 793, 1034, 1069], "nh_field": [132, 722], "nv_field": [132, 722], "rhohv_field": [132, 142, 143, 144, 154, 155, 156, 456, 459, 467, 503, 722, 732, 733, 734, 747, 748, 749, 1041, 1044, 1052, 1088], "eq": [132, 722, 1292], "2006": [132, 722, 1275], "subtract": [132, 455, 464, 471, 472, 479, 480, 481, 487, 490, 491, 492, 500, 722, 1040, 1049, 1056, 1057, 1064, 1065, 1066, 1072, 1075, 1076, 1077, 1085], "uncorrect": [132, 722], "snr": [132, 144, 202, 450, 484, 722, 734, 793, 1034, 1069, 1239, 1251, 1319], "channel": [132, 164, 398, 462, 468, 481, 493, 494, 499, 722, 757, 992, 1047, 1053, 1066, 1078, 1079, 1084], "meteo": [132, 135, 136, 531, 533, 722, 725, 726, 1116, 1118], "franc": [132, 135, 136, 533, 722, 725, 726, 1118], "23": [132, 722], "1340": [132, 722], "1356": [132, 722], "ind_rmin": [133, 141, 142, 143, 144, 158, 159, 474, 723, 731, 732, 733, 734, 751, 752, 1059], "10": [133, 140, 141, 142, 143, 144, 148, 150, 151, 158, 159, 160, 163, 169, 202, 204, 236, 302, 339, 376, 444, 446, 449, 460, 465, 475, 495, 500, 503, 514, 524, 528, 529, 531, 533, 688, 723, 730, 731, 732, 733, 734, 739, 742, 743, 751, 752, 753, 756, 760, 793, 795, 828, 894, 931, 968, 1028, 1030, 1033, 1045, 1050, 1060, 1080, 1085, 1088, 1099, 1109, 1113, 1114, 1116, 1118, 1232, 1242, 1269, 1270, 1271, 1275, 1278, 1279, 1283, 1286, 1287, 1289, 1291, 1294, 1295, 1298, 1304, 1306, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323], "ind_rmax": [133, 141, 142, 143, 144, 158, 159, 723, 731, 732, 733, 734, 751, 752], "500": [133, 141, 142, 143, 144, 158, 159, 445, 446, 531, 723, 731, 732, 733, 734, 751, 752, 1020, 1029, 1030, 1116, 1278, 1284, 1288, 1317, 1318], "min_rcon": [133, 141, 154, 155, 158, 159, 723, 731, 747, 748, 751, 752], "11": [133, 141, 157, 158, 159, 236, 302, 339, 376, 457, 500, 525, 526, 723, 731, 750, 751, 752, 828, 894, 931, 968, 1042, 1085, 1110, 1111, 1258, 1271, 1275, 1284, 1300, 1302, 1316, 1320, 1321], "zmin": [133, 141, 142, 143, 144, 158, 159, 723, 731, 732, 733, 734, 751, 752, 1318], "20": [133, 135, 136, 141, 142, 143, 147, 154, 155, 156, 158, 159, 197, 200, 201, 456, 531, 533, 534, 723, 725, 726, 731, 732, 733, 738, 741, 747, 748, 749, 751, 752, 788, 791, 792, 1041, 1116, 1118, 1119, 1274, 1275, 1278, 1284, 1285, 1286, 1289, 1291, 1292, 1293, 1294, 1295, 1297, 1303, 1304, 1307, 1311, 1315, 1318, 1320, 1321], "zmax": [133, 141, 142, 143, 144, 158, 159, 723, 731, 732, 733, 734, 751, 752, 1318], "40": [133, 139, 141, 142, 158, 159, 264, 460, 525, 723, 729, 731, 732, 751, 752, 856, 1045, 1110, 1237, 1270, 1280, 1285, 1289, 1291, 1294, 1304, 1317, 1318, 1319], "psidp_field": [133, 158, 159, 527, 528, 529, 723, 751, 752, 1112, 1113, 1114, 1305, 1319], "public": [133, 141, 723, 731, 1266, 1311, 1312, 1313, 1315, 1316, 1317, 1320], "min": [133, 135, 136, 141, 142, 143, 144, 147, 158, 159, 197, 224, 291, 324, 361, 474, 531, 723, 725, 726, 731, 732, 733, 734, 738, 751, 752, 788, 816, 883, 916, 953, 1059, 1116, 1244, 1306, 1318], "max": [133, 135, 136, 141, 142, 143, 144, 154, 155, 158, 159, 197, 224, 291, 324, 361, 398, 474, 503, 531, 723, 725, 726, 731, 732, 733, 734, 747, 748, 751, 752, 788, 816, 883, 916, 953, 992, 1059, 1088, 1116, 1244, 1274, 1278, 1283, 1284, 1289, 1297, 1306, 1318], "look": [133, 141, 142, 143, 144, 147, 154, 155, 156, 158, 159, 161, 162, 473, 474, 531, 534, 723, 731, 732, 733, 734, 738, 747, 748, 749, 751, 752, 754, 755, 1036, 1058, 1059, 1116, 1119, 1233, 1248, 1250, 1251, 1274, 1275, 1278, 1285, 1309, 1311, 1313, 1315, 1318, 1319, 1320], "continu": [133, 137, 139, 141, 158, 159, 532, 723, 727, 729, 731, 751, 752, 1117], "consecut": [133, 141, 154, 155, 158, 159, 531, 723, 731, 747, 748, 751, 752, 1116, 1232], "cell": [133, 141, 158, 159, 723, 731, 751, 752, 1294], "phidp_dict": [133, 158, 159, 461, 462, 723, 751, 752, 1046, 1047], "vis_field": [134, 204, 724, 795], "nvalid_min": [135, 136, 465, 473, 482, 495, 533, 725, 726, 1050, 1058, 1067, 1080, 1118, 1219, 1221], "angle_min": [135, 136, 725, 726], "angle_max": [135, 136, 725, 726], "ml_thickness_min": [135, 136, 533, 725, 726, 1118], "ml_thickness_max": [135, 136, 533, 725, 726, 1118], "800": [135, 136, 148, 475, 725, 726, 739, 1060, 1232], "ml_thickness_step": [135, 136, 533, 725, 726, 1118], "iso0_max": [135, 136, 533, 725, 726, 1118], "5000": [135, 136, 725, 726, 1306, 1315, 1318], "ml_top_diff_max": [135, 136, 533, 725, 726, 1118], "ml_top_step": [135, 136, 533, 725, 726, 1118], "ml_peak_min": [135, 136, 725, 726], "ml_peak_max": [135, 136, 725, 726], "ml_peak_step": [135, 136, 725, 726], "dr_min": [135, 136, 725, 726], "dr_max": [135, 136, 725, 726], "dr_step": [135, 136, 725, 726], "dr_default": [135, 136, 725, 726], "dr_alt": [135, 136, 725, 726], "h_corr_max": [135, 136, 725, 726], "15000": [135, 136, 465, 495, 725, 726, 1050, 1080, 1311, 1315], "rmin_ob": [135, 136, 725, 726], "rmax_ob": [135, 136, 725, 726], "150000": [135, 136, 725, 726], "filter_param": [135, 725], "weight_mem": [135, 136, 725, 726], "75": [135, 136, 169, 237, 303, 340, 377, 398, 460, 500, 524, 531, 535, 688, 725, 726, 760, 829, 895, 932, 969, 992, 1031, 1045, 1085, 1109, 1116, 1120, 1278, 1294, 1304, 1311, 1315, 1316, 1317], "vpr_theo_dict_mem": [135, 136, 725, 726], "radar_mem_list": [135, 136, 725, 726], "lin_refl_field": [135, 136, 725, 726], "norm_refl_field": [135, 136, 725, 726], "corr_field": [135, 136, 725, 726], "averag": [135, 136, 138, 154, 155, 465, 469, 473, 482, 488, 495, 500, 517, 533, 539, 725, 726, 728, 747, 748, 971, 1050, 1054, 1058, 1067, 1073, 1080, 1085, 1102, 1118, 1124, 1219, 1221, 1231, 1245, 1267, 1304, 1306, 1318], "explor": [135, 136, 465, 533, 725, 726, 1050, 1118], "iso": [135, 136, 520, 533, 535, 725, 726, 1105, 1118, 1120], "proper": [135, 136, 725, 726, 1322], "could": [135, 136, 456, 725, 726, 1041, 1223, 1275, 1323], "abl": [135, 136, 143, 144, 725, 726, 733, 734, 1309, 1322], "dr": [135, 136, 517, 527, 725, 726, 1102, 1112], "masl": [135, 136, 521, 533, 725, 726, 1106, 1118], "weight": [135, 136, 154, 445, 446, 460, 482, 524, 527, 533, 539, 725, 726, 747, 1029, 1030, 1045, 1067, 1109, 1112, 1118, 1124, 1315, 1318], "compar": [135, 136, 137, 173, 460, 503, 533, 692, 725, 726, 727, 764, 1036, 1045, 1088, 1118, 1216, 1232, 1272, 1277, 1281, 1283, 1304, 1318, 1319, 1321, 1323], "previou": [135, 136, 137, 333, 370, 502, 531, 725, 726, 727, 925, 962, 1087, 1116], "shape": [135, 175, 189, 388, 530, 694, 708, 725, 766, 780, 982, 1115, 1254, 1304, 1311, 1315, 1316, 1320, 1323], "past": [135, 136, 533, 725, 726, 1118, 1323], "refl_corr_dict": [135, 136, 725, 726], "corr_field_dict": [135, 136, 725, 726], "vpr_theo_dict_filt": [135, 136, 725, 726], "radar_rhi": [135, 136, 725, 726, 1219, 1224], "correct_iso0": [136, 726], "spatialis": [136, 726], "last_radar": [137, 727], "sonde_profil": [137, 727], "filt": [137, 727], "rsl_badval": [137, 727], "131072": [137, 727], "keep_origin": [137, 138, 139, 727, 728, 729], "set_limit": [137, 138, 139, 727, 728, 729, 1286, 1287, 1288, 1290, 1292, 1293, 1294, 1295, 1297], "vel_field": [137, 138, 139, 197, 451, 515, 540, 727, 728, 729, 788, 1035, 1100, 1125, 1313], "corr_vel_field": [137, 138, 139, 727, 728, 729], "last_vel_field": [137, 727], "max_shear": [137, 727], "sign": [137, 514, 539, 540, 727, 1099, 1124, 1125, 1267, 1294, 1295, 1318], "dealia": [137, 138, 139, 502, 727, 728, 729, 1087, 1267, 1268, 1271, 1272, 1313, 1318, 1321], "4dd": [137, 727, 1267], "univers": [137, 395, 511, 727, 989, 1096, 1309], "washington": [137, 727], "sound": [137, 514, 539, 540, 727, 1099, 1124, 1125], "For": [137, 248, 254, 256, 268, 270, 388, 398, 445, 525, 526, 527, 727, 840, 846, 848, 860, 862, 982, 992, 1029, 1110, 1111, 1112, 1274, 1278, 1305, 1316, 1320, 1323, 1325], "best": [137, 727], "argument": [137, 138, 139, 222, 229, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 289, 296, 300, 301, 302, 322, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 366, 367, 368, 369, 370, 371, 374, 375, 376, 390, 392, 400, 401, 444, 446, 528, 529, 727, 728, 729, 814, 821, 825, 826, 827, 828, 840, 841, 843, 844, 845, 846, 847, 848, 849, 859, 860, 861, 862, 863, 881, 888, 892, 893, 894, 914, 921, 922, 923, 924, 925, 926, 929, 930, 931, 951, 958, 959, 960, 961, 962, 963, 966, 967, 968, 984, 986, 994, 996, 1028, 1030, 1113, 1114, 1267, 1323], "_fourdd_interfac": [137, 727], "fourdd_dealia": [137, 727], "fine": [137, 727], "tune": [137, 727, 1304], "behavior": [137, 333, 388, 401, 727, 925, 982, 996], "fourdd": [137, 727], "dealias": [137, 138, 139, 502, 727, 728, 729, 1087, 1270, 1274, 1309, 1310, 1317, 1323], "mean_doppler_veloc": [137, 727, 1297, 1302, 1311], "successfulli": [137, 727], "greatli": [137, 727], "improv": [137, 528, 529, 727, 1113, 1114, 1242, 1267, 1286], "final": [137, 460, 504, 528, 529, 727, 1045, 1089, 1113, 1114, 1304, 1318], "horizontalwindprofil": [137, 382, 383, 540, 727, 976, 977, 1125, 1259, 1323], "sond": [137, 138, 382, 383, 516, 727, 728, 976, 977, 1101, 1270], "moment_based_gate_filt": [137, 138, 139, 446, 727, 728, 729, 1030], "bergen": [137, 727], "alber": [137, 727], "bad": [137, 503, 527, 528, 529, 536, 727, 1088, 1112, 1113, 1114, 1121, 1318], "rsl": [137, 381, 393, 394, 727, 975, 987, 988, 1267, 1309, 1322], "procedur": [137, 138, 139, 727, 728, 729], "fail": [137, 138, 139, 388, 398, 727, 728, 729, 982, 992, 1323], "element": [137, 138, 139, 140, 145, 169, 400, 445, 446, 530, 688, 727, 728, 729, 730, 735, 760, 994, 1029, 1030, 1115, 1245, 1246, 1255, 1256, 1318], "maxshear": [137, 727], "shear": [137, 512, 513, 727, 1097, 1098], "incorpor": [137, 727, 1304], "toward": [137, 514, 539, 540, 727, 1099, 1124, 1125], "neg": [137, 222, 233, 289, 300, 322, 337, 359, 374, 514, 527, 539, 540, 727, 814, 825, 881, 892, 914, 929, 951, 966, 1099, 1112, 1124, 1125, 1283, 1318], "compthresh": [137, 727], "fraction": [137, 727, 1304, 1320], "threshold": [137, 140, 145, 149, 197, 199, 200, 201, 202, 203, 204, 460, 500, 503, 504, 506, 509, 510, 514, 727, 730, 735, 740, 741, 788, 790, 791, 792, 793, 794, 795, 971, 1045, 1085, 1088, 1089, 1091, 1094, 1095, 1099, 1231, 1232, 1237, 1238, 1239, 1242, 1248, 1249, 1250, 1251, 1304, 1313, 1316], "mark": [137, 169, 173, 182, 194, 688, 692, 701, 713, 727, 760, 764, 773, 785], "begin": [137, 138, 139, 150, 151, 169, 207, 209, 229, 233, 274, 276, 296, 300, 307, 309, 332, 337, 344, 346, 369, 374, 388, 389, 392, 394, 688, 727, 728, 729, 742, 743, 760, 799, 801, 821, 825, 866, 868, 888, 892, 899, 901, 924, 929, 936, 938, 961, 966, 982, 983, 986, 988], "unfold": [137, 138, 150, 151, 527, 727, 728, 742, 743, 1112, 1318], "compthresh2": [137, 727], "thresh": [137, 506, 509, 510, 727, 1091, 1094, 1095, 1319], "adjac": [137, 727], "count": [137, 727, 1278, 1313, 1320], "against": [137, 173, 692, 727, 764, 1294], "question": [137, 446, 727, 972, 1030], "ckval": [137, 727], "absolut": [137, 233, 300, 337, 374, 727, 825, 892, 929, 966, 1216, 1252], "below": [137, 140, 146, 150, 151, 173, 187, 197, 199, 200, 201, 202, 203, 204, 222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 445, 446, 500, 506, 509, 510, 527, 533, 692, 706, 727, 730, 737, 741, 742, 743, 764, 778, 788, 790, 791, 792, 793, 794, 795, 814, 821, 824, 825, 826, 827, 828, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968, 1029, 1030, 1031, 1085, 1091, 1094, 1095, 1112, 1118, 1231, 1283, 1304, 1311, 1313, 1316, 1317, 1319, 1324], "stdthresh": [137, 727], "deviat": [137, 147, 148, 164, 474, 514, 727, 738, 739, 745, 757, 1059, 1099, 1214, 1215, 1241, 1246, 1313], "portion": [137, 727, 1315], "epsilon": [137, 727], "miss": [137, 503, 527, 528, 529, 536, 727, 1088, 1112, 1113, 1114, 1121, 1267, 1275], "maxcount": [137, 727], "allow": [137, 140, 145, 221, 288, 321, 358, 460, 503, 514, 531, 727, 730, 735, 813, 880, 913, 950, 1020, 1031, 1045, 1088, 1099, 1116, 1278, 1320, 1325], "pass2": [137, 727], "retain": [137, 138, 139, 197, 199, 200, 201, 202, 203, 204, 727, 728, 729, 741, 788, 790, 791, 792, 793, 794, 795, 1265], "rm": [137, 727], "left": [137, 331, 368, 448, 502, 521, 727, 923, 960, 1087, 1106, 1232, 1283, 1285, 1319], "proxim": [137, 727], "side": [137, 727], "doubl": [137, 398, 727, 992, 1304], "captur": [137, 727], "suffici": [137, 503, 727, 1088], "good": [137, 138, 727, 728, 1319], "mingood": [137, 727], "ba_mincount": [137, 727], "neighbor": [137, 390, 446, 727, 984, 1030, 1315], "ba_edgecount": [137, 727], "usuccess": [137, 727], "radialvelvolum": [137, 727], "lastvelvolum": [137, 727], "unfoldedvolum": [137, 727], "sondvolum": [137, 727], "vr_corr": [137, 727], "due": [137, 153, 477, 483, 727, 746, 1036, 1062, 1068, 1252, 1278, 1313, 1319, 1322, 1325], "call": [137, 140, 168, 221, 222, 224, 229, 233, 234, 235, 236, 251, 252, 288, 289, 291, 296, 300, 301, 302, 321, 322, 324, 332, 333, 337, 338, 339, 358, 359, 361, 369, 370, 374, 375, 376, 393, 398, 401, 414, 727, 730, 813, 814, 816, 821, 825, 826, 827, 828, 843, 844, 880, 881, 883, 888, 892, 893, 894, 913, 914, 916, 924, 925, 929, 930, 931, 950, 951, 953, 961, 962, 966, 967, 968, 987, 992, 996, 1236, 1313, 1317, 1320, 1323, 1325], "long": [137, 158, 503, 525, 727, 751, 1088, 1110, 1312, 1320], "n": [137, 157, 211, 236, 278, 302, 311, 339, 348, 376, 517, 524, 727, 750, 803, 828, 870, 894, 903, 931, 940, 968, 1102, 1109, 1216, 1237, 1274, 1278, 1286, 1297, 1299, 1302, 1304, 1308, 1309, 1323, 1325], "jame": [137, 727], "houz": [137, 500, 536, 727, 971, 1085, 1121, 1304], "jr": [137, 500, 536, 727, 1085, 1121, 1304], "four": [137, 390, 391, 393, 727, 984, 985, 987, 1318], "dealis": [137, 727], "scheme": [137, 444, 500, 527, 727, 971, 1028, 1085, 1112, 1304], "2001": [137, 727], "18": [137, 455, 727, 1040, 1284, 1295, 1318], "1674": [137, 727], "ref_vel_field": [138, 728], "interval_split": [138, 728], "interval_limit": [138, 728], "skip_between_rai": [138, 728], "100": [138, 140, 201, 225, 230, 236, 292, 297, 302, 325, 339, 362, 376, 400, 460, 504, 517, 533, 540, 728, 730, 741, 792, 817, 822, 828, 884, 889, 894, 917, 931, 954, 968, 994, 1045, 1089, 1102, 1118, 1125, 1280, 1284, 1294, 1295, 1306, 1317, 1318], "skip_along_rai": [138, 728], "nyquist_vel": [138, 139, 728, 729, 1313], "check_nyquist_uniform": [138, 139, 451, 728, 729, 1035], "rays_wrap_around": [138, 139, 728, 729], "region": [138, 151, 264, 333, 370, 728, 743, 856, 925, 962, 1036, 1232, 1237, 1242, 1244, 1248, 1249, 1268, 1271, 1272, 1274, 1286, 1304, 1316, 1318, 1321, 1323], "similar": [138, 460, 728, 1045, 1278, 1315, 1318], "merg": [138, 173, 175, 182, 189, 194, 383, 692, 694, 701, 708, 713, 728, 764, 766, 773, 780, 785, 977, 1267, 1318, 1323], "pair": [138, 390, 401, 436, 728, 984, 996, 1004, 1009, 1015, 1311, 1318], "accomplish": [138, 394, 728, 988], "problem": [138, 150, 151, 305, 342, 446, 728, 742, 743, 897, 934, 1030, 1275], "reduct": [138, 728], "anchor": [138, 728], "onc": [138, 728, 1304, 1322, 1325], "complet": [138, 728], "simul": [138, 517, 728, 1102, 1259, 1309], "simulated_vel_from_profil": [138, 728, 1323], "segment": [138, 154, 155, 329, 330, 366, 367, 728, 747, 748, 921, 922, 958, 959], "split": [138, 728, 1242], "interv": [138, 176, 181, 190, 195, 197, 201, 695, 700, 709, 714, 728, 741, 767, 772, 781, 786, 788, 792, 1216, 1245, 1246], "larger": [138, 517, 728, 1102, 1252, 1304], "longer": [138, 154, 728, 747, 1309, 1322], "better": [138, 225, 230, 292, 297, 325, 334, 362, 371, 517, 728, 817, 822, 884, 889, 917, 926, 954, 963, 1102, 1267, 1313, 1318], "seem": [138, 728], "compromis": [138, 728], "artifact": [138, 728, 1313, 1315], "free": [138, 728, 1309], "cover": [138, 728], "entir": [138, 139, 222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 446, 728, 729, 814, 821, 825, 826, 827, 841, 847, 849, 859, 861, 863, 881, 888, 892, 893, 914, 924, 925, 929, 930, 951, 961, 962, 966, 967, 1030, 1261, 1262], "join": [138, 728, 1137], "gap": [138, 140, 145, 728, 730, 735, 1315], "connect": [138, 139, 728, 729], "disabl": [138, 139, 197, 199, 200, 201, 202, 203, 204, 728, 729, 741, 788, 790, 791, 792, 793, 794, 795, 1317], "across": [138, 728, 1303], "individu": [138, 139, 446, 728, 729, 1030], "ident": [138, 139, 387, 445, 728, 729, 981, 1029], "de": [138, 139, 368, 728, 729, 960, 1209, 1210], "alias": [138, 139, 502, 728, 729, 1087, 1209, 1210, 1313, 1318, 1320], "corr_vel": [138, 139, 728, 729, 1318], "unwrap_unit": [139, 729], "skip_check": [139, 729], "multi": [139, 539, 729, 1124, 1267], "unwrap": [139, 150, 151, 729, 742, 743], "independ": [139, 729], "often": [139, 729, 1036], "give": [139, 154, 398, 729, 747, 992, 1232, 1309, 1313, 1316], "superior": [139, 729], "lower": [139, 249, 251, 252, 253, 255, 257, 267, 269, 271, 448, 503, 729, 841, 843, 844, 845, 847, 849, 859, 861, 863, 1088, 1279, 1280, 1318], "contamin": [139, 531, 536, 729, 1116, 1121, 1237], "clutter": [139, 458, 517, 525, 526, 729, 1043, 1102, 1110, 1111, 1232, 1238, 1250, 1313, 1316, 1317], "poor": [139, 729], "verif": [139, 729], "appropi": [139, 221, 288, 321, 358, 729, 813, 880, 913, 950, 1231], "offer": [139, 729], "extrem": [139, 248, 729, 840, 1319], "miguel": [139, 729], "arevallilo": [139, 729], "herraez": [139, 729], "david": [139, 729], "burton": [139, 729], "michael": [139, 729], "lalor": [139, 729], "munther": [139, 729], "gdeisat": [139, 729], "fast": [139, 729, 1319], "two": [139, 158, 248, 249, 400, 444, 494, 496, 500, 522, 523, 536, 729, 751, 840, 841, 994, 1028, 1079, 1081, 1085, 1107, 1108, 1121, 1220, 1222, 1252, 1253, 1255, 1256, 1272, 1277, 1281, 1282, 1284, 1299, 1300, 1312, 1315, 1317, 1318, 1321, 1323], "sort": [139, 556, 729, 1318], "reliabl": [139, 729, 1318], "noncontinu": [139, 729], "optic": [139, 517, 729, 1102], "vol": [139, 455, 465, 473, 482, 495, 729, 1040, 1050, 1058, 1067, 1080, 1267], "41": [139, 729, 1302, 1306, 1315, 1318], "2002": [139, 729], "7437": [139, 729], "abdul": [139, 729], "rahman": [139, 729], "osten": [139, 729], "gorecki": [139, 729], "l": [139, 150, 151, 226, 230, 231, 264, 293, 297, 298, 326, 335, 363, 370, 372, 729, 742, 743, 818, 822, 823, 856, 885, 889, 890, 918, 927, 955, 962, 964, 1242, 1286], "novak": [139, 729], "ed": [139, 729], "metrologi": [139, 729], "2005": [139, 500, 729, 1085, 1304], "32": [139, 482, 729, 1067, 1232, 1283, 1287, 1288, 1289, 1299, 1302, 1306, 1307, 1318, 1319, 1320], "intern": [139, 460, 503, 729, 1045, 1088], "societi": [139, 729, 1036], "photon": [139, 729], "label_dict": [140, 145, 730, 735], "delta": [140, 145, 528, 730, 735, 1113], "despeckl": [140, 730], "identifi": [140, 145, 500, 502, 730, 735, 971, 1085, 1087, 1231, 1232, 1286, 1304, 1316], "small": [140, 145, 500, 503, 515, 536, 730, 735, 1085, 1088, 1100, 1121, 1250, 1278, 1294], "investig": [140, 145, 534, 730, 735, 1119, 1274], "well": [140, 197, 199, 200, 201, 202, 203, 204, 370, 390, 392, 446, 502, 542, 730, 741, 788, 790, 791, 792, 793, 794, 795, 962, 984, 986, 1030, 1031, 1087, 1275, 1284, 1309, 1315, 1316, 1317, 1318, 1319], "variou": [140, 169, 197, 198, 199, 200, 201, 202, 203, 204, 688, 730, 741, 760, 788, 789, 790, 791, 792, 793, 794, 795, 1236, 1267, 1272, 1301, 1309], "scipi": [140, 145, 466, 485, 527, 730, 735, 1051, 1070, 1112, 1259, 1267, 1294, 1295, 1309, 1322, 1323, 1325], "core": [140, 145, 398, 446, 500, 528, 529, 730, 735, 971, 992, 1020, 1030, 1085, 1113, 1114, 1236, 1269, 1304, 1317, 1319, 1323], "queri": [140, 145, 446, 730, 735, 1030], "speckl": [140, 730, 1304], "find_object": [140, 730], "tupl": [140, 145, 222, 224, 227, 228, 229, 232, 233, 234, 235, 236, 238, 249, 251, 255, 257, 267, 269, 271, 289, 291, 294, 295, 296, 299, 300, 301, 302, 304, 322, 324, 327, 328, 332, 333, 336, 337, 338, 339, 341, 359, 361, 364, 365, 369, 370, 373, 374, 375, 376, 378, 436, 444, 446, 460, 522, 523, 730, 735, 814, 816, 819, 820, 821, 824, 825, 826, 827, 828, 830, 841, 843, 847, 849, 859, 861, 863, 881, 883, 886, 887, 888, 891, 892, 893, 894, 896, 914, 916, 919, 920, 924, 925, 928, 929, 930, 931, 933, 951, 953, 956, 957, 961, 962, 965, 966, 967, 968, 970, 1004, 1015, 1028, 1030, 1031, 1045, 1107, 1108, 1199, 1254], "contigu": [140, 145, 730, 735], "perman": [140, 730], "altern": [141, 446, 731, 1030, 1036, 1304, 1318], "suitabl": [141, 142, 143, 144, 207, 243, 259, 274, 307, 344, 533, 731, 732, 733, 734, 799, 835, 851, 866, 899, 936, 1118], "phidp0_dict": [141, 731], "first_gates_dict": [141, 731], "700": [142, 143, 154, 155, 156, 533, 732, 733, 747, 748, 749, 1118], "quantil": [142, 460, 504, 732, 1045, 1089], "rhohv_rain_dict": [142, 732], "rhohvmin": [143, 144, 733, 734], "phidpmax": [143, 144, 733, 734], "elmax": [143, 144, 197, 531, 733, 734, 788, 1116, 1244], "undesir": [143, 144, 198, 199, 200, 201, 202, 203, 204, 446, 733, 734, 741, 789, 790, 791, 792, 793, 794, 795, 1030], "moder": [143, 733], "zdr_prec_dict": [143, 733], "compli": [143, 144, 733, 734, 1244], "30": [144, 148, 150, 151, 460, 473, 475, 482, 500, 531, 734, 739, 742, 743, 1045, 1058, 1060, 1067, 1085, 1116, 1232, 1278, 1285, 1289, 1291, 1304, 1313, 1318], "snrmin": [144, 734], "snrmax": [144, 734], "kept_valu": [144, 198, 734, 789], "kdpmax": [144, 734], "tempmin": [144, 734], "tempmax": [144, 734], "hydro_field": [144, 154, 155, 156, 506, 524, 532, 734, 747, 748, 749, 1091, 1109, 1117, 1319], "kdp_field": [144, 150, 151, 155, 501, 506, 507, 509, 510, 524, 525, 526, 527, 528, 529, 734, 742, 743, 748, 1086, 1091, 1092, 1094, 1095, 1109, 1110, 1111, 1112, 1113, 1114, 1305, 1319], "snow": [144, 456, 500, 506, 734, 1041, 1085, 1091, 1242, 1286, 1304, 1305, 1319], "hydrometeor": [144, 154, 155, 156, 198, 398, 460, 501, 504, 506, 524, 532, 537, 734, 747, 748, 749, 789, 992, 1045, 1086, 1089, 1091, 1109, 1117, 1122, 1272, 1301, 1307, 1313, 1317, 1321], "classif": [144, 154, 155, 156, 198, 500, 501, 506, 524, 532, 536, 734, 747, 748, 749, 789, 971, 1085, 1086, 1091, 1109, 1117, 1121, 1272, 1301, 1307, 1317, 1321], "differneti": [144, 734], "zdr_snow_dict": [144, 734], "label": [145, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 294, 295, 296, 299, 300, 301, 302, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 327, 328, 331, 332, 333, 336, 337, 338, 339, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 368, 369, 370, 373, 374, 375, 376, 460, 735, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 819, 820, 821, 824, 825, 826, 827, 828, 839, 841, 843, 844, 845, 847, 849, 857, 859, 861, 863, 871, 872, 873, 874, 875, 876, 877, 878, 879, 881, 882, 883, 886, 887, 888, 891, 892, 893, 894, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 919, 920, 923, 924, 925, 928, 929, 930, 931, 941, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 953, 956, 957, 960, 961, 962, 965, 966, 967, 968, 1045, 1265, 1267, 1278, 1284, 1285, 1294, 1295, 1299, 1305, 1317, 1319], "account": [145, 152, 735, 744, 1267], "examin": [145, 380, 394, 397, 735, 974, 988, 991, 1323], "box": [145, 398, 735, 992, 1305, 1318, 1319], "alwai": [145, 381, 394, 500, 527, 531, 735, 975, 988, 1085, 1112, 1116, 1267, 1309, 1317], "occur": [145, 177, 196, 390, 391, 696, 715, 735, 768, 787, 984, 985, 1313, 1318, 1320], "readi": [145, 735], "min_temp": [146, 203, 737, 794], "max_h_iso0": [146, 199, 737, 790], "beamwidth": [146, 153, 163, 199, 203, 236, 302, 339, 376, 476, 517, 533, 737, 746, 756, 790, 794, 828, 894, 931, 968, 1061, 1102, 1118], "construct": [146, 182, 194, 446, 533, 701, 713, 737, 773, 785, 1030, 1118], "beyond": [146, 197, 542, 737, 788, 1250, 1251, 1322], "extent": [146, 517, 737, 1102, 1280], "reach": [146, 737], "mask_fzl": [146, 737], "end_gate_arr": [146, 737], "delev_max": [147, 148, 149, 738, 739, 740], "dazim_max": [147, 148, 149, 738, 739, 740], "elmin": [147, 148, 149, 197, 531, 738, 739, 740, 788, 1116, 1244], "rmin": [147, 197, 469, 488, 531, 738, 788, 1054, 1073, 1116, 1244], "50000": [147, 482, 738, 1067, 1280, 1284, 1304, 1315], "hmin": [147, 738, 1244], "10000": [147, 236, 264, 302, 339, 370, 376, 460, 465, 473, 482, 495, 498, 535, 540, 738, 828, 856, 894, 931, 962, 968, 1045, 1050, 1058, 1067, 1080, 1083, 1120, 1125, 1284, 1304, 1315], "nbins_min": [147, 148, 474, 738, 739, 1059], "attg": [147, 148, 149, 477, 483, 518, 738, 739, 740, 1062, 1068, 1103], "max_std_pwr": [147, 474, 738, 1059], "max_std_zdr": [147, 148, 738, 739], "sun_posit": [147, 148, 149, 738, 739, 740], "pwrh_field": [147, 148, 149, 738, 739, 740], "pwrv_field": [147, 148, 149, 738, 739, 740], "suspect": [147, 148, 149, 197, 738, 739, 740, 788], "sun": [147, 148, 149, 152, 153, 160, 161, 162, 163, 164, 736, 738, 739, 740, 744, 745, 746, 753, 754, 755, 756, 757], "hit": [147, 148, 149, 164, 736, 738, 739, 740, 745, 757, 1323], "detect": [147, 148, 149, 163, 502, 503, 531, 533, 738, 739, 740, 756, 1087, 1088, 1116, 1118, 1237, 1289, 1304, 1313, 1317, 1319], "hildebrand": [147, 455, 469, 474, 488, 738, 1040, 1054, 1059, 1073, 1231], "sekhon": [147, 469, 474, 488, 738, 1054, 1059, 1073, 1231], "higher": [147, 225, 230, 292, 297, 325, 334, 362, 371, 738, 817, 822, 884, 889, 917, 926, 954, 963, 1313, 1315], "ga": [147, 148, 149, 449, 477, 483, 518, 738, 739, 740, 1033, 1062, 1068, 1103], "wai": [147, 148, 149, 449, 473, 477, 483, 502, 517, 518, 534, 738, 739, 740, 1033, 1058, 1062, 1068, 1087, 1102, 1103, 1119, 1278, 1311, 1318, 1323, 1325], "pysolar": [147, 148, 149, 162, 738, 739, 740, 755], "sun_hit": [147, 148, 149, 164, 738, 739, 740, 757], "new_radar": [147, 148, 738, 739, 1312], "npulses_rai": [148, 475, 739, 1060], "ivic": [148, 475, 739, 1060, 1232, 1239, 1248, 1250, 1251], "2003": [148, 739, 1304], "instead": [148, 251, 398, 475, 739, 843, 992, 1060, 1267, 1274, 1275, 1304, 1309, 1315, 1322, 1323, 1325], "7": [148, 160, 163, 200, 388, 475, 539, 739, 753, 756, 791, 982, 1060, 1124, 1232, 1241, 1264, 1266, 1275, 1279, 1284, 1286, 1291, 1298, 1309, 1316, 1317, 1319, 1320, 1322, 1323], "noise_thr": [149, 740], "simpl": [149, 502, 740, 1020, 1087, 1312, 1313], "self_const": [150, 151, 742, 743], "60000": [150, 151, 742, 743, 1280, 1284, 1315], "low_z": [150, 151, 742, 743], "high_z": [150, 151, 742, 743], "min_phidp": [150, 151, 742, 743], "01": [150, 151, 331, 368, 460, 527, 742, 743, 923, 960, 1045, 1112, 1237, 1252, 1271, 1283, 1300, 1321], "min_ncp": [150, 201, 741, 742, 792], "min_rhv": [150, 200, 201, 741, 742, 791, 792], "sys_phas": [150, 742], "overide_sys_phas": [150, 742], "nowrap": [150, 151, 742, 743], "really_verbos": [150, 151, 742, 743], "lp_solver": [150, 151, 742, 743], "cylp": [150, 151, 742, 743, 1309, 1322, 1325], "unf_field": [150, 151, 742, 743], "window_len": [150, 151, 157, 742, 743, 750], "proc": [150, 151, 527, 742, 743, 1112], "coef": [150, 151, 742, 743], "914": [150, 151, 742, 743], "lp": [150, 151, 742, 743, 1309], "consist": [150, 151, 154, 155, 156, 742, 743, 747, 748, 749, 1267, 1315], "low": [150, 151, 152, 153, 160, 163, 390, 527, 742, 743, 744, 746, 753, 756, 984, 1112, 1286, 1318], "high": [150, 151, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 527, 742, 743, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1112, 1305, 1319], "copolar": [150, 151, 501, 503, 524, 531, 742, 743, 1086, 1088, 1109, 1116, 1303], "automat": [150, 394, 399, 400, 446, 451, 517, 531, 536, 742, 988, 993, 994, 1030, 1035, 1102, 1116, 1121, 1289, 1309, 1323], "lpx": [150, 151, 742, 743], "messag": [150, 151, 239, 258, 390, 742, 743, 831, 850, 984, 1275], "suppress": [150, 151, 527, 742, 743, 1112], "pyglpk": [150, 151, 742, 743, 1309, 1322], "cvxopt": [150, 151, 742, 743, 1309, 1322], "cylp_mp": [150, 151, 742, 743], "modul": [150, 151, 742, 743, 1204, 1266, 1274, 1275, 1309, 1312, 1313, 1315, 1316, 1317, 1320, 1322, 1323], "solv": [150, 151, 742, 743], "horizon": [150, 151, 501, 524, 531, 742, 743, 1086, 1109, 1116], "sobel": [150, 151, 742, 743], "worker": [150, 151, 742, 743], "link": [150, 151, 545, 742, 743, 1319], "1z": [150, 151, 742, 743], "reproc_phas": [150, 151, 742, 743], "sob_kdp": [150, 151, 742, 743], "recalcul": [150, 151, 517, 742, 743, 1102, 1311], "giangrand": [150, 151, 531, 742, 743, 1116], "mcgraw": [150, 151, 742, 743], "lei": [150, 151, 742, 743], "applic": [150, 151, 222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 500, 742, 743, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 992, 1085, 1258, 1323], "program": [150, 151, 517, 742, 743, 1102, 1309, 1323], "atmo": [150, 151, 524, 534, 742, 743, 1109, 1119, 1242, 1286, 1323], "tech": [150, 151, 524, 742, 743, 1109, 1242, 1286], "2013": [150, 151, 475, 528, 534, 742, 743, 1060, 1113, 1119, 1232, 1320], "1716": [150, 151, 742, 743], "system_phas": [151, 743], "ncpt": [151, 743], "first_gate_sysp": [151, 743], "carri": [151, 743], "smaller": [151, 370, 517, 743, 962, 1102, 1252, 1304, 1323], "off": [151, 222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 523, 743, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1108, 1283, 1304], "ptoa": [152, 744], "wavelen": [152, 160, 163, 744, 753, 756], "antenna_gain": [152, 163, 477, 744, 756, 1062], "coeff_band": [152, 163, 744, 756], "solar": [152, 160, 163, 744, 753, 756], "flux": [152, 160, 163, 744, 753, 756], "amospher": [152, 744], "wavelength": [152, 160, 163, 517, 744, 753, 756, 1102], "bandwidth": [152, 163, 744, 756], "s0": [152, 160, 744, 753], "10e": [152, 160, 163, 744, 753, 756], "m2": [152, 160, 163, 744, 753, 756], "hz": [152, 160, 163, 449, 476, 477, 518, 519, 744, 753, 756, 1033, 1061, 1062, 1103, 1104, 1292], "altub": [152, 153, 160, 163, 744, 746, 753, 756], "bech": [152, 153, 160, 163, 744, 746, 753, 756], "o": [152, 153, 160, 163, 398, 744, 746, 753, 756, 992, 1137, 1285, 1309, 1322, 1323], "argemi": [152, 153, 160, 163, 744, 746, 753, 756], "t": [152, 153, 160, 163, 398, 473, 500, 503, 527, 528, 531, 533, 534, 540, 744, 746, 753, 756, 992, 1058, 1085, 1088, 1112, 1113, 1116, 1118, 1119, 1125, 1278, 1304, 1309, 1311, 1319], "rigo": [152, 153, 160, 163, 744, 746, 753, 756], "2015": [152, 153, 160, 163, 505, 534, 744, 746, 753, 756, 1090, 1119], "align": [152, 153, 160, 163, 744, 746, 753, 756], "midrang": [152, 153, 160, 163, 744, 746, 753, 756], "angle_step": [153, 163, 746, 756], "fact": [153, 527, 529, 746, 1112, 1114], "la": [153, 746], "zdr_kdpzh_dict": [154, 155, 156, 747, 748, 749], "min_rhohv": [154, 155, 156, 747, 748, 749], "92": [154, 155, 156, 264, 747, 748, 749, 856, 1292, 1302], "filter_rain": [154, 155, 156, 747, 748, 749], "max_phidp": [154, 155, 156, 747, 748, 749], "smooth_wind_len": [154, 155, 156, 747, 748, 749], "dphidp_min": [154, 747], "dphidp_max": [154, 747], "parametr": [154, 155, 156, 747, 748, 749], "check_wet_radom": [154, 155, 747, 748], "wet_radome_refl": [154, 155, 747, 748], "wet_radome_len_min": [154, 155, 747, 748], "wet_radome_len_max": [154, 155, 747, 748], "wet_radome_ngates_min": [154, 155, 747, 748], "valid_gates_onli": [154, 747], "keep_point": [154, 155, 747, 748], "kdp_wind_len": [154, 747], "12": [154, 747, 1269, 1274, 1275, 1280, 1281, 1285, 1292, 1302, 1312, 1316, 1318, 1320, 1321], "tabl": [154, 155, 156, 398, 747, 748, 749, 992, 1248, 1250, 1251, 1317], "zh": [154, 155, 156, 556, 557, 747, 748, 749, 1317, 1319], "curv": [154, 155, 156, 747, 748, 749, 1304], "wolfensberg": [154, 155, 156, 503, 747, 748, 749, 1088, 1305, 1306], "louf": [154, 155, 156, 747, 748, 749], "gorgucci": [154, 155, 156, 747, 748, 749], "vaccarono": [154, 155, 156, 747, 748, 749], "kdpsim_field": [154, 155, 156, 747, 748, 749], "phidpsim_field": [154, 155, 156, 747, 748, 749], "closest": [154, 155, 383, 465, 473, 482, 495, 498, 747, 748, 977, 1020, 1050, 1058, 1067, 1080, 1083], "radom": [154, 155, 477, 483, 747, 748, 1062, 1068], "close": [154, 155, 380, 515, 527, 747, 748, 974, 1100, 1112, 1319], "wet": [154, 155, 747, 748, 1305, 1319], "mim": [154, 155, 747, 748], "disk": [154, 155, 747, 748], "around": [154, 155, 445, 496, 500, 503, 747, 748, 1029, 1081, 1085, 1088, 1216, 1241, 1279, 1294, 1297, 1304, 1311, 1313, 1318, 1319], "decid": [154, 155, 533, 747, 748, 1118], "That": [154, 747], "total": [154, 517, 527, 528, 529, 747, 1102, 1112, 1113, 1114, 1269, 1270, 1271, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1321], "further": [154, 155, 747, 748, 1236], "analysi": [154, 155, 444, 747, 748, 1028, 1236], "least": [154, 500, 525, 526, 747, 1085, 1110, 1111, 1304], "refl_bias_dict": [154, 155, 747, 748], "selfconsistency_dict": [154, 155, 747, 748], "keep_poinst": [154, 155, 747, 748], "measur": [154, 155, 160, 163, 450, 500, 505, 514, 515, 524, 527, 528, 529, 747, 748, 753, 756, 1031, 1034, 1085, 1090, 1099, 1100, 1109, 1112, 1113, 1114, 1304, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1323], "min_zdr": [155, 748], "bias_per_g": [155, 748], "kdp_data_dict": [155, 748], "selfconsist": [156, 749], "privat": [156, 401, 749, 1323], "kdp_sim_dict": [156, 749], "phidp_sim_dict": [156, 749], "raw_data": [157, 750], "wind_len": [157, 159, 526, 750, 752, 1111], "min_valid": [157, 159, 526, 750, 752, 1111], "wind_typ": [157, 750], "median": [157, 460, 465, 473, 482, 495, 504, 750, 1045, 1050, 1058, 1067, 1080, 1089, 1219, 1221, 1232], "less": [157, 446, 500, 529, 750, 1030, 1085, 1114, 1242, 1304, 1318, 1319], "move": [157, 158, 159, 165, 166, 168, 200, 471, 487, 490, 491, 517, 525, 526, 750, 751, 752, 791, 1056, 1072, 1075, 1076, 1102, 1110, 1111, 1231, 1278, 1318, 1323], "data_smooth": [157, 750], "swind_len": [158, 525, 751, 1110], "smin_valid": [158, 525, 751, 1110], "lwind_len": [158, 525, 751, 1110], "lmin_valid": [158, 525, 751, 1110], "zthr": [158, 525, 751, 1110], "short": [158, 525, 751, 1110, 1323], "solar_flux": [160, 163, 753, 756], "cm": [160, 163, 497, 753, 756, 1082, 1295, 1317], "dt": [161, 162, 754, 755, 1270], "lat_deg": [161, 754], "lon_deg": [161, 754], "refract": [161, 517, 754, 1102], "boolean": [161, 164, 169, 175, 189, 500, 515, 545, 556, 557, 573, 574, 688, 694, 708, 736, 754, 757, 760, 766, 780, 971, 1085, 1100, 1316], "elev_sun": [161, 754], "azim_sun": [161, 754], "sensor": [161, 162, 754, 755], "el": [162, 515, 755, 1100, 1217, 1218, 1318], "az": [162, 398, 755, 992, 1292, 1293], "would": [163, 756, 1036, 1232, 1274, 1275, 1313, 1315, 1323], "without": [163, 233, 300, 337, 374, 458, 474, 756, 825, 892, 929, 966, 1043, 1059, 1199, 1211, 1254, 1322], "characterist": [163, 756, 1315], "pwr_det": [163, 756], "az_rad": [164, 757], "az_sun": [164, 757], "el_rad": [164, 757], "el_sun": [164, 757], "sun_hit_std": [164, 757], "az_width_co": [164, 757], "el_width_co": [164, 757], "az_width_cross": [164, 757], "el_width_cross": [164, 757], "is_zdr": [164, 757], "val": [164, 745, 757], "val_std": [164, 745, 757], "az_bia": [164, 745, 757], "el_bia": [164, 745, 757], "az_width": [164, 745, 757], "el_width": [164, 745, 757], "nhit": [164, 757], "par": [164, 736, 745, 757], "gaussian": [164, 471, 487, 490, 491, 535, 736, 745, 757, 1056, 1072, 1075, 1076, 1120, 1203, 1294], "fit": [164, 736, 745, 757], "warn": [165, 166, 168, 394, 397, 988, 991, 1250, 1267, 1269, 1274, 1275, 1278, 1315, 1317, 1318, 1319], "categori": [165, 166, 1319], "old_nam": 168, "new_nam": 168, "alia": [168, 1209, 1210, 1317], "namespac": [168, 590], "wrapper": [168, 1309, 1317], "deprecatedfunctionnam": 168, "exclude_bas": [169, 688, 760], "exclude_below": [169, 688, 760, 1278, 1303, 1316, 1319], "suggest": [169, 688, 760], "gate_exclud": [169, 688, 760, 1316], "gate_includ": [169, 688, 760, 1316], "lost": [169, 529, 688, 760, 1114, 1265, 1315], "again": [169, 688, 760, 1267, 1275, 1285, 1317, 1322], "import": [169, 534, 539, 540, 688, 760, 1119, 1124, 1125, 1137, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1322], "io": [169, 444, 542, 688, 760, 1028, 1269, 1270, 1274, 1275, 1276, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325], "radar_fil": [169, 574, 688, 760, 1270, 1283, 1285], "nc": [169, 688, 760, 1269, 1278, 1280, 1283, 1284, 1285, 1289, 1291, 1292, 1293, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1316, 1317, 1319], "normalized_coherent_pow": [169, 688, 760, 1316], "exclude_mask": [171, 173, 174, 175, 176, 177, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 690, 692, 693, 694, 695, 696, 699, 700, 701, 704, 706, 707, 708, 709, 711, 712, 713, 714, 715, 762, 764, 765, 766, 767, 768, 771, 772, 773, 776, 778, 779, 780, 781, 783, 784, 785, 786, 787, 1279], "op": [171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 690, 692, 693, 694, 695, 696, 697, 699, 700, 701, 704, 706, 707, 708, 709, 711, 712, 713, 714, 715, 762, 764, 765, 766, 767, 768, 769, 771, 772, 773, 776, 778, 779, 780, 781, 783, 784, 785, 786, 787], "inclus": [171, 173, 176, 181, 185, 187, 190, 195, 444, 446, 690, 692, 695, 700, 704, 706, 709, 714, 762, 764, 767, 772, 776, 778, 781, 786, 1028, 1030, 1199, 1283], "exclus": [173, 692, 764], "AND": [173, 175, 182, 189, 194, 692, 694, 701, 708, 713, 764, 766, 773, 780, 785], "OR": [173, 175, 182, 189, 194, 692, 694, 701, 708, 713, 764, 766, 773, 780, 785], "gener": [173, 175, 182, 189, 194, 206, 207, 208, 209, 210, 211, 222, 224, 229, 232, 233, 234, 235, 236, 243, 244, 245, 246, 249, 251, 252, 253, 255, 257, 259, 260, 261, 262, 267, 269, 271, 273, 274, 275, 276, 277, 278, 289, 291, 296, 299, 300, 301, 302, 306, 307, 308, 309, 310, 311, 322, 324, 332, 333, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 359, 361, 369, 370, 373, 374, 375, 376, 397, 400, 445, 446, 516, 517, 527, 535, 537, 692, 694, 701, 708, 713, 764, 766, 773, 780, 785, 798, 799, 800, 801, 802, 803, 814, 816, 821, 824, 825, 826, 827, 828, 835, 836, 837, 838, 841, 843, 844, 845, 847, 849, 851, 852, 853, 854, 859, 861, 863, 865, 866, 867, 868, 869, 870, 881, 883, 888, 891, 892, 893, 894, 898, 899, 900, 901, 902, 903, 914, 916, 924, 925, 928, 929, 930, 931, 935, 936, 937, 938, 939, 940, 951, 953, 961, 962, 965, 966, 967, 968, 991, 994, 1009, 1020, 1029, 1030, 1031, 1101, 1102, 1112, 1120, 1122, 1269, 1270, 1272, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309], "here": [173, 175, 182, 189, 194, 264, 692, 694, 701, 708, 713, 764, 766, 773, 780, 785, 856, 1278, 1304, 1309, 1311, 1316, 1317, 1318, 1319, 1322, 1325], "previous": [173, 175, 182, 189, 194, 692, 694, 701, 708, 713, 764, 766, 773, 780, 785, 1274, 1304, 1319], "becaus": [173, 175, 182, 527, 692, 694, 701, 764, 766, 773, 1112, 1304, 1318, 1319, 1325], "invalid": [173, 175, 177, 182, 197, 199, 200, 201, 202, 203, 204, 692, 694, 696, 701, 736, 741, 764, 766, 768, 773, 788, 790, 791, 792, 793, 794, 795], "v1": [176, 181, 190, 195, 695, 700, 709, 714, 767, 772, 781, 786, 1322], "v2": [176, 181, 190, 195, 695, 700, 709, 714, 767, 772, 781, 786, 1323], "insid": [176, 190, 532, 695, 709, 767, 781, 1117, 1312], "inf": [177, 196, 197, 201, 696, 715, 741, 768, 787, 788, 792], "outsid": [181, 195, 197, 201, 229, 232, 234, 235, 249, 251, 252, 253, 255, 257, 267, 269, 271, 296, 299, 301, 332, 333, 336, 338, 369, 370, 373, 375, 482, 483, 700, 714, 741, 772, 786, 788, 792, 821, 824, 826, 827, 841, 843, 844, 845, 847, 849, 859, 861, 863, 888, 891, 893, 924, 925, 928, 930, 961, 962, 965, 967, 1067, 1068, 1323], "trans_valu": [182, 194, 701, 713, 773, 785], "max_zdr": [197, 788], "max_rhv": [197, 788], "min_refl": [197, 201, 741, 788, 792], "max_refl": [197, 201, 741, 788, 792], "vel_lim": [197, 788], "2000": [197, 540, 788, 1125, 1279, 1315], "25000": [197, 450, 788, 1034, 1315], "85": [197, 200, 788, 791, 1306, 1318], "bird": [197, 457, 788, 1042], "criteria": [197, 198, 199, 200, 201, 202, 203, 204, 446, 527, 536, 741, 788, 789, 790, 791, 792, 793, 794, 795, 1030, 1112, 1121, 1244], "built": [197, 198, 199, 200, 201, 202, 203, 204, 445, 446, 741, 788, 789, 790, 791, 792, 793, 794, 795, 1029, 1030], "highest": [197, 200, 252, 788, 791, 844], "lowest": [197, 199, 200, 201, 202, 203, 204, 530, 741, 788, 790, 791, 792, 793, 794, 795, 1036, 1115, 1274, 1278, 1302, 1304], "greatest": [197, 201, 741, 788, 792], "400": [199, 203, 790, 794, 1311], "primarili": [199, 203, 790, 794], "phi_field": [200, 791], "textzdr_field": [200, 791], "textrhv_field": [200, 791], "textphi_field": [200, 791], "textrefl_field": [200, 791], "wind_siz": [200, 451, 791, 1035, 1264, 1313], "max_textphi": [200, 791], "max_textrhv": [200, 791], "max_textzdr": [200, 791], "max_textrefl": [200, 791], "cross": [200, 201, 216, 218, 222, 225, 236, 248, 249, 283, 285, 289, 292, 302, 316, 318, 322, 325, 339, 353, 355, 359, 362, 376, 457, 476, 477, 517, 741, 791, 792, 808, 810, 814, 817, 828, 840, 841, 875, 877, 881, 884, 894, 908, 910, 914, 917, 931, 945, 947, 951, 954, 968, 1042, 1061, 1062, 1102, 1224, 1225, 1267, 1272, 1282, 1291, 1300, 1304, 1318, 1320, 1321], "min_rhi": [201, 741, 792], "min_snr": [202, 793], "max_snr": [202, 793], "min_vi": [204, 795], "displai": [205, 222, 224, 229, 233, 234, 235, 236, 238, 272, 289, 291, 296, 300, 301, 302, 304, 305, 322, 324, 332, 333, 337, 338, 339, 341, 342, 359, 361, 369, 370, 374, 375, 376, 378, 398, 517, 539, 540, 797, 814, 816, 821, 825, 826, 827, 828, 830, 864, 881, 883, 888, 892, 893, 894, 896, 897, 914, 916, 924, 925, 929, 930, 931, 933, 934, 951, 953, 961, 962, 966, 967, 968, 970, 992, 1036, 1102, 1124, 1125, 1267, 1269, 1270, 1274, 1275, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1313, 1315, 1316, 1319, 1323], "airborn": [205, 797], "plot_var": [205, 272, 305, 342, 797, 864, 897, 934], "order": [205, 272, 305, 342, 394, 399, 400, 500, 524, 527, 531, 533, 797, 864, 897, 934, 971, 988, 993, 994, 1020, 1085, 1109, 1112, 1116, 1118, 1216, 1269, 1304, 1309, 1319, 1323], "cb": [205, 272, 305, 342, 797, 864, 897, 934, 1285], "colorbar": [205, 222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 258, 265, 267, 269, 271, 272, 289, 290, 291, 296, 299, 300, 301, 302, 305, 322, 323, 324, 332, 333, 336, 337, 338, 339, 342, 359, 360, 361, 369, 370, 373, 374, 375, 376, 797, 814, 815, 816, 821, 824, 825, 826, 827, 828, 839, 841, 843, 844, 845, 847, 849, 850, 857, 859, 861, 863, 864, 881, 882, 883, 888, 891, 892, 893, 894, 897, 914, 915, 916, 924, 925, 928, 929, 930, 931, 934, 951, 952, 953, 961, 962, 965, 966, 967, 968, 1272, 1278, 1282, 1283, 1299, 1300, 1317, 1321], "loc": [205, 272, 305, 342, 797, 864, 897, 934, 1284], "titl": [206, 208, 209, 210, 211, 222, 224, 229, 232, 233, 234, 235, 236, 244, 245, 246, 249, 251, 252, 253, 255, 257, 260, 261, 262, 267, 269, 271, 273, 275, 276, 277, 278, 289, 291, 296, 299, 300, 301, 302, 306, 308, 309, 310, 311, 322, 324, 332, 333, 336, 337, 338, 339, 343, 345, 346, 347, 348, 359, 361, 369, 370, 373, 374, 375, 376, 798, 800, 801, 802, 803, 814, 816, 821, 824, 825, 826, 827, 828, 836, 837, 838, 841, 843, 844, 845, 847, 849, 852, 853, 854, 859, 861, 863, 865, 867, 868, 869, 870, 881, 883, 888, 891, 892, 893, 894, 898, 900, 901, 902, 903, 914, 916, 924, 925, 928, 929, 930, 931, 935, 937, 938, 939, 940, 951, 953, 961, 962, 965, 966, 967, 968, 1269, 1270, 1278, 1285, 1287, 1288, 1290, 1292, 1293, 1297, 1317, 1318, 1319, 1320], "ext": [207, 243, 259, 274, 307, 344, 799, 835, 851, 866, 899, 936], "datetime_format": [207, 209, 274, 276, 307, 309, 344, 346, 799, 801, 866, 868, 899, 901, 936, 938], "use_sweep_tim": [207, 209, 274, 276, 307, 309, 344, 346, 799, 801, 866, 868, 899, 901, 936, 938], "form": [207, 224, 243, 259, 274, 291, 307, 324, 344, 361, 799, 816, 835, 851, 866, 883, 899, 916, 936, 953], "radar_name_field_sweep_tim": [207, 274, 307, 344, 799, 866, 899, 936], "extens": [207, 243, 259, 274, 307, 344, 398, 799, 835, 851, 866, 899, 936, 992, 1322], "strftime": [207, 209, 229, 233, 274, 276, 296, 300, 307, 309, 332, 337, 344, 346, 369, 374, 799, 801, 821, 825, 866, 868, 888, 892, 899, 901, 924, 929, 936, 938, 961, 966], "vpt": [210, 221, 235, 277, 288, 301, 310, 321, 338, 347, 358, 375, 802, 813, 827, 869, 880, 893, 902, 913, 930, 939, 950, 967, 1247], "ndarrai": [211, 236, 278, 302, 311, 339, 348, 376, 524, 577, 803, 828, 870, 894, 903, 931, 940, 968, 1109, 1221, 1241, 1320], "xaxi": [212, 215, 216, 279, 282, 283, 312, 315, 316, 349, 352, 353, 804, 807, 808, 871, 874, 875, 904, 907, 908, 941, 944, 945, 1285], "static": [213, 214, 225, 226, 230, 237, 238, 280, 281, 292, 293, 297, 303, 304, 313, 314, 325, 326, 340, 341, 350, 351, 362, 363, 377, 378, 805, 806, 817, 818, 822, 829, 830, 872, 873, 884, 885, 889, 895, 896, 905, 906, 917, 918, 932, 933, 942, 943, 954, 955, 969, 970, 1309], "yaxi": [213, 214, 217, 218, 219, 220, 280, 281, 284, 285, 286, 287, 313, 314, 317, 318, 319, 320, 350, 351, 354, 355, 356, 357, 805, 806, 809, 810, 811, 812, 872, 873, 876, 877, 878, 879, 905, 906, 909, 910, 911, 912, 942, 943, 946, 947, 948, 949], "custom": [221, 222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 288, 289, 290, 291, 296, 300, 301, 302, 321, 322, 323, 324, 332, 333, 337, 338, 339, 358, 359, 360, 361, 369, 370, 374, 375, 376, 428, 445, 758, 813, 814, 815, 816, 821, 825, 826, 827, 828, 839, 841, 843, 845, 847, 849, 857, 859, 861, 863, 880, 881, 882, 883, 888, 892, 893, 894, 913, 914, 915, 916, 924, 925, 929, 930, 931, 950, 951, 952, 953, 961, 962, 966, 967, 968, 1029, 1315], "plot_ppi": [221, 288, 321, 358, 813, 880, 913, 950, 1270, 1305, 1311, 1318, 1319], "plot_sweep_grid": [221, 813], "target_azimuth": [222, 289, 322, 359, 814, 881, 914, 951, 1224], "mask_tupl": [222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 814, 821, 824, 825, 826, 827, 828, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968], "norm": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 527, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1112, 1285, 1305, 1317, 1319], "cmap": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 992, 1278, 1283, 1284, 1285, 1286, 1290, 1293, 1295, 1297, 1298, 1303, 1304, 1312, 1313, 1317], "mask_outsid": [222, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 814, 821, 824, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968, 1292, 1293, 1319], "title_flag": [222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 333, 336, 337, 338, 339, 359, 361, 369, 370, 373, 374, 375, 376, 814, 816, 821, 824, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 925, 928, 929, 930, 931, 951, 953, 961, 962, 965, 966, 967, 968, 1297], "axislabel": [222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 336, 337, 338, 339, 359, 361, 369, 373, 374, 375, 376, 814, 816, 821, 824, 825, 826, 827, 828, 841, 843, 847, 849, 859, 861, 863, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 928, 929, 930, 931, 951, 953, 961, 965, 966, 967, 968, 1287, 1292, 1293], "axislabels_flag": [222, 224, 229, 232, 233, 234, 235, 236, 249, 251, 255, 257, 267, 269, 271, 289, 291, 296, 299, 300, 301, 302, 322, 324, 332, 336, 337, 338, 339, 359, 361, 369, 373, 374, 375, 376, 814, 816, 821, 824, 825, 826, 827, 828, 841, 843, 847, 849, 859, 861, 863, 881, 883, 888, 891, 892, 893, 894, 914, 916, 924, 928, 929, 930, 931, 951, 953, 961, 965, 966, 967, 968, 1304], "colorbar_flag": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968], "colorbar_label": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1269, 1270, 1274, 1287, 1288, 1292, 1293, 1294, 1295, 1299, 1318, 1319], "colorbar_ori": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 337, 338, 339, 359, 361, 369, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 929, 930, 931, 951, 953, 961, 966, 967, 968], "reverse_xaxi": [222, 233, 289, 300, 322, 337, 359, 374, 814, 825, 881, 892, 914, 929, 951, 966], "fig": [222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 299, 300, 301, 302, 322, 323, 324, 332, 333, 336, 337, 338, 339, 359, 360, 361, 369, 370, 373, 374, 375, 376, 814, 815, 816, 821, 824, 825, 826, 827, 828, 839, 841, 843, 844, 845, 847, 849, 857, 859, 861, 863, 881, 882, 883, 888, 891, 892, 893, 894, 914, 915, 916, 924, 925, 928, 929, 930, 931, 951, 952, 953, 961, 962, 965, 966, 967, 968, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1303, 1305, 1306, 1313, 1315, 1316, 1318, 1319], "tick": [222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 333, 337, 338, 339, 359, 360, 361, 369, 370, 374, 375, 376, 814, 815, 816, 821, 825, 826, 827, 828, 839, 841, 843, 845, 847, 849, 857, 859, 861, 863, 881, 882, 883, 888, 892, 893, 894, 914, 915, 916, 924, 925, 929, 930, 931, 951, 952, 953, 961, 962, 966, 967, 968, 1283, 1285, 1304, 1305, 1317, 1319], "ticklab": [222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 333, 337, 338, 339, 359, 360, 361, 369, 370, 374, 375, 376, 814, 815, 816, 821, 825, 826, 827, 828, 839, 841, 843, 845, 847, 849, 857, 859, 861, 863, 881, 882, 883, 888, 892, 893, 894, 914, 915, 916, 924, 925, 929, 930, 931, 951, 952, 953, 961, 962, 966, 967, 968, 1304, 1305, 1319], "raster": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 398, 517, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 992, 1102, 1267], "pseudo": [222, 289, 322, 359, 531, 814, 881, 914, 951, 1116, 1318], "associ": [222, 289, 322, 359, 814, 881, 914, 951, 1009], "matplotlib": [222, 224, 227, 228, 229, 233, 234, 235, 236, 249, 250, 251, 253, 255, 257, 266, 267, 269, 271, 289, 291, 294, 295, 296, 300, 301, 302, 322, 324, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 398, 814, 816, 819, 820, 821, 825, 826, 827, 828, 841, 842, 843, 845, 847, 849, 858, 859, 861, 863, 881, 883, 886, 887, 888, 892, 893, 894, 914, 916, 919, 920, 921, 922, 923, 924, 925, 926, 929, 930, 931, 951, 953, 956, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 992, 1267, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1322, 1325], "pcolormesh": [222, 224, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1278, 1294, 1304, 1317, 1318], "ncp": [222, 229, 232, 233, 234, 235, 236, 289, 296, 299, 300, 301, 302, 322, 332, 333, 336, 337, 338, 339, 359, 369, 370, 373, 374, 375, 376, 814, 821, 824, 825, 826, 827, 828, 881, 888, 891, 892, 893, 894, 914, 924, 925, 928, 929, 930, 931, 951, 961, 962, 965, 966, 967, 968], "lumin": [222, 224, 229, 233, 234, 235, 236, 249, 251, 252, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 841, 843, 844, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968], "west": [222, 233, 289, 300, 322, 337, 359, 374, 814, 825, 881, 892, 914, 929, 951, 966, 1031, 1287, 1318, 1319], "leav": [222, 224, 229, 233, 234, 235, 236, 249, 251, 253, 255, 257, 267, 269, 271, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 841, 843, 845, 847, 849, 859, 861, 863, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968], "orient": [222, 223, 224, 229, 233, 234, 235, 236, 247, 249, 251, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 300, 301, 302, 322, 323, 324, 332, 337, 338, 339, 359, 360, 361, 369, 374, 375, 376, 814, 815, 816, 821, 825, 826, 827, 828, 839, 841, 843, 845, 847, 849, 857, 859, 861, 863, 881, 882, 883, 888, 892, 893, 894, 914, 915, 916, 924, 929, 930, 931, 951, 952, 953, 961, 966, 967, 968, 1305, 1306, 1318, 1319], "treat": [222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 814, 821, 825, 826, 827, 841, 847, 849, 859, 861, 863, 881, 888, 892, 893, 914, 924, 925, 929, 930, 951, 961, 962, 966, 967], "themselv": [222, 229, 233, 234, 235, 249, 255, 257, 267, 269, 271, 289, 296, 300, 301, 322, 332, 333, 337, 338, 359, 369, 370, 374, 375, 814, 821, 825, 826, 827, 841, 847, 849, 859, 861, 863, 881, 888, 892, 893, 914, 924, 925, 929, 930, 951, 961, 962, 966, 967], "figur": [222, 223, 224, 229, 232, 233, 234, 235, 236, 247, 249, 251, 252, 253, 255, 257, 265, 267, 269, 271, 289, 290, 291, 296, 299, 300, 301, 302, 322, 323, 324, 332, 333, 336, 337, 338, 339, 359, 360, 361, 369, 370, 373, 374, 375, 376, 814, 815, 816, 821, 824, 825, 826, 827, 828, 839, 841, 843, 844, 845, 847, 849, 857, 859, 861, 863, 881, 882, 883, 888, 891, 892, 893, 894, 914, 915, 916, 924, 925, 928, 929, 930, 931, 951, 952, 953, 961, 962, 965, 966, 967, 968, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1303, 1304, 1312, 1313, 1315, 1316, 1317, 1318, 1319], "render": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968], "rather": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968], "larg": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 527, 536, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1112, 1121, 1319], "Be": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968], "sure": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1278, 1285, 1304, 1322, 1323, 1325], "dpi": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968], "your": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 542, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968, 1272, 1282, 1284, 1300, 1304, 1309, 1317, 1319, 1321, 1322, 1323, 1325], "ep": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968], "svg": [222, 224, 229, 233, 234, 235, 236, 289, 291, 296, 300, 301, 302, 322, 324, 332, 333, 337, 338, 339, 359, 361, 369, 370, 374, 375, 376, 814, 816, 821, 825, 826, 827, 828, 881, 883, 888, 892, 893, 894, 914, 916, 924, 925, 929, 930, 931, 951, 953, 961, 962, 966, 967, 968], "mappabl": [223, 247, 258, 265, 290, 323, 360, 815, 839, 850, 857, 882, 915, 952], "cax": [223, 247, 265, 290, 323, 360, 815, 839, 857, 882, 915, 952, 1305, 1319], "imag": [223, 247, 252, 265, 290, 323, 360, 523, 815, 839, 844, 857, 882, 915, 952, 1108, 1216, 1242, 1272, 1282, 1300, 1302, 1304, 1321], "contourset": [223, 247, 258, 265, 290, 323, 360, 815, 839, 850, 857, 882, 915, 952], "etc": [223, 247, 251, 252, 258, 265, 290, 323, 333, 360, 370, 397, 465, 473, 482, 495, 498, 815, 839, 843, 844, 850, 857, 882, 915, 925, 952, 962, 991, 1050, 1058, 1067, 1080, 1083, 1317], "onto": [223, 247, 265, 267, 290, 323, 333, 360, 370, 444, 446, 530, 815, 839, 857, 859, 882, 915, 925, 952, 962, 1020, 1028, 1030, 1115], "drawn": [223, 247, 265, 290, 323, 360, 815, 839, 857, 882, 915, 952], "target_rang": [224, 291, 324, 361, 816, 883, 916, 953], "delta_x": [224, 291, 324, 361, 816, 883, 916, 953], "delta_i": [224, 291, 324, 361, 816, 883, 916, 953], "az_limit": [224, 291, 324, 361, 816, 883, 916, 953], "el_limit": [224, 291, 324, 361, 816, 883, 916, 953], "reflector": [224, 291, 324, 361, 816, 883, 916, 953], "griddata": [224, 291, 324, 361, 816, 883, 916, 953], "npt": [225, 230, 292, 297, 325, 334, 362, 371, 817, 822, 884, 889, 917, 926, 954, 963], "hair": [225, 292, 325, 362, 817, 884, 917, 954, 1291], "col": [226, 230, 231, 293, 297, 298, 326, 335, 363, 372, 818, 822, 823, 885, 889, 890, 918, 927, 955, 964], "line": [226, 232, 250, 251, 252, 264, 266, 293, 299, 326, 329, 330, 333, 334, 336, 363, 366, 367, 370, 371, 373, 398, 527, 818, 824, 842, 843, 844, 856, 858, 885, 891, 918, 921, 922, 925, 926, 928, 955, 958, 959, 962, 963, 965, 992, 1112, 1272, 1282, 1284, 1300, 1302, 1321, 1322, 1323, 1325], "color": [226, 227, 228, 230, 231, 250, 252, 293, 294, 295, 297, 298, 326, 327, 328, 333, 335, 363, 364, 365, 372, 398, 818, 819, 820, 822, 823, 842, 844, 885, 886, 887, 889, 890, 918, 919, 920, 925, 927, 955, 956, 957, 964, 992, 1284, 1285, 1286, 1294, 1295, 1302, 1304, 1305, 1317, 1319], "linestyl": [226, 230, 231, 250, 293, 297, 298, 326, 335, 363, 372, 818, 822, 823, 842, 885, 889, 890, 918, 927, 955, 964, 1284, 1285, 1295], "symbol": [227, 228, 294, 295, 327, 328, 331, 364, 365, 368, 819, 820, 886, 887, 919, 920, 923, 956, 957, 960], "text_color": [227, 228, 294, 295, 327, 328, 364, 365, 819, 820, 886, 887, 919, 920, 956, 957], "text": [227, 228, 294, 295, 327, 328, 331, 364, 365, 368, 819, 820, 886, 887, 919, 920, 923, 956, 957, 960, 1137, 1283, 1292, 1306, 1313, 1317, 1318], "just": [227, 228, 294, 295, 327, 328, 364, 365, 388, 819, 820, 886, 887, 919, 920, 956, 957, 982, 1283, 1286, 1311, 1320, 1323, 1325], "marker": [227, 228, 232, 250, 266, 294, 295, 299, 327, 328, 336, 364, 365, 373, 819, 820, 824, 842, 858, 886, 887, 891, 919, 920, 928, 956, 957, 965], "title_datetime_format": [229, 233, 296, 300, 332, 337, 369, 374, 821, 825, 888, 892, 924, 929, 961, 966], "title_use_sweep_tim": [229, 233, 296, 300, 332, 337, 369, 374, 821, 825, 888, 892, 924, 929, 961, 966], "range_ring_location_km": [230, 297, 334, 371, 822, 889, 926, 963], "lw": [230, 231, 297, 298, 335, 372, 822, 823, 889, 890, 927, 964], "ring": [230, 231, 297, 298, 334, 335, 371, 372, 822, 823, 889, 890, 926, 927, 963, 964, 1279, 1291], "range_r": [231, 298, 335, 372, 823, 890, 927, 964], "seri": [231, 298, 335, 372, 496, 823, 890, 927, 964, 1081], "draw": [231, 251, 252, 264, 298, 333, 335, 370, 372, 823, 843, 844, 856, 890, 925, 927, 962, 964], "format_str": [232, 299, 336, 373, 824, 891, 928, 965], "ray_min": [232, 299, 336, 373, 824, 891, 928, 965], "ray_max": [232, 299, 336, 373, 824, 891, 928, 965], "style": [232, 250, 266, 299, 329, 330, 334, 336, 366, 367, 371, 373, 398, 824, 842, 858, 891, 921, 922, 926, 928, 958, 959, 963, 965, 992], "consider": [233, 300, 337, 374, 527, 825, 892, 929, 966, 1112, 1304], "ignoretilt": [234, 826], "run": [234, 500, 541, 826, 1085, 1126, 1267, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1322, 1323, 1325], "antenna_to_cartesian_track_rel": [234, 826], "slant": [234, 495, 826, 1080], "ncar": [234, 826], "soloii": [234, 826], "softwar": [234, 391, 398, 590, 826, 985, 992, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1322, 1323], "time_axis_flag": [235, 301, 338, 375, 827, 893, 930, 967], "date_time_form": [235, 301, 338, 375, 827, 893, 930, 967], "tz": [235, 301, 338, 375, 827, 893, 930, 967], "zone": [235, 301, 338, 375, 827, 893, 930, 967], "info": [235, 301, 333, 338, 370, 375, 517, 827, 893, 925, 930, 962, 967, 1102, 1267, 1305, 1320], "ref_point": [236, 302, 339, 376, 828, 894, 931, 968], "1000": [236, 302, 339, 376, 531, 828, 894, 931, 968, 1116, 1218, 1280, 1288, 1294, 1295, 1315, 1323], "vert_r": [236, 302, 339, 376, 828, 894, 931, 968], "alt_max": [236, 302, 339, 376, 828, 894, 931, 968], "dem_field": [236, 302, 339, 376, 828, 894, 931, 968], "terrain_altitud": [236, 302, 339, 376, 828, 894, 931, 968], "arbitrari": [236, 302, 339, 376, 527, 828, 894, 931, 968, 1112, 1267, 1318], "trajectori": [236, 302, 339, 376, 828, 894, 931, 968], "45": [236, 302, 339, 376, 514, 828, 894, 931, 968, 1099, 1286, 1295, 1304, 1319, 1323], "47": [236, 302, 339, 376, 531, 828, 894, 931, 968, 1116, 1306, 1318], "3db": [236, 302, 339, 376, 517, 828, 894, 931, 968, 1102], "ist": [236, 302, 339, 376, 828, 894, 931, 968], "aspect_ratio": [237, 303, 340, 377, 829, 895, 932, 969], "aspect": [237, 303, 340, 377, 517, 829, 895, 932, 969, 1102, 1283], "xlim": [238, 304, 341, 378, 830, 896, 933, 970, 1288, 1290, 1294, 1295, 1315], "ylim": [238, 304, 341, 378, 830, 896, 933, 970, 1288, 1290, 1292, 1293, 1294, 1295, 1297, 1299], "cartopi": [239, 240, 241, 242, 251, 252, 253, 305, 333, 831, 832, 833, 834, 843, 844, 845, 897, 925, 1272, 1274, 1275, 1278, 1282, 1284, 1285, 1298, 1300, 1302, 1304, 1309, 1312, 1313, 1315, 1316, 1318, 1319, 1321, 1322, 1323, 1325], "coastlin": [240, 251, 252, 333, 370, 832, 843, 844, 925, 962], "polit": [241, 833], "state": [242, 528, 834, 1113], "grid_name_field_level_tim": [243, 259, 835, 851], "latitudin": [245, 255, 269, 837, 847, 861], "plot_longitudinal_level": [248, 256, 270, 840, 848, 862], "tuppl": [248, 460, 466, 485, 840, 1045, 1051, 1070], "ind_1": [249, 841], "ind_2": [249, 841], "basemap": [249, 255, 257, 258, 263, 264, 267, 269, 271, 342, 366, 367, 368, 370, 371, 841, 847, 849, 850, 855, 856, 859, 861, 863, 934, 958, 959, 960, 962, 963, 1309, 1322], "upper": [249, 251, 252, 253, 255, 257, 267, 269, 271, 448, 841, 843, 844, 845, 847, 849, 859, 861, 863, 1218, 1284], "colormesh": [249, 251, 252, 253, 255, 257, 267, 269, 271, 841, 843, 844, 845, 847, 849, 859, 861, 863], "64": [249, 251, 252, 253, 255, 257, 267, 269, 271, 841, 843, 844, 845, 847, 849, 859, 861, 863, 1283, 1288, 1289, 1290, 1294, 1296, 1298, 1299, 1302, 1316, 1322], "linewidth": [250, 252, 266, 842, 844, 858, 1285, 1294, 1295], "crosshair": [250, 266, 842, 858], "lat_lin": [251, 252, 264, 333, 370, 843, 844, 856, 925, 962, 1278, 1291, 1302, 1319], "lon_lin": [251, 252, 264, 333, 370, 843, 844, 856, 925, 962, 1278, 1291, 1302, 1319], "embellish": [251, 252, 333, 843, 844, 925, 1285, 1319], "add_grid_lin": [251, 333, 843, 925], "imshow": [251, 843, 1279, 1280, 1283, 1317], "reason": [251, 264, 843, 856], "america": [251, 252, 264, 333, 370, 843, 844, 856, 925, 962], "cr": [251, 252, 305, 333, 460, 524, 843, 844, 897, 925, 1045, 1109, 1274, 1275, 1278, 1284, 1285, 1291, 1298, 1302, 1304, 1305, 1312, 1313, 1316, 1317, 1318, 1319], "subsequ": [251, 252, 333, 843, 844, 925], "geoax": [251, 252, 333, 843, 844, 925, 1312, 1315, 1318], "platecarre": [251, 252, 333, 843, 844, 925, 1274, 1278, 1284, 1285, 1298, 1302, 1304, 1313, 1316, 1318], "drawinf": [251, 252, 843, 844], "shapefil": [251, 252, 333, 370, 843, 844, 925, 962], "certain": [251, 252, 333, 523, 843, 844, 925, 972, 1108, 1242, 1304, 1316], "contour_valu": [252, 844], "maps_list": [252, 844], "countri": [252, 844], "110m": [252, 333, 844, 925], "background_zoom": [252, 844], "contour": [252, 844, 1272, 1282, 1300, 1321], "reson": [252, 333, 370, 844, 925, 962], "sequenc": [252, 844], "colour": [252, 844], "embelish": [252, 370, 844, 962], "10m": [252, 333, 844, 925, 1275, 1291, 1319], "50m": [252, 333, 844, 925, 1313, 1316], "naturalearthfeatur": [252, 333, 844, 925, 1319], "zoom": [252, 844], "background": [252, 370, 500, 536, 844, 962, 971, 1085, 1121, 1291, 1298, 1304], "cost": [252, 527, 844, 1112], "alpha": [253, 333, 370, 460, 505, 506, 507, 508, 509, 510, 736, 745, 845, 925, 962, 1045, 1090, 1091, 1092, 1093, 1094, 1095, 1285, 1294, 1319], "transpar": [253, 380, 845, 974, 1294], "overplot": [253, 333, 370, 845, 925, 962], "plot_latitudinal_level": [254, 268, 846, 860], "y_index": [255, 269, 847, 861], "x_index": [257, 271, 849, 863], "veric": [260, 852], "area_thresh": [264, 370, 856, 962], "auto_rang": [264, 856], "min_lon": [264, 333, 370, 856, 925, 962, 1278, 1291, 1316, 1319], "max_lon": [264, 333, 370, 856, 925, 962, 1278, 1291, 1316, 1319], "86": [264, 856], "min_lat": [264, 333, 370, 856, 925, 962, 1278, 1291, 1316, 1319], "max_lat": [264, 333, 370, 856, 925, 962, 1278, 1291, 1316, 1319], "44": [264, 449, 500, 856, 1033, 1085, 1304, 1322], "databas": [264, 370, 856, 962], "merc": [264, 370, 856, 962], "line_styl": [266, 329, 330, 334, 366, 367, 371, 858, 921, 922, 926, 958, 959, 963, 1291], "plot_rhi": [288, 321, 358, 880, 913, 950, 1318], "plot_vpt": [288, 321, 358, 880, 913, 950], "grid_project": [305, 445, 446, 897, 1029, 1030], "progress": [305, 342, 517, 897, 934, 1102], "some": [305, 342, 436, 529, 531, 897, 934, 1004, 1015, 1031, 1114, 1116, 1137, 1267, 1275, 1283, 1284, 1302, 1304, 1309, 1313, 1315, 1317, 1318, 1319, 1322], "correctli": [305, 342, 897, 934], "report": [305, 342, 393, 540, 541, 542, 897, 934, 987, 1125, 1309, 1323], "github": [305, 342, 897, 934, 1267, 1295, 1309, 1322, 1325], "tracker": [305, 342, 897, 934, 1309, 1323], "azimuthalequidist": [305, 897], "line_lon": [329, 366, 921, 958], "line_lat": [329, 366, 921, 958], "compat": [329, 330, 331, 334, 366, 367, 368, 371, 395, 921, 922, 923, 926, 958, 959, 960, 963, 989, 1325], "line_x": [330, 367, 922, 959], "line_i": [330, 367, 922, 959], "ro": [331, 368, 923, 960], "label_text": [331, 368, 923, 960], "label_offset": [331, 368, 923, 960], "shapefile_kwarg": [333, 925], "edgecolor": [333, 925, 1294, 1319], "face": [333, 925], "lambertconform": [333, 925, 1275, 1291, 1312], "domain": [333, 370, 455, 517, 925, 962, 1040, 1102, 1278], "neither": [333, 370, 401, 925, 962, 996], "extend": [333, 370, 394, 414, 925, 962, 988, 1233, 1319], "word": [333, 925], "tranpar": [333, 370, 925, 962], "pixel": [333, 522, 523, 531, 925, 1107, 1108, 1116, 1317, 1318, 1319], "lcc": [370, 962], "cylindr": [370, 962], "mill": [370, 962], "exhibit": [370, 962], "distort": [370, 962], "aea": [370, 962], "laea": [370, 962], "conform": [370, 962, 1309, 1311, 1319], "tmerc": [370, 962], "aeqd": [370, 962], "cass": [370, 962], "even": [370, 529, 962, 1114, 1294, 1309, 1315, 1319, 1325], "cyl": [370, 962], "cannot": [370, 381, 962, 975, 1317], "lake": [370, 962, 1319], "esri": [370, 962], "untest": [370, 962], "dtobj": [379, 973], "storage_opt": [380, 390, 392, 974, 984, 986], "anon": [380, 390, 392, 974, 984, 986], "open": [380, 390, 392, 974, 984, 986, 1137, 1288, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1319, 1320, 1323, 1325], "decompress": [380, 974], "bzip2": [380, 974], "backend": [380, 390, 974, 984], "googl": [380, 390, 974, 984, 1323], "cloud": [380, 390, 527, 974, 984, 1112, 1272, 1273, 1276, 1319, 1321, 1323, 1325], "storag": [380, 390, 974, 984, 1198], "amazon": [380, 390, 974, 984, 1274, 1275], "servic": [380, 390, 974, 984, 1274, 1275, 1283], "s3": [380, 390, 974, 984, 1274, 1275, 1286, 1304], "file_lik": [380, 974], "use_rsl": [381, 975], "read_": [381, 975], "trmm": [381, 394, 975, 988, 1309, 1322], "choos": [381, 975, 1272, 1282, 1300, 1304, 1321, 1325], "typeerror": [381, 407, 975], "launch_datetim": [382, 976], "radiosond": [382, 976], "launch": [382, 976], "record": [382, 976, 1318, 1320], "target_datetim": [383, 977], "profile_datetim": [383, 977], "cfradial2": [385, 979], "use_file_field_attribut": [386, 980], "csu": [386, 980], "chill": [386, 980], "chl": [386, 980], "field_file_nam": [386, 980], "long_nam": [386, 980, 1304, 1312, 1320], "write_grid": [387, 981], "zlib": [388, 389, 982, 983], "read_mdv": [388, 982, 1270, 1279, 1290, 1294, 1295, 1296], "fulli": [388, 542, 982, 1322], "interchang": [388, 982], "vlevel": [388, 982], "proj_polar_radar": [388, 982], "proj_rhi_radar": [388, 982], "13": [388, 469, 474, 488, 982, 1054, 1059, 1073, 1231, 1275, 1297, 1316, 1319, 1320], "vlevel_typ": [388, 982], "vert_type_z": [388, 982], "vert_type_elev": [388, 982], "vert_type_az": [388, 982], "17": [388, 982, 1292, 1297, 1300], "vert_type_pressur": [388, 982], "vert_type_theta": [388, 982], "unknown": [388, 982], "most": [388, 502, 972, 982, 1087, 1283, 1313, 1315, 1319, 1325], "station": [390, 391, 984, 985, 1275], "linear_interp": [390, 984], "nexrad": [390, 391, 392, 393, 984, 985, 986, 987, 1272, 1273, 1276, 1282, 1286, 1300, 1304, 1309, 1320, 1321], "archiv": [390, 984, 1287, 1309], "host": [390, 392, 984, 986], "noaa": [390, 392, 394, 984, 986, 988, 1274, 1275, 1286, 1304], "nation": [390, 392, 984, 986, 1274, 1283], "climat": [390, 392, 984, 986, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "ucar": [390, 391, 984, 985], "thredd": [390, 391, 397, 984, 985, 991], "server": [390, 391, 984, 985], "letter": [390, 391, 393, 984, 985, 987], "icao": [390, 391, 984, 985], "older": [390, 391, 984, 985, 1267, 1272, 1273, 1276, 1309, 1321, 1323], "mix": [390, 984, 1242, 1286, 1304], "nearest": [390, 446, 465, 473, 474, 482, 495, 498, 516, 984, 1030, 1050, 1058, 1059, 1067, 1080, 1083, 1101, 1218, 1224, 1225, 1259, 1315, 1318], "fsspec": [390, 392, 984, 986], "cut": [390, 391, 392, 523, 984, 985, 986, 1108, 1261, 1262], "ncdc": [390, 392, 984, 986], "gov": [390, 392, 984, 986, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1292, 1294, 1295, 1296, 1297, 1299, 1302, 1303], "edu": [390, 391, 522, 984, 985, 1107, 1286, 1304], "catalog": [390, 391, 984, 985], "html": [390, 391, 522, 984, 985, 1107, 1309, 1317, 1322, 1323], "common": [391, 985, 1309, 1322], "cdm": [391, 397, 985, 991], "url": [391, 985, 1275], "java": [391, 397, 985, 991], "tool": [391, 397, 985, 991, 1309, 1322, 1323], "opendap": [391, 985], "accept": [391, 460, 465, 473, 482, 495, 504, 528, 529, 985, 1045, 1050, 1058, 1067, 1080, 1089, 1113, 1114, 1267, 1323], "compil": [391, 528, 985, 1113, 1309, 1322], "unidata": [391, 985, 1274], "htm": [391, 985], "nw": [392, 986], "wsr": [392, 531, 986, 1116], "88d": [392, 531, 986, 1116], "iii": [392, 986], "distribut": [392, 500, 535, 537, 539, 986, 1085, 1120, 1122, 1124, 1212, 1213, 1214, 1215, 1245, 1246, 1304, 1309, 1323], "roc": [392, 986], "wsr88d": [392, 393, 986, 987], "level_iii": [392, 986], "level3info": [392, 986], "asp": [392, 986], "radar_format": [393, 987], "callid": [393, 987], "skip_range_check": [393, 987], "rsl_radar": [393, 987], "id": [393, 398, 987, 992], "verifi": [393, 987, 1247, 1265], "ioerror": [393, 987], "time_ord": [394, 988], "full_xhdr": [394, 988], "noaa_hh_hdr": [394, 988], "ignore_xhdr": [394, 988], "ignore_sweep_start_m": [394, 988], "sigmet": [394, 988, 1309], "iri": [394, 988, 1309, 1322], "sequenti": [394, 988, 1031, 1283], "re": [394, 988], "manner": [394, 988], "determind": [394, 988], "maintain": [394, 988], "reverse_and_rol": [394, 988], "strictli": [394, 988], "increas": [394, 446, 503, 517, 527, 530, 988, 1030, 1088, 1102, 1112, 1115, 1283, 1315, 1323], "becom": [394, 988, 1304, 1312, 1315, 1318], "thisopt": [394, 988], "strict": [394, 988], "header": [394, 575, 576, 988], "decod": [394, 988], "hurrican": [394, 988, 1304], "hunter": [394, 988], "millisecond": [394, 988], "precis": [394, 988, 1267], "explic": [394, 988], "read_rsl": [394, 988, 1322], "error": [394, 398, 528, 529, 988, 992, 1113, 1114, 1222, 1250, 1251, 1267, 1318, 1322], "uf": [395, 400, 989, 994, 1309], "implement": [395, 401, 403, 405, 414, 424, 445, 522, 533, 989, 996, 1009, 1029, 1107, 1118, 1269], "write_proj_coord_si": [397, 991], "proj_coord_si": [397, 991], "write_point_x_y_z": [397, 991], "write_point_lon_lat_alt": [397, 991], "projectioncoordinatesystem": [397, 991], "toolsui": [397, 991], "appropri": [397, 991], "understood": [397, 991], "rgb": [398, 992], "viridi": [398, 992, 1304], "color_level": [398, 992], "warp": [398, 992], "sld": [398, 992], "use_doublequot": [398, 992], "geotiff": [398, 992, 1309], "sphere": [398, 992, 1234, 1260], "latter": [398, 992], "usabl": [398, 992], "former": [398, 992], "gi": [398, 992], "while": [398, 992, 1313, 1325], "show": [398, 992, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1304, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1323], "lack": [398, 439, 992, 1007, 1017], "gdal": [398, 992, 1309], "via": [398, 992], "conda": [398, 992, 1309, 1322, 1323, 1325], "rbg": [398, 992], "column": [398, 992, 1235, 1236, 1272, 1301, 1307, 1321], "categor": [398, 992, 1305, 1319], "gdalwarp": [398, 992], "command": [398, 992, 1309, 1312, 1317, 1319, 1323, 1325], "descriptor": [398, 992], "tiff": [398, 992], "don": [398, 992, 1278], "quot": [398, 992], "help": [398, 992, 1126, 1278, 1283, 1304, 1323, 1325], "translat": [398, 992], "sr": [398, 992], "mdv_field_nam": [399, 993], "field_write_ord": [399, 400, 993, 994], "sentinel": [399, 400, 993, 994], "writabl": [399, 993], "satisfi": [399, 993], "xy": [399, 446, 993, 1030], "irregular": [399, 993, 1267], "exce": [399, 993, 1304], "122": [399, 993, 1274, 1278, 1281, 1284, 1303], "uncompress": [399, 993], "sai": [399, 993, 1323], "uf_field_nam": [400, 994], "radar_field_nam": [400, 994], "volume_start": [400, 994], "templates_extra": [400, 994], "radar_beam_width_h": [400, 994], "radar_beam_width_v": [400, 994], "radar_receiver_bandwidth": [400, 994], "prt": [400, 994], "polarization_mod": [400, 994], "round": [400, 994, 1267], "_uf_scale_factor": [400, 994], "charact": [400, 994], "advanc": [400, 994], "usag": [400, 994], "templat": [400, 994, 1323], "mandatory_head": [400, 994], "optional_head": [400, 994], "field_head": [400, 994], "lazi": [401, 404, 410, 415, 417, 430, 437, 995, 996, 998, 1005], "set_lazi": [401, 996], "callabl": [401, 437, 996, 1005], "cach": [401, 428, 996], "tradit": [401, 404, 415, 417, 996], "supplement": [401, 996], "syntax": [401, 996], "prevent": [401, 446, 996, 1030, 1323], "comparison": [401, 460, 533, 996, 1045, 1118, 1278], "__cmp__": [401, 996], "__ge__": [401, 996], "__gt__": [401, 996], "__le__": [401, 996], "__lt__": [401, 996], "__ne__": [401, 996], "nor": [401, 996], "viewitem": [401, 996], "viewkei": [401, 996], "viewvalu": [401, 996], "fromkei": [401, 996], "tradition": [401, 425, 996], "referenc": [401, 996], "lazyloaddictionari": [401, 996], "henc": [401, 996], "key1": [401, 996], "value1": [401, 996], "key2": [401, 996], "value2": [401, 996], "lazy_func": [401, 996], "lambda": [401, 996], "lazykey1": [401, 996], "delattr": 403, "dir": [405, 1137], "format_spec": 407, "formatt": 407, "getattr": 409, "helper": [411, 421, 422, 1283], "pickl": [411, 421, 422], "subclass": 414, "noth": 414, "overridden": 414, "protocol": 422, "repr": 423, "setattr": 424, "memori": [426, 446, 533, 1030, 1118, 1317, 1318], "abstract": 428, "overrid": [428, 1295, 1319], "issubclass": 428, "invok": 428, "earli": 428, "abc": 428, "abcmeta": 428, "__subclasscheck__": 428, "notimpl": 428, "outcom": 428, "item": [429, 439, 997, 1007, 1010, 1017], "els": [431, 432, 999, 1000, 1011, 1318], "value_cal": [437, 1005], "zg": [441, 442, 443, 1024, 1025, 1026], "yg": [441, 442, 443, 1024, 1025, 1026], "xg": [441, 442, 443, 1024, 1025, 1026], "roi": [441, 442, 443, 446, 1024, 1025, 1026, 1030], "influenc": [441, 444, 445, 446, 517, 1024, 1028, 1029, 1030, 1102, 1315], "grow": [442, 443, 445, 446, 1025, 1026, 1029, 1030, 1323], "virtual": [443, 445, 446, 1026, 1029, 1030], "grid_shap": [444, 445, 446, 1028, 1029, 1030, 1199, 1279, 1280, 1284, 1304, 1315, 1318], "grid_limit": [444, 445, 446, 1028, 1029, 1030, 1199, 1279, 1280, 1284, 1304, 1315, 1318], "gridding_algo": [444, 1028], "map_gates_to_grid": [444, 1028], "map_to_grid": [444, 445, 1028, 1029], "significantli": [444, 446, 1028, 1030], "faster": [444, 446, 1028, 1030], "barn": [444, 446, 1028, 1030, 1315], "1964": [444, 1028], "techniqu": [444, 514, 1028, 1099, 1318], "maxim": [444, 1028, 1031], "numer": [444, 1028, 1319], "meteorologi": [444, 455, 469, 474, 488, 527, 540, 1028, 1036, 1040, 1054, 1059, 1073, 1112, 1125, 1231], "climatologi": [444, 540, 1028, 1125], "396": [444, 1028], "409": [444, 1028], "cressman": [444, 446, 1028, 1030, 1315], "1959": [444, 1028], "monthli": [444, 1028], "review": [444, 1028], "367": [444, 1028], "374": [444, 1028], "paulei": [444, 1028, 1315], "1990": [444, 1028, 1315], "discret": [444, 517, 1028, 1102], "respons": [444, 1028], "118": [444, 1028], "1145": [444, 1028], "1164": [444, 1028], "grid_origin": [445, 446, 1029, 1030, 1280, 1284], "grid_origin_alt": [445, 446, 1029, 1030], "map_roi": [445, 446, 1029, 1030], "weighting_funct": [445, 446, 1029, 1030, 1315], "barnes2": [445, 446, 1029, 1030], "toa": [445, 446, 450, 530, 1029, 1030, 1034, 1115], "17000": [445, 446, 1029, 1030, 1315], "roi_func": [445, 446, 1029, 1030, 1315], "dist_beam": [445, 446, 1029, 1030, 1315], "constant_roi": [445, 446, 1029, 1030], "z_factor": [445, 446, 1029, 1030], "xy_factor": [445, 446, 1029, 1030], "02": [445, 446, 503, 1029, 1030, 1088, 1286, 1300, 1304, 1307, 1321], "min_radiu": [445, 446, 1029, 1030, 1315], "h_factor": [445, 446, 1029, 1030], "nb": [445, 446, 1029, 1030], "bsp": [445, 446, 1029, 1030], "linearli": [445, 1029], "roifunct": [445, 1029], "dist": [445, 446, 1029, 1030, 1245, 1246], "get_roi": [445, 1029], "cython": [445, 1029, 1267], "grid_siz": [445, 446, 1029, 1030], "grid_from_radar": [445, 446, 1029, 1030, 1279, 1280, 1284, 1304, 1315, 1318], "copy_field_data": [446, 1030], "kd_tree": [446, 1030], "leafsiz": [446, 1030], "nearbi": [446, 1030, 1280], "coodin": [446, 1030], "azimut": [446, 1030], "similarili": [446, 1030], "example_roi_func_const": [446, 1030], "example_roi_func_dist": [446, 1030], "example_roi_func_dist_beam": [446, 1030], "foreach": [446, 1030], "metet": [446, 1030], "dist_mean": [446, 1030], "preserv": [446, 1030, 1313], "slower": [446, 517, 527, 1030, 1102, 1112], "leaf": [446, 1030], "lookup": [446, 1030, 1267], "tree": [446, 1020, 1030], "affect": [446, 503, 521, 1030, 1088, 1106], "optim": [446, 525, 526, 527, 1030, 1110, 1111, 1112], "natur": [446, 1030], "mx": 447, "mn": 447, "relh_slop": [447, 460, 537, 1045, 1122], "005": 447, "destandard": 447, "h_iso0": [447, 460, 524, 1045, 1109], "slope": [447, 460, 517, 528, 537, 1045, 1102, 1113, 1122], "sigmoid": [447, 460, 537, 1045, 1122], "field_std": 447, "hlowerleft": 448, "hupperright": 448, "matrix": [448, 460, 528, 736, 745, 1045, 1113], "freq": [449, 476, 477, 497, 518, 519, 1033, 1061, 1062, 1082, 1103, 1104], "rng": [449, 521, 1033, 1106, 1217, 1218, 1233], "empir": [449, 1033], "satur": [449, 1033], "latm": [449, 1033], "floor": [450, 1034], "nyq": [451, 1035, 1313], "check_nyq_uniform": [451, 1035], "deriv": [451, 527, 529, 1035, 1112, 1114, 1317], "try": [451, 527, 533, 1035, 1112, 1118, 1315, 1316, 1319], "vel_dict": [451, 452, 453, 1035, 1037, 1038], "entri": [451, 1035, 1320], "sdbz_field": [452, 454, 461, 463, 478, 1037, 1039, 1046, 1048, 1063], "spectral": [452, 454, 461, 463, 471, 478, 480, 486, 487, 488, 489, 490, 491, 492, 502, 577, 1037, 1039, 1046, 1048, 1056, 1063, 1065, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1087, 1231, 1267], "signal_field": [453, 455, 468, 469, 479, 488, 489, 490, 491, 493, 494, 499, 1038, 1040, 1053, 1054, 1064, 1073, 1074, 1075, 1076, 1078, 1079, 1084], "negative_awai": [453, 472, 1038, 1057], "negative_toward": [453, 472, 1038, 1057], "width_dict": [454, 455, 1039, 1040], "subtract_nois": [455, 464, 471, 472, 479, 480, 481, 487, 490, 491, 492, 1040, 1049, 1056, 1057, 1064, 1065, 1066, 1072, 1075, 1076, 1077], "noise_field": [455, 470, 474, 475, 479, 484, 490, 491, 1040, 1055, 1059, 1060, 1064, 1069, 1075, 1076], "lag": [455, 464, 472, 481, 493, 494, 1040, 1049, 1057, 1066, 1078, 1079], "denomin": [455, 1040], "varianc": [455, 1040, 1231, 1232, 1237, 1248, 1249], "srivastava": [455, 1040], "jameson": [455, 1040], "februari": [455, 1040], "1979": [455, 1040], "rhohv_snow": [456, 533, 1041, 1118], "rhohv_rain": [456, 533, 1041, 1118], "rhohv_ml": [456, 533, 1041, 1118], "93": [456, 476, 497, 517, 533, 1041, 1061, 1082, 1102, 1118], "zh_snow": [456, 533, 1041, 1118], "zh_rain": [456, 533, 1041, 1118], "zh_ml": [456, 533, 1041, 1118], "27": [456, 533, 1041, 1118, 1302], "zv_snow": [456, 533, 1041, 1118], "zv_rain": [456, 533, 1041, 1118], "zv_ml": [456, 533, 1041, 1118], "26": [456, 465, 533, 1041, 1050, 1118, 1266], "beam_factor": [456, 533, 1041, 1118], "npts_diagram": [456, 533, 1041, 1118], "81": [456, 533, 1041, 1118, 1320], "rng_bottom_max": [456, 533, 1041, 1118], "200000": [456, 533, 1041, 1118, 1291, 1304], "theoretical_cross_correlation_ratio": [456, 1041], "diagram": [456, 1041], "rhohv_theo_dict": [456, 1041], "sigma_bird": [457, 1042], "vol_refl_field": [457, 497, 1042, 1082], "bird_density_field": [457, 1042], "densiti": [457, 537, 1042, 1122, 1305, 1319], "volumetr": [457, 497, 1042, 1082, 1310], "bird_density_dict": [457, 1042], "filt_field": [458, 1043], "unfilt_field": [458, 1043], "ccor_field": [458, 1043], "ccor": [458, 1043], "unfilt": [458, 1043, 1319], "ccor_dict": [458, 1043], "cdr_field": [459, 1044], "circular": [459, 1044, 1245, 1246, 1304], "depolar": [459, 1044], "cdr": [459, 1044], "features_matrix": [460, 1045], "var_nam": [460, 504, 524, 537, 1045, 1089, 1109, 1122], "hydro_nam": [460, 504, 524, 537, 1045, 1089, 1109, 1122], "ag": [460, 524, 533, 1045, 1109, 1118, 1305, 1317, 1319], "lr": [460, 524, 1045, 1109, 1305, 1317, 1319], "rp": [460, 524, 1045, 1109, 1305, 1317, 1319], "rn": [460, 524, 1045, 1109, 1305, 1317, 1319], "mh": [460, 524, 1045, 1109, 1305, 1317, 1319], "ih": [460, 524, 1045, 1109, 1305, 1317, 1319], "hdg": [460, 524, 1045, 1109, 1305, 1317, 1319], "nsamples_it": [460, 1045], "20000": [460, 501, 503, 535, 1045, 1086, 1088, 1120, 1291, 1315], "external_iter": [460, 1045], "internal_iter": [460, 1045], "cv_approach": [460, 1045], "num_samples_arr": [460, 1045], "n_samples_syn": [460, 1045], "nmedoids_min": [460, 504, 1045, 1089], "acceptance_threshold": [460, 504, 1045, 1089], "001": [460, 537, 1045, 1122, 1239, 1294], "parallel": [460, 527, 528, 529, 1045, 1112, 1113, 1114], "sample_data": [460, 1045], "kmax_it": [460, 504, 1045, 1089], "nsamples_smal": [460, 1045], "40000": [460, 1045, 1280, 1284, 1291, 1315], "sampling_size_clara": [460, 1045], "niter_clara": [460, 1045], "keep_labeled_data": [460, 1045], "use_median": [460, 504, 1045, 1089], "allow_label_dupl": [460, 1045], "centroid": [460, 501, 524, 535, 1045, 1086, 1109, 1120, 1319], "nsampl": [460, 535, 537, 1045, 1120, 1122], "nvariabl": [460, 524, 1045, 1109], "extern": [460, 1045], "loop": [460, 1045, 1306], "medoid": [460, 504, 1045, 1089], "inter": [460, 504, 1045, 1089], "dispers": [460, 504, 1045, 1089], "cluster": [460, 524, 1045, 1109, 1319], "critic": [460, 1045], "approach": [460, 517, 524, 531, 533, 1045, 1102, 1109, 1116, 1118], "reject": [460, 1045], "intermedi": [460, 504, 1045, 1089], "kmedoid": [460, 504, 1045, 1089], "clara": [460, 1045], "exceed": [460, 514, 1045, 1099], "kept": [460, 503, 1045, 1088], "labeled_data": [460, 1045], "medoids_dict": [460, 504, 1045, 1089], "final_medoids_dict": [460, 504, 1045, 1089], "sphidp_field": [461, 1046], "phase_offset": [462, 472, 1047, 1057], "signal_h_field": [462, 464, 471, 472, 480, 481, 486, 487, 492, 1047, 1049, 1056, 1057, 1065, 1066, 1071, 1072, 1077], "signal_v_field": [462, 464, 471, 472, 480, 481, 486, 487, 492, 1047, 1049, 1056, 1057, 1065, 1066, 1071, 1072, 1077], "sdbzv_field": [463, 1048], "zdr_dict": [463, 464, 1048, 1049], "noise_h_field": [464, 471, 472, 480, 481, 487, 492, 1049, 1056, 1057, 1065, 1066, 1072, 1077], "noise_v_field": [464, 471, 472, 480, 481, 487, 492, 1049, 1056, 1057, 1065, 1066, 1072, 1077], "ref_tim": [465, 473, 482, 495, 496, 498, 1050, 1058, 1067, 1080, 1081, 1083], "latlon_tol": [465, 495, 498, 1050, 1080, 1083, 1217, 1244], "0005": [465, 495, 498, 1050, 1080, 1083], "delta_rng": [465, 495, 1050, 1080, 1233], "delta_azi": [465, 495, 1050, 1080, 1219, 1233], "hmax": [465, 473, 482, 495, 498, 1050, 1058, 1067, 1080, 1083, 1244], "hre": [465, 473, 482, 495, 498, 531, 1050, 1058, 1067, 1080, 1083, 1116], "250": [465, 495, 503, 1050, 1080, 1088, 1317, 1320], "avg_typ": [465, 473, 482, 495, 1050, 1058, 1067, 1080, 1219, 1221], "interp_kind": [465, 473, 482, 495, 498, 1050, 1058, 1067, 1080, 1083, 1259], "qvp": [465, 473, 482, 495, 498, 534, 1050, 1058, 1067, 1080, 1083, 1119], "enhanc": [465, 1050, 1325], "interest": [465, 495, 498, 1050, 1080, 1083, 1278, 1304, 1319], "central": [465, 495, 1050, 1080, 1233], "evp": [465, 495, 1050, 1080], "regardless": [465, 473, 482, 495, 498, 514, 1050, 1058, 1067, 1080, 1083, 1099], "elimin": [465, 473, 482, 495, 498, 1050, 1058, 1067, 1080, 1083, 1313, 1315], "kaltenboeck": [465, 1050], "2016": [465, 473, 503, 524, 1050, 1058, 1088, 1109, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1319, 1320, 1323], "storm": [465, 536, 1050, 1121, 1203, 1205, 1286, 1304, 1315, 1318], "methodologi": [465, 540, 1050, 1125, 1313], "meteorologisch": [465, 1050], "zeitschrift": [465, 1050], "207": [465, 1050], "222": [465, 1050, 1270, 1287, 1318], "fields_in_list": [466, 485, 1051, 1070], "fields_out_list": [466, 485, 502, 1051, 1070, 1087], "fourier": [466, 485, 1051, 1070], "ones": [466, 485, 1051, 1070, 1283], "get_window": [466, 485, 1051, 1070], "ifft": [466, 1051], "l_field": [467, 1052], "logarithm": [467, 1052], "ll": [467, 1052], "log10": [467, 1052, 1278], "mph_dict": [468, 1053], "navg": [469, 488, 1054, 1073, 1231], "nnoise_min": [469, 488, 1054, 1073, 1231], "dbadu_to_dbm_hh": [469, 488, 490, 491, 1054, 1073, 1075, 1076], "dbadu_to_dbm_vv": [469, 488, 490, 491, 1054, 1073, 1075, 1076], "sehkon": [469, 488, 1054, 1073, 1231], "1974": [469, 474, 488, 1054, 1059, 1073, 1231], "noise_dict": [469, 474, 475, 488, 1054, 1059, 1060, 1073], "808": [469, 474, 488, 1054, 1059, 1073, 1231], "811": [469, 474, 488, 1054, 1059, 1073, 1231], "noisedbz_v": [470, 1055], "ref_dist": [470, 1055], "noisedbz": [470, 1055], "fields_list": [471, 472, 1056, 1057], "use_pwr": [471, 1056], "smooth_window": [471, 487, 490, 491, 1056, 1072, 1075, 1076], "srhohv_field": [471, 480, 486, 1056, 1065, 1071], "pwr_h_field": [471, 480, 487, 1056, 1065, 1072], "pwr_v_field": [471, 480, 487, 1056, 1065, 1072], "quasi": [473, 482, 534, 1058, 1067, 1119], "zhang": [473, 495, 505, 534, 1058, 1080, 1090, 1119], "reev": [473, 534, 1058, 1119], "kumjian": [473, 482, 534, 1058, 1067, 1119], "tschallen": [473, 534, 1058, 1119], "tr\u00f6mel": [473, 1058], "simmer": [473, 505, 534, 1058, 1090, 1119], "jtech": [473, 495, 1058, 1080], "33": [473, 1058, 1320], "551": [473, 1058], "562": [473, 1058], "pwr_field": [474, 475, 483, 491, 502, 1059, 1060, 1068, 1076, 1087], "get_noise_po": [474, 475, 1059, 1060, 1232], "noisi": [474, 475, 1059, 1060], "noise_pos_dict": [474, 475, 1059, 1060], "reserv": [474, 1059, 1217, 1218, 1244], "ngates_min": [475, 1060, 1232], "curti": [475, 1060, 1232], "torr": [475, 1060, 1232], "2737": [475, 1060, 1232], "2753": [475, 1060, 1232], "kw2": [476, 1061], "rcs_field": [476, 477, 1061, 1062], "water": [476, 497, 517, 1061, 1082, 1102], "rc": [476, 477, 517, 1061, 1062, 1102], "rcs_dict": [476, 477, 1061, 1062], "lmf": [477, 483, 1062, 1068], "radconst": [477, 483, 1062, 1068], "tx_pwr": [477, 1062], "lrx": [477, 483, 1062, 1068], "ltx": [477, 1062], "lradom": [477, 483, 1062, 1068], "neglect_gas_att": [477, 1062], "feed": [477, 483, 1062, 1068], "neglect": [477, 1062], "dbz_dict": [478, 479, 1063, 1064], "use_rhohv": [480, 486, 1065, 1071], "srhohv": [480, 486, 1065, 1071], "srho_hv": [480, 1065], "rhohv_dict": [480, 481, 1065, 1066], "weight_pow": [482, 1067], "ab": [482, 1067], "grng": [482, 1067], "tobin": [482, 1067], "2017": [482, 495, 1067, 1080], "surfac": [482, 500, 1067, 1085, 1304], "ic": [482, 495, 1067, 1080, 1294, 1305, 1319], "pellet": [482, 1067], "forecast": [482, 1067], "2065": [482, 1067], "2082": [482, 1067], "THE": [483, 1068], "s_pwr_dict": [483, 1068], "sphidp_dict": [486, 1071], "compute_pow": [487, 491, 1072, 1076], "szdr_dict": [487, 1072], "phase_dict": [489, 1074], "pwr_dict": [490, 1075], "sdbz_dict": [491, 1076], "srhohv_dict": [492, 1077], "statist": [493, 494, 524, 1078, 1079, 1109, 1221], "fluctuat": [493, 494, 1078, 1079], "st1_dict": [493, 1078], "st1": [493, 1078, 1317], "st2_dict": [494, 1079], "st2": [494, 1079, 1317], "bukovc": [495, 1080], "winter": [495, 1080, 1286, 1304], "liquid": [495, 1080, 1319], "reveal": [495, 1080, 1319], "2dvd": [495, 1080], "oklahoma": [495, 1080, 1199], "56": [495, 1080, 1306, 1318], "1345": [495, 1080], "1363": [495, 1080], "along_azi": [496, 1081], "fixed_rang": [496, 1081], "fixed_azimuth": [496, 1081], "fixed_elev": [496, 1081], "rng_tol": [496, 1081], "value_start": [496, 1081], "value_stop": [496, 1081], "acoord": [496, 1081], "along_el": [496, 1081], "along_rng": [496, 1081], "stop": [496, 1081], "kw": [497, 1082], "vol_refl_dict": [497, 1082], "10log10": [497, 1082], "wide": [499, 1084], "wbn_dict": [499, 1084], "dx": [500, 517, 536, 1085, 1102, 1121, 1304], "dy": [500, 536, 1085, 1121, 1304], "level_m": [500, 1085], "always_core_thr": [500, 971, 1085, 1304], "42": [500, 536, 1085, 1121, 1302, 1304], "bkg_rad_km": [500, 1085, 1304], "use_cosin": [500, 971, 1085, 1304], "max_diff": [500, 971, 1085, 1304], "zero_diff_cos_v": [500, 971, 1085, 1304], "55": [500, 1085, 1298, 1304, 1319], "scalar_diff": [500, 971, 1085, 1304], "use_addit": [500, 971, 1085, 1304], "calc_thr": [500, 1085, 1304], "weak_echo_thr": [500, 1085, 1304], "min_dbz_us": [500, 1085, 1304], "db_averag": [500, 1085, 1304], "remove_small_object": [500, 1085, 1304], "min_km2_siz": [500, 1085, 1304], "val_for_max_conv_rad": [500, 1085, 1304], "max_conv_rad_km": [500, 1085, 1304], "cs_core": [500, 1085], "nosfcecho": [500, 1085, 1304], "weakecho": [500, 1085, 1304], "sf": [500, 1085, 1304], "conv": [500, 1085, 1304], "estimate_flag": [500, 1085, 1304], "estimate_offset": [500, 1085, 1304], "partit": [500, 536, 1085, 1121, 1269, 1319], "convect": [500, 536, 971, 1085, 1121, 1272, 1301, 1307, 1321], "stratiform": [500, 536, 971, 1085, 1121, 1272, 1301, 1307, 1318, 1321], "yuter": [500, 536, 971, 1085, 1121, 1242, 1286, 1304], "1997": [500, 971, 1085, 1304], "pars": [500, 1085], "classifi": [500, 524, 971, 1085, 1109, 1304, 1305, 1319], "cosin": [500, 971, 1085, 1304], "simpler": [500, 1085, 1304], "scalar": [500, 971, 1085, 1304], "eqn": [500, 971, 1085], "b1": [500, 971, 1085], "percentag": [500, 1085, 1244], "weak": [500, 1085, 1304], "underestim": [500, 1085, 1304], "wih": [500, 1085], "convsf_dict": [500, 1085, 1304], "raindrop": [500, 1085, 1304], "pacif": [500, 1085, 1304], "warm": [500, 527, 1085, 1112, 1304, 1319], "pool": [500, 1085, 1304], "implic": [500, 1085, 1304], "appl": [500, 529, 534, 536, 539, 1085, 1114, 1119, 1121, 1124, 1304, 1323], "meteor": [500, 529, 534, 536, 539, 1085, 1114, 1119, 1121, 1124, 1304, 1323], "36": [500, 1085, 1275, 1278, 1280, 1284, 1298, 1302, 1304, 1315], "847": [500, 1085, 1304], "867": [500, 1085, 1304], "doi": [500, 503, 524, 528, 529, 531, 1085, 1088, 1109, 1113, 1114, 1116, 1242, 1286, 1304, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "org": [500, 522, 1036, 1085, 1107, 1242, 1286, 1304, 1309, 1323], "1175": [500, 529, 531, 1085, 1114, 1116, 1304], "1520": [500, 1085, 1304], "0450": [500, 1085, 1304], "036": [500, 1085, 1283, 1300, 1304, 1321], "3c0847": [500, 1085, 1304], "morsdo": [500, 1085, 1304], "3e2": [500, 1085, 1304], "smith": [500, 1085, 1304], "wilheit": [500, 1085, 1304], "zipser": [500, 1085, 1304], "character": [500, 503, 536, 1085, 1088, 1121, 1304], "tropic": [500, 1085, 1304], "kwajex": [500, 1085, 1304], "385": [500, 1085, 1304], "415": [500, 1085, 1304], "jam2206": [500, 1085, 1304], "lapse_r": [501, 520, 524, 1086, 1105, 1109], "nsamples_max": [501, 1086], "prepar": [501, 1086, 1311, 1312, 1313, 1315, 1316, 1317, 1320], "refl_std": [501, 1086], "zdr_std": [501, 1086], "kdp_std": [501, 1086], "rhohv_std": [501, 1086], "relh_std": [501, 1086], "quit": [502, 1087, 1319], "everi": [502, 528, 529, 539, 588, 1087, 1113, 1114, 1124, 1309, 1318], "tail": [502, 1087], "fill_valu": [503, 517, 527, 528, 529, 536, 1088, 1102, 1112, 1113, 1114, 1121, 1243, 1311, 1312, 1320], "ml_field": [503, 531, 532, 533, 1088, 1116, 1117, 1118], "ml_pos_field": [503, 531, 532, 533, 1088, 1116, 1117, 1118], "max_rang": [503, 1031, 1088], "detect_threshold": [503, 1088], "interp_hol": [503, 1088], "max_length_hol": [503, 1088], "check_min_length": [503, 1088], "get_iso0": [503, 531, 532, 533, 1088, 1116, 1117, 1118], "ml": [503, 531, 1088, 1116, 1267], "plai": [503, 1088, 1322], "sensit": [503, 1088], "erron": [503, 1088, 1313], "hole": [503, 1088], "ml_obj": [503, 531, 532, 533, 1088, 1116, 1117, 1118], "ml_dict": [503, 531, 532, 533, 1088, 1116, 1117, 1118], "iso0_dict": [503, 531, 532, 533, 1088, 1116, 1117, 1118], "all_ml": [503, 1088], "scipion": [503, 1088], "bern": [503, 524, 528, 1088, 1109, 1113], "q": [503, 1088], "meteorol": [503, 534, 1088, 1119, 1304], "soc": [503, 1088], "142": [503, 1088], "108": [503, 1088], "124": [503, 1088, 1306, 1318], "1002": [503, 1088], "qj": [503, 1088], "2672": [503, 1088], "niter": [504, 1089], "nvar": [504, 516, 1089, 1101], "medoids_arr": [504, 1089], "a_field": [505, 506, 509, 1090, 1091, 1094, 1319], "rr_field": [505, 506, 507, 508, 509, 510, 511, 1090, 1091, 1092, 1093, 1094, 1095, 1096], "diederich": [505, 1090], "tromel": [505, 534, 1090, 1119], "wavelenght": [505, 1090], "hydrometeorologi": [505, 1090], "487": [505, 1090, 1274], "502": [505, 1090], "alphazr": [506, 1091], "0376": [506, 508, 509, 510, 1091, 1093, 1094, 1095], "betazr": [506, 1091], "6112": [506, 508, 509, 510, 1091, 1093, 1094, 1095], "alphaz": [506, 509, 510, 1091, 1094, 1095], "betaz": [506, 509, 510, 1091, 1094, 1095], "alphaa": [506, 509, 1091, 1094], "betaa": [506, 509, 1091, 1094], "mp_factor": [506, 1091], "master_field": [506, 509, 510, 1091, 1094, 1095], "thresh_max": [506, 509, 510, 1091, 1094, 1095], "act": [506, 509, 510, 590, 1091, 1094, 1095, 1304, 1311], "master": [506, 509, 510, 1091, 1094, 1095, 1295, 1323], "slave": [506, 509, 510, 1091, 1094, 1095], "blend": [509, 510, 1094, 1095, 1294], "rain_mast": [509, 510, 1094, 1095], "alphakdp": [510, 1095], "betakdp": [510, 1095], "mm": [510, 1095, 1304, 1319], "polynomi": [511, 1096], "develop": [511, 1096, 1309, 1317, 1322, 1323], "mcgill": [511, 1096, 1309], "az_tol": [512, 513, 1097, 1098, 1224], "wind_field": [512, 513, 515, 1097, 1098, 1100], "windshear_field": [512, 513, 1097, 1098], "windshear": [512, 513, 1097, 1098, 1267], "npoints_min": [514, 1099], "azi_spacing_max": [514, 1099], "vel_diff_max": [514, 1099], "rad_vel_field": [514, 1099], "u_vel_field": [514, 1099], "v_vel_field": [514, 1099], "w_vel_field": [514, 1099], "vel_est_field": [514, 1099], "vel_std_field": [514, 1099], "vel_diff_field": [514, 1099], "vad": [514, 539, 540, 1099, 1124, 1125, 1267, 1272, 1301, 1307, 1321, 1323], "recomput": [514, 1099], "difer": [514, 1099], "vert_proj": [515, 1100], "neglig": [515, 1100], "v_r": [515, 1100], "v_el": [515, 1100], "v_az": [515, 1100], "perpendicular": [515, 1100], "v_h": [515, 1100], "know": [515, 1100, 1325], "hold": [515, 1100], "sonde_dset": [516, 1101], "time_kei": [516, 1101], "height_kei": [516, 1101], "vap": [516, 1101], "startard": [516, 1101], "ncvar": [516, 1101], "return_d": [516, 1101], "radar_spec": [517, 1102], "dem_grid": [517, 1102], "terrain_altitude_field": [517, 1102], "bent_terrain_altitude_field": [517, 1102], "terrain_slope_field": [517, 1102], "terrain_aspect_field": [517, 1102], "elevation_angle_field": [517, 1102], "visibility_field": [517, 1102], "min_vis_elevation_field": [517, 1102], "min_vis_altitude_field": [517, 1102], "incident_angle_field": [517, 1102], "effective_area_field": [517, 1102], "sigma_0_field": [517, 1102], "rcs_clutter_field": [517, 1102], "dbm_clutter_field": [517, 1102], "dbz_clutter_field": [517, 1102], "visibility_polar_field": [517, 1102], "az_conv": [517, 1102], "daz": [517, 1102], "012": [517, 1102], "3333333333333333": [517, 1102], "atm_att": [517, 1102], "mosotti_kw": [517, 1102], "9644": [517, 1102], "raster_oversampl": [517, 1102], "sigma0_method": [517, 1102], "gabella": [517, 524, 1102, 1109], "clip": [517, 1102], "return_pyart_object": [517, 1102], "verbos": [517, 527, 545, 556, 557, 573, 574, 1102, 1112, 1323], "frequenti": [517, 1102], "ghz": [517, 1102], "tau": [517, 1102], "terrain": [517, 1102, 1283], "backscatt": [517, 527, 534, 1102, 1112, 1119], "incid": [517, 1102], "topographi": [517, 1102], "rx": [517, 1102], "equival": [517, 533, 597, 1020, 1102, 1118, 1274, 1285, 1293, 1299], "One": [517, 1102, 1311, 1320, 1323, 1325], "clausiu": [517, 1102], "mosotti": [517, 1102], "materi": [517, 1102, 1309], "sigma": [517, 535, 1102, 1120, 1203, 1294, 1295], "naught": [517, 1102], "undefin": [517, 1102], "oversampl": [517, 1102, 1267], "delrieu": [517, 1102], "lot": [517, 1102, 1318], "directli": [517, 1102, 1283, 1319], "bent_terrain_altitude_d": [517, 1102], "terrain_slope_d": [517, 1102], "terrain_aspect_d": [517, 1102], "elevation_d": [517, 1102], "min_vis_elevation_d": [517, 1102], "min_vis_altitude_d": [517, 1102], "visibility_d": [517, 1102], "incident_angle_d": [517, 1102], "effective_area_d": [517, 1102], "sigma_0_d": [517, 1102], "rcs_clutter_d": [517, 1102], "dbm_clutter_d": [517, 1102], "dbz_clutter_d": [517, 1102], "visibility_polar_d": [517, 1102], "perona": [517, 1102], "1998": [517, 1102], "orograph": [517, 1102], "geometr": [517, 1102], "1485": [517, 1102], "1494": [517, 1102], "freq_band": [519, 1104], "temp_ref_field": [520, 1105], "heigh_over_iso0": [520, 1105], "iso0_ref": [520, 1105], "insuffici": [520, 1105], "rng_left_km": [521, 1106], "rng_right_km": [521, 1106], "ang": [521, 1106, 1294, 1295], "ang_r": [521, 1106], "ml_bottom": [521, 1106], "msl": [521, 531, 1106, 1116, 1244], "grid1": [522, 1107], "grid2": [522, 1107], "return_valu": [522, 1107], "displac": [522, 1107], "en": [522, 1107, 1309, 1317, 1322, 1323], "wikipedia": [522, 1107], "wiki": [522, 1036, 1107], "phase_correl": [522, 1107], "inspir": [522, 1107], "christoph": [522, 1107], "gohlk": [522, 1107], "lfd": [522, 1107], "uci": [522, 1107], "imreg": [522, 1107], "advect": [522, 523, 1107, 1108], "trim_edg": [523, 1108], "field_list": [523, 1022, 1108], "shifted_grid": [523, 1108], "subset": [523, 1108, 1272, 1301, 1302], "mass_cent": [524, 1109, 1319], "entropy_field": [524, 1109], "compute_entropi": [524, 1109], "output_dist": [524, 1109], "besic": [524, 532, 1109, 1117, 1319], "nclass": [524, 1109], "decai": [524, 1109], "celsiu": [524, 1109, 1267], "entropi": [524, 1109], "fields_dict": [524, 1109], "figuera": [524, 1109, 1309, 1323], "ventura": [524, 1109, 1309, 1323], "grazioli": [524, 528, 1109, 1113, 1309, 1323], "germann": [524, 1109, 1309, 1323], "semi": [524, 1109], "supervis": [524, 1109], "mea": [524, 1109, 1242, 1286], "4425": [524, 1109], "4445": [524, 1109], "5194": [524, 1109, 1242, 1286], "amt": [524, 1109, 1242, 1286], "piecewis": [525, 526, 1110, 1111], "lenght": [525, 526, 1110, 1111], "kdp_dict": [525, 526, 527, 528, 529, 1110, 1111, 1112, 1113, 1114], "cg": [527, 1112], "clpf": [527, 1112], "length_scal": [527, 1112], "first_guess": [527, 1112], "finite_ord": [527, 1112], "variat": [527, 1112], "maesaka": [527, 1112, 1319], "2012": [527, 529, 1112, 1114, 1319], "monoton": [527, 530, 1112, 1115, 1283], "propag": [527, 528, 529, 1112, 1113, 1114], "notat": [527, 1112], "primari": [527, 1112], "proport": [527, 1112], "analys": [527, 528, 529, 1112, 1113, 1114], "nonlinear": [527, 1112], "conjug": [527, 1112], "gradient": [527, 1112, 1283], "broyden": [527, 1112], "fletcher": [527, 1112], "goldfarb": [527, 1112], "shanno": [527, 1112], "bfg": [527, 1112], "howev": [527, 1112, 1313, 1317, 1318, 1319], "100k": [527, 1112], "parameter": [527, 1112], "attentu": [527, 1112], "constraint": [527, 1112], "bring": [527, 1112], "guess": [527, 1112], "root": [527, 1112, 1322, 1325], "signifi": [527, 536, 1112, 1121], "everywher": [527, 1112], "exactli": [527, 1112, 1278], "avoid": [527, 1112, 1267, 1318, 1325], "converg": [527, 1112], "closer": [527, 1112], "finit": [527, 1112], "accuraci": [527, 1112], "maxit": [527, 1112], "met": [527, 1112], "achiev": [527, 1112], "somewhat": [527, 1112], "thread": [527, 1112], "cpu": [527, 1112], "multiprocess": [527, 1112], "capabl": [527, 1112, 1313, 1320], "relev": [527, 1112], "phidpf_dict": [527, 1112], "phidpr_dict": [527, 528, 529, 1112, 1113, 1114], "forward": [527, 1112, 1234, 1235], "iwanami": [527, 1112], "maki": [527, 1112], "seventh": [527, 1112], "european": [527, 1112], "confer": [527, 1112, 1309], "hydrologi": [527, 1112], "rcov": [528, 1113], "pcov": [528, 1113], "prefilter_psidp": [528, 529, 1113, 1114], "filter_opt": [528, 529, 1113, 1114], "kalman": [528, 1113], "schneeb": [528, 1113], "psidp": [528, 529, 1113, 1114], "char": [528, 529, 1113, 1114], "capit": [528, 529, 1113, 1114], "intercept": [528, 1113], "3x3": [528, 1113], "covari": [528, 1113], "4x4": [528, 1113], "filter_psidp": [528, 529, 1113, 1114], "enabl": [528, 529, 1113, 1114], "kdp_std_dict": [528, 1113], "dev": [528, 1113, 1315, 1323], "ensembl": [528, 1113], "ieee": [528, 1113], "geosci": [528, 1113], "remot": [528, 1113, 1274, 1323], "sen": [528, 1113], "52": [528, 534, 1113, 1119, 1302, 1317, 1319], "5137": [528, 1113], "5149": [528, 1113], "1109": [528, 1113], "tgr": [528, 1113], "2287017": [528, 1113], "windsiz": [529, 1114], "n_iter": [529, 1114], "interp": [529, 1114], "vulpiani": [529, 1114], "pre": [529, 1114, 1318, 1319], "ex": [529, 1114, 1283, 1323], "advantag": [529, 1114], "eat": [529, 1114], "gianfranco": [529, 1114], "mario": [529, 1114], "montopoli": [529, 1114], "luca": [529, 1114], "delli": [529, 1114], "passeri": [529, 1114], "antonio": [529, 1114], "gioia": [529, 1114], "pietro": [529, 1114], "giordano": [529, 1114], "frank": [529, 1114], "marzano": [529, 1114], "On": [529, 1114], "dual": [529, 1114], "mountain": [529, 1114], "climatol": [529, 1114, 1304], "51": [529, 1114, 1302], "405": [529, 1114], "425": [529, 1114], "05024": [529, 1114], "profile_field": [530, 1115], "height_field": [530, 1115], "3re": [530, 1115], "whole": [530, 1115], "height_dict": [530, 1115], "profile_dict": [530, 1115], "nvol": [531, 1116], "maxh": [531, 1116], "rhomin": [531, 1116], "rhomax": [531, 1116], "94": [531, 1116, 1320], "zhmin": [531, 1116], "hwindow": [531, 1116], "mlzhmin": [531, 1116], "mlzhmax": [531, 1116], "mlzdrmin": [531, 1116], "mlzdrmax": [531, 1116], "htol": [531, 1116], "ml_bottom_diff_max": [531, 1116], "time_accu_max": [531, 1116], "1800": [531, 1116, 1311], "nml_points_min": [531, 1116], "wlength": [531, 1116], "percentile_bottom": [531, 1116], "percentile_top": [531, 1116], "time_nodata_allow": [531, 1116], "3600": [531, 1116, 1311], "ml_global": [531, 1116], "aggreg": [531, 533, 1116, 1118, 1305, 1319], "ml_bottom_dif_max": [531, 1116], "percentil": [531, 1116], "stack": [531, 1116, 1322, 1323], "Its": [531, 1116], "kraus": [531, 1116], "design": [531, 1116, 1242, 1294, 1304, 1323], "prototyp": [531, 1116], "clim": [531, 534, 1116, 1119], "1354": [531, 1116], "1364": [531, 1116], "2007jamc1634": [531, 1116], "force_continu": [532, 1117], "dist_max": [532, 1117], "350": [532, 1117, 1302], "heightand": [532, 1117], "1400": [533, 1118], "4500": [533, 1118, 1311], "ns_factor": [533, 1118], "rhohv_corr_min": [533, 1118], "rhohv_nash_min": [533, 1118], "ang_iso0": [533, 1118], "age_iso0": [533, 1118], "ml_thickness_iso0": [533, 1118], "ml_memori": [533, 1118], "rhohv_field_ob": [533, 1118], "rhohv_field_theo": [533, 1118], "nse": [533, 1118], "hour": [533, 1118, 1274, 1275], "ml_found_obj": [533, 1118], "instantan": [533, 1118], "desired_angl": [534, 1119], "wanted_angl": [534, 1119], "dictonari": [534, 1119], "troemel": [534, 1119], "2529": [534, 1119], "2548": [534, 1119], "54": [534, 1119, 1275, 1306, 1318], "2344": [534, 1119], "2359": [534, 1119], "submit": [534, 1119, 1309], "technol": [534, 1119], "fm": [535, 1120], "rg": [535, 537, 1120, 1122], "nbin": [535, 1120], "110": [535, 1120], "pdf_zh_max": [535, 1120], "pdf_relh_max": [535, 1120], "sigma_zh": [535, 1120], "sigma_relh": [535, 1120], "random": [535, 537, 1120, 1122], "platykurtic_dbz": [535, 1120], "platykurtic_h_iso0": [535, 1120], "nfeatur": [535, 1120], "histogram": [535, 1120, 1278, 1313], "platykurtik": [535, 1120], "guassian": [535, 1120], "quantiz": [535, 1120], "platykurt": [535, 1120], "fm_sampl": [535, 1120], "intens": [536, 1121, 1319], "work_level": [536, 1121], "peak_rel": [536, 1121], "area_rel": [536, 1121], "medium": [536, 1121], "bkg_rad": [536, 1121], "11000": [536, 1121, 1315], "use_intens": [536, 1121], "steiner": [536, 1121, 1304], "1995": [536, 1121, 1304], "greater": [536, 1121, 1304], "bright": [536, 1121], "sgp": [536, 1121, 1199], "peaked": [536, 1121], "eclass": [536, 1121], "climatolog": [536, 1121, 1304], "gaug": [536, 1121, 1304], "1978": [536, 1121, 1304, 1319], "2007": [536, 1121, 1304], "par_var": [537, 1122], "probabl": [537, 1122, 1237, 1238, 1239, 1251, 1317], "membership": [537, 1122], "synthetic_ob": [537, 1122], "z_want": [539, 540, 1124, 1125, 1306, 1318, 1323], "valid_ray_min": [539, 1124, 1323], "brown": [539, 1124, 1267, 1323], "amount": [539, 1124, 1315, 1323], "_averag1d": [539, 1124, 1323], "idw": [539, 1124], "wexler": [539, 1124, 1323], "1968": [539, 1124, 1323], "kinemat": [539, 1124, 1323], "105": [539, 1124, 1306, 1318, 1323], "113": [539, 1124, 1302, 1323], "linespac": [540, 1125], "michelson": [540, 1125], "andersson": [540, 1125], "koistinen": [540, 1125], "collier": [540, 1125], "riedl": [540, 1125], "szturc": [540, 1125], "gjertsen": [540, 1125], "nielsen": [540, 1125], "overgaard": [540, 1125], "baltex": [540, 1125], "centr": [540, 1125], "smhi": [540, 1125], "swedish": [540, 1125], "meteorolog": [540, 1036, 1125], "hydrolog": [540, 1125], "institut": [540, 1125, 1320], "norrkop": [540, 1125], "statu": [541, 1323], "dependeci": 541, "sy": 541, "descript": [542, 590, 592, 605, 687, 758, 759, 796, 972, 995, 1019, 1032, 1126, 1211, 1259, 1309, 1323], "polish": 542, "risk": 542, "bug": [542, 1267, 1309, 1322, 1323], "prioriti": [542, 1325], "momentpm": 545, "momentm": 545, "share": 545, "extra": [545, 556, 557, 573, 574], "momentspm": 545, "momentsm": 545, "metranet_lib": 545, "keep_all_rai": 556, "physic_valu": [556, 557, 573, 574, 1317], "masked_arrai": [556, 557, 573, 574, 1311, 1320], "duplic": [556, 1267], "ret_data": [556, 557, 573, 574], "radardata": [556, 557, 573, 574], "reorder_angl": 557, "reorder": [557, 1267], "knmi_h5": [564, 1267], "file_path": 565, "properli": [573, 574, 1265, 1275], "cpi_head": 575, "3d": [577, 1318], "sinarame_h5": [582, 588], "folder": [588, 1323], "commun": [590, 1323, 1325], "interact": 605, "az_data": 736, "az_ref": 736, "el_data": 736, "el_ref": 736, "sunhit": [736, 745], "npar": [736, 745], "do_elcorr": 736, "radian": [736, 1212, 1214, 1255], "concret": 1009, "__getitem__": 1009, "__setitem__": 1009, "__delitem__": 1009, "__iter__": 1009, "__len__": 1009, "robust": [1019, 1319], "src_radar": 1020, "dest_radar": 1020, "distance_toler": [1020, 1278], "gatefilter_src": [1020, 1278], "time_toler": [1020, 1278], "kd": 1020, "easi": [1020, 1036, 1309], "src_radar_i": 1020, "src_radar_x": 1020, "destin": [1020, 1022, 1278], "src_radar_tim": 1020, "dest_radar_tim": 1020, "gate_mapp": 1020, "src": [1020, 1317, 1318, 1319], "dest": 1020, "dest_index": 1020, "radar_map": 1020, "mapped_radar": [1020, 1278], "adequ": [1020, 1278], "getter": [1021, 1023], "earth_radiu": 1027, "radar_sweep": 1031, "cart_r": 1031, "dictionnari": 1031, "sever": [1031, 1319], "signific": [1031, 1319], "coord": [1031, 1285], "cart_data": 1031, "am": [1036, 1309, 1323], "glossari": 1036, "dry": [1036, 1305, 1317], "world": [1036, 1272, 1282], "aloft": [1036, 1318, 1319], "oppos": [1036, 1286], "nwp": [1036, 1305, 1319], "why": [1036, 1323], "think": 1036, "turn": [1036, 1283, 1304, 1309], "spin": 1036, "author": [1036, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306], "randi": 1036, "chase": 1036, "dopplerchas": 1036, "american": 1036, "2022": [1036, 1242, 1274, 1286, 1304, 1309, 1323], "ametsoc": 1036, "suffix": 1137, "tmp": 1137, "temporari": 1137, "my_cwd": 1137, "getcwd": 1137, "tmpdir": 1137, "_": [1137, 1274, 1275, 1305, 1319], "txt": [1137, 1322], "wt": 1137, "assert": [1137, 1323], "isfil": 1137, "path_to_fil": 1198, "local": [1198, 1232, 1237, 1241, 1309, 1322, 1323], "site": [1199, 1269, 1274, 1275, 1302, 1312, 1315, 1317, 1318, 1319, 1322], "radarspectra": [1202, 1243, 1257], "mu": 1203, "sapr": 1204, "dp_phase_shift": [1204, 1302, 1311], "diff_phas": [1204, 1311], "differential_reflect": [1204, 1274, 1287, 1294, 1316, 1317, 1320], "rectangular": [1205, 1206], "miscellan": 1211, "depreci": 1211, "caution": 1211, "std": [1214, 1215, 1246, 1258], "convolut": 1216, "ndimag": [1216, 1294, 1295], "generic_filt": 1216, "pi": [1216, 1313], "std_dev": 1216, "radar1": [1217, 1218, 1244, 1252], "radar2": [1217, 1218, 1244, 1252], "h_tol": [1217, 1244], "coloc_gates_field": [1217, 1218], "coloc": [1217, 1218], "coloc_dict": [1217, 1218], "azi": [1217, 1218, 1233], "coloc_rad1": [1217, 1218], "distance_upper_bound": 1218, "neighbour": [1218, 1233], "ckdtree": 1218, "bound": 1218, "lin_tran": 1219, "span": 1219, "consdier": 1219, "vec1": [1220, 1222], "vec2": [1220, 1222], "pearson": 1220, "corr": [1220, 1222, 1318], "stat": 1221, "nvalid": 1221, "arr1": 1222, "arr2": 1222, "obs_data": 1223, "mod_data": 1223, "nash": 1223, "sutcliff": 1223, "nash_coeff": 1223, "target_elev": [1225, 1240], "el_tol": [1225, 1240], "radar_ppi": 1225, "epoch": [1226, 1227, 1228, 1229, 1230], "articl": 1231, "var": [1231, 1232, 1263, 1264], "nnois": [1231, 1232], "pwr_w_rai": 1232, "pct": [1232, 1238, 1250], "270436": 1232, "flat_reg_wlen": [1232, 1237, 1248], "flat_reg_var_max": [1232, 1248, 1249], "439551": 1232, "snr_thr": [1232, 1239], "769572": 1232, "ngates_final_min": 1232, "ngates_median": 1232, "83": [1232, 1319], "decibel": 1232, "flat": [1232, 1237, 1248, 1249, 1274, 1318], "inds_rai": 1232, "inds_ray_aux": 1233, "ind_rng_aux": 1233, "target_latitud": [1234, 1260], "target_longitud": [1234, 1260], "bear": 1234, "alongitudeg": 1234, "great": [1234, 1260], "circl": [1234, 1260, 1304], "known": [1234, 1320, 1323], "6371000": [1234, 1260], "calculatitude": 1234, "degress": [1234, 1260], "sphere_dist": 1236, "for_azimuth": 1236, "get_column_rai": 1236, "xarari": 1236, "prob_thr": [1237, 1238], "var_thr": 1237, "0001": 1238, "pct_out": 1238, "pfa_thr": 1239, "alarm": [1239, 1251], "xwind": 1241, "ywind": 1241, "win_std": 1241, "mute_field": [1242, 1286], "mute_threshold": [1242, 1286], "field_threshold": [1242, 1286], "discern": 1242, "mute": [1242, 1272, 1282, 1300, 1304, 1321], "tomkin": [1242, 1286, 1304], "miller": [1242, 1286], "allen": [1242, 1286], "identif": [1242, 1286], "5515": [1242, 1286], "5525": [1242, 1286], "kind": [1243, 1259, 1269, 1319], "psr_interp": 1243, "vol_d_tol": 1244, "vismin": 1244, "azmin": 1244, "azmax": 1244, "visib_field": 1244, "intersec_field": 1244, "regard": 1244, "decim": 1244, "diamet": 1244, "intersec_rad1_dict": 1244, "interval_min": [1245, 1246], "interval_max": [1245, 1246], "endpoint": [1245, 1246], "to_vpt": 1247, "verticl": 1247, "prescrib": 1248, "ivic_flat_reg_wind_len": 1248, "throw": [1250, 1251], "pfa": [1250, 1251], "1e": [1250, 1251, 1311, 1320], "matlab": 1250, "get_ivic_pct": 1250, "particularli": 1250, "pct_tabl": 1250, "snr_thr_out": 1251, "coerce_angl": [1252, 1267], "slightli": [1252, 1285, 1319], "slight": 1252, "misposit": [1252, 1267], "spectra1": 1253, "spectra2": 1253, "tup": 1254, "guarante": 1254, "broadcast": 1254, "broadcasted_arrai": 1254, "angles1": 1255, "angles2": 1255, "angle1": 1256, "angle2": 1256, "eg": 1258, "ma": [1258, 1278, 1279, 1304, 1312, 1316, 1323], "sim_vel_field": 1259, "slinear": 1259, "quadrat": 1259, "cubic": 1259, "interp1d": [1259, 1323], "sim_vel": [1259, 1323], "coverag": [1261, 1262, 1318], "11pt": 1263, "stdev": 1263, "texarrai": 1263, "pyradarobj": 1263, "tex": 1264, "single_scan": 1265, "is_vpt": 1265, "mislabel": 1265, "releas": [1266, 1309, 1312, 1315, 1318, 1322, 1323], "feb": 1266, "2024": 1266, "guid": [1266, 1309], "broken": 1266, "handl": 1267, "typo": 1267, "odim_h5_writ": 1267, "sw_version": 1267, "dealias_spectra": 1267, "led": [1267, 1325], "timestep": [1267, 1318], "wrong": 1267, "deprec": [1267, 1274, 1312, 1315, 1317, 1318], "cumtrapz": 1267, "hydro": [1267, 1305, 1317, 1319], "gecsx": [1267, 1309], "com": [1267, 1275, 1295, 1322, 1323, 1325], "pyart": [1267, 1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1325], "commit": [1267, 1323], "57664ce7b27c27af03f631fcd0e92a2": 1267, "linalg": 1267, "lstsq": 1267, "config": [1267, 1311, 1318, 1319, 1325], "bias_and_nois": 1267, "extract_sweeps_skyecho": 1267, "aux_io": [1267, 1317], "knmi": 1267, "h5": 1267, "proprietari": 1267, "writer": [1267, 1309], "latlon": 1267, "cross_sect": 1267, "gridmapdisplai": [1267, 1272, 1282, 1284, 1300, 1304, 1315, 1318, 1321], "_rsl_interfac": 1267, "pyx": 1267, "read_product": [1267, 1317], "behaviour": 1267, "conv_strat_yut": [1267, 1304], "pull": [1267, 1275, 1309, 1323], "juhi24": 1267, "patch": [1267, 1294], "radar_util": 1267, "register_cmap": 1267, "join_radar": [1267, 1318], "colobar": [1267, 1285], "graph": [1267, 1269, 1270, 1274, 1275, 1278, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1311, 1312, 1313, 1315, 1316, 1318, 1319], "_label_axes_latlon": 1267, "minor": [1267, 1312, 1315, 1318], "rad4alp_gif_read": 1267, "imageio": 1267, "nrow": [1267, 1283], "ncol": 1267, "flip": [1267, 1318], "agre": 1267, "cpc": 1267, "plot_xsect": [1267, 1299, 1300, 1321], "radardisplai": [1267, 1269, 1270, 1283, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1303, 1305, 1318, 1319], "rainforest": 1267, "compute_refl_time_avg": 1267, "crash": [1267, 1317], "radar_": 1267, "care": 1267, "read_odim_h5": 1267, "guidelin": 1267, "prohibit": 1267, "write_odim_grid": 1267, "interfac": 1267, "setuptool": 1267, "interpol_field": 1267, "northernmost": 1267, "download": [1269, 1270, 1272, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1323, 1325], "runner": [1269, 1274, 1275], "micromamba": [1269, 1274, 1275], "env": [1269, 1274, 1275, 1309, 1312, 1315, 1317, 1318, 1319, 1325], "lib": [1269, 1274, 1275, 1312, 1315, 1317, 1318, 1319, 1322], "python3": [1269, 1274, 1275, 1317, 1318, 1319], "packag": [1269, 1274, 1275, 1309, 1312, 1315, 1317, 1318, 1319, 1322, 1323, 1325], "fromnumer": [1269, 1319], "771": 1269, "userwarn": [1269, 1274, 1275, 1317, 1318, 1319], "maskedarrai": [1269, 1319], "kth": [1269, 1319], "__doc__": [1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1304], "jonathan": [1269, 1270, 1279, 1280, 1287, 1288, 1290, 1292, 1296, 1299, 1325], "helmu": [1269, 1270, 1279, 1280, 1287, 1288, 1290, 1292, 1296, 1299, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323, 1325], "jhelmu": [1269, 1270, 1279, 1280, 1287, 1288, 1290, 1292, 1296, 1299], "anl": [1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1292, 1294, 1295, 1296, 1297, 1299, 1302, 1303], "licens": [1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1323], "bsd": [1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1323], "claus": [1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1323], "pyplot": [1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319], "plt": [1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319], "get_test_data": [1269, 1270, 1278, 1279, 1280, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304], "sgpcsaprsurcmaci7": [1269, 1312], "c0": [1269, 1292, 1293, 1297, 1312], "20110520": [1269, 1312], "095101": [1269, 1312], "read_cfradi": [1269, 1278, 1280, 1284, 1292, 1293, 1297, 1305, 1306, 1318, 1319], "pop": 1269, "specific_attenu": [1269, 1302, 1305, 1311, 1316, 1319], "corrected_reflectivity_horizont": [1269, 1280, 1284, 1302, 1311], "calculate_attenu": 1269, "add_field": [1269, 1270, 1304, 1305, 1312, 1313, 1318, 1319, 1323], "figsiz": [1269, 1270, 1274, 1275, 1278, 1283, 1284, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1303, 1304, 1305, 1312, 1313, 1315, 1316, 1318, 1319], "ax1": [1269, 1270, 1284, 1298, 1299, 1304], "add_subplot": [1269, 1270, 1279, 1280, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1299], "131": [1269, 1304], "raw": [1269, 1270, 1309, 1310, 1318], "ax2": [1269, 1270, 1278, 1284, 1298, 1299, 1303, 1304, 1313], "132": [1269, 1304], "ax3": [1269, 1270, 1298, 1304], "133": [1269, 1302, 1304], "suptitl": [1269, 1270, 1297, 1306, 1318], "fontsiz": [1269, 1270, 1283, 1285, 1294, 1295], "minut": [1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1318], "162": [1269, 1271, 1321], "jupyt": [1269, 1270, 1272, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1317, 1325], "notebook": [1269, 1270, 1272, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1312, 1315, 1316, 1323, 1325], "plot_attenu": [1269, 1271, 1321], "ipynb": [1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306], "galleri": [1269, 1270, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1321], "sphinx": [1269, 1270, 1272, 1274, 1275, 1278, 1279, 1280, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306], "ial": 1270, "095636": [1270, 1313], "sonde_fil": 1270, "sgpinterpolatedsondec1": 1270, "c1": [1270, 1316], "20110510": 1270, "000000": 1270, "cdf": 1270, "read_arm_sonde_vap": 1270, "exclude_transit": [1270, 1279, 1280, 1284, 1303], "exclude_invalid": 1270, "exclude_outsid": 1270, "80": [1270, 1298, 1303], "dealias_data": 1270, "dealias_region_bas": [1270, 1313, 1318], "corrected_veloc": [1270, 1306, 1313, 1316, 1318], "sixth": 1270, "221": [1270, 1287, 1318], "223": [1270, 1287, 1318], "ax4": 1270, "224": [1270, 1287, 1318], "603": [1270, 1271, 1321], "plot_dealia": [1270, 1271, 1321], "765": 1271, "mem": [1271, 1276, 1281, 1300, 1307, 1308, 1321], "mb": [1271, 1276, 1281, 1300, 1307, 1308, 1321], "00": [1271, 1276, 1281, 1300, 1307, 1308, 1321], "varieti": [1272, 1273, 1323], "aw": [1272, 1273, 1275, 1276, 1321], "gatemapp": [1272, 1277, 1281, 1321], "panel": [1272, 1282, 1300, 1321], "examples_python": 1272, "zip": [1272, 1275, 1283, 1309], "examples_jupyt": 1272, "next": 1274, "quick": 1274, "grover": [1274, 1278, 1283, 1284, 1289, 1297, 1302, 1303], "mgrover": [1274, 1278, 1283, 1284, 1289, 1297, 1302, 1303], "ccr": [1274, 1275, 1278, 1284, 1285, 1291, 1298, 1302, 1304, 1312, 1313, 1316, 1318, 1319], "let": [1274, 1275, 1278, 1283, 1285, 1302, 1304, 1311, 1313, 1315, 1316, 1318, 1319, 1320, 1323, 1325], "administr": 1274, "our": [1274, 1275, 1278, 1283, 1284, 1302, 1304, 1319], "filepath": [1274, 1275], "level2": [1274, 1275, 1286, 1304], "bucket": 1274, "organ": 1274, "year": [1274, 1275, 1323], "month": [1274, 1275], "radarsit": [1274, 1275], "_v06": 1274, "houston": 1274, "texa": 1274, "khgx": 1274, "march": 1274, "1201": 1274, "utc": [1274, 1275, 1297], "aws_nexrad_level2_fil": [1274, 1275], "03": [1274, 1300, 1307, 1321], "khgx20220322_120125_v06": 1274, "read_nexrad_arch": [1274, 1275, 1286, 1287, 1288, 1304], "summari": 1274, "differential_phas": [1274, 1287, 1316, 1320], "spectrum_width": [1274, 1316, 1317, 1320], "clutter_filter_power_remov": 1274, "cross_correlation_ratio": [1274, 1286, 1287, 1304, 1316, 1320], "radarmapdisplai": [1274, 1275, 1278, 1285, 1291, 1302, 1311, 1312, 1313, 1315, 1316, 1319], "subplot": [1274, 1278, 1283, 1284, 1285, 1297, 1302, 1303, 1304, 1305, 1306, 1313, 1318, 1319], "121": [1274, 1278, 1284, 1303], "plot_ppi_map": [1274, 1275, 1278, 1285, 1291, 1302, 1312, 1313, 1316, 1319], "relect": 1274, "z_": [1274, 1278, 1285], "v_": 1274, "70": [1274, 1278, 1284], "mpl": [1274, 1305, 1312, 1315, 1317, 1318, 1319], "gridlin": [1274, 1285], "451": 1274, "xlabels_top": 1274, "top_label": [1274, 1285], "toggl": 1274, "ylabels_right": 1274, "right_label": [1274, 1285], "n0u": 1274, "noq": 1274, "level3": 1274, "aws_nexrad_level3_velocity_fil": 1274, "hgx_n0u_2022_03_22_12_01_25": 1274, "aws_nexrad_level3_reflectivity_fil": 1274, "hgx_n0q_2022_03_22_12_01_25": 1274, "read_nexrad_level3": 1274, "radar_level3_veloc": 1274, "radar_level3_reflect": 1274, "confirm": [1274, 1311], "setup": [1274, 1278, 1283, 1284, 1289, 1302, 1309, 1322], "reflectivity_displai": 1274, "velocity_displai": 1274, "597": [1274, 1276, 1321], "plot_nexrad_data_aw": [1274, 1276, 1321], "zachari": 1275, "sherman": 1275, "zsherman": [1275, 1325], "tendenc": 1275, "usual": [1275, 1323], "gz": 1275, "handford": 1275, "ca": 1275, "khnx": 1275, "juli": [1275, 1318], "0203": 1275, "v06": 1275, "khnx20060724_020338": 1275, "nexrad_arch": 1275, "231": 1275, "14": [1275, 1283, 1285, 1318, 1320], "ref": [1275, 1298], "now": [1275, 1278, 1283, 1285, 1302, 1304, 1311, 1313, 1318, 1319, 1322], "clearli": [1275, 1318, 1319], "lucki": 1275, "31417": 1275, "119": [1275, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "63111": 1275, "plote": [1275, 1291], "central_latitud": [1275, 1291, 1304, 1312], "central_longitud": [1275, 1291, 1304, 1312], "__init__": [1275, 1323], "241": [1275, 1279], "downloadwarn": 1275, "naturalearth": 1275, "amazonaw": 1275, "10m_physic": 1275, "ne_10m_coastlin": 1275, "10m_cultur": 1275, "ne_10m_admin_1_states_provinces_lin": 1275, "125": [1275, 1276, 1321], "plot_older_nexrad_data_aw": [1275, 1276, 1321], "722": 1276, "09": [1276, 1300, 1304, 1321], "bobbi": 1278, "jackson": 1278, "rjackson": 1278, "filterwarn": 1278, "xsapr": [1278, 1280, 1284], "xsapr_sw_fil": [1278, 1280, 1284], "swx_20120520_0641": [1278, 1280, 1283, 1284, 1285, 1289, 1299, 1302, 1303, 1304], "xsapr_se_fil": [1278, 1280, 1284], "sex_20120520_0641": [1278, 1280, 1284], "radar_sw": [1278, 1280, 1284], "radar_s": [1278, 1280, 1284], "southwestern": 1278, "southeastern": 1278, "gmapper": 1278, "radar_sw_mapped_to_radar_s": 1278, "notic": [1278, 1285], "disp1": 1278, "37": [1278, 1281, 1302, 1306, 1316, 1317, 1318, 1321], "98": [1278, 1302, 1306, 1316, 1318], "arang": [1278, 1291, 1294, 1295, 1302, 1305, 1306, 1317, 1318, 1319, 1323], "96": [1278, 1316], "disp2": 1278, "remap": [1278, 1317], "difficult": 1278, "eyebal": 1278, "fortun": 1278, "mind": [1278, 1323], "cours": [1278, 1323], "reflectivity_se_radar": 1278, "reflectivity_sw_radar": 1278, "reflectivity_differ": 1278, "add_field_lik": 1278, "reflectivity_bia": 1278, "111": [1278, 1279, 1280, 1285, 1288, 1289, 1290, 1294, 1295, 1296, 1302], "pyart_bal": [1278, 1297, 1313], "southwest": 1278, "xspar": 1278, "southeast": 1278, "neccessarili": 1278, "incl_gat": 1278, "argwher": 1278, "refl_s": 1278, "refl_sw": 1278, "values_without_mask": 1278, "logical_and": 1278, "flatten": 1278, "hist": [1278, 1313], "histogram2d": 1278, "masked_wher": [1278, 1316], "meshgrid": 1278, "pyart_homeyerrainbow": [1278, 1283, 1284, 1285, 1290, 1293, 1297, 1298, 1303], "log_": 1278, "xlabel": [1278, 1292, 1293, 1313], "ylabel": [1278, 1292, 1293, 1313], "915": [1278, 1281, 1321], "plot_compare_two_radars_gatemapp": [1278, 1281, 1321], "110635": [1279, 1290, 1315], "123000": 1279, "546": [1279, 1281, 1321], "plot_map_one_radar_to_grid": [1279, 1281, 1321], "xsarp": [1280, 1292, 1293], "gatefilter_s": [1280, 1284], "exclude_abov": [1280, 1284, 1313], "gatefilter_sw": [1280, 1284], "201": [1280, 1304, 1315], "57861": [1280, 1284], "363611": [1280, 1284], "48": 1280, "662": [1280, 1281, 1321], "plot_map_two_radars_to_grid": [1280, 1281, 1321], "visual": [1283, 1286, 1294, 1302, 1319], "linspac": [1283, 1286, 1304, 1311, 1323], "256": [1283, 1305, 1317, 1319], "vstack": 1283, "def": [1283, 1323], "plot_color_gradi": 1283, "cmap_categori": 1283, "cmap_list": 1283, "len": [1283, 1297, 1305, 1311, 1317, 1319], "figh": 1283, "subplots_adjust": [1283, 1292, 1293], "set_titl": [1283, 1304], "cmap_nam": 1283, "auto": [1283, 1317, 1318], "pyart_": 1283, "va": 1283, "transax": 1283, "spine": 1283, "set_axis_off": 1283, "colorblind": 1283, "friendli": 1283, "langrainbow12": 1283, "homeyerrainbow": 1283, "balanc": 1283, "chasespectr": 1283, "spectralextend": 1283, "perceptu": [1283, 1286], "light": [1283, 1305, 1319], "bu10": 1283, "bu7": 1283, "gray5": 1283, "gray9": 1283, "diverg": 1283, "meaning": 1283, "bluebrown11": 1283, "brbu10": 1283, "brbu12": 1283, "budor12": 1283, "budor18": 1283, "budrd12": 1283, "budrd18": 1283, "bugr14": 1283, "bugy8": 1283, "buor10": 1283, "buor12": 1283, "buor8": 1283, "buorr14": 1283, "grmg16": 1283, "rdylbu11b": 1283, "There": [1283, 1319, 1322, 1325], "bluebrown10": 1283, "nwsref": 1283, "carbone11": 1283, "carbone17": 1283, "carbone42": 1283, "cat12": 1283, "ewilson17": 1283, "nwsvel": 1283, "nws_spw": 1283, "pd17": 1283, "rrate11": 1283, "refdiff": 1283, "scook18": 1283, "stepseq25": 1283, "symgray12": 1283, "theodore16": 1283, "wild25": 1283, "spectral_r": 1283, "rememb": 1283, "front": [1283, 1318], "shown": 1283, "plot_choose_a_colormap": [1283, 1300, 1321], "181": 1284, "plot_grid": [1284, 1298, 1304, 1315, 1318], "scatter": [1284, 1302], "tab": 1284, "blue": [1284, 1294, 1295, 1319], "black": [1284, 1302], "legend": 1284, "plot_cross_sect": [1284, 1300, 1321], "510": [1284, 1300, 1321], "joe": 1285, "brien": 1285, "obrienj": 1285, "perfect": 1285, "overlap": [1285, 1294], "gl": 1285, "draw_label": 1285, "grai": [1285, 1286, 1317, 1319], "gca": 1285, "set_major_loc": 1285, "nullloc": 1285, "xlabel_styl": 1285, "ylabel_styl": 1285, "delet": [1285, 1323], "del": 1285, "manipul": [1285, 1310], "axsb": 1285, "ppi_map": 1285, "cbar": 1285, "set_label": 1285, "set_tick": 1285, "159": [1285, 1300, 1321], "plot_modify_colorbar": [1285, 1300, 1321], "reduc": [1286, 1322], "promin": 1286, "deemphas": 1286, "depict": 1286, "ultim": [1286, 1319], "misinterpret": 1286, "laura": [1286, 1304], "lmtomkin": [1286, 1304], "ncsu": [1286, 1304], "citat": 1286, "mcolor": [1286, 1304], "nexrad_fil": [1286, 1304], "2020": [1286, 1309, 1322, 1323], "kbgm": 1286, "kbgm20200207_132642_v06": 1286, "image_mute_radar": [1286, 1304], "magma_cmap": 1286, "get_cmap": [1286, 1304], "magma_r": [1286, 1304], "grays_cmap": 1286, "gray_r": 1286, "nonmuted_cmap": 1286, "linearsegmentedcolormap": [1286, 1304], "from_list": [1286, 1304], "muted_cmap": 1286, "nonmuted_reflect": [1286, 1304], "muted_reflect": 1286, "300": [1286, 1287, 1311], "set_aspect": [1286, 1304, 1305, 1318, 1319], "503": [1286, 1300, 1321], "plot_nexrad_image_muted_reflect": [1286, 1300, 1321], "katx20130717_195021_v06": [1287, 1320], "885": [1287, 1300, 1321], "plot_nexrad_multiple_mo": [1287, 1300, 1321], "level2_katx_20130717_1950": 1288, "ar2v": 1288, "super": [1288, 1312, 1315, 1318], "plot_range_r": [1288, 1289, 1291], "901": [1288, 1300, 1321], "plot_nexrad_reflect": [1288, 1300, 1321], "main": [1289, 1323], "plot_cross_hair": 1289, "392": [1289, 1300, 1321], "plot_ppi_cfradi": [1289, 1300, 1321], "150": [1290, 1313], "252": [1290, 1295, 1300, 1321], "plot_ppi_mdv": [1290, 1300, 1321], "jason": [1291, 1298], "hemeding": [1291, 1298], "nsaxsaprppic1": 1291, "a1": 1291, "20140201": 1291, "184802": 1291, "157": 1291, "156": 1291, "71": 1291, "158": 1291, "154": 1291, "69": [1291, 1306, 1318], "72": 1291, "40km": 1291, "plot_line_xi": 1291, "plot_point": 1291, "608": [1291, 1300, 1321], "plot_ppi_with_r": [1291, 1300, 1321], "sgpxsaprrhicmaci5": [1292, 1293, 1297], "20110524": [1292, 1293, 1297], "015604_nc4": [1292, 1293, 1297], "instrument_nam": [1292, 1293, 1320], "hspace": [1292, 1293], "agl": 1292, "fac": 1292, "nplot": [1292, 1293, 1297], "snum": 1292, "hsrhi": [1292, 1293], "3f": [1292, 1293], "time_start": 1292, "num2dat": 1292, "only_use_cftime_datetim": 1292, "only_use_python_datetim": 1292, "figure_titl": 1292, "isoformat": 1292, "926": [1292, 1300, 1321], "plot_rhi_cfradi": [1292, 1300, 1321], "404": [1293, 1300, 1321], "plot_rhi_cfradial_singlescan": [1293, 1300, 1321], "differnenti": 1294, "cori": [1294, 1295], "weber": [1294, 1295], "cweber": [1294, 1295], "220629": 1294, "white": 1294, "matplolib": 1294, "visabl": 1294, "border": [1294, 1319], "flow": [1294, 1317], "paramt": 1294, "compens": 1294, "nearli": 1294, "00015": 1294, "veri": [1294, 1304, 1318, 1319], "antialias": [1294, 1295], "moir": 1294, "get_start": [1294, 1295], "get_end": [1294, 1295], "blur": 1294, "nice": [1294, 1322], "arbirarli": 1294, "impact": 1294, "gaussian_filt": [1294, 1295], "levels_rain": 1294, "levels_ic": 1294, "contours_ic": 1294, "contours_rain": 1294, "red": [1294, 1295], "fmt": [1294, 1295], "0000": [1294, 1295], "clabel": [1294, 1295], "inlin": [1294, 1295, 1317], "711": [1294, 1300, 1321], "plot_rhi_contours_differential_reflect": [1294, 1300, 1321], "spyi": 1295, "034142": 1295, "ramp": 1295, "blob": 1295, "pyart_budrd18": 1295, "comment": [1295, 1320], "coutour": 1295, "solid": 1295, "dot": 1295, "major": [1295, 1318], "axhlin": 1295, "dash": 1295, "axvlin": 1295, "00b4ff": 1295, "ff6800": 1295, "set_ylabel": [1295, 1306, 1318], "cp": 1295, "plot_rhi_data_overlai": [1295, 1300, 1321], "110041": 1296, "956": [1296, 1300, 1321], "plot_rhi_mdv": [1296, 1300, 1321], "fields_to_plot": 1297, "plot_num": 1297, "grab": 1297, "u00b0": 1297, "848": [1297, 1300, 1321], "plot_rhi_two_panel": [1297, 1300, 1321], "20110520100000_nexrad_grid": 1298, "read_grid": 1298, "map_panel_ax": 1298, "x_cut_panel_ax": 1298, "y_cut_panel_ax": 1298, "add_ax": [1298, 1318], "plot_crosshair": 1298, "plot_longitude_slic": 1298, "set_ylim": [1298, 1305, 1318, 1319], "set_xlim": [1298, 1305, 1318, 1319], "plot_latitude_slic": [1298, 1315, 1318], "632": [1298, 1300, 1321], "plot_three_panel_gridmapdisplai": [1298, 1300, 1321], "225": 1299, "270": [1299, 1318, 1323], "xsect": 1299, "cross_section_ppi": [1299, 1318], "211": 1299, "212": 1299, "tight_layout": 1299, "408": [1299, 1300, 1321], "57": [1300, 1304], "384": 1300, "04": [1300, 1302, 1321], "maxwel": [1302, 1303], "site_lon": 1302, "73": 1302, "site_lat": 1302, "latitdu": 1302, "pathcollect": 1302, "0x7fa7c85a44a0": 1302, "columnsect": 1302, "get_field_loc": 1302, "2kb": 1302, "176b": 1302, "818e": 1302, "88": 1302, "recalculated_diff_phas": [1302, 1311], "555": 1302, "2778": 1302, "unf_dp_phase_shift": [1302, 1311], "88b": 1302, "688": 1302, "145": 1302, "144": 1302, "diff_reflect": [1302, 1311], "95": [1302, 1320], "datetime64": 1302, "8b": 1302, "20t06": 1302, "distance_from_radar": 1302, "233": 1302, "545": 1302, "latitude_of_loc": 1302, "longitude_of_loc": 1302, "line2d": 1302, "0x7fa7c853d700": 1302, "166": [1302, 1307, 1321], "plot_column_subset": [1302, 1307, 1321], "compz": 1303, "composite_reflect": 1303, "composite_displai": 1303, "489": [1303, 1307, 1321], "plot_composite_reflect": [1303, 1307, 1321], "classifc": 1304, "summer": 1304, "ian": 1304, "footprint": 1304, "yield": 1304, "smoother": 1304, "rescal": 1304, "simpli": [1304, 1313, 1315, 1322, 1323, 1325], "plot_convstrat_schem": 1304, "pick": 1304, "radii": 1304, "dilat": 1304, "event": [1304, 1318, 1319], "extract_sweep": [1304, 1306], "convsf_mask": 1304, "masked_equ": 1304, "convsf": 1304, "magma_r_cmap": 1304, "ref_cmap": 1304, "albersequalarea": 1304, "convsf_und": 1304, "overestim": 1304, "convsf_ov": 1304, "uncertainti": 1304, "underest": 1304, "overest": 1304, "ktbw": 1304, "ktbw20220928_190142_v06": 1304, "rasumussen": 1304, "reflecit": 1304, "kokx": 1304, "kokx20210207_161413_v06": 1304, "nonmuted_ref": 1304, "masked_invalid": 1304, "nonmuted_ref_linear": 1304, "mm6": 1304, "m3": 1304, "snow_rat": 1304, "67": 1304, "snow_rate_dict": 1304, "standard_nam": [1304, 1312, 1320], "hr": 1304, "40500": 1304, "purpos": 1304, "034": 1304, "ccotd": 1304, "rasmussen": 1304, "dixon": 1304, "vasiloff": 1304, "hage": 1304, "knight": 1304, "vivekanandan": 1304, "xu": 1304, "nowcast": 1304, "042": 1304, "3c0020": 1304, "snuart": 1304, "426": [1304, 1307, 1321], "plot_convective_stratiform": [1304, 1307, 1321], "daniel": [1305, 1306], "open_radar_data": [1305, 1306], "fetch": [1305, 1306, 1323], "mll2217907250u": [1305, 1317], "003": [1305, 1319], "preinterpol": 1305, "20220628072500_savevol_cosmo_lookup_temp": 1305, "nwp_temp": 1305, "calculate_attenuation_zphi": [1305, 1319], "uncorrected_differential_phas": [1305, 1317, 1319], "pia": [1305, 1319], "pida": [1305, 1319], "corrected_reflect": [1305, 1316, 1319], "corrected_differential_reflect": [1305, 1316, 1319], "kdp_maesaka": [1305, 1319], "specific_differential_phas": [1305, 1316, 1319], "hydroclass_semisupervis": [1305, 1319], "uncorrected_cross_correlation_ratio": [1305, 1317, 1319], "radar_echo_classif": [1305, 1319], "boundarynorm": [1305, 1317, 1319], "crystal": [1305, 1319], "rime": [1305, 1319], "particl": [1305, 1319], "hail": [1305, 1319], "graupel": [1305, 1319], "770": [1305, 1307, 1321], "plot_hydrometeor": [1305, 1307, 1321], "2682": [1306, 1318], "5272": [1306, 1318], "7815": [1306, 1318], "10403": [1306, 1318], "14259": [1306, 1318], "18533": [1306, 1318], "22800": [1306, 1311, 1318], "19": [1306, 1318, 1320], "27060": [1306, 1311, 1318], "31310": [1306, 1318], "35549": [1306, 1318], "39777": [1306, 1318], "43991": [1306, 1318], "50263": [1306, 1318], "58621": [1306, 1318], "71002": [1306, 1318], "87118": [1306, 1318], "106740": [1306, 1318], "125476": [1306, 1318], "143293": [1306, 1318], "143": [1306, 1318], "160000": [1306, 1318], "mla2119412050u": 1306, "zlevel": [1306, 1318], "u_allsweep": 1306, "v_allsweep": 1306, "idx": 1306, "radar_1sweep": 1306, "vad_brown": [1306, 1318], "u_avg": 1306, "nanmean": [1306, 1318], "v_avg": 1306, "rad2deg": [1306, 1318], "sharei": [1306, 1318, 1319], "set_xlabel": [1306, 1318], "185": [1306, 1307, 1321], "plot_vad": [1306, 1307, 1321], "035": 1307, "000": 1308, "cookbook": [1309, 1324], "depth": [1309, 1320, 1323], "conceptu": 1309, "understand": 1309, "search": [1309, 1322], "demonstr": 1309, "toolkit": [1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320], "basi": 1309, "pyrad": [1309, 1317, 1318, 1319, 1323], "exploit": 1309, "prefer": [1309, 1322], "submodul": [1309, 1315], "superproject": 1309, "propos": 1309, "bleed": 1309, "among": 1309, "europ": 1309, "fmi": 1309, "windcub": 1309, "leospher": 1309, "research": [1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "facil": [1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "colli": [1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "languag": [1309, 1323], "e25": [1309, 1323], "5334": [1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "jor": [1309, 1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "lainer": [1309, 1323], "schauweck": [1309, 1323], "framework": [1309, 1323], "330": [1309, 1323], "abil": [1309, 1325], "ii": [1309, 1320], "sophist": 1309, "tutori": 1309, "erad": 1309, "easiest": [1309, 1323], "latest": [1309, 1323], "januari": 1309, "1st": 1309, "anaconda": [1309, 1322, 1323], "miniconda": [1309, 1323], "environ": [1309, 1319, 1322, 1324], "yml": [1309, 1325], "Or": 1309, "basic": [1309, 1310, 1312], "pyart_env": [1309, 1312, 1315, 1325], "forg": [1309, 1322, 1323, 1325], "pyart_mch": [1309, 1322, 1323, 1325], "termin": [1309, 1323, 1325], "prompt": [1309, 1323], "wish": 1309, "unreleas": 1309, "clone": [1309, 1322], "git": [1309, 1322, 1323, 1325], "repositori": [1309, 1322, 1323, 1325], "Then": [1309, 1322, 1323], "scientif": [1309, 1323], "linux": [1309, 1323, 1325], "mac": 1309, "charg": 1309, "resourc": [1309, 1322], "lassen": 1309, "radtec": 1309, "rsl_path": [1309, 1322], "usr": 1309, "anaconda3": [1309, 1312, 1315, 1317, 1318, 1319, 1322, 1325], "h5py": 1309, "solver": 1309, "fastest": 1309, "cbc": 1309, "glpk": 1309, "coincbc": [1309, 1322, 1325], "coin_install_dir": [1309, 1322, 1325], "wradlib": 1309, "pytest": [1309, 1322, 1323], "discuss": 1309, "appreci": 1309, "sometim": 1311, "might": [1311, 1325], "hypothet": 1311, "doesn": 1311, "partli": [1311, 1312, 1313, 1315, 1316, 1317, 1320], "depart": [1311, 1312, 1313, 1315, 1316, 1317, 1320], "energi": [1311, 1312, 1313, 1315, 1316, 1317, 1320], "radiat": [1311, 1312, 1313, 1315, 1316, 1317, 1320, 1323], "offic": [1311, 1312, 1313, 1315, 1316, 1317, 1320], "scienc": [1311, 1312, 1313, 1315, 1316, 1317, 1320], "cite": [1311, 1312, 1313, 1315, 1316, 1317, 1320], "jj": [1311, 1312, 1313, 1315, 1316, 1317, 1320], "sm": [1311, 1312, 1313, 1315, 1316, 1317, 1320], "test_radar": [1311, 1323], "idea": [1311, 1313, 1318, 1319], "dict_kei": [1311, 1316], "rain_rate_a": [1311, 1316], "time_coverage_start": [1311, 1320], "time_coverage_end": 1311, "volume_numb": 1311, "platform_typ": 1311, "instrument_typ": 1311, "primary_axi": 1311, "667": 1311, "make_empty_ppi_radar": 1311, "59416667": 1311, "As": [1311, 1313, 1315, 1316, 1323], "isn": 1311, "120": [1311, 1319], "240": 1311, "420": 1311, "480": 1311, "540": 1311, "660": 1311, "720": 1311, "780": 1311, "840": 1311, "900": 1311, "960": 1311, "1020": 1311, "1080": 1311, "1140": 1311, "1200": 1311, "1260": 1311, "1320": 1311, "1380": [1311, 1319], "1440": 1311, "1500": 1311, "1560": 1311, "1620": 1311, "1680": 1311, "1740": 1311, "1860": 1311, "1920": 1311, "1980": 1311, "2040": 1311, "2100": 1311, "2160": 1311, "2220": 1311, "2280": 1311, "2340": 1311, "2400": 1311, "2460": 1311, "2520": 1311, "2580": 1311, "2640": [1311, 1319], "2700": 1311, "2760": 1311, "2820": 1311, "2880": 1311, "2940": 1311, "3060": 1311, "3120": 1311, "3180": 1311, "3240": 1311, "3300": 1311, "3360": 1311, "3420": 1311, "3480": 1311, "3540": 1311, "3660": 1311, "3720": 1311, "3780": 1311, "3840": 1311, "3900": 1311, "3960": 1311, "4020": 1311, "4080": 1311, "4140": 1311, "4200": [1311, 1319], "4260": 1311, "4320": 1311, "4380": 1311, "4440": 1311, "4560": 1311, "4620": 1311, "4680": 1311, "4740": 1311, "4800": 1311, "4860": 1311, "4920": 1311, "4980": 1311, "5040": 1311, "5100": 1311, "5160": 1311, "5220": 1311, "5280": 1311, "5340": 1311, "5400": 1311, "5460": 1311, "5520": 1311, "5580": 1311, "5640": 1311, "5700": 1311, "5760": 1311, "5820": 1311, "5880": 1311, "5940": 1311, "6060": 1311, "6120": 1311, "6180": 1311, "6240": 1311, "6300": 1311, "6360": 1311, "6420": 1311, "6480": 1311, "6540": 1311, "6600": 1311, "6660": 1311, "6720": 1311, "6780": 1311, "6840": 1311, "6900": 1311, "6960": 1311, "7020": 1311, "7080": 1311, "7140": 1311, "7200": [1311, 1320], "7260": 1311, "7320": 1311, "7380": 1311, "7440": 1311, "7500": 1311, "7560": 1311, "7620": 1311, "7680": 1311, "7740": 1311, "7800": 1311, "7860": 1311, "7920": 1311, "7980": 1311, "8040": 1311, "8100": 1311, "8160": 1311, "8220": 1311, "8280": 1311, "8340": 1311, "8400": 1311, "8460": 1311, "8520": 1311, "8580": 1311, "8640": 1311, "8700": 1311, "8760": 1311, "8820": 1311, "8880": 1311, "8940": 1311, "9000": [1311, 1315], "9060": 1311, "9120": 1311, "9180": 1311, "9240": 1311, "9300": 1311, "9360": 1311, "9420": 1311, "9480": 1311, "9540": 1311, "9600": 1311, "9660": 1311, "9720": 1311, "9780": 1311, "9840": 1311, "9900": 1311, "9960": 1311, "10020": 1311, "10080": 1311, "10140": 1311, "10200": 1311, "10260": 1311, "10320": 1311, "10380": 1311, "10440": 1311, "10500": 1311, "10560": 1311, "10620": 1311, "10680": 1311, "10740": 1311, "10800": 1311, "10860": 1311, "10920": 1311, "10980": 1311, "11040": 1311, "11100": 1311, "11160": 1311, "11220": 1311, "11280": 1311, "11340": 1311, "11400": 1311, "11460": 1311, "11520": 1311, "11580": 1311, "11640": 1311, "11700": 1311, "11760": 1311, "11820": 1311, "11880": 1311, "11940": 1311, "12000": [1311, 1315], "12060": 1311, "12120": 1311, "12180": 1311, "12240": 1311, "12300": 1311, "12360": 1311, "12420": 1311, "12480": 1311, "12540": 1311, "12600": 1311, "12660": 1311, "12720": 1311, "12780": 1311, "12840": 1311, "12900": 1311, "12960": 1311, "13020": 1311, "13080": 1311, "13140": 1311, "13200": 1311, "13260": 1311, "13320": 1311, "13380": 1311, "13440": 1311, "13500": 1311, "13560": 1311, "13620": 1311, "13680": 1311, "13740": 1311, "13800": 1311, "13860": 1311, "13920": 1311, "13980": 1311, "14040": 1311, "14100": 1311, "14160": 1311, "14220": 1311, "14280": 1311, "14340": 1311, "14400": 1311, "14460": 1311, "14520": 1311, "14580": 1311, "14640": 1311, "14700": 1311, "14760": 1311, "14820": 1311, "14880": 1311, "14940": 1311, "15060": 1311, "15120": 1311, "15180": 1311, "15240": 1311, "15300": 1311, "15360": 1311, "15420": 1311, "15480": 1311, "15540": 1311, "15600": 1311, "15660": 1311, "15720": 1311, "15780": 1311, "15840": 1311, "15900": 1311, "15960": 1311, "16020": 1311, "16080": 1311, "16140": 1311, "16200": 1311, "16260": 1311, "16320": 1311, "16380": 1311, "16440": 1311, "16500": 1311, "16560": 1311, "16620": 1311, "16680": 1311, "16740": 1311, "16800": 1311, "16860": 1311, "16920": 1311, "16980": 1311, "17040": 1311, "17100": 1311, "17160": 1311, "17220": 1311, "17280": 1311, "17340": 1311, "17400": 1311, "17460": 1311, "17520": 1311, "17580": 1311, "17640": 1311, "17700": 1311, "17760": 1311, "17820": 1311, "17880": 1311, "17940": 1311, "18000": [1311, 1315], "18060": 1311, "18120": 1311, "18180": 1311, "18240": 1311, "18300": 1311, "18360": 1311, "18420": 1311, "18480": 1311, "18540": 1311, "18600": 1311, "18660": 1311, "18720": 1311, "18780": 1311, "18840": 1311, "18900": 1311, "18960": 1311, "19020": 1311, "19080": 1311, "19140": 1311, "19200": 1311, "19260": 1311, "19320": 1311, "19380": 1311, "19440": 1311, "19500": 1311, "19560": 1311, "19620": 1311, "19680": 1311, "19740": 1311, "19800": 1311, "19860": 1311, "19920": 1311, "19980": 1311, "20040": 1311, "20100": 1311, "20160": 1311, "20220": 1311, "20280": 1311, "20340": 1311, "20400": 1311, "20460": 1311, "20520": 1311, "20580": 1311, "20640": 1311, "20700": 1311, "20760": 1311, "20820": 1311, "20880": 1311, "20940": 1311, "21000": [1311, 1315], "21060": 1311, "21120": 1311, "21180": 1311, "21240": 1311, "21300": 1311, "21360": 1311, "21420": 1311, "21480": 1311, "21540": 1311, "21600": 1311, "21660": 1311, "21720": 1311, "21780": 1311, "21840": 1311, "21900": 1311, "21960": 1311, "22020": 1311, "22080": 1311, "22140": 1311, "22200": 1311, "22260": 1311, "22320": 1311, "22380": 1311, "22440": 1311, "22500": 1311, "22560": 1311, "22620": 1311, "22680": 1311, "22740": 1311, "22860": 1311, "22920": 1311, "22980": 1311, "23040": 1311, "23100": 1311, "23160": 1311, "23220": 1311, "23280": 1311, "23340": 1311, "23400": 1311, "23460": 1311, "23520": 1311, "23580": 1311, "23640": 1311, "23700": 1311, "23760": 1311, "23820": 1311, "23880": 1311, "23940": 1311, "24000": [1311, 1315], "24060": 1311, "24120": 1311, "24180": 1311, "24240": 1311, "24300": 1311, "24360": 1311, "24420": 1311, "24480": 1311, "24540": 1311, "24600": 1311, "24660": 1311, "24720": 1311, "24780": 1311, "24840": 1311, "24900": 1311, "24960": 1311, "25020": 1311, "25080": 1311, "25140": 1311, "25200": 1311, "25260": 1311, "25320": 1311, "25380": 1311, "25440": 1311, "25500": 1311, "25560": 1311, "25620": 1311, "25680": 1311, "25740": 1311, "25800": 1311, "25860": 1311, "25920": 1311, "25980": 1311, "26040": 1311, "26100": 1311, "26160": 1311, "26220": 1311, "26280": 1311, "26340": 1311, "26400": 1311, "26460": 1311, "26520": 1311, "26580": 1311, "26640": 1311, "26700": 1311, "26760": 1311, "26820": 1311, "26880": 1311, "26940": 1311, "27000": [1311, 1315], "27120": 1311, "27180": 1311, "27240": 1311, "27300": 1311, "27360": 1311, "27420": 1311, "27480": 1311, "27540": 1311, "27600": 1311, "27660": 1311, "27720": 1311, "27780": 1311, "27840": 1311, "27900": 1311, "27960": 1311, "28020": 1311, "28080": 1311, "28140": 1311, "28200": 1311, "28260": 1311, "28320": 1311, "28380": 1311, "28440": 1311, "28500": 1311, "28560": 1311, "28620": 1311, "28680": 1311, "28740": 1311, "28800": 1311, "28860": 1311, "28920": 1311, "28980": 1311, "29040": 1311, "29100": 1311, "29160": 1311, "29220": 1311, "29280": 1311, "29340": 1311, "29400": 1311, "29460": 1311, "29520": 1311, "29580": 1311, "29640": 1311, "29700": 1311, "29760": 1311, "29820": 1311, "29880": 1311, "29940": 1311, "30000": [1311, 1315], "30060": 1311, "30120": 1311, "30180": 1311, "30240": 1311, "30300": 1311, "30360": 1311, "30420": 1311, "30480": 1311, "30540": 1311, "30600": 1311, "30660": 1311, "30720": 1311, "30780": 1311, "30840": 1311, "30900": 1311, "30960": 1311, "31020": 1311, "31080": 1311, "31140": 1311, "31200": 1311, "31260": 1311, "31320": 1311, "31380": 1311, "31440": 1311, "31500": 1311, "31560": 1311, "31620": 1311, "31680": 1311, "31740": 1311, "31800": 1311, "31860": 1311, "31920": 1311, "31980": 1311, "32040": 1311, "32100": 1311, "32160": 1311, "32220": 1311, "32280": 1311, "32340": 1311, "32400": 1311, "32460": 1311, "32520": 1311, "32580": 1311, "32640": 1311, "32700": 1311, "32760": 1311, "32820": 1311, "32880": 1311, "32940": 1311, "33000": [1311, 1315], "33060": 1311, "33120": 1311, "33180": 1311, "33240": 1311, "33300": 1311, "33360": 1311, "33420": 1311, "33480": 1311, "33540": 1311, "33600": 1311, "33660": 1311, "33720": 1311, "33780": 1311, "33840": 1311, "33900": 1311, "33960": 1311, "34020": 1311, "34080": 1311, "34140": 1311, "34200": 1311, "34260": 1311, "34320": 1311, "34380": 1311, "34440": 1311, "34500": 1311, "34560": 1311, "34620": 1311, "34680": 1311, "34740": 1311, "34800": 1311, "34860": 1311, "34920": 1311, "34980": 1311, "35040": 1311, "35100": 1311, "35160": 1311, "35220": 1311, "35280": 1311, "35340": 1311, "35400": 1311, "35460": 1311, "35520": 1311, "35580": 1311, "35640": 1311, "35700": 1311, "35760": 1311, "35820": 1311, "35880": 1311, "35940": 1311, "36000": [1311, 1315], "36060": 1311, "36120": 1311, "36180": 1311, "36240": 1311, "36300": 1311, "36360": 1311, "36420": 1311, "36480": 1311, "36540": 1311, "36600": 1311, "36660": 1311, "36720": 1311, "36780": 1311, "36840": 1311, "36900": 1311, "36960": 1311, "37020": 1311, "37080": 1311, "37140": 1311, "37200": 1311, "37260": 1311, "37320": 1311, "37380": 1311, "37440": 1311, "37500": 1311, "37560": 1311, "37620": 1311, "37680": 1311, "37740": 1311, "37800": 1311, "37860": 1311, "37920": 1311, "37980": 1311, "38040": 1311, "38100": 1311, "38160": 1311, "38220": 1311, "38280": 1311, "38340": 1311, "38400": 1311, "38460": 1311, "38520": 1311, "38580": 1311, "38640": 1311, "38700": 1311, "38760": 1311, "38820": 1311, "38880": 1311, "38940": 1311, "39000": [1311, 1315], "39060": 1311, "39120": 1311, "39180": 1311, "39240": 1311, "39300": 1311, "39360": 1311, "39420": 1311, "39480": 1311, "39540": 1311, "39600": 1311, "39660": 1311, "39720": 1311, "39780": 1311, "39840": 1311, "39900": 1311, "39960": 1311, "squeez": 1311, "59416776": 1311, "59416886": 1311, "59489769": 1311, "59489879": 1311, "5948999": 1311, "59415662": 1311, "59414657": 1311, "5874659": 1311, "58745576": 1311, "58744563": 1311, "59414621": 1311, "59412575": 1311, "5805231": 1311, "58050246": 1311, "58048182": 1311, "59419881": 1311, "59423095": 1311, "61560159": 1311, "61563401": 1311, "61566644": 1311, "59418877": 1311, "59421087": 1311, "6089062": 1311, "6089285": 1311, "60895079": 1311, "59417836": 1311, "59419005": 1311, "60196382": 1311, "60197561": 1311, "60198741": 1311, "get_metadata": 1311, "ref_dict": 1311, "reflecitivity_horizont": 1311, "21875": 1311, "34375": 1311, "0078125": 1311, "2109375": 1311, "1171875": 1311, "59375": 1311, "421875": 1311, "5625": 1311, "7109375": 1311, "609375": 1311, "5078125": 1311, "3828125": 1311, "6875": 1311, "328125": 1311, "3203125": 1311, "859375": 1311, "6484375": 1311, "8515625": 1311, "9375": [1311, 1320], "0234375": 1311, "6328125": 1311, "2890625": 1311, "546875": 1311, "578125": 1311, "6796875": 1311, "ref_field": 1312, "ref_gt_0": 1312, "mask_dict": 1312, "reflectivity_mask": 1312, "coolwarm": 1312, "sherm": [1312, 1315], "782": [1312, 1315], "matplotlibdeprecationwarn": [1312, 1315, 1318], "set_xtick": [1312, 1315], "position": [1312, 1315], "later": [1312, 1315, 1318, 1319], "xtick": [1312, 1315], "829": [1312, 1315], "set_ytick": [1312, 1315], "ytick": [1312, 1315], "write_cfradi": 1312, "2pi": 1313, "wave": 1313, "3pi": 1313, "incorrect": 1313, "phenomena": [1313, 1320], "maximium": 1313, "unambi": 1313, "preprocess": 1313, "thankfulli": [1313, 1315], "calculate_velocity_textur": 1313, "surround": [1313, 1315, 1318, 1319], "presenc": [1313, 1318, 1319], "524973": 1313, "vel_textur": 1313, "velocity_textur": [1313, 1316], "vleociti": 1313, "At": [1313, 1318], "velocity_dealias": 1313, "much": [1313, 1315, 1316, 1318, 1319], "realist": 1313, "gates_to_grid": 1315, "deprecationwarn": [1315, 1317], "99000": 1315, "98000": 1315, "97000": 1315, "96000": 1315, "95000": 1315, "94000": 1315, "93000": 1315, "92000": 1315, "91000": 1315, "90000": 1315, "89000": 1315, "88000": 1315, "87000": 1315, "86000": 1315, "85000": 1315, "84000": 1315, "83000": 1315, "82000": 1315, "81000": 1315, "80000": 1315, "79000": 1315, "78000": 1315, "77000": 1315, "76000": 1315, "75000": 1315, "74000": 1315, "73000": 1315, "72000": 1315, "71000": 1315, "70000": 1315, "69000": 1315, "68000": 1315, "67000": 1315, "66000": 1315, "65000": 1315, "64000": 1315, "63000": 1315, "62000": 1315, "61000": 1315, "59000": 1315, "58000": 1315, "57000": 1315, "56000": 1315, "55000": 1315, "54000": 1315, "53000": 1315, "52000": 1315, "51000": 1315, "49000": 1315, "48000": 1315, "47000": 1315, "46000": 1315, "45000": 1315, "44000": 1315, "43000": 1315, "42000": 1315, "41000": 1315, "38000": 1315, "37000": 1315, "35000": 1315, "34000": 1315, "32000": 1315, "31000": 1315, "29000": 1315, "28000": 1315, "26000": 1315, "23000": 1315, "22000": 1315, "19000": 1315, "16000": 1315, "14000": 1315, "13000": 1315, "8000": [1315, 1318], "7000": 1315, "suit": [1315, 1319, 1323], "longitudn": 1315, "latitudn": 1315, "suffer": 1315, "artifici": 1315, "feather": 1315, "grid_bett": 1315, "1750": 1315, "sgpxsaprcmacsuri5": 1316, "20171004": 1316, "203018": 1316, "total_pow": 1316, "xsapr_clutt": 1316, "sounding_temperatur": 1316, "signal_to_noise_ratio": [1316, 1319], "gate_id": 1316, "simulated_veloc": 1316, "unfolded_differential_phas": 1316, "corrected_differential_phas": 1316, "filtered_corrected_differential_phas": 1316, "corrected_specific_diff_phas": 1316, "filtered_corrected_specific_diff_phas": 1316, "path_integrated_attenu": 1316, "specific_differential_attenu": 1316, "path_integrated_differential_attenu": 1316, "trip": 1316, "nonhydrometeor": 1316, "analyz": [1316, 1323], "exclude_equ": 1316, "cleaner": 1316, "tell": 1316, "refl_arrai": 1316, "reflectivity_w_mask": 1316, "iter_slic": [1316, 1320], "9344453454202706": 1316, "620691732853737": 1316, "3756584054113996": 1316, "597935968662154": 1316, "696735014111216": 1316, "061894569912447": 1316, "721673265240488": 1316, "086695918593689": 1316, "33930700509078": 1316, "599363169483158": 1316, "836875745223637": 1316, "051601529570966": 1316, "22435547210836": 1316, "378109469982695": 1316, "553820234067336": 1316, "648943841665002": 1316, "837593740986444": 1316, "049614721040282": 1316, "331202567459613": 1316, "585432697375357": 1316, "87002341270722": 1316, "993012637722325": 1316, "061966001642219": 1316, "122799449619672": 1316, "861035552720102": 1316, "74608994279257": 1316, "148801770281325": 1316, "70860719727862": 1316, "989513966551444": 1316, "188644935344827": 1316, "89301878240611": 1316, "172644371021923": 1316, "79879842243138": 1316, "912806090219976": 1316, "766281467013889": 1316, "920522471877334": 1316, "898600907318164": 1316, "971026055481874": 1316, "110503947133682": 1316, "094456418731509": 1316, "0822160050675675": 1316, "036430544969512": 1316, "259332430219459": 1316, "2438254054588604": 1316, "473482666015625": 1316, "574283685503023": 1316, "866719139946832": 1316, "771468742643597": 1316, "compani": 1317, "eld": 1317, "dn": 1317, "lema": [1317, 1319], "data_dir": 1317, "scratch": [1317, 1325], "wolfensb": [1317, 1318, 1319], "pyrad_cours": 1317, "mch_jan_2024": 1317, "010": 1317, "read_metranet": 1317, "msrad": [1317, 1318, 1319], "rainforest_test": [1317, 1318, 1319], "tqdm": 1317, "tqdmwarn": 1317, "iprogress": 1317, "ipywidget": 1317, "readthedoc": [1317, 1323], "stabl": 1317, "user_instal": 1317, "autonotebook": 1317, "notebook_tqdm": 1317, "fieldnam": 1317, "mch": 1317, "zv": 1317, "reflectivity_vv": 1317, "vel": 1317, "wid": 1317, "clt": 1317, "clutter_exit_cod": 1317, "stat_test_lag1": 1317, "stat_test_lag2": 1317, "wbn": 1317, "wide_band_nois": 1317, "mph": 1317, "mean_phas": 1317, "discrimin": 1317, "isnan": 1317, "read_file_c": 1317, "read_file_pi": 1317, "reli": [1317, 1319], "marco": 1317, "boscacci": 1317, "anywher": 1317, "prone": [1317, 1318], "zh_dn": 1317, "mha": 1317, "mhd": 1317, "mhl": 1317, "mhp": 1317, "mhw": 1317, "fashion": 1317, "file_hr": 1317, "mhl2217907250u": [1317, 1319], "ymx": 1317, "dvx": 1317, "yml2217907257l": 1317, "810": 1317, "dealv": 1317, "dvl2217907257l": 1317, "py_decod": 1317, "dbg": 1317, "verb": 1317, "verbl": 1317, "goe": 1317, "map_hydro": 1317, "io_aux": 1317, "hydro_remap": 1317, "pyart_langrainbow12": 1317, "set_yticklabel": 1317, "welcom": 1317, "pydda": 1317, "jax": 1317, "unabl": 1317, "engin": 1317, "tensorflow": 1317, "pyrad_proc": 1317, "flow_aux": 1317, "bokeh": 1317, "primit": 1317, "bool8": 1317, "bool_": 1317, "bokeh_bool_typ": 1317, "qpe": 1317, "rzc": 1317, "poh": 1317, "bzc": 1317, "mesh": 1317, "mzc": 1317, "read_cartesian_metranet": 1317, "rzc221790725vl": 1317, "801": 1317, "63": [1317, 1320], "pyart_rrate11": 1317, "0x2b0d2db45660": 1317, "read_fil": 1317, "read_polar": 1317, "qpe_data_dn": 1317, "qpe_data": 1317, "summar": 1317, "ezc": 1317, "impli": 1317, "unrel": 1317, "unus": 1317, "exercic": [1318, 1319], "topic": [1318, 1319], "tackl": [1318, 1319], "pseudorhi": 1318, "glob": [1318, 1323], "load_config": [1318, 1319], "mch_config": [1318, 1319], "thu": 1318, "too": [1318, 1319], "inde": [1318, 1319], "especi": 1318, "strong": [1318, 1319], "simplest": 1318, "files_radar": 1318, "exercice2_swiss_doppl": 1318, "mll221790725": 1318, "enumer": 1318, "radar_merg": 1318, "sharex": [1318, 1319], "ravel": 1318, "discontinu": 1318, "difficulti": 1318, "isol": [1318, 1319], "seen": [1318, 1323], "ymin": 1318, "xmin": 1318, "ymax": 1318, "xmax": 1318, "cappi_res_h": 1318, "cappi_res_v": 1318, "cappi_zh": 1318, "throught": 1318, "thunderstorm": [1318, 1319], "1785": 1318, "shade": 1318, "quadrilater": 1318, "gouraud": 1318, "rcparam": 1318, "pcolor": 1318, "arg": 1318, "altitudin": 1318, "downdraft": 1318, "updraft": 1318, "wider": 1318, "cold": 1318, "13th": 1318, "albi": 1318, "z\u00fcrich": 1318, "widespread": 1318, "unfortun": 1318, "question_pyart_meteoswiss": 1318, "mla211941205": 1318, "corrected_velocity_neg": 1318, "464": 1318, "runtimewarn": 1318, "mean_velocity_per_g": 1318, "reshap": 1318, "549": 1318, "y_new": 1318, "y_in_window": 1318, "radiosound": 1318, "payern": 1318, "130": 1318, "though": [1318, 1325], "discrep": 1318, "startup": 1319, "third": [1319, 1323], "cosmo": 1319, "file_radar": 1319, "exercice1_swiss_thunderstorm": 1319, "20220628073500_savevol_cosmo_lookup_temp": 1319, "problemat": 1319, "gtfilter": 1319, "moment_and_texture_based_gate_filt": 1319, "clear": 1319, "mostli": 1319, "behind": 1319, "knowledg": 1319, "insight": 1319, "oblat": 1319, "drop": 1319, "784": 1319, "mont": 1319, "8231": 1319, "2514": 1319, "0644": 1319, "9861": 1319, "0239": 1319, "1971": 1319, "9661": 1319, "1464": 1319, "9447": 1319, "1142": 1319, "9787": 1319, "974": 1319, "2450": 1319, "5540": 1319, "1459": 1319, "9937": 1319, "945": 1319, "9432": 1319, "0110": 1319, "5141": 1319, "9928": 1319, "993": 1319, "5202": 1319, "3498": 1319, "9746": 1319, "843": 1319, "5287": 1319, "9751": 1319, "9804": 1319, "6547": 1319, "7054": 1319, "5101": 1319, "9765": 1319, "1114": 1319, "4998": 1319, "6431": 1319, "9845": 1319, "1010": 1319, "complic": 1319, "few": [1319, 1325], "dai": 1319, "refin": 1319, "est_rain_rate_hydro": 1319, "land": 1319, "lon_bnd": 1319, "lat_bnd": 1319, "states_provinc": 1319, "cultur": 1319, "admin_0_countri": 1319, "facecolor": 1319, "river": 1319, "add_featur": 1319, "287": 1319, "lambert": 1319, "feature_artist": 1319, "featureartist": 1319, "0x2b9150c92f80": 1319, "didn": 1319, "uncertain": 1319, "beam_azimuth_angl": 1320, "azimuth_angle_from_true_north": 1320, "radial_azimuth_coordin": 1320, "beam_elevation_angl": 1320, "elevation_angle_from_horizontal_plan": 1320, "radial_elevation_coordin": 1320, "1832": 1320, "log_differential_reflectivity_hv": 1320, "875": 1320, "9999": 1320, "differential_phase_hv": 1320, "equivalent_reflectivity_factor": 1320, "cross_correlation_ratio_hv": 1320, "correlation_ratio": 1320, "meters_per_second": 1320, "doppler_spectrum_width": 1320, "radial_velocity_of_scatterers_away_from_instru": 1320, "target_fixed_angl": 1320, "unambiguous_rang": 1320, "unambigu": 1320, "degrees_north": 1320, "degrees_east": 1320, "projection_range_coordin": 1320, "range_to_measurement_volum": 1320, "radial_range_coordin": 1320, "spacing_is_const": 1320, "meters_to_center_of_first_g": 1320, "2125": 1320, "meters_between_g": 1320, "int32": 1320, "s20": 1320, "unitless": 1320, "coplan": 1320, "vertical_point": 1320, "idl": 1320, "azimuth_surveil": 1320, "elevation_surveil": 1320, "sunscan": 1320, "manual_ppi": 1320, "manual_rhi": 1320, "17t19": 1320, "21z": 1320, "time_in_seconds_since_volume_start": 1320, "calendar": 1320, "gregorian": 1320, "histori": 1320, "katx": 1320, "original_contain": 1320, "vcp_pattern": 1320, "7470703": 1320, "7196045": 1320, "6893921": 1320, "511719": 1320, "get_slic": 1320, "sweep_1": 1320, "52734375": 1320, "itself": 1320, "indici": 1320, "slice_indic": 1320, "9066728410400056": 1320, "478547577741713": 1320, "587792083929423": 1320, "871031288639269": 1320, "971692217963673": 1320, "830616390843327": 1320, "108188248095756": 1320, "483419908190385": 1320, "88976917057903": 1320, "852766685681688": 1320, "410455582269897": 1320, "66444787446138": 1320, "997862391449566": 1320, "172098402018502": 1320, "489752513534416": 1320, "712565619531706": 1320, "commonli": 1320, "030": 1321, "29": 1321, "8x": 1322, "But": 1322, "bash": 1322, "export": [1322, 1325], "pythonpath": 1322, "pth": 1322, "build_ext": 1322, "pip": [1322, 1323, 1325], "segfault": 1322, "newer": 1322, "Theres": 1322, "reinstal": 1322, "remedi": 1322, "fno": 1322, "protector": 1322, "d_fortify_sourc": 1322, "cflag": 1322, "makefil": 1322, "troubl": 1322, "my": 1322, "bit": 1322, "define_macro": 1322, "macro": 1322, "extra_compile_arg": 1322, "m32": 1322, "extra_link_arg": 1322, "m64": 1322, "readm": 1322, "proj_lib": 1322, "xx": 1322, "usernam": 1322, "xxx": 1322, "mpl_toolkit": 1322, "offici": 1323, "mail": 1323, "openradar": 1323, "ev": 1323, "pyart_short_cours": 1323, "youtub": 1323, "watch": 1323, "diip": 1323, "q3bkzw": 1323, "auto_exampl": 1323, "scm": 1323, "book": 1323, "pep8": 1323, "popular": 1323, "pycodestyl": 1323, "pylint": 1323, "pep": 1323, "0008": 1323, "highli": 1323, "tast": 1323, "brief": 1323, "parti": 1323, "explain": 1323, "velocity_azimuth_displai": 1323, "_inverse_dist_squar": 1323, "_average1d": 1323, "explan": 1323, "mention": [1323, 1325], "statement": 1323, "futur": 1323, "ran": 1323, "rerun": 1323, "test_vad": 1323, "make_target_radar": 1323, "ones_lik": 1323, "z_start": 1323, "z_end": 1323, "z_count": 1323, "vad_height": 1323, "vad_spe": 1323, "98665725": 1323, "94020686": 1323, "88107152": 1323, "81939374": 1323, "75851962": 1323, "vad_direct": 1323, "359": 1323, "84659496": 1323, "30240553": 1323, "358": 1323, "58658589": 1323, "357": 1323, "81073051": 1323, "01353486": 1323, "01335138": 1323, "06014712": 1323, "12039762": 1323, "18410404": 1323, "24791911": 1323, "98663937": 1323, "9398407": 1323, "87958641": 1323, "81587601": 1323, "75205693": 1323, "assert_almost_equ": 1323, "pyarg": 1323, "test_cfradi": 1323, "cd": 1323, "contribut": [1323, 1324], "branch": [1323, 1325], "fork": 1323, "cartopy_map": 1323, "push": 1323, "branch_nam": 1323, "checkout": 1323, "task": 1323, "untrack": 1323, "switch": 1323, "acronym": 1323, "maint": 1323, "finish": [1323, 1325], "quotat": 1323, "enter": 1323, "acronymn": 1323, "gitwash": 1323, "development_workflow": 1323, "editor": [1323, 1325], "sty": 1323, "whitespac": 1323, "vim": 1323, "thing": 1323, "ff": 1323, "checker": 1323, "appveyor": 1323, "travisci": 1323, "sit": 1323, "blog_post": 1323, "instruct": 1324, "contributor": 1324, "conflict": 1325, "panda": 1325, "ask": 1325, "exit": 1325, "recent": 1325, "manag": 1325, "activ": 1325, "deactiv": 1325, "enviro": 1325, "ipython": 1325, "spyder": 1325, "yourusernam": 1325, "youranacondadir": 1325, "machin": 1325, "jjhelmu": 1325, "py3": 1325, "gitter": 1325, "im": 1325}, "objects": {"pyart": [[541, 0, 1, "", "_debug_info"], [542, 1, 0, "-", "aux_io"], [590, 1, 0, "-", "bridge"], [592, 1, 0, "-", "config"], [605, 1, 0, "-", "core"], [687, 1, 0, "-", "correct"], [758, 1, 0, "-", "exceptions"], [759, 1, 0, "-", "filters"], [796, 1, 0, "-", "graph"], [972, 1, 0, "-", "io"], [995, 1, 0, "-", "lazydict"], [1019, 1, 0, "-", "map"], [1032, 1, 0, "-", "retrieve"], [1126, 1, 0, "-", "testing"], [1211, 1, 0, "-", "util"]], "pyart.aux_io": [[543, 0, 1, "", "convert_data"], [544, 0, 1, "", "extract_sweeps_skyecho"], [545, 0, 1, "", "get_library"], [546, 0, 1, "", "get_sweep_time_coverage"], [547, 0, 1, "", "read_bin"], [548, 0, 1, "", "read_bin_mf"], [549, 0, 1, "", "read_cartesian_metranet"], [550, 0, 1, "", "read_cf1"], [551, 0, 1, "", "read_cf1_cartesian"], [552, 0, 1, "", "read_cf1_cartesian_mf"], [553, 0, 1, "", "read_d3r_gcpex_nc"], [554, 0, 1, "", "read_dat_mf"], [555, 0, 1, "", "read_edge_netcdf"], [556, 0, 1, "", "read_file_c"], [557, 0, 1, "", "read_file_py"], [558, 0, 1, "", "read_gamic"], [559, 0, 1, "", "read_gif"], [560, 0, 1, "", "read_grib"], [561, 0, 1, "", "read_hpl"], [562, 0, 1, "", "read_iq"], [563, 0, 1, "", "read_kazr"], [564, 0, 1, "", "read_knmi_grid_h5"], [565, 0, 1, "", "read_mch_vad"], [566, 0, 1, "", "read_metranet"], [567, 0, 1, "", "read_noxp_iphex_nc"], [568, 0, 1, "", "read_odim_grid_h5"], [569, 0, 1, "", "read_odim_h5"], [570, 0, 1, "", "read_odim_vp_h5"], [571, 0, 1, "", "read_pattern"], [572, 0, 1, "", "read_png"], [573, 0, 1, "", "read_product_c"], [574, 0, 1, "", "read_product_py"], [575, 0, 1, "", "read_psr_cpi_header"], [576, 0, 1, "", "read_psr_header"], [577, 0, 1, "", "read_psr_spectra"], [578, 0, 1, "", "read_radx"], [579, 0, 1, "", "read_rainbow_psr"], [580, 0, 1, "", "read_rainbow_psr_spectra"], [581, 0, 1, "", "read_rainbow_wrl"], [582, 0, 1, "", "read_sinarame_h5"], [583, 0, 1, "", "read_skyecho"], [584, 0, 1, "", "read_spectra"], [585, 0, 1, "", "read_swissbirdradar_spectra"], [586, 0, 1, "", "write_odim_grid_h5"], [587, 0, 1, "", "write_odim_h5"], [588, 0, 1, "", "write_sinarame_cfradial"], [589, 0, 1, "", "write_spectra"]], "pyart.bridge": [[591, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[593, 2, 1, "", "FileMetadata"], [597, 0, 1, "", "get_KE"], [598, 0, 1, "", "get_field_colormap"], [599, 0, 1, "", "get_field_limits"], [600, 0, 1, "", "get_field_mapping"], [601, 0, 1, "", "get_field_name"], [602, 0, 1, "", "get_fillvalue"], [603, 0, 1, "", "get_metadata"], [604, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[594, 3, 1, "", "__call__"], [595, 3, 1, "", "get_field_name"], [596, 3, 1, "", "get_metadata"]], "pyart.core": [[606, 2, 1, "", "Grid"], [616, 2, 1, "", "HorizontalWindProfile"], [620, 2, 1, "", "Radar"], [649, 2, 1, "", "RadarSpectra"], [678, 0, 1, "", "antenna_to_cartesian"], [679, 0, 1, "", "antenna_vectors_to_cartesian"], [680, 0, 1, "", "cartesian_to_antenna"], [681, 0, 1, "", "cartesian_to_geographic"], [682, 0, 1, "", "cartesian_to_geographic_aeqd"], [683, 0, 1, "", "cartesian_vectors_to_geographic"], [684, 0, 1, "", "geographic_to_cartesian"], [685, 0, 1, "", "geographic_to_cartesian_aeqd"], [686, 0, 1, "", "wgs84_to_swissCH1903"]], "pyart.core.Grid": [[607, 3, 1, "", "add_field"], [608, 3, 1, "", "get_point_longitude_latitude"], [609, 3, 1, "", "get_projparams"], [610, 3, 1, "", "init_point_altitude"], [611, 3, 1, "", "init_point_longitude_latitude"], [612, 3, 1, "", "init_point_x_y_z"], [613, 4, 1, "", "projection_proj"], [614, 3, 1, "", "to_xarray"], [615, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[617, 3, 1, "", "from_u_and_v"], [618, 4, 1, "", "u_wind"], [619, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[621, 3, 1, "", "add_field"], [622, 3, 1, "", "add_field_like"], [623, 3, 1, "", "add_filter"], [624, 3, 1, "", "check_field_exists"], [625, 3, 1, "", "extract_sweeps"], [626, 3, 1, "", "get_azimuth"], [627, 3, 1, "", "get_elevation"], [628, 3, 1, "", "get_end"], [629, 3, 1, "", "get_field"], [630, 3, 1, "", "get_gate_area"], [631, 3, 1, "", "get_gate_lat_lon_alt"], [632, 3, 1, "", "get_gate_x_y_z"], [633, 3, 1, "", "get_nyquist_vel"], [634, 3, 1, "", "get_slice"], [635, 3, 1, "", "get_start"], [636, 3, 1, "", "get_start_end"], [637, 3, 1, "", "info"], [638, 3, 1, "", "init_gate_altitude"], [639, 3, 1, "", "init_gate_longitude_latitude"], [640, 3, 1, "", "init_gate_x_y_z"], [641, 3, 1, "", "init_rays_per_sweep"], [642, 3, 1, "", "iter_azimuth"], [643, 3, 1, "", "iter_elevation"], [644, 3, 1, "", "iter_end"], [645, 3, 1, "", "iter_field"], [646, 3, 1, "", "iter_slice"], [647, 3, 1, "", "iter_start"], [648, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[650, 3, 1, "", "add_field"], [651, 3, 1, "", "add_field_like"], [652, 3, 1, "", "add_filter"], [653, 3, 1, "", "check_field_exists"], [654, 3, 1, "", "extract_sweeps"], [655, 3, 1, "", "get_azimuth"], [656, 3, 1, "", "get_elevation"], [657, 3, 1, "", "get_end"], [658, 3, 1, "", "get_field"], [659, 3, 1, "", "get_gate_area"], [660, 3, 1, "", "get_gate_lat_lon_alt"], [661, 3, 1, "", "get_gate_x_y_z"], [662, 3, 1, "", "get_nyquist_vel"], [663, 3, 1, "", "get_slice"], [664, 3, 1, "", "get_start"], [665, 3, 1, "", "get_start_end"], [666, 3, 1, "", "info"], [667, 3, 1, "", "init_gate_altitude"], [668, 3, 1, "", "init_gate_longitude_latitude"], [669, 3, 1, "", "init_gate_x_y_z"], [670, 3, 1, "", "init_rays_per_sweep"], [671, 3, 1, "", "iter_azimuth"], [672, 3, 1, "", "iter_elevation"], [673, 3, 1, "", "iter_end"], [674, 3, 1, "", "iter_field"], [675, 3, 1, "", "iter_slice"], [676, 3, 1, "", "iter_start"], [677, 3, 1, "", "iter_start_end"]], "pyart.correct": [[688, 2, 1, "", "GateFilter"], [716, 0, 1, "", "calculate_attenuation"], [717, 0, 1, "", "calculate_attenuation_philinear"], [718, 0, 1, "", "calculate_attenuation_zphi"], [719, 0, 1, "", "compute_apparent_vpr"], [720, 0, 1, "", "compute_theoretical_vpr"], [721, 0, 1, "", "correct_bias"], [722, 0, 1, "", "correct_noise_rhohv"], [723, 0, 1, "", "correct_sys_phase"], [724, 0, 1, "", "correct_visibility"], [725, 0, 1, "", "correct_vpr"], [726, 0, 1, "", "correct_vpr_spatialised"], [727, 0, 1, "", "dealias_fourdd"], [728, 0, 1, "", "dealias_region_based"], [729, 0, 1, "", "dealias_unwrap_phase"], [730, 0, 1, "", "despeckle_field"], [731, 0, 1, "", "det_sys_phase_ray"], [732, 0, 1, "", "est_rhohv_rain"], [733, 0, 1, "", "est_zdr_precip"], [734, 0, 1, "", "est_zdr_snow"], [735, 0, 1, "", "find_objects"], [736, 0, 1, "", "gauss_fit"], [737, 0, 1, "", "get_mask_fzl"], [738, 0, 1, "", "get_sun_hits"], [739, 0, 1, "", "get_sun_hits_ivic"], [740, 0, 1, "", "get_sun_hits_psr"], [741, 0, 1, "", "moment_based_gate_filter"], [742, 0, 1, "", "phase_proc_lp"], [743, 0, 1, "", "phase_proc_lp_gf"], [744, 0, 1, "", "ptoa_to_sf"], [745, 0, 1, "", "retrieval_result"], [746, 0, 1, "", "scanning_losses"], [747, 0, 1, "", "selfconsistency_bias"], [748, 0, 1, "", "selfconsistency_bias2"], [749, 0, 1, "", "selfconsistency_kdp_phidp"], [750, 0, 1, "", "smooth_masked"], [751, 0, 1, "", "smooth_phidp_double_window"], [752, 0, 1, "", "smooth_phidp_single_window"], [753, 0, 1, "", "solar_flux_lookup"], [754, 0, 1, "", "sun_position_mfr"], [755, 0, 1, "", "sun_position_pysolar"], [756, 0, 1, "", "sun_power"], [757, 0, 1, "", "sun_retrieval"]], "pyart.correct.GateFilter": [[689, 3, 1, "", "copy"], [690, 3, 1, "", "exclude_above"], [691, 3, 1, "", "exclude_all"], [692, 3, 1, "", "exclude_below"], [693, 3, 1, "", "exclude_equal"], [694, 3, 1, "", "exclude_gates"], [695, 3, 1, "", "exclude_inside"], [696, 3, 1, "", "exclude_invalid"], [697, 3, 1, "", "exclude_masked"], [698, 3, 1, "", "exclude_none"], [699, 3, 1, "", "exclude_not_equal"], [700, 3, 1, "", "exclude_outside"], [701, 3, 1, "", "exclude_transition"], [702, 4, 1, "", "gate_excluded"], [703, 4, 1, "", "gate_included"], [704, 3, 1, "", "include_above"], [705, 3, 1, "", "include_all"], [706, 3, 1, "", "include_below"], [707, 3, 1, "", "include_equal"], [708, 3, 1, "", "include_gates"], [709, 3, 1, "", "include_inside"], [710, 3, 1, "", "include_none"], [711, 3, 1, "", "include_not_equal"], [712, 3, 1, "", "include_not_masked"], [713, 3, 1, "", "include_not_transition"], [714, 3, 1, "", "include_outside"], [715, 3, 1, "", "include_valid"]], "pyart.exceptions": [[165, 5, 1, "", "DeprecatedAttribute"], [166, 5, 1, "", "DeprecatedFunctionName"], [167, 5, 1, "", "MissingOptionalDependency"], [168, 0, 1, "", "_deprecated_alias"]], "pyart.filters": [[760, 2, 1, "", "GateFilter"], [788, 0, 1, "", "birds_gate_filter"], [789, 0, 1, "", "class_based_gate_filter"], [790, 0, 1, "", "iso0_based_gate_filter"], [791, 0, 1, "", "moment_and_texture_based_gate_filter"], [792, 0, 1, "", "moment_based_gate_filter"], [793, 0, 1, "", "snr_based_gate_filter"], [794, 0, 1, "", "temp_based_gate_filter"], [795, 0, 1, "", "visibility_based_gate_filter"]], "pyart.filters.GateFilter": [[761, 3, 1, "", "copy"], [762, 3, 1, "", "exclude_above"], [763, 3, 1, "", "exclude_all"], [764, 3, 1, "", "exclude_below"], [765, 3, 1, "", "exclude_equal"], [766, 3, 1, "", "exclude_gates"], [767, 3, 1, "", "exclude_inside"], [768, 3, 1, "", "exclude_invalid"], [769, 3, 1, "", "exclude_masked"], [770, 3, 1, "", "exclude_none"], [771, 3, 1, "", "exclude_not_equal"], [772, 3, 1, "", "exclude_outside"], [773, 3, 1, "", "exclude_transition"], [774, 4, 1, "", "gate_excluded"], [775, 4, 1, "", "gate_included"], [776, 3, 1, "", "include_above"], [777, 3, 1, "", "include_all"], [778, 3, 1, "", "include_below"], [779, 3, 1, "", "include_equal"], [780, 3, 1, "", "include_gates"], [781, 3, 1, "", "include_inside"], [782, 3, 1, "", "include_none"], [783, 3, 1, "", "include_not_equal"], [784, 3, 1, "", "include_not_masked"], [785, 3, 1, "", "include_not_transition"], [786, 3, 1, "", "include_outside"], [787, 3, 1, "", "include_valid"]], "pyart.graph": [[797, 2, 1, "", "AirborneRadarDisplay"], [831, 2, 1, "", "GridMapDisplay"], [850, 2, 1, "", "GridMapDisplayBasemap"], [864, 2, 1, "", "RadarDisplay"], [897, 2, 1, "", "RadarMapDisplay"], [934, 2, 1, "", "RadarMapDisplayBasemap"], [971, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[798, 3, 1, "", "generate_az_rhi_title"], [799, 3, 1, "", "generate_filename"], [800, 3, 1, "", "generate_ray_title"], [801, 3, 1, "", "generate_title"], [802, 3, 1, "", "generate_vpt_title"], [803, 3, 1, "", "generate_xsection_title"], [804, 3, 1, "", "label_xaxis_r"], [805, 3, 1, "", "label_xaxis_rays"], [806, 3, 1, "", "label_xaxis_time"], [807, 3, 1, "", "label_xaxis_x"], [808, 3, 1, "", "label_xaxis_xsection"], [809, 3, 1, "", "label_yaxis_field"], [810, 3, 1, "", "label_yaxis_xsection"], [811, 3, 1, "", "label_yaxis_y"], [812, 3, 1, "", "label_yaxis_z"], [813, 3, 1, "", "plot"], [814, 3, 1, "", "plot_azimuth_to_rhi"], [815, 3, 1, "", "plot_colorbar"], [816, 3, 1, "", "plot_cr_raster"], [817, 3, 1, "", "plot_cross_hair"], [818, 3, 1, "", "plot_grid_lines"], [819, 3, 1, "", "plot_label"], [820, 3, 1, "", "plot_labels"], [821, 3, 1, "", "plot_ppi"], [822, 3, 1, "", "plot_range_ring"], [823, 3, 1, "", "plot_range_rings"], [824, 3, 1, "", "plot_ray"], [825, 3, 1, "", "plot_rhi"], [826, 3, 1, "", "plot_sweep_grid"], [827, 3, 1, "", "plot_vpt"], [828, 3, 1, "", "plot_xsection"], [829, 3, 1, "", "set_aspect_ratio"], [830, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[832, 3, 1, "", "cartopy_coastlines"], [833, 3, 1, "", "cartopy_political_boundaries"], [834, 3, 1, "", "cartopy_states"], [835, 3, 1, "", "generate_filename"], [836, 3, 1, "", "generate_grid_title"], [837, 3, 1, "", "generate_latitudinal_level_title"], [838, 3, 1, "", "generate_longitudinal_level_title"], [839, 3, 1, "", "plot_colorbar"], [840, 3, 1, "", "plot_cross_section"], [841, 3, 1, "", "plot_cross_section_level"], [842, 3, 1, "", "plot_crosshairs"], [843, 3, 1, "", "plot_grid"], [844, 3, 1, "", "plot_grid_contour"], [845, 3, 1, "", "plot_grid_raw"], [846, 3, 1, "", "plot_latitude_slice"], [847, 3, 1, "", "plot_latitudinal_level"], [848, 3, 1, "", "plot_longitude_slice"], [849, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[851, 3, 1, "", "generate_filename"], [852, 3, 1, "", "generate_grid_title"], [853, 3, 1, "", "generate_latitudinal_level_title"], [854, 3, 1, "", "generate_longitudinal_level_title"], [855, 3, 1, "", "get_basemap"], [856, 3, 1, "", "plot_basemap"], [857, 3, 1, "", "plot_colorbar"], [858, 3, 1, "", "plot_crosshairs"], [859, 3, 1, "", "plot_grid"], [860, 3, 1, "", "plot_latitude_slice"], [861, 3, 1, "", "plot_latitudinal_level"], [862, 3, 1, "", "plot_longitude_slice"], [863, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[865, 3, 1, "", "generate_az_rhi_title"], [866, 3, 1, "", "generate_filename"], [867, 3, 1, "", "generate_ray_title"], [868, 3, 1, "", "generate_title"], [869, 3, 1, "", "generate_vpt_title"], [870, 3, 1, "", "generate_xsection_title"], [871, 3, 1, "", "label_xaxis_r"], [872, 3, 1, "", "label_xaxis_rays"], [873, 3, 1, "", "label_xaxis_time"], [874, 3, 1, "", "label_xaxis_x"], [875, 3, 1, "", "label_xaxis_xsection"], [876, 3, 1, "", "label_yaxis_field"], [877, 3, 1, "", "label_yaxis_xsection"], [878, 3, 1, "", "label_yaxis_y"], [879, 3, 1, "", "label_yaxis_z"], [880, 3, 1, "", "plot"], [881, 3, 1, "", "plot_azimuth_to_rhi"], [882, 3, 1, "", "plot_colorbar"], [883, 3, 1, "", "plot_cr_raster"], [884, 3, 1, "", "plot_cross_hair"], [885, 3, 1, "", "plot_grid_lines"], [886, 3, 1, "", "plot_label"], [887, 3, 1, "", "plot_labels"], [888, 3, 1, "", "plot_ppi"], [889, 3, 1, "", "plot_range_ring"], [890, 3, 1, "", "plot_range_rings"], [891, 3, 1, "", "plot_ray"], [892, 3, 1, "", "plot_rhi"], [893, 3, 1, "", "plot_vpt"], [894, 3, 1, "", "plot_xsection"], [895, 3, 1, "", "set_aspect_ratio"], [896, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[898, 3, 1, "", "generate_az_rhi_title"], [899, 3, 1, "", "generate_filename"], [900, 3, 1, "", "generate_ray_title"], [901, 3, 1, "", "generate_title"], [902, 3, 1, "", "generate_vpt_title"], [903, 3, 1, "", "generate_xsection_title"], [904, 3, 1, "", "label_xaxis_r"], [905, 3, 1, "", "label_xaxis_rays"], [906, 3, 1, "", "label_xaxis_time"], [907, 3, 1, "", "label_xaxis_x"], [908, 3, 1, "", "label_xaxis_xsection"], [909, 3, 1, "", "label_yaxis_field"], [910, 3, 1, "", "label_yaxis_xsection"], [911, 3, 1, "", "label_yaxis_y"], [912, 3, 1, "", "label_yaxis_z"], [913, 3, 1, "", "plot"], [914, 3, 1, "", "plot_azimuth_to_rhi"], [915, 3, 1, "", "plot_colorbar"], [916, 3, 1, "", "plot_cr_raster"], [917, 3, 1, "", "plot_cross_hair"], [918, 3, 1, "", "plot_grid_lines"], [919, 3, 1, "", "plot_label"], [920, 3, 1, "", "plot_labels"], [921, 3, 1, "", "plot_line_geo"], [922, 3, 1, "", "plot_line_xy"], [923, 3, 1, "", "plot_point"], [924, 3, 1, "", "plot_ppi"], [925, 3, 1, "", "plot_ppi_map"], [926, 3, 1, "", "plot_range_ring"], [927, 3, 1, "", "plot_range_rings"], [928, 3, 1, "", "plot_ray"], [929, 3, 1, "", "plot_rhi"], [930, 3, 1, "", "plot_vpt"], [931, 3, 1, "", "plot_xsection"], [932, 3, 1, "", "set_aspect_ratio"], [933, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[935, 3, 1, "", "generate_az_rhi_title"], [936, 3, 1, "", "generate_filename"], [937, 3, 1, "", "generate_ray_title"], [938, 3, 1, "", "generate_title"], [939, 3, 1, "", "generate_vpt_title"], [940, 3, 1, "", "generate_xsection_title"], [941, 3, 1, "", "label_xaxis_r"], [942, 3, 1, "", "label_xaxis_rays"], [943, 3, 1, "", "label_xaxis_time"], [944, 3, 1, "", "label_xaxis_x"], [945, 3, 1, "", "label_xaxis_xsection"], [946, 3, 1, "", "label_yaxis_field"], [947, 3, 1, "", "label_yaxis_xsection"], [948, 3, 1, "", "label_yaxis_y"], [949, 3, 1, "", "label_yaxis_z"], [950, 3, 1, "", "plot"], [951, 3, 1, "", "plot_azimuth_to_rhi"], [952, 3, 1, "", "plot_colorbar"], [953, 3, 1, "", "plot_cr_raster"], [954, 3, 1, "", "plot_cross_hair"], [955, 3, 1, "", "plot_grid_lines"], [956, 3, 1, "", "plot_label"], [957, 3, 1, "", "plot_labels"], [958, 3, 1, "", "plot_line_geo"], [959, 3, 1, "", "plot_line_xy"], [960, 3, 1, "", "plot_point"], [961, 3, 1, "", "plot_ppi"], [962, 3, 1, "", "plot_ppi_map"], [963, 3, 1, "", "plot_range_ring"], [964, 3, 1, "", "plot_range_rings"], [965, 3, 1, "", "plot_ray"], [966, 3, 1, "", "plot_rhi"], [967, 3, 1, "", "plot_vpt"], [968, 3, 1, "", "plot_xsection"], [969, 3, 1, "", "set_aspect_ratio"], [970, 3, 1, "", "set_limits"]], "pyart.io": [[973, 0, 1, "", "make_time_unit_str"], [974, 0, 1, "", "prepare_for_read"], [975, 0, 1, "", "read"], [976, 0, 1, "", "read_arm_sonde"], [977, 0, 1, "", "read_arm_sonde_vap"], [978, 0, 1, "", "read_cfradial"], [979, 0, 1, "", "read_cfradial2"], [980, 0, 1, "", "read_chl"], [981, 0, 1, "", "read_grid"], [982, 0, 1, "", "read_grid_mdv"], [983, 0, 1, "", "read_mdv"], [984, 0, 1, "", "read_nexrad_archive"], [985, 0, 1, "", "read_nexrad_cdm"], [986, 0, 1, "", "read_nexrad_level3"], [987, 0, 1, "", "read_rsl"], [988, 0, 1, "", "read_sigmet"], [989, 0, 1, "", "read_uf"], [990, 0, 1, "", "write_cfradial"], [991, 0, 1, "", "write_grid"], [992, 0, 1, "", "write_grid_geotiff"], [993, 0, 1, "", "write_grid_mdv"], [994, 0, 1, "", "write_uf"]], "pyart.lazydict": [[996, 2, 1, "", "LazyLoadDict"], [1009, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[402, 3, 1, "", "__contains__"], [403, 3, 1, "", "__delattr__"], [404, 3, 1, "", "__delitem__"], [405, 3, 1, "", "__dir__"], [406, 3, 1, "", "__eq__"], [407, 3, 1, "", "__format__"], [408, 3, 1, "", "__ge__"], [409, 3, 1, "", "__getattribute__"], [410, 3, 1, "", "__getitem__"], [411, 3, 1, "", "__getstate__"], [412, 3, 1, "", "__gt__"], [413, 3, 1, "", "__init__"], [414, 3, 1, "", "__init_subclass__"], [415, 3, 1, "", "__iter__"], [416, 3, 1, "", "__le__"], [417, 3, 1, "", "__len__"], [418, 3, 1, "", "__lt__"], [419, 3, 1, "", "__ne__"], [420, 3, 1, "", "__new__"], [421, 3, 1, "", "__reduce__"], [422, 3, 1, "", "__reduce_ex__"], [423, 3, 1, "", "__repr__"], [424, 3, 1, "", "__setattr__"], [425, 3, 1, "", "__setitem__"], [426, 3, 1, "", "__sizeof__"], [427, 3, 1, "", "__str__"], [428, 3, 1, "", "__subclasshook__"], [997, 3, 1, "", "clear"], [998, 3, 1, "", "copy"], [999, 3, 1, "", "get"], [1000, 3, 1, "", "has_key"], [1001, 3, 1, "", "items"], [1002, 3, 1, "", "keys"], [1003, 3, 1, "", "pop"], [1004, 3, 1, "", "popitem"], [1005, 3, 1, "", "set_lazy"], [1006, 3, 1, "", "setdefault"], [1007, 3, 1, "", "update"], [1008, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[1010, 3, 1, "", "clear"], [1011, 3, 1, "", "get"], [1012, 3, 1, "", "items"], [1013, 3, 1, "", "keys"], [1014, 3, 1, "", "pop"], [1015, 3, 1, "", "popitem"], [1016, 3, 1, "", "setdefault"], [1017, 3, 1, "", "update"], [1018, 3, 1, "", "values"]], "pyart.map": [[1020, 2, 1, "", "GateMapper"], [1024, 0, 1, "", "example_roi_func_constant"], [1025, 0, 1, "", "example_roi_func_dist"], [1026, 0, 1, "", "example_roi_func_dist_beam"], [1027, 0, 1, "", "get_earth_radius"], [1028, 0, 1, "", "grid_from_radars"], [1029, 0, 1, "", "map_gates_to_grid"], [1030, 0, 1, "", "map_to_grid"], [1031, 0, 1, "", "polar_to_cartesian"]], "pyart.map.GateMapper": [[1021, 4, 1, "", "distance_tolerance"], [1022, 3, 1, "", "mapped_radar"], [1023, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[447, 0, 1, "", "_destandardize"], [448, 0, 1, "", "_get_res_vol_sides"], [1033, 0, 1, "", "atmospheric_gas_att"], [1034, 0, 1, "", "calculate_snr_from_reflectivity"], [1035, 0, 1, "", "calculate_velocity_texture"], [1036, 0, 1, "", "composite_reflectivity"], [1037, 0, 1, "", "compute_Doppler_velocity"], [1038, 0, 1, "", "compute_Doppler_velocity_iq"], [1039, 0, 1, "", "compute_Doppler_width"], [1040, 0, 1, "", "compute_Doppler_width_iq"], [1041, 0, 1, "", "compute_apparent_profile"], [1042, 0, 1, "", "compute_bird_density"], [1043, 0, 1, "", "compute_ccor"], [1044, 0, 1, "", "compute_cdr"], [1045, 0, 1, "", "compute_centroids"], [1046, 0, 1, "", "compute_differential_phase"], [1047, 0, 1, "", "compute_differential_phase_iq"], [1048, 0, 1, "", "compute_differential_reflectivity"], [1049, 0, 1, "", "compute_differential_reflectivity_iq"], [1050, 0, 1, "", "compute_evp"], [1051, 0, 1, "", "compute_iq"], [1052, 0, 1, "", "compute_l"], [1053, 0, 1, "", "compute_mean_phase_iq"], [1054, 0, 1, "", "compute_noise_power"], [1055, 0, 1, "", "compute_noisedBZ"], [1056, 0, 1, "", "compute_pol_variables"], [1057, 0, 1, "", "compute_pol_variables_iq"], [1058, 0, 1, "", "compute_qvp"], [1059, 0, 1, "", "compute_radial_noise_hs"], [1060, 0, 1, "", "compute_radial_noise_ivic"], [1061, 0, 1, "", "compute_rcs"], [1062, 0, 1, "", "compute_rcs_from_pr"], [1063, 0, 1, "", "compute_reflectivity"], [1064, 0, 1, "", "compute_reflectivity_iq"], [1065, 0, 1, "", "compute_rhohv"], [1066, 0, 1, "", "compute_rhohv_iq"], [1067, 0, 1, "", "compute_rqvp"], [1068, 0, 1, "", "compute_signal_power"], [1069, 0, 1, "", "compute_snr"], [1070, 0, 1, "", "compute_spectra"], [1071, 0, 1, "", "compute_spectral_differential_phase"], [1072, 0, 1, "", "compute_spectral_differential_reflectivity"], [1073, 0, 1, "", "compute_spectral_noise"], [1074, 0, 1, "", "compute_spectral_phase"], [1075, 0, 1, "", "compute_spectral_power"], [1076, 0, 1, "", "compute_spectral_reflectivity"], [1077, 0, 1, "", "compute_spectral_rhohv"], [1078, 0, 1, "", "compute_st1_iq"], [1079, 0, 1, "", "compute_st2_iq"], [1080, 0, 1, "", "compute_svp"], [1081, 0, 1, "", "compute_ts_along_coord"], [1082, 0, 1, "", "compute_vol_refl"], [1083, 0, 1, "", "compute_vp"], [1084, 0, 1, "", "compute_wbn_iq"], [1085, 0, 1, "", "conv_strat_yuter"], [1086, 0, 1, "", "data_for_centroids"], [1087, 0, 1, "", "dealias_spectra"], [1088, 0, 1, "", "detect_ml"], [1089, 0, 1, "", "determine_medoids"], [1090, 0, 1, "", "est_rain_rate_a"], [1091, 0, 1, "", "est_rain_rate_hydro"], [1092, 0, 1, "", "est_rain_rate_kdp"], [1093, 0, 1, "", "est_rain_rate_z"], [1094, 0, 1, "", "est_rain_rate_za"], [1095, 0, 1, "", "est_rain_rate_zkdp"], [1096, 0, 1, "", "est_rain_rate_zpoly"], [1097, 0, 1, "", "est_vertical_windshear"], [1098, 0, 1, "", "est_vertical_windshear_lidar"], [1099, 0, 1, "", "est_wind_profile"], [1100, 0, 1, "", "est_wind_vel"], [1101, 0, 1, "", "fetch_radar_time_profile"], [1102, 0, 1, "", "gecsx"], [1103, 0, 1, "", "get_coeff_attg"], [1104, 0, 1, "", "get_freq_band"], [1105, 0, 1, "", "get_iso0_val"], [1106, 0, 1, "", "get_ml_rng_limits"], [1107, 0, 1, "", "grid_displacement_pc"], [1108, 0, 1, "", "grid_shift"], [1109, 0, 1, "", "hydroclass_semisupervised"], [1110, 0, 1, "", "kdp_leastsquare_double_window"], [1111, 0, 1, "", "kdp_leastsquare_single_window"], [1112, 0, 1, "", "kdp_maesaka"], [1113, 0, 1, "", "kdp_schneebeli"], [1114, 0, 1, "", "kdp_vulpiani"], [1115, 0, 1, "", "map_profile_to_gates"], [1116, 0, 1, "", "melting_layer_giangrande"], [1117, 0, 1, "", "melting_layer_hydroclass"], [1118, 0, 1, "", "melting_layer_mf"], [1119, 0, 1, "", "quasi_vertical_profile"], [1120, 0, 1, "", "select_samples"], [1121, 0, 1, "", "steiner_conv_strat"], [1122, 0, 1, "", "synthetic_obs_distribution"], [1123, 0, 1, "", "texture_of_complex_phase"], [1124, 0, 1, "", "vad_browning"], [1125, 0, 1, "", "vad_michelson"]], "pyart.testing": [[1127, 2, 1, "", "Grid"], [1137, 2, 1, "", "InTemporaryDirectory"], [1139, 2, 1, "", "Radar"], [1168, 2, 1, "", "RadarSpectra"], [1197, 0, 1, "", "get_metadata"], [1198, 0, 1, "", "get_test_data"], [1199, 0, 1, "", "make_empty_grid"], [1200, 0, 1, "", "make_empty_ppi_radar"], [1201, 0, 1, "", "make_empty_rhi_radar"], [1202, 0, 1, "", "make_empty_spectra_radar"], [1203, 0, 1, "", "make_normal_storm"], [1204, 0, 1, "", "make_single_ray_radar"], [1205, 0, 1, "", "make_storm_grid"], [1206, 0, 1, "", "make_target_grid"], [1207, 0, 1, "", "make_target_radar"], [1208, 0, 1, "", "make_target_spectra_radar"], [1209, 0, 1, "", "make_velocity_aliased_radar"], [1210, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[1128, 3, 1, "", "add_field"], [1129, 3, 1, "", "get_point_longitude_latitude"], [1130, 3, 1, "", "get_projparams"], [1131, 3, 1, "", "init_point_altitude"], [1132, 3, 1, "", "init_point_longitude_latitude"], [1133, 3, 1, "", "init_point_x_y_z"], [1134, 4, 1, "", "projection_proj"], [1135, 3, 1, "", "to_xarray"], [1136, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[1138, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[1140, 3, 1, "", "add_field"], [1141, 3, 1, "", "add_field_like"], [1142, 3, 1, "", "add_filter"], [1143, 3, 1, "", "check_field_exists"], [1144, 3, 1, "", "extract_sweeps"], [1145, 3, 1, "", "get_azimuth"], [1146, 3, 1, "", "get_elevation"], [1147, 3, 1, "", "get_end"], [1148, 3, 1, "", "get_field"], [1149, 3, 1, "", "get_gate_area"], [1150, 3, 1, "", "get_gate_lat_lon_alt"], [1151, 3, 1, "", "get_gate_x_y_z"], [1152, 3, 1, "", "get_nyquist_vel"], [1153, 3, 1, "", "get_slice"], [1154, 3, 1, "", "get_start"], [1155, 3, 1, "", "get_start_end"], [1156, 3, 1, "", "info"], [1157, 3, 1, "", "init_gate_altitude"], [1158, 3, 1, "", "init_gate_longitude_latitude"], [1159, 3, 1, "", "init_gate_x_y_z"], [1160, 3, 1, "", "init_rays_per_sweep"], [1161, 3, 1, "", "iter_azimuth"], [1162, 3, 1, "", "iter_elevation"], [1163, 3, 1, "", "iter_end"], [1164, 3, 1, "", "iter_field"], [1165, 3, 1, "", "iter_slice"], [1166, 3, 1, "", "iter_start"], [1167, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[1169, 3, 1, "", "add_field"], [1170, 3, 1, "", "add_field_like"], [1171, 3, 1, "", "add_filter"], [1172, 3, 1, "", "check_field_exists"], [1173, 3, 1, "", "extract_sweeps"], [1174, 3, 1, "", "get_azimuth"], [1175, 3, 1, "", "get_elevation"], [1176, 3, 1, "", "get_end"], [1177, 3, 1, "", "get_field"], [1178, 3, 1, "", "get_gate_area"], [1179, 3, 1, "", "get_gate_lat_lon_alt"], [1180, 3, 1, "", "get_gate_x_y_z"], [1181, 3, 1, "", "get_nyquist_vel"], [1182, 3, 1, "", "get_slice"], [1183, 3, 1, "", "get_start"], [1184, 3, 1, "", "get_start_end"], [1185, 3, 1, "", "info"], [1186, 3, 1, "", "init_gate_altitude"], [1187, 3, 1, "", "init_gate_longitude_latitude"], [1188, 3, 1, "", "init_gate_x_y_z"], [1189, 3, 1, "", "init_rays_per_sweep"], [1190, 3, 1, "", "iter_azimuth"], [1191, 3, 1, "", "iter_elevation"], [1192, 3, 1, "", "iter_end"], [1193, 3, 1, "", "iter_field"], [1194, 3, 1, "", "iter_slice"], [1195, 3, 1, "", "iter_start"], [1196, 3, 1, "", "iter_start_end"]], "pyart.util": [[1212, 0, 1, "", "angular_mean"], [1213, 0, 1, "", "angular_mean_deg"], [1214, 0, 1, "", "angular_std"], [1215, 0, 1, "", "angular_std_deg"], [1216, 0, 1, "", "angular_texture_2d"], [1217, 0, 1, "", "colocated_gates"], [1218, 0, 1, "", "colocated_gates2"], [1219, 0, 1, "", "compute_azimuthal_average"], [1220, 0, 1, "", "compute_corr"], [1221, 0, 1, "", "compute_directional_stats"], [1222, 0, 1, "", "compute_mse"], [1223, 0, 1, "", "compute_nse"], [1224, 0, 1, "", "cross_section_ppi"], [1225, 0, 1, "", "cross_section_rhi"], [1226, 0, 1, "", "datetime_from_dataset"], [1227, 0, 1, "", "datetime_from_grid"], [1228, 0, 1, "", "datetime_from_radar"], [1229, 0, 1, "", "datetimes_from_dataset"], [1230, 0, 1, "", "datetimes_from_radar"], [1231, 0, 1, "", "estimate_noise_hs74"], [1232, 0, 1, "", "estimate_noise_ivic13"], [1233, 0, 1, "", "find_neighbour_gates"], [1234, 0, 1, "", "for_azimuth"], [1235, 0, 1, "", "get_column_rays"], [1236, 0, 1, "", "get_field_location"], [1237, 0, 1, "", "get_ivic_flat_reg_var_max"], [1238, 0, 1, "", "get_ivic_pct"], [1239, 0, 1, "", "get_ivic_snr_thr"], [1240, 0, 1, "", "get_target_elevations"], [1241, 0, 1, "", "grid_texture_2d"], [1242, 0, 1, "", "image_mute_radar"], [1243, 0, 1, "", "interpol_spectra"], [1244, 0, 1, "", "intersection"], [1245, 0, 1, "", "interval_mean"], [1246, 0, 1, "", "interval_std"], [1247, 0, 1, "", "is_vpt"], [1248, 0, 1, "", "ivic_flat_reg_var_max_table"], [1249, 0, 1, "", "ivic_flat_reg_wind_len_table"], [1250, 0, 1, "", "ivic_pct_table"], [1251, 0, 1, "", "ivic_snr_thr_table"], [1252, 0, 1, "", "join_radar"], [1253, 0, 1, "", "join_spectra"], [1254, 0, 1, "", "ma_broadcast_to"], [1255, 0, 1, "", "mean_of_two_angles"], [1256, 0, 1, "", "mean_of_two_angles_deg"], [1257, 0, 1, "", "radar_from_spectra"], [1258, 0, 1, "", "rolling_window"], [1259, 0, 1, "", "simulated_vel_from_profile"], [1260, 0, 1, "", "sphere_distance"], [1261, 0, 1, "", "subset_radar"], [1262, 0, 1, "", "subset_radar_spectra"], [1263, 0, 1, "", "texture"], [1264, 0, 1, "", "texture_along_ray"], [1265, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265], "aux_io": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589], "extract_sweeps_skyecho": [0, 544], "get_sweep_time_coverag": [1, 546], "read_bin": [2, 547], "read_bin_mf": [3, 548], "read_cartesian_metranet": [4, 549], "read_cf1": [5, 550], "read_cf1_cartesian": [6, 551], "read_cf1_cartesian_mf": [7, 552], "read_d3r_gcpex_nc": [8, 553], "read_dat_mf": [9, 554], "read_gam": [10, 558], "read_gif": [11, 559], "read_grib": [12, 560], "read_hpl": [13, 561], "read_iq": [14, 562], "read_kazr": [15, 563], "read_metranet": [16, 566], "read_noxp_iphex_nc": [17, 567], "read_odim_grid_h5": [18, 568], "read_odim_h5": [19, 569], "read_odim_vp_h5": [20, 570], "read_pattern": [21, 571], "read_png": [22, 572], "read_radx": [23, 578], "read_rainbow_psr": [24, 579], "read_rainbow_psr_spectra": [25, 580], "read_rainbow_wrl": [26, 581], "read_skyecho": [27, 583], "read_spectra": [28, 584], "read_swissbirdradar_spectra": [29, 585], "write_odim_grid_h5": [30, 586], "write_odim_h5": [31, 587], "write_spectra": [32, 589], "bridg": [33, 590, 591], "texture_of_complex_phas": [33, 538, 591, 1123], "config": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604], "filemetadata": [34, 35, 36, 37, 593, 594, 595, 596], "__call__": [35, 594], "get_field_nam": [36, 41, 595, 601], "get_metadata": [37, 43, 596, 603, 1197], "get_field_colormap": [38, 598], "get_field_limit": [39, 599], "get_field_map": [40, 600], "get_fillvalu": [42, 602], "load_config": [44, 604], "core": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "grid": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 796, 972, 1019, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1279, 1280, 1284, 1315], "add_field": [46, 60, 89, 607, 621, 650, 1128, 1140, 1169], "get_point_longitude_latitud": [47, 608, 1129], "get_projparam": [48, 609, 1130], "init_point_altitud": [49, 610, 1131], "init_point_longitude_latitud": [50, 611, 1132], "init_point_x_y_z": [51, 612, 1133], "projection_proj": [52, 613, 1134], "to_xarrai": [53, 614, 1135], "write": [54, 542, 615, 972, 1136], "horizontalwindprofil": [55, 56, 57, 58, 616, 617, 618, 619], "from_u_and_v": [56, 617], "u_wind": [57, 618], "v_wind": [58, 619], "radar": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 542, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 687, 759, 796, 972, 1032, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1278, 1279, 1280, 1302, 1312, 1320, 1323], "add_field_lik": [61, 90, 622, 651, 1141, 1170], "add_filt": [62, 91, 623, 652, 1142, 1171], "check_field_exist": [63, 92, 624, 653, 1143, 1172], "extract_sweep": [64, 93, 625, 654, 1144, 1173], "get_azimuth": [65, 94, 626, 655, 1145, 1174], "get_elev": [66, 95, 627, 656, 1146, 1175], "get_end": [67, 96, 628, 657, 1147, 1176], "get_field": [68, 97, 629, 658, 1148, 1177], "get_gate_area": [69, 98, 630, 659, 1149, 1178], "get_gate_lat_lon_alt": [70, 99, 631, 660, 1150, 1179], "get_gate_x_y_z": [71, 100, 632, 661, 1151, 1180], "get_nyquist_vel": [72, 101, 633, 662, 1152, 1181], "get_slic": [73, 102, 634, 663, 1153, 1182], "get_start": [74, 103, 635, 664, 1154, 1183], "get_start_end": [75, 104, 636, 665, 1155, 1184], "info": [76, 105, 637, 666, 1156, 1185], "init_gate_altitud": [77, 106, 638, 667, 1157, 1186], "init_gate_longitude_latitud": [78, 107, 639, 668, 1158, 1187], "init_gate_x_y_z": [79, 108, 640, 669, 1159, 1188], "init_rays_per_sweep": [80, 109, 641, 670, 1160, 1189], "iter_azimuth": [81, 110, 642, 671, 1161, 1190], "iter_elev": [82, 111, 643, 672, 1162, 1191], "iter_end": [83, 112, 644, 673, 1163, 1192], "iter_field": [84, 113, 645, 674, 1164, 1193], "iter_slic": [85, 114, 646, 675, 1165, 1194], "iter_start": [86, 115, 647, 676, 1166, 1195], "iter_start_end": [87, 116, 648, 677, 1167, 1196], "radarspectra": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196], "antenna_to_cartesian": [117, 678], "antenna_vectors_to_cartesian": [118, 679], "cartesian_to_antenna": [119, 680], "cartesian_to_geograph": [120, 681], "cartesian_to_geographic_aeqd": [121, 682], "cartesian_vectors_to_geograph": [122, 683], "geographic_to_cartesian": [123, 684], "geographic_to_cartesian_aeqd": [124, 685], "wgs84_to_swissch1903": [125, 686], "test": [125, 686, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1323], "exampl": [125, 686, 1019, 1268, 1272, 1273, 1277, 1282, 1301, 1304], "correct": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 1268, 1269, 1272, 1319], "calculate_attenu": [126, 716], "calculate_attenuation_philinear": [127, 717], "calculate_attenuation_zphi": [128, 718], "compute_apparent_vpr": [129, 719], "compute_theoretical_vpr": [130, 720], "correct_bia": [131, 721], "correct_noise_rhohv": [132, 722], "correct_sys_phas": [133, 723], "correct_vis": [134, 724], "correct_vpr": [135, 725], "correct_vpr_spatialis": [136, 726], "dealias_fourdd": [137, 727], "dealias_region_bas": [138, 728], "dealias_unwrap_phas": [139, 729], "despeckle_field": [140, 730], "det_sys_phase_rai": [141, 731], "est_rhohv_rain": [142, 732], "est_zdr_precip": [143, 733], "est_zdr_snow": [144, 734], "find_object": [145, 735], "get_mask_fzl": [146, 737], "get_sun_hit": [147, 738], "get_sun_hits_iv": [148, 739], "get_sun_hits_psr": [149, 740], "phase_proc_lp": [150, 742], "phase_proc_lp_gf": [151, 743], "ptoa_to_sf": [152, 744], "scanning_loss": [153, 746], "selfconsistency_bia": [154, 747], "selfconsistency_bias2": [155, 748], "selfconsistency_kdp_phidp": [156, 749], "smooth_mask": [157, 750], "smooth_phidp_double_window": [158, 751], "smooth_phidp_single_window": [159, 752], "solar_flux_lookup": [160, 753], "sun_position_mfr": [161, 754], "sun_position_pysolar": [162, 755], "sun_pow": [163, 756], "sun_retriev": [164, 757], "except": [165, 166, 167, 168, 758], "deprecatedattribut": 165, "deprecatedfunctionnam": 166, "missingoptionaldepend": 167, "_deprecated_alia": 168, "filter": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 1319], "gatefilt": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 1316], "copi": [170, 430, 689, 761, 998], "exclude_abov": [171, 690, 762], "exclude_al": [172, 691, 763], "exclude_below": [173, 692, 764], "exclude_equ": [174, 693, 765], "exclude_g": [175, 694, 766], "exclude_insid": [176, 695, 767], "exclude_invalid": [177, 696, 768], "exclude_mask": [178, 697, 769], "exclude_non": [179, 698, 770], "exclude_not_equ": [180, 699, 771], "exclude_outsid": [181, 700, 772], "exclude_transit": [182, 701, 773], "gate_exclud": [183, 702, 774], "gate_includ": [184, 703, 775], "include_abov": [185, 704, 776], "include_al": [186, 705, 777], "include_below": [187, 706, 778], "include_equ": [188, 707, 779], "include_g": [189, 708, 780], "include_insid": [190, 709, 781], "include_non": [191, 710, 782], "include_not_equ": [192, 711, 783], "include_not_mask": [193, 712, 784], "include_not_transit": [194, 713, 785], "include_outsid": [195, 714, 786], "include_valid": [196, 715, 787], "birds_gate_filt": [197, 788], "class_based_gate_filt": [198, 789], "iso0_based_gate_filt": [199, 790], "moment_and_texture_based_gate_filt": [200, 791], "moment_based_gate_filt": [201, 741, 792], "snr_based_gate_filt": [202, 793], "temp_based_gate_filt": [203, 794], "visibility_based_gate_filt": [204, 795], "graph": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971], "airborneradardisplai": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830], "generate_az_rhi_titl": [206, 273, 306, 343, 798, 865, 898, 935], "generate_filenam": [207, 243, 259, 274, 307, 344, 799, 835, 851, 866, 899, 936], "generate_ray_titl": [208, 275, 308, 345, 800, 867, 900, 937], "generate_titl": [209, 276, 309, 346, 801, 868, 901, 938], "generate_vpt_titl": [210, 277, 310, 347, 802, 869, 902, 939], "generate_xsection_titl": [211, 278, 311, 348, 803, 870, 903, 940], "label_xaxis_r": [212, 279, 312, 349, 804, 871, 904, 941], "label_xaxis_rai": [213, 280, 313, 350, 805, 872, 905, 942], "label_xaxis_tim": [214, 281, 314, 351, 806, 873, 906, 943], "label_xaxis_x": [215, 282, 315, 352, 807, 874, 907, 944], "label_xaxis_xsect": [216, 283, 316, 353, 808, 875, 908, 945], "label_yaxis_field": [217, 284, 317, 354, 809, 876, 909, 946], "label_yaxis_xsect": [218, 285, 318, 355, 810, 877, 910, 947], "label_yaxis_i": [219, 286, 319, 356, 811, 878, 911, 948], "label_yaxis_z": [220, 287, 320, 357, 812, 879, 912, 949], "plot": [221, 288, 321, 358, 796, 813, 880, 913, 950, 1272, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1303, 1305, 1306, 1318], "plot_azimuth_to_rhi": [222, 289, 322, 359, 814, 881, 914, 951], "plot_colorbar": [223, 247, 265, 290, 323, 360, 815, 839, 857, 882, 915, 952], "plot_cr_rast": [224, 291, 324, 361, 816, 883, 916, 953], "plot_cross_hair": [225, 292, 325, 362, 817, 884, 917, 954], "plot_grid_lin": [226, 293, 326, 363, 818, 885, 918, 955], "plot_label": [227, 228, 294, 295, 327, 328, 364, 365, 819, 820, 886, 887, 919, 920, 956, 957], "plot_ppi": [229, 296, 332, 369, 821, 888, 924, 961], "plot_range_r": [230, 231, 297, 298, 334, 335, 371, 372, 822, 823, 889, 890, 926, 927, 963, 964], "plot_rai": [232, 299, 336, 373, 824, 891, 928, 965], "plot_rhi": [233, 300, 337, 374, 825, 892, 929, 966], "plot_sweep_grid": [234, 826], "plot_vpt": [235, 301, 338, 375, 827, 893, 930, 967], "plot_xsect": [236, 302, 339, 376, 828, 894, 931, 968], "set_aspect_ratio": [237, 303, 340, 377, 829, 895, 932, 969], "set_limit": [238, 304, 341, 378, 830, 896, 933, 970], "gridmapdisplai": [239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 1298], "cartopy_coastlin": [240, 832], "cartopy_political_boundari": [241, 833], "cartopy_st": [242, 834], "generate_grid_titl": [244, 260, 836, 852], "generate_latitudinal_level_titl": [245, 261, 837, 853], "generate_longitudinal_level_titl": [246, 262, 838, 854], "plot_cross_sect": [248, 840], "plot_cross_section_level": [249, 841], "plot_crosshair": [250, 266, 842, 858], "plot_grid": [251, 267, 843, 859], "plot_grid_contour": [252, 844], "plot_grid_raw": [253, 845], "plot_latitude_slic": [254, 268, 846, 860], "plot_latitudinal_level": [255, 269, 847, 861], "plot_longitude_slic": [256, 270, 848, 862], "plot_longitudinal_level": [257, 271, 849, 863], "gridmapdisplaybasemap": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863], "get_basemap": [263, 855], "plot_basemap": [264, 856], "radardisplai": [272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896], "radarmapdisplai": [305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933], "plot_line_geo": [329, 366, 921, 958], "plot_line_xi": [330, 367, 922, 959], "plot_point": [331, 368, 923, 960], "plot_ppi_map": [333, 370, 925, 962], "radarmapdisplaybasemap": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970], "io": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994], "make_time_unit_str": [379, 973], "prepare_for_read": [380, 974], "read": [381, 542, 972, 975, 1274, 1275, 1317, 1318, 1319], "read_arm_sond": [382, 976], "read_arm_sonde_vap": [383, 977], "read_cfradi": [384, 978], "read_cfradial2": [385, 979], "read_chl": [386, 980], "read_grid": [387, 981], "read_grid_mdv": [388, 982], "read_mdv": [389, 983], "read_nexrad_arch": [390, 984], "read_nexrad_cdm": [391, 985], "read_nexrad_level3": [392, 986], "read_rsl": [393, 987], "read_sigmet": [394, 988], "read_uf": [395, 989], "write_cfradi": [396, 990], "write_grid": [397, 991], "write_grid_geotiff": [398, 992], "write_grid_mdv": [399, 993], "write_uf": [400, 994], "lazydict": [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "lazyloaddict": [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008], "__contains__": 402, "__delattr__": 403, "__delitem__": 404, "__dir__": 405, "__eq__": 406, "__format__": 407, "__ge__": 408, "__getattribute__": 409, "__getitem__": 410, "__getstate__": 411, "__gt__": 412, "__init__": 413, "__init_subclass__": 414, "__iter__": 415, "__le__": 416, "__len__": 417, "__lt__": 418, "__ne__": 419, "__new__": 420, "__reduce__": 421, "__reduce_ex__": 422, "__repr__": 423, "__setattr__": 424, "__setitem__": 425, "__sizeof__": 426, "__str__": 427, "__subclasshook__": 428, "clear": [429, 997, 1010], "get": [431, 999, 1011, 1309], "has_kei": [432, 1000], "item": [433, 1001, 1012], "kei": [434, 1002, 1013], "pop": [435, 1003, 1014], "popitem": [436, 1004, 1015], "set_lazi": [437, 1005], "setdefault": [438, 1006, 1016], "updat": [439, 1007, 1017], "valu": [440, 1008, 1018], "map": [441, 442, 443, 444, 445, 446, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1272, 1277, 1279, 1280, 1291, 1315], "example_roi_func_const": [441, 1024], "example_roi_func_dist": [442, 1025], "example_roi_func_dist_beam": [443, 1026], "grid_from_radar": [444, 1028], "map_gates_to_grid": [445, 1029], "map_to_grid": [446, 1030], "retriev": [447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1272, 1301, 1319], "_destandard": 447, "_get_res_vol_sid": 448, "atmospheric_gas_att": [449, 1033], "calculate_snr_from_reflect": [450, 1034], "calculate_velocity_textur": [451, 1035], "compute_doppler_veloc": [452, 1037], "compute_doppler_velocity_iq": [453, 1038], "compute_doppler_width": [454, 1039], "compute_doppler_width_iq": [455, 1040], "compute_apparent_profil": [456, 1041], "compute_bird_dens": [457, 1042], "compute_ccor": [458, 1043], "compute_cdr": [459, 1044], "compute_centroid": [460, 1045], "compute_differential_phas": [461, 1046], "compute_differential_phase_iq": [462, 1047], "compute_differential_reflect": [463, 1048], "compute_differential_reflectivity_iq": [464, 1049], "compute_evp": [465, 1050], "compute_iq": [466, 1051], "compute_l": [467, 1052], "compute_mean_phase_iq": [468, 1053], "compute_noise_pow": [469, 1054], "compute_noisedbz": [470, 1055], "compute_pol_vari": [471, 1056], "compute_pol_variables_iq": [472, 1057], "compute_qvp": [473, 1058], "compute_radial_noise_h": [474, 1059], "compute_radial_noise_iv": [475, 1060], "compute_rc": [476, 1061], "compute_rcs_from_pr": [477, 1062], "compute_reflect": [478, 1063], "compute_reflectivity_iq": [479, 1064], "compute_rhohv": [480, 1065], "compute_rhohv_iq": [481, 1066], "compute_rqvp": [482, 1067], "compute_signal_pow": [483, 1068], "compute_snr": [484, 1069], "compute_spectra": [485, 1070], "compute_spectral_differential_phas": [486, 1071], "compute_spectral_differential_reflect": [487, 1072], "compute_spectral_nois": [488, 1073], "compute_spectral_phas": [489, 1074], "compute_spectral_pow": [490, 1075], "compute_spectral_reflect": [491, 1076], "compute_spectral_rhohv": [492, 1077], "compute_st1_iq": [493, 1078], "compute_st2_iq": [494, 1079], "compute_svp": [495, 1080], "compute_ts_along_coord": [496, 1081], "compute_vol_refl": [497, 1082], "compute_vp": [498, 1083], "compute_wbn_iq": [499, 1084], "conv_strat_yut": [500, 1085], "data_for_centroid": [501, 1086], "dealias_spectra": [502, 1087], "detect_ml": [503, 1088], "paremet": [503, 1088], "determine_medoid": [504, 1089], "est_rain_rate_a": [505, 1090], "est_rain_rate_hydro": [506, 1091], "est_rain_rate_kdp": [507, 1092], "est_rain_rate_z": [508, 1093], "est_rain_rate_za": [509, 1094], "est_rain_rate_zkdp": [510, 1095], "est_rain_rate_zpoli": [511, 1096], "est_vertical_windshear": [512, 1097], "est_vertical_windshear_lidar": [513, 1098], "est_wind_profil": [514, 1099], "est_wind_vel": [515, 1100], "fetch_radar_time_profil": [516, 1101], "gecsx": [517, 1102], "get_coeff_attg": [518, 1103], "get_freq_band": [519, 1104], "get_iso0_v": [520, 1105], "get_ml_rng_limit": [521, 1106], "grid_displacement_pc": [522, 1107], "grid_shift": [523, 1108], "hydroclass_semisupervis": [524, 1109], "kdp_leastsquare_double_window": [525, 1110], "kdp_leastsquare_single_window": [526, 1111], "kdp_maesaka": [527, 1112], "kdp_schneeb": [528, 1113], "kdp_vulpiani": [529, 1114], "map_profile_to_g": [530, 1115], "melting_layer_giangrand": [531, 1116], "melting_layer_hydroclass": [532, 1117], "melting_layer_mf": [533, 1118], "quasi_vertical_profil": [534, 1119], "select_sampl": [535, 1120], "steiner_conv_strat": [536, 1121], "synthetic_obs_distribut": [537, 1122], "vad_brown": [539, 1124], "vad_michelson": [540, 1125], "_debug_info": 541, "auxiliari": 542, "input": [542, 972, 1272, 1273], "output": [542, 972, 1272, 1273], "data": [542, 759, 796, 972, 1274, 1275, 1315, 1316, 1317, 1318, 1319], "convert_data": 543, "get_librari": 545, "read_edge_netcdf": 555, "read_file_c": 556, "read_file_pi": 557, "read_knmi_grid_h5": 564, "read_mch_vad": 565, "read_product_c": 573, "read_product_pi": 574, "read_psr_cpi_head": 575, "read_psr_head": 576, "read_psr_spectra": 577, "read_sinarame_h5": 582, "write_sinarame_cfradi": 588, "other": [590, 687, 1317], "toolkit": [590, 1323], "phase": 590, "function": [590, 687], "get_k": 597, "class": 605, "coordin": 605, "transform": 605, "veloc": [687, 1270, 1313, 1318], "unfold": 687, "helper": 687, "gauss_fit": 736, "retrieval_result": 745, "plot_convstrat_schem": 971, "sond": 972, "special": 972, "us": [972, 1270, 1278, 1298], "mutablemap": [1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "roi": 1019, "region": [1019, 1270], "interest": 1019, "gatemapp": [1020, 1021, 1022, 1023, 1278], "distance_toler": 1021, "mapped_radar": 1022, "time_toler": 1023, "get_earth_radiu": 1027, "polar_to_cartesian": 1031, "composite_reflect": 1036, "intemporarydirectori": [1137, 1138], "cleanup": 1138, "get_test_data": 1198, "make_empty_grid": 1199, "make_empty_ppi_radar": 1200, "make_empty_rhi_radar": 1201, "make_empty_spectra_radar": 1202, "make_normal_storm": 1203, "make_single_ray_radar": 1204, "make_storm_grid": 1205, "make_target_grid": 1206, "make_target_radar": 1207, "make_target_spectra_radar": 1208, "make_velocity_aliased_radar": 1209, "make_velocity_aliased_rhi_radar": 1210, "util": [1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265], "angular_mean": 1212, "angular_mean_deg": 1213, "angular_std": 1214, "angular_std_deg": 1215, "angular_texture_2d": 1216, "colocated_g": 1217, "colocated_gates2": 1218, "compute_azimuthal_averag": 1219, "compute_corr": 1220, "compute_directional_stat": 1221, "compute_ms": 1222, "compute_ns": 1223, "cross_section_ppi": 1224, "cross_section_rhi": 1225, "datetime_from_dataset": 1226, "datetime_from_grid": 1227, "datetime_from_radar": 1228, "datetimes_from_dataset": 1229, "datetimes_from_radar": 1230, "estimate_noise_hs74": 1231, "estimate_noise_ivic13": 1232, "find_neighbour_g": 1233, "for_azimuth": 1234, "assumpt": [1234, 1260], "get_column_rai": 1235, "get_field_loc": 1236, "get_ivic_flat_reg_var_max": 1237, "get_ivic_pct": 1238, "get_ivic_snr_thr": 1239, "get_target_elev": 1240, "grid_texture_2d": 1241, "image_mute_radar": 1242, "interpol_spectra": 1243, "intersect": 1244, "interval_mean": 1245, "interval_std": 1246, "is_vpt": 1247, "ivic_flat_reg_var_max_t": 1248, "ivic_flat_reg_wind_len_t": 1249, "ivic_pct_t": 1250, "ivic_snr_thr_t": 1251, "join_radar": 1252, "join_spectra": 1253, "ma_broadcast_to": 1254, "mean_of_two_angl": 1255, "mean_of_two_angles_deg": 1256, "radar_from_spectra": 1257, "rolling_window": 1258, "simulated_vel_from_profil": 1259, "sphere_dist": 1260, "paramet": 1260, "subset_radar": 1261, "subset_radar_spectra": 1262, "textur": 1263, "texture_along_rai": 1264, "to_vpt": 1265, "api": 1266, "manual": 1266, "changelog": 1267, "v1": 1267, "8": 1267, "7": 1267, "6": 1267, "5": 1267, "4": 1267, "3": [1267, 1274, 1298], "2": [1267, 1274, 1275], "1": 1267, "new": 1267, "addit": 1267, "moment": [1268, 1272, 1287], "reflect": [1269, 1286, 1288, 1294, 1295, 1303], "attenu": [1269, 1319], "dealia": 1270, "doppler": [1270, 1318], "base": 1270, "algorithm": [1270, 1304], "comput": [1271, 1276, 1281, 1300, 1307, 1308, 1321], "time": [1271, 1276, 1281, 1300, 1307, 1308, 1321], "galleri": [1272, 1310], "nexrad": [1274, 1275, 1287, 1288], "from": [1274, 1284, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1299, 1318, 1322], "aw": 1274, "cloud": 1274, "level": [1274, 1275], "older": 1275, "fix": 1275, "latitud": 1275, "longitud": 1275, "issu": 1275, "compar": 1278, "two": [1278, 1280, 1297], "singl": 1279, "cartesian": [1279, 1280, 1315, 1317], "choos": 1283, "colormap": 1283, "your": [1283, 1285], "cross": [1284, 1299], "section": [1284, 1299], "modifi": 1285, "colorbar": 1285, "creat": [1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1311, 1325], "an": [1286, 1294, 1295, 1325], "imag": 1286, "mute": 1286, "multipl": [1287, 1292, 1293], "file": [1287, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1311, 1312, 1317, 1323], "ppi": [1289, 1290, 1291, 1299], "cfradial": 1289, "mdv": [1290, 1294, 1295, 1296], "cartopi": 1291, "panel": [1292, 1293, 1297, 1298], "rhi": [1292, 1293, 1294, 1295, 1296, 1297], "cf": [1292, 1293], "radial": [1292, 1293], "contour": [1294, 1295], "line": [1294, 1295], "volum": 1299, "extract": 1302, "column": 1302, "abov": 1302, "point": 1302, "calcul": [1303, 1305, 1306], "composit": 1303, "convect": 1304, "stratiform": 1304, "classif": [1304, 1305, 1319], "how": 1304, "work": 1304, "summari": 1304, "recommend": 1304, "best": 1304, "practic": 1304, "refer": 1304, "hydrometeor": [1305, 1319], "vad": [1306, 1318], "profil": 1306, "about": 1309, "meteoswiss": [1309, 1317], "fork": 1309, "py": [1309, 1316, 1317, 1320, 1323], "art": [1309, 1316, 1317, 1320, 1323], "cite": [1309, 1323], "what": 1309, "can": 1309, "do": 1309, "short": 1309, "cours": 1309, "instal": [1309, 1322, 1323], "depend": [1309, 1322, 1325], "option": [1309, 1322, 1325], "help": 1309, "contribut": 1309, "notebook": 1310, "basic": 1311, "ingest": 1311, "netcdf": 1311, "field": 1312, "manipul": 1312, "save": 1312, "object": [1312, 1320], "dealias": [1313, 1318], "mask": 1316, "With": 1316, "metranet": 1317, "polar": 1317, "low": 1317, "re": 1317, "mlx": 1317, "high": 1317, "mhx": 1317, "product": 1317, "process": 1318, "wind": 1318, "swiss": [1318, 1319], "volumetr": 1318, "scan": 1318, "cappi": 1318, "azimuth": 1318, "displai": 1318, "raw": 1319, "c": 1319, "band": 1319, "ground": 1319, "clutter": 1319, "nois": 1319, "remov": 1319, "kdp": 1319, "estim": 1319, "qpe": 1319, "The": [1320, 1323], "index": 1320, "requir": 1322, "obtain": 1322, "latest": 1322, "sourc": 1322, "frequent": 1322, "ask": 1322, "question": 1322, "contributor": 1323, "": 1323, "guid": [1323, 1324], "python": 1323, "arm": 1323, "import": 1323, "link": 1323, "resourc": 1323, "code": 1323, "style": 1323, "setup": 1323, "github": 1323, "blog": 1323, "post": 1323, "user": 1324, "set": 1325, "up": 1325, "environ": 1325, "anaconda": 1325, "channel": 1325, "ad": 1325, "path": 1325, "more": 1325, "inform": 1325}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart.aux_io.extract_sweeps_skyecho": [[0, "pyart-aux-io-extract-sweeps-skyecho"], [544, "pyart-aux-io-extract-sweeps-skyecho"]], "pyart.aux_io.get_sweep_time_coverage": [[1, "pyart-aux-io-get-sweep-time-coverage"], [546, "pyart-aux-io-get-sweep-time-coverage"]], "pyart.aux_io.read_bin": [[2, "pyart-aux-io-read-bin"], [547, "pyart-aux-io-read-bin"]], "pyart.aux_io.read_bin_mf": [[3, "pyart-aux-io-read-bin-mf"], [548, "pyart-aux-io-read-bin-mf"]], "pyart.aux_io.read_cartesian_metranet": [[4, "pyart-aux-io-read-cartesian-metranet"], [549, "pyart-aux-io-read-cartesian-metranet"]], "pyart.aux_io.read_cf1": [[5, "pyart-aux-io-read-cf1"], [550, "pyart-aux-io-read-cf1"]], "pyart.aux_io.read_cf1_cartesian": [[6, "pyart-aux-io-read-cf1-cartesian"], [551, "pyart-aux-io-read-cf1-cartesian"]], "pyart.aux_io.read_cf1_cartesian_mf": [[7, "pyart-aux-io-read-cf1-cartesian-mf"], [552, "pyart-aux-io-read-cf1-cartesian-mf"]], "pyart.aux_io.read_d3r_gcpex_nc": [[8, "pyart-aux-io-read-d3r-gcpex-nc"], [553, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_dat_mf": [[9, "pyart-aux-io-read-dat-mf"], [554, "pyart-aux-io-read-dat-mf"]], "pyart.aux_io.read_gamic": [[10, "pyart-aux-io-read-gamic"], [558, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_gif": [[11, "pyart-aux-io-read-gif"], [559, "pyart-aux-io-read-gif"]], "pyart.aux_io.read_grib": [[12, "pyart-aux-io-read-grib"], [560, "pyart-aux-io-read-grib"]], "pyart.aux_io.read_hpl": [[13, "pyart-aux-io-read-hpl"], [561, "pyart-aux-io-read-hpl"]], "pyart.aux_io.read_iq": [[14, "pyart-aux-io-read-iq"], [562, "pyart-aux-io-read-iq"]], "pyart.aux_io.read_kazr": [[15, "pyart-aux-io-read-kazr"], [563, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_metranet": [[16, "pyart-aux-io-read-metranet"], [566, "pyart-aux-io-read-metranet"]], "pyart.aux_io.read_noxp_iphex_nc": [[17, "pyart-aux-io-read-noxp-iphex-nc"], [567, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_grid_h5": [[18, "pyart-aux-io-read-odim-grid-h5"], [568, "pyart-aux-io-read-odim-grid-h5"]], "pyart.aux_io.read_odim_h5": [[19, "pyart-aux-io-read-odim-h5"], [569, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_odim_vp_h5": [[20, "pyart-aux-io-read-odim-vp-h5"], [570, "pyart-aux-io-read-odim-vp-h5"]], "pyart.aux_io.read_pattern": [[21, "pyart-aux-io-read-pattern"], [571, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_png": [[22, "pyart-aux-io-read-png"], [572, "pyart-aux-io-read-png"]], "pyart.aux_io.read_radx": [[23, "pyart-aux-io-read-radx"], [578, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_rainbow_psr": [[24, "pyart-aux-io-read-rainbow-psr"], [579, "pyart-aux-io-read-rainbow-psr"]], "pyart.aux_io.read_rainbow_psr_spectra": [[25, "pyart-aux-io-read-rainbow-psr-spectra"], [580, "pyart-aux-io-read-rainbow-psr-spectra"]], "pyart.aux_io.read_rainbow_wrl": [[26, "pyart-aux-io-read-rainbow-wrl"], [581, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_skyecho": [[27, "pyart-aux-io-read-skyecho"], [583, "pyart-aux-io-read-skyecho"]], "pyart.aux_io.read_spectra": [[28, "pyart-aux-io-read-spectra"], [584, "pyart-aux-io-read-spectra"]], "pyart.aux_io.read_swissbirdradar_spectra": [[29, "pyart-aux-io-read-swissbirdradar-spectra"], [585, "pyart-aux-io-read-swissbirdradar-spectra"]], "pyart.aux_io.write_odim_grid_h5": [[30, "pyart-aux-io-write-odim-grid-h5"], [586, "pyart-aux-io-write-odim-grid-h5"]], "pyart.aux_io.write_odim_h5": [[31, "pyart-aux-io-write-odim-h5"], [587, "pyart-aux-io-write-odim-h5"]], "pyart.aux_io.write_spectra": [[32, "pyart-aux-io-write-spectra"], [589, "pyart-aux-io-write-spectra"]], "pyart.bridge.texture_of_complex_phase": [[33, "pyart-bridge-texture-of-complex-phase"], [591, "pyart-bridge-texture-of-complex-phase"]], "pyart.config.FileMetadata": [[34, "pyart-config-filemetadata"], [593, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[35, "pyart-config-filemetadata-call"], [594, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[36, "pyart-config-filemetadata-get-field-name"], [595, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[37, "pyart-config-filemetadata-get-metadata"], [596, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[38, "pyart-config-get-field-colormap"], [598, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[39, "pyart-config-get-field-limits"], [599, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[40, "pyart-config-get-field-mapping"], [600, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[41, "pyart-config-get-field-name"], [601, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[42, "pyart-config-get-fillvalue"], [602, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[43, "pyart-config-get-metadata"], [603, "pyart-config-get-metadata"]], "pyart.config.load_config": [[44, "pyart-config-load-config"], [604, "pyart-config-load-config"]], "pyart.core.Grid": [[45, "pyart-core-grid"], [606, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[46, "pyart-core-grid-add-field"], [607, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[47, "pyart-core-grid-get-point-longitude-latitude"], [608, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[48, "pyart-core-grid-get-projparams"], [609, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[49, "pyart-core-grid-init-point-altitude"], [610, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[50, "pyart-core-grid-init-point-longitude-latitude"], [611, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[51, "pyart-core-grid-init-point-x-y-z"], [612, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[52, "pyart-core-grid-projection-proj"], [613, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[53, "pyart-core-grid-to-xarray"], [614, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[54, "pyart-core-grid-write"], [615, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[55, "pyart-core-horizontalwindprofile"], [616, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[56, "pyart-core-horizontalwindprofile-from-u-and-v"], [617, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[57, "pyart-core-horizontalwindprofile-u-wind"], [618, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[58, "pyart-core-horizontalwindprofile-v-wind"], [619, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[59, "pyart-core-radar"], [620, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[60, "pyart-core-radar-add-field"], [621, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[61, "pyart-core-radar-add-field-like"], [622, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[62, "pyart-core-radar-add-filter"], [623, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[63, "pyart-core-radar-check-field-exists"], [624, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[64, "pyart-core-radar-extract-sweeps"], [625, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[65, "pyart-core-radar-get-azimuth"], [626, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[66, "pyart-core-radar-get-elevation"], [627, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[67, "pyart-core-radar-get-end"], [628, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[68, "pyart-core-radar-get-field"], [629, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[69, "pyart-core-radar-get-gate-area"], [630, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[70, "pyart-core-radar-get-gate-lat-lon-alt"], [631, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[71, "pyart-core-radar-get-gate-x-y-z"], [632, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[72, "pyart-core-radar-get-nyquist-vel"], [633, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[73, "pyart-core-radar-get-slice"], [634, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[74, "pyart-core-radar-get-start"], [635, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[75, "pyart-core-radar-get-start-end"], [636, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[76, "pyart-core-radar-info"], [637, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[77, "pyart-core-radar-init-gate-altitude"], [638, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[78, "pyart-core-radar-init-gate-longitude-latitude"], [639, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[79, "pyart-core-radar-init-gate-x-y-z"], [640, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[80, "pyart-core-radar-init-rays-per-sweep"], [641, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[81, "pyart-core-radar-iter-azimuth"], [642, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[82, "pyart-core-radar-iter-elevation"], [643, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[83, "pyart-core-radar-iter-end"], [644, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[84, "pyart-core-radar-iter-field"], [645, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[85, "pyart-core-radar-iter-slice"], [646, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[86, "pyart-core-radar-iter-start"], [647, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[87, "pyart-core-radar-iter-start-end"], [648, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[88, "pyart-core-radarspectra"], [649, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.add_field": [[89, "pyart-core-radarspectra-add-field"], [650, "pyart-core-radarspectra-add-field"]], "pyart.core.RadarSpectra.add_field_like": [[90, "pyart-core-radarspectra-add-field-like"], [651, "pyart-core-radarspectra-add-field-like"]], "pyart.core.RadarSpectra.add_filter": [[91, "pyart-core-radarspectra-add-filter"], [652, "pyart-core-radarspectra-add-filter"]], "pyart.core.RadarSpectra.check_field_exists": [[92, "pyart-core-radarspectra-check-field-exists"], [653, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.extract_sweeps": [[93, "pyart-core-radarspectra-extract-sweeps"], [654, "pyart-core-radarspectra-extract-sweeps"]], "pyart.core.RadarSpectra.get_azimuth": [[94, "pyart-core-radarspectra-get-azimuth"], [655, "pyart-core-radarspectra-get-azimuth"]], "pyart.core.RadarSpectra.get_elevation": [[95, "pyart-core-radarspectra-get-elevation"], [656, "pyart-core-radarspectra-get-elevation"]], "pyart.core.RadarSpectra.get_end": [[96, "pyart-core-radarspectra-get-end"], [657, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_field": [[97, "pyart-core-radarspectra-get-field"], [658, "pyart-core-radarspectra-get-field"]], "pyart.core.RadarSpectra.get_gate_area": [[98, "pyart-core-radarspectra-get-gate-area"], [659, "pyart-core-radarspectra-get-gate-area"]], "pyart.core.RadarSpectra.get_gate_lat_lon_alt": [[99, "pyart-core-radarspectra-get-gate-lat-lon-alt"], [660, "pyart-core-radarspectra-get-gate-lat-lon-alt"]], "pyart.core.RadarSpectra.get_gate_x_y_z": [[100, "pyart-core-radarspectra-get-gate-x-y-z"], [661, "pyart-core-radarspectra-get-gate-x-y-z"]], "pyart.core.RadarSpectra.get_nyquist_vel": [[101, "pyart-core-radarspectra-get-nyquist-vel"], [662, "pyart-core-radarspectra-get-nyquist-vel"]], "pyart.core.RadarSpectra.get_slice": [[102, "pyart-core-radarspectra-get-slice"], [663, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[103, "pyart-core-radarspectra-get-start"], [664, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[104, "pyart-core-radarspectra-get-start-end"], [665, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.info": [[105, "pyart-core-radarspectra-info"], [666, "pyart-core-radarspectra-info"]], "pyart.core.RadarSpectra.init_gate_altitude": [[106, "pyart-core-radarspectra-init-gate-altitude"], [667, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[107, "pyart-core-radarspectra-init-gate-longitude-latitude"], [668, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[108, "pyart-core-radarspectra-init-gate-x-y-z"], [669, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[109, "pyart-core-radarspectra-init-rays-per-sweep"], [670, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[110, "pyart-core-radarspectra-iter-azimuth"], [671, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[111, "pyart-core-radarspectra-iter-elevation"], [672, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[112, "pyart-core-radarspectra-iter-end"], [673, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[113, "pyart-core-radarspectra-iter-field"], [674, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[114, "pyart-core-radarspectra-iter-slice"], [675, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[115, "pyart-core-radarspectra-iter-start"], [676, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[116, "pyart-core-radarspectra-iter-start-end"], [677, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.antenna_to_cartesian": [[117, "pyart-core-antenna-to-cartesian"], [678, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[118, "pyart-core-antenna-vectors-to-cartesian"], [679, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[119, "pyart-core-cartesian-to-antenna"], [680, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[120, "pyart-core-cartesian-to-geographic"], [681, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[121, "pyart-core-cartesian-to-geographic-aeqd"], [682, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[122, "pyart-core-cartesian-vectors-to-geographic"], [683, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[123, "pyart-core-geographic-to-cartesian"], [684, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[124, "pyart-core-geographic-to-cartesian-aeqd"], [685, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.core.wgs84_to_swissCH1903": [[125, "pyart-core-wgs84-to-swissch1903"], [686, "pyart-core-wgs84-to-swissch1903"]], "Test example": [[125, "test-example"], [686, "test-example"]], "pyart.correct.calculate_attenuation": [[126, "pyart-correct-calculate-attenuation"], [716, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[127, "pyart-correct-calculate-attenuation-philinear"], [717, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[128, "pyart-correct-calculate-attenuation-zphi"], [718, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.compute_apparent_vpr": [[129, "pyart-correct-compute-apparent-vpr"], [719, "pyart-correct-compute-apparent-vpr"]], "pyart.correct.compute_theoretical_vpr": [[130, "pyart-correct-compute-theoretical-vpr"], [720, "pyart-correct-compute-theoretical-vpr"]], "pyart.correct.correct_bias": [[131, "pyart-correct-correct-bias"], [721, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[132, "pyart-correct-correct-noise-rhohv"], [722, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.correct_sys_phase": [[133, "pyart-correct-correct-sys-phase"], [723, "pyart-correct-correct-sys-phase"]], "pyart.correct.correct_visibility": [[134, "pyart-correct-correct-visibility"], [724, "pyart-correct-correct-visibility"]], "pyart.correct.correct_vpr": [[135, "pyart-correct-correct-vpr"], [725, "pyart-correct-correct-vpr"]], "pyart.correct.correct_vpr_spatialised": [[136, "pyart-correct-correct-vpr-spatialised"], [726, "pyart-correct-correct-vpr-spatialised"]], "pyart.correct.dealias_fourdd": [[137, "pyart-correct-dealias-fourdd"], [727, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[138, "pyart-correct-dealias-region-based"], [728, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[139, "pyart-correct-dealias-unwrap-phase"], [729, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[140, "pyart-correct-despeckle-field"], [730, "pyart-correct-despeckle-field"]], "pyart.correct.det_sys_phase_ray": [[141, "pyart-correct-det-sys-phase-ray"], [731, "pyart-correct-det-sys-phase-ray"]], "pyart.correct.est_rhohv_rain": [[142, "pyart-correct-est-rhohv-rain"], [732, "pyart-correct-est-rhohv-rain"]], "pyart.correct.est_zdr_precip": [[143, "pyart-correct-est-zdr-precip"], [733, "pyart-correct-est-zdr-precip"]], "pyart.correct.est_zdr_snow": [[144, "pyart-correct-est-zdr-snow"], [734, "pyart-correct-est-zdr-snow"]], "pyart.correct.find_objects": [[145, "pyart-correct-find-objects"], [735, "pyart-correct-find-objects"]], "pyart.correct.get_mask_fzl": [[146, "pyart-correct-get-mask-fzl"], [737, "pyart-correct-get-mask-fzl"]], "pyart.correct.get_sun_hits": [[147, "pyart-correct-get-sun-hits"], [738, "pyart-correct-get-sun-hits"]], "pyart.correct.get_sun_hits_ivic": [[148, "pyart-correct-get-sun-hits-ivic"], [739, "pyart-correct-get-sun-hits-ivic"]], "pyart.correct.get_sun_hits_psr": [[149, "pyart-correct-get-sun-hits-psr"], [740, "pyart-correct-get-sun-hits-psr"]], "pyart.correct.phase_proc_lp": [[150, "pyart-correct-phase-proc-lp"], [742, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[151, "pyart-correct-phase-proc-lp-gf"], [743, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.ptoa_to_sf": [[152, "pyart-correct-ptoa-to-sf"], [744, "pyart-correct-ptoa-to-sf"]], "pyart.correct.scanning_losses": [[153, "pyart-correct-scanning-losses"], [746, "pyart-correct-scanning-losses"]], "pyart.correct.selfconsistency_bias": [[154, "pyart-correct-selfconsistency-bias"], [747, "pyart-correct-selfconsistency-bias"]], "pyart.correct.selfconsistency_bias2": [[155, "pyart-correct-selfconsistency-bias2"], [748, "pyart-correct-selfconsistency-bias2"]], "pyart.correct.selfconsistency_kdp_phidp": [[156, "pyart-correct-selfconsistency-kdp-phidp"], [749, "pyart-correct-selfconsistency-kdp-phidp"]], "pyart.correct.smooth_masked": [[157, "pyart-correct-smooth-masked"], [750, "pyart-correct-smooth-masked"]], "pyart.correct.smooth_phidp_double_window": [[158, "pyart-correct-smooth-phidp-double-window"], [751, "pyart-correct-smooth-phidp-double-window"]], "pyart.correct.smooth_phidp_single_window": [[159, "pyart-correct-smooth-phidp-single-window"], [752, "pyart-correct-smooth-phidp-single-window"]], "pyart.correct.solar_flux_lookup": [[160, "pyart-correct-solar-flux-lookup"], [753, "pyart-correct-solar-flux-lookup"]], "pyart.correct.sun_position_mfr": [[161, "pyart-correct-sun-position-mfr"], [754, "pyart-correct-sun-position-mfr"]], "pyart.correct.sun_position_pysolar": [[162, "pyart-correct-sun-position-pysolar"], [755, "pyart-correct-sun-position-pysolar"]], "pyart.correct.sun_power": [[163, "pyart-correct-sun-power"], [756, "pyart-correct-sun-power"]], "pyart.correct.sun_retrieval": [[164, "pyart-correct-sun-retrieval"], [757, "pyart-correct-sun-retrieval"]], "pyart.exceptions.DeprecatedAttribute": [[165, "pyart-exceptions-deprecatedattribute"]], "pyart.exceptions.DeprecatedFunctionName": [[166, "pyart-exceptions-deprecatedfunctionname"]], "pyart.exceptions.MissingOptionalDependency": [[167, "pyart-exceptions-missingoptionaldependency"]], "pyart.exceptions._deprecated_alias": [[168, "pyart-exceptions-deprecated-alias"]], "pyart.filters.GateFilter": [[169, "pyart-filters-gatefilter"], [760, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[170, "pyart-filters-gatefilter-copy"], [761, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[171, "pyart-filters-gatefilter-exclude-above"], [762, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[172, "pyart-filters-gatefilter-exclude-all"], [763, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[173, "pyart-filters-gatefilter-exclude-below"], [764, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[174, "pyart-filters-gatefilter-exclude-equal"], [765, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[175, "pyart-filters-gatefilter-exclude-gates"], [766, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[176, "pyart-filters-gatefilter-exclude-inside"], [767, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[177, "pyart-filters-gatefilter-exclude-invalid"], [768, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[178, "pyart-filters-gatefilter-exclude-masked"], [769, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[179, "pyart-filters-gatefilter-exclude-none"], [770, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[180, "pyart-filters-gatefilter-exclude-not-equal"], [771, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[181, "pyart-filters-gatefilter-exclude-outside"], [772, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[182, "pyart-filters-gatefilter-exclude-transition"], [773, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[183, "pyart-filters-gatefilter-gate-excluded"], [774, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[184, "pyart-filters-gatefilter-gate-included"], [775, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[185, "pyart-filters-gatefilter-include-above"], [776, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[186, "pyart-filters-gatefilter-include-all"], [777, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[187, "pyart-filters-gatefilter-include-below"], [778, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[188, "pyart-filters-gatefilter-include-equal"], [779, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[189, "pyart-filters-gatefilter-include-gates"], [780, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[190, "pyart-filters-gatefilter-include-inside"], [781, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[191, "pyart-filters-gatefilter-include-none"], [782, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[192, "pyart-filters-gatefilter-include-not-equal"], [783, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[193, "pyart-filters-gatefilter-include-not-masked"], [784, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[194, "pyart-filters-gatefilter-include-not-transition"], [785, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[195, "pyart-filters-gatefilter-include-outside"], [786, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[196, "pyart-filters-gatefilter-include-valid"], [787, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.birds_gate_filter": [[197, "pyart-filters-birds-gate-filter"], [788, "pyart-filters-birds-gate-filter"]], "pyart.filters.class_based_gate_filter": [[198, "pyart-filters-class-based-gate-filter"], [789, "pyart-filters-class-based-gate-filter"]], "pyart.filters.iso0_based_gate_filter": [[199, "pyart-filters-iso0-based-gate-filter"], [790, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[200, "pyart-filters-moment-and-texture-based-gate-filter"], [791, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[201, "pyart-filters-moment-based-gate-filter"], [792, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.snr_based_gate_filter": [[202, "pyart-filters-snr-based-gate-filter"], [793, "pyart-filters-snr-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[203, "pyart-filters-temp-based-gate-filter"], [794, "pyart-filters-temp-based-gate-filter"]], "pyart.filters.visibility_based_gate_filter": [[204, "pyart-filters-visibility-based-gate-filter"], [795, "pyart-filters-visibility-based-gate-filter"]], "pyart.graph.AirborneRadarDisplay": [[205, "pyart-graph-airborneradardisplay"], [797, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[206, "pyart-graph-airborneradardisplay-generate-az-rhi-title"], [798, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[207, "pyart-graph-airborneradardisplay-generate-filename"], [799, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[208, "pyart-graph-airborneradardisplay-generate-ray-title"], [800, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[209, "pyart-graph-airborneradardisplay-generate-title"], [801, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[210, "pyart-graph-airborneradardisplay-generate-vpt-title"], [802, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.generate_xsection_title": [[211, "pyart-graph-airborneradardisplay-generate-xsection-title"], [803, "pyart-graph-airborneradardisplay-generate-xsection-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[212, "pyart-graph-airborneradardisplay-label-xaxis-r"], [804, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[213, "pyart-graph-airborneradardisplay-label-xaxis-rays"], [805, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[214, "pyart-graph-airborneradardisplay-label-xaxis-time"], [806, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[215, "pyart-graph-airborneradardisplay-label-xaxis-x"], [807, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection": [[216, "pyart-graph-airborneradardisplay-label-xaxis-xsection"], [808, "pyart-graph-airborneradardisplay-label-xaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[217, "pyart-graph-airborneradardisplay-label-yaxis-field"], [809, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection": [[218, "pyart-graph-airborneradardisplay-label-yaxis-xsection"], [810, "pyart-graph-airborneradardisplay-label-yaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[219, "pyart-graph-airborneradardisplay-label-yaxis-y"], [811, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[220, "pyart-graph-airborneradardisplay-label-yaxis-z"], [812, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[221, "pyart-graph-airborneradardisplay-plot"], [813, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[222, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"], [814, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[223, "pyart-graph-airborneradardisplay-plot-colorbar"], [815, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[224, "pyart-graph-airborneradardisplay-plot-cr-raster"], [816, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[225, "pyart-graph-airborneradardisplay-plot-cross-hair"], [817, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[226, "pyart-graph-airborneradardisplay-plot-grid-lines"], [818, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[227, "pyart-graph-airborneradardisplay-plot-label"], [819, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[228, "pyart-graph-airborneradardisplay-plot-labels"], [820, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[229, "pyart-graph-airborneradardisplay-plot-ppi"], [821, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[230, "pyart-graph-airborneradardisplay-plot-range-ring"], [822, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[231, "pyart-graph-airborneradardisplay-plot-range-rings"], [823, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[232, "pyart-graph-airborneradardisplay-plot-ray"], [824, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[233, "pyart-graph-airborneradardisplay-plot-rhi"], [825, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[234, "pyart-graph-airborneradardisplay-plot-sweep-grid"], [826, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[235, "pyart-graph-airborneradardisplay-plot-vpt"], [827, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.plot_xsection": [[236, "pyart-graph-airborneradardisplay-plot-xsection"], [828, "pyart-graph-airborneradardisplay-plot-xsection"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[237, "pyart-graph-airborneradardisplay-set-aspect-ratio"], [829, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[238, "pyart-graph-airborneradardisplay-set-limits"], [830, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[239, "pyart-graph-gridmapdisplay"], [831, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[240, "pyart-graph-gridmapdisplay-cartopy-coastlines"], [832, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[241, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"], [833, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[242, "pyart-graph-gridmapdisplay-cartopy-states"], [834, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[243, "pyart-graph-gridmapdisplay-generate-filename"], [835, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[244, "pyart-graph-gridmapdisplay-generate-grid-title"], [836, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[245, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"], [837, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[246, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"], [838, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[247, "pyart-graph-gridmapdisplay-plot-colorbar"], [839, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[248, "pyart-graph-gridmapdisplay-plot-cross-section"], [840, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_cross_section_level": [[249, "pyart-graph-gridmapdisplay-plot-cross-section-level"], [841, "pyart-graph-gridmapdisplay-plot-cross-section-level"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[250, "pyart-graph-gridmapdisplay-plot-crosshairs"], [842, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[251, "pyart-graph-gridmapdisplay-plot-grid"], [843, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_grid_contour": [[252, "pyart-graph-gridmapdisplay-plot-grid-contour"], [844, "pyart-graph-gridmapdisplay-plot-grid-contour"]], "pyart.graph.GridMapDisplay.plot_grid_raw": [[253, "pyart-graph-gridmapdisplay-plot-grid-raw"], [845, "pyart-graph-gridmapdisplay-plot-grid-raw"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[254, "pyart-graph-gridmapdisplay-plot-latitude-slice"], [846, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[255, "pyart-graph-gridmapdisplay-plot-latitudinal-level"], [847, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[256, "pyart-graph-gridmapdisplay-plot-longitude-slice"], [848, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[257, "pyart-graph-gridmapdisplay-plot-longitudinal-level"], [849, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[258, "pyart-graph-gridmapdisplaybasemap"], [850, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[259, "pyart-graph-gridmapdisplaybasemap-generate-filename"], [851, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[260, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"], [852, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[261, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"], [853, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[262, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"], [854, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[263, "pyart-graph-gridmapdisplaybasemap-get-basemap"], [855, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[264, "pyart-graph-gridmapdisplaybasemap-plot-basemap"], [856, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[265, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"], [857, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[266, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"], [858, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[267, "pyart-graph-gridmapdisplaybasemap-plot-grid"], [859, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[268, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"], [860, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[269, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"], [861, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[270, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"], [862, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[271, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"], [863, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[272, "pyart-graph-radardisplay"], [864, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[273, "pyart-graph-radardisplay-generate-az-rhi-title"], [865, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[274, "pyart-graph-radardisplay-generate-filename"], [866, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[275, "pyart-graph-radardisplay-generate-ray-title"], [867, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[276, "pyart-graph-radardisplay-generate-title"], [868, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[277, "pyart-graph-radardisplay-generate-vpt-title"], [869, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.generate_xsection_title": [[278, "pyart-graph-radardisplay-generate-xsection-title"], [870, "pyart-graph-radardisplay-generate-xsection-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[279, "pyart-graph-radardisplay-label-xaxis-r"], [871, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[280, "pyart-graph-radardisplay-label-xaxis-rays"], [872, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[281, "pyart-graph-radardisplay-label-xaxis-time"], [873, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[282, "pyart-graph-radardisplay-label-xaxis-x"], [874, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_xaxis_xsection": [[283, "pyart-graph-radardisplay-label-xaxis-xsection"], [875, "pyart-graph-radardisplay-label-xaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[284, "pyart-graph-radardisplay-label-yaxis-field"], [876, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_xsection": [[285, "pyart-graph-radardisplay-label-yaxis-xsection"], [877, "pyart-graph-radardisplay-label-yaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[286, "pyart-graph-radardisplay-label-yaxis-y"], [878, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[287, "pyart-graph-radardisplay-label-yaxis-z"], [879, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[288, "pyart-graph-radardisplay-plot"], [880, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[289, "pyart-graph-radardisplay-plot-azimuth-to-rhi"], [881, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[290, "pyart-graph-radardisplay-plot-colorbar"], [882, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[291, "pyart-graph-radardisplay-plot-cr-raster"], [883, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[292, "pyart-graph-radardisplay-plot-cross-hair"], [884, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[293, "pyart-graph-radardisplay-plot-grid-lines"], [885, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[294, "pyart-graph-radardisplay-plot-label"], [886, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[295, "pyart-graph-radardisplay-plot-labels"], [887, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[296, "pyart-graph-radardisplay-plot-ppi"], [888, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[297, "pyart-graph-radardisplay-plot-range-ring"], [889, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[298, "pyart-graph-radardisplay-plot-range-rings"], [890, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[299, "pyart-graph-radardisplay-plot-ray"], [891, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[300, "pyart-graph-radardisplay-plot-rhi"], [892, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[301, "pyart-graph-radardisplay-plot-vpt"], [893, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.plot_xsection": [[302, "pyart-graph-radardisplay-plot-xsection"], [894, "pyart-graph-radardisplay-plot-xsection"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[303, "pyart-graph-radardisplay-set-aspect-ratio"], [895, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[304, "pyart-graph-radardisplay-set-limits"], [896, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[305, "pyart-graph-radarmapdisplay"], [897, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[306, "pyart-graph-radarmapdisplay-generate-az-rhi-title"], [898, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[307, "pyart-graph-radarmapdisplay-generate-filename"], [899, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[308, "pyart-graph-radarmapdisplay-generate-ray-title"], [900, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[309, "pyart-graph-radarmapdisplay-generate-title"], [901, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[310, "pyart-graph-radarmapdisplay-generate-vpt-title"], [902, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.generate_xsection_title": [[311, "pyart-graph-radarmapdisplay-generate-xsection-title"], [903, "pyart-graph-radarmapdisplay-generate-xsection-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[312, "pyart-graph-radarmapdisplay-label-xaxis-r"], [904, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[313, "pyart-graph-radarmapdisplay-label-xaxis-rays"], [905, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[314, "pyart-graph-radarmapdisplay-label-xaxis-time"], [906, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[315, "pyart-graph-radarmapdisplay-label-xaxis-x"], [907, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_xaxis_xsection": [[316, "pyart-graph-radarmapdisplay-label-xaxis-xsection"], [908, "pyart-graph-radarmapdisplay-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[317, "pyart-graph-radarmapdisplay-label-yaxis-field"], [909, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_xsection": [[318, "pyart-graph-radarmapdisplay-label-yaxis-xsection"], [910, "pyart-graph-radarmapdisplay-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[319, "pyart-graph-radarmapdisplay-label-yaxis-y"], [911, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[320, "pyart-graph-radarmapdisplay-label-yaxis-z"], [912, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[321, "pyart-graph-radarmapdisplay-plot"], [913, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[322, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"], [914, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[323, "pyart-graph-radarmapdisplay-plot-colorbar"], [915, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[324, "pyart-graph-radarmapdisplay-plot-cr-raster"], [916, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[325, "pyart-graph-radarmapdisplay-plot-cross-hair"], [917, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[326, "pyart-graph-radarmapdisplay-plot-grid-lines"], [918, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[327, "pyart-graph-radarmapdisplay-plot-label"], [919, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[328, "pyart-graph-radarmapdisplay-plot-labels"], [920, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[329, "pyart-graph-radarmapdisplay-plot-line-geo"], [921, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[330, "pyart-graph-radarmapdisplay-plot-line-xy"], [922, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[331, "pyart-graph-radarmapdisplay-plot-point"], [923, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[332, "pyart-graph-radarmapdisplay-plot-ppi"], [924, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[333, "pyart-graph-radarmapdisplay-plot-ppi-map"], [925, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[334, "pyart-graph-radarmapdisplay-plot-range-ring"], [926, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[335, "pyart-graph-radarmapdisplay-plot-range-rings"], [927, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[336, "pyart-graph-radarmapdisplay-plot-ray"], [928, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[337, "pyart-graph-radarmapdisplay-plot-rhi"], [929, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[338, "pyart-graph-radarmapdisplay-plot-vpt"], [930, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.plot_xsection": [[339, "pyart-graph-radarmapdisplay-plot-xsection"], [931, "pyart-graph-radarmapdisplay-plot-xsection"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[340, "pyart-graph-radarmapdisplay-set-aspect-ratio"], [932, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[341, "pyart-graph-radarmapdisplay-set-limits"], [933, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[342, "pyart-graph-radarmapdisplaybasemap"], [934, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[343, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"], [935, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[344, "pyart-graph-radarmapdisplaybasemap-generate-filename"], [936, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[345, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"], [937, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[346, "pyart-graph-radarmapdisplaybasemap-generate-title"], [938, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[347, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"], [939, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title": [[348, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"], [940, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[349, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"], [941, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[350, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"], [942, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[351, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"], [943, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[352, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"], [944, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection": [[353, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"], [945, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[354, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"], [946, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection": [[355, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"], [947, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[356, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"], [948, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[357, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"], [949, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[358, "pyart-graph-radarmapdisplaybasemap-plot"], [950, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[359, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"], [951, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[360, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"], [952, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[361, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"], [953, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[362, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"], [954, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[363, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"], [955, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[364, "pyart-graph-radarmapdisplaybasemap-plot-label"], [956, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[365, "pyart-graph-radarmapdisplaybasemap-plot-labels"], [957, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[366, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"], [958, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[367, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"], [959, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[368, "pyart-graph-radarmapdisplaybasemap-plot-point"], [960, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[369, "pyart-graph-radarmapdisplaybasemap-plot-ppi"], [961, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[370, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"], [962, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[371, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"], [963, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[372, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"], [964, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[373, "pyart-graph-radarmapdisplaybasemap-plot-ray"], [965, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[374, "pyart-graph-radarmapdisplaybasemap-plot-rhi"], [966, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[375, "pyart-graph-radarmapdisplaybasemap-plot-vpt"], [967, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.plot_xsection": [[376, "pyart-graph-radarmapdisplaybasemap-plot-xsection"], [968, "pyart-graph-radarmapdisplaybasemap-plot-xsection"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[377, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"], [969, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[378, "pyart-graph-radarmapdisplaybasemap-set-limits"], [970, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.io.make_time_unit_str": [[379, "pyart-io-make-time-unit-str"], [973, "pyart-io-make-time-unit-str"]], "pyart.io.prepare_for_read": [[380, "pyart-io-prepare-for-read"], [974, "pyart-io-prepare-for-read"]], "pyart.io.read": [[381, "pyart-io-read"], [975, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[382, "pyart-io-read-arm-sonde"], [976, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[383, "pyart-io-read-arm-sonde-vap"], [977, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[384, "pyart-io-read-cfradial"], [978, "pyart-io-read-cfradial"]], "pyart.io.read_cfradial2": [[385, "pyart-io-read-cfradial2"], [979, "pyart-io-read-cfradial2"]], "pyart.io.read_chl": [[386, "pyart-io-read-chl"], [980, "pyart-io-read-chl"]], "pyart.io.read_grid": [[387, "pyart-io-read-grid"], [981, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[388, "pyart-io-read-grid-mdv"], [982, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[389, "pyart-io-read-mdv"], [983, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[390, "pyart-io-read-nexrad-archive"], [984, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[391, "pyart-io-read-nexrad-cdm"], [985, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[392, "pyart-io-read-nexrad-level3"], [986, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[393, "pyart-io-read-rsl"], [987, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[394, "pyart-io-read-sigmet"], [988, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[395, "pyart-io-read-uf"], [989, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[396, "pyart-io-write-cfradial"], [990, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[397, "pyart-io-write-grid"], [991, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[398, "pyart-io-write-grid-geotiff"], [992, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[399, "pyart-io-write-grid-mdv"], [993, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[400, "pyart-io-write-uf"], [994, "pyart-io-write-uf"]], "pyart.lazydict.LazyLoadDict": [[401, "pyart-lazydict-lazyloaddict"], [996, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.__contains__": [[402, "pyart-lazydict-lazyloaddict-contains"]], "pyart.lazydict.LazyLoadDict.__delattr__": [[403, "pyart-lazydict-lazyloaddict-delattr"]], "pyart.lazydict.LazyLoadDict.__delitem__": [[404, "pyart-lazydict-lazyloaddict-delitem"]], "pyart.lazydict.LazyLoadDict.__dir__": [[405, "pyart-lazydict-lazyloaddict-dir"]], "pyart.lazydict.LazyLoadDict.__eq__": [[406, "pyart-lazydict-lazyloaddict-eq"]], "pyart.lazydict.LazyLoadDict.__format__": [[407, "pyart-lazydict-lazyloaddict-format"]], "pyart.lazydict.LazyLoadDict.__ge__": [[408, "pyart-lazydict-lazyloaddict-ge"]], "pyart.lazydict.LazyLoadDict.__getattribute__": [[409, "pyart-lazydict-lazyloaddict-getattribute"]], "pyart.lazydict.LazyLoadDict.__getitem__": [[410, "pyart-lazydict-lazyloaddict-getitem"]], "pyart.lazydict.LazyLoadDict.__getstate__": [[411, "pyart-lazydict-lazyloaddict-getstate"]], "pyart.lazydict.LazyLoadDict.__gt__": [[412, "pyart-lazydict-lazyloaddict-gt"]], "pyart.lazydict.LazyLoadDict.__init__": [[413, "pyart-lazydict-lazyloaddict-init"]], "pyart.lazydict.LazyLoadDict.__init_subclass__": [[414, "pyart-lazydict-lazyloaddict-init-subclass"]], "pyart.lazydict.LazyLoadDict.__iter__": [[415, "pyart-lazydict-lazyloaddict-iter"]], "pyart.lazydict.LazyLoadDict.__le__": [[416, "pyart-lazydict-lazyloaddict-le"]], "pyart.lazydict.LazyLoadDict.__len__": [[417, "pyart-lazydict-lazyloaddict-len"]], "pyart.lazydict.LazyLoadDict.__lt__": [[418, "pyart-lazydict-lazyloaddict-lt"]], "pyart.lazydict.LazyLoadDict.__ne__": [[419, "pyart-lazydict-lazyloaddict-ne"]], "pyart.lazydict.LazyLoadDict.__new__": [[420, "pyart-lazydict-lazyloaddict-new"]], "pyart.lazydict.LazyLoadDict.__reduce__": [[421, "pyart-lazydict-lazyloaddict-reduce"]], "pyart.lazydict.LazyLoadDict.__reduce_ex__": [[422, "pyart-lazydict-lazyloaddict-reduce-ex"]], "pyart.lazydict.LazyLoadDict.__repr__": [[423, "pyart-lazydict-lazyloaddict-repr"]], "pyart.lazydict.LazyLoadDict.__setattr__": [[424, "pyart-lazydict-lazyloaddict-setattr"]], "pyart.lazydict.LazyLoadDict.__setitem__": [[425, "pyart-lazydict-lazyloaddict-setitem"]], "pyart.lazydict.LazyLoadDict.__sizeof__": [[426, "pyart-lazydict-lazyloaddict-sizeof"]], "pyart.lazydict.LazyLoadDict.__str__": [[427, "pyart-lazydict-lazyloaddict-str"]], "pyart.lazydict.LazyLoadDict.__subclasshook__": [[428, "pyart-lazydict-lazyloaddict-subclasshook"]], "pyart.lazydict.LazyLoadDict.clear": [[429, "pyart-lazydict-lazyloaddict-clear"], [997, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[430, "pyart-lazydict-lazyloaddict-copy"], [998, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[431, "pyart-lazydict-lazyloaddict-get"], [999, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[432, "pyart-lazydict-lazyloaddict-has-key"], [1000, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[433, "pyart-lazydict-lazyloaddict-items"], [1001, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[434, "pyart-lazydict-lazyloaddict-keys"], [1002, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[435, "pyart-lazydict-lazyloaddict-pop"], [1003, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[436, "pyart-lazydict-lazyloaddict-popitem"], [1004, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[437, "pyart-lazydict-lazyloaddict-set-lazy"], [1005, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[438, "pyart-lazydict-lazyloaddict-setdefault"], [1006, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[439, "pyart-lazydict-lazyloaddict-update"], [1007, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[440, "pyart-lazydict-lazyloaddict-values"], [1008, "pyart-lazydict-lazyloaddict-values"]], "pyart.map.example_roi_func_constant": [[441, "pyart-map-example-roi-func-constant"], [1024, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[442, "pyart-map-example-roi-func-dist"], [1025, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[443, "pyart-map-example-roi-func-dist-beam"], [1026, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[444, "pyart-map-grid-from-radars"], [1028, "pyart-map-grid-from-radars"]], "pyart.map.map_gates_to_grid": [[445, "pyart-map-map-gates-to-grid"], [1029, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[446, "pyart-map-map-to-grid"], [1030, "pyart-map-map-to-grid"]], "pyart.retrieve._destandardize": [[447, "pyart-retrieve-destandardize"]], "pyart.retrieve._get_res_vol_sides": [[448, "pyart-retrieve-get-res-vol-sides"]], "pyart.retrieve.atmospheric_gas_att": [[449, "pyart-retrieve-atmospheric-gas-att"], [1033, "pyart-retrieve-atmospheric-gas-att"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[450, "pyart-retrieve-calculate-snr-from-reflectivity"], [1034, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[451, "pyart-retrieve-calculate-velocity-texture"], [1035, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.compute_Doppler_velocity": [[452, "pyart-retrieve-compute-doppler-velocity"], [1037, "pyart-retrieve-compute-doppler-velocity"]], "pyart.retrieve.compute_Doppler_velocity_iq": [[453, "pyart-retrieve-compute-doppler-velocity-iq"], [1038, "pyart-retrieve-compute-doppler-velocity-iq"]], "pyart.retrieve.compute_Doppler_width": [[454, "pyart-retrieve-compute-doppler-width"], [1039, "pyart-retrieve-compute-doppler-width"]], "pyart.retrieve.compute_Doppler_width_iq": [[455, "pyart-retrieve-compute-doppler-width-iq"], [1040, "pyart-retrieve-compute-doppler-width-iq"]], "pyart.retrieve.compute_apparent_profile": [[456, "pyart-retrieve-compute-apparent-profile"], [1041, "pyart-retrieve-compute-apparent-profile"]], "pyart.retrieve.compute_bird_density": [[457, "pyart-retrieve-compute-bird-density"], [1042, "pyart-retrieve-compute-bird-density"]], "pyart.retrieve.compute_ccor": [[458, "pyart-retrieve-compute-ccor"], [1043, "pyart-retrieve-compute-ccor"]], "pyart.retrieve.compute_cdr": [[459, "pyart-retrieve-compute-cdr"], [1044, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_centroids": [[460, "pyart-retrieve-compute-centroids"], [1045, "pyart-retrieve-compute-centroids"]], "pyart.retrieve.compute_differential_phase": [[461, "pyart-retrieve-compute-differential-phase"], [1046, "pyart-retrieve-compute-differential-phase"]], "pyart.retrieve.compute_differential_phase_iq": [[462, "pyart-retrieve-compute-differential-phase-iq"], [1047, "pyart-retrieve-compute-differential-phase-iq"]], "pyart.retrieve.compute_differential_reflectivity": [[463, "pyart-retrieve-compute-differential-reflectivity"], [1048, "pyart-retrieve-compute-differential-reflectivity"]], "pyart.retrieve.compute_differential_reflectivity_iq": [[464, "pyart-retrieve-compute-differential-reflectivity-iq"], [1049, "pyart-retrieve-compute-differential-reflectivity-iq"]], "pyart.retrieve.compute_evp": [[465, "pyart-retrieve-compute-evp"], [1050, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_iq": [[466, "pyart-retrieve-compute-iq"], [1051, "pyart-retrieve-compute-iq"]], "pyart.retrieve.compute_l": [[467, "pyart-retrieve-compute-l"], [1052, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_mean_phase_iq": [[468, "pyart-retrieve-compute-mean-phase-iq"], [1053, "pyart-retrieve-compute-mean-phase-iq"]], "pyart.retrieve.compute_noise_power": [[469, "pyart-retrieve-compute-noise-power"], [1054, "pyart-retrieve-compute-noise-power"]], "pyart.retrieve.compute_noisedBZ": [[470, "pyart-retrieve-compute-noisedbz"], [1055, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_pol_variables": [[471, "pyart-retrieve-compute-pol-variables"], [1056, "pyart-retrieve-compute-pol-variables"]], "pyart.retrieve.compute_pol_variables_iq": [[472, "pyart-retrieve-compute-pol-variables-iq"], [1057, "pyart-retrieve-compute-pol-variables-iq"]], "pyart.retrieve.compute_qvp": [[473, "pyart-retrieve-compute-qvp"], [1058, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_radial_noise_hs": [[474, "pyart-retrieve-compute-radial-noise-hs"], [1059, "pyart-retrieve-compute-radial-noise-hs"]], "pyart.retrieve.compute_radial_noise_ivic": [[475, "pyart-retrieve-compute-radial-noise-ivic"], [1060, "pyart-retrieve-compute-radial-noise-ivic"]], "pyart.retrieve.compute_rcs": [[476, "pyart-retrieve-compute-rcs"], [1061, "pyart-retrieve-compute-rcs"]], "pyart.retrieve.compute_rcs_from_pr": [[477, "pyart-retrieve-compute-rcs-from-pr"], [1062, "pyart-retrieve-compute-rcs-from-pr"]], "pyart.retrieve.compute_reflectivity": [[478, "pyart-retrieve-compute-reflectivity"], [1063, "pyart-retrieve-compute-reflectivity"]], "pyart.retrieve.compute_reflectivity_iq": [[479, "pyart-retrieve-compute-reflectivity-iq"], [1064, "pyart-retrieve-compute-reflectivity-iq"]], "pyart.retrieve.compute_rhohv": [[480, "pyart-retrieve-compute-rhohv"], [1065, "pyart-retrieve-compute-rhohv"]], "pyart.retrieve.compute_rhohv_iq": [[481, "pyart-retrieve-compute-rhohv-iq"], [1066, "pyart-retrieve-compute-rhohv-iq"]], "pyart.retrieve.compute_rqvp": [[482, "pyart-retrieve-compute-rqvp"], [1067, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_signal_power": [[483, "pyart-retrieve-compute-signal-power"], [1068, "pyart-retrieve-compute-signal-power"]], "pyart.retrieve.compute_snr": [[484, "pyart-retrieve-compute-snr"], [1069, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_spectra": [[485, "pyart-retrieve-compute-spectra"], [1070, "pyart-retrieve-compute-spectra"]], "pyart.retrieve.compute_spectral_differential_phase": [[486, "pyart-retrieve-compute-spectral-differential-phase"], [1071, "pyart-retrieve-compute-spectral-differential-phase"]], "pyart.retrieve.compute_spectral_differential_reflectivity": [[487, "pyart-retrieve-compute-spectral-differential-reflectivity"], [1072, "pyart-retrieve-compute-spectral-differential-reflectivity"]], "pyart.retrieve.compute_spectral_noise": [[488, "pyart-retrieve-compute-spectral-noise"], [1073, "pyart-retrieve-compute-spectral-noise"]], "pyart.retrieve.compute_spectral_phase": [[489, "pyart-retrieve-compute-spectral-phase"], [1074, "pyart-retrieve-compute-spectral-phase"]], "pyart.retrieve.compute_spectral_power": [[490, "pyart-retrieve-compute-spectral-power"], [1075, "pyart-retrieve-compute-spectral-power"]], "pyart.retrieve.compute_spectral_reflectivity": [[491, "pyart-retrieve-compute-spectral-reflectivity"], [1076, "pyart-retrieve-compute-spectral-reflectivity"]], "pyart.retrieve.compute_spectral_rhohv": [[492, "pyart-retrieve-compute-spectral-rhohv"], [1077, "pyart-retrieve-compute-spectral-rhohv"]], "pyart.retrieve.compute_st1_iq": [[493, "pyart-retrieve-compute-st1-iq"], [1078, "pyart-retrieve-compute-st1-iq"]], "pyart.retrieve.compute_st2_iq": [[494, "pyart-retrieve-compute-st2-iq"], [1079, "pyart-retrieve-compute-st2-iq"]], "pyart.retrieve.compute_svp": [[495, "pyart-retrieve-compute-svp"], [1080, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[496, "pyart-retrieve-compute-ts-along-coord"], [1081, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vol_refl": [[497, "pyart-retrieve-compute-vol-refl"], [1082, "pyart-retrieve-compute-vol-refl"]], "pyart.retrieve.compute_vp": [[498, "pyart-retrieve-compute-vp"], [1083, "pyart-retrieve-compute-vp"]], "pyart.retrieve.compute_wbn_iq": [[499, "pyart-retrieve-compute-wbn-iq"], [1084, "pyart-retrieve-compute-wbn-iq"]], "pyart.retrieve.conv_strat_yuter": [[500, "pyart-retrieve-conv-strat-yuter"], [1085, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.data_for_centroids": [[501, "pyart-retrieve-data-for-centroids"], [1086, "pyart-retrieve-data-for-centroids"]], "pyart.retrieve.dealias_spectra": [[502, "pyart-retrieve-dealias-spectra"], [1087, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.detect_ml": [[503, "pyart-retrieve-detect-ml"], [1088, "pyart-retrieve-detect-ml"]], "Paremeters": [[503, "paremeters"], [1088, "paremeters"]], "pyart.retrieve.determine_medoids": [[504, "pyart-retrieve-determine-medoids"], [1089, "pyart-retrieve-determine-medoids"]], "pyart.retrieve.est_rain_rate_a": [[505, "pyart-retrieve-est-rain-rate-a"], [1090, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[506, "pyart-retrieve-est-rain-rate-hydro"], [1091, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[507, "pyart-retrieve-est-rain-rate-kdp"], [1092, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[508, "pyart-retrieve-est-rain-rate-z"], [1093, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[509, "pyart-retrieve-est-rain-rate-za"], [1094, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[510, "pyart-retrieve-est-rain-rate-zkdp"], [1095, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[511, "pyart-retrieve-est-rain-rate-zpoly"], [1096, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.est_vertical_windshear": [[512, "pyart-retrieve-est-vertical-windshear"], [1097, "pyart-retrieve-est-vertical-windshear"]], "pyart.retrieve.est_vertical_windshear_lidar": [[513, "pyart-retrieve-est-vertical-windshear-lidar"], [1098, "pyart-retrieve-est-vertical-windshear-lidar"]], "pyart.retrieve.est_wind_profile": [[514, "pyart-retrieve-est-wind-profile"], [1099, "pyart-retrieve-est-wind-profile"]], "pyart.retrieve.est_wind_vel": [[515, "pyart-retrieve-est-wind-vel"], [1100, "pyart-retrieve-est-wind-vel"]], "pyart.retrieve.fetch_radar_time_profile": [[516, "pyart-retrieve-fetch-radar-time-profile"], [1101, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.gecsx": [[517, "pyart-retrieve-gecsx"], [1102, "pyart-retrieve-gecsx"]], "pyart.retrieve.get_coeff_attg": [[518, "pyart-retrieve-get-coeff-attg"], [1103, "pyart-retrieve-get-coeff-attg"]], "pyart.retrieve.get_freq_band": [[519, "pyart-retrieve-get-freq-band"], [1104, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.get_iso0_val": [[520, "pyart-retrieve-get-iso0-val"], [1105, "pyart-retrieve-get-iso0-val"]], "pyart.retrieve.get_ml_rng_limits": [[521, "pyart-retrieve-get-ml-rng-limits"], [1106, "pyart-retrieve-get-ml-rng-limits"]], "pyart.retrieve.grid_displacement_pc": [[522, "pyart-retrieve-grid-displacement-pc"], [1107, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[523, "pyart-retrieve-grid-shift"], [1108, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[524, "pyart-retrieve-hydroclass-semisupervised"], [1109, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_leastsquare_double_window": [[525, "pyart-retrieve-kdp-leastsquare-double-window"], [1110, "pyart-retrieve-kdp-leastsquare-double-window"]], "pyart.retrieve.kdp_leastsquare_single_window": [[526, "pyart-retrieve-kdp-leastsquare-single-window"], [1111, "pyart-retrieve-kdp-leastsquare-single-window"]], "pyart.retrieve.kdp_maesaka": [[527, "pyart-retrieve-kdp-maesaka"], [1112, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[528, "pyart-retrieve-kdp-schneebeli"], [1113, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[529, "pyart-retrieve-kdp-vulpiani"], [1114, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[530, "pyart-retrieve-map-profile-to-gates"], [1115, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.melting_layer_giangrande": [[531, "pyart-retrieve-melting-layer-giangrande"], [1116, "pyart-retrieve-melting-layer-giangrande"]], "pyart.retrieve.melting_layer_hydroclass": [[532, "pyart-retrieve-melting-layer-hydroclass"], [1117, "pyart-retrieve-melting-layer-hydroclass"]], "pyart.retrieve.melting_layer_mf": [[533, "pyart-retrieve-melting-layer-mf"], [1118, "pyart-retrieve-melting-layer-mf"]], "pyart.retrieve.quasi_vertical_profile": [[534, "pyart-retrieve-quasi-vertical-profile"], [1119, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.select_samples": [[535, "pyart-retrieve-select-samples"], [1120, "pyart-retrieve-select-samples"]], "pyart.retrieve.steiner_conv_strat": [[536, "pyart-retrieve-steiner-conv-strat"], [1121, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.synthetic_obs_distribution": [[537, "pyart-retrieve-synthetic-obs-distribution"], [1122, "pyart-retrieve-synthetic-obs-distribution"]], "pyart.retrieve.texture_of_complex_phase": [[538, "pyart-retrieve-texture-of-complex-phase"], [1123, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[539, "pyart-retrieve-vad-browning"], [1124, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[540, "pyart-retrieve-vad-michelson"], [1125, "pyart-retrieve-vad-michelson"]], "pyart._debug_info": [[541, "pyart-debug-info"]], "pyart.aux_io": [[542, "pyart-aux-io"]], "Auxiliary input and output (pyart.aux_io)": [[542, "auxiliary-input-and-output-pyart-aux-io"]], "Reading radar data": [[542, "reading-radar-data"], [972, "reading-radar-data"]], "Writing radar data": [[542, "writing-radar-data"], [972, "writing-radar-data"]], "pyart.aux_io.convert_data": [[543, "pyart-aux-io-convert-data"]], "pyart.aux_io.get_library": [[545, "pyart-aux-io-get-library"]], "pyart.aux_io.read_edge_netcdf": [[555, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_file_c": [[556, "pyart-aux-io-read-file-c"]], "pyart.aux_io.read_file_py": [[557, "pyart-aux-io-read-file-py"]], "pyart.aux_io.read_knmi_grid_h5": [[564, "pyart-aux-io-read-knmi-grid-h5"]], "pyart.aux_io.read_mch_vad": [[565, "pyart-aux-io-read-mch-vad"]], "pyart.aux_io.read_product_c": [[573, "pyart-aux-io-read-product-c"]], "pyart.aux_io.read_product_py": [[574, "pyart-aux-io-read-product-py"]], "pyart.aux_io.read_psr_cpi_header": [[575, "pyart-aux-io-read-psr-cpi-header"]], "pyart.aux_io.read_psr_header": [[576, "pyart-aux-io-read-psr-header"]], "pyart.aux_io.read_psr_spectra": [[577, "pyart-aux-io-read-psr-spectra"]], "pyart.aux_io.read_sinarame_h5": [[582, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[588, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[590, "pyart-bridge"]], "Bridging to other toolkits (pyart.bridge)": [[590, "bridging-to-other-toolkits-pyart-bridge"]], "Phase functions": [[590, "phase-functions"]], "pyart.config": [[592, "pyart-config"], [592, "id1"]], "pyart.config.get_KE": [[597, "pyart-config-get-ke"]], "pyart.core": [[605, "pyart-core"]], "Core (pyart.core)": [[605, "core-pyart-core"]], "Core classes": [[605, "core-classes"]], "Coordinate transformations": [[605, "coordinate-transformations"]], "pyart.correct": [[687, "pyart-correct"]], "Radar Corrections (pyart.correct)": [[687, "radar-corrections-pyart-correct"]], "Velocity unfolding": [[687, "velocity-unfolding"]], "Other corrections": [[687, "other-corrections"]], "Helper functions": [[687, "helper-functions"]], "pyart.correct.GateFilter": [[688, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[689, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[690, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[691, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[692, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[693, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[694, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[695, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[696, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[697, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[698, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[699, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[700, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[701, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[702, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[703, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[704, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[705, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[706, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[707, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[708, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[709, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[710, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[711, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[712, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[713, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[714, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[715, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.gauss_fit": [[736, "pyart-correct-gauss-fit"]], "pyart.correct.moment_based_gate_filter": [[741, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.retrieval_result": [[745, "pyart-correct-retrieval-result"]], "pyart.exceptions": [[758, "pyart-exceptions"], [758, "id1"]], "pyart.filters": [[759, "pyart-filters"]], "Filters (pyart.filters)": [[759, "filters-pyart-filters"]], "Filtering radar data": [[759, "filtering-radar-data"]], "pyart.graph": [[796, "pyart-graph"]], "Graphing (pyart.graph)": [[796, "graphing-pyart-graph"]], "Plotting radar data": [[796, "plotting-radar-data"]], "Plotting grid data": [[796, "plotting-grid-data"]], "pyart.graph.plot_convstrat_scheme": [[971, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[972, "pyart-io"]], "Input and output (pyart.io)": [[972, "input-and-output-pyart-io"]], "Reading grid data": [[972, "reading-grid-data"]], "Writing grid data": [[972, "writing-grid-data"]], "Reading Sonde data": [[972, "reading-sonde-data"]], "Special use": [[972, "special-use"]], "pyart.lazydict": [[995, "pyart-lazydict"], [995, "id1"]], "pyart.lazydict.MutableMapping": [[1009, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[1010, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[1011, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[1012, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[1013, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[1014, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[1015, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[1016, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[1017, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[1018, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[1019, "pyart-map"]], "Mapping (pyart.map)": [[1019, "mapping-pyart-map"]], "Mapping to grid": [[1019, "mapping-to-grid"]], "Examples of ROI (region of interest)": [[1019, "examples-of-roi-region-of-interest"]], "pyart.map.GateMapper": [[1020, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[1021, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[1022, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[1023, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.get_earth_radius": [[1027, "pyart-map-get-earth-radius"]], "pyart.map.polar_to_cartesian": [[1031, "pyart-map-polar-to-cartesian"]], "pyart.retrieve": [[1032, "pyart-retrieve"]], "Radar Retrievals (pyart.retrieve)": [[1032, "radar-retrievals-pyart-retrieve"]], "Radar retrievals": [[1032, "radar-retrievals"]], "pyart.retrieve.composite_reflectivity": [[1036, "pyart-retrieve-composite-reflectivity"]], "pyart.testing": [[1126, "pyart-testing"]], "pyart.testing.Grid": [[1127, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[1128, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[1129, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[1130, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[1131, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[1132, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[1133, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[1134, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[1135, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[1136, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[1137, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[1138, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[1139, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[1140, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[1141, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[1142, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[1143, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[1144, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[1145, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[1146, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[1147, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[1148, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[1149, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[1150, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[1151, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[1152, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[1153, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[1154, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[1155, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[1156, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[1157, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[1158, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[1159, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[1160, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[1161, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[1162, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[1163, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[1164, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[1165, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[1166, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[1167, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[1168, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.add_field": [[1169, "pyart-testing-radarspectra-add-field"]], "pyart.testing.RadarSpectra.add_field_like": [[1170, "pyart-testing-radarspectra-add-field-like"]], "pyart.testing.RadarSpectra.add_filter": [[1171, "pyart-testing-radarspectra-add-filter"]], "pyart.testing.RadarSpectra.check_field_exists": [[1172, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.extract_sweeps": [[1173, "pyart-testing-radarspectra-extract-sweeps"]], "pyart.testing.RadarSpectra.get_azimuth": [[1174, "pyart-testing-radarspectra-get-azimuth"]], "pyart.testing.RadarSpectra.get_elevation": [[1175, "pyart-testing-radarspectra-get-elevation"]], "pyart.testing.RadarSpectra.get_end": [[1176, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_field": [[1177, "pyart-testing-radarspectra-get-field"]], "pyart.testing.RadarSpectra.get_gate_area": [[1178, "pyart-testing-radarspectra-get-gate-area"]], "pyart.testing.RadarSpectra.get_gate_lat_lon_alt": [[1179, "pyart-testing-radarspectra-get-gate-lat-lon-alt"]], "pyart.testing.RadarSpectra.get_gate_x_y_z": [[1180, "pyart-testing-radarspectra-get-gate-x-y-z"]], "pyart.testing.RadarSpectra.get_nyquist_vel": [[1181, "pyart-testing-radarspectra-get-nyquist-vel"]], "pyart.testing.RadarSpectra.get_slice": [[1182, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[1183, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[1184, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.info": [[1185, "pyart-testing-radarspectra-info"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[1186, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[1187, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[1188, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[1189, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[1190, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[1191, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[1192, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[1193, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[1194, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[1195, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[1196, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.get_metadata": [[1197, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[1198, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[1199, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[1200, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[1201, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[1202, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_normal_storm": [[1203, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[1204, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[1205, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[1206, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[1207, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[1208, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[1209, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[1210, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[1211, "pyart-util"]], "pyart.util.angular_mean": [[1212, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[1213, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[1214, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[1215, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[1216, "pyart-util-angular-texture-2d"]], "pyart.util.colocated_gates": [[1217, "pyart-util-colocated-gates"]], "pyart.util.colocated_gates2": [[1218, "pyart-util-colocated-gates2"]], "pyart.util.compute_azimuthal_average": [[1219, "pyart-util-compute-azimuthal-average"]], "pyart.util.compute_corr": [[1220, "pyart-util-compute-corr"]], "pyart.util.compute_directional_stats": [[1221, "pyart-util-compute-directional-stats"]], "pyart.util.compute_mse": [[1222, "pyart-util-compute-mse"]], "pyart.util.compute_nse": [[1223, "pyart-util-compute-nse"]], "pyart.util.cross_section_ppi": [[1224, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[1225, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[1226, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[1227, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[1228, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[1229, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[1230, "pyart-util-datetimes-from-radar"]], "pyart.util.estimate_noise_hs74": [[1231, "pyart-util-estimate-noise-hs74"]], "pyart.util.estimate_noise_ivic13": [[1232, "pyart-util-estimate-noise-ivic13"]], "pyart.util.find_neighbour_gates": [[1233, "pyart-util-find-neighbour-gates"]], "pyart.util.for_azimuth": [[1234, "pyart-util-for-azimuth"]], "Assumptions": [[1234, "assumptions"], [1260, "assumptions"]], "pyart.util.get_column_rays": [[1235, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[1236, "pyart-util-get-field-location"]], "pyart.util.get_ivic_flat_reg_var_max": [[1237, "pyart-util-get-ivic-flat-reg-var-max"]], "pyart.util.get_ivic_pct": [[1238, "pyart-util-get-ivic-pct"]], "pyart.util.get_ivic_snr_thr": [[1239, "pyart-util-get-ivic-snr-thr"]], "pyart.util.get_target_elevations": [[1240, "pyart-util-get-target-elevations"]], "pyart.util.grid_texture_2d": [[1241, "pyart-util-grid-texture-2d"]], "pyart.util.image_mute_radar": [[1242, "pyart-util-image-mute-radar"]], "pyart.util.interpol_spectra": [[1243, "pyart-util-interpol-spectra"]], "pyart.util.intersection": [[1244, "pyart-util-intersection"]], "pyart.util.interval_mean": [[1245, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[1246, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[1247, "pyart-util-is-vpt"]], "pyart.util.ivic_flat_reg_var_max_table": [[1248, "pyart-util-ivic-flat-reg-var-max-table"]], "pyart.util.ivic_flat_reg_wind_len_table": [[1249, "pyart-util-ivic-flat-reg-wind-len-table"]], "pyart.util.ivic_pct_table": [[1250, "pyart-util-ivic-pct-table"]], "pyart.util.ivic_snr_thr_table": [[1251, "pyart-util-ivic-snr-thr-table"]], "pyart.util.join_radar": [[1252, "pyart-util-join-radar"]], "pyart.util.join_spectra": [[1253, "pyart-util-join-spectra"]], "pyart.util.ma_broadcast_to": [[1254, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[1255, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[1256, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.radar_from_spectra": [[1257, "pyart-util-radar-from-spectra"]], "pyart.util.rolling_window": [[1258, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[1259, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[1260, "pyart-util-sphere-distance"]], "Parameter": [[1260, "parameter"]], "pyart.util.subset_radar": [[1261, "pyart-util-subset-radar"]], "pyart.util.subset_radar_spectra": [[1262, "pyart-util-subset-radar-spectra"]], "pyart.util.texture": [[1263, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[1264, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[1265, "pyart-util-to-vpt"]], "API Manual": [[1266, "api-manual"]], "Changelog": [[1267, "changelog"]], "v1.8.7": [[1267, "v1-8-7"]], "v1.8.6": [[1267, "v1-8-6"]], "v1.8.5": [[1267, "v1-8-5"]], "v1.8.4": [[1267, "v1-8-4"]], "v1.8.3": [[1267, "v1-8-3"]], "v1.8.2": [[1267, "v1-8-2"]], "v1.8.1": [[1267, "v1-8-1"]], "v1.8": [[1267, "v1-8"]], "v1.7.1": [[1267, "v1-7-1"]], "v1.7": [[1267, "v1-7"]], "v1.6.4": [[1267, "v1-6-4"]], "New additions": [[1267, "new-additions"]], "v1.6.3": [[1267, "v1-6-3"]], "v1.6.2": [[1267, "v1-6-2"]], "v1.6.1": [[1267, "v1-6-1"]], "v1.6": [[1267, "v1-6"]], "Moment correction examples": [[1268, "moment-correction-examples"], [1272, "moment-correction-examples"]], "Correct reflectivity attenuation": [[1269, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[1270, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[1271, "computation-times"], [1276, "computation-times"], [1281, "computation-times"], [1300, "computation-times"], [1307, "computation-times"], [1308, "computation-times"], [1321, "computation-times"]], "Example Gallery": [[1272, "example-gallery"]], "Input/Output Examples": [[1272, "input-output-examples"], [1273, "input-output-examples"]], "Mapping examples": [[1272, "mapping-examples"], [1277, "mapping-examples"]], "Plotting examples": [[1272, "plotting-examples"], [1282, "plotting-examples"]], "Retrieval Examples": [[1272, "retrieval-examples"], [1301, "retrieval-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[1274, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[1274, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[1274, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[1275, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[1275, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[1278, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[1279, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[1280, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[1283, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[1284, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[1285, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[1286, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[1287, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[1288, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[1289, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[1290, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[1291, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[1292, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [1293, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[1294, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [1295, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[1296, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[1297, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[1298, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[1299, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[1302, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[1303, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[1304, "convective-stratiform-classification"]], "How the algorithm works": [[1304, "how-the-algorithm-works"]], "Examples": [[1304, "examples"]], "Summary of recommendations and best practices": [[1304, "summary-of-recommendations-and-best-practices"]], "References": [[1304, "references"]], "Calculate and Plot hydrometeor classification": [[1305, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[1306, "calculate-and-plot-vad-profile"]], "About the MeteoSwiss fork of Py-ART": [[1309, "about-the-meteoswiss-fork-of-py-art"]], "Citing Py-ART": [[1309, "citing-py-art"]], "What can Py-ART do?": [[1309, "what-can-py-art-do"]], "Short Courses": [[1309, "short-courses"]], "Install": [[1309, "install"], [1323, "install"]], "Dependencies": [[1309, "dependencies"]], "Optional Dependences": [[1309, "optional-dependences"]], "Getting help": [[1309, "getting-help"]], "Contributing": [[1309, "contributing"]], "Notebook Gallery": [[1310, "notebook-gallery"]], "Notebooks": [[1310, null]], "Creating a basic ingest of a NetCDF file": [[1311, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[1312, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[1313, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[1315, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[1316, "masking-data-with-py-art-gatefilters"]], "Reading MeteoSwiss Metranet data with Py-ART": [[1317, "reading-meteoswiss-metranet-data-with-py-art"]], "Reading Polar data": [[1317, "reading-polar-data"]], "Low-res data (MLx files)": [[1317, "low-res-data-mlx-files"]], "High-res data (MHx files)": [[1317, "high-res-data-mhx-files"]], "Reading other polar products": [[1317, "reading-other-polar-products"]], "Reading Cartesian products": [[1317, "reading-cartesian-products"]], "Processing of Doppler wind data from a Swiss volumetric scan": [[1318, "processing-of-doppler-wind-data-from-a-swiss-volumetric-scan"]], "Reading and dealiasing the data": [[1318, "reading-and-dealiasing-the-data"]], "CAPPI plots": [[1318, "cappi-plots"]], "Velocity azimuth display (VAD)": [[1318, "velocity-azimuth-display-vad"]], "Filtering and retrievals on raw Swiss C-band data": [[1319, "filtering-and-retrievals-on-raw-swiss-c-band-data"]], "Reading the data": [[1319, "reading-the-data"]], "Ground-clutter and noise removal": [[1319, "ground-clutter-and-noise-removal"]], "Attenuation correction": [[1319, "attenuation-correction"]], "KDP estimation": [[1319, "kdp-estimation"]], "Hydrometeor classification": [[1319, "hydrometeor-classification"]], "QPE": [[1319, "qpe"]], "The Py-ART Radar object and indexing": [[1320, "the-py-art-radar-object-and-indexing"]], "Installation": [[1322, "installation"]], "Required Dependencies": [[1322, "required-dependencies"]], "Optional Dependencies": [[1322, "optional-dependencies"]], "Obtaining the latest source": [[1322, "obtaining-the-latest-source"]], "Installing from Source": [[1322, "installing-from-source"]], "Frequently asked questions": [[1322, "frequently-asked-questions"]], "Contributor\u2019s Guide": [[1323, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[1323, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[1323, "important-links"]], "Citing": [[1323, "citing"]], "Resources": [[1323, "resources"]], "Code Style": [[1323, "code-style"]], "Python File Setup": [[1323, "python-file-setup"]], "Testing": [[1323, "testing"]], "GitHub": [[1323, "github"]], "Blog Posts": [[1323, "blog-posts"]], "User Guide": [[1324, "user-guide"]], "Setting up an Environment": [[1325, "setting-up-an-environment"]], "Anaconda": [[1325, "anaconda"]], "Setting a Channel": [[1325, "setting-a-channel"]], "Creating an Environment": [[1325, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[1325, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[1325, "more-information"]]}, "indexentries": {"extract_sweeps_skyecho() (in module pyart.aux_io)": [[0, "pyart.aux_io.extract_sweeps_skyecho"], [544, "pyart.aux_io.extract_sweeps_skyecho"]], "get_sweep_time_coverage() (in module pyart.aux_io)": [[1, "pyart.aux_io.get_sweep_time_coverage"], [546, "pyart.aux_io.get_sweep_time_coverage"]], "read_bin() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_bin"], [547, "pyart.aux_io.read_bin"]], "read_bin_mf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_bin_mf"], [548, "pyart.aux_io.read_bin_mf"]], "read_cartesian_metranet() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_cartesian_metranet"], [549, "pyart.aux_io.read_cartesian_metranet"]], "read_cf1() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_cf1"], [550, "pyart.aux_io.read_cf1"]], "read_cf1_cartesian() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_cf1_cartesian"], [551, "pyart.aux_io.read_cf1_cartesian"]], "read_cf1_cartesian_mf() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_cf1_cartesian_mf"], [552, "pyart.aux_io.read_cf1_cartesian_mf"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_d3r_gcpex_nc"], [553, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_dat_mf() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_dat_mf"], [554, "pyart.aux_io.read_dat_mf"]], "read_gamic() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_gamic"], [558, "pyart.aux_io.read_gamic"]], "read_gif() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_gif"], [559, "pyart.aux_io.read_gif"]], "read_grib() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_grib"], [560, "pyart.aux_io.read_grib"]], "read_hpl() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_hpl"], [561, "pyart.aux_io.read_hpl"]], "read_iq() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_iq"], [562, "pyart.aux_io.read_iq"]], "read_kazr() (in module pyart.aux_io)": [[15, "pyart.aux_io.read_kazr"], [563, "pyart.aux_io.read_kazr"]], "read_metranet() (in module pyart.aux_io)": [[16, "pyart.aux_io.read_metranet"], [566, "pyart.aux_io.read_metranet"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[17, "pyart.aux_io.read_noxp_iphex_nc"], [567, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_grid_h5() (in module pyart.aux_io)": [[18, "pyart.aux_io.read_odim_grid_h5"], [568, "pyart.aux_io.read_odim_grid_h5"]], "read_odim_h5() (in module pyart.aux_io)": [[19, "pyart.aux_io.read_odim_h5"], [569, "pyart.aux_io.read_odim_h5"]], "read_odim_vp_h5() (in module pyart.aux_io)": [[20, "pyart.aux_io.read_odim_vp_h5"], [570, "pyart.aux_io.read_odim_vp_h5"]], "read_pattern() (in module pyart.aux_io)": [[21, "pyart.aux_io.read_pattern"], [571, "pyart.aux_io.read_pattern"]], "read_png() (in module pyart.aux_io)": [[22, "pyart.aux_io.read_png"], [572, "pyart.aux_io.read_png"]], "read_radx() (in module pyart.aux_io)": [[23, "pyart.aux_io.read_radx"], [578, "pyart.aux_io.read_radx"]], "read_rainbow_psr() (in module pyart.aux_io)": [[24, "pyart.aux_io.read_rainbow_psr"], [579, "pyart.aux_io.read_rainbow_psr"]], "read_rainbow_psr_spectra() (in module pyart.aux_io)": [[25, "pyart.aux_io.read_rainbow_psr_spectra"], [580, "pyart.aux_io.read_rainbow_psr_spectra"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[26, "pyart.aux_io.read_rainbow_wrl"], [581, "pyart.aux_io.read_rainbow_wrl"]], "read_skyecho() (in module pyart.aux_io)": [[27, "pyart.aux_io.read_skyecho"], [583, "pyart.aux_io.read_skyecho"]], "read_spectra() (in module pyart.aux_io)": [[28, "pyart.aux_io.read_spectra"], [584, "pyart.aux_io.read_spectra"]], "read_swissbirdradar_spectra() (in module pyart.aux_io)": [[29, "pyart.aux_io.read_swissbirdradar_spectra"], [585, "pyart.aux_io.read_swissbirdradar_spectra"]], "write_odim_grid_h5() (in module pyart.aux_io)": [[30, "pyart.aux_io.write_odim_grid_h5"], [586, "pyart.aux_io.write_odim_grid_h5"]], "write_odim_h5() (in module pyart.aux_io)": [[31, "pyart.aux_io.write_odim_h5"], [587, "pyart.aux_io.write_odim_h5"]], "write_spectra() (in module pyart.aux_io)": [[32, "pyart.aux_io.write_spectra"], [589, "pyart.aux_io.write_spectra"]], "texture_of_complex_phase() (in module pyart.bridge)": [[33, "pyart.bridge.texture_of_complex_phase"], [591, "pyart.bridge.texture_of_complex_phase"]], "filemetadata (class in pyart.config)": [[34, "pyart.config.FileMetadata"], [593, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[35, "pyart.config.FileMetadata.__call__"], [594, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[36, "pyart.config.FileMetadata.get_field_name"], [595, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[37, "pyart.config.FileMetadata.get_metadata"], [596, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[38, "pyart.config.get_field_colormap"], [598, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[39, "pyart.config.get_field_limits"], [599, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[40, "pyart.config.get_field_mapping"], [600, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[41, "pyart.config.get_field_name"], [601, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[42, "pyart.config.get_fillvalue"], [602, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[43, "pyart.config.get_metadata"], [603, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[44, "pyart.config.load_config"], [604, "pyart.config.load_config"]], "grid (class in pyart.core)": [[45, "pyart.core.Grid"], [606, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[46, "pyart.core.Grid.add_field"], [607, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[47, "pyart.core.Grid.get_point_longitude_latitude"], [608, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[48, "pyart.core.Grid.get_projparams"], [609, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[49, "pyart.core.Grid.init_point_altitude"], [610, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[50, "pyart.core.Grid.init_point_longitude_latitude"], [611, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[51, "pyart.core.Grid.init_point_x_y_z"], [612, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[52, "pyart.core.Grid.projection_proj"], [613, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[53, "pyart.core.Grid.to_xarray"], [614, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[54, "pyart.core.Grid.write"], [615, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[55, "pyart.core.HorizontalWindProfile"], [616, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[56, "pyart.core.HorizontalWindProfile.from_u_and_v"], [617, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[57, "pyart.core.HorizontalWindProfile.u_wind"], [618, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[58, "pyart.core.HorizontalWindProfile.v_wind"], [619, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[59, "pyart.core.Radar"], [620, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[60, "pyart.core.Radar.add_field"], [621, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[61, "pyart.core.Radar.add_field_like"], [622, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[62, "pyart.core.Radar.add_filter"], [623, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[63, "pyart.core.Radar.check_field_exists"], [624, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[64, "pyart.core.Radar.extract_sweeps"], [625, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[65, "pyart.core.Radar.get_azimuth"], [626, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[66, "pyart.core.Radar.get_elevation"], [627, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[67, "pyart.core.Radar.get_end"], [628, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[68, "pyart.core.Radar.get_field"], [629, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[69, "pyart.core.Radar.get_gate_area"], [630, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[70, "pyart.core.Radar.get_gate_lat_lon_alt"], [631, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[71, "pyart.core.Radar.get_gate_x_y_z"], [632, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[72, "pyart.core.Radar.get_nyquist_vel"], [633, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[73, "pyart.core.Radar.get_slice"], [634, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[74, "pyart.core.Radar.get_start"], [635, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[75, "pyart.core.Radar.get_start_end"], [636, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[76, "pyart.core.Radar.info"], [637, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[77, "pyart.core.Radar.init_gate_altitude"], [638, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[78, "pyart.core.Radar.init_gate_longitude_latitude"], [639, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[79, "pyart.core.Radar.init_gate_x_y_z"], [640, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[80, "pyart.core.Radar.init_rays_per_sweep"], [641, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[81, "pyart.core.Radar.iter_azimuth"], [642, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[82, "pyart.core.Radar.iter_elevation"], [643, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[83, "pyart.core.Radar.iter_end"], [644, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[84, "pyart.core.Radar.iter_field"], [645, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[85, "pyart.core.Radar.iter_slice"], [646, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[86, "pyart.core.Radar.iter_start"], [647, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[87, "pyart.core.Radar.iter_start_end"], [648, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[88, "pyart.core.RadarSpectra"], [649, "pyart.core.RadarSpectra"]], "add_field() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.add_field"], [650, "pyart.core.RadarSpectra.add_field"]], "add_field_like() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.add_field_like"], [651, "pyart.core.RadarSpectra.add_field_like"]], "add_filter() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.add_filter"], [652, "pyart.core.RadarSpectra.add_filter"]], "check_field_exists() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.check_field_exists"], [653, "pyart.core.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.extract_sweeps"], [654, "pyart.core.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.get_azimuth"], [655, "pyart.core.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.get_elevation"], [656, "pyart.core.RadarSpectra.get_elevation"]], "get_end() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.get_end"], [657, "pyart.core.RadarSpectra.get_end"]], "get_field() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.get_field"], [658, "pyart.core.RadarSpectra.get_field"]], "get_gate_area() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.get_gate_area"], [659, "pyart.core.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"], [660, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.get_gate_x_y_z"], [661, "pyart.core.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.get_nyquist_vel"], [662, "pyart.core.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.core.radarspectra method)": [[102, "pyart.core.RadarSpectra.get_slice"], [663, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[103, "pyart.core.RadarSpectra.get_start"], [664, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[104, "pyart.core.RadarSpectra.get_start_end"], [665, "pyart.core.RadarSpectra.get_start_end"]], "info() (pyart.core.radarspectra method)": [[105, "pyart.core.RadarSpectra.info"], [666, "pyart.core.RadarSpectra.info"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[106, "pyart.core.RadarSpectra.init_gate_altitude"], [667, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[107, "pyart.core.RadarSpectra.init_gate_longitude_latitude"], [668, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[108, "pyart.core.RadarSpectra.init_gate_x_y_z"], [669, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[109, "pyart.core.RadarSpectra.init_rays_per_sweep"], [670, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[110, "pyart.core.RadarSpectra.iter_azimuth"], [671, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[111, "pyart.core.RadarSpectra.iter_elevation"], [672, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[112, "pyart.core.RadarSpectra.iter_end"], [673, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[113, "pyart.core.RadarSpectra.iter_field"], [674, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[114, "pyart.core.RadarSpectra.iter_slice"], [675, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[115, "pyart.core.RadarSpectra.iter_start"], [676, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[116, "pyart.core.RadarSpectra.iter_start_end"], [677, "pyart.core.RadarSpectra.iter_start_end"]], "antenna_to_cartesian() (in module pyart.core)": [[117, "pyart.core.antenna_to_cartesian"], [678, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[118, "pyart.core.antenna_vectors_to_cartesian"], [679, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[119, "pyart.core.cartesian_to_antenna"], [680, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[120, "pyart.core.cartesian_to_geographic"], [681, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic_aeqd"], [682, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[122, "pyart.core.cartesian_vectors_to_geographic"], [683, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[123, "pyart.core.geographic_to_cartesian"], [684, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian_aeqd"], [685, "pyart.core.geographic_to_cartesian_aeqd"]], "wgs84_to_swissch1903() (in module pyart.core)": [[125, "pyart.core.wgs84_to_swissCH1903"], [686, "pyart.core.wgs84_to_swissCH1903"]], "calculate_attenuation() (in module pyart.correct)": [[126, "pyart.correct.calculate_attenuation"], [716, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[127, "pyart.correct.calculate_attenuation_philinear"], [717, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[128, "pyart.correct.calculate_attenuation_zphi"], [718, "pyart.correct.calculate_attenuation_zphi"]], "compute_apparent_vpr() (in module pyart.correct)": [[129, "pyart.correct.compute_apparent_vpr"], [719, "pyart.correct.compute_apparent_vpr"]], "compute_theoretical_vpr() (in module pyart.correct)": [[130, "pyart.correct.compute_theoretical_vpr"], [720, "pyart.correct.compute_theoretical_vpr"]], "correct_bias() (in module pyart.correct)": [[131, "pyart.correct.correct_bias"], [721, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[132, "pyart.correct.correct_noise_rhohv"], [722, "pyart.correct.correct_noise_rhohv"]], "correct_sys_phase() (in module pyart.correct)": [[133, "pyart.correct.correct_sys_phase"], [723, "pyart.correct.correct_sys_phase"]], "correct_visibility() (in module pyart.correct)": [[134, "pyart.correct.correct_visibility"], [724, "pyart.correct.correct_visibility"]], "correct_vpr() (in module pyart.correct)": [[135, "pyart.correct.correct_vpr"], [725, "pyart.correct.correct_vpr"]], "correct_vpr_spatialised() (in module pyart.correct)": [[136, "pyart.correct.correct_vpr_spatialised"], [726, "pyart.correct.correct_vpr_spatialised"]], "dealias_fourdd() (in module pyart.correct)": [[137, "pyart.correct.dealias_fourdd"], [727, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[138, "pyart.correct.dealias_region_based"], [728, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[139, "pyart.correct.dealias_unwrap_phase"], [729, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[140, "pyart.correct.despeckle_field"], [730, "pyart.correct.despeckle_field"]], "det_sys_phase_ray() (in module pyart.correct)": [[141, "pyart.correct.det_sys_phase_ray"], [731, "pyart.correct.det_sys_phase_ray"]], "est_rhohv_rain() (in module pyart.correct)": [[142, "pyart.correct.est_rhohv_rain"], [732, "pyart.correct.est_rhohv_rain"]], "est_zdr_precip() (in module pyart.correct)": [[143, "pyart.correct.est_zdr_precip"], [733, "pyart.correct.est_zdr_precip"]], "est_zdr_snow() (in module pyart.correct)": [[144, "pyart.correct.est_zdr_snow"], [734, "pyart.correct.est_zdr_snow"]], "find_objects() (in module pyart.correct)": [[145, "pyart.correct.find_objects"], [735, "pyart.correct.find_objects"]], "get_mask_fzl() (in module pyart.correct)": [[146, "pyart.correct.get_mask_fzl"], [737, "pyart.correct.get_mask_fzl"]], "get_sun_hits() (in module pyart.correct)": [[147, "pyart.correct.get_sun_hits"], [738, "pyart.correct.get_sun_hits"]], "get_sun_hits_ivic() (in module pyart.correct)": [[148, "pyart.correct.get_sun_hits_ivic"], [739, "pyart.correct.get_sun_hits_ivic"]], "get_sun_hits_psr() (in module pyart.correct)": [[149, "pyart.correct.get_sun_hits_psr"], [740, "pyart.correct.get_sun_hits_psr"]], "phase_proc_lp() (in module pyart.correct)": [[150, "pyart.correct.phase_proc_lp"], [742, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[151, "pyart.correct.phase_proc_lp_gf"], [743, "pyart.correct.phase_proc_lp_gf"]], "ptoa_to_sf() (in module pyart.correct)": [[152, "pyart.correct.ptoa_to_sf"], [744, "pyart.correct.ptoa_to_sf"]], "scanning_losses() (in module pyart.correct)": [[153, "pyart.correct.scanning_losses"], [746, "pyart.correct.scanning_losses"]], "selfconsistency_bias() (in module pyart.correct)": [[154, "pyart.correct.selfconsistency_bias"], [747, "pyart.correct.selfconsistency_bias"]], "selfconsistency_bias2() (in module pyart.correct)": [[155, "pyart.correct.selfconsistency_bias2"], [748, "pyart.correct.selfconsistency_bias2"]], "selfconsistency_kdp_phidp() (in module pyart.correct)": [[156, "pyart.correct.selfconsistency_kdp_phidp"], [749, "pyart.correct.selfconsistency_kdp_phidp"]], "smooth_masked() (in module pyart.correct)": [[157, "pyart.correct.smooth_masked"], [750, "pyart.correct.smooth_masked"]], "smooth_phidp_double_window() (in module pyart.correct)": [[158, "pyart.correct.smooth_phidp_double_window"], [751, "pyart.correct.smooth_phidp_double_window"]], "smooth_phidp_single_window() (in module pyart.correct)": [[159, "pyart.correct.smooth_phidp_single_window"], [752, "pyart.correct.smooth_phidp_single_window"]], "solar_flux_lookup() (in module pyart.correct)": [[160, "pyart.correct.solar_flux_lookup"], [753, "pyart.correct.solar_flux_lookup"]], "sun_position_mfr() (in module pyart.correct)": [[161, "pyart.correct.sun_position_mfr"], [754, "pyart.correct.sun_position_mfr"]], "sun_position_pysolar() (in module pyart.correct)": [[162, "pyart.correct.sun_position_pysolar"], [755, "pyart.correct.sun_position_pysolar"]], "sun_power() (in module pyart.correct)": [[163, "pyart.correct.sun_power"], [756, "pyart.correct.sun_power"]], "sun_retrieval() (in module pyart.correct)": [[164, "pyart.correct.sun_retrieval"], [757, "pyart.correct.sun_retrieval"]], "deprecatedattribute": [[165, "pyart.exceptions.DeprecatedAttribute"]], "deprecatedfunctionname": [[166, "pyart.exceptions.DeprecatedFunctionName"]], "missingoptionaldependency": [[167, "pyart.exceptions.MissingOptionalDependency"]], "_deprecated_alias() (in module pyart.exceptions)": [[168, "pyart.exceptions._deprecated_alias"]], "gatefilter (class in pyart.filters)": [[169, "pyart.filters.GateFilter"], [760, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[170, "pyart.filters.GateFilter.copy"], [761, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.exclude_above"], [762, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_all"], [763, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_below"], [764, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_equal"], [765, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_gates"], [766, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_inside"], [767, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_invalid"], [768, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_masked"], [769, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_none"], [770, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_not_equal"], [771, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_outside"], [772, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_transition"], [773, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[183, "pyart.filters.GateFilter.gate_excluded"], [774, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[184, "pyart.filters.GateFilter.gate_included"], [775, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.include_above"], [776, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_all"], [777, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_below"], [778, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_equal"], [779, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_gates"], [780, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_inside"], [781, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_none"], [782, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_not_equal"], [783, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_not_masked"], [784, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_not_transition"], [785, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_outside"], [786, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_valid"], [787, "pyart.filters.GateFilter.include_valid"]], "birds_gate_filter() (in module pyart.filters)": [[197, "pyart.filters.birds_gate_filter"], [788, "pyart.filters.birds_gate_filter"]], "class_based_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.class_based_gate_filter"], [789, "pyart.filters.class_based_gate_filter"]], "iso0_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.iso0_based_gate_filter"], [790, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.moment_and_texture_based_gate_filter"], [791, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[201, "pyart.filters.moment_based_gate_filter"], [792, "pyart.filters.moment_based_gate_filter"]], "snr_based_gate_filter() (in module pyart.filters)": [[202, "pyart.filters.snr_based_gate_filter"], [793, "pyart.filters.snr_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[203, "pyart.filters.temp_based_gate_filter"], [794, "pyart.filters.temp_based_gate_filter"]], "visibility_based_gate_filter() (in module pyart.filters)": [[204, "pyart.filters.visibility_based_gate_filter"], [795, "pyart.filters.visibility_based_gate_filter"]], "airborneradardisplay (class in pyart.graph)": [[205, "pyart.graph.AirborneRadarDisplay"], [797, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"], [798, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_filename"], [799, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_ray_title"], [800, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.generate_title"], [801, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[210, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"], [802, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"], [803, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"], [804, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[213, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"], [805, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[214, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"], [806, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"], [807, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"], [808, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"], [809, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"], [810, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"], [811, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[220, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"], [812, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[221, "pyart.graph.AirborneRadarDisplay.plot"], [813, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"], [814, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_colorbar"], [815, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"], [816, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"], [817, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"], [818, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_label"], [819, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_labels"], [820, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_ppi"], [821, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_range_ring"], [822, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_range_rings"], [823, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_ray"], [824, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[233, "pyart.graph.AirborneRadarDisplay.plot_rhi"], [825, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[234, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"], [826, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[235, "pyart.graph.AirborneRadarDisplay.plot_vpt"], [827, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.airborneradardisplay method)": [[236, "pyart.graph.AirborneRadarDisplay.plot_xsection"], [828, "pyart.graph.AirborneRadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[237, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"], [829, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[238, "pyart.graph.AirborneRadarDisplay.set_limits"], [830, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[239, "pyart.graph.GridMapDisplay"], [831, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.cartopy_coastlines"], [832, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"], [833, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.cartopy_states"], [834, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.generate_filename"], [835, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.generate_grid_title"], [836, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"], [837, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"], [838, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_colorbar"], [839, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_cross_section"], [840, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_cross_section_level() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.plot_cross_section_level"], [841, "pyart.graph.GridMapDisplay.plot_cross_section_level"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.plot_crosshairs"], [842, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_grid"], [843, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_grid_contour() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_grid_contour"], [844, "pyart.graph.GridMapDisplay.plot_grid_contour"]], "plot_grid_raw() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_grid_raw"], [845, "pyart.graph.GridMapDisplay.plot_grid_raw"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[254, "pyart.graph.GridMapDisplay.plot_latitude_slice"], [846, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[255, "pyart.graph.GridMapDisplay.plot_latitudinal_level"], [847, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[256, "pyart.graph.GridMapDisplay.plot_longitude_slice"], [848, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[257, "pyart.graph.GridMapDisplay.plot_longitudinal_level"], [849, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[258, "pyart.graph.GridMapDisplayBasemap"], [850, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.generate_filename"], [851, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"], [852, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"], [853, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"], [854, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.get_basemap"], [855, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.plot_basemap"], [856, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"], [857, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"], [858, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_grid"], [859, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[268, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"], [860, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[269, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"], [861, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[270, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"], [862, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[271, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"], [863, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[272, "pyart.graph.RadarDisplay"], [864, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.generate_az_rhi_title"], [865, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.generate_filename"], [866, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.generate_ray_title"], [867, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.generate_title"], [868, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.generate_vpt_title"], [869, "pyart.graph.RadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.generate_xsection_title"], [870, "pyart.graph.RadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.label_xaxis_r"], [871, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[280, "pyart.graph.RadarDisplay.label_xaxis_rays"], [872, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.label_xaxis_time"], [873, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.label_xaxis_x"], [874, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.label_xaxis_xsection"], [875, "pyart.graph.RadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.label_yaxis_field"], [876, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.label_yaxis_xsection"], [877, "pyart.graph.RadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.label_yaxis_y"], [878, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.label_yaxis_z"], [879, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot"], [880, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"], [881, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[290, "pyart.graph.RadarDisplay.plot_colorbar"], [882, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[291, "pyart.graph.RadarDisplay.plot_cr_raster"], [883, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[292, "pyart.graph.RadarDisplay.plot_cross_hair"], [884, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[293, "pyart.graph.RadarDisplay.plot_grid_lines"], [885, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[294, "pyart.graph.RadarDisplay.plot_label"], [886, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[295, "pyart.graph.RadarDisplay.plot_labels"], [887, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[296, "pyart.graph.RadarDisplay.plot_ppi"], [888, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[297, "pyart.graph.RadarDisplay.plot_range_ring"], [889, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[298, "pyart.graph.RadarDisplay.plot_range_rings"], [890, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[299, "pyart.graph.RadarDisplay.plot_ray"], [891, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[300, "pyart.graph.RadarDisplay.plot_rhi"], [892, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[301, "pyart.graph.RadarDisplay.plot_vpt"], [893, "pyart.graph.RadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radardisplay method)": [[302, "pyart.graph.RadarDisplay.plot_xsection"], [894, "pyart.graph.RadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[303, "pyart.graph.RadarDisplay.set_aspect_ratio"], [895, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[304, "pyart.graph.RadarDisplay.set_limits"], [896, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[305, "pyart.graph.RadarMapDisplay"], [897, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"], [898, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.generate_filename"], [899, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.generate_ray_title"], [900, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.generate_title"], [901, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.generate_vpt_title"], [902, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.generate_xsection_title"], [903, "pyart.graph.RadarMapDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.label_xaxis_r"], [904, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[313, "pyart.graph.RadarMapDisplay.label_xaxis_rays"], [905, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[314, "pyart.graph.RadarMapDisplay.label_xaxis_time"], [906, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.label_xaxis_x"], [907, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"], [908, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.label_yaxis_field"], [909, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"], [910, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.label_yaxis_y"], [911, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.label_yaxis_z"], [912, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot"], [913, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"], [914, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_colorbar"], [915, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_cr_raster"], [916, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[325, "pyart.graph.RadarMapDisplay.plot_cross_hair"], [917, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[326, "pyart.graph.RadarMapDisplay.plot_grid_lines"], [918, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[327, "pyart.graph.RadarMapDisplay.plot_label"], [919, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[328, "pyart.graph.RadarMapDisplay.plot_labels"], [920, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[329, "pyart.graph.RadarMapDisplay.plot_line_geo"], [921, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[330, "pyart.graph.RadarMapDisplay.plot_line_xy"], [922, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[331, "pyart.graph.RadarMapDisplay.plot_point"], [923, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[332, "pyart.graph.RadarMapDisplay.plot_ppi"], [924, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[333, "pyart.graph.RadarMapDisplay.plot_ppi_map"], [925, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[334, "pyart.graph.RadarMapDisplay.plot_range_ring"], [926, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[335, "pyart.graph.RadarMapDisplay.plot_range_rings"], [927, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[336, "pyart.graph.RadarMapDisplay.plot_ray"], [928, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[337, "pyart.graph.RadarMapDisplay.plot_rhi"], [929, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[338, "pyart.graph.RadarMapDisplay.plot_vpt"], [930, "pyart.graph.RadarMapDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplay method)": [[339, "pyart.graph.RadarMapDisplay.plot_xsection"], [931, "pyart.graph.RadarMapDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[340, "pyart.graph.RadarMapDisplay.set_aspect_ratio"], [932, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[341, "pyart.graph.RadarMapDisplay.set_limits"], [933, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[342, "pyart.graph.RadarMapDisplayBasemap"], [934, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"], [935, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.generate_filename"], [936, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"], [937, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.generate_title"], [938, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"], [939, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"], [940, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"], [941, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[350, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"], [942, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[351, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"], [943, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"], [944, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"], [945, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"], [946, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"], [947, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"], [948, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"], [949, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot"], [950, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"], [951, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"], [952, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[361, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"], [953, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[362, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"], [954, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[363, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"], [955, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[364, "pyart.graph.RadarMapDisplayBasemap.plot_label"], [956, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[365, "pyart.graph.RadarMapDisplayBasemap.plot_labels"], [957, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[366, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"], [958, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[367, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"], [959, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[368, "pyart.graph.RadarMapDisplayBasemap.plot_point"], [960, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[369, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"], [961, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[370, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"], [962, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[371, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"], [963, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[372, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"], [964, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[373, "pyart.graph.RadarMapDisplayBasemap.plot_ray"], [965, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[374, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"], [966, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[375, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"], [967, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[376, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"], [968, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[377, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"], [969, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[378, "pyart.graph.RadarMapDisplayBasemap.set_limits"], [970, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "make_time_unit_str() (in module pyart.io)": [[379, "pyart.io.make_time_unit_str"], [973, "pyart.io.make_time_unit_str"]], "prepare_for_read() (in module pyart.io)": [[380, "pyart.io.prepare_for_read"], [974, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[381, "pyart.io.read"], [975, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[382, "pyart.io.read_arm_sonde"], [976, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[383, "pyart.io.read_arm_sonde_vap"], [977, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[384, "pyart.io.read_cfradial"], [978, "pyart.io.read_cfradial"]], "read_cfradial2() (in module pyart.io)": [[385, "pyart.io.read_cfradial2"], [979, "pyart.io.read_cfradial2"]], "read_chl() (in module pyart.io)": [[386, "pyart.io.read_chl"], [980, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[387, "pyart.io.read_grid"], [981, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[388, "pyart.io.read_grid_mdv"], [982, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[389, "pyart.io.read_mdv"], [983, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[390, "pyart.io.read_nexrad_archive"], [984, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[391, "pyart.io.read_nexrad_cdm"], [985, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[392, "pyart.io.read_nexrad_level3"], [986, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[393, "pyart.io.read_rsl"], [987, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[394, "pyart.io.read_sigmet"], [988, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[395, "pyart.io.read_uf"], [989, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[396, "pyart.io.write_cfradial"], [990, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[397, "pyart.io.write_grid"], [991, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[398, "pyart.io.write_grid_geotiff"], [992, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[399, "pyart.io.write_grid_mdv"], [993, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[400, "pyart.io.write_uf"], [994, "pyart.io.write_uf"]], "lazyloaddict (class in pyart.lazydict)": [[401, "pyart.lazydict.LazyLoadDict"], [996, "pyart.lazydict.LazyLoadDict"]], "__contains__() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.__contains__"]], "__delattr__() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.__delattr__"]], "__delitem__() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.__delitem__"]], "__dir__() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.__dir__"]], "__eq__() (pyart.lazydict.lazyloaddict method)": [[406, "pyart.lazydict.LazyLoadDict.__eq__"]], "__format__() (pyart.lazydict.lazyloaddict method)": [[407, "pyart.lazydict.LazyLoadDict.__format__"]], "__ge__() (pyart.lazydict.lazyloaddict method)": [[408, "pyart.lazydict.LazyLoadDict.__ge__"]], "__getattribute__() (pyart.lazydict.lazyloaddict method)": [[409, "pyart.lazydict.LazyLoadDict.__getattribute__"]], "__getitem__() (pyart.lazydict.lazyloaddict method)": [[410, "pyart.lazydict.LazyLoadDict.__getitem__"]], "__getstate__() (pyart.lazydict.lazyloaddict method)": [[411, "pyart.lazydict.LazyLoadDict.__getstate__"]], "__gt__() (pyart.lazydict.lazyloaddict method)": [[412, "pyart.lazydict.LazyLoadDict.__gt__"]], "__init__() (pyart.lazydict.lazyloaddict method)": [[413, "pyart.lazydict.LazyLoadDict.__init__"]], "__init_subclass__() (pyart.lazydict.lazyloaddict method)": [[414, "pyart.lazydict.LazyLoadDict.__init_subclass__"]], "__iter__() (pyart.lazydict.lazyloaddict method)": [[415, "pyart.lazydict.LazyLoadDict.__iter__"]], "__le__() (pyart.lazydict.lazyloaddict method)": [[416, "pyart.lazydict.LazyLoadDict.__le__"]], "__len__() (pyart.lazydict.lazyloaddict method)": [[417, "pyart.lazydict.LazyLoadDict.__len__"]], "__lt__() (pyart.lazydict.lazyloaddict method)": [[418, "pyart.lazydict.LazyLoadDict.__lt__"]], "__ne__() (pyart.lazydict.lazyloaddict method)": [[419, "pyart.lazydict.LazyLoadDict.__ne__"]], "__new__() (pyart.lazydict.lazyloaddict method)": [[420, "pyart.lazydict.LazyLoadDict.__new__"]], "__reduce__() (pyart.lazydict.lazyloaddict method)": [[421, "pyart.lazydict.LazyLoadDict.__reduce__"]], "__reduce_ex__() (pyart.lazydict.lazyloaddict method)": [[422, "pyart.lazydict.LazyLoadDict.__reduce_ex__"]], "__repr__() (pyart.lazydict.lazyloaddict method)": [[423, "pyart.lazydict.LazyLoadDict.__repr__"]], "__setattr__() (pyart.lazydict.lazyloaddict method)": [[424, "pyart.lazydict.LazyLoadDict.__setattr__"]], "__setitem__() (pyart.lazydict.lazyloaddict method)": [[425, "pyart.lazydict.LazyLoadDict.__setitem__"]], "__sizeof__() (pyart.lazydict.lazyloaddict method)": [[426, "pyart.lazydict.LazyLoadDict.__sizeof__"]], "__str__() (pyart.lazydict.lazyloaddict method)": [[427, "pyart.lazydict.LazyLoadDict.__str__"]], "__subclasshook__() (pyart.lazydict.lazyloaddict class method)": [[428, "pyart.lazydict.LazyLoadDict.__subclasshook__"]], "clear() (pyart.lazydict.lazyloaddict method)": [[429, "pyart.lazydict.LazyLoadDict.clear"], [997, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[430, "pyart.lazydict.LazyLoadDict.copy"], [998, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[431, "pyart.lazydict.LazyLoadDict.get"], [999, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[432, "pyart.lazydict.LazyLoadDict.has_key"], [1000, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[433, "pyart.lazydict.LazyLoadDict.items"], [1001, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[434, "pyart.lazydict.LazyLoadDict.keys"], [1002, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[435, "pyart.lazydict.LazyLoadDict.pop"], [1003, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[436, "pyart.lazydict.LazyLoadDict.popitem"], [1004, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[437, "pyart.lazydict.LazyLoadDict.set_lazy"], [1005, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[438, "pyart.lazydict.LazyLoadDict.setdefault"], [1006, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[439, "pyart.lazydict.LazyLoadDict.update"], [1007, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[440, "pyart.lazydict.LazyLoadDict.values"], [1008, "pyart.lazydict.LazyLoadDict.values"]], "example_roi_func_constant() (in module pyart.map)": [[441, "pyart.map.example_roi_func_constant"], [1024, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[442, "pyart.map.example_roi_func_dist"], [1025, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[443, "pyart.map.example_roi_func_dist_beam"], [1026, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[444, "pyart.map.grid_from_radars"], [1028, "pyart.map.grid_from_radars"]], "map_gates_to_grid() (in module pyart.map)": [[445, "pyart.map.map_gates_to_grid"], [1029, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[446, "pyart.map.map_to_grid"], [1030, "pyart.map.map_to_grid"]], "_destandardize() (in module pyart.retrieve)": [[447, "pyart.retrieve._destandardize"]], "_get_res_vol_sides() (in module pyart.retrieve)": [[448, "pyart.retrieve._get_res_vol_sides"]], "atmospheric_gas_att() (in module pyart.retrieve)": [[449, "pyart.retrieve.atmospheric_gas_att"], [1033, "pyart.retrieve.atmospheric_gas_att"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[450, "pyart.retrieve.calculate_snr_from_reflectivity"], [1034, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[451, "pyart.retrieve.calculate_velocity_texture"], [1035, "pyart.retrieve.calculate_velocity_texture"]], "compute_doppler_velocity() (in module pyart.retrieve)": [[452, "pyart.retrieve.compute_Doppler_velocity"], [1037, "pyart.retrieve.compute_Doppler_velocity"]], "compute_doppler_velocity_iq() (in module pyart.retrieve)": [[453, "pyart.retrieve.compute_Doppler_velocity_iq"], [1038, "pyart.retrieve.compute_Doppler_velocity_iq"]], "compute_doppler_width() (in module pyart.retrieve)": [[454, "pyart.retrieve.compute_Doppler_width"], [1039, "pyart.retrieve.compute_Doppler_width"]], "compute_doppler_width_iq() (in module pyart.retrieve)": [[455, "pyart.retrieve.compute_Doppler_width_iq"], [1040, "pyart.retrieve.compute_Doppler_width_iq"]], "compute_apparent_profile() (in module pyart.retrieve)": [[456, "pyart.retrieve.compute_apparent_profile"], [1041, "pyart.retrieve.compute_apparent_profile"]], "compute_bird_density() (in module pyart.retrieve)": [[457, "pyart.retrieve.compute_bird_density"], [1042, "pyart.retrieve.compute_bird_density"]], "compute_ccor() (in module pyart.retrieve)": [[458, "pyart.retrieve.compute_ccor"], [1043, "pyart.retrieve.compute_ccor"]], "compute_cdr() (in module pyart.retrieve)": [[459, "pyart.retrieve.compute_cdr"], [1044, "pyart.retrieve.compute_cdr"]], "compute_centroids() (in module pyart.retrieve)": [[460, "pyart.retrieve.compute_centroids"], [1045, "pyart.retrieve.compute_centroids"]], "compute_differential_phase() (in module pyart.retrieve)": [[461, "pyart.retrieve.compute_differential_phase"], [1046, "pyart.retrieve.compute_differential_phase"]], "compute_differential_phase_iq() (in module pyart.retrieve)": [[462, "pyart.retrieve.compute_differential_phase_iq"], [1047, "pyart.retrieve.compute_differential_phase_iq"]], "compute_differential_reflectivity() (in module pyart.retrieve)": [[463, "pyart.retrieve.compute_differential_reflectivity"], [1048, "pyart.retrieve.compute_differential_reflectivity"]], "compute_differential_reflectivity_iq() (in module pyart.retrieve)": [[464, "pyart.retrieve.compute_differential_reflectivity_iq"], [1049, "pyart.retrieve.compute_differential_reflectivity_iq"]], "compute_evp() (in module pyart.retrieve)": [[465, "pyart.retrieve.compute_evp"], [1050, "pyart.retrieve.compute_evp"]], "compute_iq() (in module pyart.retrieve)": [[466, "pyart.retrieve.compute_iq"], [1051, "pyart.retrieve.compute_iq"]], "compute_l() (in module pyart.retrieve)": [[467, "pyart.retrieve.compute_l"], [1052, "pyart.retrieve.compute_l"]], "compute_mean_phase_iq() (in module pyart.retrieve)": [[468, "pyart.retrieve.compute_mean_phase_iq"], [1053, "pyart.retrieve.compute_mean_phase_iq"]], "compute_noise_power() (in module pyart.retrieve)": [[469, "pyart.retrieve.compute_noise_power"], [1054, "pyart.retrieve.compute_noise_power"]], "compute_noisedbz() (in module pyart.retrieve)": [[470, "pyart.retrieve.compute_noisedBZ"], [1055, "pyart.retrieve.compute_noisedBZ"]], "compute_pol_variables() (in module pyart.retrieve)": [[471, "pyart.retrieve.compute_pol_variables"], [1056, "pyart.retrieve.compute_pol_variables"]], "compute_pol_variables_iq() (in module pyart.retrieve)": [[472, "pyart.retrieve.compute_pol_variables_iq"], [1057, "pyart.retrieve.compute_pol_variables_iq"]], "compute_qvp() (in module pyart.retrieve)": [[473, "pyart.retrieve.compute_qvp"], [1058, "pyart.retrieve.compute_qvp"]], "compute_radial_noise_hs() (in module pyart.retrieve)": [[474, "pyart.retrieve.compute_radial_noise_hs"], [1059, "pyart.retrieve.compute_radial_noise_hs"]], "compute_radial_noise_ivic() (in module pyart.retrieve)": [[475, "pyart.retrieve.compute_radial_noise_ivic"], [1060, "pyart.retrieve.compute_radial_noise_ivic"]], "compute_rcs() (in module pyart.retrieve)": [[476, "pyart.retrieve.compute_rcs"], [1061, "pyart.retrieve.compute_rcs"]], "compute_rcs_from_pr() (in module pyart.retrieve)": [[477, "pyart.retrieve.compute_rcs_from_pr"], [1062, "pyart.retrieve.compute_rcs_from_pr"]], "compute_reflectivity() (in module pyart.retrieve)": [[478, "pyart.retrieve.compute_reflectivity"], [1063, "pyart.retrieve.compute_reflectivity"]], "compute_reflectivity_iq() (in module pyart.retrieve)": [[479, "pyart.retrieve.compute_reflectivity_iq"], [1064, "pyart.retrieve.compute_reflectivity_iq"]], "compute_rhohv() (in module pyart.retrieve)": [[480, "pyart.retrieve.compute_rhohv"], [1065, "pyart.retrieve.compute_rhohv"]], "compute_rhohv_iq() (in module pyart.retrieve)": [[481, "pyart.retrieve.compute_rhohv_iq"], [1066, "pyart.retrieve.compute_rhohv_iq"]], "compute_rqvp() (in module pyart.retrieve)": [[482, "pyart.retrieve.compute_rqvp"], [1067, "pyart.retrieve.compute_rqvp"]], "compute_signal_power() (in module pyart.retrieve)": [[483, "pyart.retrieve.compute_signal_power"], [1068, "pyart.retrieve.compute_signal_power"]], "compute_snr() (in module pyart.retrieve)": [[484, "pyart.retrieve.compute_snr"], [1069, "pyart.retrieve.compute_snr"]], "compute_spectra() (in module pyart.retrieve)": [[485, "pyart.retrieve.compute_spectra"], [1070, "pyart.retrieve.compute_spectra"]], "compute_spectral_differential_phase() (in module pyart.retrieve)": [[486, "pyart.retrieve.compute_spectral_differential_phase"], [1071, "pyart.retrieve.compute_spectral_differential_phase"]], "compute_spectral_differential_reflectivity() (in module pyart.retrieve)": [[487, "pyart.retrieve.compute_spectral_differential_reflectivity"], [1072, "pyart.retrieve.compute_spectral_differential_reflectivity"]], "compute_spectral_noise() (in module pyart.retrieve)": [[488, "pyart.retrieve.compute_spectral_noise"], [1073, "pyart.retrieve.compute_spectral_noise"]], "compute_spectral_phase() (in module pyart.retrieve)": [[489, "pyart.retrieve.compute_spectral_phase"], [1074, "pyart.retrieve.compute_spectral_phase"]], "compute_spectral_power() (in module pyart.retrieve)": [[490, "pyart.retrieve.compute_spectral_power"], [1075, "pyart.retrieve.compute_spectral_power"]], "compute_spectral_reflectivity() (in module pyart.retrieve)": [[491, "pyart.retrieve.compute_spectral_reflectivity"], [1076, "pyart.retrieve.compute_spectral_reflectivity"]], "compute_spectral_rhohv() (in module pyart.retrieve)": [[492, "pyart.retrieve.compute_spectral_rhohv"], [1077, "pyart.retrieve.compute_spectral_rhohv"]], "compute_st1_iq() (in module pyart.retrieve)": [[493, "pyart.retrieve.compute_st1_iq"], [1078, "pyart.retrieve.compute_st1_iq"]], "compute_st2_iq() (in module pyart.retrieve)": [[494, "pyart.retrieve.compute_st2_iq"], [1079, "pyart.retrieve.compute_st2_iq"]], "compute_svp() (in module pyart.retrieve)": [[495, "pyart.retrieve.compute_svp"], [1080, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[496, "pyart.retrieve.compute_ts_along_coord"], [1081, "pyart.retrieve.compute_ts_along_coord"]], "compute_vol_refl() (in module pyart.retrieve)": [[497, "pyart.retrieve.compute_vol_refl"], [1082, "pyart.retrieve.compute_vol_refl"]], "compute_vp() (in module pyart.retrieve)": [[498, "pyart.retrieve.compute_vp"], [1083, "pyart.retrieve.compute_vp"]], "compute_wbn_iq() (in module pyart.retrieve)": [[499, "pyart.retrieve.compute_wbn_iq"], [1084, "pyart.retrieve.compute_wbn_iq"]], "conv_strat_yuter() (in module pyart.retrieve)": [[500, "pyart.retrieve.conv_strat_yuter"], [1085, "pyart.retrieve.conv_strat_yuter"]], "data_for_centroids() (in module pyart.retrieve)": [[501, "pyart.retrieve.data_for_centroids"], [1086, "pyart.retrieve.data_for_centroids"]], "dealias_spectra() (in module pyart.retrieve)": [[502, "pyart.retrieve.dealias_spectra"], [1087, "pyart.retrieve.dealias_spectra"]], "detect_ml() (in module pyart.retrieve)": [[503, "pyart.retrieve.detect_ml"], [1088, "pyart.retrieve.detect_ml"]], "determine_medoids() (in module pyart.retrieve)": [[504, "pyart.retrieve.determine_medoids"], [1089, "pyart.retrieve.determine_medoids"]], "est_rain_rate_a() (in module pyart.retrieve)": [[505, "pyart.retrieve.est_rain_rate_a"], [1090, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[506, "pyart.retrieve.est_rain_rate_hydro"], [1091, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[507, "pyart.retrieve.est_rain_rate_kdp"], [1092, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[508, "pyart.retrieve.est_rain_rate_z"], [1093, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[509, "pyart.retrieve.est_rain_rate_za"], [1094, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[510, "pyart.retrieve.est_rain_rate_zkdp"], [1095, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[511, "pyart.retrieve.est_rain_rate_zpoly"], [1096, "pyart.retrieve.est_rain_rate_zpoly"]], "est_vertical_windshear() (in module pyart.retrieve)": [[512, "pyart.retrieve.est_vertical_windshear"], [1097, "pyart.retrieve.est_vertical_windshear"]], "est_vertical_windshear_lidar() (in module pyart.retrieve)": [[513, "pyart.retrieve.est_vertical_windshear_lidar"], [1098, "pyart.retrieve.est_vertical_windshear_lidar"]], "est_wind_profile() (in module pyart.retrieve)": [[514, "pyart.retrieve.est_wind_profile"], [1099, "pyart.retrieve.est_wind_profile"]], "est_wind_vel() (in module pyart.retrieve)": [[515, "pyart.retrieve.est_wind_vel"], [1100, "pyart.retrieve.est_wind_vel"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[516, "pyart.retrieve.fetch_radar_time_profile"], [1101, "pyart.retrieve.fetch_radar_time_profile"]], "gecsx() (in module pyart.retrieve)": [[517, "pyart.retrieve.gecsx"], [1102, "pyart.retrieve.gecsx"]], "get_coeff_attg() (in module pyart.retrieve)": [[518, "pyart.retrieve.get_coeff_attg"], [1103, "pyart.retrieve.get_coeff_attg"]], "get_freq_band() (in module pyart.retrieve)": [[519, "pyart.retrieve.get_freq_band"], [1104, "pyart.retrieve.get_freq_band"]], "get_iso0_val() (in module pyart.retrieve)": [[520, "pyart.retrieve.get_iso0_val"], [1105, "pyart.retrieve.get_iso0_val"]], "get_ml_rng_limits() (in module pyart.retrieve)": [[521, "pyart.retrieve.get_ml_rng_limits"], [1106, "pyart.retrieve.get_ml_rng_limits"]], "grid_displacement_pc() (in module pyart.retrieve)": [[522, "pyart.retrieve.grid_displacement_pc"], [1107, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[523, "pyart.retrieve.grid_shift"], [1108, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[524, "pyart.retrieve.hydroclass_semisupervised"], [1109, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_leastsquare_double_window() (in module pyart.retrieve)": [[525, "pyart.retrieve.kdp_leastsquare_double_window"], [1110, "pyart.retrieve.kdp_leastsquare_double_window"]], "kdp_leastsquare_single_window() (in module pyart.retrieve)": [[526, "pyart.retrieve.kdp_leastsquare_single_window"], [1111, "pyart.retrieve.kdp_leastsquare_single_window"]], "kdp_maesaka() (in module pyart.retrieve)": [[527, "pyart.retrieve.kdp_maesaka"], [1112, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[528, "pyart.retrieve.kdp_schneebeli"], [1113, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[529, "pyart.retrieve.kdp_vulpiani"], [1114, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[530, "pyart.retrieve.map_profile_to_gates"], [1115, "pyart.retrieve.map_profile_to_gates"]], "melting_layer_giangrande() (in module pyart.retrieve)": [[531, "pyart.retrieve.melting_layer_giangrande"], [1116, "pyart.retrieve.melting_layer_giangrande"]], "melting_layer_hydroclass() (in module pyart.retrieve)": [[532, "pyart.retrieve.melting_layer_hydroclass"], [1117, "pyart.retrieve.melting_layer_hydroclass"]], "melting_layer_mf() (in module pyart.retrieve)": [[533, "pyart.retrieve.melting_layer_mf"], [1118, "pyart.retrieve.melting_layer_mf"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[534, "pyart.retrieve.quasi_vertical_profile"], [1119, "pyart.retrieve.quasi_vertical_profile"]], "select_samples() (in module pyart.retrieve)": [[535, "pyart.retrieve.select_samples"], [1120, "pyart.retrieve.select_samples"]], "steiner_conv_strat() (in module pyart.retrieve)": [[536, "pyart.retrieve.steiner_conv_strat"], [1121, "pyart.retrieve.steiner_conv_strat"]], "synthetic_obs_distribution() (in module pyart.retrieve)": [[537, "pyart.retrieve.synthetic_obs_distribution"], [1122, "pyart.retrieve.synthetic_obs_distribution"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[538, "pyart.retrieve.texture_of_complex_phase"], [1123, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[539, "pyart.retrieve.vad_browning"], [1124, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[540, "pyart.retrieve.vad_michelson"], [1125, "pyart.retrieve.vad_michelson"]], "_debug_info() (in module pyart)": [[541, "pyart._debug_info"]], "module": [[542, "module-pyart.aux_io"], [590, "module-pyart.bridge"], [592, "module-pyart.config"], [605, "module-pyart.core"], [687, "module-pyart.correct"], [758, "module-pyart.exceptions"], [759, "module-pyart.filters"], [796, "module-pyart.graph"], [972, "module-pyart.io"], [995, "module-pyart.lazydict"], [1019, "module-pyart.map"], [1032, "module-pyart.retrieve"], [1126, "module-pyart.testing"], [1211, "module-pyart.util"]], "pyart.aux_io": [[542, "module-pyart.aux_io"]], "convert_data() (in module pyart.aux_io)": [[543, "pyart.aux_io.convert_data"]], "get_library() (in module pyart.aux_io)": [[545, "pyart.aux_io.get_library"]], "read_edge_netcdf() (in module pyart.aux_io)": [[555, "pyart.aux_io.read_edge_netcdf"]], "read_file_c() (in module pyart.aux_io)": [[556, "pyart.aux_io.read_file_c"]], "read_file_py() (in module pyart.aux_io)": [[557, "pyart.aux_io.read_file_py"]], "read_knmi_grid_h5() (in module pyart.aux_io)": [[564, "pyart.aux_io.read_knmi_grid_h5"]], "read_mch_vad() (in module pyart.aux_io)": [[565, "pyart.aux_io.read_mch_vad"]], "read_product_c() (in module pyart.aux_io)": [[573, "pyart.aux_io.read_product_c"]], "read_product_py() (in module pyart.aux_io)": [[574, "pyart.aux_io.read_product_py"]], "read_psr_cpi_header() (in module pyart.aux_io)": [[575, "pyart.aux_io.read_psr_cpi_header"]], "read_psr_header() (in module pyart.aux_io)": [[576, "pyart.aux_io.read_psr_header"]], "read_psr_spectra() (in module pyart.aux_io)": [[577, "pyart.aux_io.read_psr_spectra"]], "read_sinarame_h5() (in module pyart.aux_io)": [[582, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[588, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[590, "module-pyart.bridge"]], "pyart.config": [[592, "module-pyart.config"]], "get_ke() (in module pyart.config)": [[597, "pyart.config.get_KE"]], "pyart.core": [[605, "module-pyart.core"]], "pyart.correct": [[687, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[688, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[689, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[690, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[691, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[692, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[693, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[694, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[695, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[696, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[697, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[698, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[699, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[700, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[701, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[702, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[703, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[704, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[705, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[706, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[707, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[708, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[709, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[710, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[711, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[712, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[713, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[714, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[715, "pyart.correct.GateFilter.include_valid"]], "gauss_fit() (in module pyart.correct)": [[736, "pyart.correct.gauss_fit"]], "moment_based_gate_filter() (in module pyart.correct)": [[741, "pyart.correct.moment_based_gate_filter"]], "retrieval_result() (in module pyart.correct)": [[745, "pyart.correct.retrieval_result"]], "pyart.exceptions": [[758, "module-pyart.exceptions"]], "pyart.filters": [[759, "module-pyart.filters"]], "pyart.graph": [[796, "module-pyart.graph"]], "plot_convstrat_scheme() (in module pyart.graph)": [[971, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[972, "module-pyart.io"]], "pyart.lazydict": [[995, "module-pyart.lazydict"]], "mutablemapping (class in pyart.lazydict)": [[1009, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[1010, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[1011, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[1012, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[1013, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[1014, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[1015, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[1016, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[1017, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[1018, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[1019, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[1020, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[1021, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[1022, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[1023, "pyart.map.GateMapper.time_tolerance"]], "get_earth_radius() (in module pyart.map)": [[1027, "pyart.map.get_earth_radius"]], "polar_to_cartesian() (in module pyart.map)": [[1031, "pyart.map.polar_to_cartesian"]], "pyart.retrieve": [[1032, "module-pyart.retrieve"]], "composite_reflectivity() (in module pyart.retrieve)": [[1036, "pyart.retrieve.composite_reflectivity"]], "pyart.testing": [[1126, "module-pyart.testing"]], "grid (class in pyart.testing)": [[1127, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[1128, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[1129, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[1130, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[1131, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[1132, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[1133, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[1134, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[1135, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[1136, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[1137, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[1138, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[1139, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[1140, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[1141, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[1142, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[1143, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[1144, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[1145, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[1146, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[1147, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[1148, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[1149, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[1150, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[1151, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[1152, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[1153, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[1154, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[1155, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[1156, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[1157, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[1158, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[1159, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[1160, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[1161, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[1162, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[1163, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[1164, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[1165, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[1166, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[1167, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[1168, "pyart.testing.RadarSpectra"]], "add_field() (pyart.testing.radarspectra method)": [[1169, "pyart.testing.RadarSpectra.add_field"]], "add_field_like() (pyart.testing.radarspectra method)": [[1170, "pyart.testing.RadarSpectra.add_field_like"]], "add_filter() (pyart.testing.radarspectra method)": [[1171, "pyart.testing.RadarSpectra.add_filter"]], "check_field_exists() (pyart.testing.radarspectra method)": [[1172, "pyart.testing.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.testing.radarspectra method)": [[1173, "pyart.testing.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.testing.radarspectra method)": [[1174, "pyart.testing.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.testing.radarspectra method)": [[1175, "pyart.testing.RadarSpectra.get_elevation"]], "get_end() (pyart.testing.radarspectra method)": [[1176, "pyart.testing.RadarSpectra.get_end"]], "get_field() (pyart.testing.radarspectra method)": [[1177, "pyart.testing.RadarSpectra.get_field"]], "get_gate_area() (pyart.testing.radarspectra method)": [[1178, "pyart.testing.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radarspectra method)": [[1179, "pyart.testing.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radarspectra method)": [[1180, "pyart.testing.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radarspectra method)": [[1181, "pyart.testing.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.testing.radarspectra method)": [[1182, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[1183, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[1184, "pyart.testing.RadarSpectra.get_start_end"]], "info() (pyart.testing.radarspectra method)": [[1185, "pyart.testing.RadarSpectra.info"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[1186, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[1187, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[1188, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[1189, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[1190, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[1191, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[1192, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[1193, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[1194, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[1195, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[1196, "pyart.testing.RadarSpectra.iter_start_end"]], "get_metadata() (in module pyart.testing)": [[1197, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[1198, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[1199, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[1200, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[1201, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[1202, "pyart.testing.make_empty_spectra_radar"]], "make_normal_storm() (in module pyart.testing)": [[1203, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[1204, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[1205, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[1206, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[1207, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[1208, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[1209, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[1210, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[1211, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[1212, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[1213, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[1214, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[1215, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[1216, "pyart.util.angular_texture_2d"]], "colocated_gates() (in module pyart.util)": [[1217, "pyart.util.colocated_gates"]], "colocated_gates2() (in module pyart.util)": [[1218, "pyart.util.colocated_gates2"]], "compute_azimuthal_average() (in module pyart.util)": [[1219, "pyart.util.compute_azimuthal_average"]], "compute_corr() (in module pyart.util)": [[1220, "pyart.util.compute_corr"]], "compute_directional_stats() (in module pyart.util)": [[1221, "pyart.util.compute_directional_stats"]], "compute_mse() (in module pyart.util)": [[1222, "pyart.util.compute_mse"]], "compute_nse() (in module pyart.util)": [[1223, "pyart.util.compute_nse"]], "cross_section_ppi() (in module pyart.util)": [[1224, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[1225, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[1226, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[1227, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[1228, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[1229, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[1230, "pyart.util.datetimes_from_radar"]], "estimate_noise_hs74() (in module pyart.util)": [[1231, "pyart.util.estimate_noise_hs74"]], "estimate_noise_ivic13() (in module pyart.util)": [[1232, "pyart.util.estimate_noise_ivic13"]], "find_neighbour_gates() (in module pyart.util)": [[1233, "pyart.util.find_neighbour_gates"]], "for_azimuth() (in module pyart.util)": [[1234, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[1235, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[1236, "pyart.util.get_field_location"]], "get_ivic_flat_reg_var_max() (in module pyart.util)": [[1237, "pyart.util.get_ivic_flat_reg_var_max"]], "get_ivic_pct() (in module pyart.util)": [[1238, "pyart.util.get_ivic_pct"]], "get_ivic_snr_thr() (in module pyart.util)": [[1239, "pyart.util.get_ivic_snr_thr"]], "get_target_elevations() (in module pyart.util)": [[1240, "pyart.util.get_target_elevations"]], "grid_texture_2d() (in module pyart.util)": [[1241, "pyart.util.grid_texture_2d"]], "image_mute_radar() (in module pyart.util)": [[1242, "pyart.util.image_mute_radar"]], "interpol_spectra() (in module pyart.util)": [[1243, "pyart.util.interpol_spectra"]], "intersection() (in module pyart.util)": [[1244, "pyart.util.intersection"]], "interval_mean() (in module pyart.util)": [[1245, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[1246, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[1247, "pyart.util.is_vpt"]], "ivic_flat_reg_var_max_table() (in module pyart.util)": [[1248, "pyart.util.ivic_flat_reg_var_max_table"]], "ivic_flat_reg_wind_len_table() (in module pyart.util)": [[1249, "pyart.util.ivic_flat_reg_wind_len_table"]], "ivic_pct_table() (in module pyart.util)": [[1250, "pyart.util.ivic_pct_table"]], "ivic_snr_thr_table() (in module pyart.util)": [[1251, "pyart.util.ivic_snr_thr_table"]], "join_radar() (in module pyart.util)": [[1252, "pyart.util.join_radar"]], "join_spectra() (in module pyart.util)": [[1253, "pyart.util.join_spectra"]], "ma_broadcast_to() (in module pyart.util)": [[1254, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[1255, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[1256, "pyart.util.mean_of_two_angles_deg"]], "radar_from_spectra() (in module pyart.util)": [[1257, "pyart.util.radar_from_spectra"]], "rolling_window() (in module pyart.util)": [[1258, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[1259, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[1260, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[1261, "pyart.util.subset_radar"]], "subset_radar_spectra() (in module pyart.util)": [[1262, "pyart.util.subset_radar_spectra"]], "texture() (in module pyart.util)": [[1263, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[1264, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[1265, "pyart.util.to_vpt"]]}})