Search.setIndex({"docnames": ["API/generated/generated/pyart.aux_io.read_bin", "API/generated/generated/pyart.aux_io.read_bin_mf", "API/generated/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/generated/pyart.aux_io.read_cf1", "API/generated/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/generated/pyart.aux_io.read_dat_mf", "API/generated/generated/pyart.aux_io.read_gamic", "API/generated/generated/pyart.aux_io.read_gif", "API/generated/generated/pyart.aux_io.read_grib", "API/generated/generated/pyart.aux_io.read_hpl", "API/generated/generated/pyart.aux_io.read_iq", "API/generated/generated/pyart.aux_io.read_kazr", "API/generated/generated/pyart.aux_io.read_metranet", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/generated/pyart.aux_io.read_odim_h5", "API/generated/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/generated/pyart.aux_io.read_pattern", "API/generated/generated/pyart.aux_io.read_png", "API/generated/generated/pyart.aux_io.read_radx", "API/generated/generated/pyart.aux_io.read_rainbow_psr", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/generated/pyart.aux_io.read_spectra", "API/generated/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/generated/pyart.aux_io.write_odim_h5", "API/generated/generated/pyart.aux_io.write_spectra", "API/generated/generated/pyart.bridge.texture_of_complex_phase", "API/generated/generated/pyart.config.FileMetadata", "API/generated/generated/pyart.config.FileMetadata.__call__", "API/generated/generated/pyart.config.FileMetadata.get_field_name", "API/generated/generated/pyart.config.FileMetadata.get_metadata", "API/generated/generated/pyart.config.get_field_colormap", "API/generated/generated/pyart.config.get_field_limits", "API/generated/generated/pyart.config.get_field_mapping", "API/generated/generated/pyart.config.get_field_name", "API/generated/generated/pyart.config.get_fillvalue", "API/generated/generated/pyart.config.get_metadata", "API/generated/generated/pyart.config.load_config", "API/generated/generated/pyart.core.Grid", "API/generated/generated/pyart.core.Grid.add_field", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.get_projparams", "API/generated/generated/pyart.core.Grid.init_point_altitude", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/generated/pyart.core.Grid.projection_proj", "API/generated/generated/pyart.core.Grid.to_xarray", "API/generated/generated/pyart.core.Grid.write", "API/generated/generated/pyart.core.HorizontalWindProfile", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/generated/pyart.core.Radar", "API/generated/generated/pyart.core.Radar.add_field", "API/generated/generated/pyart.core.Radar.add_field_like", "API/generated/generated/pyart.core.Radar.add_filter", "API/generated/generated/pyart.core.Radar.check_field_exists", "API/generated/generated/pyart.core.Radar.extract_sweeps", "API/generated/generated/pyart.core.Radar.get_azimuth", "API/generated/generated/pyart.core.Radar.get_elevation", "API/generated/generated/pyart.core.Radar.get_end", "API/generated/generated/pyart.core.Radar.get_field", "API/generated/generated/pyart.core.Radar.get_gate_area", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/generated/pyart.core.Radar.get_slice", "API/generated/generated/pyart.core.Radar.get_start", "API/generated/generated/pyart.core.Radar.get_start_end", "API/generated/generated/pyart.core.Radar.info", "API/generated/generated/pyart.core.Radar.init_gate_altitude", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/generated/pyart.core.Radar.iter_azimuth", "API/generated/generated/pyart.core.Radar.iter_elevation", "API/generated/generated/pyart.core.Radar.iter_end", "API/generated/generated/pyart.core.Radar.iter_field", "API/generated/generated/pyart.core.Radar.iter_slice", "API/generated/generated/pyart.core.Radar.iter_start", "API/generated/generated/pyart.core.Radar.iter_start_end", "API/generated/generated/pyart.core.RadarSpectra", "API/generated/generated/pyart.core.RadarSpectra.add_field", "API/generated/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/generated/pyart.core.RadarSpectra.add_filter", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/generated/pyart.core.RadarSpectra.get_end", "API/generated/generated/pyart.core.RadarSpectra.get_field", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/generated/pyart.core.RadarSpectra.get_slice", "API/generated/generated/pyart.core.RadarSpectra.get_start", "API/generated/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/generated/pyart.core.RadarSpectra.info", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/generated/pyart.core.RadarSpectra.iter_end", "API/generated/generated/pyart.core.RadarSpectra.iter_field", "API/generated/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/generated/pyart.core.RadarSpectra.iter_start", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/generated/pyart.core.antenna_to_cartesian", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/generated/pyart.core.cartesian_to_antenna", "API/generated/generated/pyart.core.cartesian_to_geographic", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/generated/pyart.core.geographic_to_cartesian", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/generated/pyart.correct.calculate_attenuation", "API/generated/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/generated/pyart.correct.compute_apparent_vpr", "API/generated/generated/pyart.correct.compute_theoretical_vpr", "API/generated/generated/pyart.correct.correct_bias", "API/generated/generated/pyart.correct.correct_noise_rhohv", "API/generated/generated/pyart.correct.correct_sys_phase", "API/generated/generated/pyart.correct.correct_visibility", "API/generated/generated/pyart.correct.correct_vpr", "API/generated/generated/pyart.correct.correct_vpr_spatialised", "API/generated/generated/pyart.correct.dealias_fourdd", "API/generated/generated/pyart.correct.dealias_region_based", "API/generated/generated/pyart.correct.dealias_unwrap_phase", "API/generated/generated/pyart.correct.despeckle_field", "API/generated/generated/pyart.correct.det_sys_phase_ray", "API/generated/generated/pyart.correct.est_rhohv_rain", "API/generated/generated/pyart.correct.est_zdr_precip", "API/generated/generated/pyart.correct.est_zdr_snow", "API/generated/generated/pyart.correct.find_objects", "API/generated/generated/pyart.correct.get_mask_fzl", "API/generated/generated/pyart.correct.get_sun_hits", "API/generated/generated/pyart.correct.get_sun_hits_ivic", "API/generated/generated/pyart.correct.get_sun_hits_psr", "API/generated/generated/pyart.correct.phase_proc_lp", "API/generated/generated/pyart.correct.phase_proc_lp_gf", "API/generated/generated/pyart.correct.ptoa_to_sf", "API/generated/generated/pyart.correct.scanning_losses", "API/generated/generated/pyart.correct.selfconsistency_bias", "API/generated/generated/pyart.correct.selfconsistency_bias2", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/generated/pyart.correct.smooth_masked", "API/generated/generated/pyart.correct.smooth_phidp_double_window", "API/generated/generated/pyart.correct.smooth_phidp_single_window", "API/generated/generated/pyart.correct.solar_flux_lookup", "API/generated/generated/pyart.correct.sun_position_mfr", "API/generated/generated/pyart.correct.sun_position_pysolar", "API/generated/generated/pyart.correct.sun_power", "API/generated/generated/pyart.correct.sun_retrieval", "API/generated/generated/pyart.exceptions.DeprecatedAttribute", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName", "API/generated/generated/pyart.exceptions.MissingOptionalDependency", "API/generated/generated/pyart.exceptions._deprecated_alias", "API/generated/generated/pyart.filters.GateFilter", "API/generated/generated/pyart.filters.GateFilter.copy", "API/generated/generated/pyart.filters.GateFilter.exclude_above", "API/generated/generated/pyart.filters.GateFilter.exclude_all", "API/generated/generated/pyart.filters.GateFilter.exclude_below", "API/generated/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/generated/pyart.filters.GateFilter.exclude_none", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/generated/pyart.filters.GateFilter.gate_included", "API/generated/generated/pyart.filters.GateFilter.include_above", "API/generated/generated/pyart.filters.GateFilter.include_all", "API/generated/generated/pyart.filters.GateFilter.include_below", "API/generated/generated/pyart.filters.GateFilter.include_equal", "API/generated/generated/pyart.filters.GateFilter.include_gates", "API/generated/generated/pyart.filters.GateFilter.include_inside", "API/generated/generated/pyart.filters.GateFilter.include_none", "API/generated/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/generated/pyart.filters.GateFilter.include_outside", "API/generated/generated/pyart.filters.GateFilter.include_valid", "API/generated/generated/pyart.filters.birds_gate_filter", "API/generated/generated/pyart.filters.class_based_gate_filter", "API/generated/generated/pyart.filters.iso0_based_gate_filter", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/generated/pyart.filters.moment_based_gate_filter", "API/generated/generated/pyart.filters.snr_based_gate_filter", "API/generated/generated/pyart.filters.temp_based_gate_filter", "API/generated/generated/pyart.filters.visibility_based_gate_filter", "API/generated/generated/pyart.graph.AirborneRadarDisplay", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/generated/pyart.graph.GridMapDisplay", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/generated/pyart.graph.RadarDisplay", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarDisplay.plot", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplay", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/generated/pyart.io.make_time_unit_str", "API/generated/generated/pyart.io.prepare_for_read", "API/generated/generated/pyart.io.read", "API/generated/generated/pyart.io.read_arm_sonde", "API/generated/generated/pyart.io.read_arm_sonde_vap", "API/generated/generated/pyart.io.read_cfradial", "API/generated/generated/pyart.io.read_cfradial2", "API/generated/generated/pyart.io.read_chl", "API/generated/generated/pyart.io.read_grid", "API/generated/generated/pyart.io.read_grid_mdv", "API/generated/generated/pyart.io.read_mdv", "API/generated/generated/pyart.io.read_nexrad_archive", "API/generated/generated/pyart.io.read_nexrad_cdm", "API/generated/generated/pyart.io.read_nexrad_level3", "API/generated/generated/pyart.io.read_rsl", "API/generated/generated/pyart.io.read_sigmet", "API/generated/generated/pyart.io.read_uf", "API/generated/generated/pyart.io.write_cfradial", "API/generated/generated/pyart.io.write_grid", "API/generated/generated/pyart.io.write_grid_geotiff", "API/generated/generated/pyart.io.write_grid_mdv", "API/generated/generated/pyart.io.write_uf", "API/generated/generated/pyart.lazydict.LazyLoadDict", "API/generated/generated/pyart.lazydict.LazyLoadDict.__class_getitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/generated/pyart.map.example_roi_func_constant", "API/generated/generated/pyart.map.example_roi_func_dist", "API/generated/generated/pyart.map.example_roi_func_dist_beam", "API/generated/generated/pyart.map.grid_from_radars", "API/generated/generated/pyart.map.map_gates_to_grid", "API/generated/generated/pyart.map.map_to_grid", "API/generated/generated/pyart.retrieve._destandardize", "API/generated/generated/pyart.retrieve._get_res_vol_sides", "API/generated/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/generated/pyart.retrieve.compute_Doppler_width", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/generated/pyart.retrieve.compute_apparent_profile", "API/generated/generated/pyart.retrieve.compute_bird_density", "API/generated/generated/pyart.retrieve.compute_ccor", "API/generated/generated/pyart.retrieve.compute_cdr", "API/generated/generated/pyart.retrieve.compute_centroids", "API/generated/generated/pyart.retrieve.compute_differential_phase", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_evp", "API/generated/generated/pyart.retrieve.compute_iq", "API/generated/generated/pyart.retrieve.compute_l", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/generated/pyart.retrieve.compute_noise_power", "API/generated/generated/pyart.retrieve.compute_noisedBZ", "API/generated/generated/pyart.retrieve.compute_pol_variables", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/generated/pyart.retrieve.compute_qvp", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/generated/pyart.retrieve.compute_rcs", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/generated/pyart.retrieve.compute_reflectivity", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/generated/pyart.retrieve.compute_rhohv", "API/generated/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/generated/pyart.retrieve.compute_rqvp", "API/generated/generated/pyart.retrieve.compute_signal_power", "API/generated/generated/pyart.retrieve.compute_snr", "API/generated/generated/pyart.retrieve.compute_spectra", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_noise", "API/generated/generated/pyart.retrieve.compute_spectral_phase", "API/generated/generated/pyart.retrieve.compute_spectral_power", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/generated/pyart.retrieve.compute_st1_iq", "API/generated/generated/pyart.retrieve.compute_st2_iq", "API/generated/generated/pyart.retrieve.compute_svp", "API/generated/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/generated/pyart.retrieve.compute_vol_refl", "API/generated/generated/pyart.retrieve.compute_vp", "API/generated/generated/pyart.retrieve.compute_wbn_iq", "API/generated/generated/pyart.retrieve.conv_strat_yuter", "API/generated/generated/pyart.retrieve.data_for_centroids", "API/generated/generated/pyart.retrieve.detect_ml", "API/generated/generated/pyart.retrieve.determine_medoids", "API/generated/generated/pyart.retrieve.est_rain_rate_a", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/generated/pyart.retrieve.est_rain_rate_z", "API/generated/generated/pyart.retrieve.est_rain_rate_za", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/generated/pyart.retrieve.est_vertical_windshear", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/generated/pyart.retrieve.est_wind_profile", "API/generated/generated/pyart.retrieve.est_wind_vel", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/generated/pyart.retrieve.gecsx", "API/generated/generated/pyart.retrieve.get_coeff_attg", "API/generated/generated/pyart.retrieve.get_freq_band", "API/generated/generated/pyart.retrieve.get_iso0_val", "API/generated/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/generated/pyart.retrieve.grid_displacement_pc", "API/generated/generated/pyart.retrieve.grid_shift", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/generated/pyart.retrieve.kdp_maesaka", "API/generated/generated/pyart.retrieve.kdp_schneebeli", "API/generated/generated/pyart.retrieve.kdp_vulpiani", "API/generated/generated/pyart.retrieve.map_profile_to_gates", "API/generated/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/generated/pyart.retrieve.melting_layer_mf", "API/generated/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/generated/pyart.retrieve.select_samples", "API/generated/generated/pyart.retrieve.steiner_conv_strat", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/generated/pyart.retrieve.vad_browning", "API/generated/generated/pyart.retrieve.vad_michelson", "API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.convert_data", "API/generated/pyart.aux_io.get_library", "API/generated/pyart.aux_io.read_bin", "API/generated/pyart.aux_io.read_bin_mf", "API/generated/pyart.aux_io.read_cartesian_metranet", "API/generated/pyart.aux_io.read_cf1", "API/generated/pyart.aux_io.read_cf1_cartesian", "API/generated/pyart.aux_io.read_cf1_cartesian_mf", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_dat_mf", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_file_c", "API/generated/pyart.aux_io.read_file_py", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_gif", "API/generated/pyart.aux_io.read_grib", "API/generated/pyart.aux_io.read_hpl", "API/generated/pyart.aux_io.read_iq", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_metranet", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_grid_h5", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_odim_vp_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_png", "API/generated/pyart.aux_io.read_product_c", "API/generated/pyart.aux_io.read_product_py", "API/generated/pyart.aux_io.read_psr_cpi_header", "API/generated/pyart.aux_io.read_psr_header", "API/generated/pyart.aux_io.read_psr_spectra", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_rainbow_psr", "API/generated/pyart.aux_io.read_rainbow_psr_spectra", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.read_spectra", "API/generated/pyart.aux_io.write_odim_grid_h5", "API/generated/pyart.aux_io.write_odim_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.aux_io.write_spectra", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.add_field", "API/generated/pyart.core.RadarSpectra.add_field_like", "API/generated/pyart.core.RadarSpectra.add_filter", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.extract_sweeps", "API/generated/pyart.core.RadarSpectra.get_azimuth", "API/generated/pyart.core.RadarSpectra.get_elevation", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_field", "API/generated/pyart.core.RadarSpectra.get_gate_area", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.info", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.core.wgs84_to_swissCH1903", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.compute_apparent_vpr", "API/generated/pyart.correct.compute_theoretical_vpr", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.correct_sys_phase", "API/generated/pyart.correct.correct_visibility", "API/generated/pyart.correct.correct_vpr", "API/generated/pyart.correct.correct_vpr_spatialised", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.det_sys_phase_ray", "API/generated/pyart.correct.est_rhohv_rain", "API/generated/pyart.correct.est_zdr_precip", "API/generated/pyart.correct.est_zdr_snow", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.gauss_fit", "API/generated/pyart.correct.get_mask_fzl", "API/generated/pyart.correct.get_sun_hits", "API/generated/pyart.correct.get_sun_hits_ivic", "API/generated/pyart.correct.get_sun_hits_psr", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.ptoa_to_sf", "API/generated/pyart.correct.retrieval_result", "API/generated/pyart.correct.scanning_losses", "API/generated/pyart.correct.selfconsistency_bias", "API/generated/pyart.correct.selfconsistency_bias2", "API/generated/pyart.correct.selfconsistency_kdp_phidp", "API/generated/pyart.correct.smooth_masked", "API/generated/pyart.correct.smooth_phidp_double_window", "API/generated/pyart.correct.smooth_phidp_single_window", "API/generated/pyart.correct.solar_flux_lookup", "API/generated/pyart.correct.sun_position_mfr", "API/generated/pyart.correct.sun_position_pysolar", "API/generated/pyart.correct.sun_power", "API/generated/pyart.correct.sun_retrieval", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.birds_gate_filter", "API/generated/pyart.filters.class_based_gate_filter", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.snr_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.filters.visibility_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.plot_xsection", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.make_time_unit_str", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_cfradial2", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.get_earth_radius", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.map.polar_to_cartesian", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.atmospheric_gas_att", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_Doppler_velocity", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq", "API/generated/pyart.retrieve.compute_Doppler_width", "API/generated/pyart.retrieve.compute_Doppler_width_iq", "API/generated/pyart.retrieve.compute_apparent_profile", "API/generated/pyart.retrieve.compute_bird_density", "API/generated/pyart.retrieve.compute_ccor", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_centroids", "API/generated/pyart.retrieve.compute_differential_phase", "API/generated/pyart.retrieve.compute_differential_phase_iq", "API/generated/pyart.retrieve.compute_differential_reflectivity", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_iq", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_mean_phase_iq", "API/generated/pyart.retrieve.compute_noise_power", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_pol_variables", "API/generated/pyart.retrieve.compute_pol_variables_iq", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_radial_noise_hs", "API/generated/pyart.retrieve.compute_radial_noise_ivic", "API/generated/pyart.retrieve.compute_rcs", "API/generated/pyart.retrieve.compute_rcs_from_pr", "API/generated/pyart.retrieve.compute_reflectivity", "API/generated/pyart.retrieve.compute_reflectivity_iq", "API/generated/pyart.retrieve.compute_rhohv", "API/generated/pyart.retrieve.compute_rhohv_iq", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_signal_power", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_spectra", "API/generated/pyart.retrieve.compute_spectral_differential_phase", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity", "API/generated/pyart.retrieve.compute_spectral_noise", "API/generated/pyart.retrieve.compute_spectral_phase", "API/generated/pyart.retrieve.compute_spectral_power", "API/generated/pyart.retrieve.compute_spectral_reflectivity", "API/generated/pyart.retrieve.compute_spectral_rhohv", "API/generated/pyart.retrieve.compute_st1_iq", "API/generated/pyart.retrieve.compute_st2_iq", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vol_refl", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.compute_wbn_iq", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.data_for_centroids", "API/generated/pyart.retrieve.detect_ml", "API/generated/pyart.retrieve.determine_medoids", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.est_vertical_windshear", "API/generated/pyart.retrieve.est_vertical_windshear_lidar", "API/generated/pyart.retrieve.est_wind_profile", "API/generated/pyart.retrieve.est_wind_vel", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.gecsx", "API/generated/pyart.retrieve.get_coeff_attg", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.get_iso0_val", "API/generated/pyart.retrieve.get_ml_rng_limits", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_leastsquare_double_window", "API/generated/pyart.retrieve.kdp_leastsquare_single_window", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.melting_layer_giangrande", "API/generated/pyart.retrieve.melting_layer_hydroclass", "API/generated/pyart.retrieve.melting_layer_mf", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.select_samples", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.synthetic_obs_distribution", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.add_field", "API/generated/pyart.testing.RadarSpectra.add_field_like", "API/generated/pyart.testing.RadarSpectra.add_filter", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.extract_sweeps", "API/generated/pyart.testing.RadarSpectra.get_azimuth", "API/generated/pyart.testing.RadarSpectra.get_elevation", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_field", "API/generated/pyart.testing.RadarSpectra.get_gate_area", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.info", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.colocated_gates", "API/generated/pyart.util.colocated_gates2", "API/generated/pyart.util.compute_azimuthal_average", "API/generated/pyart.util.compute_corr", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.compute_mse", "API/generated/pyart.util.compute_nse", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.estimate_noise_ivic13", "API/generated/pyart.util.find_neighbour_gates", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.get_ivic_flat_reg_var_max", "API/generated/pyart.util.get_ivic_pct", "API/generated/pyart.util.get_ivic_snr_thr", "API/generated/pyart.util.get_target_elevations", "API/generated/pyart.util.grid_texture_2d", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interpol_spectra", "API/generated/pyart.util.intersection", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.ivic_flat_reg_var_max_table", "API/generated/pyart.util.ivic_flat_reg_wind_len_table", "API/generated/pyart.util.ivic_pct_table", "API/generated/pyart.util.ivic_snr_thr_table", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.join_spectra", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.radar_from_spectra", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.subset_radar_spectra", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "changelog", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/generated/pyart.aux_io.read_bin.rst", "API/generated/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/generated/pyart.aux_io.read_cf1.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/generated/pyart.aux_io.read_gamic.rst", "API/generated/generated/pyart.aux_io.read_gif.rst", "API/generated/generated/pyart.aux_io.read_grib.rst", "API/generated/generated/pyart.aux_io.read_hpl.rst", "API/generated/generated/pyart.aux_io.read_iq.rst", "API/generated/generated/pyart.aux_io.read_kazr.rst", "API/generated/generated/pyart.aux_io.read_metranet.rst", "API/generated/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/generated/pyart.aux_io.read_pattern.rst", "API/generated/generated/pyart.aux_io.read_png.rst", "API/generated/generated/pyart.aux_io.read_radx.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/generated/pyart.aux_io.read_spectra.rst", "API/generated/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/generated/pyart.aux_io.write_spectra.rst", "API/generated/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/generated/pyart.config.FileMetadata.rst", "API/generated/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/generated/pyart.config.get_field_colormap.rst", "API/generated/generated/pyart.config.get_field_limits.rst", "API/generated/generated/pyart.config.get_field_mapping.rst", "API/generated/generated/pyart.config.get_field_name.rst", "API/generated/generated/pyart.config.get_fillvalue.rst", "API/generated/generated/pyart.config.get_metadata.rst", "API/generated/generated/pyart.config.load_config.rst", "API/generated/generated/pyart.core.Grid.rst", "API/generated/generated/pyart.core.Grid.add_field.rst", "API/generated/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.get_projparams.rst", "API/generated/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/generated/pyart.core.Grid.projection_proj.rst", "API/generated/generated/pyart.core.Grid.to_xarray.rst", "API/generated/generated/pyart.core.Grid.write.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/generated/pyart.core.Radar.rst", "API/generated/generated/pyart.core.Radar.add_field.rst", "API/generated/generated/pyart.core.Radar.add_field_like.rst", "API/generated/generated/pyart.core.Radar.add_filter.rst", "API/generated/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/generated/pyart.core.Radar.get_elevation.rst", "API/generated/generated/pyart.core.Radar.get_end.rst", "API/generated/generated/pyart.core.Radar.get_field.rst", "API/generated/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/generated/pyart.core.Radar.get_slice.rst", "API/generated/generated/pyart.core.Radar.get_start.rst", "API/generated/generated/pyart.core.Radar.get_start_end.rst", "API/generated/generated/pyart.core.Radar.info.rst", "API/generated/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/generated/pyart.core.Radar.iter_end.rst", "API/generated/generated/pyart.core.Radar.iter_field.rst", "API/generated/generated/pyart.core.Radar.iter_slice.rst", "API/generated/generated/pyart.core.Radar.iter_start.rst", "API/generated/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/generated/pyart.core.RadarSpectra.info.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/generated/pyart.correct.calculate_attenuation.rst", "API/generated/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/generated/pyart.correct.correct_bias.rst", "API/generated/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/generated/pyart.correct.correct_sys_phase.rst", "API/generated/generated/pyart.correct.correct_visibility.rst", "API/generated/generated/pyart.correct.correct_vpr.rst", "API/generated/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/generated/pyart.correct.dealias_fourdd.rst", "API/generated/generated/pyart.correct.dealias_region_based.rst", "API/generated/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/generated/pyart.correct.despeckle_field.rst", "API/generated/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/generated/pyart.correct.est_zdr_precip.rst", "API/generated/generated/pyart.correct.est_zdr_snow.rst", "API/generated/generated/pyart.correct.find_objects.rst", "API/generated/generated/pyart.correct.get_mask_fzl.rst", "API/generated/generated/pyart.correct.get_sun_hits.rst", "API/generated/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/generated/pyart.correct.phase_proc_lp.rst", "API/generated/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/generated/pyart.correct.scanning_losses.rst", "API/generated/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/generated/pyart.correct.smooth_masked.rst", "API/generated/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/generated/pyart.correct.sun_position_mfr.rst", "API/generated/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/generated/pyart.correct.sun_power.rst", "API/generated/generated/pyart.correct.sun_retrieval.rst", "API/generated/generated/pyart.exceptions.DeprecatedAttribute.rst", "API/generated/generated/pyart.exceptions.DeprecatedFunctionName.rst", "API/generated/generated/pyart.exceptions.MissingOptionalDependency.rst", "API/generated/generated/pyart.exceptions._deprecated_alias.rst", "API/generated/generated/pyart.filters.GateFilter.rst", "API/generated/generated/pyart.filters.GateFilter.copy.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/generated/pyart.filters.birds_gate_filter.rst", "API/generated/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.GridMapDisplay.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/generated/pyart.graph.RadarDisplay.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/generated/pyart.io.make_time_unit_str.rst", "API/generated/generated/pyart.io.prepare_for_read.rst", "API/generated/generated/pyart.io.read.rst", "API/generated/generated/pyart.io.read_arm_sonde.rst", "API/generated/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/generated/pyart.io.read_cfradial.rst", "API/generated/generated/pyart.io.read_cfradial2.rst", "API/generated/generated/pyart.io.read_chl.rst", "API/generated/generated/pyart.io.read_grid.rst", "API/generated/generated/pyart.io.read_grid_mdv.rst", "API/generated/generated/pyart.io.read_mdv.rst", "API/generated/generated/pyart.io.read_nexrad_archive.rst", "API/generated/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/generated/pyart.io.read_nexrad_level3.rst", "API/generated/generated/pyart.io.read_rsl.rst", "API/generated/generated/pyart.io.read_sigmet.rst", "API/generated/generated/pyart.io.read_uf.rst", "API/generated/generated/pyart.io.write_cfradial.rst", "API/generated/generated/pyart.io.write_grid.rst", "API/generated/generated/pyart.io.write_grid_geotiff.rst", "API/generated/generated/pyart.io.write_grid_mdv.rst", "API/generated/generated/pyart.io.write_uf.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__class_getitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__contains__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__delitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__dir__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__eq__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__format__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ge__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getattribute__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__getstate__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__gt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__init_subclass__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__iter__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__le__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__len__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__lt__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__ne__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__new__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__reduce_ex__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__repr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setattr__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__setitem__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__sizeof__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__str__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.__subclasshook__.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/generated/pyart.map.example_roi_func_constant.rst", "API/generated/generated/pyart.map.example_roi_func_dist.rst", "API/generated/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/generated/pyart.map.grid_from_radars.rst", "API/generated/generated/pyart.map.map_gates_to_grid.rst", "API/generated/generated/pyart.map.map_to_grid.rst", "API/generated/generated/pyart.retrieve._destandardize.rst", "API/generated/generated/pyart.retrieve._get_res_vol_sides.rst", "API/generated/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/generated/pyart.retrieve.compute_ccor.rst", "API/generated/generated/pyart.retrieve.compute_cdr.rst", "API/generated/generated/pyart.retrieve.compute_centroids.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_evp.rst", "API/generated/generated/pyart.retrieve.compute_iq.rst", "API/generated/generated/pyart.retrieve.compute_l.rst", "API/generated/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/generated/pyart.retrieve.compute_qvp.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/generated/pyart.retrieve.compute_rcs.rst", "API/generated/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/generated/pyart.retrieve.compute_snr.rst", "API/generated/generated/pyart.retrieve.compute_spectra.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/generated/pyart.retrieve.compute_svp.rst", "API/generated/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/generated/pyart.retrieve.compute_vp.rst", "API/generated/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/generated/pyart.retrieve.detect_ml.rst", "API/generated/generated/pyart.retrieve.determine_medoids.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/generated/pyart.retrieve.gecsx.rst", "API/generated/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/generated/pyart.retrieve.get_freq_band.rst", "API/generated/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/generated/pyart.retrieve.grid_shift.rst", "API/generated/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/generated/pyart.retrieve.select_samples.rst", "API/generated/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/generated/pyart.retrieve.vad_browning.rst", "API/generated/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.convert_data.rst", "API/generated/pyart.aux_io.get_library.rst", "API/generated/pyart.aux_io.read_bin.rst", "API/generated/pyart.aux_io.read_bin_mf.rst", "API/generated/pyart.aux_io.read_cartesian_metranet.rst", "API/generated/pyart.aux_io.read_cf1.rst", "API/generated/pyart.aux_io.read_cf1_cartesian.rst", "API/generated/pyart.aux_io.read_cf1_cartesian_mf.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_dat_mf.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_file_c.rst", "API/generated/pyart.aux_io.read_file_py.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_gif.rst", "API/generated/pyart.aux_io.read_grib.rst", "API/generated/pyart.aux_io.read_hpl.rst", "API/generated/pyart.aux_io.read_iq.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_metranet.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_grid_h5.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_odim_vp_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_png.rst", "API/generated/pyart.aux_io.read_product_c.rst", "API/generated/pyart.aux_io.read_product_py.rst", "API/generated/pyart.aux_io.read_psr_cpi_header.rst", "API/generated/pyart.aux_io.read_psr_header.rst", "API/generated/pyart.aux_io.read_psr_spectra.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_rainbow_psr.rst", "API/generated/pyart.aux_io.read_rainbow_psr_spectra.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.read_spectra.rst", "API/generated/pyart.aux_io.write_odim_grid_h5.rst", "API/generated/pyart.aux_io.write_odim_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.aux_io.write_spectra.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.add_field.rst", "API/generated/pyart.core.RadarSpectra.add_field_like.rst", "API/generated/pyart.core.RadarSpectra.add_filter.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.core.RadarSpectra.get_azimuth.rst", "API/generated/pyart.core.RadarSpectra.get_elevation.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_field.rst", "API/generated/pyart.core.RadarSpectra.get_gate_area.rst", "API/generated/pyart.core.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.info.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.core.wgs84_to_swissCH1903.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.compute_apparent_vpr.rst", "API/generated/pyart.correct.compute_theoretical_vpr.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.correct_sys_phase.rst", "API/generated/pyart.correct.correct_visibility.rst", "API/generated/pyart.correct.correct_vpr.rst", "API/generated/pyart.correct.correct_vpr_spatialised.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.det_sys_phase_ray.rst", "API/generated/pyart.correct.est_rhohv_rain.rst", "API/generated/pyart.correct.est_zdr_precip.rst", "API/generated/pyart.correct.est_zdr_snow.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.gauss_fit.rst", "API/generated/pyart.correct.get_mask_fzl.rst", "API/generated/pyart.correct.get_sun_hits.rst", "API/generated/pyart.correct.get_sun_hits_ivic.rst", "API/generated/pyart.correct.get_sun_hits_psr.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.ptoa_to_sf.rst", "API/generated/pyart.correct.retrieval_result.rst", "API/generated/pyart.correct.scanning_losses.rst", "API/generated/pyart.correct.selfconsistency_bias.rst", "API/generated/pyart.correct.selfconsistency_bias2.rst", "API/generated/pyart.correct.selfconsistency_kdp_phidp.rst", "API/generated/pyart.correct.smooth_masked.rst", "API/generated/pyart.correct.smooth_phidp_double_window.rst", "API/generated/pyart.correct.smooth_phidp_single_window.rst", "API/generated/pyart.correct.solar_flux_lookup.rst", "API/generated/pyart.correct.sun_position_mfr.rst", "API/generated/pyart.correct.sun_position_pysolar.rst", "API/generated/pyart.correct.sun_power.rst", "API/generated/pyart.correct.sun_retrieval.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.birds_gate_filter.rst", "API/generated/pyart.filters.class_based_gate_filter.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.snr_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.filters.visibility_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_contour.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid_raw.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_xsection_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_xsection.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.make_time_unit_str.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_cfradial2.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.get_earth_radius.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.map.polar_to_cartesian.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.atmospheric_gas_att.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity.rst", "API/generated/pyart.retrieve.compute_Doppler_velocity_iq.rst", "API/generated/pyart.retrieve.compute_Doppler_width.rst", "API/generated/pyart.retrieve.compute_Doppler_width_iq.rst", "API/generated/pyart.retrieve.compute_apparent_profile.rst", "API/generated/pyart.retrieve.compute_bird_density.rst", "API/generated/pyart.retrieve.compute_ccor.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_centroids.rst", "API/generated/pyart.retrieve.compute_differential_phase.rst", "API/generated/pyart.retrieve.compute_differential_phase_iq.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_differential_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_iq.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_mean_phase_iq.rst", "API/generated/pyart.retrieve.compute_noise_power.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_pol_variables.rst", "API/generated/pyart.retrieve.compute_pol_variables_iq.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_radial_noise_hs.rst", "API/generated/pyart.retrieve.compute_radial_noise_ivic.rst", "API/generated/pyart.retrieve.compute_rcs.rst", "API/generated/pyart.retrieve.compute_rcs_from_pr.rst", "API/generated/pyart.retrieve.compute_reflectivity.rst", "API/generated/pyart.retrieve.compute_reflectivity_iq.rst", "API/generated/pyart.retrieve.compute_rhohv.rst", "API/generated/pyart.retrieve.compute_rhohv_iq.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_signal_power.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_spectra.rst", "API/generated/pyart.retrieve.compute_spectral_differential_phase.rst", "API/generated/pyart.retrieve.compute_spectral_differential_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_noise.rst", "API/generated/pyart.retrieve.compute_spectral_phase.rst", "API/generated/pyart.retrieve.compute_spectral_power.rst", "API/generated/pyart.retrieve.compute_spectral_reflectivity.rst", "API/generated/pyart.retrieve.compute_spectral_rhohv.rst", "API/generated/pyart.retrieve.compute_st1_iq.rst", "API/generated/pyart.retrieve.compute_st2_iq.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vol_refl.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.compute_wbn_iq.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.data_for_centroids.rst", "API/generated/pyart.retrieve.detect_ml.rst", "API/generated/pyart.retrieve.determine_medoids.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.est_vertical_windshear.rst", "API/generated/pyart.retrieve.est_vertical_windshear_lidar.rst", "API/generated/pyart.retrieve.est_wind_profile.rst", "API/generated/pyart.retrieve.est_wind_vel.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.gecsx.rst", "API/generated/pyart.retrieve.get_coeff_attg.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.get_iso0_val.rst", "API/generated/pyart.retrieve.get_ml_rng_limits.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_leastsquare_double_window.rst", "API/generated/pyart.retrieve.kdp_leastsquare_single_window.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.melting_layer_giangrande.rst", "API/generated/pyart.retrieve.melting_layer_hydroclass.rst", "API/generated/pyart.retrieve.melting_layer_mf.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.select_samples.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.synthetic_obs_distribution.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.add_field.rst", "API/generated/pyart.testing.RadarSpectra.add_field_like.rst", "API/generated/pyart.testing.RadarSpectra.add_filter.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.extract_sweeps.rst", "API/generated/pyart.testing.RadarSpectra.get_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.get_elevation.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_field.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_area.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.RadarSpectra.get_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.get_nyquist_vel.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.info.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.colocated_gates.rst", "API/generated/pyart.util.colocated_gates2.rst", "API/generated/pyart.util.compute_azimuthal_average.rst", "API/generated/pyart.util.compute_corr.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.compute_mse.rst", "API/generated/pyart.util.compute_nse.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.estimate_noise_ivic13.rst", "API/generated/pyart.util.find_neighbour_gates.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.get_ivic_flat_reg_var_max.rst", "API/generated/pyart.util.get_ivic_pct.rst", "API/generated/pyart.util.get_ivic_snr_thr.rst", "API/generated/pyart.util.get_target_elevations.rst", "API/generated/pyart.util.grid_texture_2d.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interpol_spectra.rst", "API/generated/pyart.util.intersection.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.ivic_flat_reg_var_max_table.rst", "API/generated/pyart.util.ivic_flat_reg_wind_len_table.rst", "API/generated/pyart.util.ivic_pct_table.rst", "API/generated/pyart.util.ivic_snr_thr_table.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.join_spectra.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.radar_from_spectra.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.subset_radar_spectra.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "changelog.md", "examples/correct/index.rst", "examples/correct/plot_attenuation.ipynb", "examples/correct/plot_dealias.ipynb", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.ipynb", "examples/io/plot_older_nexrad_data_aws.ipynb", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.ipynb", "examples/mapping/plot_map_one_radar_to_grid.ipynb", "examples/mapping/plot_map_two_radars_to_grid.ipynb", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.ipynb", "examples/plotting/plot_cross_section.ipynb", "examples/plotting/plot_modify_colorbar.ipynb", "examples/plotting/plot_nexrad_image_muted_reflectivity.ipynb", "examples/plotting/plot_nexrad_multiple_moments.ipynb", "examples/plotting/plot_nexrad_reflectivity.ipynb", "examples/plotting/plot_ppi_cfradial.ipynb", "examples/plotting/plot_ppi_mdv.ipynb", "examples/plotting/plot_ppi_with_rings.ipynb", "examples/plotting/plot_rhi_cfradial.ipynb", "examples/plotting/plot_rhi_cfradial_singlescan.ipynb", "examples/plotting/plot_rhi_contours_differential_reflectivity.ipynb", "examples/plotting/plot_rhi_data_overlay.ipynb", "examples/plotting/plot_rhi_mdv.ipynb", "examples/plotting/plot_rhi_two_panel.ipynb", "examples/plotting/plot_three_panel_gridmapdisplay.ipynb", "examples/plotting/plot_xsect.ipynb", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.ipynb", "examples/retrieve/plot_composite_reflectivity.ipynb", "examples/retrieve/plot_convective_stratiform.ipynb", "examples/retrieve/plot_hydrometeor.ipynb", "examples/retrieve/plot_vad.ipynb", "examples/retrieve/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_spectra", "pyart.bridge.texture_of_complex_phase", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions.DeprecatedAttribute", "pyart.exceptions.DeprecatedFunctionName", "pyart.exceptions.MissingOptionalDependency", "pyart.exceptions._deprecated_alias", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.__class_getitem__", "pyart.lazydict.LazyLoadDict.__contains__", "pyart.lazydict.LazyLoadDict.__delattr__", "pyart.lazydict.LazyLoadDict.__delitem__", "pyart.lazydict.LazyLoadDict.__dir__", "pyart.lazydict.LazyLoadDict.__eq__", "pyart.lazydict.LazyLoadDict.__format__", "pyart.lazydict.LazyLoadDict.__ge__", "pyart.lazydict.LazyLoadDict.__getattribute__", "pyart.lazydict.LazyLoadDict.__getitem__", "pyart.lazydict.LazyLoadDict.__getstate__", "pyart.lazydict.LazyLoadDict.__gt__", "pyart.lazydict.LazyLoadDict.__init__", "pyart.lazydict.LazyLoadDict.__init_subclass__", "pyart.lazydict.LazyLoadDict.__iter__", "pyart.lazydict.LazyLoadDict.__le__", "pyart.lazydict.LazyLoadDict.__len__", "pyart.lazydict.LazyLoadDict.__lt__", "pyart.lazydict.LazyLoadDict.__ne__", "pyart.lazydict.LazyLoadDict.__new__", "pyart.lazydict.LazyLoadDict.__reduce__", "pyart.lazydict.LazyLoadDict.__reduce_ex__", "pyart.lazydict.LazyLoadDict.__repr__", "pyart.lazydict.LazyLoadDict.__setattr__", "pyart.lazydict.LazyLoadDict.__setitem__", "pyart.lazydict.LazyLoadDict.__sizeof__", "pyart.lazydict.LazyLoadDict.__str__", "pyart.lazydict.LazyLoadDict.__subclasshook__", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve._destandardize", "pyart.retrieve._get_res_vol_sides", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart._debug_info", "pyart.aux_io", "pyart.aux_io.convert_data", "pyart.aux_io.get_library", "pyart.aux_io.read_bin", "pyart.aux_io.read_bin_mf", "pyart.aux_io.read_cartesian_metranet", "pyart.aux_io.read_cf1", "pyart.aux_io.read_cf1_cartesian", "pyart.aux_io.read_cf1_cartesian_mf", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_dat_mf", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_file_c", "pyart.aux_io.read_file_py", "pyart.aux_io.read_gamic", "pyart.aux_io.read_gif", "pyart.aux_io.read_grib", "pyart.aux_io.read_hpl", "pyart.aux_io.read_iq", "pyart.aux_io.read_kazr", "pyart.aux_io.read_metranet", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_grid_h5", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_odim_vp_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_png", "pyart.aux_io.read_product_c", "pyart.aux_io.read_product_py", "pyart.aux_io.read_psr_cpi_header", "pyart.aux_io.read_psr_header", "pyart.aux_io.read_psr_spectra", "pyart.aux_io.read_radx", "pyart.aux_io.read_rainbow_psr", "pyart.aux_io.read_rainbow_psr_spectra", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.read_spectra", "pyart.aux_io.write_odim_grid_h5", "pyart.aux_io.write_odim_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.aux_io.write_spectra", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.add_field", "pyart.core.RadarSpectra.add_field_like", "pyart.core.RadarSpectra.add_filter", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.extract_sweeps", "pyart.core.RadarSpectra.get_azimuth", "pyart.core.RadarSpectra.get_elevation", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_field", "pyart.core.RadarSpectra.get_gate_area", "pyart.core.RadarSpectra.get_gate_lat_lon_alt", "pyart.core.RadarSpectra.get_gate_x_y_z", "pyart.core.RadarSpectra.get_nyquist_vel", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.info", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.core.wgs84_to_swissCH1903", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.compute_apparent_vpr", "pyart.correct.compute_theoretical_vpr", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.correct_sys_phase", "pyart.correct.correct_visibility", "pyart.correct.correct_vpr", "pyart.correct.correct_vpr_spatialised", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.det_sys_phase_ray", "pyart.correct.est_rhohv_rain", "pyart.correct.est_zdr_precip", "pyart.correct.est_zdr_snow", "pyart.correct.find_objects", "pyart.correct.gauss_fit", "pyart.correct.get_mask_fzl", "pyart.correct.get_sun_hits", "pyart.correct.get_sun_hits_ivic", "pyart.correct.get_sun_hits_psr", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.ptoa_to_sf", "pyart.correct.retrieval_result", "pyart.correct.scanning_losses", "pyart.correct.selfconsistency_bias", "pyart.correct.selfconsistency_bias2", "pyart.correct.selfconsistency_kdp_phidp", "pyart.correct.smooth_masked", "pyart.correct.smooth_phidp_double_window", "pyart.correct.smooth_phidp_single_window", "pyart.correct.solar_flux_lookup", "pyart.correct.sun_position_mfr", "pyart.correct.sun_position_pysolar", "pyart.correct.sun_power", "pyart.correct.sun_retrieval", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.birds_gate_filter", "pyart.filters.class_based_gate_filter", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.snr_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.filters.visibility_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.generate_xsection_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.plot_xsection", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_cross_section_level", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_grid_contour", "pyart.graph.GridMapDisplay.plot_grid_raw", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.generate_xsection_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_xaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_xsection", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.plot_xsection", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.generate_xsection_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_xaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_xsection", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.plot_xsection", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.plot_xsection", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.make_time_unit_str", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_cfradial2", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.get_earth_radius", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.map.polar_to_cartesian", "pyart.retrieve", "pyart.retrieve.atmospheric_gas_att", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_Doppler_velocity", "pyart.retrieve.compute_Doppler_velocity_iq", "pyart.retrieve.compute_Doppler_width", "pyart.retrieve.compute_Doppler_width_iq", "pyart.retrieve.compute_apparent_profile", "pyart.retrieve.compute_bird_density", "pyart.retrieve.compute_ccor", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_centroids", "pyart.retrieve.compute_differential_phase", "pyart.retrieve.compute_differential_phase_iq", "pyart.retrieve.compute_differential_reflectivity", "pyart.retrieve.compute_differential_reflectivity_iq", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_iq", "pyart.retrieve.compute_l", "pyart.retrieve.compute_mean_phase_iq", "pyart.retrieve.compute_noise_power", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_pol_variables", "pyart.retrieve.compute_pol_variables_iq", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_radial_noise_hs", "pyart.retrieve.compute_radial_noise_ivic", "pyart.retrieve.compute_rcs", "pyart.retrieve.compute_rcs_from_pr", "pyart.retrieve.compute_reflectivity", "pyart.retrieve.compute_reflectivity_iq", "pyart.retrieve.compute_rhohv", "pyart.retrieve.compute_rhohv_iq", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_signal_power", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_spectra", "pyart.retrieve.compute_spectral_differential_phase", "pyart.retrieve.compute_spectral_differential_reflectivity", "pyart.retrieve.compute_spectral_noise", "pyart.retrieve.compute_spectral_phase", "pyart.retrieve.compute_spectral_power", "pyart.retrieve.compute_spectral_reflectivity", "pyart.retrieve.compute_spectral_rhohv", "pyart.retrieve.compute_st1_iq", "pyart.retrieve.compute_st2_iq", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vol_refl", "pyart.retrieve.compute_vp", "pyart.retrieve.compute_wbn_iq", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.data_for_centroids", "pyart.retrieve.detect_ml", "pyart.retrieve.determine_medoids", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.est_vertical_windshear", "pyart.retrieve.est_vertical_windshear_lidar", "pyart.retrieve.est_wind_profile", "pyart.retrieve.est_wind_vel", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.gecsx", "pyart.retrieve.get_coeff_attg", "pyart.retrieve.get_freq_band", "pyart.retrieve.get_iso0_val", "pyart.retrieve.get_ml_rng_limits", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_leastsquare_double_window", "pyart.retrieve.kdp_leastsquare_single_window", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.melting_layer_giangrande", "pyart.retrieve.melting_layer_hydroclass", "pyart.retrieve.melting_layer_mf", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.select_samples", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.synthetic_obs_distribution", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.add_field", "pyart.testing.RadarSpectra.add_field_like", "pyart.testing.RadarSpectra.add_filter", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.extract_sweeps", "pyart.testing.RadarSpectra.get_azimuth", "pyart.testing.RadarSpectra.get_elevation", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_field", "pyart.testing.RadarSpectra.get_gate_area", "pyart.testing.RadarSpectra.get_gate_lat_lon_alt", "pyart.testing.RadarSpectra.get_gate_x_y_z", "pyart.testing.RadarSpectra.get_nyquist_vel", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.info", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.colocated_gates", "pyart.util.colocated_gates2", "pyart.util.compute_azimuthal_average", "pyart.util.compute_corr", "pyart.util.compute_directional_stats", "pyart.util.compute_mse", "pyart.util.compute_nse", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.estimate_noise_hs74", "pyart.util.estimate_noise_ivic13", "pyart.util.find_neighbour_gates", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.get_ivic_flat_reg_var_max", "pyart.util.get_ivic_pct", "pyart.util.get_ivic_snr_thr", "pyart.util.get_target_elevations", "pyart.util.grid_texture_2d", "pyart.util.image_mute_radar", "pyart.util.interpol_spectra", "pyart.util.intersection", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.ivic_flat_reg_var_max_table", "pyart.util.ivic_flat_reg_wind_len_table", "pyart.util.ivic_pct_table", "pyart.util.ivic_snr_thr_table", "pyart.util.join_radar", "pyart.util.join_spectra", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.radar_from_spectra", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.subset_radar_spectra", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Changelog", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "About the MeteoSwiss fork of Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Installation", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"filenam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 50, 203, 239, 255, 270, 303, 329, 340, 366, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 593, 604, 788, 824, 840, 855, 888, 914, 925, 951, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 1124, 1255, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1306], "additional_metadata": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 30, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 541, 542, 543, 544, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 575, 583, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 40, 41, 51, 55, 58, 66, 67, 84, 87, 95, 96, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 160, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 426, 428, 436, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 534, 535, 536, 537, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 583, 585, 588, 593, 595, 605, 609, 612, 620, 621, 638, 641, 649, 650, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 740, 741, 746, 777, 778, 779, 780, 781, 782, 783, 784, 790, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 845, 846, 847, 848, 849, 850, 851, 852, 853, 857, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 890, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 912, 913, 914, 916, 917, 918, 919, 920, 921, 922, 923, 927, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 986, 988, 996, 999, 1000, 1006, 1009, 1018, 1019, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1112, 1113, 1115, 1125, 1127, 1130, 1138, 1139, 1156, 1159, 1167, 1168, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1221, 1230, 1232, 1247, 1249, 1250, 1255, 1273, 1282, 1292, 1304, 1306], "chy0": [0, 2, 4, 5, 9, 541, 543, 545, 546, 553], "255": [0, 2, 4, 9, 394, 541, 543, 545, 553, 981, 1255], "0": [0, 1, 2, 4, 7, 9, 12, 14, 16, 17, 18, 20, 22, 23, 26, 27, 35, 43, 55, 60, 61, 62, 64, 65, 66, 67, 68, 84, 89, 90, 91, 93, 94, 95, 96, 97, 117, 120, 122, 123, 125, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 158, 165, 190, 193, 195, 196, 197, 198, 199, 200, 201, 217, 218, 225, 228, 229, 230, 231, 232, 233, 247, 248, 249, 263, 268, 284, 285, 292, 295, 296, 297, 298, 299, 301, 317, 318, 327, 328, 329, 332, 333, 334, 335, 336, 338, 354, 355, 364, 365, 366, 369, 370, 371, 372, 373, 390, 394, 442, 443, 444, 447, 453, 457, 459, 461, 462, 466, 469, 470, 471, 473, 474, 478, 479, 480, 485, 492, 493, 494, 495, 497, 499, 500, 502, 504, 505, 506, 508, 509, 510, 513, 516, 519, 520, 521, 523, 524, 527, 528, 529, 530, 531, 532, 533, 536, 541, 542, 543, 545, 548, 553, 556, 558, 560, 561, 562, 564, 571, 572, 576, 577, 588, 597, 609, 614, 615, 616, 618, 619, 620, 621, 622, 638, 643, 644, 645, 647, 648, 649, 650, 651, 671, 674, 677, 702, 705, 706, 708, 709, 710, 712, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 740, 741, 744, 749, 774, 777, 779, 780, 781, 782, 783, 784, 786, 802, 803, 810, 813, 814, 815, 816, 817, 818, 832, 833, 834, 848, 853, 869, 870, 877, 880, 881, 882, 883, 884, 886, 902, 903, 912, 913, 914, 917, 918, 919, 920, 921, 923, 939, 940, 949, 950, 951, 954, 955, 956, 957, 958, 977, 981, 1009, 1018, 1019, 1023, 1025, 1030, 1034, 1036, 1038, 1039, 1043, 1046, 1047, 1048, 1050, 1051, 1055, 1056, 1057, 1062, 1069, 1070, 1071, 1072, 1074, 1076, 1077, 1079, 1081, 1082, 1083, 1085, 1086, 1087, 1090, 1093, 1096, 1097, 1098, 1100, 1101, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1117, 1127, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1156, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1205, 1206, 1209, 1220, 1225, 1226, 1227, 1231, 1232, 1235, 1240, 1257, 1258, 1259, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306], "chx0": [0, 2, 4, 5, 9, 541, 543, 545, 546, 553], "160": [0, 2, 4, 9, 541, 543, 545, 553, 1302], "xre": [0, 1, 7, 9, 20, 541, 542, 548, 553, 564], "1": [0, 1, 3, 4, 5, 7, 9, 12, 16, 17, 18, 20, 24, 26, 27, 41, 55, 65, 84, 94, 113, 114, 117, 120, 125, 126, 131, 132, 133, 135, 143, 144, 145, 146, 147, 148, 159, 178, 193, 232, 248, 268, 298, 335, 372, 380, 386, 387, 388, 393, 442, 443, 446, 452, 453, 457, 462, 464, 466, 470, 471, 474, 479, 480, 485, 492, 493, 497, 500, 502, 510, 513, 514, 520, 523, 525, 527, 529, 531, 535, 536, 541, 542, 544, 545, 546, 548, 553, 556, 560, 561, 562, 564, 573, 576, 577, 595, 609, 619, 638, 648, 667, 668, 671, 674, 690, 708, 709, 714, 715, 716, 718, 727, 728, 729, 731, 732, 733, 745, 762, 777, 817, 833, 853, 883, 920, 957, 967, 973, 974, 975, 980, 1018, 1019, 1022, 1029, 1030, 1034, 1039, 1041, 1043, 1047, 1048, 1051, 1056, 1057, 1062, 1069, 1070, 1074, 1077, 1079, 1087, 1090, 1091, 1097, 1100, 1102, 1104, 1106, 1108, 1112, 1113, 1115, 1127, 1137, 1156, 1166, 1205, 1206, 1207, 1209, 1219, 1220, 1226, 1232, 1238, 1239, 1246, 1254, 1257, 1262, 1266, 1267, 1268, 1271, 1272, 1273, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1292, 1293, 1294, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "yre": [0, 1, 7, 9, 20, 541, 542, 548, 553, 564], "nx": [0, 1, 7, 9, 20, 41, 541, 542, 548, 553, 564, 595, 1115], "710": [0, 9, 541, 553, 1255], "ny": [0, 1, 7, 9, 20, 41, 541, 542, 548, 553, 564, 595, 1115], "640": [0, 9, 541, 553, 1255], "nz": [0, 1, 7, 9, 20, 41, 541, 542, 548, 553, 564, 595, 1115], "kwarg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 133, 134, 135, 217, 218, 225, 229, 230, 231, 232, 244, 245, 247, 248, 249, 250, 251, 252, 253, 260, 263, 264, 265, 266, 267, 284, 285, 292, 296, 297, 298, 317, 318, 325, 326, 327, 328, 329, 330, 333, 334, 335, 354, 355, 362, 363, 364, 365, 366, 367, 370, 371, 372, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 417, 441, 442, 443, 523, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 556, 558, 559, 560, 561, 562, 563, 564, 570, 571, 572, 573, 574, 575, 716, 717, 718, 802, 803, 810, 814, 815, 816, 817, 829, 830, 832, 833, 834, 835, 836, 837, 838, 845, 848, 849, 850, 851, 852, 869, 870, 877, 881, 882, 883, 902, 903, 910, 911, 912, 913, 914, 915, 918, 919, 920, 939, 940, 947, 948, 949, 950, 951, 952, 955, 956, 957, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 1017, 1018, 1019, 1100, 1214, 1215, 1216, 1217, 1218, 1255], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 101, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 215, 216, 217, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 325, 326, 327, 329, 330, 338, 362, 363, 364, 366, 367, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 407, 410, 412, 414, 422, 424, 427, 429, 434, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 643, 655, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 796, 800, 801, 802, 815, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 910, 911, 912, 914, 915, 923, 947, 948, 949, 951, 952, 960, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 987, 989, 994, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1173, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1260, 1266, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306, 1308], "read": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 165, 218, 229, 285, 296, 318, 333, 355, 370, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 583, 585, 677, 749, 803, 814, 870, 881, 903, 918, 940, 955, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 983, 1255, 1257, 1258, 1260, 1261, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1277, 1279, 1282, 1283, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1296, 1298, 1299, 1300, 1302, 1303, 1304], "meteoswiss": [0, 9, 26, 27, 541, 553, 576, 577, 1255, 1293, 1294, 1306], "oper": [0, 1, 7, 9, 131, 132, 169, 171, 178, 185, 190, 390, 441, 525, 532, 541, 542, 548, 553, 681, 683, 690, 697, 702, 714, 715, 753, 755, 762, 769, 774, 977, 1017, 1102, 1109, 1292, 1305], "radar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 41, 49, 84, 86, 87, 89, 90, 91, 93, 96, 101, 113, 114, 115, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 159, 160, 165, 178, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 218, 223, 225, 229, 230, 231, 232, 245, 249, 251, 253, 263, 265, 267, 268, 284, 285, 290, 292, 296, 297, 298, 301, 317, 318, 323, 326, 328, 329, 333, 334, 335, 338, 354, 355, 360, 363, 365, 366, 370, 371, 372, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 541, 542, 544, 545, 546, 547, 548, 549, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 583, 585, 588, 594, 595, 603, 638, 640, 641, 643, 644, 645, 647, 650, 655, 667, 668, 669, 677, 690, 702, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 745, 746, 749, 762, 774, 777, 778, 779, 780, 781, 782, 783, 784, 786, 802, 803, 808, 810, 814, 815, 816, 817, 830, 834, 836, 838, 848, 850, 852, 853, 869, 870, 875, 877, 881, 882, 883, 886, 902, 903, 908, 911, 913, 914, 918, 919, 920, 923, 939, 940, 945, 948, 950, 951, 955, 956, 957, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 982, 983, 1008, 1009, 1011, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1115, 1123, 1156, 1158, 1159, 1161, 1162, 1163, 1165, 1168, 1173, 1188, 1189, 1190, 1192, 1195, 1196, 1197, 1198, 1205, 1206, 1207, 1209, 1212, 1213, 1216, 1218, 1220, 1221, 1222, 1223, 1224, 1228, 1230, 1232, 1235, 1240, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1265, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1300, 1302, 1303, 1307], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 35, 41, 42, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 77, 78, 80, 84, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 106, 107, 109, 127, 128, 131, 132, 133, 134, 135, 139, 140, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 160, 169, 178, 190, 193, 201, 218, 220, 225, 228, 229, 230, 231, 232, 235, 245, 247, 248, 249, 251, 253, 254, 263, 265, 267, 268, 285, 287, 292, 295, 296, 297, 298, 301, 318, 320, 328, 329, 332, 333, 334, 335, 338, 355, 357, 365, 366, 369, 370, 371, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 441, 443, 444, 450, 452, 454, 457, 459, 461, 462, 463, 465, 466, 470, 476, 478, 479, 482, 485, 490, 491, 492, 493, 495, 496, 498, 499, 509, 510, 512, 513, 516, 521, 522, 523, 524, 525, 527, 530, 531, 532, 533, 535, 536, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 579, 588, 594, 595, 596, 609, 610, 611, 614, 615, 616, 618, 619, 620, 621, 622, 631, 632, 634, 638, 639, 640, 643, 644, 645, 647, 648, 649, 650, 651, 660, 661, 663, 681, 690, 702, 710, 711, 714, 715, 716, 717, 718, 722, 723, 725, 726, 727, 728, 729, 734, 736, 737, 738, 739, 740, 741, 746, 753, 762, 774, 777, 786, 803, 805, 810, 813, 814, 815, 816, 817, 820, 830, 832, 833, 834, 836, 838, 839, 848, 850, 852, 853, 870, 872, 877, 880, 881, 882, 883, 886, 903, 905, 913, 914, 917, 918, 919, 920, 923, 940, 942, 950, 951, 954, 955, 956, 957, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 981, 982, 983, 1008, 1009, 1017, 1019, 1020, 1025, 1027, 1029, 1031, 1034, 1036, 1038, 1039, 1040, 1042, 1043, 1047, 1053, 1055, 1056, 1059, 1062, 1067, 1068, 1069, 1070, 1072, 1073, 1075, 1076, 1086, 1087, 1089, 1090, 1093, 1098, 1099, 1100, 1101, 1102, 1104, 1107, 1108, 1109, 1110, 1112, 1113, 1115, 1116, 1127, 1128, 1129, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1149, 1150, 1152, 1156, 1157, 1158, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1178, 1179, 1181, 1186, 1192, 1205, 1206, 1230, 1249, 1250, 1253, 1255, 1257, 1258, 1260, 1261, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1285, 1287, 1289, 1290, 1292, 1294, 1296, 1297, 1298, 1299, 1300, 1304, 1306], "binari": [0, 1, 7, 16, 17, 18, 26, 27, 28, 376, 541, 542, 548, 560, 561, 562, 576, 577, 579, 963], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 40, 50, 55, 72, 84, 101, 122, 123, 124, 129, 133, 134, 135, 137, 138, 139, 140, 142, 146, 147, 150, 151, 152, 154, 155, 193, 194, 195, 196, 197, 198, 199, 200, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 447, 449, 450, 451, 452, 458, 459, 460, 461, 465, 466, 468, 469, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 497, 498, 499, 513, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 534, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 585, 587, 588, 589, 590, 593, 604, 609, 626, 638, 655, 705, 706, 707, 712, 716, 717, 718, 720, 721, 722, 723, 726, 730, 731, 732, 736, 737, 738, 740, 741, 777, 778, 779, 780, 781, 782, 783, 784, 961, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 1023, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1038, 1042, 1043, 1045, 1046, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1073, 1074, 1075, 1076, 1090, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1111, 1114, 1124, 1127, 1144, 1156, 1173, 1186, 1247, 1255, 1257, 1259, 1260, 1262, 1263, 1264, 1267, 1269, 1270, 1271, 1274, 1276, 1279, 1285, 1286, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1303, 1304, 1305, 1308], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 72, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 101, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 169, 171, 178, 185, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 588, 589, 592, 593, 595, 596, 597, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 626, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 655, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 681, 683, 690, 697, 702, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 753, 755, 762, 769, 774, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 929, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 959, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1144, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1173, 1185, 1186, 1187, 1188, 1189, 1190, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1252, 1253, 1255, 1286, 1292, 1299, 1300, 1302, 1304, 1305, 1306], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 40, 41, 42, 50, 55, 56, 57, 59, 64, 84, 85, 86, 88, 93, 116, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 164, 169, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 404, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 533, 534, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 585, 586, 588, 589, 593, 595, 596, 604, 609, 610, 611, 613, 618, 638, 639, 640, 642, 647, 670, 672, 673, 681, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 739, 740, 741, 753, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 891, 892, 902, 903, 904, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 925, 926, 927, 928, 929, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 1011, 1018, 1019, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1115, 1116, 1124, 1127, 1128, 1129, 1131, 1136, 1156, 1157, 1158, 1160, 1165, 1186, 1207, 1209, 1230, 1247, 1249, 1250, 1252, 1255], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 32, 34, 35, 36, 37, 40, 41, 42, 55, 56, 57, 59, 64, 72, 84, 85, 86, 88, 93, 101, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 164, 169, 193, 194, 195, 196, 197, 198, 199, 200, 218, 220, 225, 228, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 400, 406, 421, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 533, 534, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 581, 583, 585, 587, 588, 589, 590, 593, 595, 596, 609, 610, 611, 613, 618, 626, 638, 639, 640, 642, 647, 655, 681, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 740, 741, 753, 777, 778, 779, 780, 781, 782, 783, 784, 803, 805, 810, 813, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 914, 917, 918, 919, 920, 940, 942, 950, 951, 954, 955, 956, 957, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1115, 1116, 1127, 1128, 1129, 1131, 1136, 1144, 1156, 1157, 1158, 1160, 1165, 1173, 1186, 1199, 1205, 1206, 1207, 1230, 1247, 1252, 1255, 1262, 1299, 1304], "dict": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 29, 30, 33, 36, 41, 42, 44, 49, 55, 56, 84, 85, 116, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 201, 268, 301, 329, 338, 376, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 442, 443, 444, 448, 453, 454, 456, 457, 464, 467, 471, 472, 473, 474, 480, 481, 494, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 533, 534, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 567, 568, 571, 572, 573, 574, 575, 581, 583, 586, 589, 595, 596, 598, 603, 609, 610, 638, 639, 670, 672, 673, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 727, 728, 729, 731, 732, 736, 737, 738, 740, 741, 786, 853, 886, 914, 923, 963, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 980, 982, 983, 985, 1018, 1019, 1020, 1024, 1030, 1031, 1033, 1034, 1041, 1044, 1048, 1049, 1050, 1051, 1057, 1058, 1071, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1115, 1116, 1118, 1123, 1127, 1128, 1156, 1157, 1205, 1206, 1207, 1232, 1247, 1298], "option": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 41, 42, 43, 50, 51, 55, 56, 57, 58, 61, 62, 64, 66, 67, 72, 84, 87, 90, 91, 93, 95, 96, 113, 114, 115, 117, 118, 120, 122, 123, 124, 127, 128, 133, 134, 135, 136, 141, 142, 146, 147, 163, 165, 169, 171, 178, 185, 190, 218, 225, 229, 230, 231, 232, 234, 245, 247, 249, 251, 253, 260, 263, 265, 267, 285, 292, 296, 297, 298, 300, 318, 326, 327, 328, 329, 333, 334, 335, 337, 355, 363, 364, 365, 366, 370, 371, 372, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 443, 444, 447, 448, 456, 464, 466, 467, 481, 485, 486, 487, 488, 497, 499, 501, 502, 503, 504, 505, 506, 507, 510, 512, 513, 518, 519, 520, 523, 524, 525, 526, 532, 534, 535, 536, 541, 542, 543, 544, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 588, 595, 596, 597, 604, 605, 609, 610, 611, 612, 615, 616, 618, 620, 621, 626, 638, 641, 644, 645, 647, 649, 650, 667, 668, 669, 671, 672, 674, 677, 681, 683, 690, 697, 702, 705, 706, 707, 710, 711, 716, 717, 718, 719, 724, 726, 731, 732, 749, 753, 755, 762, 769, 774, 803, 810, 814, 815, 816, 817, 819, 830, 832, 834, 836, 838, 845, 848, 850, 852, 870, 877, 881, 882, 883, 885, 903, 911, 912, 913, 914, 918, 919, 920, 922, 940, 948, 949, 950, 951, 955, 956, 957, 959, 960, 963, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 1019, 1020, 1023, 1024, 1033, 1041, 1043, 1044, 1058, 1062, 1063, 1064, 1065, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1090, 1095, 1096, 1097, 1100, 1101, 1102, 1103, 1109, 1111, 1112, 1113, 1115, 1116, 1117, 1124, 1127, 1128, 1129, 1130, 1133, 1134, 1136, 1138, 1139, 1144, 1156, 1159, 1162, 1163, 1165, 1167, 1168, 1212, 1213, 1219, 1235, 1247, 1252, 1253, 1255, 1292, 1304], "dictionari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36, 39, 41, 42, 55, 56, 57, 59, 84, 85, 86, 88, 116, 118, 119, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 141, 143, 144, 145, 146, 147, 150, 151, 152, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 401, 427, 429, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 465, 466, 471, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 520, 526, 527, 528, 529, 532, 533, 534, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 564, 567, 568, 571, 572, 573, 574, 575, 579, 581, 583, 585, 586, 589, 592, 595, 596, 609, 610, 611, 613, 638, 639, 640, 642, 670, 672, 673, 705, 706, 707, 708, 709, 714, 715, 716, 717, 718, 719, 724, 727, 728, 729, 731, 732, 736, 737, 738, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 983, 984, 985, 987, 989, 1017, 1018, 1019, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1032, 1034, 1035, 1036, 1037, 1038, 1042, 1043, 1048, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1097, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1115, 1116, 1127, 1128, 1129, 1131, 1156, 1157, 1158, 1160, 1185, 1205, 1206, 1207, 1247, 1263, 1299, 1304], "retriev": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 31, 33, 41, 61, 62, 64, 65, 66, 67, 68, 90, 91, 93, 94, 95, 96, 97, 131, 132, 144, 160, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 584, 586, 595, 615, 616, 618, 619, 620, 621, 622, 644, 645, 647, 648, 649, 650, 651, 714, 715, 728, 734, 746, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 1115, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1205, 1206, 1220, 1255, 1291, 1292, 1293, 1294, 1300, 1306], "metadata": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 39, 40, 41, 42, 55, 56, 57, 84, 85, 86, 122, 123, 124, 133, 134, 135, 137, 138, 139, 140, 146, 147, 150, 151, 152, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 395, 447, 454, 473, 474, 480, 494, 499, 513, 521, 522, 523, 524, 525, 526, 527, 528, 529, 534, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 576, 577, 579, 581, 583, 584, 586, 592, 593, 595, 596, 609, 610, 611, 638, 639, 640, 705, 706, 707, 716, 717, 718, 720, 721, 722, 723, 731, 732, 736, 737, 738, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 982, 1020, 1023, 1025, 1031, 1050, 1051, 1057, 1071, 1076, 1090, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1111, 1115, 1116, 1127, 1128, 1129, 1156, 1157, 1158, 1185, 1187, 1192, 1247, 1255, 1263, 1280, 1281, 1285, 1304], "dure": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 30, 128, 133, 134, 135, 178, 190, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 497, 523, 532, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 583, 690, 702, 711, 716, 717, 718, 762, 774, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 1074, 1100, 1109, 1305, 1308], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 35, 40, 41, 43, 55, 57, 58, 61, 62, 64, 66, 67, 68, 84, 86, 87, 90, 91, 93, 95, 96, 97, 116, 118, 119, 122, 123, 124, 128, 133, 134, 135, 138, 139, 140, 141, 142, 144, 146, 147, 150, 151, 152, 165, 169, 178, 193, 194, 195, 196, 197, 198, 199, 200, 217, 249, 284, 301, 317, 329, 338, 354, 366, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 411, 425, 436, 442, 443, 446, 448, 457, 462, 470, 472, 479, 492, 493, 495, 497, 510, 511, 512, 513, 523, 524, 525, 529, 532, 535, 536, 537, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 588, 593, 595, 597, 609, 611, 612, 615, 616, 618, 620, 621, 622, 638, 640, 641, 644, 645, 647, 649, 650, 651, 670, 672, 673, 677, 681, 690, 705, 706, 707, 711, 716, 717, 718, 721, 722, 723, 724, 726, 728, 730, 731, 732, 736, 737, 738, 749, 753, 762, 777, 778, 779, 780, 781, 782, 783, 784, 802, 834, 869, 886, 902, 914, 923, 939, 951, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 981, 982, 983, 985, 996, 998, 1006, 1009, 1011, 1018, 1019, 1022, 1024, 1025, 1034, 1039, 1047, 1049, 1056, 1069, 1070, 1072, 1074, 1087, 1088, 1089, 1090, 1100, 1101, 1102, 1106, 1109, 1112, 1113, 1115, 1117, 1127, 1129, 1130, 1133, 1134, 1136, 1138, 1139, 1140, 1156, 1158, 1159, 1162, 1163, 1165, 1167, 1168, 1169, 1192, 1204, 1219, 1229, 1230, 1235, 1238, 1239, 1240, 1253, 1254, 1257, 1258, 1262, 1263, 1266, 1267, 1271, 1272, 1273, 1274, 1277, 1283, 1290, 1292, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 35, 40, 41, 42, 43, 48, 55, 57, 58, 65, 66, 67, 68, 72, 84, 86, 87, 94, 95, 96, 97, 101, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 144, 146, 147, 149, 150, 151, 152, 153, 154, 160, 163, 165, 167, 169, 170, 171, 172, 174, 176, 177, 178, 181, 183, 184, 185, 186, 188, 190, 191, 193, 196, 197, 203, 205, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 285, 286, 287, 290, 291, 292, 295, 296, 297, 298, 301, 303, 305, 318, 319, 320, 323, 324, 328, 329, 332, 333, 334, 335, 338, 340, 342, 355, 356, 357, 360, 361, 365, 366, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 404, 411, 425, 432, 433, 436, 441, 442, 443, 446, 448, 453, 455, 457, 461, 462, 463, 466, 470, 471, 472, 476, 479, 483, 485, 492, 493, 495, 497, 500, 501, 502, 505, 506, 511, 512, 513, 516, 520, 521, 523, 524, 525, 527, 528, 529, 531, 532, 535, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 575, 576, 577, 579, 580, 588, 593, 595, 596, 597, 602, 609, 611, 612, 619, 620, 621, 622, 626, 638, 640, 641, 648, 649, 650, 651, 655, 667, 670, 671, 672, 673, 674, 677, 679, 681, 682, 683, 684, 686, 688, 689, 690, 693, 695, 696, 697, 698, 700, 702, 703, 705, 706, 707, 708, 710, 714, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 728, 730, 731, 732, 735, 736, 737, 738, 739, 740, 746, 749, 751, 753, 754, 755, 756, 758, 760, 761, 762, 765, 767, 768, 769, 770, 772, 774, 775, 777, 780, 781, 788, 790, 803, 804, 805, 808, 809, 810, 813, 814, 815, 816, 817, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 845, 846, 847, 848, 849, 850, 851, 852, 855, 857, 870, 871, 872, 875, 876, 877, 880, 881, 882, 883, 886, 888, 890, 903, 904, 905, 908, 909, 913, 914, 917, 918, 919, 920, 923, 925, 927, 940, 941, 942, 945, 946, 950, 951, 954, 955, 956, 957, 960, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 992, 993, 996, 998, 1003, 1004, 1006, 1009, 1017, 1018, 1019, 1020, 1022, 1024, 1025, 1030, 1032, 1034, 1038, 1039, 1040, 1043, 1047, 1048, 1049, 1053, 1056, 1060, 1062, 1069, 1070, 1072, 1074, 1077, 1078, 1079, 1082, 1083, 1088, 1089, 1090, 1093, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1108, 1109, 1112, 1115, 1116, 1117, 1122, 1127, 1129, 1130, 1137, 1138, 1139, 1140, 1144, 1156, 1158, 1159, 1166, 1167, 1168, 1169, 1173, 1192, 1204, 1205, 1206, 1212, 1213, 1219, 1220, 1222, 1229, 1230, 1232, 1235, 1238, 1239, 1240, 1242, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1262, 1263, 1266, 1271, 1272, 1273, 1274, 1277, 1282, 1283, 1290, 1292, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "us": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 40, 41, 43, 55, 57, 64, 66, 67, 84, 86, 93, 95, 96, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 165, 178, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 305, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 340, 342, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 369, 370, 371, 372, 374, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 425, 441, 442, 443, 444, 447, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 513, 516, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 570, 571, 572, 573, 574, 575, 576, 577, 581, 583, 588, 593, 595, 597, 609, 611, 618, 620, 621, 638, 640, 647, 649, 650, 670, 671, 672, 673, 674, 677, 690, 702, 705, 706, 707, 708, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 749, 762, 774, 777, 778, 779, 780, 781, 782, 783, 784, 786, 788, 790, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 845, 846, 847, 848, 849, 850, 851, 852, 853, 855, 857, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 888, 890, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 914, 916, 917, 918, 919, 920, 922, 923, 925, 927, 939, 940, 941, 942, 943, 944, 945, 946, 949, 950, 951, 953, 954, 955, 956, 957, 959, 960, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 985, 1009, 1017, 1018, 1019, 1020, 1023, 1025, 1026, 1027, 1028, 1029, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1090, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1117, 1127, 1129, 1136, 1138, 1139, 1156, 1158, 1165, 1167, 1168, 1192, 1199, 1204, 1206, 1207, 1209, 1212, 1213, 1219, 1220, 1235, 1236, 1240, 1242, 1247, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1260, 1261, 1262, 1263, 1265, 1270, 1271, 1272, 1274, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1290, 1292, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 40, 56, 57, 85, 86, 122, 123, 124, 133, 134, 135, 136, 146, 147, 165, 169, 171, 178, 185, 190, 193, 196, 197, 301, 338, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 443, 498, 520, 527, 528, 541, 542, 543, 544, 545, 546, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 575, 576, 577, 579, 593, 610, 611, 639, 640, 677, 681, 683, 690, 697, 702, 705, 706, 707, 716, 717, 718, 719, 730, 731, 732, 749, 753, 755, 762, 769, 774, 777, 780, 781, 886, 923, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 983, 1019, 1025, 1075, 1097, 1104, 1105, 1128, 1129, 1157, 1158, 1187, 1253, 1298], "success": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978], "unless": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 68, 97, 116, 118, 119, 135, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 395, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 622, 651, 670, 672, 673, 718, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 982, 1140, 1169], "explicitli": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978], "includ": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 28, 30, 32, 55, 60, 66, 67, 84, 89, 95, 96, 122, 123, 124, 133, 134, 135, 136, 138, 139, 141, 142, 150, 151, 152, 165, 169, 171, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 442, 443, 519, 535, 541, 542, 543, 544, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 575, 578, 579, 583, 585, 609, 614, 620, 621, 638, 643, 649, 650, 677, 681, 683, 687, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 716, 717, 718, 719, 721, 722, 724, 726, 730, 736, 737, 738, 748, 749, 753, 755, 759, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 803, 810, 814, 815, 816, 817, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 1018, 1019, 1096, 1112, 1127, 1132, 1138, 1139, 1156, 1161, 1167, 1168, 1207, 1242, 1255, 1262, 1266, 1285, 1296, 1303, 1305, 1306], "A": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 29, 30, 41, 55, 57, 84, 86, 117, 120, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 146, 147, 150, 151, 152, 154, 155, 164, 165, 193, 194, 195, 196, 197, 198, 199, 200, 201, 235, 248, 254, 268, 301, 327, 338, 364, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 397, 441, 442, 443, 448, 452, 453, 462, 470, 497, 498, 499, 501, 510, 513, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 534, 535, 536, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 581, 583, 595, 609, 611, 638, 640, 671, 674, 677, 705, 706, 707, 708, 709, 712, 714, 715, 716, 717, 718, 720, 721, 722, 723, 726, 730, 731, 732, 736, 737, 738, 740, 741, 749, 777, 778, 779, 780, 781, 782, 783, 784, 786, 820, 833, 839, 853, 886, 912, 923, 949, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 980, 984, 985, 998, 1017, 1018, 1019, 1024, 1025, 1029, 1030, 1039, 1047, 1074, 1075, 1076, 1078, 1087, 1090, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1109, 1111, 1112, 1113, 1115, 1127, 1129, 1156, 1158, 1230, 1255, 1274, 1292, 1296, 1306], "valu": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 35, 38, 40, 41, 55, 58, 84, 87, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 155, 160, 165, 167, 169, 170, 171, 173, 176, 178, 181, 183, 184, 185, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 218, 219, 220, 222, 225, 226, 227, 228, 229, 230, 231, 232, 243, 245, 247, 248, 249, 251, 253, 260, 261, 263, 265, 267, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 318, 319, 320, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 355, 356, 357, 359, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 405, 407, 409, 413, 415, 416, 421, 422, 432, 433, 442, 443, 444, 446, 448, 453, 457, 462, 467, 470, 474, 479, 480, 492, 493, 495, 497, 498, 499, 502, 505, 506, 510, 513, 518, 520, 521, 522, 523, 524, 525, 527, 528, 529, 532, 535, 536, 539, 541, 542, 543, 544, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 571, 572, 573, 574, 575, 576, 577, 579, 588, 591, 593, 595, 609, 612, 638, 641, 670, 671, 672, 673, 674, 677, 679, 681, 682, 683, 685, 688, 690, 693, 695, 696, 697, 700, 702, 704, 705, 706, 707, 708, 709, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 730, 731, 732, 734, 736, 737, 738, 740, 741, 746, 749, 751, 753, 754, 755, 757, 760, 762, 765, 767, 768, 769, 772, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 803, 804, 805, 807, 810, 811, 812, 813, 814, 815, 816, 817, 828, 830, 832, 833, 834, 836, 838, 845, 846, 848, 850, 852, 870, 871, 872, 874, 877, 878, 879, 880, 881, 882, 883, 903, 904, 905, 907, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 940, 941, 942, 944, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 960, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 992, 993, 998, 1003, 1004, 1018, 1019, 1022, 1024, 1025, 1030, 1034, 1039, 1044, 1047, 1051, 1056, 1057, 1069, 1070, 1072, 1074, 1075, 1076, 1079, 1082, 1083, 1087, 1090, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1109, 1112, 1113, 1115, 1127, 1130, 1156, 1159, 1188, 1189, 1190, 1204, 1209, 1219, 1226, 1230, 1233, 1234, 1236, 1238, 1240, 1255, 1263, 1266, 1271, 1274, 1290, 1291, 1292, 1299, 1300, 1303, 1306], "default": [0, 1, 2, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 36, 40, 41, 55, 61, 62, 64, 66, 67, 72, 84, 90, 91, 93, 95, 96, 101, 116, 117, 118, 119, 120, 122, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 146, 147, 150, 151, 152, 154, 155, 165, 169, 171, 178, 185, 190, 193, 194, 195, 196, 197, 198, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 225, 228, 229, 230, 231, 232, 234, 243, 245, 247, 248, 249, 251, 253, 260, 261, 263, 265, 267, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 292, 295, 296, 297, 298, 300, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 328, 329, 332, 333, 334, 335, 337, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 365, 366, 369, 370, 371, 372, 374, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 402, 404, 411, 428, 443, 447, 449, 450, 451, 452, 458, 459, 460, 461, 465, 466, 468, 469, 472, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 496, 497, 498, 499, 502, 505, 506, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 534, 535, 541, 542, 543, 547, 548, 552, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 576, 577, 579, 581, 589, 593, 595, 609, 615, 616, 618, 620, 621, 626, 638, 644, 645, 647, 649, 650, 655, 670, 671, 672, 673, 674, 677, 681, 683, 690, 697, 702, 705, 706, 707, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 728, 730, 731, 732, 736, 737, 738, 740, 741, 749, 753, 755, 762, 769, 774, 777, 778, 779, 780, 781, 782, 783, 784, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 810, 813, 814, 815, 816, 817, 819, 828, 830, 832, 833, 834, 836, 838, 845, 846, 848, 850, 852, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 877, 880, 881, 882, 883, 885, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 913, 914, 917, 918, 919, 920, 922, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 950, 951, 954, 955, 956, 957, 959, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 982, 983, 988, 1000, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1038, 1042, 1043, 1045, 1046, 1049, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1073, 1074, 1075, 1076, 1079, 1082, 1083, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1111, 1112, 1115, 1127, 1133, 1134, 1136, 1138, 1139, 1144, 1156, 1162, 1163, 1165, 1167, 1168, 1173, 1188, 1189, 1190, 1207, 1209, 1219, 1220, 1247, 1255, 1282, 1283, 1292, 1296, 1305, 1306, 1308], "introduct": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 377, 382, 384, 385, 386, 387, 388, 389, 390, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 574, 964, 969, 971, 972, 973, 974, 975, 976, 977, 1306], "addit": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 30, 133, 134, 135, 141, 217, 218, 225, 229, 230, 231, 232, 244, 245, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 284, 285, 292, 296, 297, 298, 317, 318, 325, 326, 327, 328, 329, 330, 333, 334, 335, 354, 355, 362, 363, 364, 365, 366, 367, 370, 371, 372, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 441, 443, 471, 472, 497, 538, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 583, 716, 717, 718, 724, 802, 803, 810, 814, 815, 816, 817, 829, 830, 832, 833, 834, 835, 836, 837, 838, 848, 849, 850, 851, 852, 869, 870, 877, 881, 882, 883, 902, 903, 910, 911, 912, 913, 914, 915, 918, 919, 920, 939, 940, 947, 948, 949, 950, 951, 952, 955, 956, 957, 960, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 1009, 1017, 1019, 1048, 1049, 1074, 1230, 1255, 1260, 1262, 1289, 1292, 1296], "specif": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 122, 123, 124, 139, 140, 150, 151, 152, 178, 190, 338, 366, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 443, 498, 501, 502, 503, 505, 506, 512, 513, 520, 521, 522, 523, 524, 525, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 690, 702, 705, 706, 707, 722, 723, 736, 737, 738, 762, 774, 923, 951, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 1019, 1075, 1078, 1079, 1080, 1082, 1083, 1089, 1090, 1097, 1098, 1099, 1100, 1101, 1102, 1230, 1255, 1257, 1271, 1292, 1296, 1306, 1308], "specifi": [0, 1, 2, 3, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 41, 48, 55, 58, 66, 67, 84, 87, 95, 96, 116, 118, 119, 133, 134, 135, 169, 171, 185, 218, 220, 225, 229, 230, 231, 232, 244, 245, 247, 248, 249, 250, 251, 252, 253, 260, 263, 264, 265, 266, 267, 285, 287, 292, 296, 297, 298, 318, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 355, 357, 362, 363, 364, 365, 366, 367, 370, 371, 372, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 432, 442, 443, 499, 523, 524, 525, 541, 542, 543, 544, 547, 548, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 575, 576, 577, 579, 595, 602, 609, 612, 620, 621, 638, 641, 649, 650, 670, 672, 673, 681, 683, 697, 716, 717, 718, 748, 753, 755, 769, 803, 805, 810, 814, 815, 816, 817, 829, 830, 832, 833, 834, 835, 836, 837, 838, 845, 848, 849, 850, 851, 852, 870, 872, 877, 881, 882, 883, 903, 905, 910, 911, 912, 913, 914, 915, 918, 919, 920, 940, 942, 947, 948, 949, 950, 951, 952, 955, 956, 957, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 992, 1003, 1009, 1018, 1019, 1076, 1100, 1101, 1102, 1115, 1122, 1127, 1130, 1138, 1139, 1156, 1159, 1167, 1168, 1207, 1247, 1252, 1255, 1258, 1262, 1302, 1303, 1305], "py": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 29, 40, 41, 55, 84, 116, 118, 119, 122, 123, 124, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 155, 165, 193, 194, 195, 196, 197, 198, 199, 200, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 301, 318, 320, 328, 329, 333, 334, 335, 338, 355, 357, 365, 366, 370, 371, 372, 382, 383, 384, 385, 389, 391, 394, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 465, 466, 468, 469, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 497, 498, 499, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 534, 537, 538, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 576, 577, 580, 581, 582, 593, 594, 595, 609, 638, 670, 672, 673, 677, 705, 706, 707, 712, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 730, 731, 732, 736, 737, 738, 740, 741, 747, 749, 777, 778, 779, 780, 781, 782, 783, 784, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 886, 903, 905, 913, 914, 918, 919, 920, 923, 940, 942, 950, 951, 955, 956, 957, 969, 970, 971, 972, 976, 978, 981, 1008, 1020, 1023, 1024, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1038, 1042, 1043, 1045, 1046, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1073, 1074, 1075, 1076, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1111, 1115, 1127, 1156, 1199, 1223, 1224, 1247, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1269, 1270, 1271, 1273, 1283, 1288, 1289, 1290, 1295, 1297, 1298, 1299, 1300, 1302, 1305, 1308], "art": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 29, 40, 41, 55, 84, 116, 118, 119, 122, 123, 124, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 155, 165, 193, 194, 195, 196, 197, 198, 199, 200, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 301, 318, 320, 328, 329, 333, 334, 335, 338, 355, 357, 365, 366, 370, 371, 372, 382, 383, 384, 385, 389, 391, 394, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 465, 466, 468, 469, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 497, 498, 499, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 534, 538, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 576, 577, 580, 581, 582, 593, 594, 595, 609, 638, 670, 672, 673, 677, 705, 706, 707, 712, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 730, 731, 732, 736, 737, 738, 740, 741, 747, 749, 777, 778, 779, 780, 781, 782, 783, 784, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 886, 903, 905, 913, 914, 918, 919, 920, 923, 940, 942, 950, 951, 955, 956, 957, 969, 970, 971, 972, 976, 978, 981, 1008, 1023, 1024, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1038, 1042, 1043, 1045, 1046, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1073, 1074, 1075, 1076, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1111, 1115, 1127, 1156, 1199, 1223, 1224, 1247, 1254, 1257, 1258, 1260, 1261, 1262, 1263, 1270, 1271, 1273, 1290, 1297, 1298, 1299, 1300, 1302, 1305, 1308], "configur": [0, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 29, 34, 35, 37, 40, 122, 123, 124, 129, 133, 134, 135, 137, 138, 139, 140, 142, 146, 147, 150, 151, 152, 154, 155, 193, 194, 195, 196, 197, 198, 199, 200, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 447, 449, 450, 451, 452, 458, 459, 460, 461, 465, 466, 468, 469, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 497, 498, 499, 513, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 534, 541, 542, 543, 547, 548, 553, 554, 556, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 581, 582, 587, 588, 590, 593, 705, 706, 707, 712, 716, 717, 718, 720, 721, 722, 723, 726, 730, 731, 732, 736, 737, 738, 740, 741, 777, 778, 779, 780, 781, 782, 783, 784, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 1023, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1038, 1042, 1043, 1045, 1046, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1073, 1074, 1075, 1076, 1090, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1111, 1247, 1255, 1266, 1291, 1306], "float": [0, 1, 2, 4, 5, 7, 9, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 35, 68, 97, 113, 114, 115, 117, 120, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 169, 193, 195, 196, 197, 198, 199, 200, 201, 202, 218, 220, 221, 225, 226, 228, 229, 230, 231, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 262, 263, 264, 265, 266, 267, 268, 269, 285, 287, 288, 292, 293, 295, 296, 297, 298, 301, 302, 318, 320, 321, 327, 328, 329, 330, 332, 333, 334, 335, 338, 339, 355, 357, 358, 364, 365, 366, 367, 369, 370, 371, 372, 394, 438, 439, 440, 441, 443, 444, 446, 447, 448, 453, 454, 457, 459, 462, 467, 469, 470, 471, 473, 474, 479, 480, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 541, 542, 543, 545, 546, 548, 553, 556, 558, 560, 561, 562, 564, 571, 572, 573, 576, 577, 588, 622, 651, 667, 668, 669, 671, 674, 681, 705, 706, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 753, 777, 779, 780, 781, 782, 783, 784, 786, 787, 803, 805, 806, 810, 811, 813, 814, 815, 816, 817, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 845, 847, 848, 849, 850, 851, 852, 853, 854, 870, 872, 873, 877, 878, 880, 881, 882, 883, 886, 887, 903, 905, 906, 912, 913, 914, 915, 917, 918, 919, 920, 923, 924, 940, 942, 943, 949, 950, 951, 952, 954, 955, 956, 957, 960, 981, 1009, 1010, 1012, 1013, 1014, 1015, 1017, 1019, 1022, 1023, 1024, 1030, 1031, 1034, 1036, 1039, 1044, 1046, 1047, 1048, 1050, 1051, 1056, 1057, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1140, 1169, 1187, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1240, 1248, 1249, 1250], "swiss": [0, 2, 4, 5, 9, 121, 541, 543, 545, 546, 553, 675], "coordin": [0, 1, 2, 4, 5, 7, 9, 20, 41, 43, 49, 55, 66, 84, 95, 113, 114, 115, 116, 117, 118, 119, 120, 121, 158, 207, 218, 225, 229, 230, 231, 232, 245, 251, 253, 263, 265, 267, 274, 285, 292, 296, 297, 298, 307, 318, 328, 329, 333, 334, 335, 344, 355, 365, 366, 370, 371, 372, 393, 441, 443, 493, 499, 513, 541, 542, 543, 545, 546, 548, 553, 564, 595, 597, 603, 609, 620, 638, 649, 667, 668, 669, 670, 671, 672, 673, 674, 675, 744, 792, 803, 810, 814, 815, 816, 817, 830, 836, 838, 848, 850, 852, 859, 870, 877, 881, 882, 883, 892, 903, 913, 914, 918, 919, 920, 929, 940, 950, 951, 955, 956, 957, 980, 1008, 1009, 1011, 1017, 1019, 1020, 1070, 1076, 1090, 1115, 1117, 1123, 1127, 1138, 1156, 1167, 1187, 1204, 1229, 1255, 1256, 1260, 1263, 1265, 1266, 1267, 1268, 1296, 1302, 1304], "posit": [0, 2, 4, 5, 9, 23, 24, 55, 84, 117, 120, 123, 124, 133, 143, 144, 145, 149, 157, 158, 160, 472, 474, 480, 499, 510, 523, 527, 528, 529, 535, 536, 541, 543, 545, 546, 553, 572, 573, 609, 638, 671, 674, 706, 707, 716, 727, 728, 729, 734, 735, 743, 744, 746, 1025, 1049, 1051, 1057, 1076, 1087, 1100, 1104, 1105, 1106, 1112, 1113, 1127, 1156, 1205, 1206, 1255, 1266, 1271, 1273, 1304], "south": [0, 2, 4, 5, 9, 541, 543, 545, 546, 553, 1020, 1275], "western": [0, 2, 4, 5, 9, 541, 543, 545, 546, 553], "point": [0, 1, 2, 4, 5, 7, 9, 20, 40, 41, 43, 57, 86, 118, 122, 123, 124, 138, 139, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 207, 221, 226, 232, 244, 245, 246, 262, 274, 288, 293, 298, 301, 307, 321, 326, 327, 330, 335, 344, 358, 363, 364, 367, 372, 384, 385, 388, 390, 394, 441, 442, 443, 445, 453, 462, 470, 473, 474, 479, 480, 492, 495, 497, 510, 527, 532, 541, 542, 543, 545, 546, 548, 553, 564, 593, 595, 597, 611, 640, 672, 705, 706, 707, 721, 722, 726, 727, 728, 729, 732, 735, 736, 737, 738, 739, 792, 806, 811, 817, 829, 830, 831, 847, 859, 873, 878, 883, 886, 892, 906, 911, 912, 915, 920, 929, 943, 948, 949, 952, 957, 971, 972, 975, 977, 981, 1017, 1018, 1019, 1030, 1039, 1047, 1050, 1051, 1056, 1057, 1069, 1072, 1074, 1087, 1104, 1109, 1115, 1117, 1129, 1158, 1187, 1207, 1209, 1219, 1220, 1224, 1226, 1235, 1238, 1253, 1255, 1260, 1272, 1279, 1289, 1292, 1296, 1300, 1302, 1304], "grid": [0, 1, 2, 4, 5, 7, 9, 10, 16, 20, 26, 35, 55, 84, 220, 222, 230, 232, 235, 239, 244, 246, 247, 248, 249, 250, 252, 254, 255, 260, 262, 263, 264, 266, 287, 289, 298, 320, 322, 335, 357, 359, 372, 383, 384, 393, 394, 395, 438, 439, 440, 441, 442, 443, 462, 470, 479, 492, 495, 497, 513, 518, 519, 532, 541, 542, 543, 545, 546, 548, 553, 554, 560, 564, 576, 588, 609, 638, 805, 807, 815, 817, 820, 824, 829, 831, 832, 833, 834, 835, 837, 839, 840, 845, 847, 848, 849, 851, 872, 874, 883, 905, 907, 920, 942, 944, 957, 970, 971, 980, 981, 982, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1039, 1047, 1056, 1069, 1072, 1074, 1090, 1095, 1096, 1109, 1127, 1156, 1187, 1191, 1193, 1194, 1215, 1229, 1231, 1249, 1250, 1255, 1260, 1265, 1270, 1273, 1283, 1286, 1292, 1296, 1297], "resolut": [0, 1, 7, 9, 20, 55, 84, 125, 126, 131, 132, 218, 220, 221, 225, 226, 229, 230, 231, 232, 248, 260, 285, 287, 288, 292, 293, 296, 297, 298, 318, 320, 321, 328, 329, 330, 333, 334, 335, 355, 357, 358, 365, 366, 367, 370, 371, 372, 386, 445, 453, 462, 470, 479, 492, 495, 497, 513, 517, 523, 529, 532, 541, 542, 548, 553, 564, 609, 638, 708, 709, 714, 715, 803, 805, 806, 810, 811, 814, 815, 816, 817, 833, 845, 870, 872, 873, 877, 878, 881, 882, 883, 903, 905, 906, 913, 914, 915, 918, 919, 920, 940, 942, 943, 950, 951, 952, 955, 956, 957, 973, 1020, 1030, 1039, 1047, 1056, 1069, 1072, 1074, 1090, 1094, 1100, 1106, 1109, 1127, 1156, 1220, 1263, 1276, 1279, 1300, 1302, 1303], "each": [0, 1, 7, 9, 20, 41, 49, 51, 55, 65, 84, 94, 122, 123, 124, 126, 134, 135, 136, 137, 138, 139, 142, 150, 151, 152, 160, 218, 225, 229, 230, 231, 245, 251, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 390, 394, 396, 441, 442, 443, 457, 493, 498, 499, 500, 510, 516, 517, 520, 527, 528, 529, 531, 533, 535, 541, 542, 548, 553, 564, 578, 595, 603, 605, 609, 619, 638, 648, 705, 706, 707, 709, 717, 718, 719, 720, 721, 722, 726, 736, 737, 738, 746, 803, 810, 814, 815, 816, 830, 836, 838, 848, 850, 852, 870, 877, 881, 882, 903, 913, 914, 918, 919, 940, 950, 951, 955, 956, 977, 981, 983, 1009, 1017, 1018, 1019, 1034, 1070, 1075, 1076, 1077, 1087, 1093, 1094, 1097, 1104, 1105, 1106, 1108, 1110, 1112, 1115, 1123, 1127, 1137, 1156, 1166, 1188, 1189, 1190, 1225, 1226, 1227, 1229, 1236, 1237, 1238, 1239, 1255, 1262, 1267, 1282, 1285, 1292, 1303, 1304, 1306], "km": [0, 1, 7, 9, 20, 113, 117, 120, 201, 221, 226, 227, 234, 268, 288, 293, 294, 300, 301, 321, 330, 331, 337, 338, 358, 366, 367, 368, 374, 446, 454, 467, 494, 497, 498, 513, 516, 517, 520, 523, 541, 542, 548, 553, 564, 667, 671, 674, 786, 806, 811, 812, 819, 853, 873, 878, 879, 885, 886, 906, 915, 916, 922, 923, 943, 951, 952, 953, 959, 1022, 1031, 1044, 1071, 1074, 1075, 1090, 1093, 1094, 1097, 1100, 1220, 1222, 1248, 1275, 1280, 1281, 1283, 1302], "int": [0, 1, 7, 9, 12, 14, 20, 24, 35, 41, 43, 55, 61, 62, 64, 65, 66, 67, 68, 84, 90, 91, 93, 94, 95, 96, 97, 124, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 150, 151, 152, 154, 155, 160, 178, 190, 194, 196, 203, 204, 205, 217, 221, 225, 226, 228, 229, 230, 232, 239, 240, 241, 242, 247, 248, 249, 255, 256, 257, 258, 260, 263, 270, 271, 272, 284, 288, 292, 293, 295, 296, 298, 303, 304, 305, 317, 321, 328, 329, 330, 332, 333, 335, 340, 341, 342, 354, 358, 365, 366, 367, 369, 370, 372, 394, 398, 443, 448, 452, 453, 457, 461, 462, 466, 467, 468, 469, 470, 471, 472, 478, 479, 484, 485, 487, 488, 492, 497, 498, 500, 510, 513, 521, 522, 523, 525, 527, 529, 531, 533, 535, 536, 539, 541, 542, 548, 553, 556, 558, 564, 573, 588, 595, 597, 609, 615, 616, 618, 619, 620, 621, 622, 638, 644, 645, 647, 648, 649, 650, 651, 690, 702, 707, 712, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 727, 728, 731, 732, 734, 736, 737, 738, 740, 741, 746, 762, 774, 778, 780, 788, 789, 790, 802, 806, 810, 811, 813, 814, 815, 817, 824, 825, 826, 827, 832, 833, 834, 840, 841, 842, 843, 845, 848, 855, 856, 857, 869, 873, 877, 878, 880, 881, 883, 888, 889, 890, 902, 906, 913, 914, 915, 917, 918, 920, 925, 926, 927, 939, 943, 950, 951, 952, 954, 955, 957, 981, 1019, 1020, 1024, 1029, 1030, 1034, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1055, 1056, 1061, 1062, 1064, 1065, 1069, 1074, 1075, 1077, 1087, 1090, 1098, 1099, 1100, 1102, 1104, 1106, 1108, 1110, 1112, 1113, 1115, 1117, 1127, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1156, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1188, 1189, 1190, 1204, 1207, 1209, 1219, 1220, 1221, 1223, 1225, 1229, 1252, 1255, 1306], "dimens": [0, 1, 7, 9, 20, 41, 84, 133, 384, 443, 497, 512, 518, 523, 525, 532, 541, 542, 548, 553, 564, 595, 638, 716, 971, 1019, 1025, 1074, 1089, 1095, 1100, 1102, 1109, 1115, 1156, 1229, 1249, 1250, 1255, 1292, 1298, 1302, 1304], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 82, 83, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 166, 179, 180, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 239, 240, 241, 242, 255, 256, 257, 258, 269, 270, 271, 272, 273, 274, 302, 303, 304, 305, 306, 307, 339, 340, 341, 342, 343, 344, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 403, 404, 405, 406, 409, 413, 414, 415, 416, 420, 424, 425, 427, 432, 433, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 581, 585, 586, 587, 588, 589, 590, 591, 592, 597, 598, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 631, 632, 633, 634, 635, 636, 637, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 678, 691, 692, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 750, 763, 764, 777, 778, 779, 780, 781, 782, 783, 784, 787, 788, 789, 790, 791, 792, 824, 825, 826, 827, 840, 841, 842, 843, 854, 855, 856, 857, 858, 859, 887, 888, 889, 890, 891, 892, 924, 925, 926, 927, 928, 929, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 987, 992, 993, 1003, 1004, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1118, 1125, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1195, 1196, 1197, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1255, 1290, 1292, 1299, 1302, 1304, 1306], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 41, 42, 49, 50, 56, 57, 58, 60, 61, 62, 64, 72, 81, 84, 85, 86, 87, 89, 90, 91, 93, 101, 110, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 157, 158, 165, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 232, 235, 243, 247, 248, 254, 261, 268, 286, 298, 301, 319, 329, 335, 338, 356, 372, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 404, 423, 424, 430, 431, 434, 437, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 527, 528, 529, 530, 534, 535, 536, 537, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 585, 595, 596, 603, 604, 610, 611, 612, 614, 615, 616, 618, 626, 635, 638, 639, 640, 641, 643, 644, 645, 647, 655, 664, 677, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 740, 741, 743, 744, 749, 777, 778, 779, 780, 781, 782, 783, 784, 786, 804, 817, 820, 828, 832, 833, 839, 846, 853, 871, 883, 886, 904, 914, 920, 923, 941, 957, 962, 963, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 990, 991, 994, 997, 1001, 1002, 1007, 1009, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1104, 1105, 1106, 1107, 1111, 1112, 1113, 1114, 1115, 1116, 1123, 1124, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1144, 1153, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1165, 1173, 1182, 1187, 1188, 1189, 1190, 1192, 1205, 1206, 1207, 1219, 1221, 1223, 1224, 1228, 1230, 1231, 1232, 1235, 1240, 1241, 1245, 1246, 1249, 1250, 1252, 1253, 1255, 1262, 1266, 1273, 1274, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1290, 1292, 1293, 1296, 1297, 1298, 1302, 1303, 1306], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 29, 35, 40, 41, 42, 43, 55, 56, 60, 61, 62, 64, 65, 66, 67, 68, 84, 85, 89, 90, 91, 93, 94, 95, 96, 97, 122, 123, 124, 125, 131, 132, 133, 134, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 193, 194, 195, 196, 197, 198, 199, 200, 207, 218, 225, 228, 229, 230, 231, 232, 234, 244, 274, 285, 292, 295, 296, 297, 298, 300, 307, 318, 328, 329, 332, 333, 334, 335, 337, 344, 355, 365, 366, 369, 370, 371, 372, 374, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 475, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 520, 523, 524, 525, 526, 527, 528, 529, 530, 532, 534, 536, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 556, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 581, 588, 593, 595, 596, 597, 609, 610, 614, 615, 616, 618, 619, 620, 621, 622, 638, 639, 643, 644, 645, 647, 648, 649, 650, 651, 705, 706, 707, 708, 714, 715, 716, 717, 718, 724, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 777, 778, 779, 780, 781, 782, 783, 784, 792, 803, 810, 813, 814, 815, 816, 817, 819, 829, 859, 870, 877, 880, 881, 882, 883, 885, 892, 903, 913, 914, 917, 918, 919, 920, 922, 929, 940, 950, 951, 954, 955, 956, 957, 959, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 985, 998, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1097, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1113, 1115, 1116, 1117, 1127, 1128, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1156, 1157, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1204, 1205, 1206, 1212, 1213, 1220, 1224, 1247, 1249, 1250, 1253, 1255, 1263, 1275, 1276, 1296, 1298, 1299, 1302, 1304, 1305, 1306, 1308], "1536": [1, 7, 542, 548], "dtype": [1, 6, 165, 443, 542, 547, 677, 749, 1019, 1255, 1298, 1300, 1304], "float32": [1, 14, 24, 395, 542, 558, 573, 982, 1255, 1298, 1300, 1304], "date_format": [1, 7, 20, 542, 548, 564], "y": [1, 7, 20, 41, 47, 49, 67, 75, 96, 104, 113, 114, 115, 116, 117, 118, 119, 120, 201, 203, 215, 218, 220, 223, 225, 228, 229, 230, 231, 232, 234, 245, 247, 251, 253, 263, 265, 267, 268, 270, 282, 285, 287, 290, 292, 295, 296, 297, 298, 300, 301, 303, 315, 318, 320, 323, 326, 328, 332, 333, 334, 335, 337, 338, 340, 352, 355, 357, 360, 363, 365, 369, 370, 371, 372, 374, 438, 439, 440, 441, 442, 443, 497, 518, 519, 532, 542, 548, 564, 595, 601, 603, 621, 629, 650, 658, 667, 668, 669, 670, 671, 672, 673, 674, 786, 788, 800, 803, 805, 808, 810, 813, 814, 815, 816, 817, 819, 830, 832, 836, 838, 848, 850, 852, 853, 855, 867, 870, 872, 875, 877, 880, 881, 882, 883, 885, 886, 888, 900, 903, 905, 908, 911, 913, 917, 918, 919, 920, 922, 923, 925, 937, 940, 942, 945, 948, 950, 954, 955, 956, 957, 959, 1009, 1013, 1014, 1015, 1017, 1018, 1019, 1074, 1095, 1096, 1109, 1115, 1121, 1123, 1139, 1147, 1168, 1176, 1187, 1229, 1266, 1272, 1273, 1282, 1283, 1290, 1292], "m": [1, 7, 12, 14, 20, 22, 23, 65, 68, 94, 97, 115, 121, 125, 126, 131, 132, 135, 142, 143, 148, 150, 151, 152, 156, 159, 193, 195, 199, 203, 270, 303, 340, 441, 453, 462, 467, 470, 472, 479, 492, 493, 495, 501, 513, 517, 518, 520, 523, 524, 527, 529, 530, 532, 540, 542, 548, 556, 558, 564, 571, 572, 619, 622, 648, 651, 669, 675, 708, 709, 714, 715, 718, 726, 727, 733, 736, 737, 738, 742, 745, 777, 779, 783, 788, 855, 888, 925, 1017, 1020, 1030, 1039, 1044, 1047, 1049, 1056, 1069, 1070, 1072, 1078, 1090, 1094, 1095, 1097, 1100, 1101, 1104, 1106, 1107, 1109, 1137, 1140, 1166, 1169, 1205, 1206, 1220, 1221, 1230, 1232, 1249, 1250, 1255, 1262, 1274, 1283, 1292, 1294, 1296, 1305, 1306], "d": [1, 7, 20, 124, 135, 203, 270, 303, 340, 397, 426, 428, 430, 431, 432, 433, 435, 436, 437, 479, 492, 499, 525, 536, 542, 548, 564, 707, 718, 788, 855, 888, 925, 985, 986, 988, 990, 991, 992, 993, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1056, 1069, 1076, 1102, 1113, 1290, 1306], "added_tim": [1, 7, 20, 542, 548, 564], "86400": [1, 542], "x_offset": [1, 7, 20, 542, 548, 564], "619652": [1, 7, 542, 548], "074056": [1, 7, 542, 548], "y_offset": [1, 7, 20, 542, 548, 564], "3526818": [1, 7, 542, 548], "337932": [1, 7, 542, 548], "lat_0": [1, 7, 20, 41, 55, 84, 117, 120, 329, 366, 542, 548, 564, 595, 609, 638, 671, 674, 914, 951, 1115, 1127, 1156, 1279], "90": [1, 7, 511, 542, 548, 1088, 1235, 1306], "lon_0": [1, 7, 20, 41, 55, 84, 117, 120, 329, 366, 542, 548, 564, 595, 609, 638, 671, 674, 914, 951, 1115, 1127, 1156, 1279], "proj": [1, 20, 41, 48, 55, 84, 116, 118, 119, 260, 338, 542, 564, 595, 602, 609, 638, 670, 672, 673, 845, 923, 1115, 1122, 1127, 1156, 1255], "gnom": [1, 542], "field_nam": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 30, 32, 42, 56, 57, 59, 64, 80, 85, 86, 88, 93, 109, 127, 130, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 444, 462, 470, 479, 492, 493, 495, 542, 544, 545, 546, 547, 548, 552, 554, 556, 557, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 575, 576, 577, 583, 585, 596, 610, 611, 613, 618, 634, 639, 640, 642, 647, 663, 710, 713, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 1020, 1039, 1047, 1056, 1069, 1070, 1072, 1116, 1128, 1129, 1131, 1136, 1152, 1157, 1158, 1160, 1165, 1181, 1207, 1249, 1250, 1266, 1302], "rainfall_accumul": [1, 542], "meteofr": [1, 7, 10, 20, 542, 548, 554, 564, 1296], "The": [1, 2, 6, 7, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 40, 41, 55, 84, 113, 117, 120, 121, 122, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 164, 194, 195, 199, 223, 248, 290, 323, 360, 366, 376, 377, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 411, 441, 442, 443, 444, 445, 448, 450, 453, 457, 462, 463, 466, 467, 469, 470, 479, 481, 482, 485, 487, 492, 493, 495, 497, 498, 499, 511, 513, 516, 518, 520, 521, 522, 523, 524, 525, 527, 528, 531, 532, 533, 535, 539, 542, 543, 547, 548, 555, 556, 558, 559, 560, 561, 562, 564, 569, 571, 572, 573, 574, 576, 577, 579, 580, 593, 595, 609, 638, 667, 671, 674, 675, 705, 706, 707, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 728, 729, 735, 736, 737, 738, 739, 740, 741, 778, 779, 783, 808, 833, 875, 908, 945, 951, 963, 964, 969, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 982, 983, 985, 1009, 1010, 1011, 1012, 1017, 1018, 1019, 1024, 1025, 1027, 1030, 1034, 1039, 1040, 1043, 1044, 1046, 1047, 1056, 1058, 1059, 1062, 1064, 1069, 1070, 1072, 1074, 1075, 1076, 1088, 1090, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1112, 1115, 1127, 1156, 1186, 1199, 1200, 1201, 1204, 1207, 1208, 1209, 1210, 1211, 1219, 1220, 1221, 1225, 1226, 1227, 1229, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1245, 1247, 1249, 1250, 1252, 1255, 1260, 1263, 1274, 1285, 1292, 1296, 1297, 1300, 1303, 1305], "stereopolar": [1, 7, 542, 548], "project": [1, 7, 19, 20, 41, 44, 48, 55, 84, 116, 117, 118, 119, 120, 223, 235, 247, 248, 249, 260, 290, 301, 323, 329, 360, 366, 384, 393, 394, 443, 462, 470, 479, 492, 495, 511, 542, 548, 563, 564, 580, 595, 598, 602, 609, 638, 670, 671, 672, 673, 674, 808, 820, 832, 833, 834, 845, 875, 886, 908, 914, 945, 951, 971, 980, 981, 1019, 1020, 1039, 1047, 1056, 1069, 1072, 1088, 1115, 1118, 1122, 1127, 1156, 1255, 1262, 1263, 1266, 1272, 1273, 1279, 1286, 1290, 1292, 1296, 1299, 1300, 1302, 1303, 1305], "type": [1, 6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 26, 27, 30, 36, 55, 84, 134, 135, 150, 151, 152, 153, 201, 268, 301, 338, 377, 382, 384, 385, 386, 387, 389, 390, 391, 395, 396, 398, 444, 457, 462, 470, 479, 492, 495, 500, 502, 520, 523, 533, 542, 547, 556, 558, 559, 560, 561, 562, 571, 572, 573, 574, 576, 577, 583, 589, 609, 638, 717, 718, 736, 737, 738, 739, 786, 853, 886, 923, 964, 969, 971, 972, 973, 974, 976, 977, 978, 982, 983, 1034, 1039, 1047, 1056, 1069, 1072, 1077, 1079, 1097, 1100, 1110, 1127, 1156, 1207, 1209, 1255, 1304, 1306], "date": [1, 7, 20, 378, 379, 542, 548, 564, 965, 966, 1254, 1255, 1262, 1263], "format": [1, 7, 20, 24, 28, 49, 50, 55, 84, 203, 205, 218, 220, 225, 228, 229, 230, 231, 232, 270, 272, 285, 287, 292, 295, 296, 297, 298, 303, 305, 318, 320, 328, 329, 332, 333, 334, 335, 340, 342, 355, 357, 365, 366, 369, 370, 371, 372, 377, 387, 389, 391, 392, 393, 395, 538, 539, 542, 548, 564, 573, 579, 603, 604, 609, 638, 788, 790, 803, 805, 810, 813, 814, 815, 816, 817, 855, 857, 870, 872, 877, 880, 881, 882, 883, 888, 890, 903, 905, 913, 914, 917, 918, 919, 920, 925, 927, 940, 942, 950, 951, 954, 955, 956, 957, 961, 964, 974, 976, 978, 979, 980, 982, 1123, 1124, 1127, 1156, 1255, 1283, 1296, 1298], "second": [1, 7, 20, 51, 52, 53, 54, 57, 68, 86, 97, 113, 133, 390, 397, 510, 525, 535, 542, 548, 564, 605, 606, 607, 608, 611, 622, 640, 651, 667, 716, 977, 985, 1009, 1087, 1102, 1112, 1129, 1140, 1158, 1169, 1243, 1244, 1262, 1263, 1266, 1279, 1286, 1303, 1304, 1306], "add": [1, 7, 20, 42, 56, 57, 85, 86, 136, 147, 218, 220, 225, 228, 229, 230, 231, 232, 245, 246, 247, 248, 249, 251, 253, 260, 262, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 459, 462, 470, 479, 492, 495, 542, 548, 564, 596, 610, 611, 639, 640, 719, 732, 803, 805, 810, 813, 814, 815, 816, 817, 830, 831, 832, 833, 834, 836, 838, 845, 847, 848, 850, 852, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 914, 917, 918, 919, 920, 940, 942, 950, 951, 954, 955, 956, 957, 1036, 1039, 1047, 1056, 1069, 1072, 1116, 1128, 1129, 1157, 1158, 1255, 1266, 1271, 1272, 1273, 1282, 1283, 1285, 1290, 1292, 1293, 1300, 1305, 1306, 1308], "nomin": [1, 7, 12, 20, 22, 23, 542, 548, 556, 564, 571, 572], "time": [1, 7, 16, 20, 26, 28, 41, 49, 50, 55, 84, 131, 132, 133, 157, 158, 203, 205, 218, 220, 225, 229, 230, 231, 232, 270, 272, 285, 287, 292, 296, 297, 298, 303, 305, 318, 320, 328, 329, 333, 334, 335, 340, 342, 355, 357, 365, 366, 370, 371, 372, 375, 378, 379, 390, 392, 393, 443, 452, 461, 462, 469, 470, 478, 479, 492, 493, 495, 512, 518, 527, 529, 542, 548, 560, 564, 576, 579, 595, 603, 604, 609, 638, 714, 715, 716, 743, 744, 788, 790, 803, 805, 810, 814, 815, 816, 817, 855, 857, 870, 872, 877, 881, 882, 883, 888, 890, 903, 905, 913, 914, 918, 919, 920, 925, 927, 940, 942, 950, 951, 955, 956, 957, 962, 965, 966, 977, 979, 980, 1009, 1012, 1019, 1020, 1029, 1038, 1039, 1046, 1047, 1055, 1056, 1069, 1070, 1072, 1089, 1095, 1104, 1106, 1115, 1123, 1124, 1127, 1156, 1214, 1217, 1255, 1262, 1266, 1280, 1285, 1292, 1296, 1298, 1304, 1306, 1308], "24h": [1, 7, 542, 548], "accumul": [1, 7, 527, 542, 548, 1104, 1292], "mf": [1, 7, 143, 144, 145, 542, 548, 727, 728, 729], "x": [1, 7, 19, 20, 41, 47, 49, 67, 75, 84, 96, 104, 113, 114, 115, 116, 117, 118, 119, 120, 201, 207, 211, 218, 220, 223, 225, 228, 229, 230, 231, 232, 234, 245, 247, 251, 253, 263, 265, 267, 268, 274, 278, 285, 287, 290, 292, 295, 296, 297, 298, 300, 301, 307, 311, 318, 320, 323, 326, 328, 332, 333, 334, 335, 337, 338, 344, 348, 355, 357, 360, 363, 365, 369, 370, 371, 372, 374, 438, 439, 440, 441, 442, 443, 457, 497, 501, 515, 518, 519, 523, 524, 525, 532, 533, 542, 548, 563, 564, 595, 601, 603, 621, 629, 638, 650, 658, 667, 668, 669, 670, 671, 672, 673, 674, 786, 792, 796, 803, 805, 808, 810, 813, 814, 815, 816, 817, 819, 830, 832, 836, 838, 848, 850, 852, 853, 859, 863, 870, 872, 875, 877, 880, 881, 882, 883, 885, 886, 892, 896, 903, 905, 908, 911, 913, 917, 918, 919, 920, 922, 923, 929, 933, 940, 942, 945, 948, 950, 954, 955, 956, 957, 959, 1009, 1013, 1014, 1015, 1017, 1018, 1019, 1034, 1074, 1078, 1092, 1095, 1096, 1100, 1101, 1102, 1109, 1110, 1115, 1121, 1123, 1139, 1147, 1156, 1168, 1176, 1187, 1229, 1255, 1266, 1272, 1273, 1282, 1283, 1292, 1302, 1303, 1304, 1305], "offset": [1, 7, 16, 17, 18, 20, 26, 27, 28, 122, 129, 146, 147, 154, 155, 201, 268, 301, 327, 338, 364, 459, 469, 497, 542, 548, 560, 561, 562, 564, 576, 577, 579, 705, 712, 731, 732, 740, 741, 786, 853, 886, 912, 923, 949, 1036, 1046, 1074, 1235], "from": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 34, 35, 36, 37, 40, 41, 44, 49, 52, 55, 57, 60, 64, 65, 66, 67, 84, 86, 89, 93, 94, 95, 96, 113, 114, 115, 117, 120, 121, 122, 123, 124, 128, 133, 134, 135, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 152, 160, 165, 169, 171, 178, 185, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 219, 220, 225, 228, 229, 230, 231, 232, 235, 243, 245, 247, 248, 249, 251, 253, 254, 260, 261, 263, 265, 267, 268, 285, 286, 287, 292, 295, 296, 297, 298, 301, 318, 319, 320, 326, 328, 329, 332, 333, 334, 335, 338, 355, 356, 357, 363, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 426, 434, 436, 438, 439, 440, 442, 443, 447, 448, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 510, 512, 513, 518, 519, 521, 522, 523, 525, 526, 527, 530, 532, 534, 535, 536, 537, 538, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 571, 572, 573, 574, 575, 576, 577, 578, 581, 587, 588, 589, 590, 593, 595, 598, 603, 606, 609, 611, 614, 618, 619, 620, 621, 638, 640, 643, 647, 648, 649, 650, 667, 668, 669, 671, 674, 675, 677, 681, 683, 690, 697, 702, 705, 706, 707, 711, 716, 717, 718, 721, 722, 726, 727, 728, 729, 730, 731, 732, 734, 736, 737, 738, 746, 748, 749, 753, 755, 762, 769, 774, 777, 778, 779, 780, 781, 782, 783, 784, 786, 803, 804, 805, 810, 813, 814, 815, 816, 817, 820, 828, 830, 832, 833, 834, 836, 838, 839, 845, 846, 848, 850, 852, 853, 870, 871, 872, 877, 880, 881, 882, 883, 886, 903, 904, 905, 911, 913, 914, 917, 918, 919, 920, 923, 940, 941, 942, 948, 950, 951, 954, 955, 956, 957, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 986, 994, 996, 999, 1006, 1008, 1011, 1013, 1014, 1015, 1018, 1019, 1020, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1090, 1095, 1096, 1098, 1099, 1100, 1102, 1103, 1104, 1107, 1109, 1111, 1112, 1113, 1115, 1118, 1123, 1127, 1129, 1132, 1136, 1137, 1138, 1139, 1156, 1158, 1161, 1165, 1166, 1167, 1168, 1192, 1204, 1212, 1213, 1219, 1222, 1223, 1224, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1245, 1247, 1255, 1258, 1260, 1261, 1263, 1265, 1266, 1267, 1268, 1270, 1271, 1273, 1274, 1276, 1279, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1298, 1302, 1303, 1304, 1306, 1308], "origin": [1, 7, 20, 41, 49, 133, 134, 135, 201, 268, 301, 338, 390, 392, 393, 397, 427, 443, 542, 548, 564, 595, 603, 716, 717, 718, 786, 853, 886, 923, 977, 979, 980, 985, 987, 1019, 1115, 1123, 1212, 1213, 1231, 1255, 1266, 1267, 1268, 1291, 1292, 1296, 1306], "assum": [1, 7, 55, 84, 113, 114, 133, 136, 137, 138, 139, 150, 151, 152, 473, 474, 511, 513, 518, 523, 525, 526, 542, 548, 609, 638, 667, 668, 716, 719, 720, 721, 722, 736, 737, 738, 1050, 1051, 1088, 1090, 1095, 1100, 1102, 1103, 1127, 1156], "stereo": [1, 7, 542, 548], "polar": [1, 7, 24, 138, 139, 140, 143, 144, 145, 148, 150, 151, 152, 193, 384, 385, 499, 513, 525, 542, 548, 565, 573, 721, 722, 723, 727, 728, 729, 733, 736, 737, 738, 777, 971, 972, 1020, 1076, 1090, 1102], "correspond": [1, 7, 11, 20, 117, 120, 165, 217, 247, 248, 249, 263, 284, 317, 354, 378, 432, 443, 463, 482, 533, 539, 542, 548, 555, 564, 671, 674, 677, 749, 802, 832, 833, 834, 848, 869, 902, 939, 965, 992, 1003, 1019, 1040, 1059, 1110, 1219, 1223, 1225, 1226, 1227, 1236, 1237, 1238, 1239, 1262, 1274, 1300, 1304, 1306], "northwest": [1, 7, 20, 542, 548, 564], "corner": [1, 7, 20, 220, 287, 320, 327, 357, 364, 542, 548, 564, 805, 872, 905, 912, 942, 949, 1255], "metropolitan": [1, 7, 20, 542, 548, 564], "french": [1, 7, 20, 542, 548, 564], "composit": [1, 7, 20, 394, 542, 548, 564, 981, 1025, 1255, 1260, 1289], "9": [1, 7, 20, 26, 27, 125, 131, 132, 193, 232, 298, 335, 372, 384, 520, 527, 529, 542, 548, 564, 576, 577, 708, 714, 715, 777, 817, 883, 920, 957, 971, 1097, 1104, 1106, 1219, 1274, 1283, 1291, 1292, 1298, 1303, 1304], "965": [1, 7, 20, 542, 548, 564], "53": [1, 7, 20, 146, 147, 542, 548, 564, 731, 732], "670": [1, 7, 20, 542, 548, 564], "deg": [1, 7, 12, 20, 22, 23, 121, 136, 141, 149, 159, 193, 195, 199, 446, 462, 492, 493, 495, 498, 511, 513, 516, 520, 523, 542, 548, 556, 564, 571, 572, 675, 719, 724, 735, 745, 777, 779, 783, 1022, 1039, 1069, 1070, 1072, 1075, 1088, 1090, 1093, 1097, 1100, 1205, 1221, 1232, 1249, 1250, 1294], "latitud": [1, 7, 20, 41, 43, 46, 49, 51, 55, 66, 84, 95, 116, 117, 118, 120, 121, 157, 158, 201, 223, 224, 244, 246, 247, 248, 250, 251, 252, 260, 262, 264, 265, 266, 268, 290, 291, 301, 323, 324, 325, 327, 329, 338, 360, 361, 362, 364, 366, 443, 462, 492, 495, 542, 548, 564, 595, 597, 600, 603, 605, 609, 620, 638, 649, 670, 671, 672, 674, 675, 743, 744, 786, 808, 809, 829, 831, 832, 833, 835, 836, 837, 845, 847, 849, 850, 851, 853, 875, 876, 886, 908, 909, 910, 912, 914, 923, 945, 946, 947, 949, 951, 1016, 1019, 1039, 1069, 1072, 1115, 1117, 1120, 1123, 1127, 1138, 1156, 1167, 1205, 1222, 1223, 1224, 1232, 1248, 1260, 1261, 1272, 1279, 1286, 1290, 1292, 1298, 1299, 1304], "longitud": [1, 7, 20, 41, 43, 46, 49, 51, 55, 66, 84, 95, 116, 117, 118, 120, 121, 157, 158, 201, 223, 224, 244, 246, 247, 248, 250, 252, 253, 260, 262, 264, 266, 267, 268, 290, 291, 301, 323, 324, 325, 327, 329, 338, 360, 361, 362, 364, 366, 443, 462, 492, 495, 542, 548, 564, 595, 597, 600, 603, 605, 609, 620, 638, 649, 670, 671, 672, 674, 675, 743, 744, 786, 808, 809, 829, 831, 832, 833, 835, 837, 838, 845, 847, 849, 851, 852, 853, 875, 876, 886, 908, 909, 910, 912, 914, 923, 945, 946, 947, 949, 951, 1019, 1039, 1069, 1072, 1115, 1117, 1120, 1123, 1127, 1138, 1156, 1167, 1205, 1222, 1223, 1224, 1232, 1248, 1260, 1261, 1272, 1279, 1286, 1290, 1292, 1298, 1299, 1304], "stereograph": [1, 7, 542, 548], "can": [1, 2, 11, 12, 14, 16, 20, 22, 23, 24, 26, 27, 28, 40, 55, 64, 67, 84, 93, 96, 116, 118, 119, 123, 124, 131, 132, 133, 136, 138, 139, 142, 143, 144, 145, 150, 151, 152, 153, 165, 178, 190, 193, 194, 195, 196, 197, 198, 199, 200, 217, 284, 317, 354, 376, 384, 385, 387, 390, 394, 395, 396, 425, 442, 443, 450, 453, 457, 462, 466, 469, 470, 479, 485, 487, 492, 493, 495, 498, 499, 513, 516, 520, 523, 524, 525, 527, 529, 530, 533, 536, 537, 542, 543, 555, 556, 558, 560, 564, 571, 572, 573, 576, 577, 579, 580, 593, 609, 618, 621, 638, 647, 650, 670, 672, 673, 677, 690, 702, 706, 707, 714, 715, 716, 719, 721, 722, 726, 727, 728, 729, 730, 736, 737, 738, 739, 749, 762, 774, 777, 778, 779, 780, 781, 782, 783, 784, 802, 869, 902, 939, 963, 971, 972, 974, 977, 981, 982, 983, 1018, 1019, 1020, 1027, 1030, 1034, 1039, 1043, 1046, 1047, 1056, 1062, 1064, 1069, 1070, 1072, 1075, 1076, 1090, 1093, 1097, 1100, 1101, 1102, 1104, 1106, 1107, 1110, 1113, 1127, 1136, 1139, 1156, 1165, 1168, 1207, 1236, 1242, 1255, 1262, 1263, 1266, 1271, 1290, 1292, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "webmerc": [1, 20, 542, 564], "stere": [1, 20, 366, 542, 564, 951], "field": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 41, 42, 49, 55, 56, 57, 58, 59, 64, 67, 80, 84, 85, 86, 87, 88, 93, 96, 109, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 155, 165, 167, 169, 170, 171, 172, 173, 174, 176, 177, 181, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 217, 218, 219, 220, 225, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 284, 285, 286, 287, 292, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 313, 317, 318, 319, 320, 328, 329, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 350, 354, 355, 356, 357, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 534, 535, 536, 542, 544, 545, 546, 547, 548, 552, 554, 556, 557, 558, 559, 560, 561, 562, 564, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 585, 587, 588, 589, 590, 595, 596, 603, 609, 610, 611, 612, 613, 618, 621, 634, 638, 639, 640, 641, 642, 647, 650, 663, 676, 677, 679, 681, 682, 683, 684, 685, 686, 688, 689, 693, 695, 696, 697, 698, 700, 701, 703, 704, 705, 706, 707, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 730, 731, 732, 736, 737, 738, 740, 741, 749, 751, 753, 754, 755, 756, 757, 758, 760, 761, 765, 767, 768, 769, 770, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 798, 802, 803, 804, 805, 810, 813, 814, 815, 816, 817, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 865, 869, 870, 871, 872, 877, 880, 881, 882, 883, 886, 887, 888, 889, 890, 891, 892, 898, 902, 903, 904, 905, 913, 914, 917, 918, 919, 920, 923, 924, 925, 926, 927, 928, 929, 935, 939, 940, 941, 942, 950, 951, 954, 955, 956, 957, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 1011, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1112, 1113, 1115, 1116, 1123, 1127, 1128, 1129, 1130, 1131, 1136, 1139, 1152, 1156, 1157, 1158, 1159, 1160, 1165, 1168, 1181, 1187, 1188, 1189, 1190, 1192, 1195, 1196, 1197, 1198, 1204, 1205, 1206, 1207, 1209, 1224, 1229, 1230, 1232, 1247, 1249, 1250, 1251, 1252, 1255, 1257, 1260, 1262, 1266, 1267, 1268, 1271, 1272, 1274, 1285, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1306], "store": [1, 7, 12, 14, 20, 24, 26, 27, 28, 41, 55, 84, 133, 134, 135, 150, 151, 397, 422, 443, 462, 470, 479, 492, 493, 495, 529, 542, 548, 556, 558, 564, 573, 576, 577, 579, 595, 609, 638, 716, 717, 718, 736, 737, 985, 1019, 1025, 1039, 1047, 1056, 1069, 1070, 1072, 1106, 1115, 1127, 1156, 1255, 1262, 1290, 1296, 1299, 1302, 1304, 1308], "reader": [2, 12, 14, 543, 556, 558, 1255, 1263, 1296], "c": [2, 12, 14, 72, 101, 113, 117, 120, 122, 124, 128, 133, 135, 260, 366, 425, 452, 457, 462, 470, 472, 501, 515, 523, 524, 525, 530, 533, 536, 540, 543, 556, 558, 626, 655, 667, 671, 674, 705, 707, 711, 716, 718, 845, 951, 1029, 1034, 1039, 1047, 1049, 1078, 1092, 1100, 1101, 1102, 1107, 1110, 1113, 1144, 1173, 1192, 1220, 1255, 1266, 1296, 1299, 1302, 1305, 1306, 1308], "metranet": [2, 4, 5, 12, 14, 540, 543, 545, 546, 550, 551, 556, 558, 565, 566], "product": [2, 388, 390, 513, 536, 543, 975, 977, 1025, 1090, 1113, 1255], "librari": [2, 12, 14, 158, 377, 387, 390, 393, 394, 540, 543, 556, 558, 744, 964, 974, 977, 980, 981, 1255, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306], "either": [2, 12, 14, 16, 26, 27, 123, 124, 133, 134, 135, 138, 139, 142, 150, 151, 152, 160, 218, 219, 220, 225, 228, 229, 230, 231, 232, 243, 245, 247, 248, 249, 251, 253, 261, 263, 265, 267, 285, 286, 287, 292, 295, 296, 297, 298, 318, 319, 320, 328, 332, 333, 334, 335, 355, 356, 357, 365, 369, 370, 371, 372, 379, 436, 462, 470, 479, 492, 498, 502, 505, 506, 513, 520, 543, 556, 558, 560, 576, 577, 706, 707, 716, 717, 718, 721, 722, 726, 736, 737, 738, 746, 803, 804, 805, 810, 813, 814, 815, 816, 817, 828, 830, 832, 833, 834, 836, 838, 846, 848, 850, 852, 870, 871, 872, 877, 880, 881, 882, 883, 903, 904, 905, 913, 917, 918, 919, 920, 940, 941, 942, 950, 954, 955, 956, 957, 966, 996, 1006, 1039, 1047, 1056, 1069, 1075, 1079, 1082, 1083, 1090, 1097, 1292, 1296, 1305, 1306], "python": [2, 12, 14, 40, 394, 537, 543, 556, 558, 593, 981, 1255, 1260, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1308], "file_field_nam": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 30, 32, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 544, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 583, 585, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 983], "fals": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 42, 43, 50, 56, 57, 58, 61, 62, 64, 66, 67, 68, 85, 86, 87, 90, 91, 93, 95, 96, 97, 114, 118, 121, 122, 131, 133, 134, 135, 146, 147, 150, 151, 160, 165, 167, 169, 171, 177, 178, 181, 183, 185, 190, 191, 203, 218, 220, 225, 228, 229, 230, 231, 232, 235, 245, 247, 248, 249, 251, 253, 254, 260, 263, 265, 267, 270, 285, 287, 292, 295, 296, 297, 298, 303, 318, 320, 328, 329, 332, 333, 334, 335, 340, 355, 357, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 425, 429, 442, 443, 448, 457, 461, 468, 469, 471, 472, 474, 476, 477, 478, 483, 484, 487, 488, 489, 497, 499, 500, 502, 511, 520, 521, 522, 523, 524, 525, 527, 528, 540, 544, 545, 546, 547, 550, 551, 552, 556, 557, 558, 559, 560, 561, 562, 565, 566, 571, 572, 573, 574, 575, 576, 577, 579, 583, 596, 597, 604, 610, 611, 612, 615, 616, 618, 620, 621, 622, 639, 640, 641, 644, 645, 647, 649, 650, 651, 668, 672, 675, 677, 679, 681, 683, 689, 690, 693, 695, 697, 702, 703, 705, 714, 716, 717, 718, 731, 732, 736, 737, 746, 749, 751, 753, 755, 761, 762, 765, 767, 769, 774, 775, 788, 803, 805, 810, 813, 814, 815, 816, 817, 820, 830, 832, 833, 834, 836, 838, 839, 845, 848, 850, 852, 855, 870, 872, 877, 880, 881, 882, 883, 888, 903, 905, 913, 914, 917, 918, 919, 920, 925, 940, 942, 950, 951, 954, 955, 956, 957, 960, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 989, 1018, 1019, 1024, 1034, 1038, 1045, 1046, 1048, 1049, 1051, 1053, 1054, 1055, 1060, 1061, 1064, 1065, 1066, 1074, 1076, 1077, 1079, 1088, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1116, 1117, 1124, 1125, 1128, 1129, 1130, 1133, 1134, 1136, 1138, 1139, 1140, 1157, 1158, 1159, 1162, 1163, 1165, 1167, 1168, 1169, 1197, 1198, 1214, 1215, 1216, 1217, 1218, 1220, 1225, 1227, 1235, 1239, 1253, 1255, 1273, 1280, 1282, 1283, 1285, 1292, 1298, 1299, 1303, 1304, 1306], "exclude_field": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 30, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 544, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 583, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 983], "include_field": [3, 6, 8, 12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 30, 58, 87, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 544, 547, 552, 556, 557, 559, 560, 561, 562, 571, 572, 573, 574, 575, 583, 612, 641, 967, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 1130, 1159, 1255], "delay_field_load": [3, 4, 5, 25, 377, 380, 381, 384, 385, 386, 389, 391, 544, 545, 546, 575, 964, 967, 968, 971, 972, 973, 976, 978], "cf": [3, 4, 5, 11, 21, 25, 28, 55, 84, 380, 381, 392, 393, 512, 544, 545, 546, 555, 570, 575, 579, 609, 638, 967, 968, 979, 980, 1089, 1127, 1156, 1260, 1270, 1296, 1304], "netcdf": [3, 4, 5, 6, 11, 13, 15, 19, 25, 28, 50, 378, 379, 380, 381, 383, 387, 392, 393, 512, 544, 545, 546, 547, 549, 555, 557, 559, 563, 575, 579, 604, 965, 966, 967, 968, 970, 974, 979, 980, 1089, 1124, 1214, 1217, 1255, 1296, 1297], "radial": [3, 4, 5, 11, 21, 25, 28, 55, 84, 133, 134, 380, 381, 392, 448, 471, 472, 510, 511, 523, 535, 536, 544, 545, 546, 555, 570, 575, 579, 609, 638, 716, 717, 967, 968, 979, 1024, 1048, 1049, 1087, 1088, 1100, 1112, 1113, 1127, 1156, 1204, 1220, 1247, 1255, 1256, 1260, 1262, 1270, 1296, 1300, 1304], "map": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 30, 36, 41, 55, 84, 117, 120, 223, 247, 248, 249, 260, 290, 301, 323, 325, 326, 327, 329, 330, 338, 360, 362, 363, 364, 366, 367, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 436, 526, 544, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 583, 589, 595, 609, 638, 671, 674, 808, 832, 833, 834, 845, 875, 886, 908, 910, 911, 912, 914, 915, 923, 945, 947, 948, 949, 951, 952, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 996, 1006, 1025, 1103, 1115, 1127, 1156, 1255, 1266, 1270, 1272, 1273, 1290, 1292, 1296, 1297, 1306], "unlik": [3, 8, 13, 25, 380, 381, 544, 552, 557, 575, 967, 968], "other": [3, 8, 13, 24, 25, 41, 49, 51, 55, 84, 133, 134, 135, 136, 141, 193, 197, 218, 220, 225, 228, 229, 230, 231, 232, 247, 248, 249, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 377, 380, 381, 383, 386, 388, 390, 394, 403, 443, 497, 513, 527, 529, 530, 535, 544, 552, 557, 573, 575, 595, 603, 605, 609, 638, 716, 717, 718, 719, 724, 730, 777, 781, 803, 805, 810, 813, 814, 815, 816, 817, 832, 833, 834, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 914, 917, 918, 919, 920, 940, 942, 950, 951, 954, 955, 956, 957, 964, 967, 968, 970, 973, 975, 977, 981, 1009, 1019, 1074, 1090, 1104, 1106, 1107, 1112, 1115, 1123, 1127, 1156, 1188, 1189, 1190, 1292, 1296, 1298, 1305, 1306, 1308], "function": [3, 8, 11, 13, 25, 40, 66, 95, 141, 143, 144, 145, 162, 164, 193, 194, 195, 196, 197, 198, 199, 200, 217, 218, 225, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 284, 285, 292, 296, 297, 298, 301, 317, 318, 328, 333, 334, 335, 338, 354, 355, 365, 370, 371, 372, 377, 380, 381, 384, 385, 391, 394, 438, 439, 440, 442, 443, 444, 457, 463, 479, 482, 497, 523, 525, 531, 533, 535, 538, 544, 552, 555, 557, 575, 578, 582, 593, 594, 620, 649, 724, 727, 728, 729, 730, 748, 777, 778, 779, 780, 781, 782, 783, 784, 785, 802, 803, 810, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 869, 870, 877, 881, 882, 883, 886, 902, 903, 913, 918, 919, 920, 923, 939, 940, 950, 955, 956, 957, 960, 961, 964, 967, 968, 971, 972, 978, 981, 1008, 1009, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1025, 1034, 1040, 1056, 1059, 1074, 1100, 1102, 1108, 1110, 1112, 1114, 1138, 1167, 1199, 1224, 1230, 1235, 1236, 1237, 1246, 1247, 1253, 1254, 1255, 1271, 1290, 1292, 1296, 1300, 1302, 1304, 1305, 1306], "have": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 43, 55, 58, 66, 84, 87, 95, 122, 123, 124, 133, 169, 171, 178, 185, 190, 218, 229, 254, 285, 296, 318, 329, 333, 355, 370, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 446, 453, 493, 497, 513, 518, 527, 528, 544, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 597, 609, 612, 620, 638, 641, 649, 681, 683, 690, 697, 702, 705, 706, 707, 716, 753, 755, 762, 769, 774, 803, 814, 839, 870, 881, 903, 914, 918, 940, 955, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 1022, 1030, 1070, 1074, 1090, 1095, 1104, 1105, 1117, 1127, 1130, 1138, 1156, 1159, 1167, 1207, 1220, 1240, 1255, 1262, 1263, 1290, 1292, 1296, 1302, 1305, 1306, 1307, 1308], "ar": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 40, 41, 55, 66, 68, 84, 95, 97, 117, 120, 121, 122, 123, 124, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 147, 150, 151, 152, 178, 190, 193, 195, 196, 197, 198, 199, 200, 218, 224, 225, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 260, 263, 265, 267, 285, 291, 292, 296, 297, 298, 318, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 355, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 427, 440, 441, 442, 443, 448, 457, 463, 466, 471, 482, 483, 485, 487, 493, 497, 501, 502, 503, 505, 506, 510, 513, 520, 523, 525, 532, 535, 536, 538, 544, 547, 551, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 576, 577, 578, 579, 593, 595, 609, 620, 622, 638, 649, 651, 671, 674, 675, 690, 702, 705, 706, 707, 714, 715, 716, 717, 718, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 732, 736, 737, 738, 748, 762, 774, 777, 779, 780, 781, 782, 783, 784, 803, 809, 810, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 845, 848, 850, 852, 870, 876, 877, 881, 882, 883, 903, 909, 910, 911, 912, 913, 914, 915, 918, 919, 920, 940, 946, 947, 948, 949, 950, 951, 952, 955, 956, 957, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 979, 980, 981, 982, 983, 985, 987, 1015, 1017, 1018, 1019, 1024, 1025, 1034, 1040, 1043, 1048, 1059, 1060, 1062, 1064, 1070, 1074, 1078, 1079, 1080, 1082, 1083, 1087, 1090, 1097, 1100, 1102, 1109, 1112, 1113, 1115, 1127, 1138, 1140, 1156, 1167, 1169, 1188, 1189, 1190, 1212, 1213, 1219, 1222, 1233, 1234, 1236, 1238, 1239, 1248, 1253, 1255, 1258, 1260, 1262, 1263, 1266, 1271, 1273, 1274, 1282, 1285, 1290, 1292, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "still": [3, 8, 13, 25, 133, 301, 338, 380, 381, 396, 443, 544, 552, 557, 575, 716, 886, 923, 967, 968, 983, 1019, 1235, 1255, 1262, 1306], "exclud": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 30, 58, 87, 122, 123, 124, 147, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 187, 190, 193, 195, 196, 197, 198, 199, 200, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 396, 499, 523, 524, 525, 527, 530, 535, 536, 544, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 583, 612, 641, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 697, 699, 702, 705, 706, 707, 730, 732, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 769, 771, 774, 777, 779, 780, 781, 782, 783, 784, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 982, 983, 1076, 1100, 1101, 1102, 1104, 1107, 1112, 1113, 1130, 1159, 1258, 1267, 1303], "them": [3, 8, 13, 16, 17, 18, 25, 66, 95, 133, 134, 135, 136, 235, 254, 329, 380, 381, 390, 443, 499, 510, 528, 538, 544, 550, 552, 557, 560, 561, 562, 575, 620, 649, 716, 717, 718, 719, 820, 839, 914, 967, 968, 977, 1019, 1076, 1087, 1105, 1138, 1167, 1220, 1271, 1296, 1308], "which": [3, 8, 11, 13, 25, 26, 27, 29, 41, 43, 51, 52, 55, 60, 64, 77, 78, 80, 81, 84, 89, 93, 106, 107, 109, 110, 125, 126, 129, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 147, 150, 151, 152, 154, 155, 161, 162, 164, 165, 169, 171, 178, 185, 190, 193, 194, 195, 196, 197, 198, 199, 200, 218, 219, 223, 224, 225, 228, 229, 230, 231, 232, 235, 243, 245, 247, 248, 251, 253, 254, 260, 261, 263, 265, 267, 285, 286, 290, 291, 292, 295, 296, 297, 298, 318, 319, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 355, 356, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 376, 377, 379, 380, 381, 386, 387, 390, 391, 393, 394, 395, 396, 397, 422, 438, 439, 440, 441, 442, 443, 447, 448, 450, 452, 453, 457, 466, 468, 469, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 493, 498, 500, 510, 511, 512, 513, 520, 521, 522, 523, 524, 525, 527, 529, 532, 534, 535, 536, 544, 552, 555, 557, 575, 576, 577, 581, 595, 597, 605, 606, 609, 614, 618, 631, 632, 634, 635, 638, 643, 647, 660, 661, 663, 664, 677, 681, 683, 690, 697, 702, 708, 709, 712, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 730, 731, 732, 736, 737, 738, 740, 741, 749, 753, 755, 762, 769, 774, 777, 778, 779, 780, 781, 782, 783, 784, 803, 804, 808, 809, 810, 813, 814, 815, 816, 817, 820, 828, 830, 832, 833, 836, 838, 839, 845, 846, 848, 850, 852, 870, 871, 875, 876, 877, 880, 881, 882, 883, 903, 904, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 940, 941, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 963, 964, 966, 967, 968, 973, 974, 977, 978, 980, 981, 982, 983, 985, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1023, 1024, 1027, 1029, 1030, 1034, 1043, 1045, 1046, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1075, 1077, 1087, 1088, 1089, 1090, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1109, 1111, 1112, 1113, 1115, 1117, 1127, 1132, 1136, 1149, 1150, 1152, 1153, 1156, 1161, 1165, 1178, 1179, 1181, 1182, 1204, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1219, 1220, 1223, 1224, 1229, 1230, 1233, 1234, 1247, 1252, 1255, 1258, 1262, 1263, 1266, 1271, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1290, 1296, 1300, 1302, 1304, 1305, 1306], "renam": [3, 8, 13, 25, 40, 161, 162, 164, 380, 381, 391, 544, 552, 557, 575, 593, 967, 968, 978, 1255], "kei": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 28, 41, 42, 55, 56, 57, 84, 85, 86, 116, 118, 119, 133, 134, 135, 329, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 399, 401, 407, 412, 414, 422, 427, 429, 432, 433, 434, 436, 442, 443, 466, 485, 487, 488, 512, 513, 544, 545, 546, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 579, 595, 596, 609, 610, 611, 638, 639, 640, 670, 672, 673, 716, 717, 718, 914, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 979, 980, 982, 983, 984, 985, 987, 989, 992, 993, 994, 996, 998, 1003, 1004, 1006, 1018, 1019, 1043, 1062, 1064, 1065, 1089, 1090, 1115, 1116, 1127, 1128, 1129, 1156, 1157, 1158, 1192, 1298, 1299, 1303], "uniform": [3, 8, 11, 13, 25, 68, 97, 134, 135, 380, 381, 389, 448, 533, 544, 552, 555, 557, 575, 622, 651, 717, 718, 967, 968, 976, 1024, 1110, 1140, 1169, 1231, 1255, 1271, 1274, 1296, 1298], "bool": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 42, 43, 50, 56, 57, 58, 61, 62, 64, 66, 67, 68, 85, 86, 87, 90, 91, 93, 95, 96, 97, 114, 118, 121, 122, 131, 132, 133, 134, 135, 146, 147, 150, 151, 152, 165, 169, 171, 178, 185, 190, 203, 205, 218, 220, 225, 228, 229, 230, 231, 232, 235, 245, 247, 248, 249, 251, 253, 254, 260, 263, 265, 267, 270, 272, 285, 287, 292, 295, 296, 297, 298, 303, 305, 318, 320, 328, 329, 332, 333, 334, 335, 340, 342, 355, 357, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 443, 448, 452, 457, 461, 468, 469, 471, 472, 474, 476, 477, 478, 483, 484, 487, 488, 489, 497, 499, 500, 502, 505, 506, 513, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531, 532, 544, 545, 546, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 576, 577, 579, 583, 596, 597, 604, 610, 611, 612, 615, 616, 618, 620, 621, 622, 639, 640, 641, 644, 645, 647, 649, 650, 651, 668, 672, 675, 677, 681, 683, 690, 697, 702, 705, 714, 715, 716, 717, 718, 731, 732, 736, 737, 738, 749, 753, 755, 762, 769, 774, 788, 790, 803, 805, 810, 813, 814, 815, 816, 817, 820, 830, 832, 833, 834, 836, 838, 839, 845, 848, 850, 852, 855, 857, 870, 872, 877, 880, 881, 882, 883, 888, 890, 903, 905, 913, 914, 917, 918, 919, 920, 925, 927, 940, 942, 950, 951, 954, 955, 956, 957, 960, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 1019, 1024, 1029, 1034, 1038, 1045, 1046, 1048, 1049, 1051, 1053, 1054, 1055, 1060, 1061, 1064, 1065, 1066, 1074, 1076, 1077, 1079, 1082, 1083, 1090, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1108, 1109, 1116, 1117, 1124, 1128, 1129, 1130, 1133, 1134, 1136, 1138, 1139, 1140, 1157, 1158, 1159, 1162, 1163, 1165, 1167, 1168, 1169, 1220, 1235, 1253], "true": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 41, 42, 43, 50, 55, 56, 57, 58, 61, 62, 64, 66, 67, 68, 84, 85, 86, 87, 90, 91, 93, 95, 96, 97, 114, 118, 122, 131, 132, 133, 134, 135, 146, 147, 150, 151, 152, 157, 165, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 203, 205, 218, 220, 225, 228, 229, 230, 231, 232, 235, 245, 247, 248, 249, 251, 253, 254, 260, 263, 265, 267, 270, 272, 285, 287, 292, 295, 296, 297, 298, 303, 305, 318, 320, 328, 329, 332, 333, 334, 335, 340, 342, 355, 357, 365, 366, 369, 370, 371, 372, 376, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 425, 429, 442, 443, 448, 452, 457, 461, 468, 469, 471, 472, 476, 477, 478, 483, 484, 487, 488, 489, 497, 499, 500, 502, 505, 506, 511, 513, 520, 523, 524, 525, 527, 528, 529, 531, 532, 540, 544, 545, 546, 547, 550, 551, 552, 556, 557, 558, 559, 560, 561, 562, 565, 566, 571, 572, 573, 574, 575, 576, 577, 579, 583, 595, 596, 597, 604, 609, 610, 611, 612, 615, 616, 618, 620, 621, 622, 638, 639, 640, 641, 644, 645, 647, 649, 650, 651, 668, 672, 677, 679, 681, 682, 683, 684, 685, 686, 688, 689, 690, 693, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 714, 715, 716, 717, 718, 725, 731, 732, 736, 737, 738, 743, 749, 751, 753, 754, 755, 756, 757, 758, 760, 761, 762, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776, 788, 790, 803, 805, 810, 813, 814, 815, 816, 817, 820, 830, 832, 833, 834, 836, 838, 839, 845, 848, 850, 852, 855, 857, 870, 872, 877, 880, 881, 882, 883, 888, 890, 903, 905, 913, 914, 917, 918, 919, 920, 925, 927, 940, 942, 950, 951, 954, 955, 956, 957, 960, 963, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 989, 1018, 1019, 1024, 1029, 1034, 1038, 1045, 1046, 1048, 1049, 1053, 1054, 1055, 1060, 1061, 1064, 1065, 1066, 1074, 1076, 1077, 1079, 1082, 1083, 1088, 1090, 1097, 1100, 1101, 1102, 1104, 1105, 1106, 1108, 1109, 1115, 1116, 1117, 1124, 1125, 1127, 1128, 1129, 1130, 1133, 1134, 1136, 1138, 1139, 1140, 1156, 1157, 1158, 1159, 1162, 1163, 1165, 1167, 1168, 1169, 1197, 1198, 1220, 1235, 1253, 1255, 1273, 1280, 1281, 1282, 1283, 1292, 1294, 1299, 1300, 1304, 1306], "forc": [3, 8, 13, 16, 17, 18, 25, 380, 381, 391, 448, 528, 544, 552, 557, 560, 561, 562, 575, 967, 968, 978, 1024, 1105, 1240, 1255], "case": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 35, 116, 118, 119, 133, 135, 178, 190, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 436, 513, 544, 545, 546, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 576, 577, 588, 670, 672, 673, 690, 702, 716, 718, 762, 774, 961, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 996, 1006, 1090, 1255, 1262, 1263, 1266, 1283, 1306], "ignor": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 133, 134, 135, 218, 220, 225, 228, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 448, 544, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 716, 717, 718, 803, 805, 810, 813, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 914, 917, 918, 919, 920, 940, 942, 950, 951, 954, 955, 956, 957, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 1024, 1255, 1266], "list": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 30, 58, 87, 131, 132, 140, 194, 201, 220, 224, 227, 248, 254, 268, 287, 291, 294, 301, 320, 324, 331, 338, 357, 361, 368, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 443, 457, 462, 463, 468, 469, 470, 479, 482, 492, 493, 495, 512, 519, 544, 545, 546, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 576, 577, 583, 612, 641, 714, 715, 723, 778, 786, 805, 809, 812, 833, 839, 853, 872, 876, 879, 886, 905, 909, 916, 923, 942, 946, 953, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 982, 983, 1011, 1019, 1034, 1039, 1040, 1045, 1046, 1047, 1056, 1059, 1069, 1070, 1072, 1089, 1096, 1130, 1159, 1207, 1212, 1213, 1223, 1255, 1262, 1306, 1307], "appli": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 55, 58, 84, 87, 127, 130, 131, 132, 134, 135, 141, 146, 147, 148, 159, 193, 196, 197, 218, 219, 225, 228, 229, 230, 231, 232, 243, 261, 285, 286, 292, 295, 296, 297, 298, 318, 319, 328, 329, 332, 333, 334, 335, 355, 356, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 441, 443, 452, 466, 468, 471, 484, 485, 487, 488, 497, 502, 527, 529, 544, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 609, 612, 638, 641, 710, 713, 714, 715, 717, 718, 724, 730, 731, 732, 733, 745, 777, 780, 781, 803, 804, 810, 813, 814, 815, 816, 817, 828, 846, 870, 871, 877, 880, 881, 882, 883, 903, 904, 913, 914, 917, 918, 919, 920, 940, 941, 950, 951, 954, 955, 956, 957, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 982, 1009, 1017, 1019, 1025, 1029, 1043, 1045, 1048, 1061, 1062, 1064, 1065, 1074, 1079, 1104, 1106, 1127, 1130, 1156, 1159, 1219, 1220, 1255, 1262, 1271, 1282, 1292, 1300], "after": [3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 133, 134, 164, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 397, 513, 523, 544, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 716, 717, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 985, 1090, 1100, 1220, 1255, 1263, 1292, 1305, 1306, 1308], "set": [3, 6, 8, 12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 40, 41, 55, 66, 67, 68, 84, 95, 96, 97, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 134, 135, 146, 147, 150, 151, 165, 169, 171, 178, 185, 190, 193, 195, 196, 197, 198, 199, 200, 218, 220, 225, 228, 229, 230, 231, 232, 233, 234, 247, 248, 249, 285, 287, 292, 295, 296, 297, 298, 299, 300, 318, 320, 328, 329, 332, 333, 334, 335, 336, 337, 355, 357, 365, 366, 369, 370, 371, 372, 373, 374, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 422, 430, 431, 434, 435, 443, 471, 479, 501, 502, 503, 505, 506, 513, 523, 524, 525, 544, 547, 552, 556, 557, 559, 560, 561, 562, 571, 572, 573, 574, 575, 576, 577, 579, 593, 595, 609, 620, 621, 622, 638, 649, 650, 651, 670, 671, 672, 673, 674, 675, 677, 681, 683, 690, 697, 702, 705, 706, 707, 716, 717, 718, 730, 731, 732, 736, 737, 749, 753, 755, 762, 769, 774, 777, 779, 780, 781, 782, 783, 784, 803, 805, 810, 813, 814, 815, 816, 817, 818, 819, 832, 833, 834, 870, 872, 877, 880, 881, 882, 883, 884, 885, 903, 905, 913, 914, 917, 918, 919, 920, 921, 922, 940, 942, 950, 951, 954, 955, 956, 957, 958, 959, 967, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 983, 990, 991, 994, 995, 1001, 1002, 1005, 1019, 1048, 1056, 1078, 1079, 1080, 1082, 1083, 1090, 1100, 1101, 1102, 1115, 1127, 1138, 1139, 1140, 1156, 1167, 1168, 1169, 1188, 1189, 1190, 1197, 1198, 1204, 1207, 1240, 1243, 1244, 1255, 1263, 1266, 1272, 1279, 1282, 1283, 1286, 1287, 1292, 1296, 1300, 1305, 1306, 1307], "all": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 41, 43, 55, 58, 66, 67, 84, 87, 95, 96, 114, 133, 134, 135, 139, 140, 141, 146, 147, 150, 151, 152, 165, 168, 175, 178, 182, 187, 190, 193, 197, 218, 224, 225, 228, 229, 230, 231, 232, 247, 248, 285, 291, 292, 295, 296, 297, 298, 318, 324, 328, 329, 332, 333, 334, 335, 355, 361, 365, 366, 369, 370, 371, 372, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 412, 426, 441, 442, 443, 448, 462, 470, 479, 492, 495, 497, 512, 513, 519, 523, 525, 538, 544, 545, 546, 547, 552, 556, 557, 558, 559, 560, 561, 562, 571, 572, 573, 574, 575, 576, 577, 578, 595, 597, 609, 612, 620, 621, 638, 641, 649, 650, 668, 677, 680, 687, 690, 694, 699, 702, 716, 717, 718, 722, 723, 724, 730, 731, 732, 736, 737, 738, 749, 752, 759, 762, 766, 771, 774, 777, 781, 803, 809, 810, 813, 814, 815, 816, 817, 832, 833, 870, 876, 877, 880, 881, 882, 883, 903, 909, 913, 914, 917, 918, 919, 920, 940, 946, 950, 951, 954, 955, 956, 957, 960, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 982, 986, 998, 999, 1017, 1018, 1019, 1024, 1039, 1047, 1056, 1069, 1072, 1074, 1089, 1090, 1096, 1100, 1102, 1115, 1117, 1127, 1130, 1138, 1139, 1156, 1159, 1167, 1168, 1207, 1219, 1254, 1255, 1260, 1271, 1290, 1291, 1292, 1294, 1296, 1304, 1306, 1308], "delai": [3, 4, 5, 25, 377, 380, 381, 384, 385, 386, 389, 544, 545, 546, 575, 964, 967, 968, 971, 972, 973, 976, 1220, 1255], "load": [3, 4, 5, 25, 40, 377, 380, 381, 384, 385, 386, 389, 397, 434, 540, 544, 545, 546, 575, 593, 964, 967, 968, 971, 972, 973, 976, 984, 985, 994, 1255, 1304], "until": [3, 4, 5, 25, 40, 134, 377, 380, 381, 384, 385, 386, 389, 544, 545, 546, 575, 593, 717, 964, 967, 968, 971, 972, 973, 976], "particular": [3, 4, 5, 25, 377, 380, 381, 384, 385, 386, 389, 443, 493, 514, 527, 544, 545, 546, 575, 964, 967, 968, 971, 972, 973, 976, 1019, 1070, 1091, 1104, 1296], "access": [3, 4, 5, 25, 30, 41, 55, 66, 67, 84, 95, 96, 165, 377, 380, 381, 384, 385, 386, 389, 397, 544, 545, 546, 575, 583, 595, 609, 620, 621, 638, 649, 650, 677, 749, 964, 967, 968, 971, 972, 973, 976, 985, 1115, 1127, 1138, 1139, 1156, 1167, 1168, 1186, 1262, 1263, 1302, 1304], "In": [3, 4, 5, 25, 26, 27, 116, 118, 119, 135, 141, 377, 380, 381, 384, 385, 386, 388, 389, 436, 493, 523, 536, 544, 545, 546, 575, 576, 577, 670, 672, 673, 718, 724, 961, 964, 967, 968, 971, 972, 973, 975, 976, 996, 1006, 1009, 1025, 1070, 1100, 1113, 1204, 1257, 1258, 1263, 1292, 1296, 1299, 1300, 1302, 1303, 1305, 1306], "attribut": [3, 4, 5, 16, 17, 18, 25, 26, 27, 28, 41, 44, 45, 46, 47, 48, 55, 66, 67, 73, 74, 75, 76, 84, 95, 96, 102, 103, 104, 105, 133, 161, 165, 178, 190, 218, 225, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 377, 380, 381, 382, 384, 385, 386, 389, 392, 393, 396, 474, 544, 545, 546, 560, 561, 562, 575, 576, 577, 579, 595, 598, 599, 600, 601, 602, 609, 620, 621, 627, 628, 629, 630, 638, 649, 650, 656, 657, 658, 659, 677, 690, 702, 716, 749, 762, 774, 803, 810, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 964, 967, 968, 969, 971, 972, 973, 976, 979, 980, 983, 1051, 1115, 1118, 1119, 1120, 1121, 1122, 1127, 1138, 1139, 1145, 1146, 1147, 1148, 1156, 1167, 1168, 1174, 1175, 1176, 1177, 1298, 1304], "lazyloaddict": [3, 4, 5, 25, 41, 55, 84, 377, 380, 381, 384, 385, 386, 389, 544, 545, 546, 575, 595, 609, 638, 964, 967, 968, 971, 972, 973, 976, 1115, 1127, 1156], "provid": [3, 4, 5, 6, 11, 25, 55, 58, 84, 87, 133, 224, 248, 291, 324, 329, 361, 379, 380, 381, 382, 387, 390, 394, 395, 396, 397, 430, 431, 437, 513, 520, 544, 545, 546, 547, 555, 575, 609, 612, 638, 641, 716, 809, 833, 876, 909, 914, 946, 966, 967, 968, 969, 974, 977, 981, 982, 983, 985, 990, 991, 997, 998, 1001, 1002, 1007, 1009, 1090, 1097, 1127, 1130, 1156, 1159, 1230, 1247, 1254, 1263, 1290, 1292, 1296, 1303, 1305, 1306], "speedup": [3, 4, 5, 25, 247, 248, 329, 366, 380, 381, 544, 545, 546, 575, 832, 833, 914, 951, 967, 968, 1255], "where": [3, 4, 5, 25, 66, 67, 95, 96, 113, 117, 120, 123, 124, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 147, 154, 155, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 197, 218, 225, 228, 229, 230, 231, 232, 246, 262, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 380, 381, 462, 470, 471, 479, 492, 493, 495, 497, 511, 526, 527, 529, 536, 544, 545, 546, 575, 578, 620, 621, 649, 650, 667, 671, 674, 679, 681, 682, 683, 684, 685, 686, 688, 689, 690, 693, 695, 696, 697, 698, 700, 701, 702, 703, 704, 706, 707, 712, 714, 715, 716, 717, 718, 720, 721, 722, 723, 726, 730, 732, 740, 741, 751, 753, 754, 755, 756, 757, 758, 760, 761, 762, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 780, 781, 803, 810, 813, 814, 815, 816, 817, 831, 847, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957, 960, 967, 968, 1025, 1039, 1047, 1048, 1056, 1069, 1070, 1072, 1074, 1088, 1103, 1104, 1106, 1113, 1138, 1139, 1167, 1168, 1207, 1212, 1213, 1221, 1222, 1230, 1252, 1255, 1262, 1263, 1266, 1271, 1274, 1290, 1292, 1296, 1299, 1303, 1308], "number": [3, 4, 5, 12, 14, 24, 25, 28, 40, 41, 55, 61, 62, 64, 65, 66, 67, 68, 84, 90, 91, 93, 94, 95, 96, 97, 122, 123, 124, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 160, 217, 221, 225, 226, 228, 229, 230, 231, 248, 284, 288, 292, 293, 295, 296, 297, 317, 321, 328, 329, 330, 332, 333, 334, 354, 358, 365, 366, 367, 369, 370, 371, 380, 381, 388, 394, 395, 414, 441, 442, 443, 453, 457, 462, 466, 467, 470, 471, 472, 479, 485, 492, 498, 499, 500, 510, 519, 521, 522, 523, 525, 527, 529, 531, 533, 538, 544, 545, 546, 556, 558, 573, 575, 579, 593, 595, 609, 615, 616, 618, 619, 620, 621, 622, 638, 644, 645, 647, 648, 649, 650, 651, 705, 706, 707, 712, 714, 715, 716, 717, 719, 720, 721, 722, 724, 725, 726, 727, 728, 731, 732, 734, 736, 737, 738, 739, 740, 741, 746, 802, 806, 810, 811, 813, 814, 815, 816, 833, 869, 873, 877, 878, 880, 881, 882, 902, 906, 913, 914, 915, 917, 918, 919, 939, 943, 950, 951, 952, 954, 955, 956, 961, 967, 968, 975, 981, 982, 1017, 1018, 1019, 1020, 1030, 1034, 1039, 1043, 1044, 1047, 1048, 1049, 1056, 1062, 1069, 1075, 1076, 1077, 1087, 1096, 1098, 1099, 1100, 1102, 1104, 1106, 1108, 1110, 1115, 1127, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1156, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1187, 1188, 1189, 1190, 1207, 1209, 1219, 1220, 1225, 1226, 1227, 1236, 1237, 1238, 1239, 1253, 1271, 1273, 1296, 1304, 1306], "gate": [3, 4, 5, 25, 55, 65, 66, 67, 84, 94, 95, 96, 113, 114, 115, 122, 123, 124, 129, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 146, 147, 150, 151, 152, 154, 155, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 218, 225, 229, 230, 231, 245, 251, 253, 263, 265, 267, 268, 285, 292, 296, 297, 301, 318, 328, 329, 333, 334, 338, 355, 365, 366, 370, 371, 380, 381, 386, 387, 388, 389, 441, 442, 443, 471, 472, 499, 508, 509, 510, 523, 524, 525, 526, 527, 528, 529, 530, 535, 536, 544, 545, 546, 575, 609, 619, 620, 621, 638, 648, 649, 650, 667, 668, 669, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 712, 716, 717, 718, 719, 720, 721, 722, 724, 726, 728, 730, 731, 732, 736, 737, 738, 740, 741, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 803, 810, 814, 815, 816, 830, 836, 838, 848, 850, 852, 853, 870, 877, 881, 882, 886, 903, 913, 914, 918, 919, 923, 940, 950, 951, 955, 956, 967, 968, 973, 974, 975, 976, 1009, 1017, 1018, 1019, 1020, 1048, 1049, 1076, 1085, 1086, 1087, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1112, 1113, 1127, 1137, 1138, 1139, 1156, 1166, 1167, 1168, 1188, 1189, 1190, 1204, 1205, 1206, 1220, 1221, 1223, 1224, 1229, 1232, 1255, 1258, 1266, 1267, 1268, 1272, 1298, 1300, 1302, 1303, 1304], "vari": [3, 4, 5, 25, 380, 381, 384, 544, 545, 546, 575, 967, 968, 971, 1240, 1292], "between": [3, 4, 5, 12, 22, 23, 25, 26, 27, 43, 55, 66, 67, 84, 95, 96, 114, 117, 118, 131, 132, 133, 134, 136, 141, 143, 144, 145, 152, 178, 190, 193, 196, 197, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 380, 381, 386, 389, 395, 396, 455, 457, 497, 502, 510, 513, 528, 529, 544, 545, 546, 556, 571, 572, 575, 576, 577, 597, 609, 620, 621, 638, 649, 650, 668, 671, 672, 690, 702, 714, 715, 716, 717, 719, 724, 727, 728, 729, 730, 738, 762, 774, 777, 780, 781, 803, 810, 814, 815, 816, 817, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 960, 967, 968, 973, 976, 982, 983, 1009, 1032, 1034, 1074, 1079, 1087, 1090, 1105, 1106, 1117, 1127, 1138, 1139, 1156, 1167, 1168, 1199, 1206, 1208, 1210, 1211, 1238, 1239, 1248, 1266, 1272, 1282, 1292, 1300, 1302, 1306, 1308], "rai": [3, 4, 5, 25, 27, 55, 63, 66, 67, 68, 69, 70, 71, 84, 92, 95, 96, 97, 98, 99, 100, 114, 122, 123, 124, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 147, 150, 151, 152, 178, 190, 196, 202, 204, 207, 209, 210, 218, 225, 228, 229, 230, 231, 232, 245, 251, 253, 263, 265, 267, 269, 271, 274, 276, 277, 285, 292, 295, 296, 297, 298, 302, 304, 307, 309, 310, 318, 328, 329, 332, 333, 334, 335, 339, 341, 344, 346, 347, 355, 365, 366, 369, 370, 371, 372, 379, 380, 381, 386, 389, 390, 445, 448, 467, 472, 499, 527, 528, 529, 535, 544, 545, 546, 575, 577, 609, 617, 620, 621, 622, 623, 624, 625, 638, 646, 649, 650, 651, 652, 653, 654, 668, 690, 702, 705, 706, 707, 714, 715, 716, 717, 718, 720, 721, 722, 724, 726, 727, 728, 732, 736, 737, 738, 762, 774, 780, 787, 789, 792, 794, 795, 803, 810, 813, 814, 815, 816, 817, 830, 836, 838, 848, 850, 852, 854, 856, 859, 861, 862, 870, 877, 880, 881, 882, 883, 887, 889, 892, 894, 895, 903, 913, 914, 917, 918, 919, 920, 924, 926, 929, 931, 932, 940, 950, 951, 954, 955, 956, 957, 966, 967, 968, 973, 976, 977, 1009, 1024, 1044, 1049, 1076, 1104, 1105, 1106, 1112, 1127, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1156, 1164, 1167, 1168, 1169, 1170, 1171, 1172, 1188, 1189, 1190, 1192, 1209, 1216, 1218, 1220, 1221, 1223, 1225, 1226, 1227, 1236, 1237, 1238, 1239, 1252, 1253, 1267, 1298, 1304, 1306], "ngates_vari": [3, 4, 5, 25, 380, 381, 544, 545, 546, 575, 967, 968], "recommend": [3, 4, 5, 25, 40, 55, 84, 133, 135, 366, 380, 381, 390, 443, 497, 523, 544, 545, 546, 575, 593, 609, 638, 716, 718, 951, 967, 968, 977, 1019, 1074, 1100, 1127, 1156, 1204, 1271, 1296, 1305, 1306, 1307, 1308], "note": [3, 11, 25, 57, 86, 113, 133, 141, 169, 171, 178, 185, 190, 247, 248, 329, 380, 381, 384, 385, 395, 518, 523, 535, 544, 555, 575, 611, 640, 667, 681, 683, 690, 697, 702, 716, 724, 753, 755, 762, 769, 774, 832, 833, 914, 967, 968, 971, 972, 982, 1095, 1100, 1112, 1129, 1158, 1255, 1262, 1263, 1273, 1292, 1305, 1306], "ha": [3, 6, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 55, 84, 128, 133, 161, 162, 164, 203, 239, 254, 255, 270, 303, 338, 340, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 395, 429, 436, 500, 502, 505, 506, 544, 547, 555, 556, 558, 559, 560, 561, 562, 565, 566, 571, 572, 573, 574, 575, 578, 609, 638, 711, 716, 788, 824, 839, 840, 855, 888, 923, 925, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 982, 989, 996, 1006, 1008, 1077, 1079, 1082, 1083, 1127, 1156, 1192, 1219, 1231, 1252, 1262, 1271, 1292, 1296, 1302, 1304, 1305, 1306, 1308], "been": [3, 11, 24, 25, 128, 133, 161, 162, 164, 169, 171, 178, 185, 190, 254, 338, 380, 381, 383, 386, 387, 388, 390, 500, 544, 555, 565, 566, 573, 575, 681, 683, 690, 697, 702, 711, 716, 753, 755, 762, 769, 774, 839, 923, 967, 968, 970, 973, 974, 975, 977, 1077, 1207, 1219, 1262, 1292, 1296, 1302, 1305, 1306], "test": [3, 11, 24, 25, 133, 380, 381, 386, 388, 397, 457, 490, 491, 538, 544, 555, 573, 575, 716, 967, 968, 973, 975, 985, 1034, 1067, 1068, 1255, 1257, 1258, 1266, 1267, 1268, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1296, 1298], "stream": [3, 11, 25, 72, 101, 380, 381, 537, 544, 555, 575, 626, 655, 967, 968, 1144, 1173], "cfradial": [3, 11, 25, 380, 381, 544, 555, 575, 578, 967, 968, 1255, 1260, 1270, 1271, 1285, 1287, 1298], "If": [4, 5, 6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 26, 27, 40, 41, 42, 55, 57, 58, 59, 66, 84, 86, 87, 88, 95, 116, 118, 119, 121, 125, 127, 131, 132, 133, 136, 140, 141, 144, 150, 151, 152, 178, 190, 193, 196, 197, 203, 205, 218, 219, 224, 225, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 285, 286, 291, 292, 296, 297, 298, 303, 305, 318, 319, 324, 327, 328, 329, 333, 334, 335, 340, 342, 355, 356, 361, 364, 365, 366, 370, 371, 372, 377, 379, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 425, 432, 436, 443, 446, 452, 457, 461, 462, 463, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 482, 483, 484, 487, 488, 489, 492, 493, 495, 497, 499, 500, 501, 502, 503, 505, 506, 510, 511, 512, 513, 520, 523, 524, 525, 526, 527, 528, 531, 532, 540, 545, 546, 547, 550, 551, 556, 558, 559, 560, 561, 562, 565, 566, 571, 572, 573, 574, 576, 577, 593, 595, 596, 609, 611, 612, 613, 620, 638, 640, 641, 642, 649, 670, 672, 673, 675, 690, 702, 708, 710, 714, 715, 716, 719, 723, 724, 728, 730, 736, 737, 738, 762, 774, 777, 780, 781, 788, 790, 803, 804, 809, 810, 814, 815, 816, 817, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 845, 846, 847, 848, 849, 850, 851, 852, 855, 857, 870, 871, 876, 877, 881, 882, 883, 888, 890, 903, 904, 909, 912, 913, 914, 918, 919, 920, 925, 927, 940, 941, 946, 949, 950, 951, 955, 956, 957, 960, 964, 966, 969, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 985, 992, 996, 1003, 1006, 1019, 1022, 1029, 1034, 1038, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1064, 1065, 1066, 1069, 1070, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1087, 1088, 1089, 1090, 1097, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1115, 1116, 1127, 1129, 1130, 1131, 1138, 1156, 1158, 1159, 1160, 1167, 1207, 1212, 1213, 1219, 1220, 1238, 1239, 1240, 1249, 1250, 1292, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "read_altitude_from_nc": [6, 547], "d3r": [6, 547, 1255], "gcpex": [6, 547], "odim_h5": [6, 16, 17, 18, 26, 27, 547, 560, 561, 562, 576, 577, 1255], "found": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 40, 131, 132, 136, 137, 163, 377, 382, 384, 385, 386, 387, 389, 390, 391, 432, 442, 443, 500, 512, 547, 556, 558, 559, 560, 561, 562, 571, 572, 573, 574, 593, 714, 715, 719, 720, 964, 969, 971, 972, 973, 974, 976, 977, 978, 992, 1003, 1018, 1019, 1025, 1077, 1089, 1236, 1255, 1263, 1296, 1305, 1306, 1308], "doe": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 59, 88, 116, 118, 119, 133, 134, 135, 218, 220, 225, 228, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 411, 436, 547, 556, 558, 559, 560, 561, 562, 571, 572, 573, 574, 613, 642, 670, 672, 673, 716, 717, 718, 803, 805, 810, 813, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 914, 917, 918, 919, 920, 940, 942, 950, 951, 954, 955, 956, 957, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 996, 1006, 1131, 1160, 1253, 1255, 1283, 1296, 1298, 1305, 1306, 1308], "appear": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 547, 556, 558, 559, 560, 561, 562, 571, 572, 573, 574, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 1235], "place": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 142, 219, 223, 224, 243, 246, 261, 262, 286, 290, 291, 319, 323, 324, 356, 360, 361, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 395, 396, 453, 529, 547, 556, 558, 559, 560, 561, 562, 571, 572, 573, 574, 726, 804, 808, 809, 828, 831, 846, 847, 871, 875, 876, 904, 908, 909, 941, 945, 946, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 982, 983, 1030, 1106, 1253, 1255, 1302, 1305], "defin": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 26, 27, 41, 55, 84, 116, 118, 119, 122, 123, 124, 129, 131, 132, 133, 136, 137, 138, 139, 140, 142, 146, 147, 150, 151, 152, 154, 155, 193, 194, 195, 196, 197, 198, 199, 200, 223, 224, 228, 290, 291, 295, 323, 324, 332, 360, 361, 369, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 396, 442, 443, 448, 479, 493, 498, 513, 520, 521, 522, 523, 527, 528, 529, 532, 547, 556, 558, 559, 560, 561, 562, 571, 572, 573, 574, 576, 577, 595, 609, 638, 670, 672, 673, 705, 706, 707, 712, 714, 715, 716, 719, 720, 721, 722, 723, 726, 730, 731, 732, 736, 737, 738, 740, 741, 777, 778, 779, 780, 781, 782, 783, 784, 808, 809, 813, 875, 876, 880, 908, 909, 917, 945, 946, 954, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 983, 1018, 1019, 1024, 1056, 1070, 1075, 1090, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1109, 1115, 1127, 1156, 1204, 1255, 1272, 1273, 1290, 1292], "mdv": [6, 12, 14, 16, 17, 18, 22, 23, 24, 384, 385, 395, 547, 556, 558, 560, 561, 562, 571, 572, 573, 574, 971, 972, 982, 1255, 1258, 1260, 1267, 1270, 1296, 1300, 1302], "like": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 35, 51, 52, 72, 101, 116, 117, 119, 120, 121, 134, 135, 376, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 430, 431, 499, 527, 528, 529, 537, 547, 556, 558, 559, 560, 561, 562, 571, 572, 573, 574, 588, 605, 606, 626, 655, 670, 671, 673, 674, 675, 717, 718, 963, 964, 969, 971, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 990, 991, 1001, 1002, 1025, 1076, 1104, 1105, 1106, 1144, 1173, 1195, 1196, 1197, 1198, 1200, 1201, 1202, 1203, 1219, 1220, 1233, 1255, 1262, 1263, 1266, 1296, 1298, 1300, 1302, 1306], "onli": [6, 12, 14, 15, 16, 17, 18, 22, 23, 24, 60, 66, 67, 89, 95, 96, 122, 123, 124, 128, 133, 135, 137, 142, 146, 147, 150, 151, 152, 165, 218, 229, 247, 248, 285, 296, 318, 329, 333, 355, 366, 370, 377, 382, 384, 385, 386, 387, 388, 389, 390, 443, 499, 513, 523, 547, 556, 558, 559, 560, 561, 562, 571, 572, 573, 574, 578, 614, 620, 621, 643, 649, 650, 677, 705, 706, 707, 711, 716, 718, 720, 726, 731, 732, 736, 737, 738, 749, 803, 814, 832, 833, 870, 881, 903, 914, 918, 940, 951, 955, 964, 969, 971, 972, 973, 974, 975, 976, 977, 1019, 1076, 1090, 1100, 1132, 1138, 1139, 1161, 1167, 1168, 1212, 1213, 1225, 1235, 1242, 1249, 1250, 1255, 1266, 1273, 1283, 1292, 1299, 1300, 1302, 1306], "you": [6, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 499, 547, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1076, 1262, 1292, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "want": [6, 547, 1263, 1296, 1303, 1304, 1306, 1308], "altitud": [6, 41, 55, 66, 84, 95, 121, 125, 126, 131, 132, 143, 146, 147, 201, 232, 298, 335, 372, 443, 453, 513, 516, 517, 529, 532, 547, 595, 609, 620, 638, 649, 675, 708, 709, 714, 715, 727, 731, 732, 786, 817, 883, 920, 957, 1019, 1020, 1025, 1030, 1090, 1093, 1094, 1106, 1109, 1115, 1127, 1138, 1156, 1167, 1205, 1222, 1232, 1248, 1255, 1283, 1294, 1298, 1302, 1304], "np": [6, 12, 14, 24, 467, 536, 547, 556, 558, 573, 1009, 1044, 1113, 1246, 1255, 1266, 1267, 1271, 1274, 1279, 1282, 1283, 1285, 1290, 1292, 1293, 1294, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "arrai": [6, 12, 14, 24, 41, 43, 49, 51, 52, 57, 61, 62, 64, 65, 66, 67, 68, 86, 90, 91, 93, 94, 95, 96, 97, 113, 114, 115, 116, 117, 118, 119, 120, 121, 133, 134, 135, 141, 142, 153, 156, 159, 160, 165, 169, 171, 178, 185, 190, 201, 207, 218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 247, 248, 249, 251, 253, 260, 261, 263, 265, 267, 268, 274, 285, 286, 287, 292, 296, 297, 298, 301, 307, 318, 319, 320, 325, 326, 328, 329, 333, 334, 335, 338, 344, 355, 356, 357, 362, 363, 365, 366, 370, 371, 372, 442, 443, 444, 445, 446, 457, 467, 497, 498, 500, 517, 520, 524, 525, 526, 531, 533, 535, 536, 539, 547, 550, 551, 556, 558, 565, 566, 573, 595, 597, 603, 605, 606, 611, 615, 616, 618, 619, 620, 621, 622, 640, 644, 645, 647, 648, 649, 650, 651, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 681, 683, 690, 697, 702, 716, 717, 718, 724, 725, 726, 734, 739, 742, 745, 746, 749, 753, 755, 762, 769, 774, 786, 792, 803, 804, 805, 810, 814, 815, 816, 817, 828, 830, 832, 833, 834, 836, 838, 845, 846, 848, 850, 852, 853, 859, 870, 871, 872, 877, 881, 882, 883, 886, 892, 903, 904, 905, 910, 911, 913, 914, 918, 919, 920, 923, 929, 940, 941, 942, 947, 948, 950, 951, 955, 956, 957, 1009, 1018, 1019, 1020, 1022, 1034, 1044, 1074, 1075, 1077, 1094, 1097, 1101, 1102, 1103, 1108, 1110, 1112, 1113, 1115, 1117, 1123, 1129, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1158, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1200, 1201, 1202, 1203, 1204, 1208, 1210, 1211, 1217, 1218, 1219, 1220, 1225, 1226, 1227, 1228, 1229, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1255, 1266, 1279, 1292, 1294, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "295": [6, 547, 1255], "float64": [6, 442, 443, 547, 1018, 1019, 1304], "nd": [7, 548], "65535": [7, 548], "h": [7, 12, 135, 143, 144, 145, 203, 260, 270, 303, 340, 366, 452, 459, 465, 466, 470, 471, 485, 490, 491, 496, 506, 530, 548, 556, 718, 727, 728, 729, 788, 845, 855, 888, 925, 951, 1029, 1036, 1042, 1043, 1047, 1048, 1062, 1067, 1068, 1073, 1083, 1107, 1219, 1266, 1273], "": [7, 40, 41, 55, 68, 72, 84, 97, 101, 113, 114, 117, 120, 134, 135, 146, 147, 148, 159, 203, 205, 218, 225, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 270, 272, 285, 292, 296, 297, 298, 303, 305, 318, 328, 333, 334, 335, 340, 342, 355, 365, 370, 371, 372, 430, 431, 437, 441, 457, 466, 470, 471, 472, 473, 485, 497, 501, 502, 515, 518, 523, 524, 525, 527, 530, 532, 533, 536, 548, 593, 595, 609, 622, 626, 638, 651, 655, 667, 668, 671, 674, 717, 718, 731, 732, 733, 745, 788, 790, 803, 810, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 855, 857, 870, 877, 881, 882, 883, 888, 890, 903, 913, 918, 919, 920, 925, 927, 940, 950, 955, 956, 957, 990, 991, 997, 1001, 1002, 1007, 1009, 1011, 1017, 1034, 1043, 1047, 1048, 1049, 1050, 1062, 1074, 1078, 1079, 1092, 1095, 1100, 1101, 1102, 1104, 1107, 1109, 1110, 1113, 1115, 1127, 1140, 1144, 1156, 1169, 1173, 1219, 1220, 1230, 1255, 1262, 1263, 1266, 1271, 1273, 1274, 1283, 1290, 1292, 1294, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1307], "radar_estimated_rain_r": [7, 548], "integ": [7, 218, 285, 318, 355, 396, 518, 519, 548, 803, 870, 903, 940, 983, 1095, 1096], "repres": [7, 55, 84, 129, 133, 137, 138, 139, 140, 150, 151, 152, 154, 155, 398, 498, 510, 513, 520, 521, 522, 527, 529, 535, 536, 548, 609, 638, 712, 716, 720, 721, 722, 723, 736, 737, 738, 740, 741, 1075, 1087, 1090, 1097, 1098, 1099, 1104, 1106, 1112, 1113, 1127, 1156, 1188, 1189, 1253, 1255], "No": [7, 66, 67, 95, 96, 135, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 394, 443, 452, 513, 548, 620, 621, 649, 650, 718, 803, 810, 814, 815, 816, 817, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 981, 1019, 1029, 1090, 1138, 1139, 1167, 1168], "valid_range_from_fil": [8, 552], "units_from_fil": [8, 552], "pulse_width": [8, 148, 159, 396, 473, 552, 733, 745, 983, 1050, 1255], "gamic": [8, 552, 1255], "hdf5": [8, 17, 26, 27, 552, 561, 576, 577, 1255, 1296], "extract": [8, 218, 285, 318, 355, 390, 493, 512, 552, 803, 870, 903, 940, 977, 1070, 1089, 1212, 1213, 1224, 1255, 1260, 1266, 1287, 1289, 1292, 1296], "valid": [8, 41, 55, 84, 122, 131, 132, 133, 137, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 192, 219, 243, 261, 286, 319, 356, 386, 395, 396, 443, 446, 457, 462, 466, 470, 471, 472, 479, 485, 492, 498, 499, 510, 521, 522, 527, 529, 552, 595, 609, 638, 704, 705, 714, 715, 716, 720, 726, 727, 728, 729, 736, 737, 738, 739, 740, 741, 776, 804, 828, 846, 871, 904, 941, 973, 982, 983, 1019, 1022, 1034, 1039, 1043, 1047, 1048, 1049, 1056, 1062, 1069, 1075, 1076, 1087, 1098, 1099, 1104, 1106, 1115, 1127, 1156, 1207, 1209, 1212, 1213, 1219, 1220, 1255, 1306], "rang": [8, 12, 14, 22, 23, 24, 55, 65, 67, 84, 94, 96, 113, 114, 115, 124, 129, 131, 132, 137, 138, 139, 140, 143, 154, 155, 193, 201, 218, 220, 225, 226, 227, 229, 230, 231, 245, 247, 248, 249, 251, 253, 260, 263, 265, 267, 268, 285, 287, 292, 293, 294, 296, 297, 301, 318, 320, 328, 329, 330, 331, 333, 334, 338, 355, 357, 365, 366, 367, 368, 370, 371, 389, 445, 446, 453, 462, 466, 467, 479, 485, 492, 493, 499, 510, 513, 517, 523, 525, 527, 528, 529, 552, 556, 558, 571, 572, 573, 609, 619, 621, 638, 648, 650, 667, 668, 669, 707, 712, 714, 715, 720, 721, 722, 723, 727, 740, 741, 777, 786, 803, 805, 810, 811, 812, 814, 815, 816, 830, 832, 833, 834, 836, 838, 845, 848, 850, 852, 853, 870, 872, 877, 878, 879, 881, 882, 886, 903, 905, 913, 914, 915, 916, 918, 919, 923, 940, 942, 950, 951, 952, 953, 955, 956, 976, 1020, 1022, 1030, 1039, 1043, 1044, 1056, 1062, 1069, 1070, 1076, 1087, 1090, 1094, 1100, 1102, 1104, 1105, 1106, 1127, 1137, 1139, 1156, 1166, 1168, 1209, 1221, 1232, 1238, 1239, 1249, 1250, 1255, 1271, 1276, 1279, 1285, 1294, 1298, 1304], "valid_min": [8, 133, 134, 135, 382, 552, 716, 717, 718, 969, 1255, 1292, 1304], "valid_max": [8, 133, 134, 135, 382, 552, 716, 717, 718, 969, 1292, 1304], "when": [8, 16, 17, 18, 28, 30, 41, 55, 56, 57, 61, 62, 64, 66, 67, 84, 85, 86, 90, 91, 93, 95, 96, 131, 132, 133, 134, 135, 146, 147, 150, 157, 158, 163, 164, 165, 169, 171, 178, 185, 190, 218, 225, 229, 230, 231, 232, 247, 248, 254, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 338, 355, 365, 366, 370, 371, 372, 386, 387, 389, 390, 392, 396, 397, 411, 443, 448, 457, 462, 470, 479, 492, 495, 502, 505, 506, 510, 513, 516, 521, 523, 524, 525, 529, 535, 536, 552, 560, 561, 562, 579, 583, 595, 609, 610, 611, 615, 616, 618, 620, 621, 638, 639, 640, 644, 645, 647, 649, 650, 677, 681, 683, 690, 697, 702, 714, 715, 716, 717, 718, 731, 732, 736, 743, 744, 749, 753, 755, 762, 769, 774, 803, 810, 814, 815, 816, 817, 832, 833, 839, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 923, 940, 950, 951, 955, 956, 957, 973, 974, 976, 977, 979, 983, 985, 1009, 1019, 1020, 1024, 1034, 1039, 1047, 1056, 1069, 1072, 1079, 1082, 1083, 1087, 1090, 1093, 1098, 1100, 1101, 1102, 1106, 1112, 1113, 1114, 1115, 1127, 1128, 1129, 1133, 1134, 1136, 1138, 1139, 1156, 1157, 1158, 1162, 1163, 1165, 1167, 1168, 1219, 1240, 1255, 1271, 1292, 1296, 1299, 1300, 1303, 1305, 1306, 1308], "thei": [8, 68, 97, 133, 134, 135, 141, 150, 151, 152, 169, 171, 178, 366, 382, 390, 396, 457, 493, 523, 538, 550, 552, 622, 651, 681, 683, 690, 716, 717, 718, 724, 736, 737, 738, 753, 755, 762, 951, 969, 977, 983, 1034, 1070, 1100, 1140, 1169, 1292, 1306], "present": [8, 40, 41, 55, 84, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 395, 396, 436, 443, 552, 593, 595, 609, 638, 803, 810, 814, 815, 816, 817, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 982, 983, 996, 1006, 1019, 1115, 1127, 1156, 1298, 1303], "unit": [8, 16, 17, 18, 65, 94, 116, 117, 118, 119, 120, 131, 132, 134, 135, 208, 211, 212, 213, 214, 215, 216, 223, 275, 278, 279, 280, 281, 282, 283, 290, 308, 311, 312, 313, 314, 315, 316, 323, 345, 348, 349, 350, 351, 352, 353, 360, 375, 382, 384, 466, 485, 487, 518, 552, 560, 561, 562, 619, 648, 670, 671, 672, 673, 674, 714, 715, 717, 718, 793, 796, 797, 798, 799, 800, 801, 808, 860, 863, 864, 865, 866, 867, 868, 875, 893, 896, 897, 898, 899, 900, 901, 908, 930, 933, 934, 935, 936, 937, 938, 945, 962, 969, 971, 1043, 1062, 1064, 1095, 1114, 1137, 1166, 1192, 1207, 1219, 1220, 1255, 1280, 1285, 1292, 1296, 1299, 1304, 1306], "avail": [8, 16, 17, 18, 55, 66, 67, 68, 84, 95, 96, 97, 122, 123, 124, 141, 142, 150, 151, 152, 178, 190, 245, 247, 248, 249, 251, 253, 263, 265, 267, 384, 394, 513, 552, 560, 561, 562, 580, 609, 620, 621, 622, 638, 649, 650, 651, 690, 702, 705, 706, 707, 724, 726, 736, 737, 738, 762, 774, 830, 832, 833, 834, 836, 838, 848, 850, 852, 971, 981, 1090, 1127, 1138, 1139, 1140, 1156, 1167, 1168, 1169, 1207, 1242, 1255, 1260, 1262, 1271, 1296], "mandatori": [8, 552], "processor": [8, 552], "pulsewidth": [8, 513, 552, 1090], "enum": [8, 552], "should": [8, 24, 32, 41, 55, 57, 64, 84, 86, 93, 128, 133, 134, 135, 142, 147, 165, 169, 201, 246, 262, 329, 366, 376, 390, 393, 395, 396, 425, 442, 443, 497, 499, 510, 513, 521, 522, 523, 524, 525, 530, 532, 535, 536, 538, 552, 573, 585, 595, 609, 611, 618, 638, 640, 647, 677, 681, 711, 716, 717, 718, 726, 732, 749, 753, 786, 831, 847, 914, 951, 960, 961, 963, 977, 980, 982, 983, 1018, 1019, 1074, 1076, 1087, 1090, 1098, 1099, 1100, 1101, 1102, 1107, 1109, 1112, 1113, 1115, 1127, 1129, 1136, 1156, 1158, 1165, 1219, 1220, 1255, 1271, 1292, 1296, 1305, 1306, 1308], "u": [8, 51, 52, 53, 117, 120, 520, 535, 536, 552, 605, 606, 607, 671, 674, 1097, 1112, 1113, 1255, 1263, 1294, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "gif": [9, 553], "precipitation_typ": [10, 20, 554, 564], "grib": [10, 554], "locat": [11, 41, 43, 55, 65, 66, 67, 84, 94, 95, 96, 201, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 243, 245, 247, 248, 249, 251, 253, 260, 261, 263, 265, 267, 268, 285, 286, 287, 290, 291, 292, 293, 294, 296, 297, 298, 301, 318, 319, 320, 323, 324, 326, 328, 329, 330, 331, 333, 334, 335, 338, 355, 356, 357, 360, 361, 363, 365, 366, 367, 368, 370, 371, 372, 386, 387, 389, 395, 441, 442, 443, 555, 595, 597, 609, 619, 620, 621, 638, 648, 649, 650, 786, 803, 804, 805, 808, 809, 810, 811, 812, 814, 815, 816, 817, 828, 830, 832, 833, 834, 836, 838, 845, 846, 848, 850, 852, 853, 870, 871, 872, 875, 876, 877, 878, 879, 881, 882, 883, 886, 903, 904, 905, 908, 909, 911, 913, 914, 915, 916, 918, 919, 920, 923, 940, 941, 942, 945, 946, 948, 950, 951, 952, 953, 955, 956, 957, 973, 974, 976, 982, 1009, 1017, 1018, 1019, 1115, 1117, 1127, 1137, 1138, 1139, 1156, 1166, 1167, 1168, 1187, 1199, 1206, 1222, 1223, 1224, 1255, 1277, 1279, 1290, 1296, 1302, 1305, 1306], "hpl": [11, 555], "ascii": [11, 555], "halo": [11, 555], "photono": [11, 555], "steamlin": [11, 555], "lidar": [11, 509, 555, 1086, 1296], "come": [11, 527, 555, 1104, 1292], "assign": [11, 133, 150, 520, 555, 716, 736, 1097, 1255, 1292], "lat": [11, 50, 66, 95, 116, 117, 118, 119, 120, 121, 157, 158, 207, 232, 245, 246, 247, 248, 250, 251, 252, 253, 262, 264, 265, 266, 267, 274, 298, 307, 325, 327, 329, 335, 344, 362, 364, 372, 393, 394, 462, 492, 495, 555, 604, 620, 649, 670, 671, 672, 673, 674, 675, 743, 744, 792, 817, 830, 831, 832, 833, 835, 836, 837, 838, 847, 849, 850, 851, 852, 859, 883, 892, 910, 912, 914, 920, 929, 947, 949, 957, 980, 981, 1039, 1069, 1072, 1124, 1138, 1167, 1255, 1272, 1273, 1286, 1302], "lon": [11, 50, 66, 95, 116, 117, 118, 119, 120, 121, 157, 158, 207, 232, 245, 246, 247, 248, 250, 251, 252, 253, 262, 264, 265, 266, 267, 274, 298, 307, 325, 327, 329, 335, 344, 362, 364, 372, 393, 394, 462, 492, 495, 555, 604, 620, 649, 670, 671, 672, 673, 674, 675, 743, 744, 792, 817, 830, 831, 832, 833, 835, 836, 837, 838, 847, 849, 850, 851, 852, 859, 883, 892, 910, 912, 914, 920, 929, 947, 949, 957, 980, 981, 1039, 1069, 1072, 1124, 1138, 1167, 1255, 1273, 1286], "alt": [11, 50, 66, 95, 121, 393, 555, 604, 620, 649, 675, 980, 1124, 1138, 1167, 1255], "ad": [11, 41, 55, 57, 84, 86, 141, 146, 147, 254, 327, 364, 442, 497, 513, 555, 595, 609, 611, 638, 640, 724, 731, 732, 839, 912, 949, 1018, 1074, 1090, 1115, 1127, 1129, 1156, 1158, 1255, 1282, 1283, 1298, 1299, 1305, 1306], "global": [11, 55, 84, 555, 609, 638, 1127, 1156, 1304, 1305], "variabl": [11, 28, 40, 41, 49, 50, 51, 55, 65, 84, 94, 165, 201, 235, 254, 268, 301, 338, 392, 393, 457, 468, 469, 500, 502, 512, 520, 523, 526, 530, 531, 533, 555, 579, 593, 595, 603, 604, 605, 609, 619, 638, 648, 677, 749, 786, 820, 839, 853, 886, 923, 979, 980, 1009, 1020, 1034, 1045, 1046, 1077, 1079, 1089, 1097, 1100, 1103, 1107, 1108, 1110, 1115, 1123, 1124, 1127, 1137, 1156, 1166, 1219, 1255, 1262, 1266, 1292, 1296, 1298, 1299, 1304, 1305], "location_campaign": [11, 555], "script": [11, 40, 537, 555, 593, 1255], "filenames_iq": [12, 556], "nbyte": [12, 14, 24, 556, 558, 573], "4": [12, 14, 24, 26, 27, 55, 84, 113, 114, 121, 131, 132, 150, 151, 380, 384, 441, 448, 526, 527, 556, 558, 573, 576, 577, 609, 638, 667, 668, 675, 714, 715, 736, 737, 967, 971, 1017, 1024, 1103, 1104, 1127, 1156, 1238, 1254, 1262, 1271, 1280, 1281, 1282, 1283, 1285, 1286, 1292, 1296, 1303, 1306], "prf": [12, 556, 1255], "ang_tol": [12, 22, 23, 470, 492, 493, 556, 571, 572, 1047, 1069, 1070], "noise_h": [12, 556], "noise_v": [12, 556], "rconst_h": [12, 556], "rconst_v": [12, 556], "radconst_h": [12, 556], "radconst_v": [12, 556], "mfloss_h": [12, 556], "mfloss_v": [12, 556], "azi_min": [12, 22, 23, 556, 571, 572, 1249, 1250], "azi_max": [12, 22, 23, 556, 571, 572, 1249, 1250], "ele_min": [12, 22, 23, 556, 571, 572, 1249, 1250], "ele_max": [12, 22, 23, 556, 571, 572, 1249, 1250], "rng_min": [12, 22, 23, 517, 556, 571, 572, 1094, 1249, 1250], "rng_max": [12, 22, 23, 517, 556, 571, 572, 1094, 1249, 1250], "rad4alp": [12, 556], "iq": [12, 450, 452, 459, 461, 463, 465, 469, 476, 478, 482, 490, 491, 496, 556, 1027, 1029, 1036, 1038, 1040, 1042, 1046, 1053, 1055, 1059, 1067, 1068, 1073, 1296], "refer": [12, 16, 22, 23, 26, 29, 41, 55, 57, 84, 86, 113, 117, 120, 122, 123, 124, 125, 126, 128, 131, 132, 133, 134, 135, 138, 139, 142, 146, 147, 148, 149, 150, 151, 152, 156, 159, 207, 232, 274, 298, 307, 335, 344, 372, 386, 387, 388, 441, 452, 453, 457, 462, 466, 467, 470, 471, 472, 474, 479, 480, 485, 492, 493, 495, 497, 498, 499, 501, 513, 516, 520, 523, 524, 525, 527, 529, 530, 532, 534, 535, 536, 556, 560, 571, 572, 576, 581, 595, 609, 611, 638, 640, 667, 671, 674, 705, 706, 707, 708, 709, 711, 714, 715, 716, 717, 718, 721, 722, 726, 731, 732, 733, 735, 736, 737, 738, 742, 745, 792, 817, 859, 883, 892, 920, 929, 957, 973, 974, 975, 1017, 1025, 1029, 1030, 1034, 1039, 1043, 1044, 1047, 1048, 1049, 1051, 1056, 1057, 1062, 1069, 1070, 1072, 1074, 1075, 1076, 1078, 1090, 1093, 1097, 1100, 1101, 1102, 1104, 1106, 1107, 1109, 1111, 1112, 1113, 1115, 1127, 1129, 1156, 1158, 1219, 1220, 1230, 1245, 1255, 1296, 1304, 1306], "rainbow": [12, 22, 23, 24, 556, 571, 572, 573], "byte": [12, 14, 24, 394, 423, 556, 558, 573, 981, 1255], "numpi": [12, 14, 24, 57, 86, 171, 185, 550, 551, 556, 558, 565, 566, 573, 611, 640, 683, 697, 755, 769, 1129, 1158, 1242, 1255, 1266, 1267, 1271, 1274, 1279, 1282, 1283, 1285, 1290, 1292, 1293, 1294, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "e": [12, 14, 24, 27, 135, 141, 146, 147, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 378, 394, 398, 436, 455, 493, 497, 523, 527, 529, 532, 556, 558, 573, 577, 718, 724, 731, 732, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 965, 981, 996, 1006, 1032, 1070, 1074, 1100, 1104, 1106, 1109, 1205, 1206, 1230, 1232, 1262, 1274, 1292, 1305, 1306], "g": [12, 14, 24, 27, 141, 394, 398, 441, 492, 513, 523, 525, 536, 556, 558, 573, 577, 724, 981, 1017, 1069, 1090, 1100, 1102, 1113], "go": [12, 14, 24, 142, 150, 151, 152, 457, 483, 501, 502, 503, 505, 506, 520, 529, 556, 558, 573, 726, 736, 737, 738, 1034, 1060, 1078, 1079, 1080, 1082, 1083, 1097, 1106, 1205, 1206, 1232, 1249, 1250, 1255, 1299], "float6432": [12, 556], "scan": [12, 16, 26, 27, 55, 84, 133, 134, 135, 136, 139, 149, 201, 217, 218, 220, 231, 268, 284, 285, 287, 297, 301, 317, 318, 320, 334, 338, 354, 355, 357, 371, 386, 499, 527, 529, 556, 560, 576, 577, 609, 638, 716, 717, 718, 719, 722, 735, 786, 802, 803, 805, 816, 853, 869, 870, 872, 882, 886, 902, 903, 905, 919, 923, 939, 940, 942, 956, 973, 1020, 1025, 1076, 1104, 1106, 1127, 1156, 1188, 1189, 1222, 1235, 1240, 1247, 1253, 1255, 1266, 1276, 1277, 1287], "toler": [12, 22, 23, 462, 470, 492, 493, 495, 508, 509, 556, 571, 572, 1009, 1010, 1012, 1039, 1047, 1069, 1070, 1072, 1085, 1086, 1205, 1212, 1213, 1228, 1232, 1255], "angl": [12, 22, 23, 55, 61, 62, 84, 90, 91, 113, 114, 115, 131, 132, 143, 144, 145, 148, 149, 156, 157, 158, 159, 201, 218, 230, 268, 285, 301, 318, 338, 355, 446, 470, 492, 493, 511, 513, 517, 525, 527, 529, 530, 551, 556, 571, 572, 609, 615, 616, 638, 644, 645, 667, 668, 669, 714, 715, 727, 728, 729, 733, 735, 742, 743, 744, 745, 786, 803, 815, 853, 870, 886, 903, 923, 940, 1022, 1047, 1069, 1070, 1088, 1090, 1094, 1102, 1104, 1106, 1107, 1127, 1133, 1134, 1156, 1162, 1163, 1200, 1201, 1202, 1203, 1207, 1212, 1213, 1222, 1223, 1228, 1232, 1240, 1243, 1244, 1253, 1255, 1285, 1287, 1294, 1298, 1304], "distanc": [12, 22, 23, 41, 49, 67, 96, 113, 114, 115, 218, 229, 285, 296, 318, 333, 355, 370, 438, 439, 440, 442, 443, 462, 467, 492, 499, 518, 520, 525, 527, 528, 529, 556, 571, 572, 595, 603, 621, 650, 667, 668, 669, 803, 814, 870, 881, 903, 918, 940, 955, 1009, 1010, 1013, 1014, 1015, 1018, 1019, 1020, 1039, 1044, 1069, 1076, 1095, 1097, 1102, 1104, 1105, 1106, 1115, 1123, 1139, 1168, 1206, 1212, 1213, 1220, 1222, 1223, 1224, 1248, 1266, 1275, 1280, 1281, 1282], "psr": [12, 22, 23, 145, 556, 567, 568, 569, 571, 572, 729, 1231, 1245], "estim": [12, 124, 137, 138, 139, 140, 143, 144, 150, 151, 152, 160, 195, 199, 220, 287, 320, 357, 454, 466, 467, 469, 471, 472, 474, 485, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 523, 524, 525, 528, 530, 556, 707, 720, 721, 722, 723, 725, 727, 728, 736, 737, 738, 746, 779, 783, 805, 872, 905, 942, 1031, 1043, 1044, 1046, 1048, 1049, 1051, 1062, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1100, 1101, 1102, 1105, 1107, 1219, 1220, 1255, 1292], "v": [12, 24, 51, 52, 54, 143, 144, 145, 432, 433, 436, 459, 465, 490, 491, 496, 511, 527, 535, 536, 556, 573, 605, 606, 608, 727, 728, 729, 992, 993, 996, 1003, 1004, 1006, 1036, 1042, 1067, 1068, 1073, 1088, 1104, 1112, 1113, 1282, 1283, 1294, 1306], "nois": [12, 22, 23, 128, 140, 143, 144, 145, 198, 447, 452, 461, 466, 467, 468, 469, 471, 472, 476, 477, 478, 481, 484, 485, 487, 488, 489, 496, 556, 571, 572, 711, 723, 727, 728, 729, 782, 1023, 1029, 1038, 1043, 1044, 1045, 1046, 1048, 1049, 1053, 1054, 1055, 1058, 1061, 1062, 1064, 1065, 1066, 1073, 1219, 1220, 1225, 1236, 1255, 1300], "power": [12, 22, 23, 122, 124, 143, 144, 145, 146, 147, 148, 159, 160, 197, 461, 466, 468, 471, 472, 474, 476, 477, 479, 480, 484, 485, 487, 488, 501, 502, 503, 504, 505, 506, 513, 556, 571, 572, 705, 707, 727, 728, 729, 730, 731, 732, 733, 745, 746, 781, 1038, 1043, 1045, 1048, 1049, 1051, 1053, 1054, 1056, 1057, 1061, 1062, 1064, 1065, 1078, 1079, 1080, 1081, 1082, 1083, 1090, 1220, 1225], "adu": [12, 466, 468, 469, 483, 484, 485, 486, 487, 488, 489, 556, 1043, 1045, 1046, 1060, 1061, 1062, 1063, 1064, 1065, 1066], "dynam": [12, 134, 556, 717], "factor": [12, 113, 114, 115, 125, 146, 147, 396, 453, 494, 501, 502, 503, 504, 505, 506, 513, 529, 531, 556, 667, 668, 669, 708, 731, 732, 983, 1025, 1030, 1071, 1078, 1079, 1080, 1081, 1082, 1083, 1090, 1106, 1108, 1204, 1273, 1281, 1287, 1302], "convers": [12, 26, 27, 470, 492, 556, 576, 577, 1047, 1069, 1204], "dbadu": [12, 466, 485, 487, 556, 1043, 1062, 1064], "dbm": [12, 143, 144, 145, 148, 159, 160, 466, 471, 472, 474, 480, 485, 487, 556, 727, 728, 729, 733, 745, 746, 1043, 1048, 1049, 1051, 1057, 1062, 1064], "dbz": [12, 24, 122, 128, 146, 147, 444, 453, 457, 467, 481, 497, 520, 527, 532, 556, 573, 705, 711, 731, 732, 1030, 1034, 1044, 1058, 1074, 1097, 1104, 1109, 1262, 1266, 1273, 1280, 1281, 1287, 1292, 1304], "constant": [12, 132, 386, 438, 442, 443, 473, 474, 480, 494, 518, 523, 556, 715, 973, 1013, 1018, 1019, 1050, 1051, 1057, 1071, 1095, 1100, 1255], "match": [12, 133, 136, 141, 201, 268, 301, 338, 390, 474, 480, 510, 535, 536, 556, 716, 719, 724, 786, 853, 886, 923, 977, 1009, 1051, 1057, 1087, 1112, 1113, 1255, 1266, 1273], "filter": [12, 58, 87, 131, 132, 133, 134, 135, 136, 139, 140, 141, 150, 151, 152, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 442, 443, 455, 474, 480, 521, 522, 523, 524, 525, 556, 612, 641, 677, 681, 683, 690, 697, 702, 714, 715, 716, 717, 718, 719, 722, 723, 724, 730, 736, 737, 738, 803, 810, 814, 815, 816, 817, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 1009, 1018, 1019, 1032, 1051, 1057, 1098, 1099, 1100, 1101, 1102, 1130, 1159, 1255, 1258, 1266, 1267, 1268, 1272, 1291, 1300, 1303], "loss": [12, 149, 474, 480, 513, 556, 735, 1051, 1057, 1090], "receiv": [12, 148, 149, 156, 159, 474, 480, 556, 733, 735, 742, 745, 1051, 1057, 1255, 1300], "db": [12, 142, 143, 144, 148, 149, 159, 160, 195, 199, 446, 447, 474, 480, 513, 527, 556, 726, 727, 728, 733, 735, 745, 746, 779, 783, 1022, 1023, 1051, 1057, 1090, 1104, 1225, 1282, 1304], "minimum": [12, 22, 23, 122, 129, 131, 132, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 193, 196, 197, 198, 199, 200, 218, 220, 225, 228, 229, 230, 231, 232, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 394, 441, 443, 457, 462, 466, 470, 472, 479, 485, 492, 493, 497, 500, 510, 513, 517, 521, 522, 527, 529, 556, 571, 572, 705, 712, 714, 715, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 739, 740, 741, 777, 780, 781, 782, 783, 784, 803, 805, 810, 813, 814, 815, 816, 817, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 914, 917, 918, 919, 920, 940, 942, 950, 951, 954, 955, 956, 957, 981, 1017, 1019, 1034, 1039, 1043, 1047, 1049, 1056, 1062, 1069, 1070, 1074, 1077, 1087, 1090, 1094, 1098, 1099, 1104, 1106, 1187, 1207, 1209, 1219, 1220, 1232, 1255, 1292, 1302], "maximum": [12, 14, 22, 23, 84, 125, 126, 129, 131, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 193, 195, 196, 197, 198, 218, 220, 225, 228, 229, 230, 231, 232, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 394, 441, 443, 453, 457, 462, 470, 479, 492, 493, 495, 497, 498, 499, 502, 505, 506, 510, 517, 523, 527, 528, 529, 556, 558, 571, 572, 638, 708, 709, 712, 714, 715, 716, 717, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 740, 741, 777, 779, 780, 781, 782, 803, 805, 810, 813, 814, 815, 816, 817, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 914, 917, 918, 919, 920, 940, 942, 950, 951, 954, 955, 956, 957, 960, 981, 1017, 1019, 1025, 1030, 1034, 1039, 1047, 1056, 1069, 1070, 1072, 1074, 1075, 1076, 1079, 1082, 1083, 1087, 1094, 1100, 1104, 1105, 1106, 1156, 1187, 1204, 1220, 1225, 1235, 1236, 1237, 1291, 1292, 1304], "keep": [12, 22, 23, 30, 133, 140, 194, 390, 498, 550, 556, 571, 572, 583, 716, 723, 778, 977, 1075, 1249, 1250, 1266, 1292, 1306, 1308], "k": [13, 120, 222, 223, 224, 226, 227, 228, 248, 289, 290, 291, 293, 294, 295, 322, 323, 324, 330, 331, 332, 359, 360, 361, 367, 368, 369, 428, 432, 433, 435, 436, 457, 513, 523, 535, 557, 674, 807, 808, 809, 811, 812, 813, 833, 874, 875, 876, 878, 879, 880, 907, 908, 909, 915, 916, 917, 944, 945, 946, 952, 953, 954, 988, 992, 993, 995, 996, 1000, 1003, 1004, 1005, 1006, 1034, 1090, 1100, 1112, 1272, 1279, 1282, 1283, 1306], "band": [13, 19, 122, 124, 128, 394, 457, 462, 496, 501, 515, 523, 524, 525, 532, 533, 557, 563, 705, 707, 711, 981, 1034, 1039, 1073, 1078, 1092, 1100, 1101, 1102, 1109, 1110, 1255], "arm": [13, 28, 50, 378, 379, 392, 393, 512, 557, 579, 604, 965, 966, 979, 980, 1089, 1124, 1187, 1192, 1255, 1268, 1283, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1308], "zenith": [13, 557], "kazr": [13, 557, 1255], "ingest": [13, 557, 1255, 1296, 1297], "rmax": [14, 193, 479, 558, 777, 1056, 1232], "noxp": [15, 559, 1255], "iphex": [15, 559, 1255], "gain": [16, 17, 18, 26, 27, 28, 148, 159, 474, 513, 560, 561, 562, 576, 577, 579, 733, 745, 1051, 1090], "nodata": [16, 17, 18, 26, 27, 560, 561, 562, 576, 577], "nan": [16, 17, 18, 133, 173, 192, 193, 197, 525, 550, 551, 560, 561, 562, 565, 566, 685, 704, 716, 730, 757, 776, 777, 781, 1102, 1255], "undetect": [16, 17, 18, 26, 27, 560, 561, 562, 576, 577], "use_file_convers": [16, 17, 18, 560, 561, 562], "time_ref": [16, 26, 560, 576], "start": [16, 26, 41, 55, 70, 71, 82, 83, 84, 99, 100, 111, 112, 244, 390, 396, 471, 493, 512, 527, 550, 560, 576, 595, 609, 624, 625, 636, 637, 638, 653, 654, 665, 666, 829, 977, 983, 1048, 1070, 1089, 1104, 1115, 1127, 1142, 1143, 1154, 1155, 1156, 1171, 1172, 1183, 1184, 1215, 1262, 1271, 1272, 1282, 1283, 1296, 1298, 1306, 1307], "convert": [16, 17, 18, 21, 26, 27, 49, 121, 148, 497, 539, 560, 561, 562, 570, 576, 577, 603, 675, 733, 1074, 1123, 1235, 1253, 1255, 1292], "what": [16, 17, 18, 26, 133, 443, 560, 561, 562, 576, 716, 748, 1019, 1255, 1262, 1271, 1298, 1300, 1303, 1306, 1308], "user": [16, 17, 18, 24, 40, 58, 87, 123, 124, 136, 366, 394, 484, 488, 560, 561, 562, 573, 593, 612, 641, 706, 707, 719, 951, 981, 1061, 1065, 1130, 1159, 1252, 1255, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "physic": [16, 17, 18, 26, 27, 28, 497, 550, 551, 560, 561, 562, 565, 566, 576, 577, 579, 734, 1009, 1025, 1074, 1292], "otherwis": [16, 17, 18, 133, 150, 151, 404, 425, 432, 457, 462, 468, 470, 477, 479, 483, 484, 488, 492, 493, 495, 500, 502, 505, 506, 511, 513, 518, 550, 551, 560, 561, 562, 565, 566, 716, 736, 737, 992, 1003, 1034, 1039, 1045, 1047, 1054, 1056, 1060, 1061, 1065, 1069, 1070, 1072, 1077, 1079, 1082, 1083, 1088, 1090, 1095, 1211, 1242], "pass": [16, 17, 18, 116, 118, 119, 133, 134, 135, 217, 218, 225, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 260, 263, 265, 267, 284, 285, 292, 296, 297, 298, 317, 318, 325, 326, 327, 328, 329, 330, 333, 334, 335, 354, 355, 362, 363, 364, 365, 366, 367, 370, 371, 372, 376, 377, 386, 388, 441, 443, 510, 523, 560, 561, 562, 670, 672, 673, 716, 717, 718, 802, 803, 810, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 845, 848, 850, 852, 869, 870, 877, 881, 882, 883, 902, 903, 910, 911, 912, 913, 914, 915, 918, 919, 920, 939, 940, 947, 948, 949, 950, 951, 952, 955, 956, 957, 963, 964, 973, 975, 1017, 1019, 1087, 1100, 1255, 1262, 1263, 1299, 1302], "mid": [16, 26, 560, 576], "end": [16, 26, 40, 63, 71, 79, 83, 92, 100, 108, 112, 122, 123, 124, 134, 135, 138, 139, 142, 147, 150, 151, 152, 244, 527, 560, 576, 593, 617, 625, 633, 637, 646, 654, 662, 666, 705, 706, 707, 717, 718, 721, 722, 726, 732, 736, 737, 738, 829, 1104, 1135, 1143, 1151, 1155, 1164, 1172, 1180, 1184, 1255, 1272, 1282, 1283, 1296], "expect": [16, 26, 232, 298, 335, 372, 525, 560, 576, 817, 883, 920, 957, 1102, 1306], "starttim": [16, 26, 560, 576], "middl": [16, 23, 26, 560, 572, 576], "endtim": [16, 26, 560, 576], "include_dataset": [17, 561], "exclude_dataset": [17, 561], "dataset": [17, 26, 27, 249, 329, 366, 386, 388, 469, 512, 561, 576, 577, 834, 914, 951, 973, 975, 1046, 1089, 1214, 1217, 1224, 1255, 1262, 1290, 1293, 1294, 1296, 1298], "given": [17, 32, 35, 36, 37, 39, 41, 43, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 84, 90, 91, 92, 93, 96, 97, 98, 99, 100, 131, 132, 133, 149, 156, 157, 159, 167, 169, 170, 171, 172, 174, 176, 177, 181, 183, 184, 185, 186, 188, 189, 191, 193, 196, 197, 218, 223, 224, 244, 245, 246, 250, 251, 252, 253, 262, 264, 265, 266, 267, 285, 290, 291, 318, 323, 324, 325, 326, 355, 360, 361, 362, 363, 432, 442, 443, 457, 479, 484, 488, 511, 513, 520, 526, 561, 585, 588, 589, 590, 592, 595, 597, 609, 615, 616, 617, 618, 621, 622, 623, 624, 625, 638, 644, 645, 646, 647, 650, 651, 652, 653, 654, 679, 681, 682, 683, 684, 686, 688, 689, 693, 695, 696, 697, 698, 700, 701, 703, 714, 715, 716, 730, 735, 742, 743, 745, 751, 753, 754, 755, 756, 758, 760, 761, 765, 767, 768, 769, 770, 772, 773, 775, 777, 780, 781, 803, 808, 809, 829, 830, 831, 835, 836, 837, 838, 847, 849, 850, 851, 852, 870, 875, 876, 903, 908, 909, 910, 911, 940, 945, 946, 947, 948, 992, 1003, 1009, 1016, 1018, 1019, 1034, 1056, 1061, 1065, 1088, 1090, 1097, 1103, 1115, 1117, 1127, 1133, 1134, 1135, 1136, 1139, 1140, 1141, 1142, 1143, 1156, 1162, 1163, 1164, 1165, 1168, 1169, 1170, 1171, 1172, 1185, 1223, 1224, 1233, 1234, 1247, 1290, 1292, 1296], "dataset1": [17, 561], "dataset2": [17, 561], "vertic": [18, 55, 84, 126, 128, 133, 139, 218, 219, 220, 225, 229, 230, 231, 232, 240, 243, 245, 247, 249, 251, 253, 261, 263, 265, 267, 285, 286, 287, 292, 296, 297, 298, 318, 319, 320, 328, 333, 334, 335, 355, 356, 357, 365, 370, 371, 372, 394, 453, 459, 460, 461, 462, 465, 470, 477, 478, 479, 490, 491, 492, 495, 496, 498, 508, 509, 510, 511, 516, 518, 520, 529, 530, 562, 609, 638, 709, 711, 716, 722, 803, 804, 805, 810, 814, 815, 816, 817, 825, 828, 830, 832, 834, 836, 838, 846, 848, 850, 852, 870, 871, 872, 877, 881, 882, 883, 903, 904, 905, 913, 918, 919, 920, 940, 941, 942, 950, 955, 956, 957, 981, 1030, 1036, 1037, 1038, 1039, 1042, 1047, 1054, 1055, 1056, 1067, 1068, 1069, 1072, 1073, 1075, 1085, 1086, 1087, 1088, 1093, 1095, 1097, 1106, 1107, 1127, 1156, 1235, 1253, 1255, 1283, 1293, 1294, 1296], "profil": [18, 27, 51, 125, 126, 131, 132, 133, 378, 379, 453, 462, 470, 479, 492, 495, 510, 512, 524, 525, 526, 529, 530, 562, 577, 605, 708, 709, 714, 715, 716, 965, 966, 1030, 1039, 1047, 1056, 1069, 1072, 1087, 1089, 1101, 1102, 1103, 1106, 1107, 1211, 1247, 1255, 1258, 1260, 1289, 1296, 1306], "those": [18, 58, 65, 87, 94, 134, 135, 165, 390, 442, 471, 538, 562, 612, 619, 641, 648, 677, 717, 718, 749, 977, 1018, 1048, 1130, 1137, 1159, 1166, 1238, 1254, 1308], "vol2bird": [18, 562], "pattern": [19, 131, 132, 529, 563, 714, 715, 1106, 1282], "25": [20, 150, 151, 564, 736, 737, 1255, 1262, 1266, 1282, 1283, 1286, 1298, 1303], "889375": [20, 564], "418": [20, 564], "4794775": [20, 564], "243": [20, 564], "png": [20, 203, 239, 255, 270, 303, 340, 564, 788, 824, 840, 855, 888, 925], "web": [20, 376, 386, 394, 564, 963, 973, 981, 1262, 1263], "mercat": [20, 260, 564, 845], "radx_dir": [21, 570], "first": [21, 28, 55, 68, 84, 97, 133, 135, 137, 142, 378, 379, 389, 392, 443, 474, 497, 523, 524, 525, 532, 570, 579, 609, 622, 638, 651, 716, 718, 720, 726, 965, 966, 976, 979, 1009, 1019, 1051, 1074, 1100, 1101, 1102, 1109, 1127, 1140, 1156, 1169, 1214, 1216, 1243, 1244, 1258, 1262, 1263, 1276, 1285, 1290, 1292, 1300, 1302, 1303, 1304, 1306], "radxconvert": [21, 570], "path": [21, 123, 124, 135, 570, 578, 706, 707, 718, 1125, 1186, 1255, 1262, 1263, 1296, 1305, 1306], "radx": [21, 570, 1255], "instal": [21, 116, 118, 119, 136, 141, 394, 538, 570, 670, 672, 673, 719, 724, 981, 1255, 1307, 1308], "filenames_psr": [22, 23, 571, 572], "undo_txcorr": [22, 23, 571, 572], "cpi": [22, 23, 567, 571, 572], "mean": [22, 113, 153, 450, 452, 462, 465, 469, 470, 479, 492, 535, 571, 667, 739, 1027, 1029, 1039, 1042, 1046, 1047, 1056, 1069, 1112, 1200, 1201, 1207, 1209, 1210, 1219, 1220, 1225, 1233, 1243, 1244, 1255, 1262, 1263, 1303, 1304, 1306], "5": [22, 23, 24, 41, 122, 124, 131, 132, 133, 136, 141, 143, 144, 145, 146, 150, 151, 152, 160, 197, 218, 225, 228, 229, 230, 231, 232, 248, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 393, 442, 443, 457, 497, 498, 500, 502, 508, 509, 516, 520, 527, 529, 531, 571, 572, 573, 595, 705, 707, 714, 715, 716, 719, 724, 727, 728, 729, 730, 731, 736, 737, 738, 746, 781, 803, 810, 813, 814, 815, 816, 817, 833, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957, 980, 1018, 1019, 1034, 1074, 1075, 1077, 1079, 1085, 1086, 1093, 1097, 1104, 1106, 1108, 1115, 1235, 1257, 1258, 1271, 1274, 1276, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1286, 1292, 1293, 1298, 1300, 1303, 1304, 1306], "correct": [22, 23, 64, 67, 93, 96, 165, 193, 194, 195, 196, 197, 198, 199, 200, 384, 455, 512, 513, 523, 571, 572, 618, 621, 647, 650, 749, 777, 778, 779, 780, 781, 782, 783, 784, 971, 1032, 1089, 1090, 1100, 1136, 1139, 1165, 1168, 1192, 1255, 1258, 1263, 1273, 1293, 1296, 1300, 1306], "transmit": [22, 23, 474, 571, 572, 1051, 1300], "remov": [22, 23, 41, 55, 66, 67, 84, 95, 96, 122, 123, 124, 133, 138, 139, 142, 150, 151, 152, 193, 194, 195, 196, 197, 198, 199, 200, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 401, 426, 432, 433, 469, 497, 510, 571, 572, 595, 609, 620, 621, 638, 649, 650, 705, 706, 707, 716, 721, 722, 726, 730, 736, 737, 738, 777, 778, 779, 780, 781, 782, 783, 784, 803, 810, 814, 815, 816, 817, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 986, 992, 993, 999, 1003, 1004, 1046, 1074, 1087, 1115, 1127, 1138, 1139, 1156, 1167, 1168, 1220, 1255, 1257, 1267, 1273, 1282, 1292, 1300, 1303, 1306], "signal": [22, 23, 24, 128, 140, 143, 144, 145, 160, 197, 198, 447, 450, 452, 455, 461, 463, 466, 468, 469, 471, 472, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 513, 571, 572, 573, 711, 723, 727, 728, 729, 730, 746, 781, 782, 1023, 1027, 1029, 1032, 1038, 1040, 1043, 1045, 1046, 1048, 1049, 1053, 1054, 1055, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1090, 1219, 1220, 1225], "low_prf": [22, 23, 571, 572], "intermediate_prf": [22, 23, 571, 572], "high_prf": [22, 23, 571, 572], "within": [22, 40, 57, 58, 86, 87, 129, 133, 134, 135, 136, 137, 138, 139, 140, 147, 150, 151, 152, 154, 155, 165, 193, 232, 298, 335, 372, 441, 442, 443, 448, 462, 470, 479, 492, 495, 498, 520, 521, 522, 527, 571, 593, 611, 612, 640, 641, 677, 712, 716, 717, 718, 719, 720, 721, 722, 723, 732, 736, 737, 738, 740, 741, 749, 777, 817, 883, 920, 957, 1017, 1018, 1019, 1024, 1039, 1047, 1056, 1069, 1072, 1075, 1097, 1098, 1099, 1104, 1129, 1130, 1158, 1159, 1199, 1212, 1213, 1221, 1222, 1224, 1233, 1234, 1254, 1255, 1262, 1263, 1273, 1274, 1296, 1300, 1302, 1306, 1308], "step": [22, 131, 132, 144, 232, 298, 335, 372, 394, 462, 470, 472, 479, 492, 493, 495, 527, 529, 571, 714, 715, 728, 817, 883, 920, 957, 981, 1039, 1047, 1049, 1056, 1069, 1070, 1072, 1104, 1106, 1220, 1227, 1239, 1262, 1282, 1283, 1292, 1308], "taken": [22, 113, 121, 146, 147, 218, 285, 318, 355, 571, 667, 675, 731, 732, 803, 870, 903, 940, 1192, 1212, 1213, 1219, 1233, 1234, 1275], "fold": [23, 133, 134, 572, 716, 717, 1262], "positive_awai": [23, 572], "get": [23, 35, 143, 144, 145, 148, 159, 236, 237, 238, 259, 397, 407, 435, 514, 517, 527, 533, 572, 588, 727, 728, 729, 733, 745, 821, 822, 823, 844, 985, 995, 1005, 1009, 1020, 1091, 1094, 1104, 1110, 1225, 1226, 1227, 1228, 1236, 1237, 1238, 1239, 1255, 1263, 1282, 1283, 1292, 1298, 1300, 1303, 1304, 1305, 1306, 1307, 1308], "complex": [23, 29, 466, 468, 477, 483, 484, 485, 486, 487, 488, 489, 534, 569, 572, 581, 1043, 1045, 1054, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1111], "spectra": [23, 25, 28, 84, 449, 451, 452, 458, 460, 463, 466, 468, 471, 475, 477, 482, 483, 484, 485, 486, 487, 488, 489, 569, 572, 575, 579, 638, 1026, 1028, 1029, 1035, 1037, 1040, 1043, 1045, 1048, 1052, 1054, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1156, 1190, 1196, 1219, 1231, 1241, 1250, 1255], "so": [23, 134, 218, 229, 285, 296, 318, 333, 355, 370, 390, 443, 446, 572, 717, 725, 803, 814, 870, 881, 903, 918, 940, 955, 977, 1019, 1022, 1231, 1255, 1262, 1263, 1292, 1306, 1308], "doppler": [23, 84, 113, 133, 134, 135, 193, 449, 450, 451, 452, 455, 466, 469, 471, 485, 510, 535, 572, 638, 667, 716, 717, 718, 777, 1026, 1027, 1028, 1029, 1032, 1043, 1046, 1048, 1062, 1087, 1112, 1156, 1219, 1220, 1256, 1260, 1275, 1285, 1296, 1304, 1306], "revers": [23, 218, 229, 285, 296, 318, 333, 355, 370, 390, 523, 572, 803, 814, 870, 881, 903, 918, 940, 955, 977, 1100, 1255], "veloc": [23, 24, 35, 68, 84, 97, 133, 134, 135, 193, 448, 449, 450, 508, 509, 510, 511, 518, 535, 536, 572, 573, 588, 622, 638, 651, 716, 717, 718, 777, 1024, 1026, 1027, 1085, 1086, 1087, 1088, 1095, 1112, 1113, 1140, 1156, 1169, 1204, 1247, 1255, 1256, 1260, 1262, 1271, 1275, 1283, 1285, 1296, 1297, 1303, 1304, 1306], "awai": [23, 572], "routin": [24, 26, 27, 28, 392, 442, 538, 573, 576, 577, 579, 748, 979, 1018, 1255, 1296], "rainbow5": [24, 573, 1255], "version": [24, 41, 132, 164, 520, 521, 522, 535, 537, 573, 595, 715, 1011, 1097, 1098, 1099, 1112, 1115, 1199, 1255, 1296, 1304, 1305, 1306, 1308], "22": [24, 139, 148, 156, 159, 573, 722, 733, 742, 745, 1255, 1262, 1271, 1288, 1295], "3": [24, 55, 84, 113, 114, 125, 126, 133, 134, 142, 149, 159, 193, 195, 196, 199, 230, 384, 388, 394, 441, 443, 454, 494, 497, 510, 527, 529, 573, 609, 638, 667, 668, 708, 709, 716, 717, 726, 735, 745, 777, 779, 780, 783, 815, 971, 975, 981, 1017, 1019, 1031, 1071, 1074, 1087, 1104, 1106, 1127, 1156, 1187, 1220, 1227, 1239, 1257, 1258, 1260, 1263, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1290, 1291, 1292, 1293, 1294, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "34": [24, 532, 573, 1109, 1259, 1292, 1295], "16": [24, 150, 154, 501, 521, 535, 573, 736, 740, 1078, 1098, 1112, 1257, 1258, 1266, 1278, 1284, 1291, 1300, 1304, 1306], "35": [24, 135, 146, 147, 457, 573, 718, 731, 732, 1034, 1271, 1280, 1282, 1283, 1303], "sinc": [24, 511, 523, 573, 1025, 1088, 1100, 1292, 1299, 1302, 1304], "evolv": [24, 573], "constantli": [24, 573], "guaranti": [24, 573], "work": [24, 117, 120, 247, 248, 301, 329, 338, 366, 386, 388, 532, 573, 671, 674, 832, 833, 886, 914, 923, 951, 973, 975, 1109, 1255, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "necessari": [24, 573], "adapt": [24, 113, 148, 149, 156, 159, 573, 667, 733, 735, 742, 745, 1308], "code": [24, 40, 133, 518, 535, 573, 593, 716, 1095, 1112, 1255, 1260, 1296, 1305, 1308], "accord": [24, 128, 130, 390, 443, 446, 457, 464, 471, 472, 501, 502, 503, 505, 506, 573, 711, 713, 977, 1019, 1022, 1034, 1041, 1048, 1049, 1078, 1079, 1080, 1082, 1083, 1227, 1239], "its": [24, 160, 245, 523, 573, 734, 746, 830, 1100, 1242, 1255, 1296, 1305, 1306, 1308], "own": [24, 538, 573, 1271, 1296, 1305], "rais": [24, 41, 42, 48, 56, 57, 59, 68, 85, 86, 88, 97, 163, 377, 389, 404, 432, 433, 573, 595, 596, 602, 610, 611, 613, 622, 639, 640, 642, 651, 964, 976, 992, 993, 1003, 1004, 1115, 1116, 1122, 1128, 1129, 1131, 1140, 1157, 1158, 1160, 1169, 1255], "an": [24, 26, 27, 35, 39, 40, 41, 49, 55, 57, 58, 61, 62, 68, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 97, 106, 107, 108, 109, 110, 111, 112, 126, 133, 134, 135, 136, 146, 147, 161, 164, 173, 193, 195, 196, 197, 198, 199, 200, 201, 223, 290, 323, 360, 366, 390, 393, 394, 437, 441, 442, 443, 463, 470, 471, 472, 492, 500, 512, 539, 550, 551, 565, 566, 573, 576, 577, 588, 592, 593, 595, 603, 609, 611, 612, 615, 616, 622, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 644, 645, 651, 660, 661, 662, 663, 664, 665, 666, 685, 709, 716, 717, 718, 719, 730, 731, 732, 757, 777, 779, 780, 781, 782, 783, 784, 786, 808, 875, 908, 945, 951, 977, 980, 981, 997, 1007, 1009, 1017, 1018, 1019, 1040, 1047, 1048, 1049, 1069, 1077, 1089, 1115, 1123, 1127, 1129, 1130, 1133, 1134, 1140, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1162, 1163, 1169, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1204, 1213, 1217, 1218, 1233, 1234, 1238, 1239, 1251, 1253, 1255, 1260, 1263, 1266, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1284, 1285, 1286, 1287, 1290, 1292, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307], "issu": [24, 40, 164, 301, 338, 390, 393, 573, 593, 886, 923, 977, 980, 1255, 1260, 1261, 1296, 1305, 1306, 1308], "upstream": [24, 573, 1306], "reflect": [24, 57, 86, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 136, 137, 138, 139, 140, 143, 144, 146, 147, 150, 151, 152, 154, 155, 165, 193, 196, 197, 220, 287, 320, 357, 447, 449, 451, 453, 454, 458, 460, 461, 467, 473, 474, 475, 476, 477, 480, 481, 483, 484, 488, 494, 497, 498, 499, 502, 504, 505, 506, 507, 513, 520, 521, 523, 527, 529, 531, 532, 573, 611, 640, 677, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 719, 720, 721, 722, 723, 727, 728, 730, 731, 732, 736, 737, 738, 740, 741, 749, 777, 780, 781, 805, 872, 905, 942, 960, 1009, 1023, 1025, 1026, 1028, 1030, 1031, 1035, 1037, 1038, 1044, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1060, 1061, 1065, 1071, 1074, 1075, 1076, 1079, 1081, 1082, 1083, 1084, 1090, 1097, 1098, 1100, 1104, 1106, 1108, 1109, 1129, 1158, 1195, 1197, 1198, 1230, 1255, 1256, 1258, 1260, 1262, 1263, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1275, 1278, 1281, 1284, 1285, 1287, 1289, 1290, 1292, 1296, 1298, 1299, 1300, 1302, 1303, 1304], "dbuz": [24, 573], "dbzv": [24, 573], "dbuzv": [24, 573], "vu": [24, 573], "vv": [24, 573], "vvu": [24, 573], "spectrum": [24, 451, 452, 573, 1028, 1029, 1219, 1220, 1304], "width": [24, 125, 148, 149, 159, 160, 246, 248, 262, 329, 366, 443, 451, 452, 453, 473, 573, 708, 733, 734, 735, 745, 746, 831, 833, 847, 914, 951, 1019, 1028, 1029, 1030, 1050, 1255, 1304], "w": [24, 72, 101, 135, 148, 156, 159, 457, 499, 513, 520, 527, 529, 573, 626, 655, 718, 733, 742, 745, 1034, 1076, 1090, 1097, 1104, 1106, 1144, 1173, 1293], "wu": [24, 441, 573, 1017, 1302], "wv": [24, 573], "wvu": [24, 573], "differenti": [24, 29, 122, 123, 124, 129, 137, 139, 140, 143, 144, 146, 147, 150, 151, 152, 154, 155, 193, 196, 458, 459, 460, 461, 465, 469, 483, 484, 498, 499, 503, 506, 520, 521, 522, 523, 524, 525, 527, 530, 534, 573, 581, 705, 706, 707, 712, 720, 722, 723, 727, 728, 731, 732, 736, 737, 738, 740, 741, 777, 780, 1035, 1036, 1037, 1038, 1042, 1046, 1060, 1061, 1075, 1076, 1080, 1083, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1107, 1111, 1255, 1275, 1296], "zdr": [24, 123, 124, 128, 139, 140, 143, 144, 150, 151, 152, 160, 196, 444, 456, 457, 520, 573, 706, 707, 711, 722, 723, 727, 728, 736, 737, 738, 746, 780, 1033, 1034, 1097], "zdru": [24, 573], "co": [24, 113, 117, 120, 138, 139, 140, 150, 151, 152, 193, 497, 511, 573, 667, 671, 674, 721, 722, 723, 736, 737, 738, 777, 1074, 1088, 1206, 1292], "correl": [24, 138, 139, 140, 150, 151, 152, 193, 196, 197, 498, 499, 518, 520, 527, 529, 573, 721, 722, 723, 730, 736, 737, 738, 777, 780, 781, 1075, 1076, 1095, 1097, 1104, 1106, 1208, 1210, 1230, 1274, 1275, 1291, 1292], "coeffici": [24, 122, 123, 124, 143, 144, 145, 146, 147, 148, 159, 193, 457, 498, 499, 500, 520, 527, 573, 705, 706, 707, 727, 728, 729, 731, 732, 733, 745, 777, 1034, 1075, 1076, 1077, 1097, 1104, 1208, 1210, 1211, 1230, 1255, 1274, 1275, 1291], "rhohv": [24, 128, 138, 139, 140, 150, 151, 152, 196, 197, 444, 453, 456, 457, 464, 468, 477, 478, 489, 520, 527, 529, 573, 711, 721, 722, 723, 730, 736, 737, 738, 780, 781, 1030, 1033, 1034, 1041, 1045, 1054, 1055, 1066, 1097, 1104, 1106, 1255, 1274, 1304], "rhohvu": [24, 573], "phase": [24, 29, 122, 123, 124, 129, 135, 137, 139, 140, 146, 147, 150, 151, 152, 154, 155, 196, 458, 459, 465, 469, 483, 486, 492, 498, 499, 503, 506, 518, 520, 521, 522, 523, 524, 525, 530, 534, 573, 581, 705, 706, 707, 712, 718, 720, 722, 723, 731, 732, 736, 737, 738, 740, 741, 780, 1035, 1036, 1042, 1046, 1060, 1063, 1069, 1075, 1076, 1080, 1083, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1107, 1111, 1255, 1275, 1296, 1300], "phidp": [24, 123, 124, 129, 137, 139, 140, 146, 147, 150, 151, 152, 154, 155, 196, 521, 522, 523, 573, 706, 707, 712, 720, 722, 723, 731, 732, 736, 737, 738, 740, 741, 780, 1098, 1099, 1100, 1255, 1296], "uphidp": [24, 573], "uphidpu": [24, 573], "kdp": [24, 140, 146, 147, 150, 151, 152, 444, 457, 503, 506, 520, 521, 522, 523, 524, 525, 573, 723, 731, 732, 736, 737, 738, 1034, 1080, 1083, 1097, 1098, 1099, 1100, 1101, 1102, 1255, 1293, 1296], "ukdp": [24, 573], "ukdpu": [24, 573], "qualiti": [24, 128, 148, 149, 156, 159, 197, 524, 525, 573, 711, 730, 733, 735, 742, 745, 781, 1101, 1102, 1262], "sqi": [24, 573, 1255], "sqiu": [24, 573], "sqiv": [24, 573], "sqivu": [24, 573], "temperatur": [24, 123, 124, 131, 132, 138, 139, 140, 142, 150, 151, 152, 199, 498, 516, 520, 527, 529, 573, 706, 707, 714, 715, 721, 722, 723, 726, 736, 737, 738, 783, 1075, 1093, 1097, 1104, 1106, 1293], "temp": [24, 573, 1255], "bin": [24, 55, 84, 113, 114, 115, 124, 137, 138, 139, 140, 143, 154, 155, 389, 462, 470, 479, 492, 495, 517, 521, 522, 531, 573, 609, 638, 667, 668, 669, 707, 720, 721, 722, 723, 727, 740, 741, 976, 1039, 1047, 1056, 1069, 1072, 1094, 1098, 1099, 1108, 1127, 1156, 1219, 1225, 1236, 1255, 1266, 1300, 1304], "respect": [24, 55, 84, 157, 158, 160, 446, 497, 498, 499, 520, 527, 528, 529, 531, 532, 573, 609, 638, 734, 743, 744, 746, 1022, 1074, 1075, 1076, 1097, 1104, 1105, 1106, 1108, 1109, 1127, 1156], "iso0": [24, 123, 131, 132, 138, 139, 142, 150, 151, 152, 195, 457, 498, 499, 516, 520, 527, 528, 529, 533, 573, 706, 714, 715, 721, 722, 726, 736, 737, 738, 779, 1034, 1075, 1076, 1093, 1097, 1104, 1105, 1106, 1110], "visibl": [24, 130, 200, 513, 573, 713, 784, 1090, 1232, 1255, 1296], "digit": [24, 232, 298, 335, 372, 513, 550, 551, 565, 566, 573, 817, 883, 920, 957, 1090], "elev": [24, 27, 55, 62, 67, 78, 84, 91, 96, 107, 113, 114, 115, 131, 132, 139, 140, 143, 144, 145, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 193, 201, 218, 220, 225, 229, 230, 231, 232, 245, 251, 253, 263, 265, 267, 268, 285, 287, 292, 296, 297, 298, 301, 318, 320, 328, 329, 333, 334, 335, 338, 355, 357, 365, 366, 370, 371, 372, 390, 446, 470, 492, 493, 511, 513, 517, 525, 527, 573, 577, 609, 616, 621, 632, 638, 645, 650, 661, 667, 668, 669, 714, 715, 722, 723, 725, 727, 728, 729, 733, 734, 735, 736, 737, 738, 742, 743, 744, 745, 746, 777, 786, 803, 805, 810, 814, 815, 816, 817, 830, 836, 838, 848, 850, 852, 853, 870, 872, 877, 881, 882, 883, 886, 903, 905, 913, 914, 918, 919, 920, 923, 940, 942, 950, 951, 955, 956, 957, 977, 1022, 1047, 1069, 1070, 1088, 1090, 1094, 1102, 1104, 1127, 1134, 1139, 1150, 1156, 1163, 1168, 1179, 1213, 1228, 1232, 1235, 1240, 1255, 1266, 1291, 1298, 1304], "model": [24, 26, 27, 55, 84, 113, 114, 131, 132, 134, 232, 298, 335, 372, 387, 393, 513, 527, 529, 573, 576, 577, 609, 638, 667, 668, 714, 715, 717, 817, 883, 920, 957, 974, 980, 1090, 1104, 1106, 1127, 1156, 1211, 1293], "dem": [24, 232, 298, 335, 372, 513, 573, 817, 883, 920, 957, 1090, 1296], "vi": [24, 457, 520, 573, 1034, 1097, 1293], "introduc": [24, 391, 525, 527, 573, 978, 1102, 1104], "compress": [26, 27, 376, 384, 385, 576, 577, 963, 971, 972, 1255], "gzip": [26, 27, 376, 384, 385, 576, 577, 963, 971, 972], "compression_opt": [26, 27, 576, 577], "6": [26, 27, 128, 131, 132, 153, 154, 155, 196, 498, 502, 510, 513, 516, 520, 521, 522, 529, 576, 577, 711, 714, 715, 739, 740, 741, 780, 1075, 1079, 1087, 1090, 1093, 1097, 1098, 1099, 1106, 1220, 1227, 1239, 1263, 1266, 1271, 1272, 1276, 1279, 1291, 1293, 1296, 1298, 1300, 1303, 1304, 1305, 1308], "undefined_valu": [26, 27, 576, 577], "odim_convent": [26, 27, 576, 577], "v2_2": [26, 27, 576, 577], "write": [26, 27, 28, 392, 393, 394, 395, 396, 576, 577, 578, 579, 979, 980, 981, 982, 983, 1114, 1125, 1255, 1260, 1261, 1299], "eumetnet": [26, 27, 576, 577], "opera": [26, 27, 576, 577, 1296], "compliant": [26, 27, 392, 576, 577, 979], "produc": [26, 27, 28, 136, 383, 392, 394, 397, 471, 472, 530, 536, 576, 577, 579, 719, 970, 979, 981, 985, 1048, 1049, 1107, 1113, 1296, 1306], "follow": [26, 27, 28, 135, 193, 196, 197, 392, 393, 395, 396, 436, 442, 443, 513, 520, 523, 527, 529, 576, 577, 579, 718, 730, 777, 780, 781, 979, 980, 982, 983, 996, 1006, 1018, 1019, 1090, 1097, 1100, 1104, 1106, 1262, 1290, 1296, 1305, 1306], "inform": [26, 27, 35, 41, 55, 72, 84, 101, 122, 133, 143, 144, 145, 146, 147, 178, 190, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 382, 390, 393, 523, 532, 537, 540, 550, 551, 565, 566, 576, 577, 588, 595, 609, 626, 638, 655, 690, 702, 705, 716, 727, 728, 729, 731, 732, 762, 774, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 969, 977, 980, 1100, 1109, 1115, 1127, 1144, 1156, 1173, 1255, 1263, 1283, 1296, 1306], "http": [26, 27, 121, 386, 387, 388, 497, 518, 576, 577, 675, 973, 974, 975, 1025, 1074, 1095, 1230, 1274, 1283, 1292, 1296, 1305, 1306, 1308], "www": [26, 27, 121, 386, 387, 388, 518, 576, 577, 675, 973, 974, 975, 1095, 1306], "eu": [26, 27, 576, 577], "wp": [26, 27, 576, 577], "content": [26, 27, 576, 577], "upload": [26, 27, 576, 577, 1255], "2021": [26, 27, 576, 577, 1292, 1296], "07": [26, 27, 576, 577, 1263, 1269, 1274, 1288, 1292, 1304], "odim_h5_v2": [26, 27, 576, 577], "pdf": [26, 27, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 576, 577, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957], "creat": [26, 27, 28, 41, 52, 55, 57, 60, 84, 86, 89, 133, 134, 135, 136, 164, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 231, 235, 254, 268, 284, 297, 301, 317, 329, 334, 338, 354, 366, 371, 387, 392, 393, 394, 395, 396, 442, 443, 462, 470, 479, 492, 493, 495, 510, 530, 535, 536, 576, 577, 579, 595, 606, 609, 611, 614, 638, 640, 643, 716, 717, 718, 719, 730, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 802, 816, 820, 839, 853, 869, 882, 886, 902, 914, 919, 923, 939, 951, 956, 974, 979, 980, 981, 982, 983, 1018, 1019, 1039, 1047, 1056, 1069, 1070, 1072, 1087, 1107, 1112, 1113, 1115, 1125, 1127, 1129, 1132, 1156, 1158, 1161, 1246, 1247, 1255, 1257, 1258, 1260, 1263, 1266, 1267, 1268, 1270, 1271, 1273, 1287, 1292, 1296, 1297, 1299, 1302, 1306], "process": [26, 27, 134, 146, 147, 248, 457, 513, 576, 577, 717, 731, 732, 833, 1034, 1090, 1255, 1262, 1296, 1306], "save": [26, 27, 50, 203, 218, 220, 225, 229, 230, 231, 232, 239, 255, 270, 285, 287, 292, 296, 297, 298, 303, 318, 320, 328, 329, 333, 334, 335, 340, 355, 357, 365, 366, 370, 371, 372, 393, 395, 576, 577, 604, 788, 803, 805, 810, 814, 815, 816, 817, 824, 840, 855, 870, 872, 877, 881, 882, 883, 888, 903, 905, 913, 914, 918, 919, 920, 925, 940, 942, 950, 951, 955, 956, 957, 980, 982, 1020, 1124, 1296, 1297], "equal": [26, 27, 58, 87, 116, 118, 119, 134, 170, 171, 176, 184, 185, 188, 366, 384, 395, 532, 535, 576, 577, 612, 641, 670, 672, 673, 682, 683, 688, 696, 697, 700, 717, 754, 755, 760, 768, 769, 772, 951, 971, 982, 1109, 1112, 1130, 1159, 1240, 1274, 1292, 1293, 1303], "_fillvalu": [26, 27, 28, 392, 393, 576, 577, 579, 979, 980, 1255, 1299, 1304], "fill": [26, 27, 38, 122, 123, 124, 532, 576, 577, 591, 705, 706, 707, 1109, 1255, 1298, 1299], "linear": [26, 27, 123, 131, 132, 146, 147, 386, 497, 525, 576, 577, 706, 714, 715, 731, 732, 973, 1074, 1102, 1207, 1219, 1220, 1231, 1247, 1255, 1292, 1296], "keyword": [26, 27, 28, 217, 284, 317, 329, 354, 366, 386, 388, 469, 513, 576, 577, 579, 802, 869, 902, 914, 939, 951, 973, 975, 1046, 1090, 1255, 1299, 1302], "scale_factor": [26, 27, 28, 395, 576, 577, 579, 982], "add_offset": [26, 27, 28, 395, 576, 577, 579, 982], "calcul": [26, 27, 28, 29, 41, 43, 55, 66, 67, 84, 95, 96, 113, 114, 118, 122, 123, 124, 138, 139, 142, 146, 147, 150, 151, 152, 157, 165, 193, 195, 196, 197, 198, 199, 200, 201, 232, 268, 298, 301, 335, 338, 372, 442, 443, 447, 448, 454, 473, 474, 480, 494, 497, 513, 518, 530, 534, 535, 536, 576, 577, 579, 581, 595, 597, 609, 620, 621, 638, 649, 650, 667, 668, 672, 677, 705, 706, 707, 721, 722, 726, 730, 731, 732, 736, 737, 738, 743, 749, 777, 779, 780, 781, 782, 783, 784, 786, 817, 853, 883, 886, 920, 923, 957, 1018, 1019, 1023, 1024, 1031, 1050, 1051, 1057, 1071, 1074, 1090, 1095, 1107, 1111, 1112, 1113, 1115, 1117, 1127, 1138, 1139, 1156, 1167, 1168, 1204, 1206, 1219, 1222, 1223, 1224, 1229, 1248, 1255, 1257, 1260, 1266, 1282, 1283, 1289, 1292, 1296, 1300, 1303, 1306], "fly": [26, 27, 28, 576, 577, 579], "_write_as_dtyp": [26, 27, 28, 395, 576, 577, 579, 982], "datatyp": [26, 27, 576, 577, 1255], "It": [26, 27, 142, 148, 411, 425, 443, 511, 525, 527, 535, 576, 577, 726, 733, 1019, 1088, 1102, 1104, 1112, 1204, 1219, 1266, 1306, 1308], "uint8": [26, 27, 395, 576, 577, 982], "uint16": [26, 27, 395, 576, 577, 982], "typic": [26, 27, 117, 120, 134, 165, 169, 171, 178, 185, 190, 394, 441, 442, 576, 577, 671, 674, 677, 681, 683, 690, 697, 702, 717, 749, 753, 755, 762, 769, 774, 981, 1017, 1018, 1308], "lzf": [26, 27, 576, 577], "level": [26, 27, 43, 49, 51, 52, 55, 72, 84, 101, 123, 124, 239, 240, 241, 242, 247, 248, 249, 251, 253, 255, 256, 257, 258, 263, 265, 267, 386, 387, 388, 394, 395, 466, 471, 485, 499, 518, 527, 528, 529, 532, 535, 576, 577, 597, 603, 605, 606, 609, 626, 638, 655, 706, 707, 824, 825, 826, 827, 832, 833, 834, 836, 838, 840, 841, 842, 843, 848, 850, 852, 973, 974, 975, 981, 982, 1043, 1048, 1062, 1076, 1095, 1104, 1105, 1106, 1109, 1112, 1117, 1123, 1127, 1144, 1156, 1173, 1219, 1220, 1255, 1282, 1283, 1286, 1291, 1296, 1302, 1304, 1306], "recomend": [26, 27, 576, 577], "replac": [26, 27, 42, 56, 57, 58, 85, 86, 87, 134, 135, 169, 171, 178, 185, 190, 576, 577, 596, 610, 611, 612, 639, 640, 641, 681, 683, 690, 697, 702, 717, 718, 753, 755, 762, 769, 774, 1116, 1128, 1129, 1130, 1157, 1158, 1159, 1255], "exampl": [26, 27, 40, 57, 86, 165, 218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 397, 438, 439, 440, 442, 443, 576, 577, 593, 611, 640, 677, 749, 803, 810, 813, 814, 815, 816, 817, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957, 985, 1009, 1013, 1014, 1015, 1018, 1019, 1125, 1129, 1158, 1255, 1257, 1258, 1262, 1263, 1266, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1296, 1298, 1300, 1303, 1304, 1306, 1308], "NOT": [26, 27, 165, 576, 577, 677, 749], "written": [26, 27, 393, 395, 396, 576, 577, 980, 982, 983, 1255, 1296], "odim": [26, 27, 576, 577, 1255], "convent": [26, 27, 55, 84, 133, 450, 469, 510, 535, 536, 576, 577, 609, 638, 716, 1027, 1046, 1087, 1112, 1113, 1127, 1156, 1262, 1296, 1304], "v2_3": [26, 27, 576, 577], "support": [27, 247, 248, 329, 366, 377, 385, 386, 387, 388, 389, 397, 523, 538, 577, 832, 833, 914, 951, 964, 972, 973, 974, 975, 976, 984, 985, 1009, 1100, 1255, 1282, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305], "featur": [27, 457, 577, 1034, 1274, 1292, 1296], "ppi": [27, 55, 84, 134, 135, 136, 141, 217, 221, 225, 284, 288, 292, 317, 321, 328, 329, 354, 358, 365, 366, 470, 492, 513, 525, 577, 609, 638, 717, 718, 719, 724, 802, 806, 810, 869, 873, 877, 902, 906, 913, 914, 939, 943, 950, 951, 1020, 1047, 1069, 1090, 1102, 1127, 1156, 1188, 1189, 1192, 1195, 1197, 1212, 1213, 1255, 1260, 1270, 1273, 1274, 1286, 1296, 1304], "pvol": [27, 577], "differ": [27, 116, 118, 119, 131, 132, 133, 143, 144, 145, 150, 151, 152, 497, 502, 510, 523, 529, 577, 670, 672, 673, 714, 715, 716, 725, 727, 728, 729, 736, 737, 738, 960, 1009, 1074, 1079, 1087, 1100, 1106, 1238, 1240, 1255, 1262, 1266, 1292, 1302, 1305, 1306], "sweep": [27, 35, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 110, 111, 112, 133, 134, 135, 138, 141, 143, 144, 178, 190, 193, 196, 197, 203, 205, 217, 218, 220, 225, 229, 230, 231, 232, 270, 272, 284, 285, 287, 292, 296, 297, 298, 303, 305, 317, 318, 320, 328, 329, 333, 334, 335, 340, 342, 354, 355, 357, 365, 366, 370, 371, 372, 386, 387, 388, 390, 448, 470, 492, 535, 577, 588, 609, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 631, 632, 633, 634, 635, 636, 637, 638, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 663, 664, 665, 666, 690, 702, 716, 717, 718, 721, 724, 727, 728, 730, 762, 774, 777, 780, 781, 788, 790, 802, 803, 805, 810, 814, 815, 816, 817, 855, 857, 869, 870, 872, 877, 881, 882, 883, 888, 890, 902, 903, 905, 913, 914, 918, 919, 920, 925, 927, 939, 940, 942, 950, 951, 955, 956, 957, 973, 974, 975, 977, 1009, 1020, 1024, 1047, 1069, 1112, 1127, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1188, 1189, 1212, 1213, 1255, 1258, 1262, 1266, 1282, 1283, 1285, 1290, 1292, 1294, 1300, 1303, 1304], "group": [27, 577, 1255, 1306], "sector": [27, 55, 84, 577, 609, 638, 1127, 1156, 1255, 1304], "azim": [27, 577, 1255], "rhi": [27, 55, 84, 217, 218, 229, 284, 285, 296, 317, 318, 333, 354, 355, 370, 470, 492, 499, 525, 527, 577, 609, 638, 802, 803, 814, 869, 870, 881, 902, 903, 918, 939, 940, 955, 1020, 1047, 1069, 1076, 1102, 1104, 1127, 1156, 1189, 1198, 1212, 1213, 1228, 1240, 1255, 1260, 1270, 1296, 1304], "Not": [27, 377, 385, 577, 964, 972], "yet": [27, 390, 577, 977, 1262, 1296], "singl": [27, 40, 134, 135, 136, 141, 150, 223, 224, 226, 228, 290, 291, 293, 295, 323, 324, 330, 332, 360, 361, 367, 369, 394, 443, 577, 593, 717, 718, 719, 724, 736, 808, 809, 811, 813, 875, 876, 878, 880, 908, 909, 915, 917, 945, 946, 952, 954, 981, 1019, 1192, 1253, 1255, 1260, 1262, 1265, 1266, 1290, 1306], "fix": [27, 493, 538, 577, 1070, 1260, 1261, 1285, 1298, 1305, 1306, 1308], "stare": [27, 577], "mode": [27, 55, 72, 84, 101, 376, 493, 527, 577, 609, 626, 638, 655, 963, 1070, 1104, 1127, 1144, 1156, 1173, 1255, 1304, 1305, 1306], "netcdf4": [28, 50, 387, 392, 393, 579, 604, 974, 979, 980, 1124, 1255, 1280, 1296, 1298, 1305, 1308], "time_refer": [28, 392, 579, 979, 1298], "arm_time_vari": [28, 50, 392, 393, 579, 604, 979, 980, 1124], "standard": [28, 50, 55, 72, 84, 101, 113, 114, 133, 143, 144, 160, 392, 393, 394, 471, 498, 510, 524, 538, 579, 604, 609, 626, 638, 655, 667, 668, 716, 727, 728, 734, 746, 979, 980, 981, 1025, 1048, 1075, 1087, 1101, 1124, 1127, 1144, 1156, 1173, 1202, 1203, 1229, 1234, 1255, 1298, 1299, 1300, 1306], "attempt": [28, 134, 135, 392, 393, 579, 717, 718, 979, 980, 1255], "also": [28, 40, 55, 84, 169, 219, 243, 261, 286, 319, 356, 387, 388, 392, 394, 396, 435, 497, 579, 593, 609, 638, 681, 753, 804, 828, 846, 871, 904, 941, 974, 975, 979, 981, 983, 995, 1005, 1009, 1074, 1127, 1156, 1255, 1262, 1266, 1292, 1296, 1298, 1302, 1304, 1305, 1306, 1307, 1308], "made": [28, 57, 86, 392, 448, 579, 611, 640, 979, 1024, 1129, 1158, 1253, 1306], "meet": [28, 169, 171, 178, 185, 190, 392, 579, 681, 683, 690, 697, 702, 753, 755, 762, 769, 774, 979], "mani": [28, 392, 457, 579, 979, 1034, 1255, 1296, 1302, 1306, 1308], "outlin": [28, 392, 523, 579, 979, 1100, 1219, 1220, 1306], "To": [28, 41, 57, 86, 193, 195, 196, 197, 198, 199, 200, 392, 393, 395, 579, 595, 611, 640, 730, 777, 779, 780, 781, 782, 783, 784, 979, 980, 982, 1115, 1129, 1158, 1253, 1296, 1299, 1302, 1305, 1306, 1308], "control": [28, 40, 133, 148, 149, 156, 159, 390, 392, 393, 443, 520, 523, 527, 579, 593, 716, 733, 735, 742, 745, 977, 979, 980, 1019, 1097, 1100, 1104, 1302], "how": [28, 57, 86, 390, 392, 393, 457, 499, 579, 611, 640, 977, 979, 980, 1034, 1076, 1129, 1158, 1255, 1262, 1263, 1271, 1272, 1273, 1296, 1299, 1302, 1303, 1308], "_zlib": [28, 392, 393, 579, 979, 980], "_deflatelevel": [28, 392, 393, 579, 979, 980], "_shuffl": [28, 392, 393, 579, 979, 980], "_fletcher32": [28, 392, 393, 579, 979, 980], "_contingu": [28, 392, 393, 579, 979, 980], "_chunksiz": [28, 392, 393, 579, 979, 980], "_endian": [28, 392, 393, 579, 979, 980], "_least_significant_digit": [28, 392, 393, 579, 979, 980], "see": [28, 57, 86, 114, 133, 165, 217, 231, 244, 248, 250, 252, 260, 264, 266, 284, 297, 317, 329, 334, 354, 366, 371, 384, 392, 393, 443, 497, 499, 518, 532, 579, 611, 640, 668, 677, 716, 749, 802, 816, 829, 833, 835, 837, 845, 849, 851, 869, 882, 902, 914, 919, 939, 951, 956, 971, 979, 980, 1019, 1020, 1074, 1076, 1095, 1109, 1129, 1158, 1255, 1262, 1263, 1271, 1292, 1298, 1300, 1302, 1303, 1306], "document": [28, 133, 244, 248, 250, 252, 260, 264, 266, 329, 366, 387, 392, 393, 579, 716, 829, 833, 835, 837, 845, 849, 851, 914, 951, 974, 979, 980, 1247, 1254, 1296, 1302, 1306], "detail": [28, 114, 133, 165, 248, 260, 329, 366, 392, 393, 441, 443, 497, 579, 668, 677, 716, 749, 833, 845, 914, 951, 979, 980, 1017, 1019, 1074, 1292, 1296, 1304, 1306], "one": [28, 36, 41, 49, 50, 55, 57, 84, 86, 131, 132, 141, 155, 169, 171, 178, 185, 190, 193, 197, 392, 393, 395, 441, 442, 443, 446, 490, 499, 508, 509, 523, 524, 525, 527, 528, 529, 578, 579, 589, 595, 603, 604, 609, 611, 638, 640, 681, 683, 690, 697, 702, 714, 715, 724, 730, 741, 753, 755, 762, 769, 774, 777, 781, 979, 980, 982, 1009, 1017, 1018, 1019, 1022, 1025, 1067, 1076, 1085, 1086, 1100, 1101, 1102, 1104, 1105, 1106, 1115, 1123, 1124, 1127, 1129, 1156, 1158, 1209, 1212, 1213, 1230, 1240, 1241, 1247, 1255, 1260, 1265, 1266, 1271, 1296, 1299, 1304, 1306, 1308], "netcdf4_class": [28, 50, 392, 393, 579, 604, 979, 980, 1124], "netcdf3_class": [28, 50, 392, 393, 579, 604, 979, 980, 1124], "netcdf3_64bit": [28, 50, 392, 393, 579, 604, 979, 980, 1124], "non": [28, 116, 118, 119, 135, 390, 392, 497, 523, 525, 538, 579, 670, 672, 673, 718, 977, 979, 1074, 1100, 1102, 1255, 1292], "zero": [28, 392, 497, 513, 519, 523, 550, 579, 960, 979, 1074, 1090, 1096, 1100, 1240, 1247, 1255, 1292, 1299, 1303], "base_tim": [28, 50, 392, 393, 579, 604, 979, 980, 1124], "time_offset": [28, 50, 392, 393, 579, 604, 979, 980, 1124], "phidp_field": [29, 122, 123, 124, 129, 137, 139, 140, 146, 147, 150, 151, 152, 154, 155, 521, 522, 523, 524, 525, 534, 581, 705, 706, 707, 712, 720, 722, 723, 731, 732, 736, 737, 738, 740, 741, 1098, 1099, 1100, 1101, 1102, 1111, 1257, 1293], "phidp_texture_field": [29, 534, 581, 1111], "textur": [29, 196, 448, 534, 581, 780, 1024, 1111, 1204, 1229, 1252, 1255, 1296, 1300], "real": [29, 133, 534, 581, 716, 1111, 1260, 1270, 1292, 1296, 1306, 1308], "part": [29, 501, 534, 581, 1078, 1111, 1255, 1262, 1296, 1298, 1299, 1300, 1302, 1303, 1304], "shift": [29, 129, 137, 146, 147, 150, 154, 155, 201, 268, 301, 338, 519, 521, 522, 524, 534, 581, 712, 720, 731, 732, 736, 740, 741, 786, 853, 886, 923, 1096, 1098, 1099, 1101, 1111, 1255, 1300], "texture_field": [29, 534, 581, 1111], "gourlei": [29, 128, 150, 151, 152, 534, 581, 711, 736, 737, 738, 1111], "j": [29, 117, 120, 135, 146, 147, 148, 149, 156, 159, 497, 499, 520, 524, 525, 527, 530, 532, 534, 535, 536, 581, 671, 674, 718, 731, 732, 733, 735, 742, 745, 1025, 1074, 1076, 1097, 1101, 1102, 1104, 1107, 1109, 1111, 1112, 1113, 1257, 1258, 1267, 1268, 1275, 1276, 1278, 1280, 1284, 1287, 1292, 1296, 1306], "p": [29, 31, 33, 39, 113, 117, 120, 148, 149, 156, 159, 441, 452, 457, 466, 470, 471, 479, 485, 492, 501, 530, 534, 581, 584, 586, 592, 667, 671, 674, 733, 735, 742, 745, 1017, 1029, 1034, 1043, 1047, 1048, 1056, 1062, 1069, 1078, 1107, 1111, 1185, 1219, 1296, 1306], "tabari": [29, 534, 581, 1111], "parent": [29, 534, 581, 1111], "du": [29, 534, 581, 1111], "chatelet": [29, 534, 581, 1111], "fuzzi": [29, 534, 581, 1111], "logic": [29, 169, 171, 178, 185, 190, 534, 581, 681, 683, 690, 697, 702, 753, 755, 762, 769, 774, 1111], "algorithm": [29, 131, 132, 133, 134, 135, 144, 150, 151, 165, 425, 441, 443, 452, 457, 471, 472, 497, 499, 500, 523, 527, 532, 534, 581, 677, 714, 715, 716, 717, 718, 728, 736, 737, 749, 1017, 1019, 1029, 1034, 1048, 1049, 1074, 1076, 1077, 1100, 1104, 1109, 1111, 1255, 1256, 1260, 1296, 1306], "separ": [29, 145, 513, 518, 532, 534, 535, 581, 729, 1090, 1095, 1109, 1111, 1112, 1219, 1230, 1262, 1274, 1308], "precipit": [29, 129, 132, 137, 154, 155, 479, 492, 520, 534, 581, 712, 715, 720, 740, 741, 1056, 1069, 1097, 1111, 1230, 1255, 1266, 1274, 1292, 1306], "nonprecipit": [29, 534, 581, 1111], "echo": [29, 497, 513, 520, 534, 581, 1074, 1090, 1097, 1111, 1292, 1303], "polarimetr": [29, 122, 123, 124, 128, 146, 147, 462, 468, 469, 470, 479, 492, 499, 502, 520, 527, 530, 531, 534, 581, 705, 706, 707, 711, 731, 732, 1039, 1045, 1046, 1047, 1056, 1069, 1076, 1079, 1097, 1104, 1107, 1108, 1111, 1255, 1257], "observ": [29, 113, 131, 132, 148, 149, 151, 156, 159, 457, 479, 492, 497, 523, 529, 534, 581, 667, 714, 715, 733, 735, 737, 742, 745, 1034, 1056, 1069, 1074, 1100, 1106, 1111, 1211, 1292], "journal": [29, 133, 135, 441, 452, 466, 471, 472, 485, 501, 513, 534, 581, 716, 718, 1017, 1029, 1043, 1048, 1049, 1062, 1078, 1090, 1111, 1219, 1220, 1296, 1306], "atmospher": [29, 55, 84, 113, 114, 133, 134, 148, 159, 443, 446, 472, 501, 513, 526, 534, 581, 609, 638, 667, 668, 716, 717, 733, 745, 1019, 1022, 1049, 1078, 1090, 1103, 1111, 1127, 1156, 1220, 1262, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "ocean": [29, 133, 146, 147, 472, 497, 501, 513, 530, 534, 581, 716, 731, 732, 1049, 1074, 1078, 1090, 1107, 1111, 1220, 1262, 1292], "technologi": [29, 133, 472, 501, 513, 534, 581, 716, 1049, 1078, 1090, 1111, 1220], "24": [29, 534, 581, 1111, 1255, 1259, 1263, 1264], "8": [29, 72, 101, 121, 122, 133, 146, 150, 151, 196, 245, 247, 248, 249, 251, 253, 263, 265, 267, 534, 581, 626, 655, 675, 705, 716, 731, 736, 737, 780, 830, 832, 833, 834, 836, 838, 848, 850, 852, 1111, 1144, 1173, 1220, 1254, 1266, 1272, 1282, 1286, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "1439": [29, 534, 581, 1111], "1451": [29, 534, 581, 1111], "class": [30, 41, 51, 55, 84, 165, 194, 201, 235, 247, 248, 254, 268, 301, 329, 338, 397, 411, 425, 442, 457, 499, 500, 513, 520, 538, 582, 583, 595, 605, 609, 638, 676, 677, 748, 749, 778, 785, 786, 820, 832, 833, 839, 853, 886, 914, 923, 984, 985, 998, 1008, 1009, 1010, 1012, 1018, 1034, 1076, 1077, 1090, 1097, 1114, 1115, 1125, 1127, 1156, 1254, 1255, 1296, 1302, 1303, 1306], "filetyp": [30, 36, 583, 589], "need": [30, 55, 64, 66, 67, 84, 93, 95, 96, 131, 132, 163, 394, 407, 497, 583, 609, 618, 620, 621, 638, 647, 649, 650, 714, 715, 981, 1074, 1127, 1136, 1138, 1139, 1156, 1165, 1167, 1168, 1222, 1248, 1255, 1262, 1266, 1271, 1292, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "being": [30, 32, 133, 193, 218, 220, 225, 228, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 443, 525, 583, 585, 716, 777, 803, 805, 810, 813, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 914, 917, 918, 919, 920, 940, 942, 950, 951, 954, 955, 956, 957, 1019, 1025, 1102, 1233, 1234, 1255, 1283, 1305], "string": [30, 41, 55, 84, 220, 223, 224, 228, 231, 246, 248, 262, 287, 290, 291, 295, 297, 320, 323, 324, 325, 326, 327, 330, 332, 334, 357, 360, 361, 362, 363, 364, 367, 369, 371, 375, 424, 442, 443, 463, 482, 512, 513, 518, 524, 525, 530, 535, 536, 539, 583, 595, 609, 638, 805, 808, 809, 813, 816, 831, 833, 847, 872, 875, 876, 880, 882, 905, 908, 909, 910, 911, 912, 915, 917, 919, 942, 945, 946, 947, 948, 949, 952, 954, 956, 962, 1018, 1019, 1040, 1059, 1089, 1090, 1095, 1101, 1102, 1107, 1112, 1113, 1115, 1127, 1156, 1205, 1206, 1255, 1271, 1306], "initi": [30, 45, 46, 47, 51, 73, 74, 75, 76, 102, 103, 104, 105, 133, 134, 165, 201, 268, 301, 338, 397, 531, 583, 599, 600, 601, 605, 627, 628, 629, 630, 656, 657, 658, 659, 677, 716, 717, 749, 786, 853, 886, 923, 985, 1108, 1119, 1120, 1121, 1145, 1146, 1147, 1148, 1174, 1175, 1176, 1177, 1255, 1273], "indic": [32, 41, 55, 79, 82, 83, 84, 108, 111, 112, 147, 150, 151, 165, 169, 178, 190, 245, 390, 499, 523, 524, 525, 530, 535, 536, 585, 595, 609, 633, 636, 637, 638, 662, 665, 666, 677, 681, 690, 702, 725, 732, 736, 737, 749, 753, 762, 774, 830, 977, 1076, 1100, 1101, 1102, 1107, 1112, 1113, 1115, 1127, 1151, 1154, 1155, 1156, 1180, 1183, 1184, 1220, 1221, 1223, 1255, 1262, 1279], "dic": [33, 41, 55, 56, 84, 85, 397, 410, 443, 586, 595, 609, 610, 638, 639, 985, 1019, 1115, 1127, 1128, 1156, 1157], "colormap": [34, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 394, 587, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 981, 1255, 1260, 1270, 1274, 1293], "select": [35, 60, 69, 89, 98, 135, 462, 470, 479, 492, 495, 508, 509, 527, 529, 531, 588, 614, 623, 643, 652, 718, 1039, 1047, 1056, 1069, 1072, 1085, 1086, 1104, 1106, 1108, 1132, 1141, 1161, 1170, 1255], "limit": [35, 133, 134, 146, 147, 193, 195, 196, 197, 198, 199, 200, 220, 234, 260, 287, 300, 320, 337, 357, 374, 384, 395, 444, 517, 523, 527, 588, 716, 717, 730, 731, 732, 777, 779, 780, 781, 782, 783, 784, 805, 819, 845, 872, 885, 905, 922, 942, 959, 971, 982, 1094, 1100, 1104, 1249, 1250, 1255, 1267, 1268, 1272, 1296, 1302], "relat": [35, 124, 150, 151, 152, 395, 497, 502, 505, 506, 507, 524, 532, 588, 707, 736, 737, 738, 982, 1074, 1079, 1082, 1083, 1084, 1101, 1109, 1255, 1292, 1296, 1305, 1306], "instac": [35, 588], "nyquist": [35, 68, 97, 133, 134, 135, 448, 588, 622, 651, 716, 717, 718, 1024, 1140, 1169, 1204, 1255, 1300, 1304], "consid": [35, 122, 129, 131, 132, 136, 137, 138, 139, 140, 141, 143, 144, 150, 151, 152, 154, 155, 466, 471, 472, 485, 497, 508, 509, 517, 521, 522, 527, 528, 529, 588, 705, 712, 714, 715, 719, 720, 721, 722, 723, 724, 727, 728, 736, 737, 738, 740, 741, 960, 1043, 1048, 1049, 1062, 1074, 1085, 1086, 1094, 1098, 1099, 1104, 1105, 1106, 1209, 1212, 1213, 1219, 1220, 1235, 1292], "vmin": [35, 218, 220, 225, 228, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 394, 588, 803, 805, 810, 813, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 914, 917, 918, 919, 920, 940, 942, 950, 951, 954, 955, 956, 957, 981, 1255, 1257, 1258, 1262, 1263, 1266, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1299, 1300, 1302, 1303], "vmax": [35, 218, 220, 225, 228, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 394, 588, 803, 805, 810, 813, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 914, 917, 918, 919, 920, 940, 942, 950, 951, 954, 955, 956, 957, 981, 1255, 1257, 1258, 1262, 1263, 1266, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1299, 1300, 1302, 1303], "2": [35, 113, 117, 121, 135, 136, 140, 141, 143, 144, 145, 148, 150, 151, 159, 196, 207, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 245, 246, 247, 251, 253, 262, 263, 265, 267, 274, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 307, 318, 320, 323, 324, 328, 331, 332, 333, 334, 335, 337, 344, 355, 357, 360, 361, 365, 366, 368, 369, 370, 371, 372, 374, 386, 387, 388, 390, 433, 441, 443, 452, 453, 471, 479, 494, 497, 513, 523, 529, 535, 588, 667, 671, 675, 718, 719, 723, 724, 727, 728, 729, 733, 736, 737, 745, 780, 792, 803, 805, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 830, 831, 832, 836, 838, 847, 848, 850, 852, 859, 870, 872, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 892, 903, 905, 908, 909, 913, 916, 917, 918, 919, 920, 922, 929, 940, 942, 945, 946, 950, 951, 953, 954, 955, 956, 957, 959, 973, 974, 975, 977, 993, 1004, 1009, 1017, 1019, 1020, 1029, 1030, 1048, 1056, 1071, 1074, 1090, 1100, 1106, 1112, 1187, 1205, 1206, 1220, 1230, 1232, 1266, 1272, 1273, 1279, 1282, 1283, 1286, 1290, 1292, 1294, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "tuplet": [35, 588], "minimun": [35, 588], "maximun": [35, 588], "teoric": [35, 588], "copi": [36, 40, 41, 57, 58, 60, 61, 62, 64, 86, 87, 89, 90, 91, 93, 179, 180, 397, 443, 589, 593, 595, 611, 612, 614, 615, 616, 618, 640, 641, 643, 644, 645, 647, 691, 692, 763, 764, 985, 1019, 1115, 1129, 1130, 1132, 1133, 1134, 1136, 1158, 1159, 1161, 1162, 1163, 1165, 1253, 1255, 1299], "field_map": [36, 589], "anoth": [36, 462, 470, 479, 492, 495, 589, 1009, 1039, 1047, 1056, 1069, 1072, 1230, 1255, 1266, 1298, 1303, 1305, 1308], "current": [38, 43, 131, 132, 133, 169, 171, 178, 185, 190, 203, 205, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 243, 245, 246, 247, 248, 249, 251, 253, 260, 261, 262, 263, 265, 267, 270, 272, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 305, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 340, 342, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 385, 445, 462, 470, 479, 492, 493, 495, 513, 523, 591, 597, 681, 683, 690, 697, 702, 714, 715, 716, 753, 755, 762, 769, 774, 788, 790, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 828, 830, 831, 832, 833, 834, 836, 838, 845, 846, 847, 848, 850, 852, 855, 857, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 888, 890, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 922, 925, 927, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 959, 972, 1010, 1012, 1039, 1047, 1056, 1069, 1070, 1072, 1090, 1100, 1117, 1306], "empti": [39, 404, 433, 524, 525, 592, 993, 1004, 1101, 1102, 1185, 1187, 1190, 1255, 1298], "exist": [39, 42, 56, 57, 59, 85, 86, 88, 141, 169, 171, 178, 185, 190, 193, 196, 197, 390, 523, 592, 596, 610, 611, 613, 639, 640, 642, 681, 683, 690, 697, 702, 724, 730, 753, 755, 762, 769, 774, 777, 780, 781, 977, 1100, 1116, 1125, 1128, 1129, 1131, 1157, 1158, 1160, 1185, 1253, 1255, 1257, 1296, 1298], "self": [40, 146, 147, 150, 151, 152, 400, 403, 404, 405, 406, 409, 413, 415, 416, 420, 421, 593, 731, 732, 736, 737, 738, 1299, 1302, 1306], "descrip": [40, 593], "directori": [40, 537, 593, 1125, 1254, 1255, 1262, 1305, 1306], "default_config": [40, 593], "These": [40, 133, 165, 260, 394, 443, 538, 593, 677, 716, 749, 845, 981, 1019, 1236, 1262, 1271, 1292, 1296, 1303, 1305, 1306], "modifi": [40, 55, 84, 136, 593, 609, 638, 719, 1127, 1156, 1255, 1260, 1270, 1306], "environment": [40, 593, 1296, 1305], "pyart_config": [40, 593], "new": [40, 57, 58, 60, 86, 87, 89, 136, 169, 171, 178, 185, 190, 462, 470, 479, 492, 493, 495, 519, 530, 535, 593, 611, 612, 614, 640, 641, 643, 681, 683, 690, 697, 702, 719, 753, 755, 762, 769, 774, 1039, 1047, 1056, 1069, 1070, 1072, 1096, 1107, 1112, 1129, 1130, 1132, 1158, 1159, 1161, 1207, 1230, 1245, 1249, 1250, 1255, 1266, 1290, 1293, 1296, 1299, 1300, 1306, 1308], "execut": [40, 593, 1255, 1259, 1264, 1269, 1288, 1295], "full": [40, 72, 101, 136, 141, 390, 593, 626, 655, 719, 724, 977, 1144, 1173, 1255, 1274, 1292, 1296], "permiss": [40, 593], "mai": [40, 133, 134, 169, 171, 178, 185, 190, 301, 338, 386, 388, 394, 397, 411, 443, 525, 527, 538, 593, 681, 683, 690, 697, 702, 716, 717, 753, 755, 762, 769, 774, 886, 923, 973, 975, 981, 985, 1019, 1102, 1104, 1199, 1292, 1296], "secur": [40, 593], "do": [40, 55, 84, 121, 133, 193, 196, 197, 394, 395, 511, 593, 609, 638, 675, 716, 730, 777, 780, 781, 981, 982, 1088, 1127, 1156, 1255, 1263, 1292, 1298, 1299, 1300, 1302, 1303, 1305, 1306, 1308], "un": [40, 593], "trust": [40, 593], "method": [40, 41, 57, 64, 66, 67, 86, 93, 95, 96, 122, 124, 129, 137, 146, 147, 150, 152, 165, 169, 171, 178, 185, 190, 230, 395, 396, 397, 411, 436, 442, 466, 485, 512, 513, 521, 522, 523, 524, 525, 535, 593, 595, 611, 618, 620, 621, 640, 647, 649, 650, 677, 681, 683, 690, 697, 702, 705, 707, 712, 720, 731, 732, 736, 738, 749, 753, 755, 762, 769, 774, 815, 982, 983, 985, 996, 998, 1006, 1018, 1043, 1062, 1089, 1090, 1098, 1099, 1100, 1101, 1102, 1112, 1115, 1129, 1136, 1138, 1139, 1158, 1165, 1167, 1168, 1219, 1220, 1254, 1255, 1257, 1277, 1296, 1303, 1306], "chang": [40, 41, 55, 57, 61, 62, 64, 66, 84, 86, 90, 91, 93, 95, 133, 164, 165, 389, 397, 593, 595, 609, 611, 615, 616, 618, 620, 638, 640, 644, 645, 647, 649, 677, 716, 749, 976, 985, 1115, 1125, 1127, 1129, 1133, 1134, 1136, 1138, 1156, 1158, 1162, 1163, 1165, 1167, 1199, 1255, 1292, 1299, 1302, 1304, 1305, 1306], "home": [40, 593, 1306, 1308], "make": [40, 41, 499, 531, 593, 595, 1076, 1108, 1115, 1187, 1191, 1193, 1194, 1255, 1266, 1273, 1282, 1292, 1298, 1299, 1305, 1306, 1308], "adjust": [40, 117, 234, 300, 337, 374, 593, 671, 819, 885, 922, 959, 1271, 1274, 1282], "login": [40, 593], "shell": [40, 593], "session": [40, 593], "modif": [40, 57, 86, 593, 611, 640, 1129, 1158, 1255], "last": [40, 55, 84, 133, 142, 218, 219, 225, 229, 230, 231, 243, 245, 251, 253, 254, 261, 263, 265, 267, 285, 286, 292, 296, 297, 318, 319, 328, 329, 333, 334, 338, 355, 356, 365, 366, 370, 371, 593, 609, 638, 716, 726, 803, 804, 810, 814, 815, 816, 828, 830, 836, 838, 839, 846, 848, 850, 852, 870, 871, 877, 881, 882, 903, 904, 913, 914, 918, 919, 923, 940, 941, 950, 951, 955, 956, 1127, 1156, 1220, 1255, 1267, 1304], "origin_latitud": [41, 595, 1115], "origin_longitud": [41, 595, 1115], "origin_altitud": [41, 595, 1115], "z": [41, 47, 49, 55, 67, 75, 84, 96, 104, 113, 114, 115, 122, 124, 146, 147, 216, 283, 316, 353, 384, 394, 395, 438, 439, 440, 441, 442, 443, 497, 502, 505, 506, 507, 518, 595, 601, 603, 609, 621, 629, 638, 650, 658, 667, 668, 669, 705, 707, 731, 732, 801, 868, 901, 938, 971, 981, 982, 1013, 1014, 1015, 1017, 1018, 1019, 1025, 1074, 1079, 1082, 1083, 1084, 1095, 1115, 1121, 1123, 1127, 1139, 1147, 1156, 1168, 1176, 1187, 1226, 1257, 1280, 1282, 1283, 1292, 1296, 1299, 1306], "radar_latitud": [41, 595, 1115, 1222, 1248], "radar_longitud": [41, 595, 1115, 1222, 1248], "radar_altitud": [41, 517, 595, 1094, 1115], "radar_tim": [41, 595, 1115], "radar_nam": [41, 595, 1115], "rectilinear": [41, 595, 1115], "cartesian": [41, 43, 49, 55, 84, 113, 114, 115, 116, 117, 118, 119, 120, 384, 441, 442, 443, 499, 513, 566, 595, 597, 603, 609, 638, 667, 668, 669, 670, 671, 672, 673, 674, 971, 1008, 1009, 1017, 1018, 1019, 1020, 1076, 1090, 1115, 1117, 1123, 1127, 1156, 1260, 1265, 1272, 1296, 1297], "section": [41, 55, 57, 84, 86, 212, 214, 218, 232, 279, 281, 285, 298, 312, 314, 318, 335, 349, 351, 355, 372, 443, 454, 473, 474, 513, 595, 609, 611, 638, 640, 797, 799, 803, 817, 864, 866, 870, 883, 897, 899, 903, 920, 934, 936, 940, 957, 1019, 1031, 1050, 1051, 1090, 1115, 1127, 1129, 1156, 1158, 1212, 1213, 1225, 1255, 1260, 1270, 1292, 1296], "legaci": [41, 595, 1025, 1115], "befor": [41, 66, 95, 133, 141, 147, 164, 457, 462, 470, 479, 492, 495, 497, 527, 537, 595, 620, 649, 716, 724, 732, 1009, 1034, 1039, 1047, 1056, 1069, 1072, 1074, 1104, 1115, 1138, 1167, 1266, 1292, 1296, 1300, 1304, 1306], "from_legacy_paramet": [41, 595, 1115], "ax": [41, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 245, 246, 247, 248, 249, 251, 253, 260, 261, 262, 263, 265, 267, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 365, 366, 368, 369, 370, 371, 372, 373, 374, 438, 439, 440, 497, 519, 532, 595, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 828, 830, 831, 832, 833, 834, 836, 838, 845, 846, 847, 848, 850, 852, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 950, 951, 953, 954, 955, 956, 957, 958, 959, 1013, 1014, 1015, 1074, 1096, 1109, 1115, 1255, 1257, 1258, 1262, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1286, 1290, 1291, 1292, 1293, 1294, 1300], "moment": [41, 49, 55, 84, 128, 133, 134, 135, 196, 197, 386, 387, 388, 443, 550, 551, 595, 603, 609, 638, 711, 716, 717, 718, 730, 780, 781, 973, 974, 975, 1019, 1115, 1123, 1127, 1156, 1219, 1255, 1270, 1296, 1303], "describ": [41, 55, 84, 125, 193, 194, 195, 196, 197, 198, 199, 200, 246, 262, 466, 472, 485, 595, 609, 638, 708, 730, 777, 778, 779, 780, 781, 782, 783, 784, 831, 847, 1043, 1049, 1062, 1115, 1127, 1156, 1292], "geograph": [41, 55, 66, 84, 95, 116, 117, 118, 119, 120, 121, 301, 329, 338, 366, 393, 443, 595, 609, 620, 638, 649, 670, 671, 672, 673, 674, 675, 886, 914, 923, 951, 980, 1019, 1115, 1127, 1138, 1156, 1167, 1296], "axi": [41, 49, 55, 84, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 243, 245, 246, 247, 248, 249, 251, 253, 260, 261, 262, 263, 265, 267, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 318, 319, 320, 321, 322, 323, 324, 328, 329, 331, 332, 333, 334, 335, 337, 355, 356, 357, 358, 359, 360, 361, 365, 366, 368, 369, 370, 371, 372, 374, 384, 394, 595, 603, 609, 638, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 828, 830, 831, 832, 833, 834, 836, 838, 845, 846, 847, 848, 850, 852, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 903, 904, 905, 906, 907, 908, 909, 913, 914, 916, 917, 918, 919, 920, 922, 940, 941, 942, 943, 944, 945, 946, 950, 951, 953, 954, 955, 956, 957, 959, 971, 981, 1115, 1123, 1127, 1156, 1209, 1272, 1283, 1292, 1294, 1304], "dimension": [41, 49, 133, 135, 441, 532, 595, 603, 716, 718, 1017, 1109, 1115, 1123, 1266, 1292], "space": [41, 55, 84, 118, 220, 287, 320, 357, 395, 443, 497, 510, 518, 595, 609, 638, 672, 805, 872, 905, 942, 982, 1019, 1074, 1087, 1095, 1115, 1127, 1156, 1292, 1298], "along": [41, 134, 141, 232, 244, 245, 250, 251, 252, 253, 264, 265, 266, 267, 298, 335, 372, 493, 595, 717, 724, 817, 829, 830, 835, 836, 837, 838, 849, 850, 851, 852, 883, 920, 957, 1070, 1115, 1209, 1212, 1213, 1223, 1224, 1252, 1255, 1292], "three": [41, 135, 193, 197, 394, 532, 595, 718, 730, 777, 781, 981, 1109, 1115, 1292], "repeat": [41, 513, 595, 1090, 1115], "throughout": [41, 595, 1115], "transform": [41, 55, 84, 116, 117, 118, 119, 120, 121, 223, 230, 290, 301, 323, 338, 360, 366, 393, 443, 444, 457, 463, 482, 520, 533, 595, 609, 638, 670, 671, 672, 673, 674, 675, 808, 815, 875, 886, 908, 923, 945, 951, 980, 1019, 1034, 1040, 1059, 1097, 1110, 1115, 1127, 1156, 1255, 1271, 1292], "pyart_aeqd": [41, 48, 55, 84, 116, 118, 119, 595, 602, 609, 638, 670, 672, 673, 1115, 1122, 1127, 1156], "nativ": [41, 55, 84, 116, 118, 119, 377, 443, 595, 609, 638, 670, 672, 673, 964, 1019, 1025, 1115, 1127, 1156, 1255], "azimuth": [41, 55, 61, 62, 65, 67, 77, 84, 90, 91, 94, 96, 106, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 143, 144, 145, 157, 158, 160, 201, 202, 218, 220, 223, 225, 229, 230, 231, 245, 251, 253, 263, 265, 267, 268, 269, 285, 287, 290, 292, 296, 297, 301, 302, 318, 320, 323, 328, 329, 333, 334, 338, 339, 355, 357, 360, 365, 366, 370, 371, 390, 394, 462, 492, 493, 508, 509, 511, 513, 525, 527, 535, 536, 550, 595, 609, 615, 616, 619, 621, 631, 638, 644, 645, 648, 650, 660, 667, 668, 669, 670, 671, 672, 673, 674, 714, 715, 725, 727, 728, 729, 734, 743, 744, 746, 786, 787, 803, 805, 808, 810, 814, 815, 816, 830, 836, 838, 848, 850, 852, 853, 854, 870, 872, 875, 877, 881, 882, 886, 887, 903, 905, 908, 913, 914, 918, 919, 923, 924, 940, 942, 945, 950, 951, 955, 956, 977, 981, 1025, 1039, 1069, 1070, 1085, 1086, 1088, 1090, 1102, 1104, 1112, 1113, 1115, 1127, 1133, 1134, 1137, 1139, 1149, 1156, 1162, 1163, 1166, 1168, 1178, 1207, 1212, 1213, 1221, 1222, 1223, 1228, 1232, 1240, 1253, 1255, 1285, 1287, 1298, 1304, 1306], "equidist": [41, 55, 84, 116, 117, 118, 119, 120, 223, 290, 323, 360, 366, 394, 443, 595, 609, 638, 670, 671, 672, 673, 674, 808, 875, 908, 945, 951, 981, 1019, 1115, 1127, 1156], "pyproj": [41, 55, 84, 116, 118, 119, 595, 609, 638, 670, 672, 673, 1115, 1127, 1156, 1255, 1305], "projparam": [41, 44, 55, 84, 116, 118, 119, 595, 598, 609, 638, 670, 672, 673, 1115, 1118, 1127, 1156], "special": [41, 55, 84, 595, 609, 638, 1115, 1127, 1156], "_include_lon_0_lat_0": [41, 55, 84, 595, 609, 638, 1115, 1127, 1156], "interpret": [41, 55, 84, 134, 135, 393, 595, 609, 638, 717, 718, 980, 1115, 1127, 1156, 1233, 1234], "requir": [41, 55, 84, 116, 118, 119, 133, 136, 141, 390, 394, 443, 449, 450, 451, 452, 458, 459, 460, 461, 465, 466, 468, 469, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 535, 538, 595, 609, 638, 670, 672, 673, 716, 719, 724, 977, 981, 1019, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1038, 1042, 1043, 1045, 1046, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1073, 1112, 1115, 1127, 1156, 1219, 1255, 1263, 1296, 1306, 1308], "get_projparam": [41, 595, 1115], "evalu": [41, 397, 407, 422, 427, 595, 985, 987, 1115, 1255], "up": [41, 55, 84, 123, 124, 131, 132, 150, 151, 152, 169, 171, 178, 185, 190, 479, 502, 505, 506, 526, 529, 595, 609, 638, 681, 683, 690, 697, 702, 706, 707, 714, 715, 736, 737, 738, 753, 755, 762, 769, 774, 1025, 1056, 1079, 1082, 1083, 1103, 1106, 1115, 1127, 1156, 1204, 1236, 1238, 1239, 1255, 1292, 1300, 1304, 1307], "collect": [41, 178, 190, 379, 386, 387, 388, 390, 442, 443, 595, 690, 702, 762, 774, 966, 973, 974, 975, 977, 1008, 1018, 1019, 1115, 1262, 1276, 1306, 1307, 1308], "nradar": [41, 595, 1115], "whose": [41, 389, 440, 595, 976, 1015, 1115], "wa": [41, 66, 67, 95, 96, 134, 135, 164, 178, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 595, 620, 621, 649, 650, 690, 717, 718, 762, 803, 810, 814, 815, 816, 817, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 1115, 1138, 1139, 1167, 1168, 1230, 1255, 1296, 1306, 1308], "projection_proj": [41, 595, 1115], "instanc": [41, 48, 52, 58, 87, 133, 134, 135, 218, 225, 228, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 395, 396, 499, 595, 602, 606, 612, 641, 716, 717, 718, 803, 810, 813, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957, 982, 983, 1020, 1025, 1076, 1115, 1122, 1130, 1159, 1230, 1240, 1241, 1247, 1255], "valueerror": [41, 42, 48, 56, 57, 85, 86, 595, 596, 602, 610, 611, 639, 640, 1115, 1116, 1122, 1128, 1129, 1157, 1158], "point_z": [41, 393, 595, 980, 1115], "point_x": [41, 393, 595, 980, 1115], "point_i": [41, 393, 595, 980, 1115], "func": [41, 164, 595, 1115, 1255], "init_point_x_y_z": [41, 595, 1115], "reset": [41, 46, 47, 55, 66, 74, 75, 76, 84, 95, 103, 104, 105, 595, 600, 601, 609, 620, 628, 629, 630, 638, 649, 657, 658, 659, 1115, 1120, 1121, 1127, 1138, 1146, 1147, 1148, 1156, 1167, 1175, 1176, 1177, 1303], "point_latitud": [41, 393, 595, 980, 1115], "point_longitud": [41, 393, 595, 980, 1115], "perform": [41, 55, 66, 67, 68, 84, 95, 96, 97, 128, 133, 134, 135, 141, 169, 171, 178, 185, 190, 218, 223, 225, 228, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 290, 292, 295, 296, 297, 298, 318, 323, 328, 329, 332, 333, 334, 335, 338, 355, 360, 365, 366, 369, 370, 371, 372, 386, 389, 394, 457, 462, 470, 479, 492, 523, 595, 609, 620, 621, 622, 638, 649, 650, 651, 681, 683, 690, 697, 702, 711, 716, 717, 718, 724, 753, 755, 762, 769, 774, 803, 808, 810, 813, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 875, 877, 880, 881, 882, 883, 903, 908, 913, 914, 917, 918, 919, 920, 923, 940, 945, 950, 951, 954, 955, 956, 957, 973, 976, 981, 1034, 1039, 1047, 1056, 1069, 1100, 1115, 1127, 1138, 1139, 1140, 1156, 1167, 1168, 1169, 1253, 1256, 1257, 1258, 1260, 1267, 1268, 1272, 1296], "invers": [41, 55, 84, 148, 159, 463, 535, 595, 609, 638, 733, 745, 1040, 1112, 1115, 1127, 1156], "rel": [41, 55, 84, 123, 139, 142, 150, 151, 152, 195, 230, 327, 364, 444, 457, 531, 533, 595, 609, 638, 706, 722, 726, 736, 737, 738, 779, 815, 912, 949, 1034, 1108, 1110, 1115, 1127, 1156, 1255, 1304, 1306], "init_point_longitude_latitud": [41, 595, 1115], "point_altitud": [41, 45, 393, 595, 599, 980, 1115, 1119], "init_point_altitud": [41, 595, 1115], "init": [41, 235, 254, 397, 410, 595, 820, 839, 985, 1115, 1222, 1255], "field_dict": [42, 596, 1116], "replace_exist": [42, 56, 57, 58, 85, 86, 87, 596, 610, 611, 612, 639, 640, 641, 1116, 1128, 1129, 1130, 1157, 1158, 1159, 1255, 1292, 1299, 1300, 1306], "overwrit": [42, 596, 1116], "alreadi": [42, 56, 57, 85, 86, 148, 521, 522, 596, 610, 611, 639, 640, 733, 1098, 1099, 1116, 1128, 1129, 1157, 1158], "edg": [43, 67, 96, 114, 118, 133, 134, 135, 136, 141, 218, 225, 229, 230, 231, 245, 251, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 519, 525, 549, 597, 621, 650, 668, 672, 716, 717, 718, 719, 724, 803, 810, 814, 815, 816, 830, 836, 838, 848, 850, 852, 870, 877, 881, 882, 903, 913, 914, 918, 919, 940, 950, 951, 955, 956, 1096, 1102, 1117, 1139, 1168, 1282, 1283, 1292, 1296], "height": [43, 49, 51, 52, 123, 124, 131, 132, 138, 139, 142, 150, 151, 152, 195, 247, 248, 249, 263, 329, 366, 443, 444, 445, 447, 457, 462, 470, 479, 492, 495, 497, 498, 499, 512, 513, 516, 520, 526, 527, 528, 529, 531, 532, 533, 535, 536, 597, 603, 605, 606, 706, 707, 714, 715, 721, 722, 726, 736, 737, 738, 779, 832, 833, 834, 848, 914, 951, 1019, 1023, 1034, 1039, 1047, 1056, 1069, 1072, 1074, 1075, 1076, 1089, 1090, 1093, 1097, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1112, 1113, 1117, 1123, 1247, 1255, 1271, 1280, 1290, 1294, 1303, 1306], "determin": [43, 55, 84, 129, 133, 134, 135, 137, 154, 155, 245, 247, 248, 249, 251, 253, 260, 263, 265, 267, 329, 366, 377, 386, 387, 390, 395, 396, 448, 457, 466, 471, 485, 497, 499, 501, 502, 503, 505, 506, 531, 532, 535, 597, 609, 638, 712, 716, 717, 718, 720, 740, 741, 830, 832, 833, 834, 836, 838, 845, 848, 850, 852, 914, 951, 960, 964, 973, 974, 977, 982, 983, 1024, 1034, 1043, 1048, 1062, 1074, 1076, 1078, 1079, 1080, 1082, 1083, 1108, 1109, 1112, 1117, 1127, 1156, 1219, 1235, 1247, 1251, 1292, 1306], "same": [43, 55, 57, 65, 66, 67, 84, 86, 94, 95, 96, 117, 120, 133, 171, 185, 230, 329, 384, 390, 394, 395, 396, 443, 446, 457, 497, 518, 526, 597, 609, 611, 619, 620, 621, 638, 640, 648, 649, 650, 671, 674, 683, 697, 716, 755, 769, 815, 914, 971, 977, 981, 982, 983, 1019, 1020, 1022, 1034, 1074, 1095, 1103, 1117, 1127, 1129, 1137, 1138, 1139, 1156, 1158, 1166, 1167, 1168, 1222, 1232, 1248, 1253, 1262, 1282, 1283, 1292, 1298, 1303, 1306, 1308], "layout": [43, 383, 597, 970, 1117, 1255], "interpol": [43, 67, 96, 114, 118, 218, 225, 229, 230, 231, 232, 245, 251, 253, 263, 265, 267, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 379, 386, 442, 443, 462, 470, 479, 492, 495, 499, 512, 525, 526, 527, 535, 597, 621, 650, 668, 672, 803, 810, 814, 815, 816, 817, 830, 836, 838, 848, 850, 852, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 966, 973, 1018, 1019, 1020, 1039, 1047, 1056, 1069, 1072, 1076, 1089, 1102, 1103, 1104, 1112, 1117, 1139, 1168, 1231, 1247, 1255, 1292, 1302, 1306], "extrapol": [43, 114, 118, 218, 225, 229, 230, 231, 245, 251, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 597, 668, 672, 803, 810, 814, 815, 816, 830, 836, 838, 848, 850, 852, 870, 877, 881, 882, 903, 913, 914, 918, 919, 940, 950, 951, 955, 956, 1117], "boundari": [43, 114, 118, 141, 237, 238, 260, 366, 525, 597, 668, 672, 724, 822, 823, 845, 951, 1102, 1117, 1293], "center": [43, 55, 67, 84, 96, 113, 114, 115, 117, 118, 120, 134, 218, 223, 225, 229, 230, 231, 245, 246, 250, 251, 252, 253, 262, 263, 264, 265, 266, 267, 285, 290, 292, 296, 297, 301, 318, 323, 328, 329, 333, 334, 355, 360, 365, 366, 370, 371, 386, 388, 438, 439, 440, 462, 470, 479, 492, 495, 517, 597, 609, 621, 638, 650, 667, 668, 669, 671, 672, 674, 717, 803, 808, 810, 814, 815, 816, 830, 831, 835, 836, 837, 838, 847, 848, 849, 850, 851, 852, 870, 875, 877, 881, 882, 886, 903, 908, 913, 914, 918, 919, 940, 945, 950, 951, 955, 956, 973, 975, 1013, 1014, 1015, 1039, 1047, 1056, 1069, 1072, 1094, 1117, 1127, 1139, 1156, 1168, 1187, 1204, 1207, 1229, 1271, 1300, 1304], "2d": [43, 65, 66, 67, 94, 95, 96, 114, 142, 384, 394, 445, 457, 520, 525, 531, 597, 619, 620, 621, 648, 649, 650, 668, 725, 726, 734, 971, 981, 1020, 1034, 1097, 1102, 1108, 1117, 1137, 1138, 1139, 1166, 1167, 1168, 1204, 1229, 1266, 1304], "degre": [43, 51, 65, 66, 94, 95, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 146, 147, 157, 158, 199, 201, 218, 223, 224, 232, 244, 246, 250, 252, 260, 262, 264, 266, 268, 285, 290, 291, 298, 301, 318, 323, 324, 327, 329, 335, 338, 355, 360, 361, 364, 366, 372, 462, 473, 492, 527, 535, 597, 605, 619, 620, 648, 649, 667, 668, 669, 670, 671, 672, 673, 674, 675, 725, 726, 731, 732, 743, 744, 783, 786, 803, 808, 809, 817, 829, 831, 835, 837, 845, 847, 849, 851, 853, 870, 875, 876, 883, 886, 903, 908, 909, 912, 914, 920, 923, 940, 945, 946, 949, 951, 957, 1016, 1039, 1050, 1069, 1104, 1112, 1117, 1137, 1138, 1166, 1167, 1201, 1203, 1212, 1213, 1222, 1223, 1224, 1235, 1244, 1248, 1255, 1287, 1290, 1304, 1306], "point_": [46, 47, 600, 601, 1120, 1121], "properti": [48, 53, 54, 179, 180, 535, 602, 607, 608, 691, 692, 763, 764, 1010, 1012, 1112, 1122, 1306], "xarrai": [49, 235, 247, 248, 249, 603, 820, 832, 833, 834, 1123, 1224, 1255, 1286, 1290, 1296, 1305], "arm_alt_lat_lon_vari": [50, 393, 604, 980, 1124], "speed": [51, 52, 248, 443, 513, 535, 536, 605, 606, 833, 1019, 1090, 1112, 1113, 1204, 1294, 1306], "direct": [51, 72, 101, 390, 450, 469, 511, 513, 523, 535, 536, 605, 626, 655, 977, 1027, 1046, 1088, 1090, 1100, 1112, 1113, 1144, 1173, 1255, 1294, 1306], "horizont": [51, 52, 53, 54, 55, 84, 122, 127, 128, 130, 133, 218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 247, 249, 251, 253, 261, 263, 265, 267, 285, 286, 287, 292, 296, 297, 298, 318, 319, 320, 328, 333, 334, 335, 355, 356, 357, 365, 370, 371, 372, 378, 379, 453, 459, 460, 461, 465, 477, 478, 490, 491, 496, 508, 509, 511, 529, 535, 605, 606, 607, 608, 609, 638, 705, 710, 711, 713, 716, 803, 804, 805, 810, 814, 815, 816, 817, 828, 830, 832, 834, 836, 838, 846, 848, 850, 852, 870, 871, 872, 877, 881, 882, 883, 903, 904, 905, 913, 918, 919, 920, 940, 941, 942, 950, 955, 956, 957, 965, 966, 1030, 1036, 1037, 1038, 1042, 1054, 1055, 1067, 1068, 1073, 1085, 1086, 1088, 1106, 1112, 1127, 1156, 1247, 1255, 1273, 1283, 1304, 1306], "wind": [51, 52, 53, 54, 133, 134, 378, 379, 508, 509, 510, 511, 535, 536, 605, 606, 607, 608, 716, 717, 965, 966, 1085, 1086, 1087, 1088, 1112, 1113, 1247, 1255, 1294, 1306], "1d": [51, 52, 114, 118, 142, 457, 498, 500, 520, 533, 539, 605, 606, 668, 672, 725, 726, 734, 1034, 1075, 1077, 1097, 1110, 1209, 1220, 1225, 1226, 1227, 1228, 1236, 1237, 1238, 1239, 1255, 1304], "meter": [51, 52, 53, 54, 66, 67, 68, 95, 96, 97, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 201, 232, 268, 298, 301, 326, 329, 335, 338, 363, 366, 372, 438, 439, 440, 441, 442, 443, 447, 497, 518, 523, 526, 532, 535, 605, 606, 607, 608, 620, 621, 622, 649, 650, 651, 667, 668, 669, 670, 671, 672, 673, 674, 675, 726, 786, 817, 853, 883, 886, 911, 914, 920, 923, 948, 951, 957, 1009, 1010, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1023, 1074, 1095, 1100, 1103, 1109, 1112, 1138, 1139, 1140, 1167, 1168, 1169, 1187, 1222, 1248, 1255, 1266, 1302, 1304, 1306], "abov": [51, 52, 55, 57, 84, 86, 122, 123, 124, 125, 126, 131, 132, 133, 136, 138, 139, 141, 142, 146, 147, 150, 151, 152, 154, 167, 181, 193, 195, 196, 197, 199, 223, 224, 290, 291, 323, 324, 360, 361, 443, 446, 447, 457, 497, 500, 521, 527, 529, 535, 605, 606, 609, 611, 638, 640, 679, 693, 705, 706, 707, 708, 709, 714, 715, 716, 719, 721, 722, 724, 726, 730, 731, 732, 736, 737, 738, 740, 751, 765, 777, 779, 780, 781, 783, 808, 809, 875, 876, 908, 909, 945, 946, 960, 1019, 1022, 1023, 1034, 1074, 1077, 1098, 1104, 1106, 1112, 1127, 1129, 1156, 1158, 1219, 1220, 1223, 1224, 1255, 1260, 1266, 1281, 1283, 1289, 1294, 1296, 1298, 1300, 1306, 1308], "sea": [51, 52, 55, 84, 535, 605, 606, 609, 638, 1112, 1127, 1156, 1255, 1306], "were": [51, 52, 169, 171, 178, 535, 605, 606, 681, 683, 690, 753, 755, 762, 1112, 1238, 1306], "sampl": [51, 52, 145, 457, 466, 485, 498, 531, 533, 535, 536, 605, 606, 729, 1034, 1043, 1062, 1075, 1108, 1110, 1112, 1113, 1114, 1191, 1193, 1194, 1219, 1255, 1262, 1263, 1271, 1291, 1293, 1294, 1296, 1306], "per": [51, 52, 53, 54, 68, 84, 97, 133, 151, 443, 535, 605, 606, 607, 608, 622, 638, 651, 716, 737, 1019, 1112, 1140, 1156, 1169, 1188, 1189, 1190, 1306], "north": [51, 55, 84, 247, 248, 260, 329, 366, 605, 609, 638, 832, 833, 845, 914, 951, 1020, 1127, 1156, 1224, 1275, 1304], "east": [51, 218, 229, 285, 296, 318, 333, 355, 370, 605, 803, 814, 870, 881, 903, 918, 940, 955, 1020, 1224, 1275], "u_wind": [51, 52, 535, 536, 605, 606, 1112, 1113, 1294, 1306], "compon": [51, 52, 53, 54, 510, 511, 605, 606, 607, 608, 1087, 1088, 1306], "v_wind": [51, 52, 535, 536, 605, 606, 1112, 1113, 1294, 1306], "classmethod": [52, 398, 425, 606], "_rang": [55, 84, 467, 609, 638, 1044, 1127, 1156], "scan_typ": [55, 84, 201, 217, 268, 284, 301, 317, 338, 354, 609, 638, 786, 802, 853, 869, 886, 902, 923, 939, 1127, 1156, 1304], "sweep_numb": [55, 84, 609, 638, 1127, 1156, 1255, 1280, 1298, 1304], "sweep_mod": [55, 84, 609, 638, 1127, 1156, 1255, 1298, 1304], "fixed_angl": [55, 84, 201, 268, 301, 338, 609, 638, 786, 853, 886, 923, 1127, 1156, 1240, 1255, 1280, 1281, 1285, 1298, 1304], "sweep_start_ray_index": [55, 84, 609, 638, 1127, 1156, 1298, 1304], "sweep_end_ray_index": [55, 84, 609, 638, 1127, 1156, 1298, 1304], "altitude_agl": [55, 84, 609, 638, 1127, 1156, 1304], "target_scan_r": [55, 84, 609, 638, 1127, 1156, 1255, 1304], "rays_are_index": [55, 84, 609, 638, 1127, 1156], "ray_angle_r": [55, 84, 609, 638, 1127, 1156], "scan_rat": [55, 84, 396, 609, 638, 983, 1127, 1156, 1255, 1304], "antenna_transit": [55, 66, 67, 84, 95, 96, 178, 190, 218, 225, 229, 230, 231, 232, 268, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 609, 620, 621, 638, 649, 650, 690, 702, 762, 774, 803, 810, 814, 815, 816, 817, 853, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 1127, 1138, 1139, 1156, 1167, 1168, 1304], "instrument_paramet": [55, 84, 133, 144, 396, 472, 474, 609, 638, 716, 728, 983, 1049, 1051, 1127, 1156, 1300, 1304], "radar_calibr": [55, 84, 466, 474, 485, 487, 488, 609, 638, 1043, 1051, 1062, 1064, 1065, 1127, 1156, 1304], "rotat": [55, 84, 201, 609, 638, 786, 1127, 1156], "tilt": [55, 84, 201, 230, 329, 366, 530, 609, 638, 786, 815, 914, 951, 1107, 1127, 1156, 1255, 1263, 1279, 1286], "roll": [55, 84, 153, 201, 390, 609, 638, 739, 786, 977, 1127, 1156, 1246, 1252], "drift": [55, 84, 201, 609, 638, 786, 1127, 1156], "head": [55, 84, 201, 609, 638, 786, 1127, 1156], "pitch": [55, 84, 201, 609, 638, 786, 1127, 1156], "georefs_appli": [55, 84, 609, 638, 1127, 1156], "antenna": [55, 66, 67, 84, 95, 96, 113, 114, 115, 125, 131, 132, 142, 143, 144, 145, 148, 149, 156, 158, 159, 160, 178, 190, 195, 199, 218, 225, 229, 230, 231, 232, 268, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 453, 474, 480, 493, 513, 529, 609, 620, 621, 638, 649, 650, 667, 668, 669, 690, 702, 708, 714, 715, 726, 727, 728, 729, 733, 734, 735, 742, 744, 745, 746, 762, 774, 779, 783, 803, 810, 814, 815, 816, 817, 853, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 1025, 1030, 1051, 1057, 1070, 1090, 1106, 1127, 1138, 1139, 1156, 1167, 1168, 1240, 1255, 1256, 1260, 1265, 1266, 1267, 1268, 1296, 1302, 1304], "structur": [55, 84, 396, 532, 609, 638, 983, 1109, 1127, 1156, 1262, 1292, 1303], "base": [55, 60, 61, 62, 64, 65, 66, 67, 68, 84, 89, 90, 91, 93, 94, 95, 96, 97, 134, 135, 165, 193, 194, 195, 196, 197, 198, 199, 200, 231, 297, 334, 371, 394, 440, 442, 443, 452, 472, 479, 497, 499, 523, 609, 614, 615, 616, 618, 619, 620, 621, 622, 638, 643, 644, 645, 647, 648, 649, 650, 651, 677, 717, 718, 730, 749, 777, 778, 779, 780, 781, 782, 783, 784, 816, 882, 919, 956, 981, 1015, 1018, 1019, 1029, 1049, 1056, 1074, 1076, 1100, 1127, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1156, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1220, 1230, 1255, 1256, 1260, 1262, 1296, 1300, 1303, 1304, 1306], "under": [55, 84, 133, 134, 135, 443, 609, 638, 716, 717, 718, 1019, 1127, 1156, 1255, 1292, 1296, 1305, 1306], "sub": [55, 84, 609, 638, 1127, 1156, 1255], "meta_group": [55, 84, 609, 638, 1127, 1156, 1304], "instrument": [55, 84, 178, 190, 193, 196, 197, 396, 609, 638, 690, 702, 730, 762, 774, 777, 780, 781, 983, 1127, 1156, 1255, 1300, 1304], "volum": [55, 84, 133, 135, 136, 329, 366, 386, 387, 388, 396, 445, 462, 470, 479, 492, 493, 495, 498, 499, 510, 512, 517, 527, 529, 535, 536, 578, 609, 638, 716, 718, 719, 914, 951, 973, 974, 975, 983, 1009, 1039, 1047, 1056, 1069, 1070, 1072, 1075, 1076, 1087, 1089, 1094, 1104, 1106, 1112, 1113, 1127, 1156, 1212, 1213, 1215, 1232, 1249, 1250, 1253, 1255, 1260, 1270], "multipl": [55, 84, 148, 159, 457, 529, 531, 609, 638, 733, 745, 1034, 1106, 1108, 1127, 1156, 1255, 1260, 1265, 1270, 1282, 1303, 1308], "ground": [55, 84, 479, 513, 609, 638, 1020, 1025, 1056, 1090, 1127, 1156, 1262], "target": [55, 84, 149, 394, 473, 474, 609, 638, 735, 981, 1050, 1051, 1127, 1156, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1220, 1222, 1223, 1224, 1228, 1248, 1304], "thr": [55, 84, 609, 638, 1127, 1156], "index": [55, 70, 84, 99, 129, 137, 138, 139, 140, 142, 154, 155, 197, 231, 247, 248, 249, 251, 253, 263, 265, 267, 297, 334, 371, 394, 457, 471, 530, 609, 624, 638, 653, 712, 720, 721, 722, 723, 726, 730, 740, 741, 781, 816, 832, 833, 834, 836, 838, 848, 850, 852, 882, 919, 956, 981, 1009, 1020, 1025, 1034, 1048, 1107, 1127, 1142, 1156, 1171, 1255, 1297, 1306], "rays_per_sweep": [55, 76, 84, 105, 609, 630, 638, 659, 1127, 1148, 1156, 1177, 1188, 1189], "upon": [55, 84, 193, 194, 195, 196, 197, 198, 199, 200, 609, 638, 730, 777, 778, 779, 780, 781, 782, 783, 784, 1127, 1156, 1255], "prior": [55, 57, 84, 86, 141, 146, 147, 218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 390, 609, 611, 638, 640, 724, 731, 732, 803, 810, 813, 814, 815, 816, 817, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957, 977, 1127, 1129, 1156, 1158, 1263, 1296], "init_rays_per_sweep": [55, 84, 609, 638, 1127, 1156], "intend": [55, 84, 479, 609, 638, 1056, 1127, 1156], "rate": [55, 84, 497, 501, 502, 503, 504, 505, 506, 507, 520, 609, 638, 1074, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1097, 1127, 1156, 1255, 1292], "whether": [55, 84, 150, 151, 157, 169, 474, 521, 522, 527, 529, 609, 638, 681, 725, 736, 737, 743, 753, 1051, 1098, 1099, 1104, 1106, 1127, 1156, 1303], "regular": [55, 84, 395, 462, 470, 479, 492, 495, 550, 551, 565, 566, 609, 638, 982, 1020, 1039, 1047, 1056, 1069, 1072, 1127, 1156, 1271, 1296], "angular": [55, 84, 609, 638, 1127, 1156, 1204, 1243, 1244], "express": [55, 84, 609, 638, 1127, 1156], "360": [55, 84, 136, 141, 330, 367, 609, 638, 719, 724, 915, 952, 1127, 1156, 1255, 1294, 1298, 1304], "represent": [55, 84, 424, 609, 638, 1127, 1156], "forbidden": [55, 84, 609, 638, 1127, 1156], "plane": [55, 84, 394, 511, 609, 638, 981, 1088, 1127, 1156, 1304], "180": [55, 84, 115, 117, 150, 151, 529, 609, 638, 669, 671, 736, 737, 1106, 1127, 1156, 1298, 1306], "gate_z": [55, 67, 84, 96, 609, 621, 638, 650, 1127, 1139, 1156, 1168], "gate_x": [55, 67, 84, 96, 609, 621, 638, 650, 1127, 1139, 1156, 1168], "gate_i": [55, 67, 84, 96, 609, 621, 638, 650, 1127, 1139, 1156, 1168], "system": [55, 84, 116, 117, 118, 129, 137, 146, 147, 154, 155, 376, 386, 394, 441, 459, 469, 513, 609, 638, 670, 671, 672, 712, 720, 731, 732, 740, 741, 963, 973, 981, 1011, 1017, 1036, 1046, 1090, 1127, 1156, 1255, 1305], "earth": [55, 84, 113, 114, 117, 120, 513, 609, 638, 667, 668, 671, 674, 1016, 1090, 1127, 1156, 1222, 1248], "radiu": [55, 84, 113, 114, 115, 117, 120, 438, 439, 440, 441, 442, 443, 497, 513, 532, 609, 638, 667, 668, 669, 671, 674, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1074, 1090, 1109, 1127, 1156, 1222, 1248, 1292, 1302], "init_gate_x_y_z": [55, 84, 609, 638, 1127, 1156], "gate_latitud": [55, 66, 74, 84, 95, 103, 609, 620, 628, 638, 649, 657, 1127, 1138, 1146, 1156, 1167, 1175], "gate_longitud": [55, 66, 74, 84, 95, 103, 609, 620, 628, 638, 649, 657, 1127, 1138, 1146, 1156, 1167, 1175, 1298], "init_gate_longitude_latitud": [55, 84, 609, 638, 1127, 1156, 1298], "gate_altitud": [55, 66, 73, 84, 95, 102, 609, 620, 627, 638, 649, 656, 1127, 1138, 1145, 1156, 1167, 1174], "init_gate_altitud": [55, 84, 609, 638, 1127, 1156, 1298], "actual": [55, 84, 143, 390, 394, 441, 609, 638, 727, 977, 981, 1017, 1127, 1156, 1308], "flag": [55, 84, 133, 268, 390, 499, 524, 525, 528, 532, 609, 638, 716, 853, 977, 1076, 1101, 1102, 1105, 1109, 1127, 1156, 1205, 1206, 1232, 1235, 1255, 1308], "transit": [55, 66, 67, 84, 95, 96, 178, 190, 193, 196, 197, 218, 225, 229, 230, 231, 232, 268, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 479, 492, 524, 609, 620, 621, 638, 649, 650, 690, 702, 730, 762, 774, 777, 780, 781, 803, 810, 814, 815, 816, 817, 853, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 1056, 1069, 1101, 1127, 1138, 1139, 1156, 1167, 1168, 1255], "ye": [55, 84, 133, 609, 638, 716, 1127, 1156], "about": [55, 84, 513, 609, 638, 1090, 1127, 1156, 1255], "aircraft": [55, 84, 230, 390, 609, 638, 815, 977, 1127, 1156], "longitudin": [55, 84, 230, 242, 253, 257, 258, 267, 609, 638, 815, 827, 838, 842, 843, 852, 1127, 1156], "orthogon": [55, 84, 511, 609, 638, 1088, 1127, 1156], "platform": [55, 84, 609, 638, 1127, 1156], "right": [55, 84, 445, 517, 609, 638, 1094, 1127, 1156, 1255, 1271, 1272], "wing": [55, 84, 609, 638, 1127, 1156], "down": [55, 84, 609, 638, 1127, 1156, 1254], "track": [55, 84, 609, 638, 1127, 1156], "compass": [55, 84, 609, 638, 1127, 1156], "clockwis": [55, 84, 609, 638, 1127, 1156], "nose": [55, 84, 609, 638, 1127, 1156, 1255], "had": [55, 84, 395, 609, 638, 982, 1127, 1156, 1255, 1262, 1308], "georefer": [55, 84, 609, 638, 1127, 1156], "lead": [55, 84, 609, 638, 1127, 1156, 1266], "centric": [55, 84, 609, 638, 1127, 1156], "avaiabl": [55, 84, 609, 638, 1127, 1156], "radar_paramet": [55, 84, 609, 638, 1127, 1156], "subconvent": [55, 84, 609, 638, 1127, 1156], "calibr": [55, 84, 148, 149, 156, 159, 501, 609, 638, 733, 735, 742, 745, 1078, 1127, 1156], "ngate": [55, 65, 84, 94, 609, 619, 638, 648, 1127, 1137, 1156, 1166, 1188, 1189, 1190, 1255, 1298, 1304], "nrai": [55, 65, 84, 94, 467, 609, 619, 638, 648, 1044, 1127, 1137, 1156, 1166, 1190, 1223, 1255, 1298, 1304], "nsweep": [55, 84, 609, 638, 1127, 1156, 1188, 1189, 1280, 1281, 1294, 1304], "loos": [56, 57, 85, 86, 610, 611, 639, 640, 1128, 1129, 1157, 1158, 1242], "existing_field_nam": [57, 86, 611, 640, 1129, 1158], "done": [57, 86, 131, 133, 141, 513, 532, 611, 640, 714, 716, 724, 1090, 1109, 1129, 1158, 1298, 1305, 1306, 1308], "both": [57, 86, 133, 193, 197, 377, 518, 519, 611, 640, 716, 730, 777, 781, 964, 1095, 1096, 1129, 1158, 1255, 1263, 1266, 1268, 1272, 1287, 1296, 1302, 1303, 1305, 1306], "reflectivity_copi": [57, 86, 611, 640, 1129, 1158], "take": [57, 86, 134, 148, 229, 296, 333, 370, 442, 443, 447, 523, 578, 611, 640, 717, 733, 814, 881, 918, 955, 1018, 1019, 1023, 1100, 1129, 1158, 1262, 1263, 1266, 1273, 1292, 1306], "gatefilt": [58, 87, 122, 123, 124, 133, 134, 135, 136, 141, 147, 193, 194, 195, 196, 197, 198, 199, 200, 218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 442, 443, 499, 523, 524, 525, 530, 535, 536, 612, 641, 705, 706, 707, 716, 717, 718, 719, 724, 730, 732, 777, 778, 779, 780, 781, 782, 783, 784, 803, 810, 813, 814, 815, 816, 817, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957, 1009, 1018, 1019, 1025, 1076, 1100, 1101, 1102, 1107, 1112, 1113, 1130, 1159, 1255, 1258, 1266, 1267, 1268, 1272, 1291, 1297, 1300, 1306], "updat": [58, 87, 612, 641, 1130, 1159, 1255, 1273, 1292, 1296, 1306], "mask": [58, 87, 133, 134, 135, 136, 142, 153, 169, 171, 174, 178, 185, 189, 190, 193, 195, 196, 197, 198, 199, 200, 218, 225, 228, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 386, 387, 388, 443, 462, 470, 479, 492, 495, 526, 550, 551, 565, 566, 612, 641, 681, 683, 686, 690, 697, 701, 702, 716, 717, 718, 719, 726, 730, 739, 753, 755, 758, 762, 769, 773, 774, 777, 779, 780, 781, 782, 783, 784, 803, 810, 813, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957, 973, 974, 975, 1019, 1025, 1039, 1047, 1056, 1069, 1072, 1103, 1130, 1159, 1230, 1242, 1255, 1266, 1267, 1292, 1297, 1298, 1299, 1304], "condit": [58, 87, 133, 165, 169, 171, 178, 185, 190, 395, 612, 641, 677, 681, 683, 690, 697, 702, 716, 749, 753, 755, 762, 769, 774, 982, 1130, 1159, 1258, 1299, 1303], "append": [58, 87, 612, 641, 1130, 1159, 1255, 1294], "filtered_": [58, 87, 612, 641, 1130, 1159], "prefix": [58, 87, 612, 641, 1125, 1130, 1159], "check": [59, 68, 88, 97, 134, 135, 136, 141, 150, 151, 389, 448, 526, 613, 622, 642, 651, 717, 718, 719, 724, 736, 737, 976, 1024, 1103, 1131, 1140, 1160, 1169, 1222, 1232, 1248, 1253, 1255, 1296, 1305, 1306, 1307], "keyerror": [59, 88, 432, 433, 613, 642, 992, 993, 1003, 1004, 1131, 1160, 1305], "array_lik": [60, 89, 614, 643, 1132, 1161, 1234], "view": [61, 62, 64, 90, 91, 93, 397, 430, 431, 437, 615, 616, 618, 644, 645, 647, 985, 990, 991, 997, 1001, 1002, 1007, 1133, 1134, 1136, 1162, 1163, 1165, 1272, 1300, 1302, 1304], "possibl": [61, 62, 64, 90, 91, 93, 390, 457, 527, 615, 616, 618, 644, 645, 647, 977, 1034, 1104, 1133, 1134, 1136, 1162, 1163, 1165, 1219, 1226, 1255, 1271, 1292, 1300, 1302], "underli": [61, 62, 64, 90, 91, 93, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 377, 615, 616, 618, 644, 645, 647, 803, 810, 814, 815, 816, 817, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 964, 1133, 1134, 1136, 1162, 1163, 1165, 1296], "get_gate_x_y_z": [64, 93, 618, 647, 1136, 1165, 1282, 1283], "obtain": [64, 67, 93, 96, 125, 150, 158, 453, 463, 473, 474, 482, 527, 618, 621, 647, 650, 708, 736, 744, 1030, 1040, 1050, 1051, 1059, 1104, 1136, 1139, 1165, 1168, 1245, 1294, 1298, 1306], "plot": [64, 67, 93, 96, 201, 202, 203, 204, 205, 206, 207, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 462, 470, 479, 492, 495, 530, 536, 618, 621, 647, 650, 786, 787, 788, 789, 790, 791, 792, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 928, 929, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 1039, 1047, 1056, 1069, 1072, 1107, 1113, 1136, 1139, 1165, 1168, 1255, 1257, 1258, 1262, 1263, 1266, 1267, 1268, 1289, 1290, 1292, 1296, 1298, 1299, 1300, 1302, 1303], "spatial": [64, 67, 93, 96, 133, 618, 621, 647, 650, 716, 1136, 1139, 1165, 1168, 1302], "context": [64, 67, 93, 96, 618, 621, 647, 650, 1136, 1139, 1165, 1168, 1290, 1296, 1306], "request": [64, 93, 118, 386, 442, 443, 519, 618, 647, 672, 973, 1018, 1019, 1096, 1136, 1165, 1255, 1296, 1306], "area": [65, 94, 132, 218, 220, 225, 229, 230, 231, 232, 233, 285, 287, 292, 296, 297, 298, 299, 318, 320, 328, 329, 333, 334, 335, 336, 355, 357, 365, 366, 370, 371, 372, 373, 513, 525, 532, 619, 648, 715, 803, 805, 810, 814, 815, 816, 817, 818, 870, 872, 877, 881, 882, 883, 884, 903, 905, 913, 914, 918, 919, 920, 921, 940, 942, 950, 951, 955, 956, 957, 958, 1090, 1102, 1109, 1137, 1166, 1230], "squar": [65, 94, 150, 448, 518, 521, 522, 523, 535, 619, 648, 736, 1024, 1095, 1098, 1099, 1100, 1112, 1137, 1166, 1210], "assumpt": [65, 94, 511, 523, 619, 648, 1088, 1100, 1137, 1166], "size": [65, 94, 124, 133, 134, 136, 141, 196, 221, 288, 321, 358, 423, 440, 442, 443, 446, 448, 457, 468, 484, 487, 488, 497, 499, 523, 525, 527, 619, 648, 707, 716, 717, 719, 724, 780, 806, 873, 906, 943, 1015, 1018, 1019, 1022, 1024, 1034, 1045, 1061, 1064, 1065, 1074, 1076, 1100, 1102, 1104, 1137, 1166, 1204, 1220, 1229, 1237, 1252, 1273, 1286, 1292], "reset_gate_coord": [66, 95, 620, 649, 1138, 1167], "filter_transit": [66, 67, 95, 96, 218, 225, 229, 230, 231, 232, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 620, 621, 649, 650, 803, 810, 814, 815, 816, 817, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 1138, 1139, 1167, 1168], "With": [66, 67, 95, 96, 620, 621, 649, 650, 1138, 1139, 1167, 1168, 1296, 1297, 1298], "therefor": [66, 67, 95, 96, 523, 620, 621, 649, 650, 1100, 1138, 1139, 1167, 1168, 1300, 1304], "more": [66, 67, 72, 95, 96, 101, 134, 141, 150, 248, 394, 441, 442, 443, 497, 499, 532, 620, 621, 626, 649, 650, 655, 717, 724, 736, 833, 981, 1017, 1018, 1019, 1025, 1074, 1076, 1109, 1138, 1139, 1144, 1167, 1168, 1173, 1212, 1213, 1255, 1266, 1271, 1282, 1283, 1296, 1300, 1304, 1306], "effici": [66, 67, 95, 96, 442, 620, 621, 649, 650, 1018, 1138, 1139, 1167, 1168, 1211, 1296, 1300], "than": [66, 67, 95, 96, 134, 143, 147, 153, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 497, 513, 523, 620, 621, 649, 650, 717, 727, 732, 739, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1074, 1090, 1100, 1138, 1139, 1167, 1168, 1230, 1240, 1292, 1308], "through": [66, 67, 95, 96, 232, 298, 335, 372, 463, 482, 520, 620, 621, 649, 650, 817, 883, 920, 957, 1040, 1059, 1097, 1138, 1139, 1167, 1168, 1266, 1271, 1306], "pleas": [66, 95, 301, 338, 538, 620, 649, 886, 923, 1138, 1167, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "get_field": [67, 96, 621, 650, 1139, 1168, 1282, 1283], "check_uniform": [68, 97, 622, 651, 1140, 1169], "lookuperror": [68, 97, 622, 651, 1140, 1169], "except": [68, 97, 394, 622, 651, 981, 998, 1140, 1169, 1255, 1302], "skip": [68, 97, 134, 135, 389, 448, 622, 651, 717, 718, 976, 1024, 1140, 1169, 1255, 1306], "nyquist_veloc": [68, 97, 134, 135, 396, 622, 651, 717, 718, 983, 1140, 1169, 1300, 1304], "slice": [69, 81, 98, 110, 244, 245, 250, 251, 252, 253, 264, 265, 266, 267, 623, 635, 652, 664, 829, 830, 835, 836, 837, 838, 849, 850, 851, 852, 1141, 1153, 1170, 1182, 1286, 1302, 1304], "out": [72, 101, 136, 139, 140, 147, 150, 151, 152, 195, 199, 392, 393, 394, 395, 396, 512, 521, 522, 537, 540, 550, 551, 565, 566, 626, 655, 719, 722, 723, 732, 736, 737, 738, 779, 783, 979, 980, 981, 982, 983, 1025, 1089, 1098, 1099, 1144, 1173, 1255, 1267, 1268, 1272, 1283, 1291, 1293, 1296, 1302, 1305, 1306, 1307], "_io": [72, 101, 626, 655, 1144, 1173], "textiowrapp": [72, 101, 626, 655, 1144, 1173], "stdout": [72, 101, 537, 626, 655, 1144, 1173], "encod": [72, 101, 395, 626, 655, 982, 1144, 1173, 1255], "utf": [72, 101, 626, 655, 1144, 1173], "print": [72, 101, 122, 146, 147, 235, 254, 390, 523, 537, 540, 550, 551, 565, 566, 626, 655, 705, 731, 732, 820, 839, 977, 1100, 1144, 1173, 1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1292, 1299, 1303, 1304], "compact": [72, 101, 626, 655, 1144, 1173], "f": [72, 101, 260, 366, 436, 626, 655, 845, 951, 996, 1006, 1144, 1173, 1271, 1285, 1292, 1296, 1308], "minim": [72, 101, 523, 532, 626, 655, 1100, 1109, 1144, 1173], "everyth": [72, 101, 626, 655, 1144, 1173, 1263, 1306], "output": [72, 101, 128, 394, 463, 482, 499, 513, 520, 527, 529, 626, 655, 711, 981, 1025, 1040, 1059, 1076, 1090, 1097, 1104, 1106, 1144, 1173, 1222, 1255, 1296], "screen": [72, 101, 626, 655, 1144, 1173], "gate_": [75, 104, 629, 658, 1147, 1176], "iter": [77, 78, 79, 80, 81, 82, 83, 106, 107, 108, 109, 110, 111, 112, 144, 412, 436, 457, 472, 500, 523, 525, 631, 632, 633, 634, 635, 636, 637, 660, 661, 662, 663, 664, 665, 666, 728, 996, 1006, 1034, 1049, 1077, 1100, 1102, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1220, 1304], "over": [79, 82, 83, 108, 111, 112, 131, 132, 133, 134, 138, 142, 150, 151, 195, 218, 220, 225, 229, 230, 231, 232, 249, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 412, 497, 513, 516, 529, 531, 633, 636, 637, 662, 665, 666, 714, 715, 716, 717, 721, 726, 736, 737, 779, 803, 805, 810, 814, 815, 816, 817, 834, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1074, 1090, 1093, 1106, 1108, 1151, 1154, 1155, 1180, 1183, 1184, 1219, 1229, 1255, 1266, 1292, 1294, 1296, 1299, 1304], "npuls": [84, 638, 1156, 1220, 1225, 1226, 1227, 1236, 1237, 1238, 1239], "doppler_veloc": [84, 638, 1156], "doppler_frequ": [84, 638, 1156], "puls": [84, 144, 148, 159, 472, 473, 513, 638, 728, 733, 745, 1049, 1050, 1090, 1156, 1190, 1220, 1225, 1226, 1227, 1232, 1236, 1237, 1238, 1239, 1255, 1300], "npulses_max": [84, 638, 1156, 1190], "frequenc": [84, 123, 124, 396, 446, 457, 473, 474, 494, 501, 502, 503, 505, 506, 513, 514, 515, 523, 524, 525, 533, 638, 706, 707, 983, 1022, 1034, 1050, 1051, 1071, 1078, 1079, 1080, 1082, 1083, 1090, 1091, 1092, 1100, 1101, 1102, 1110, 1156], "ke": [113, 114, 115, 513, 667, 668, 669, 1090], "3333333333333333": [113, 114, 513, 667, 668, 1090], "kilomet": [113, 497, 667, 1074], "effect": [113, 114, 115, 148, 159, 169, 171, 178, 185, 190, 230, 442, 443, 494, 513, 667, 668, 669, 681, 683, 690, 697, 702, 733, 745, 753, 755, 762, 769, 774, 815, 1018, 1019, 1071, 1090, 1282], "scale": [113, 114, 115, 218, 225, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 395, 396, 442, 443, 464, 523, 524, 667, 668, 669, 803, 810, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 982, 983, 1018, 1019, 1041, 1100, 1101, 1274], "equat": [113, 523, 667, 1100, 1219, 1255], "28": [113, 667, 1255, 1292, 1296, 1306], "b": [113, 497, 524, 536, 667, 960, 1074, 1101, 1113, 1255, 1306], "doviak": [113, 446, 667, 1022], "zrnic": [113, 446, 492, 667, 1022, 1069], "sqrt": [113, 117, 513, 667, 671, 1090, 1282, 1283, 1294], "r": [113, 116, 117, 118, 119, 120, 133, 135, 146, 147, 208, 223, 224, 246, 262, 275, 290, 291, 308, 323, 324, 325, 326, 345, 360, 361, 362, 363, 452, 462, 466, 471, 472, 479, 485, 497, 499, 502, 505, 506, 507, 527, 529, 532, 535, 667, 670, 671, 672, 673, 674, 716, 718, 731, 732, 793, 808, 809, 831, 847, 860, 875, 876, 893, 908, 909, 910, 911, 930, 945, 946, 947, 948, 1029, 1039, 1043, 1048, 1049, 1056, 1062, 1074, 1076, 1079, 1082, 1083, 1084, 1104, 1106, 1109, 1112, 1219, 1220, 1230, 1262, 1274, 1282, 1283, 1292, 1306], "sin": [113, 117, 120, 511, 667, 671, 674, 1088], "theta_": [113, 667], "arcsin": [113, 117, 667, 671], "frac": [113, 667], "theta_a": [113, 667], "arc": [113, 667, 1222], "length": [113, 146, 147, 150, 151, 152, 153, 154, 155, 499, 513, 523, 527, 667, 731, 732, 736, 737, 738, 739, 740, 741, 1076, 1090, 1100, 1104, 1225, 1236, 1237, 1255], "6371": [113, 117, 120, 667, 671, 674, 1222, 1248], "weather": [113, 133, 148, 149, 156, 159, 441, 462, 472, 479, 513, 523, 594, 667, 716, 733, 735, 742, 745, 1017, 1039, 1049, 1056, 1090, 1100, 1220, 1255, 1262, 1271, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "edit": [113, 667, 1255, 1306], "1993": [113, 446, 667, 1022], "21": [113, 667], "vector": [114, 118, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 467, 518, 520, 521, 522, 668, 672, 725, 734, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1044, 1095, 1097, 1098, 1099, 1208, 1210, 1211, 1255], "util": [114, 124, 133, 134, 230, 501, 668, 707, 716, 717, 815, 1078, 1114, 1255, 1263, 1274, 1287, 1290, 1292, 1306], "antenna_to_cartesian": [114, 668, 1255], "cartograph": [116, 117, 118, 119, 120, 338, 670, 671, 672, 673, 674, 923], "build": [116, 118, 119, 165, 169, 171, 178, 185, 190, 396, 537, 670, 672, 673, 677, 681, 683, 690, 697, 702, 749, 753, 755, 762, 769, 774, 983, 1255, 1296, 1305, 1306], "desir": [116, 118, 119, 169, 171, 178, 185, 190, 397, 479, 497, 535, 670, 672, 673, 681, 683, 690, 697, 702, 753, 755, 762, 769, 774, 985, 1056, 1074, 1112, 1186, 1226, 1227, 1239, 1249, 1250, 1290, 1303], "6370997": [117, 120, 671, 674], "rho": [117, 671], "arctan2": [117, 671, 1294], "snyder": [117, 120, 671, 674], "manual": [117, 120, 671, 674, 1255], "geolog": [117, 120, 671, 674], "survei": [117, 120, 671, 674], "profession": [117, 120, 671, 674], "paper": [117, 120, 499, 671, 674, 1076, 1296, 1306], "1395": [117, 120, 671, 674, 1255], "1987": [117, 120, 671, 674], "pp": [117, 120, 446, 462, 470, 479, 492, 671, 674, 1022, 1039, 1047, 1056, 1069], "191": [117, 120, 671, 674], "202": [117, 120, 671, 674], "find": [118, 134, 141, 150, 151, 441, 442, 443, 512, 529, 672, 717, 724, 736, 737, 1009, 1017, 1018, 1019, 1089, 1106, 1221, 1255, 1263, 1308], "arcco": [120, 674], "no_altitude_transform": [121, 675], "wgs84": [121, 232, 298, 335, 372, 394, 675, 817, 883, 920, 957, 981, 1016], "ch1903": [121, 675], "lv03": [121, 675], "formula": [121, 446, 675, 1022], "formeln": [121, 675], "und": [121, 675], "konstanten": [121, 675], "f\u00fcr": [121, 675], "die": [121, 675], "berechnung": [121, 675], "der": [121, 675], "schweizerischen": [121, 675], "schiefachsigen": [121, 675], "zylinderprojekt": [121, 675], "zwischen": [121, 675], "koordinatensystemen": [121, 675], "chapter": [121, 675], "n\u00e4herungsl\u00f6sungen": [121, 675], "bundesamt": [121, 675], "landestopografi": [121, 675], "swisstopo": [121, 675], "admin": [121, 675, 1306], "ch": [121, 675, 1293, 1294], "oktob": [121, 675], "2008": [121, 527, 675, 1104, 1263], "input": [121, 146, 147, 394, 463, 471, 472, 482, 498, 513, 519, 520, 525, 527, 675, 731, 732, 981, 1020, 1040, 1048, 1049, 1059, 1075, 1090, 1096, 1097, 1102, 1104, 1207, 1230, 1292, 1303], "46": [121, 232, 298, 335, 372, 675, 817, 883, 920, 957], "38": [121, 675, 1263, 1269], "87": [121, 441, 675, 1017], "43": [121, 675], "49": [121, 675], "79": [121, 675], "650": [121, 675, 1255], "60": [121, 675, 1009, 1257, 1262, 1266, 1268, 1273, 1298, 1300, 1302], "result": [121, 131, 132, 133, 134, 135, 169, 171, 178, 185, 190, 218, 225, 228, 229, 230, 231, 232, 245, 251, 253, 263, 265, 267, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 376, 393, 397, 443, 521, 522, 527, 528, 530, 535, 536, 675, 681, 683, 690, 697, 702, 714, 715, 716, 717, 718, 734, 753, 755, 762, 769, 774, 803, 810, 813, 814, 815, 816, 817, 830, 836, 838, 848, 850, 852, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957, 963, 980, 985, 1019, 1025, 1098, 1099, 1104, 1105, 1107, 1112, 1113, 1209, 1220, 1246, 1263, 1293, 1296, 1302, 1306], "chy": [121, 675], "699": [121, 675], "999": [121, 133, 397, 675, 716, 985, 1255], "76": [121, 675], "700000": [121, 675], "chx": [121, 675], "99": [121, 453, 529, 675, 1030, 1106, 1271], "97": [121, 139, 140, 675, 722, 723, 1266, 1268, 1272, 1274, 1286, 1290, 1292, 1298], "100000": [121, 675, 1302], "chh": [121, 675], "600": [121, 675, 1298], "05": [121, 133, 442, 443, 533, 675, 716, 1018, 1019, 1110, 1286], "z_offset": [122, 705], "debug": [122, 133, 146, 147, 235, 254, 390, 523, 537, 705, 716, 731, 732, 820, 839, 977, 1100, 1255], "doc": [122, 123, 124, 138, 139, 142, 147, 150, 151, 152, 705, 706, 707, 721, 722, 726, 732, 736, 737, 738, 1255, 1296, 1305, 1306, 1308], "15": [122, 513, 523, 705, 1090, 1100, 1230, 1257, 1258, 1264, 1271, 1274, 1280, 1281, 1282, 1283, 1286, 1287, 1300, 1304], "fzl": [122, 123, 124, 138, 139, 142, 146, 147, 150, 151, 152, 705, 706, 707, 721, 722, 726, 731, 732, 736, 737, 738], "4000": [122, 146, 147, 705, 731, 732, 1302], "rhv_min": [122, 705], "ncp_min": [122, 705], "a_coef": [122, 124, 705, 707], "06": [122, 705], "beta": [122, 124, 501, 502, 503, 504, 505, 506, 705, 707, 725, 734, 1078, 1079, 1080, 1081, 1082, 1083], "refl_field": [122, 123, 124, 125, 129, 131, 132, 137, 138, 139, 140, 146, 147, 150, 151, 152, 154, 155, 193, 196, 197, 443, 447, 473, 474, 480, 481, 494, 497, 498, 499, 502, 504, 505, 506, 507, 520, 521, 527, 532, 705, 706, 707, 708, 712, 714, 715, 720, 721, 722, 723, 730, 731, 732, 736, 737, 738, 740, 741, 777, 780, 781, 1019, 1023, 1050, 1051, 1057, 1058, 1071, 1074, 1075, 1076, 1079, 1081, 1082, 1083, 1084, 1097, 1098, 1104, 1109, 1257, 1292, 1293], "ncp_field": [122, 146, 147, 197, 705, 730, 731, 732, 781, 1257], "rhv_field": [122, 146, 147, 193, 196, 197, 498, 520, 527, 705, 730, 731, 732, 777, 780, 781, 1075, 1097, 1104, 1257, 1293], "spec_at_field": [122, 123, 124, 705, 706, 707], "corr_refl_field": [122, 123, 124, 131, 132, 705, 706, 707, 714, 715], "attenu": [122, 123, 124, 143, 144, 145, 159, 446, 474, 480, 501, 502, 505, 514, 705, 706, 707, 727, 728, 729, 745, 1022, 1051, 1057, 1078, 1079, 1082, 1091, 1255, 1256, 1260, 1293, 1296], "phi": [122, 124, 146, 705, 707, 731, 1255, 1257], "must": [122, 123, 124, 133, 329, 379, 383, 384, 389, 395, 446, 499, 513, 518, 523, 524, 525, 528, 705, 706, 707, 716, 914, 966, 970, 971, 976, 982, 1022, 1076, 1090, 1095, 1100, 1101, 1102, 1105, 1247, 1292, 1296, 1305, 1306], "copol_coeff": [122, 705, 1192, 1257, 1291, 1298], "norm_coherent_pow": [122, 705, 1192, 1257, 1298], "proc_dp_phase_shift": [122, 705, 1257, 1298], "reflectivity_horizont": [122, 133, 705, 716, 1192, 1257, 1266, 1271, 1273, 1277, 1279, 1280, 1281, 1285, 1287, 1290, 1291, 1292, 1298, 1299], "supress": [122, 235, 247, 248, 254, 329, 366, 705, 820, 832, 833, 839, 914, 951, 1255], "freez": [122, 123, 124, 138, 139, 142, 150, 151, 152, 462, 479, 499, 527, 528, 529, 705, 706, 707, 721, 722, 726, 736, 737, 738, 1039, 1056, 1076, 1104, 1105, 1106], "layer": [122, 123, 124, 125, 126, 131, 132, 138, 139, 142, 150, 151, 152, 195, 199, 394, 453, 499, 502, 517, 523, 527, 528, 529, 530, 705, 706, 707, 708, 709, 714, 715, 721, 722, 726, 736, 737, 738, 779, 783, 981, 1030, 1076, 1079, 1094, 1100, 1104, 1105, 1106, 1107], "combin": [122, 123, 124, 705, 706, 707, 1240, 1241, 1306], "normal": [122, 125, 131, 132, 146, 147, 197, 218, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 292, 296, 297, 298, 318, 328, 329, 333, 334, 335, 355, 365, 366, 370, 371, 372, 425, 520, 705, 708, 714, 715, 730, 731, 732, 781, 803, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 877, 881, 882, 883, 903, 913, 914, 918, 919, 920, 940, 950, 951, 955, 956, 957, 1097, 1242, 1282], "coher": [122, 146, 147, 197, 705, 730, 731, 732, 781], "zdr_field": [122, 123, 124, 128, 139, 140, 143, 144, 150, 151, 152, 193, 196, 456, 498, 520, 527, 705, 706, 707, 711, 722, 723, 727, 728, 736, 737, 738, 777, 780, 1033, 1075, 1097, 1104, 1293], "spec_at": [122, 123, 124, 705, 706, 707, 1257, 1293], "cor_z": [122, 123, 124, 705, 706, 707, 1257, 1293], "gu": [122, 124, 705, 707], "et": [122, 124, 128, 144, 472, 497, 520, 523, 527, 528, 532, 705, 707, 711, 728, 1049, 1074, 1097, 1100, 1104, 1105, 1109, 1292], "al": [122, 124, 128, 144, 472, 497, 520, 523, 524, 527, 528, 532, 705, 707, 711, 728, 1049, 1074, 1097, 1100, 1101, 1104, 1105, 1109, 1292], "heavi": [122, 124, 705, 707, 1230, 1274, 1282], "rain": [122, 124, 129, 137, 138, 139, 150, 151, 152, 154, 155, 453, 462, 479, 501, 502, 503, 504, 507, 532, 705, 707, 712, 720, 721, 722, 736, 737, 738, 740, 741, 1030, 1039, 1056, 1078, 1079, 1080, 1081, 1084, 1109, 1255, 1274, 1282, 1292, 1293], "jamc": [122, 124, 525, 705, 707, 1102], "2011": [122, 124, 705, 707], "50": [122, 124, 140, 457, 470, 493, 495, 520, 527, 705, 707, 723, 1034, 1047, 1070, 1072, 1097, 1104, 1204, 1268, 1286, 1293, 1302, 1304], "39": [122, 124, 705, 707], "58": [122, 124, 705, 707, 1269], "pia_coef": [123, 706], "pida_coef": [123, 706], "temp_field": [123, 124, 131, 132, 138, 139, 140, 142, 150, 151, 152, 199, 498, 520, 527, 529, 706, 707, 714, 715, 721, 722, 723, 726, 736, 737, 738, 783, 1075, 1097, 1104, 1106, 1293], "iso0_field": [123, 124, 131, 132, 138, 139, 142, 150, 151, 152, 195, 498, 499, 520, 527, 528, 529, 706, 707, 714, 715, 721, 722, 726, 736, 737, 738, 779, 1075, 1076, 1097, 1104, 1105, 1106], "pia_field": [123, 124, 706, 707], "spec_diff_at_field": [123, 124, 706, 707], "pida_field": [123, 124, 706, 707], "corr_zdr_field": [123, 124, 706, 707], "temp_ref": [123, 124, 131, 132, 138, 139, 142, 150, 151, 152, 498, 516, 520, 527, 529, 706, 707, 714, 715, 721, 722, 726, 736, 737, 738, 1075, 1093, 1097, 1104, 1106, 1293], "dependec": [123, 706], "comput": [123, 124, 125, 126, 128, 131, 132, 143, 144, 145, 149, 150, 151, 159, 196, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 513, 516, 520, 521, 522, 523, 524, 525, 527, 529, 531, 535, 706, 707, 708, 709, 711, 714, 715, 727, 728, 729, 734, 735, 736, 737, 745, 780, 1016, 1022, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1090, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1108, 1112, 1200, 1201, 1202, 1203, 1204, 1207, 1208, 1209, 1210, 1211, 1220, 1229, 1233, 1234, 1236, 1238, 1239, 1243, 1244, 1252, 1255, 1293, 1294, 1296], "depend": [123, 124, 163, 443, 502, 513, 527, 538, 706, 707, 1019, 1079, 1090, 1104, 1236, 1255, 1306], "refl": [123, 124, 706, 707, 1280], "integr": [123, 124, 149, 159, 706, 707, 735, 745], "pida_coeff": [123, 706], "0c": [123, 124, 142, 706, 707, 726], "isotherm": [123, 124, 142, 706, 707, 726], "height_over_iso0": [123, 124, 131, 132, 138, 139, 142, 150, 151, 152, 498, 520, 527, 529, 706, 707, 714, 715, 721, 722, 726, 736, 737, 738, 1075, 1097, 1104, 1106, 1303], "fixed_fzl": [123, 124, 139, 142, 150, 151, 152, 706, 707, 722, 726, 736, 737, 738], "pia_dict": [123, 124, 706, 707], "spec_diff_at": [123, 124, 706, 707, 1293], "pida_dict": [123, 124, 706, 707], "cor_zdr": [123, 124, 706, 707, 1293], "smooth_window_len": [124, 707], "smooth": [124, 141, 150, 151, 152, 153, 154, 155, 468, 484, 487, 488, 521, 522, 523, 707, 724, 736, 737, 738, 739, 740, 741, 1045, 1061, 1064, 1065, 1098, 1099, 1100, 1222, 1248, 1282, 1283, 1302], "window": [124, 133, 146, 147, 150, 151, 152, 153, 154, 155, 196, 448, 463, 468, 482, 484, 487, 488, 521, 522, 525, 527, 535, 707, 716, 731, 732, 736, 737, 738, 739, 740, 741, 780, 1024, 1040, 1045, 1059, 1061, 1064, 1065, 1098, 1099, 1102, 1104, 1112, 1204, 1225, 1229, 1236, 1237, 1246, 1252, 1255, 1296, 1306], "expon": [124, 146, 147, 501, 502, 503, 504, 505, 506, 707, 731, 732, 1078, 1079, 1080, 1081, 1082, 1083], "law": [124, 501, 502, 503, 504, 505, 506, 707, 1078, 1079, 1080, 1081, 1082, 1083], "ryzhkov": [124, 462, 470, 501, 527, 530, 707, 1039, 1047, 1078, 1104, 1107], "potenti": [124, 143, 501, 527, 707, 727, 1078, 1104], "rainfal": [124, 501, 502, 503, 504, 505, 506, 507, 523, 525, 707, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1100, 1102], "mitig": [124, 501, 707, 1078], "partial": [124, 501, 707, 1078, 1255], "beam": [124, 125, 149, 440, 442, 443, 453, 501, 513, 707, 708, 735, 1015, 1018, 1019, 1030, 1078, 1090], "blockag": [124, 501, 707, 1078], "network": [124, 134, 388, 501, 707, 717, 975, 1078], "jaot": [124, 128, 707, 711], "2014": [124, 501, 524, 530, 707, 1078, 1101, 1107], "31": [124, 154, 386, 501, 521, 707, 740, 973, 1078, 1098, 1263], "599": [124, 501, 707, 1078], "619": [124, 501, 707, 1078, 1255], "ml_top": [125, 126, 453, 517, 708, 709, 1030, 1094], "3000": [125, 126, 453, 516, 532, 708, 709, 1030, 1093, 1109, 1298, 1302], "ml_thick": [125, 126, 453, 708, 709, 1030], "200": [125, 126, 131, 132, 446, 453, 529, 708, 709, 714, 715, 1022, 1030, 1106, 1220, 1238, 1239, 1306], "val_ml": [125, 126, 708, 709], "val_dr": [125, 126, 708, 709], "h_max": [125, 126, 131, 132, 453, 529, 708, 709, 714, 715, 1030, 1106], "6000": [125, 126, 131, 132, 453, 527, 529, 708, 709, 714, 715, 1030, 1104, 1106, 1298, 1302], "h_re": [125, 126, 131, 132, 453, 529, 708, 709, 714, 715, 1030, 1106], "max_weight": [125, 131, 132, 708, 714, 715], "vpr_theo_dict": [125, 708], "normalized_reflect": [125, 708], "appar": [125, 453, 708, 1030], "vpr": [125, 131, 132, 708, 714, 715, 1296], "melt": [125, 126, 131, 132, 138, 139, 150, 151, 152, 195, 199, 453, 499, 502, 517, 523, 527, 528, 529, 530, 708, 709, 714, 715, 721, 722, 736, 737, 738, 779, 783, 1030, 1076, 1079, 1094, 1100, 1104, 1105, 1106, 1107, 1230, 1274, 1292, 1293], "top": [125, 126, 131, 132, 148, 159, 254, 443, 453, 499, 508, 509, 517, 526, 527, 528, 529, 708, 709, 714, 715, 733, 745, 839, 1019, 1030, 1076, 1085, 1086, 1094, 1103, 1104, 1105, 1106, 1255, 1271, 1290, 1302, 1306], "asl": [125, 126, 453, 708, 709, 1030], "thick": [125, 126, 131, 132, 138, 139, 142, 150, 151, 152, 195, 199, 453, 529, 708, 709, 714, 715, 721, 722, 726, 736, 737, 738, 779, 783, 1030, 1106], "peak": [125, 126, 131, 132, 453, 527, 529, 708, 709, 714, 715, 1030, 1104, 1106, 1219, 1300], "decreas": [125, 126, 131, 132, 498, 516, 520, 708, 709, 714, 715, 1075, 1093, 1097], "ratio": [125, 126, 131, 132, 140, 196, 197, 198, 233, 299, 336, 373, 447, 455, 456, 513, 708, 709, 714, 715, 723, 730, 780, 781, 782, 818, 884, 921, 958, 1023, 1032, 1033, 1090, 1304], "theoret": [125, 131, 132, 159, 441, 453, 533, 708, 714, 715, 745, 1017, 1030, 1110], "multipli": [125, 453, 463, 497, 529, 708, 960, 1030, 1040, 1074, 1106, 1292, 1298], "radar_out": [125, 453, 708, 1030], "conta": [125, 126, 453, 499, 527, 528, 529, 539, 708, 709, 1030, 1076, 1104, 1105, 1106], "ideal": [126, 709], "val_theo_dict": [126, 709], "bottom": [126, 327, 364, 453, 499, 517, 527, 528, 529, 709, 912, 949, 1030, 1076, 1094, 1104, 1105, 1106, 1271, 1273], "bia": [127, 132, 139, 140, 150, 151, 160, 710, 715, 722, 723, 734, 736, 737, 746, 1255], "magnitud": [127, 523, 710, 1100, 1294, 1304], "corrected_field": [127, 130, 710, 713], "urhohv_field": [128, 711], "snr_field": [128, 140, 198, 447, 481, 711, 723, 782, 1023, 1058], "nh_field": [128, 711], "nv_field": [128, 711], "rhohv_field": [128, 138, 139, 140, 150, 151, 152, 453, 456, 464, 499, 711, 721, 722, 723, 736, 737, 738, 1030, 1033, 1041, 1076], "eq": [128, 711, 1280], "2006": [128, 711, 1263], "subtract": [128, 452, 461, 468, 469, 476, 477, 478, 484, 487, 488, 489, 497, 711, 1029, 1038, 1045, 1046, 1053, 1054, 1055, 1061, 1064, 1065, 1066, 1074], "uncorrect": [128, 711], "snr": [128, 140, 198, 447, 481, 711, 723, 782, 1023, 1058, 1227, 1239, 1255], "channel": [128, 160, 394, 459, 465, 478, 490, 491, 496, 711, 746, 981, 1036, 1042, 1055, 1067, 1068, 1073, 1255], "meteo": [128, 131, 132, 527, 529, 711, 714, 715, 1104, 1106], "franc": [128, 131, 132, 529, 711, 714, 715, 1106], "23": [128, 711], "1340": [128, 711], "1356": [128, 711, 1255], "ind_rmin": [129, 137, 138, 139, 140, 154, 155, 471, 712, 720, 721, 722, 723, 740, 741, 1048], "10": [129, 136, 137, 138, 139, 140, 144, 146, 147, 154, 155, 156, 159, 165, 198, 200, 232, 298, 335, 372, 441, 443, 446, 457, 462, 472, 492, 497, 499, 510, 520, 524, 525, 527, 529, 677, 712, 719, 720, 721, 722, 723, 728, 731, 732, 740, 741, 742, 745, 749, 782, 784, 817, 883, 920, 957, 1017, 1019, 1022, 1034, 1039, 1049, 1069, 1074, 1076, 1087, 1097, 1101, 1102, 1104, 1106, 1220, 1230, 1258, 1259, 1266, 1267, 1271, 1274, 1275, 1277, 1279, 1282, 1283, 1286, 1292, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "ind_rmax": [129, 137, 138, 139, 140, 154, 155, 712, 720, 721, 722, 723, 740, 741], "500": [129, 137, 138, 139, 140, 154, 155, 442, 443, 527, 712, 720, 721, 722, 723, 740, 741, 1009, 1018, 1019, 1104, 1266, 1272, 1276], "min_rcon": [129, 137, 150, 151, 154, 155, 712, 720, 736, 737, 740, 741], "11": [129, 137, 153, 154, 155, 232, 298, 335, 372, 454, 497, 521, 522, 712, 720, 739, 740, 741, 817, 883, 920, 957, 1031, 1074, 1098, 1099, 1246, 1288, 1303, 1304], "zmin": [129, 137, 138, 139, 140, 154, 155, 712, 720, 721, 722, 723, 740, 741], "20": [129, 131, 132, 137, 138, 139, 143, 150, 151, 152, 154, 155, 193, 196, 197, 453, 527, 529, 530, 712, 714, 715, 720, 721, 722, 727, 730, 736, 737, 738, 740, 741, 777, 780, 781, 1030, 1104, 1106, 1107, 1254, 1262, 1263, 1266, 1272, 1273, 1274, 1277, 1279, 1280, 1281, 1282, 1283, 1285, 1291, 1292, 1298, 1302, 1304], "zmax": [129, 137, 138, 139, 140, 154, 155, 712, 720, 721, 722, 723, 740, 741], "40": [129, 135, 137, 138, 154, 155, 260, 457, 521, 712, 718, 720, 721, 740, 741, 845, 1034, 1098, 1225, 1258, 1268, 1273, 1277, 1279, 1282, 1292], "psidp_field": [129, 154, 155, 523, 524, 525, 712, 740, 741, 1100, 1101, 1102, 1293], "public": [129, 137, 712, 720, 1254, 1255, 1298, 1299, 1300, 1302, 1303, 1304], "min": [129, 131, 132, 137, 138, 139, 140, 143, 154, 155, 193, 220, 287, 320, 357, 471, 527, 712, 714, 715, 720, 721, 722, 723, 727, 740, 741, 777, 805, 872, 905, 942, 1048, 1104, 1232], "max": [129, 131, 132, 137, 138, 139, 140, 150, 151, 154, 155, 193, 220, 287, 320, 357, 394, 471, 499, 527, 712, 714, 715, 720, 721, 722, 723, 736, 737, 740, 741, 777, 805, 872, 905, 942, 981, 1048, 1076, 1104, 1232, 1255, 1262, 1266, 1271, 1272, 1277, 1285], "look": [129, 137, 138, 139, 140, 143, 150, 151, 152, 154, 155, 157, 158, 470, 471, 527, 530, 712, 720, 721, 722, 723, 727, 736, 737, 738, 740, 741, 743, 744, 1025, 1047, 1048, 1104, 1107, 1221, 1236, 1238, 1239, 1255, 1262, 1263, 1266, 1273, 1296, 1298, 1300, 1302, 1304], "continu": [129, 133, 135, 137, 154, 155, 528, 712, 716, 718, 720, 740, 741, 1105, 1255], "consecut": [129, 137, 150, 151, 154, 155, 527, 712, 720, 736, 737, 740, 741, 1104, 1220], "cell": [129, 137, 154, 155, 712, 720, 740, 741, 1255, 1282], "phidp_dict": [129, 154, 155, 458, 459, 712, 740, 741, 1035, 1036], "vis_field": [130, 200, 713, 784], "nvalid_min": [131, 132, 462, 470, 479, 492, 529, 714, 715, 1039, 1047, 1056, 1069, 1106, 1207, 1209], "angle_min": [131, 132, 714, 715], "angle_max": [131, 132, 714, 715], "ml_thickness_min": [131, 132, 529, 714, 715, 1106], "ml_thickness_max": [131, 132, 529, 714, 715, 1106], "800": [131, 132, 144, 472, 714, 715, 728, 1049, 1220, 1255], "ml_thickness_step": [131, 132, 529, 714, 715, 1106], "iso0_max": [131, 132, 529, 714, 715, 1106], "5000": [131, 132, 714, 715, 1294, 1302], "ml_top_diff_max": [131, 132, 529, 714, 715, 1106], "ml_top_step": [131, 132, 529, 714, 715, 1106], "ml_peak_min": [131, 132, 714, 715], "ml_peak_max": [131, 132, 714, 715], "ml_peak_step": [131, 132, 714, 715], "dr_min": [131, 132, 714, 715], "dr_max": [131, 132, 714, 715], "dr_step": [131, 132, 714, 715], "dr_default": [131, 132, 714, 715], "dr_alt": [131, 132, 714, 715], "h_corr_max": [131, 132, 714, 715], "15000": [131, 132, 462, 492, 714, 715, 1039, 1069, 1298, 1302], "rmin_ob": [131, 132, 714, 715], "rmax_ob": [131, 132, 714, 715], "150000": [131, 132, 714, 715], "filter_param": [131, 714], "weight_mem": [131, 132, 714, 715], "75": [131, 132, 165, 233, 299, 336, 373, 394, 457, 497, 520, 527, 531, 677, 714, 715, 749, 818, 884, 921, 958, 981, 1020, 1034, 1074, 1097, 1104, 1108, 1266, 1282, 1292, 1298, 1302, 1303], "vpr_theo_dict_mem": [131, 132, 714, 715], "radar_mem_list": [131, 132, 714, 715], "lin_refl_field": [131, 132, 714, 715], "norm_refl_field": [131, 132, 714, 715], "corr_field": [131, 132, 714, 715], "averag": [131, 132, 134, 150, 151, 462, 466, 470, 479, 485, 492, 497, 513, 529, 535, 714, 715, 717, 736, 737, 960, 1039, 1043, 1047, 1056, 1062, 1069, 1074, 1090, 1106, 1112, 1207, 1209, 1219, 1233, 1292, 1294], "explor": [131, 132, 462, 529, 714, 715, 1039, 1106], "iso": [131, 132, 516, 529, 531, 714, 715, 1093, 1106, 1108], "proper": [131, 132, 714, 715, 1305], "could": [131, 132, 453, 714, 715, 1030, 1211, 1263, 1306], "abl": [131, 132, 139, 140, 714, 715, 722, 723, 1296, 1305], "dr": [131, 132, 513, 523, 714, 715, 1090, 1100], "masl": [131, 132, 517, 529, 714, 715, 1094, 1106], "weight": [131, 132, 150, 442, 443, 457, 479, 520, 523, 529, 535, 714, 715, 736, 1018, 1019, 1034, 1056, 1097, 1100, 1106, 1112, 1255, 1302], "compar": [131, 132, 133, 169, 457, 499, 529, 681, 714, 715, 716, 753, 1025, 1034, 1076, 1106, 1204, 1220, 1260, 1265, 1271, 1292, 1306], "previou": [131, 132, 133, 329, 366, 527, 714, 715, 716, 914, 951, 1104, 1255], "shape": [131, 171, 185, 384, 526, 683, 697, 714, 755, 769, 971, 1103, 1242, 1255, 1292, 1298, 1302, 1303, 1304, 1306], "past": [131, 132, 529, 714, 715, 1106, 1306], "refl_corr_dict": [131, 132, 714, 715], "corr_field_dict": [131, 132, 714, 715], "vpr_theo_dict_filt": [131, 132, 714, 715], "radar_rhi": [131, 132, 714, 715, 1207, 1212], "correct_iso0": [132, 715], "spatialis": [132, 715], "last_radar": [133, 716], "sonde_profil": [133, 716], "filt": [133, 716], "rsl_badval": [133, 716], "131072": [133, 716], "keep_origin": [133, 134, 135, 716, 717, 718], "set_limit": [133, 134, 135, 716, 717, 718, 1274, 1275, 1276, 1278, 1280, 1281, 1282, 1283, 1285], "vel_field": [133, 134, 135, 193, 448, 511, 536, 716, 717, 718, 777, 1024, 1088, 1113, 1300], "corr_vel_field": [133, 134, 135, 716, 717, 718], "last_vel_field": [133, 716], "max_shear": [133, 716], "sign": [133, 510, 535, 536, 716, 1087, 1112, 1113, 1255, 1282, 1283], "dealia": [133, 134, 135, 716, 717, 718, 1255, 1256, 1260, 1300], "4dd": [133, 716, 1255], "univers": [133, 391, 507, 716, 978, 1084, 1255, 1296], "washington": [133, 716], "sound": [133, 510, 535, 536, 716, 1087, 1112, 1113, 1255], "For": [133, 244, 250, 252, 264, 266, 384, 394, 442, 521, 522, 523, 716, 829, 835, 837, 849, 851, 971, 981, 1018, 1098, 1099, 1100, 1255, 1262, 1266, 1293, 1303, 1304, 1306, 1308], "best": [133, 716], "argument": [133, 134, 135, 218, 225, 229, 230, 231, 232, 244, 245, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 285, 292, 296, 297, 298, 318, 325, 326, 327, 328, 329, 330, 333, 334, 335, 355, 362, 363, 364, 365, 366, 367, 370, 371, 372, 386, 388, 396, 397, 441, 443, 524, 525, 716, 717, 718, 803, 810, 814, 815, 816, 817, 829, 830, 832, 833, 834, 835, 836, 837, 838, 848, 849, 850, 851, 852, 870, 877, 881, 882, 883, 903, 910, 911, 912, 913, 914, 915, 918, 919, 920, 940, 947, 948, 949, 950, 951, 952, 955, 956, 957, 973, 975, 983, 985, 1017, 1019, 1101, 1102, 1255, 1306], "_fourdd_interfac": [133, 716], "fourdd_dealia": [133, 716], "fine": [133, 716], "tune": [133, 716, 1292], "behavior": [133, 329, 384, 397, 716, 914, 971, 985, 1255], "fourdd": [133, 716], "dealias": [133, 134, 135, 716, 717, 718, 1255, 1258, 1262, 1296, 1297, 1306], "mean_doppler_veloc": [133, 716, 1285, 1298], "successfulli": [133, 716], "greatli": [133, 716], "improv": [133, 524, 525, 716, 1101, 1102, 1230, 1274], "final": [133, 457, 500, 524, 525, 716, 1034, 1077, 1101, 1102, 1292], "horizontalwindprofil": [133, 378, 379, 536, 716, 965, 966, 1113, 1247, 1255, 1306], "sond": [133, 134, 378, 379, 512, 716, 717, 965, 966, 1089, 1255, 1258], "moment_based_gate_filt": [133, 134, 135, 443, 716, 717, 718, 1019], "bergen": [133, 716], "alber": [133, 716], "bad": [133, 499, 523, 524, 525, 532, 716, 1076, 1100, 1101, 1102, 1109], "rsl": [133, 377, 389, 390, 716, 964, 976, 977, 1255, 1296, 1305], "procedur": [133, 134, 135, 716, 717, 718], "fail": [133, 134, 135, 384, 394, 716, 717, 718, 971, 981, 1255, 1306], "element": [133, 134, 135, 136, 141, 165, 396, 442, 443, 526, 677, 716, 717, 718, 719, 724, 749, 983, 1018, 1019, 1103, 1233, 1234, 1243, 1244], "maxshear": [133, 716], "shear": [133, 508, 509, 716, 1085, 1086], "incorpor": [133, 716, 1292], "toward": [133, 510, 535, 536, 716, 1087, 1112, 1113], "neg": [133, 218, 229, 285, 296, 318, 333, 355, 370, 510, 523, 535, 536, 716, 803, 814, 870, 881, 903, 918, 940, 955, 1087, 1100, 1112, 1113, 1255, 1271], "compthresh": [133, 716], "fraction": [133, 716, 1292, 1304], "threshold": [133, 136, 141, 145, 193, 195, 196, 197, 198, 199, 200, 457, 497, 499, 500, 502, 505, 506, 510, 716, 719, 724, 729, 730, 777, 779, 780, 781, 782, 783, 784, 960, 1034, 1074, 1076, 1077, 1079, 1082, 1083, 1087, 1219, 1220, 1225, 1226, 1227, 1230, 1236, 1237, 1238, 1239, 1292, 1300, 1303], "mark": [133, 165, 169, 178, 190, 677, 681, 690, 702, 716, 749, 753, 762, 774], "begin": [133, 134, 135, 146, 147, 165, 203, 205, 225, 229, 270, 272, 292, 296, 303, 305, 328, 333, 340, 342, 365, 370, 384, 385, 388, 390, 677, 716, 717, 718, 731, 732, 749, 788, 790, 810, 814, 855, 857, 877, 881, 888, 890, 913, 918, 925, 927, 950, 955, 971, 972, 975, 977, 1255], "unfold": [133, 134, 146, 147, 523, 716, 717, 731, 732, 1100], "compthresh2": [133, 716], "thresh": [133, 502, 505, 506, 716, 1079, 1082, 1083], "adjac": [133, 716], "count": [133, 716, 1266, 1300, 1304], "against": [133, 169, 681, 716, 753, 1282], "question": [133, 443, 716, 961, 1019], "ckval": [133, 716], "absolut": [133, 229, 296, 333, 370, 716, 814, 881, 918, 955, 1204, 1240], "below": [133, 136, 142, 146, 147, 169, 183, 193, 195, 196, 197, 198, 199, 200, 218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 442, 443, 497, 502, 505, 506, 523, 529, 681, 695, 716, 719, 726, 730, 731, 732, 753, 767, 777, 779, 780, 781, 782, 783, 784, 803, 810, 813, 814, 815, 816, 817, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957, 1018, 1019, 1020, 1074, 1079, 1082, 1083, 1100, 1106, 1219, 1271, 1292, 1298, 1300, 1303, 1307], "stdthresh": [133, 716], "deviat": [133, 143, 144, 160, 471, 510, 716, 727, 728, 734, 746, 1048, 1087, 1202, 1203, 1229, 1234, 1300], "portion": [133, 716, 1302], "epsilon": [133, 716], "miss": [133, 499, 523, 524, 525, 532, 716, 1076, 1100, 1101, 1102, 1109, 1255, 1263], "maxcount": [133, 716], "allow": [133, 136, 141, 217, 284, 317, 354, 457, 499, 510, 527, 716, 719, 724, 802, 869, 902, 939, 1009, 1020, 1034, 1076, 1087, 1104, 1255, 1266, 1304, 1308], "pass2": [133, 716], "retain": [133, 134, 135, 193, 195, 196, 197, 198, 199, 200, 716, 717, 718, 730, 777, 779, 780, 781, 782, 783, 784, 1253], "rm": [133, 716], "left": [133, 327, 364, 445, 517, 716, 912, 949, 1094, 1220, 1271, 1273], "proxim": [133, 716], "side": [133, 716], "doubl": [133, 394, 716, 981, 1292], "captur": [133, 716], "suffici": [133, 499, 716, 1076], "good": [133, 134, 716, 717], "mingood": [133, 716], "ba_mincount": [133, 716], "neighbor": [133, 386, 443, 716, 973, 1019, 1255, 1302], "ba_edgecount": [133, 716], "usuccess": [133, 716], "radialvelvolum": [133, 716], "lastvelvolum": [133, 716], "unfoldedvolum": [133, 716], "sondvolum": [133, 716], "vr_corr": [133, 716], "due": [133, 149, 474, 480, 716, 735, 1025, 1051, 1057, 1240, 1255, 1266, 1300, 1305, 1308], "call": [133, 136, 164, 217, 218, 220, 225, 229, 230, 231, 232, 247, 248, 284, 285, 287, 292, 296, 297, 298, 317, 318, 320, 328, 329, 333, 334, 335, 354, 355, 357, 365, 366, 370, 371, 372, 389, 394, 397, 411, 716, 719, 802, 803, 805, 810, 814, 815, 816, 817, 832, 833, 869, 870, 872, 877, 881, 882, 883, 902, 903, 905, 913, 914, 918, 919, 920, 939, 940, 942, 950, 951, 955, 956, 957, 976, 981, 985, 1224, 1300, 1304, 1306, 1308], "long": [133, 154, 499, 521, 716, 740, 1076, 1098, 1255, 1299, 1304], "n": [133, 153, 207, 232, 274, 298, 307, 335, 344, 372, 513, 520, 716, 739, 792, 817, 859, 883, 892, 920, 929, 957, 1090, 1097, 1204, 1225, 1262, 1266, 1274, 1285, 1287, 1292, 1296, 1306, 1308], "jame": [133, 716], "houz": [133, 497, 532, 716, 960, 1074, 1109, 1292], "jr": [133, 497, 532, 716, 1074, 1109, 1292], "four": [133, 386, 387, 389, 716, 973, 974, 976], "dealis": [133, 716], "scheme": [133, 441, 497, 523, 716, 960, 1017, 1074, 1100, 1292], "2001": [133, 716], "18": [133, 452, 716, 1029, 1272, 1283, 1288], "1674": [133, 716], "ref_vel_field": [134, 717], "interval_split": [134, 717], "interval_limit": [134, 717], "skip_between_rai": [134, 717], "100": [134, 136, 197, 221, 226, 232, 288, 293, 298, 321, 335, 358, 372, 396, 457, 500, 513, 529, 536, 717, 719, 730, 781, 806, 811, 817, 873, 878, 883, 906, 920, 943, 957, 983, 1034, 1077, 1090, 1106, 1113, 1268, 1272, 1282, 1283, 1294], "skip_along_rai": [134, 717], "nyquist_vel": [134, 135, 717, 718, 1300], "check_nyquist_uniform": [134, 135, 448, 717, 718, 1024], "rays_wrap_around": [134, 135, 717, 718], "region": [134, 147, 260, 329, 366, 717, 732, 845, 914, 951, 1025, 1220, 1225, 1230, 1232, 1236, 1237, 1255, 1256, 1260, 1262, 1274, 1292, 1303, 1306], "similar": [134, 457, 717, 1034, 1266, 1302], "merg": [134, 169, 171, 178, 185, 190, 379, 681, 683, 690, 697, 702, 717, 753, 755, 762, 769, 774, 966, 1306], "pair": [134, 386, 397, 433, 717, 973, 985, 993, 998, 1004, 1298], "accomplish": [134, 390, 717, 977], "problem": [134, 146, 147, 301, 338, 443, 717, 731, 732, 886, 923, 1019, 1263], "reduct": [134, 717], "anchor": [134, 717], "onc": [134, 717, 1292, 1305, 1308], "complet": [134, 717, 1255], "simul": [134, 513, 717, 1090, 1247, 1255, 1296], "simulated_vel_from_profil": [134, 717, 1306], "segment": [134, 150, 151, 325, 326, 362, 363, 717, 736, 737, 910, 911, 947, 948, 1255], "split": [134, 717, 1230], "interv": [134, 172, 177, 186, 191, 193, 197, 684, 689, 698, 703, 717, 730, 756, 761, 770, 775, 777, 781, 1204, 1233, 1234, 1255], "larger": [134, 513, 717, 1090, 1240, 1292], "longer": [134, 150, 717, 736, 1255, 1296, 1305], "better": [134, 221, 226, 288, 293, 321, 330, 358, 367, 513, 717, 806, 811, 873, 878, 906, 915, 943, 952, 1090, 1255, 1300], "seem": [134, 717], "compromis": [134, 717], "artifact": [134, 717, 1300, 1302], "free": [134, 717, 1296], "cover": [134, 717], "entir": [134, 135, 218, 225, 229, 230, 231, 245, 251, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 443, 717, 718, 803, 810, 814, 815, 816, 830, 836, 838, 848, 850, 852, 870, 877, 881, 882, 903, 913, 914, 918, 919, 940, 950, 951, 955, 956, 1019, 1249, 1250], "join": [134, 717, 1125, 1255], "gap": [134, 136, 141, 717, 719, 724, 1302], "connect": [134, 135, 717, 718], "disabl": [134, 135, 193, 195, 196, 197, 198, 199, 200, 717, 718, 730, 777, 779, 780, 781, 782, 783, 784], "across": [134, 717, 1255, 1291], "individu": [134, 135, 443, 717, 718, 1019], "ident": [134, 135, 383, 442, 717, 718, 970, 1018], "de": [134, 135, 364, 717, 718, 949, 1197, 1198], "alias": [134, 135, 717, 718, 1197, 1198, 1255, 1300, 1304], "corr_vel": [134, 135, 717, 718], "unwrap_unit": [135, 718], "skip_check": [135, 718, 1255], "multi": [135, 535, 718, 1112, 1255], "unwrap": [135, 146, 147, 718, 731, 732, 1255], "independ": [135, 718], "often": [135, 718, 1025], "give": [135, 150, 394, 718, 736, 981, 1220, 1296, 1300, 1303], "superior": [135, 718], "lower": [135, 245, 247, 248, 249, 251, 253, 263, 265, 267, 445, 499, 718, 830, 832, 833, 834, 836, 838, 848, 850, 852, 1076, 1267, 1268], "contamin": [135, 527, 532, 718, 1104, 1109, 1225], "clutter": [135, 455, 513, 521, 522, 718, 1032, 1090, 1098, 1099, 1220, 1226, 1238, 1300, 1303], "poor": [135, 718], "verif": [135, 718, 1255], "appropi": [135, 217, 284, 317, 354, 718, 802, 869, 902, 939, 1219], "offer": [135, 718], "extrem": [135, 244, 718, 829], "miguel": [135, 718], "arevallilo": [135, 718], "herraez": [135, 718], "david": [135, 718], "burton": [135, 718], "michael": [135, 718], "lalor": [135, 718], "munther": [135, 718], "gdeisat": [135, 718], "fast": [135, 718], "two": [135, 154, 244, 245, 396, 441, 491, 493, 497, 518, 519, 532, 718, 740, 829, 830, 983, 1017, 1068, 1070, 1074, 1095, 1096, 1109, 1208, 1210, 1240, 1241, 1243, 1244, 1255, 1260, 1265, 1270, 1272, 1287, 1299, 1302, 1306], "sort": [135, 550, 718, 1255], "reliabl": [135, 718], "noncontinu": [135, 718], "optic": [135, 513, 718, 1090], "vol": [135, 452, 462, 470, 479, 492, 718, 1029, 1039, 1047, 1056, 1069], "41": [135, 718, 1290, 1302], "2002": [135, 718], "7437": [135, 718], "abdul": [135, 718], "rahman": [135, 718], "osten": [135, 718], "gorecki": [135, 718], "l": [135, 146, 147, 222, 226, 227, 260, 289, 293, 294, 322, 331, 359, 366, 368, 718, 731, 732, 807, 811, 812, 845, 874, 878, 879, 907, 916, 944, 951, 953, 1230, 1274], "novak": [135, 718], "ed": [135, 718], "metrologi": [135, 718], "2005": [135, 497, 718, 1074, 1292], "32": [135, 479, 718, 1056, 1220, 1255, 1271, 1275, 1276, 1277, 1287, 1290, 1304], "intern": [135, 457, 499, 718, 1034, 1076], "societi": [135, 718, 1025], "photon": [135, 718], "label_dict": [136, 141, 719, 724], "delta": [136, 141, 524, 719, 724, 1101], "despeckl": [136, 719, 1255], "identifi": [136, 141, 497, 719, 724, 960, 1074, 1219, 1220, 1274, 1292, 1303], "small": [136, 141, 497, 499, 511, 532, 719, 724, 1074, 1076, 1088, 1109, 1238, 1255, 1266, 1282], "investig": [136, 141, 530, 719, 724, 1107, 1262], "well": [136, 193, 195, 196, 197, 198, 199, 200, 366, 386, 388, 443, 538, 719, 730, 777, 779, 780, 781, 782, 783, 784, 951, 973, 975, 1019, 1020, 1255, 1263, 1272, 1296, 1302, 1303], "variou": [136, 165, 193, 194, 195, 196, 197, 198, 199, 200, 677, 719, 730, 749, 777, 778, 779, 780, 781, 782, 783, 784, 1224, 1255, 1260, 1289, 1296], "scipi": [136, 141, 463, 482, 523, 719, 724, 1040, 1059, 1100, 1247, 1255, 1282, 1283, 1296, 1305, 1306, 1308], "core": [136, 141, 394, 443, 497, 524, 525, 719, 724, 960, 981, 1009, 1019, 1074, 1101, 1102, 1224, 1255, 1292, 1306], "queri": [136, 141, 443, 719, 724, 1019], "speckl": [136, 719, 1292], "find_object": [136, 719], "tupl": [136, 141, 218, 220, 223, 224, 225, 228, 229, 230, 231, 232, 234, 245, 247, 251, 253, 263, 265, 267, 285, 287, 290, 291, 292, 295, 296, 297, 298, 300, 318, 320, 323, 324, 328, 329, 332, 333, 334, 335, 337, 355, 357, 360, 361, 365, 366, 369, 370, 371, 372, 374, 433, 441, 443, 457, 518, 519, 719, 724, 803, 805, 808, 809, 810, 813, 814, 815, 816, 817, 819, 830, 832, 836, 838, 848, 850, 852, 870, 872, 875, 876, 877, 880, 881, 882, 883, 885, 903, 905, 908, 909, 913, 914, 917, 918, 919, 920, 922, 940, 942, 945, 946, 950, 951, 954, 955, 956, 957, 959, 993, 1004, 1017, 1019, 1020, 1034, 1095, 1096, 1187, 1242, 1255], "contigu": [136, 141, 719, 724], "perman": [136, 719], "altern": [137, 443, 720, 1019, 1025, 1292], "suitabl": [137, 138, 139, 140, 203, 239, 255, 270, 303, 340, 529, 720, 721, 722, 723, 788, 824, 840, 855, 888, 925, 1106], "phidp0_dict": [137, 720], "first_gates_dict": [137, 720], "700": [138, 139, 150, 151, 152, 529, 721, 722, 736, 737, 738, 1106, 1255], "quantil": [138, 457, 500, 721, 1034, 1077], "rhohv_rain_dict": [138, 721], "rhohvmin": [139, 140, 722, 723], "phidpmax": [139, 140, 722, 723], "elmax": [139, 140, 193, 527, 722, 723, 777, 1104, 1232], "undesir": [139, 140, 194, 195, 196, 197, 198, 199, 200, 443, 722, 723, 730, 778, 779, 780, 781, 782, 783, 784, 1019], "moder": [139, 722], "zdr_prec_dict": [139, 722], "compli": [139, 140, 722, 723, 1232], "30": [140, 144, 146, 147, 457, 470, 472, 479, 497, 527, 723, 728, 731, 732, 1034, 1047, 1049, 1056, 1074, 1104, 1220, 1266, 1273, 1277, 1279, 1292, 1300], "snrmin": [140, 723], "snrmax": [140, 723], "kept_valu": [140, 194, 723, 778], "kdpmax": [140, 723], "tempmin": [140, 723], "tempmax": [140, 723], "hydro_field": [140, 150, 151, 152, 502, 520, 528, 723, 736, 737, 738, 1079, 1097, 1105], "kdp_field": [140, 146, 147, 151, 498, 502, 503, 505, 506, 520, 521, 522, 523, 524, 525, 723, 731, 732, 737, 1075, 1079, 1080, 1082, 1083, 1097, 1098, 1099, 1100, 1101, 1102, 1293], "snow": [140, 453, 497, 502, 723, 1030, 1074, 1079, 1230, 1274, 1292, 1293], "hydrometeor": [140, 150, 151, 152, 194, 394, 457, 498, 500, 502, 520, 528, 533, 723, 736, 737, 738, 778, 981, 1034, 1075, 1077, 1079, 1097, 1105, 1110, 1255, 1260, 1289, 1300], "classif": [140, 150, 151, 152, 194, 497, 498, 502, 520, 528, 532, 723, 736, 737, 738, 778, 960, 1074, 1075, 1079, 1097, 1105, 1109, 1255, 1260, 1289], "differneti": [140, 723], "zdr_snow_dict": [140, 723], "label": [141, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 243, 245, 247, 248, 249, 251, 253, 261, 263, 265, 267, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 290, 291, 292, 295, 296, 297, 298, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 324, 327, 328, 329, 332, 333, 334, 335, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 360, 361, 364, 365, 366, 369, 370, 371, 372, 457, 724, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 808, 809, 810, 813, 814, 815, 816, 817, 828, 830, 832, 833, 834, 836, 838, 846, 848, 850, 852, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 875, 876, 877, 880, 881, 882, 883, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 908, 909, 912, 913, 914, 917, 918, 919, 920, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 945, 946, 949, 950, 951, 954, 955, 956, 957, 1034, 1253, 1255, 1266, 1272, 1273, 1282, 1283, 1287, 1293], "period": [141, 724, 1300], "account": [141, 148, 724, 733, 1255], "examin": [141, 376, 390, 393, 724, 963, 977, 980, 1306], "box": [141, 394, 724, 981, 1293], "alwai": [141, 377, 390, 497, 523, 527, 724, 964, 977, 1074, 1100, 1104, 1255, 1296], "occur": [141, 173, 192, 386, 387, 685, 704, 724, 757, 776, 973, 974, 1300, 1304], "readi": [141, 724], "min_temp": [142, 199, 726, 783], "max_h_iso0": [142, 195, 726, 779], "beamwidth": [142, 149, 159, 195, 199, 232, 298, 335, 372, 473, 513, 529, 726, 735, 745, 779, 783, 817, 883, 920, 957, 1050, 1090, 1106], "construct": [142, 178, 190, 443, 529, 690, 702, 726, 762, 774, 1019, 1106], "beyond": [142, 193, 538, 726, 777, 1238, 1239, 1305], "extent": [142, 513, 726, 1090, 1268], "reach": [142, 726], "mask_fzl": [142, 726], "end_gate_arr": [142, 726], "delev_max": [143, 144, 145, 727, 728, 729], "dazim_max": [143, 144, 145, 727, 728, 729], "elmin": [143, 144, 145, 193, 527, 727, 728, 729, 777, 1104, 1232], "rmin": [143, 193, 466, 485, 527, 727, 777, 1043, 1062, 1104, 1232], "50000": [143, 479, 727, 1056, 1268, 1272, 1292, 1302], "hmin": [143, 727, 1232], "10000": [143, 232, 260, 298, 335, 366, 372, 457, 462, 470, 479, 492, 495, 531, 536, 727, 817, 845, 883, 920, 951, 957, 1034, 1039, 1047, 1056, 1069, 1072, 1108, 1113, 1272, 1292, 1302], "nbins_min": [143, 144, 471, 727, 728, 1048], "attg": [143, 144, 145, 474, 480, 514, 727, 728, 729, 1051, 1057, 1091], "max_std_pwr": [143, 471, 727, 1048], "max_std_zdr": [143, 144, 727, 728], "sun_posit": [143, 144, 145, 727, 728, 729], "pwrh_field": [143, 144, 145, 727, 728, 729], "pwrv_field": [143, 144, 145, 727, 728, 729], "suspect": [143, 144, 145, 193, 727, 728, 729, 777], "sun": [143, 144, 145, 148, 149, 156, 157, 158, 159, 160, 725, 727, 728, 729, 733, 734, 735, 742, 743, 744, 745, 746], "hit": [143, 144, 145, 160, 725, 727, 728, 729, 734, 746, 1306], "detect": [143, 144, 145, 159, 499, 527, 529, 727, 728, 729, 745, 1076, 1104, 1106, 1225, 1255, 1277, 1292, 1300], "hildebrand": [143, 452, 466, 471, 485, 727, 1029, 1043, 1048, 1062, 1219, 1255], "sekhon": [143, 466, 471, 485, 727, 1043, 1048, 1062, 1219, 1255], "we": [143, 511, 727, 1088, 1262, 1263, 1266, 1271, 1290, 1292, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1308], "higher": [143, 221, 226, 288, 293, 321, 330, 358, 367, 727, 806, 811, 873, 878, 906, 915, 943, 952, 1300, 1302], "ga": [143, 144, 145, 446, 474, 480, 514, 727, 728, 729, 1022, 1051, 1057, 1091], "wai": [143, 144, 145, 446, 470, 474, 480, 513, 514, 530, 727, 728, 729, 1022, 1047, 1051, 1057, 1090, 1091, 1107, 1266, 1298, 1306, 1308], "pysolar": [143, 144, 145, 158, 727, 728, 729, 744], "sun_hit": [143, 144, 145, 160, 727, 728, 729, 746], "new_radar": [143, 144, 727, 728, 1299], "npulses_rai": [144, 472, 728, 1049], "ivic": [144, 472, 728, 1049, 1220, 1227, 1236, 1238, 1239], "2003": [144, 728, 1292], "instead": [144, 247, 394, 472, 728, 832, 981, 1049, 1255, 1263, 1292, 1296, 1302, 1305, 1306, 1308], "7": [144, 156, 159, 196, 384, 472, 535, 728, 742, 745, 780, 971, 1049, 1112, 1220, 1229, 1252, 1272, 1274, 1286, 1296, 1303, 1304, 1305, 1306], "noise_thr": [145, 729], "simpl": [145, 729, 1009, 1255, 1299, 1300], "self_const": [146, 147, 731, 732], "60000": [146, 147, 731, 732, 1268, 1272, 1302], "low_z": [146, 147, 731, 732], "high_z": [146, 147, 731, 732], "min_phidp": [146, 147, 731, 732], "01": [146, 147, 327, 364, 457, 523, 731, 732, 912, 949, 1034, 1100, 1225, 1240, 1259, 1271, 1288], "min_ncp": [146, 197, 730, 731, 781], "min_rhv": [146, 196, 197, 730, 731, 780, 781], "sys_phas": [146, 731], "overide_sys_phas": [146, 731], "nowrap": [146, 147, 731, 732], "really_verbos": [146, 147, 731, 732], "lp_solver": [146, 147, 731, 732], "cylp": [146, 147, 731, 732, 1255, 1296, 1305, 1308], "unf_field": [146, 147, 731, 732], "window_len": [146, 147, 153, 731, 732, 739], "proc": [146, 147, 523, 731, 732, 1100, 1255], "coef": [146, 147, 731, 732, 1255], "914": [146, 147, 731, 732, 1255], "lp": [146, 147, 731, 732, 1255, 1296], "consist": [146, 147, 150, 151, 152, 731, 732, 736, 737, 738, 1255, 1302], "low": [146, 147, 148, 149, 156, 159, 386, 523, 731, 732, 733, 735, 742, 745, 973, 1100, 1274], "high": [146, 147, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 523, 731, 732, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1100, 1293], "copolar": [146, 147, 498, 499, 520, 527, 731, 732, 1075, 1076, 1097, 1104, 1291], "automat": [146, 390, 395, 396, 443, 448, 513, 527, 532, 731, 977, 982, 983, 1019, 1024, 1090, 1104, 1109, 1255, 1277, 1296, 1306], "lpx": [146, 147, 731, 732], "messag": [146, 147, 235, 254, 386, 731, 732, 820, 839, 973, 1255, 1263], "suppress": [146, 147, 523, 731, 732, 1100], "pyglpk": [146, 147, 731, 732, 1255, 1296, 1305], "cvxopt": [146, 147, 731, 732, 1255, 1296, 1305], "cylp_mp": [146, 147, 731, 732], "modul": [146, 147, 731, 732, 1192, 1254, 1255, 1262, 1263, 1296, 1299, 1300, 1302, 1303, 1304, 1305, 1306], "solv": [146, 147, 731, 732, 1255], "horizon": [146, 147, 498, 520, 527, 731, 732, 1075, 1097, 1104], "sobel": [146, 147, 731, 732], "worker": [146, 147, 731, 732], "link": [146, 147, 540, 731, 732, 1255], "1z": [146, 147, 731, 732], "reproc_phas": [146, 147, 731, 732], "sob_kdp": [146, 147, 731, 732], "recalcul": [146, 147, 513, 731, 732, 1090, 1298], "giangrand": [146, 147, 527, 731, 732, 1104], "mcgraw": [146, 147, 731, 732], "lei": [146, 147, 731, 732], "applic": [146, 147, 218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 394, 497, 731, 732, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 981, 1074, 1246, 1306], "program": [146, 147, 513, 731, 732, 1090, 1255, 1296, 1306], "atmo": [146, 147, 520, 530, 731, 732, 1097, 1107, 1230, 1274, 1306], "tech": [146, 147, 520, 731, 732, 1097, 1230, 1274], "2013": [146, 147, 472, 524, 530, 731, 732, 1049, 1101, 1107, 1220, 1304], "1716": [146, 147, 731, 732], "system_phas": [147, 732], "ncpt": [147, 732], "first_gate_sysp": [147, 732], "carri": [147, 732], "smaller": [147, 366, 513, 732, 951, 1090, 1240, 1292, 1306], "off": [147, 218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 519, 732, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1096, 1271, 1292], "ptoa": [148, 733], "wavelen": [148, 156, 159, 733, 742, 745], "antenna_gain": [148, 159, 474, 733, 745, 1051], "coeff_band": [148, 159, 733, 745], "solar": [148, 156, 159, 733, 742, 745], "flux": [148, 156, 159, 733, 742, 745], "amospher": [148, 733], "wavelength": [148, 156, 159, 513, 733, 742, 745, 1090], "bandwidth": [148, 159, 733, 745], "s0": [148, 156, 733, 742], "10e": [148, 156, 159, 733, 742, 745], "m2": [148, 156, 159, 733, 742, 745], "hz": [148, 156, 159, 446, 473, 474, 514, 515, 733, 742, 745, 1022, 1050, 1051, 1091, 1092, 1280], "altub": [148, 149, 156, 159, 733, 735, 742, 745], "bech": [148, 149, 156, 159, 733, 735, 742, 745], "o": [148, 149, 156, 159, 394, 733, 735, 742, 745, 981, 1125, 1273, 1296, 1305, 1306], "argemi": [148, 149, 156, 159, 733, 735, 742, 745], "t": [148, 149, 156, 159, 394, 398, 470, 497, 499, 523, 524, 527, 529, 530, 536, 733, 735, 742, 745, 981, 1047, 1074, 1076, 1100, 1101, 1104, 1106, 1107, 1113, 1255, 1266, 1292, 1296, 1298], "rigo": [148, 149, 156, 159, 733, 735, 742, 745], "2015": [148, 149, 156, 159, 501, 530, 733, 735, 742, 745, 1078, 1107], "align": [148, 149, 156, 159, 733, 735, 742, 745], "midrang": [148, 149, 156, 159, 733, 735, 742, 745], "angle_step": [149, 159, 735, 745], "fact": [149, 523, 525, 735, 1100, 1102], "la": [149, 735], "zdr_kdpzh_dict": [150, 151, 152, 736, 737, 738], "min_rhohv": [150, 151, 152, 736, 737, 738], "92": [150, 151, 152, 260, 736, 737, 738, 845, 1280], "filter_rain": [150, 151, 152, 736, 737, 738], "max_phidp": [150, 151, 152, 736, 737, 738], "smooth_wind_len": [150, 151, 152, 736, 737, 738], "dphidp_min": [150, 736], "dphidp_max": [150, 736], "parametr": [150, 151, 152, 736, 737, 738], "check_wet_radom": [150, 151, 736, 737], "wet_radome_refl": [150, 151, 736, 737], "wet_radome_len_min": [150, 151, 736, 737], "wet_radome_len_max": [150, 151, 736, 737], "wet_radome_ngates_min": [150, 151, 736, 737], "valid_gates_onli": [150, 736], "keep_point": [150, 151, 736, 737], "kdp_wind_len": [150, 736], "12": [150, 736, 1262, 1269, 1273, 1280, 1299, 1303, 1304], "tabl": [150, 151, 152, 394, 736, 737, 738, 981, 1236, 1238, 1239], "zh": [150, 151, 152, 550, 551, 736, 737, 738], "curv": [150, 151, 152, 736, 737, 738, 1292], "wolfensberg": [150, 151, 152, 499, 736, 737, 738, 1076, 1293, 1294], "louf": [150, 151, 152, 736, 737, 738], "gorgucci": [150, 151, 152, 736, 737, 738], "vaccarono": [150, 151, 152, 736, 737, 738], "kdpsim_field": [150, 151, 152, 736, 737, 738], "phidpsim_field": [150, 151, 152, 736, 737, 738], "closest": [150, 151, 379, 462, 470, 479, 492, 495, 736, 737, 966, 1009, 1039, 1047, 1056, 1069, 1072], "radom": [150, 151, 474, 480, 736, 737, 1051, 1057], "close": [150, 151, 376, 511, 523, 736, 737, 963, 1088, 1100, 1255], "wet": [150, 151, 736, 737, 1293], "mim": [150, 151, 736, 737], "disk": [150, 151, 736, 737], "around": [150, 151, 442, 493, 497, 499, 736, 737, 1018, 1070, 1074, 1076, 1204, 1229, 1267, 1282, 1285, 1292, 1298, 1300], "decid": [150, 151, 529, 736, 737, 1106], "That": [150, 736], "total": [150, 513, 523, 524, 525, 736, 1090, 1100, 1101, 1102, 1259, 1264, 1269, 1288, 1295], "further": [150, 151, 736, 737, 1224], "analysi": [150, 151, 441, 736, 737, 1017, 1224], "least": [150, 497, 521, 522, 736, 1074, 1098, 1099, 1292], "refl_bias_dict": [150, 151, 736, 737], "selfconsistency_dict": [150, 151, 736, 737], "keep_poinst": [150, 151, 736, 737], "measur": [150, 151, 156, 159, 447, 497, 501, 510, 511, 520, 523, 524, 525, 736, 737, 742, 745, 1020, 1023, 1074, 1078, 1087, 1088, 1097, 1100, 1101, 1102, 1292, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "min_zdr": [151, 737], "bias_per_g": [151, 737], "kdp_data_dict": [151, 737], "selfconsist": [152, 738], "privat": [152, 397, 738, 1306], "kdp_sim_dict": [152, 738], "phidp_sim_dict": [152, 738], "raw_data": [153, 739], "wind_len": [153, 155, 522, 739, 741, 1099], "min_valid": [153, 155, 522, 739, 741, 1099], "wind_typ": [153, 739], "median": [153, 457, 462, 470, 479, 492, 500, 739, 1034, 1039, 1047, 1056, 1069, 1077, 1207, 1209, 1220, 1255], "less": [153, 443, 497, 525, 739, 1019, 1074, 1102, 1230, 1292], "move": [153, 154, 155, 161, 162, 164, 196, 468, 484, 487, 488, 513, 521, 522, 739, 740, 741, 780, 1045, 1061, 1064, 1065, 1090, 1098, 1099, 1219, 1255, 1266, 1306], "data_smooth": [153, 739], "swind_len": [154, 521, 740, 1098], "smin_valid": [154, 521, 740, 1098], "lwind_len": [154, 521, 740, 1098], "lmin_valid": [154, 521, 740, 1098], "zthr": [154, 521, 740, 1098], "short": [154, 521, 740, 1098, 1306], "solar_flux": [156, 159, 742, 745], "cm": [156, 159, 494, 742, 745, 1071, 1283], "dt": [157, 158, 743, 744, 1258], "lat_deg": [157, 743], "lon_deg": [157, 743], "refract": [157, 513, 743, 1090], "datetim": [157, 158, 203, 205, 225, 229, 231, 270, 272, 292, 296, 297, 303, 305, 328, 333, 334, 340, 342, 365, 370, 371, 375, 378, 379, 396, 462, 470, 479, 492, 493, 495, 743, 744, 788, 790, 810, 814, 816, 855, 857, 877, 881, 882, 888, 890, 913, 918, 919, 925, 927, 950, 955, 956, 962, 965, 966, 983, 1039, 1047, 1056, 1069, 1070, 1072, 1214, 1215, 1216, 1217, 1218, 1255], "boolean": [157, 160, 165, 171, 185, 497, 511, 540, 550, 551, 565, 566, 677, 683, 697, 725, 743, 746, 749, 755, 769, 960, 1074, 1088, 1255, 1303], "elev_sun": [157, 743], "azim_sun": [157, 743], "sensor": [157, 158, 743, 744], "el": [158, 511, 744, 1088, 1205, 1206, 1255], "az": [158, 394, 744, 981, 1255, 1280, 1281], "would": [159, 745, 1025, 1220, 1255, 1262, 1263, 1300, 1302, 1306], "without": [159, 229, 296, 333, 370, 455, 471, 745, 814, 881, 918, 955, 1032, 1048, 1187, 1199, 1242, 1255, 1305], "characterist": [159, 745, 1302], "pwr_det": [159, 745], "az_rad": [160, 746], "az_sun": [160, 746], "el_rad": [160, 746], "el_sun": [160, 746], "sun_hit_std": [160, 746], "az_width_co": [160, 746], "el_width_co": [160, 746], "az_width_cross": [160, 746], "el_width_cross": [160, 746], "is_zdr": [160, 746], "val": [160, 734, 746], "val_std": [160, 734, 746], "az_bia": [160, 734, 746], "el_bia": [160, 734, 746], "az_width": [160, 734, 746], "el_width": [160, 734, 746], "nhit": [160, 746], "par": [160, 725, 734, 746], "gaussian": [160, 468, 484, 487, 488, 531, 725, 734, 746, 1045, 1061, 1064, 1065, 1108, 1191, 1282], "fit": [160, 725, 734, 746], "warn": [161, 162, 164, 390, 393, 977, 980, 1238, 1255, 1266, 1302], "categori": [161, 162], "old_nam": 164, "new_nam": 164, "alia": [164, 1197, 1198, 1255], "namespac": [164, 580, 1255], "wrapper": [164, 1296], "deprecatedfunctionnam": 164, "exclude_bas": [165, 677, 749], "exclude_below": [165, 677, 749, 1266, 1291, 1303], "suggest": [165, 677, 749, 1255], "gate_exclud": [165, 677, 749, 1303], "gate_includ": [165, 677, 749, 1303], "lost": [165, 525, 677, 749, 1102, 1253, 1302], "again": [165, 677, 749, 1263, 1273, 1305], "import": [165, 530, 535, 536, 677, 749, 1107, 1112, 1113, 1125, 1255, 1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1298, 1299, 1300, 1302, 1303, 1304, 1305], "io": [165, 441, 538, 677, 749, 1017, 1255, 1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1296, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "radar_fil": [165, 566, 677, 749, 1258, 1271, 1273], "nc": [165, 677, 749, 1255, 1257, 1266, 1268, 1271, 1272, 1273, 1277, 1279, 1280, 1281, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1298, 1299, 1303], "normalized_coherent_pow": [165, 677, 749, 1303], "exclude_mask": [167, 169, 170, 171, 172, 173, 176, 177, 178, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 679, 681, 682, 683, 684, 685, 688, 689, 690, 693, 695, 696, 697, 698, 700, 701, 702, 703, 704, 751, 753, 754, 755, 756, 757, 760, 761, 762, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776, 1267], "op": [167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 679, 681, 682, 683, 684, 685, 686, 688, 689, 690, 693, 695, 696, 697, 698, 700, 701, 702, 703, 704, 751, 753, 754, 755, 756, 757, 758, 760, 761, 762, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776], "inclus": [167, 169, 172, 177, 181, 183, 186, 191, 441, 443, 679, 681, 684, 689, 693, 695, 698, 703, 751, 753, 756, 761, 765, 767, 770, 775, 1017, 1019, 1187, 1255, 1271], "exclus": [169, 681, 753], "AND": [169, 171, 178, 185, 190, 681, 683, 690, 697, 702, 753, 755, 762, 769, 774], "OR": [169, 171, 178, 185, 190, 681, 683, 690, 697, 702, 753, 755, 762, 769, 774], "gener": [169, 171, 178, 185, 190, 202, 203, 204, 205, 206, 207, 218, 220, 225, 228, 229, 230, 231, 232, 239, 240, 241, 242, 245, 247, 248, 249, 251, 253, 255, 256, 257, 258, 263, 265, 267, 269, 270, 271, 272, 273, 274, 285, 287, 292, 295, 296, 297, 298, 302, 303, 304, 305, 306, 307, 318, 320, 328, 329, 332, 333, 334, 335, 339, 340, 341, 342, 343, 344, 355, 357, 365, 366, 369, 370, 371, 372, 393, 396, 398, 442, 443, 512, 513, 523, 531, 533, 681, 683, 690, 697, 702, 753, 755, 762, 769, 774, 787, 788, 789, 790, 791, 792, 803, 805, 810, 813, 814, 815, 816, 817, 824, 825, 826, 827, 830, 832, 833, 834, 836, 838, 840, 841, 842, 843, 848, 850, 852, 854, 855, 856, 857, 858, 859, 870, 872, 877, 880, 881, 882, 883, 887, 888, 889, 890, 891, 892, 903, 905, 913, 914, 917, 918, 919, 920, 924, 925, 926, 927, 928, 929, 940, 942, 950, 951, 954, 955, 956, 957, 980, 983, 998, 1009, 1018, 1019, 1020, 1089, 1090, 1100, 1108, 1110, 1255, 1260, 1262, 1271, 1296], "here": [169, 171, 178, 185, 190, 260, 681, 683, 690, 697, 702, 753, 755, 762, 769, 774, 845, 1266, 1292, 1296, 1298, 1303, 1305, 1308], "previous": [169, 171, 178, 185, 190, 681, 683, 690, 697, 702, 753, 755, 762, 769, 774, 1262, 1292], "becaus": [169, 171, 178, 523, 681, 683, 690, 753, 755, 762, 1100, 1292, 1308], "invalid": [169, 171, 173, 178, 193, 195, 196, 197, 198, 199, 200, 681, 683, 685, 690, 725, 730, 753, 755, 757, 762, 777, 779, 780, 781, 782, 783, 784], "v1": [172, 177, 186, 191, 684, 689, 698, 703, 756, 761, 770, 775, 1305], "v2": [172, 177, 186, 191, 684, 689, 698, 703, 756, 761, 770, 775, 1306], "insid": [172, 186, 528, 684, 698, 756, 770, 1105, 1299], "inf": [173, 192, 193, 197, 685, 704, 730, 757, 776, 777, 781, 1255], "outsid": [177, 191, 193, 197, 225, 228, 230, 231, 245, 247, 248, 249, 251, 253, 263, 265, 267, 292, 295, 297, 328, 329, 332, 334, 365, 366, 369, 371, 479, 480, 689, 703, 730, 761, 775, 777, 781, 810, 813, 815, 816, 830, 832, 833, 834, 836, 838, 848, 850, 852, 877, 880, 882, 913, 914, 917, 919, 950, 951, 954, 956, 1056, 1057, 1255, 1306], "trans_valu": [178, 190, 690, 702, 762, 774], "max_zdr": [193, 777], "max_rhv": [193, 777], "min_refl": [193, 197, 730, 777, 781], "max_refl": [193, 197, 730, 777, 781], "vel_lim": [193, 777], "2000": [193, 536, 777, 1113, 1267, 1302], "25000": [193, 447, 777, 1023, 1302], "85": [193, 196, 777, 780], "bird": [193, 454, 777, 1031], "criteria": [193, 194, 195, 196, 197, 198, 199, 200, 443, 523, 532, 730, 777, 778, 779, 780, 781, 782, 783, 784, 1019, 1100, 1109, 1232], "built": [193, 194, 195, 196, 197, 198, 199, 200, 442, 443, 730, 777, 778, 779, 780, 781, 782, 783, 784, 1018, 1019], "highest": [193, 196, 248, 777, 780, 833], "lowest": [193, 195, 196, 197, 198, 199, 200, 526, 730, 777, 779, 780, 781, 782, 783, 784, 1025, 1103, 1262, 1266, 1290, 1292], "greatest": [193, 197, 730, 777, 781], "400": [195, 199, 779, 783, 1255, 1298], "primarili": [195, 199, 779, 783], "phi_field": [196, 780], "textzdr_field": [196, 780], "textrhv_field": [196, 780], "textphi_field": [196, 780], "textrefl_field": [196, 780], "wind_siz": [196, 448, 780, 1024, 1252, 1300], "max_textphi": [196, 780], "max_textrhv": [196, 780], "max_textzdr": [196, 780], "max_textrefl": [196, 780], "cross": [196, 197, 212, 214, 218, 221, 232, 244, 245, 279, 281, 285, 288, 298, 312, 314, 318, 321, 335, 349, 351, 355, 358, 372, 454, 473, 474, 513, 730, 780, 781, 797, 799, 803, 806, 817, 829, 830, 864, 866, 870, 873, 883, 897, 899, 903, 906, 920, 934, 936, 940, 943, 957, 1031, 1050, 1051, 1090, 1212, 1213, 1255, 1260, 1270, 1279, 1292, 1304], "min_rhi": [197, 730, 781], "min_snr": [198, 782], "max_snr": [198, 782], "min_vi": [200, 784], "displai": [201, 218, 220, 225, 229, 230, 231, 232, 234, 268, 285, 287, 292, 296, 297, 298, 300, 301, 318, 320, 328, 329, 333, 334, 335, 337, 338, 355, 357, 365, 366, 370, 371, 372, 374, 394, 513, 535, 536, 786, 803, 805, 810, 814, 815, 816, 817, 819, 853, 870, 872, 877, 881, 882, 883, 885, 886, 903, 905, 913, 914, 918, 919, 920, 922, 923, 940, 942, 950, 951, 955, 956, 957, 959, 981, 1025, 1090, 1112, 1113, 1255, 1257, 1258, 1262, 1263, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1298, 1299, 1300, 1302, 1303, 1306], "airborn": [201, 786, 1255], "plot_var": [201, 268, 301, 338, 786, 853, 886, 923], "order": [201, 268, 301, 338, 390, 395, 396, 497, 520, 523, 527, 529, 786, 853, 886, 923, 960, 977, 982, 983, 1009, 1074, 1097, 1100, 1104, 1106, 1204, 1255, 1292, 1296, 1306], "cb": [201, 268, 301, 338, 786, 853, 886, 923, 1273], "colorbar": [201, 218, 219, 220, 225, 228, 229, 230, 231, 232, 243, 245, 247, 248, 249, 251, 253, 254, 261, 263, 265, 267, 268, 285, 286, 287, 292, 295, 296, 297, 298, 301, 318, 319, 320, 328, 329, 332, 333, 334, 335, 338, 355, 356, 357, 365, 366, 369, 370, 371, 372, 786, 803, 804, 805, 810, 813, 814, 815, 816, 817, 828, 830, 832, 833, 834, 836, 838, 839, 846, 848, 850, 852, 853, 870, 871, 872, 877, 880, 881, 882, 883, 886, 903, 904, 905, 913, 914, 917, 918, 919, 920, 923, 940, 941, 942, 950, 951, 954, 955, 956, 957, 1255, 1260, 1266, 1270, 1271, 1287], "loc": [201, 268, 301, 338, 786, 853, 886, 923, 1272], "titl": [202, 204, 205, 206, 207, 218, 220, 225, 228, 229, 230, 231, 232, 240, 241, 242, 245, 247, 248, 249, 251, 253, 256, 257, 258, 263, 265, 267, 269, 271, 272, 273, 274, 285, 287, 292, 295, 296, 297, 298, 302, 304, 305, 306, 307, 318, 320, 328, 329, 332, 333, 334, 335, 339, 341, 342, 343, 344, 355, 357, 365, 366, 369, 370, 371, 372, 787, 789, 790, 791, 792, 803, 805, 810, 813, 814, 815, 816, 817, 825, 826, 827, 830, 832, 833, 834, 836, 838, 841, 842, 843, 848, 850, 852, 854, 856, 857, 858, 859, 870, 872, 877, 880, 881, 882, 883, 887, 889, 890, 891, 892, 903, 905, 913, 914, 917, 918, 919, 920, 924, 926, 927, 928, 929, 940, 942, 950, 951, 954, 955, 956, 957, 1255, 1257, 1258, 1266, 1273, 1275, 1276, 1278, 1280, 1281, 1285, 1304], "ext": [203, 239, 255, 270, 303, 340, 788, 824, 840, 855, 888, 925], "datetime_format": [203, 205, 270, 272, 303, 305, 340, 342, 788, 790, 855, 857, 888, 890, 925, 927], "use_sweep_tim": [203, 205, 270, 272, 303, 305, 340, 342, 788, 790, 855, 857, 888, 890, 925, 927], "form": [203, 220, 239, 255, 270, 287, 303, 320, 340, 357, 788, 805, 824, 840, 855, 872, 888, 905, 925, 942, 1255], "radar_name_field_sweep_tim": [203, 270, 303, 340, 788, 855, 888, 925], "extens": [203, 239, 255, 270, 303, 340, 394, 788, 824, 840, 855, 888, 925, 981, 1305], "strftime": [203, 205, 225, 229, 270, 272, 292, 296, 303, 305, 328, 333, 340, 342, 365, 370, 788, 790, 810, 814, 855, 857, 877, 881, 888, 890, 913, 918, 925, 927, 950, 955], "vpt": [206, 217, 231, 273, 284, 297, 306, 317, 334, 343, 354, 371, 791, 802, 816, 858, 869, 882, 891, 902, 919, 928, 939, 956, 1235, 1255], "ndarrai": [207, 232, 274, 298, 307, 335, 344, 372, 520, 569, 792, 817, 859, 883, 892, 920, 929, 957, 1097, 1209, 1229, 1304], "xaxi": [208, 211, 212, 275, 278, 279, 308, 311, 312, 345, 348, 349, 793, 796, 797, 860, 863, 864, 893, 896, 897, 930, 933, 934, 1273], "static": [209, 210, 221, 222, 226, 233, 234, 276, 277, 288, 289, 293, 299, 300, 309, 310, 321, 322, 336, 337, 346, 347, 358, 359, 373, 374, 794, 795, 806, 807, 811, 818, 819, 861, 862, 873, 874, 878, 884, 885, 894, 895, 906, 907, 921, 922, 931, 932, 943, 944, 958, 959, 1296], "yaxi": [209, 210, 213, 214, 215, 216, 276, 277, 280, 281, 282, 283, 309, 310, 313, 314, 315, 316, 346, 347, 350, 351, 352, 353, 794, 795, 798, 799, 800, 801, 861, 862, 865, 866, 867, 868, 894, 895, 898, 899, 900, 901, 931, 932, 935, 936, 937, 938], "custom": [217, 218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 247, 249, 251, 253, 261, 263, 265, 267, 284, 285, 286, 287, 292, 296, 297, 298, 317, 318, 319, 320, 328, 329, 333, 334, 335, 354, 355, 356, 357, 365, 366, 370, 371, 372, 425, 442, 747, 802, 803, 804, 805, 810, 814, 815, 816, 817, 828, 830, 832, 834, 836, 838, 846, 848, 850, 852, 869, 870, 871, 872, 877, 881, 882, 883, 902, 903, 904, 905, 913, 914, 918, 919, 920, 939, 940, 941, 942, 950, 951, 955, 956, 957, 1018, 1302], "plot_ppi": [217, 284, 317, 354, 802, 869, 902, 939, 1255, 1258, 1293, 1298], "plot_sweep_grid": [217, 802, 1255], "target_azimuth": [218, 285, 318, 355, 803, 870, 903, 940, 1212], "mask_tupl": [218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 803, 810, 813, 814, 815, 816, 817, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957], "norm": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 523, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1100, 1255, 1273, 1293], "cmap": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 394, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 981, 1266, 1271, 1272, 1273, 1274, 1278, 1281, 1283, 1285, 1286, 1291, 1292, 1299, 1300], "mask_outsid": [218, 225, 228, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 803, 810, 813, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957, 1255, 1280, 1281], "title_flag": [218, 220, 225, 228, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 329, 332, 333, 334, 335, 355, 357, 365, 366, 369, 370, 371, 372, 803, 805, 810, 813, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 914, 917, 918, 919, 920, 940, 942, 950, 951, 954, 955, 956, 957, 1285], "axislabel": [218, 220, 225, 228, 229, 230, 231, 232, 245, 247, 251, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 332, 333, 334, 335, 355, 357, 365, 369, 370, 371, 372, 803, 805, 810, 813, 814, 815, 816, 817, 830, 832, 836, 838, 848, 850, 852, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 917, 918, 919, 920, 940, 942, 950, 954, 955, 956, 957, 1275, 1280, 1281], "axislabels_flag": [218, 220, 225, 228, 229, 230, 231, 232, 245, 247, 251, 253, 263, 265, 267, 285, 287, 292, 295, 296, 297, 298, 318, 320, 328, 332, 333, 334, 335, 355, 357, 365, 369, 370, 371, 372, 803, 805, 810, 813, 814, 815, 816, 817, 830, 832, 836, 838, 848, 850, 852, 870, 872, 877, 880, 881, 882, 883, 903, 905, 913, 917, 918, 919, 920, 940, 942, 950, 954, 955, 956, 957, 1255, 1292], "colorbar_flag": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957], "colorbar_label": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1257, 1258, 1262, 1275, 1276, 1280, 1281, 1282, 1283, 1287], "colorbar_ori": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 333, 334, 335, 355, 357, 365, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 918, 919, 920, 940, 942, 950, 955, 956, 957, 1255], "reverse_xaxi": [218, 229, 285, 296, 318, 333, 355, 370, 803, 814, 870, 881, 903, 918, 940, 955], "fig": [218, 219, 220, 225, 228, 229, 230, 231, 232, 243, 245, 247, 248, 249, 251, 253, 261, 263, 265, 267, 285, 286, 287, 292, 295, 296, 297, 298, 318, 319, 320, 328, 329, 332, 333, 334, 335, 355, 356, 357, 365, 366, 369, 370, 371, 372, 803, 804, 805, 810, 813, 814, 815, 816, 817, 828, 830, 832, 833, 834, 836, 838, 846, 848, 850, 852, 870, 871, 872, 877, 880, 881, 882, 883, 903, 904, 905, 913, 914, 917, 918, 919, 920, 940, 941, 942, 950, 951, 954, 955, 956, 957, 1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1291, 1293, 1294, 1300, 1302, 1303], "tick": [218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 247, 249, 251, 253, 261, 263, 265, 267, 285, 286, 287, 292, 296, 297, 298, 318, 319, 320, 328, 329, 333, 334, 335, 355, 356, 357, 365, 366, 370, 371, 372, 803, 804, 805, 810, 814, 815, 816, 817, 828, 830, 832, 834, 836, 838, 846, 848, 850, 852, 870, 871, 872, 877, 881, 882, 883, 903, 904, 905, 913, 914, 918, 919, 920, 940, 941, 942, 950, 951, 955, 956, 957, 1255, 1271, 1273, 1292, 1293], "ticklab": [218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 247, 249, 251, 253, 261, 263, 265, 267, 285, 286, 287, 292, 296, 297, 298, 318, 319, 320, 328, 329, 333, 334, 335, 355, 356, 357, 365, 366, 370, 371, 372, 803, 804, 805, 810, 814, 815, 816, 817, 828, 830, 832, 834, 836, 838, 846, 848, 850, 852, 870, 871, 872, 877, 881, 882, 883, 903, 904, 905, 913, 914, 918, 919, 920, 940, 941, 942, 950, 951, 955, 956, 957, 1255, 1292, 1293], "raster": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 394, 513, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 981, 1090, 1255], "pseudo": [218, 285, 318, 355, 527, 803, 870, 903, 940, 1104, 1255], "associ": [218, 285, 318, 355, 803, 870, 903, 940, 998], "matplotlib": [218, 220, 223, 224, 225, 229, 230, 231, 232, 245, 246, 247, 249, 251, 253, 262, 263, 265, 267, 285, 287, 290, 291, 292, 296, 297, 298, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 355, 357, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 394, 803, 805, 808, 809, 810, 814, 815, 816, 817, 830, 831, 832, 834, 836, 838, 847, 848, 850, 852, 870, 872, 875, 876, 877, 881, 882, 883, 903, 905, 908, 909, 910, 911, 912, 913, 914, 915, 918, 919, 920, 940, 942, 945, 946, 947, 948, 949, 950, 951, 952, 955, 956, 957, 981, 1255, 1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1296, 1298, 1299, 1300, 1302, 1303, 1305, 1308], "pcolormesh": [218, 220, 225, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1255, 1266, 1282, 1292], "ncp": [218, 225, 228, 229, 230, 231, 232, 285, 292, 295, 296, 297, 298, 318, 328, 329, 332, 333, 334, 335, 355, 365, 366, 369, 370, 371, 372, 803, 810, 813, 814, 815, 816, 817, 870, 877, 880, 881, 882, 883, 903, 913, 914, 917, 918, 919, 920, 940, 950, 951, 954, 955, 956, 957], "lumin": [218, 220, 225, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 830, 832, 833, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957], "west": [218, 229, 285, 296, 318, 333, 355, 370, 803, 814, 870, 881, 903, 918, 940, 955, 1020, 1275], "leav": [218, 220, 225, 229, 230, 231, 232, 245, 247, 249, 251, 253, 263, 265, 267, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 830, 832, 834, 836, 838, 848, 850, 852, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957], "orient": [218, 219, 220, 225, 229, 230, 231, 232, 243, 245, 247, 249, 251, 253, 261, 263, 265, 267, 285, 286, 287, 292, 296, 297, 298, 318, 319, 320, 328, 333, 334, 335, 355, 356, 357, 365, 370, 371, 372, 803, 804, 805, 810, 814, 815, 816, 817, 828, 830, 832, 834, 836, 838, 846, 848, 850, 852, 870, 871, 872, 877, 881, 882, 883, 903, 904, 905, 913, 918, 919, 920, 940, 941, 942, 950, 955, 956, 957, 1293, 1294], "treat": [218, 225, 229, 230, 231, 245, 251, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 803, 810, 814, 815, 816, 830, 836, 838, 848, 850, 852, 870, 877, 881, 882, 903, 913, 914, 918, 919, 940, 950, 951, 955, 956], "themselv": [218, 225, 229, 230, 231, 245, 251, 253, 263, 265, 267, 285, 292, 296, 297, 318, 328, 329, 333, 334, 355, 365, 366, 370, 371, 803, 810, 814, 815, 816, 830, 836, 838, 848, 850, 852, 870, 877, 881, 882, 903, 913, 914, 918, 919, 940, 950, 951, 955, 956], "figur": [218, 219, 220, 225, 228, 229, 230, 231, 232, 243, 245, 247, 248, 249, 251, 253, 261, 263, 265, 267, 285, 286, 287, 292, 295, 296, 297, 298, 318, 319, 320, 328, 329, 332, 333, 334, 335, 355, 356, 357, 365, 366, 369, 370, 371, 372, 803, 804, 805, 810, 813, 814, 815, 816, 817, 828, 830, 832, 833, 834, 836, 838, 846, 848, 850, 852, 870, 871, 872, 877, 880, 881, 882, 883, 903, 904, 905, 913, 914, 917, 918, 919, 920, 940, 941, 942, 950, 951, 954, 955, 956, 957, 1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1291, 1292, 1299, 1300, 1302, 1303], "render": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957], "rather": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957], "larg": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 523, 532, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1100, 1109, 1255], "Be": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957], "sure": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1255, 1266, 1273, 1292, 1305, 1306, 1308], "dpi": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957], "your": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 538, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957, 1260, 1270, 1272, 1292, 1296, 1305, 1306, 1308], "ep": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957], "svg": [218, 220, 225, 229, 230, 231, 232, 285, 287, 292, 296, 297, 298, 318, 320, 328, 329, 333, 334, 335, 355, 357, 365, 366, 370, 371, 372, 803, 805, 810, 814, 815, 816, 817, 870, 872, 877, 881, 882, 883, 903, 905, 913, 914, 918, 919, 920, 940, 942, 950, 951, 955, 956, 957], "mappabl": [219, 243, 254, 261, 286, 319, 356, 804, 828, 839, 846, 871, 904, 941], "cax": [219, 243, 261, 286, 319, 356, 804, 828, 846, 871, 904, 941, 1293], "imag": [219, 243, 248, 261, 286, 319, 356, 519, 804, 828, 833, 846, 871, 904, 941, 1096, 1204, 1230, 1255, 1260, 1270, 1290, 1292], "contourset": [219, 243, 254, 261, 286, 319, 356, 804, 828, 839, 846, 871, 904, 941], "etc": [219, 243, 247, 248, 254, 261, 286, 319, 329, 356, 366, 393, 462, 470, 479, 492, 495, 804, 828, 832, 833, 839, 846, 871, 904, 914, 941, 951, 980, 1039, 1047, 1056, 1069, 1072, 1255], "onto": [219, 243, 261, 263, 286, 319, 329, 356, 366, 441, 443, 526, 804, 828, 846, 848, 871, 904, 914, 941, 951, 1009, 1017, 1019, 1103], "drawn": [219, 243, 261, 286, 319, 356, 804, 828, 846, 871, 904, 941], "target_rang": [220, 287, 320, 357, 805, 872, 905, 942], "delta_x": [220, 287, 320, 357, 805, 872, 905, 942], "delta_i": [220, 287, 320, 357, 805, 872, 905, 942], "az_limit": [220, 287, 320, 357, 805, 872, 905, 942], "el_limit": [220, 287, 320, 357, 805, 872, 905, 942], "reflector": [220, 287, 320, 357, 805, 872, 905, 942, 1255], "griddata": [220, 287, 320, 357, 805, 872, 905, 942], "npt": [221, 226, 288, 293, 321, 330, 358, 367, 806, 811, 873, 878, 906, 915, 943, 952], "hair": [221, 288, 321, 358, 806, 873, 906, 943, 1279], "col": [222, 226, 227, 289, 293, 294, 322, 331, 359, 368, 807, 811, 812, 874, 878, 879, 907, 916, 944, 953], "line": [222, 228, 246, 247, 248, 260, 262, 289, 295, 322, 325, 326, 329, 330, 332, 359, 362, 363, 366, 367, 369, 394, 523, 807, 813, 831, 832, 833, 845, 847, 874, 880, 907, 910, 911, 914, 915, 917, 944, 947, 948, 951, 952, 954, 981, 1100, 1255, 1260, 1270, 1272, 1290, 1305, 1306, 1308], "color": [222, 223, 224, 226, 227, 246, 248, 289, 290, 291, 293, 294, 322, 323, 324, 329, 331, 359, 360, 361, 368, 394, 807, 808, 809, 811, 812, 831, 833, 874, 875, 876, 878, 879, 907, 908, 909, 914, 916, 944, 945, 946, 953, 981, 1272, 1273, 1274, 1282, 1283, 1290, 1292, 1293], "linestyl": [222, 226, 227, 246, 289, 293, 294, 322, 331, 359, 368, 807, 811, 812, 831, 874, 878, 879, 907, 916, 944, 953, 1272, 1273, 1283], "symbol": [223, 224, 290, 291, 323, 324, 327, 360, 361, 364, 808, 809, 875, 876, 908, 909, 912, 945, 946, 949], "text_color": [223, 224, 290, 291, 323, 324, 360, 361, 808, 809, 875, 876, 908, 909, 945, 946], "text": [223, 224, 290, 291, 323, 324, 327, 360, 361, 364, 808, 809, 875, 876, 908, 909, 912, 945, 946, 949, 1125, 1255, 1271, 1280, 1300], "just": [223, 224, 290, 291, 323, 324, 360, 361, 384, 808, 809, 875, 876, 908, 909, 945, 946, 971, 1255, 1271, 1274, 1298, 1304, 1306, 1308], "marker": [223, 224, 228, 246, 262, 290, 291, 295, 323, 324, 332, 360, 361, 369, 808, 809, 813, 831, 847, 875, 876, 880, 908, 909, 917, 945, 946, 954], "title_datetime_format": [225, 229, 292, 296, 328, 333, 365, 370, 810, 814, 877, 881, 913, 918, 950, 955], "title_use_sweep_tim": [225, 229, 292, 296, 328, 333, 365, 370, 810, 814, 877, 881, 913, 918, 950, 955], "range_ring_location_km": [226, 293, 330, 367, 811, 878, 915, 952], "lw": [226, 227, 293, 294, 331, 368, 811, 812, 878, 879, 916, 953], "ring": [226, 227, 293, 294, 330, 331, 367, 368, 811, 812, 878, 879, 915, 916, 952, 953, 1267, 1279], "range_r": [227, 294, 331, 368, 812, 879, 916, 953], "seri": [227, 294, 331, 368, 493, 812, 879, 916, 953, 1070], "draw": [227, 247, 248, 260, 294, 329, 331, 366, 368, 812, 832, 833, 845, 879, 914, 916, 951, 953], "format_str": [228, 295, 332, 369, 813, 880, 917, 954], "ray_min": [228, 295, 332, 369, 813, 880, 917, 954], "ray_max": [228, 295, 332, 369, 813, 880, 917, 954], "style": [228, 246, 262, 295, 325, 326, 330, 332, 362, 363, 367, 369, 394, 813, 831, 847, 880, 910, 911, 915, 917, 947, 948, 952, 954, 981, 1255], "consider": [229, 296, 333, 370, 523, 814, 881, 918, 955, 1100, 1292], "ignoretilt": [230, 815], "run": [230, 497, 537, 815, 1074, 1114, 1255, 1266, 1292, 1296, 1305, 1306, 1308], "antenna_to_cartesian_track_rel": [230, 815], "slant": [230, 492, 815, 1069], "ncar": [230, 815], "soloii": [230, 815], "softwar": [230, 387, 394, 580, 815, 974, 981, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306], "time_axis_flag": [231, 297, 334, 371, 816, 882, 919, 956], "date_time_form": [231, 297, 334, 371, 816, 882, 919, 956], "tz": [231, 297, 334, 371, 816, 882, 919, 956], "zone": [231, 297, 334, 371, 816, 882, 919, 956], "info": [231, 297, 329, 334, 366, 371, 513, 816, 882, 914, 919, 951, 956, 1090, 1255, 1293, 1304], "ref_point": [232, 298, 335, 372, 817, 883, 920, 957], "1000": [232, 298, 335, 372, 527, 817, 883, 920, 957, 1104, 1206, 1268, 1276, 1282, 1283, 1302, 1306], "vert_r": [232, 298, 335, 372, 817, 883, 920, 957], "alt_max": [232, 298, 335, 372, 817, 883, 920, 957], "dem_field": [232, 298, 335, 372, 817, 883, 920, 957], "terrain_altitud": [232, 298, 335, 372, 817, 883, 920, 957], "arbitrari": [232, 298, 335, 372, 523, 817, 883, 920, 957, 1100], "trajectori": [232, 298, 335, 372, 817, 883, 920, 957], "45": [232, 298, 335, 372, 510, 817, 883, 920, 957, 1087, 1274, 1283, 1292, 1306], "47": [232, 298, 335, 372, 527, 817, 883, 920, 957, 1104, 1255], "3db": [232, 298, 335, 372, 513, 817, 883, 920, 957, 1090], "ist": [232, 298, 335, 372, 817, 883, 920, 957], "aspect_ratio": [233, 299, 336, 373, 818, 884, 921, 958], "aspect": [233, 299, 336, 373, 513, 818, 884, 921, 958, 1090, 1271], "xlim": [234, 300, 337, 374, 819, 885, 922, 959, 1276, 1278, 1282, 1283, 1302], "ylim": [234, 300, 337, 374, 819, 885, 922, 959, 1276, 1278, 1280, 1281, 1282, 1283, 1285, 1287], "cartopi": [235, 236, 237, 238, 247, 248, 249, 301, 329, 820, 821, 822, 823, 832, 833, 834, 886, 914, 1255, 1260, 1262, 1263, 1266, 1270, 1272, 1273, 1286, 1290, 1292, 1296, 1299, 1300, 1302, 1303, 1305, 1306, 1308], "coastlin": [236, 247, 248, 329, 366, 821, 832, 833, 914, 951], "polit": [237, 822], "state": [238, 524, 823, 1101, 1255], "grid_name_field_level_tim": [239, 255, 824, 840], "latitudin": [241, 251, 265, 826, 836, 850], "plot_longitudinal_level": [244, 252, 266, 829, 837, 851], "tuppl": [244, 457, 463, 482, 829, 1034, 1040, 1059], "ind_1": [245, 830], "ind_2": [245, 830], "basemap": [245, 251, 253, 254, 259, 260, 263, 265, 267, 338, 362, 363, 364, 366, 367, 830, 836, 838, 839, 844, 845, 848, 850, 852, 923, 947, 948, 949, 951, 952, 1255, 1296, 1305], "upper": [245, 247, 248, 249, 251, 253, 263, 265, 267, 445, 830, 832, 833, 834, 836, 838, 848, 850, 852, 1206, 1272], "colormesh": [245, 247, 248, 249, 251, 253, 263, 265, 267, 830, 832, 833, 834, 836, 838, 848, 850, 852], "64": [245, 247, 248, 249, 251, 253, 263, 265, 267, 830, 832, 833, 834, 836, 838, 848, 850, 852, 1271, 1276, 1277, 1278, 1282, 1284, 1286, 1287, 1290, 1303, 1305], "linewidth": [246, 248, 262, 831, 833, 847, 1273, 1282, 1283], "crosshair": [246, 262, 831, 847], "lat_lin": [247, 248, 260, 329, 366, 832, 833, 845, 914, 951, 1266, 1279, 1290], "lon_lin": [247, 248, 260, 329, 366, 832, 833, 845, 914, 951, 1266, 1279, 1290], "embellish": [247, 248, 329, 832, 833, 914, 1273], "add_grid_lin": [247, 329, 832, 914], "imshow": [247, 832, 1255, 1267, 1268, 1271], "reason": [247, 260, 832, 845], "america": [247, 248, 260, 329, 366, 832, 833, 845, 914, 951], "cr": [247, 248, 301, 329, 457, 520, 832, 833, 886, 914, 1034, 1097, 1262, 1263, 1266, 1272, 1273, 1279, 1286, 1290, 1292, 1293, 1299, 1300, 1303], "subsequ": [247, 248, 329, 832, 833, 914], "geoax": [247, 248, 329, 832, 833, 914, 1299, 1302], "platecarre": [247, 248, 329, 832, 833, 914, 1262, 1266, 1272, 1273, 1286, 1290, 1292, 1300, 1303], "drawinf": [247, 248, 832, 833], "shapefil": [247, 248, 329, 366, 832, 833, 914, 951], "certain": [247, 248, 329, 519, 832, 833, 914, 961, 1096, 1230, 1255, 1292, 1303], "contour_valu": [248, 833], "maps_list": [248, 833], "countri": [248, 833], "110m": [248, 329, 833, 914], "background_zoom": [248, 833], "contour": [248, 833, 1255, 1260, 1270], "reson": [248, 329, 366, 833, 914, 951], "sequenc": [248, 833], "colour": [248, 833], "embelish": [248, 366, 833, 951, 1255], "10m": [248, 329, 833, 914, 1263, 1279], "50m": [248, 329, 833, 914, 1300, 1303], "naturalearthfeatur": [248, 329, 833, 914], "zoom": [248, 833], "background": [248, 366, 497, 532, 833, 951, 960, 1074, 1109, 1279, 1286, 1292], "cost": [248, 523, 833, 1100, 1255], "alpha": [249, 329, 366, 457, 501, 502, 503, 504, 505, 506, 725, 734, 834, 914, 951, 1034, 1078, 1079, 1080, 1081, 1082, 1083, 1273, 1282], "transpar": [249, 376, 834, 963, 1255, 1282], "overplot": [249, 329, 366, 834, 914, 951], "plot_latitudinal_level": [250, 264, 835, 849], "y_index": [251, 265, 836, 850], "x_index": [253, 267, 838, 852], "veric": [256, 841], "area_thresh": [260, 366, 845, 951], "auto_rang": [260, 845], "min_lon": [260, 329, 366, 845, 914, 951, 1266, 1279, 1303], "max_lon": [260, 329, 366, 845, 914, 951, 1266, 1279, 1303], "86": [260, 845], "min_lat": [260, 329, 366, 845, 914, 951, 1266, 1279, 1303], "max_lat": [260, 329, 366, 845, 914, 951, 1266, 1279, 1303], "44": [260, 446, 497, 845, 1022, 1074, 1292, 1305], "databas": [260, 366, 845, 951], "merc": [260, 366, 845, 951], "line_styl": [262, 325, 326, 330, 362, 363, 367, 847, 910, 911, 915, 947, 948, 952, 1279], "plot_rhi": [284, 317, 354, 869, 902, 939], "plot_vpt": [284, 317, 354, 869, 902, 939], "grid_project": [301, 442, 443, 886, 1018, 1019], "progress": [301, 338, 513, 886, 923, 1090], "some": [301, 338, 433, 525, 527, 886, 923, 993, 1004, 1020, 1102, 1104, 1125, 1255, 1263, 1271, 1272, 1290, 1292, 1296, 1300, 1302, 1305], "correctli": [301, 338, 886, 923, 1255], "report": [301, 338, 389, 536, 537, 538, 886, 923, 976, 1113, 1255, 1296, 1306], "github": [301, 338, 886, 923, 1255, 1283, 1296, 1305, 1308], "tracker": [301, 338, 886, 923, 1296, 1306], "azimuthalequidist": [301, 886], "line_lon": [325, 362, 910, 947], "line_lat": [325, 362, 910, 947], "compat": [325, 326, 327, 330, 362, 363, 364, 367, 391, 910, 911, 912, 915, 947, 948, 949, 952, 978, 1255, 1308], "line_x": [326, 363, 911, 948], "line_i": [326, 363, 911, 948], "ro": [327, 364, 912, 949], "label_text": [327, 364, 912, 949], "label_offset": [327, 364, 912, 949], "shapefile_kwarg": [329, 914], "edgecolor": [329, 914, 1282], "face": [329, 914], "lambertconform": [329, 914, 1263, 1279, 1299], "domain": [329, 366, 452, 513, 914, 951, 1029, 1090, 1266], "neither": [329, 366, 397, 914, 951, 985], "extend": [329, 366, 390, 411, 914, 951, 977, 1221], "word": [329, 914], "tranpar": [329, 366, 914, 951], "pixel": [329, 518, 519, 527, 914, 1095, 1096, 1104], "lcc": [366, 951], "cylindr": [366, 951], "mill": [366, 951], "exhibit": [366, 951], "distort": [366, 951], "aea": [366, 951], "laea": [366, 951], "conform": [366, 951, 1296, 1298], "tmerc": [366, 951], "aeqd": [366, 951], "cass": [366, 951], "even": [366, 525, 951, 1102, 1282, 1296, 1302, 1308], "cyl": [366, 951, 1255], "cannot": [366, 377, 951, 964], "lake": [366, 951], "esri": [366, 951], "untest": [366, 951], "dtobj": [375, 962], "storage_opt": [376, 386, 388, 963, 973, 975], "anon": [376, 386, 388, 963, 973, 975], "open": [376, 386, 388, 963, 973, 975, 1125, 1255, 1276, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306, 1308], "decompress": [376, 963, 1255], "bzip2": [376, 963, 1255], "backend": [376, 386, 963, 973], "googl": [376, 386, 963, 973, 1255, 1306], "cloud": [376, 386, 523, 963, 973, 1100, 1260, 1261, 1306, 1308], "storag": [376, 386, 963, 973, 1186], "amazon": [376, 386, 963, 973, 1262, 1263], "servic": [376, 386, 963, 973, 1262, 1263, 1271], "s3": [376, 386, 963, 973, 1262, 1263, 1274, 1292], "file_lik": [376, 963], "use_rsl": [377, 964], "read_": [377, 964], "trmm": [377, 390, 964, 977, 1255, 1296, 1305], "choos": [377, 964, 1260, 1270, 1292, 1308], "typeerror": [377, 404, 964, 1255], "launch_datetim": [378, 965], "radiosond": [378, 965], "launch": [378, 965], "record": [378, 965, 1304], "target_datetim": [379, 966], "profile_datetim": [379, 966], "cfradial2": [381, 968], "use_file_field_attribut": [382, 969], "csu": [382, 969, 1255], "chill": [382, 969], "chl": [382, 969, 1255], "field_file_nam": [382, 969], "long_nam": [382, 969, 1292, 1299, 1304], "write_grid": [383, 970], "zlib": [384, 385, 971, 972], "read_mdv": [384, 971, 1258, 1267, 1278, 1282, 1283, 1284], "fulli": [384, 538, 971, 1305], "interchang": [384, 971], "vlevel": [384, 971], "proj_polar_radar": [384, 971], "proj_rhi_radar": [384, 971], "13": [384, 466, 471, 485, 971, 1043, 1048, 1062, 1219, 1285, 1303, 1304], "vlevel_typ": [384, 971], "vert_type_z": [384, 971], "vert_type_elev": [384, 971], "vert_type_az": [384, 971], "17": [384, 971, 1280, 1285], "vert_type_pressur": [384, 971], "vert_type_theta": [384, 971], "unknown": [384, 971, 1255], "most": [384, 961, 971, 1255, 1271, 1300, 1302, 1308], "station": [386, 387, 973, 974, 1263], "linear_interp": [386, 973], "nexrad": [386, 387, 388, 389, 973, 974, 975, 976, 1255, 1260, 1261, 1270, 1274, 1292, 1296, 1304], "archiv": [386, 973, 1275, 1296], "host": [386, 388, 973, 975], "noaa": [386, 388, 390, 973, 975, 977, 1262, 1263, 1274, 1292], "nation": [386, 388, 973, 975, 1262, 1271], "climat": [386, 388, 973, 975, 1255, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "ucar": [386, 387, 973, 974], "thredd": [386, 387, 393, 973, 974, 980], "server": [386, 387, 973, 974], "letter": [386, 387, 389, 973, 974, 976], "icao": [386, 387, 973, 974, 1255], "older": [386, 387, 973, 974, 1255, 1260, 1261, 1296, 1306], "mix": [386, 973, 1230, 1274, 1292], "nearest": [386, 443, 462, 470, 471, 479, 492, 495, 512, 973, 1019, 1039, 1047, 1048, 1056, 1069, 1072, 1089, 1206, 1212, 1213, 1247, 1255, 1302], "fsspec": [386, 388, 973, 975, 1255], "cut": [386, 387, 388, 519, 973, 974, 975, 1096, 1249, 1250], "ncdc": [386, 388, 973, 975], "gov": [386, 388, 973, 975, 1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1282, 1283, 1284, 1285, 1287, 1290, 1291], "edu": [386, 387, 518, 973, 974, 1095, 1274, 1292], "catalog": [386, 387, 973, 974], "html": [386, 387, 518, 973, 974, 1095, 1255, 1296, 1305, 1306], "common": [387, 974, 1255, 1296, 1305], "cdm": [387, 393, 974, 980], "url": [387, 974], "java": [387, 393, 974, 980], "tool": [387, 393, 974, 980, 1296, 1305, 1306], "opendap": [387, 974], "accept": [387, 457, 462, 470, 479, 492, 500, 524, 525, 974, 1034, 1039, 1047, 1056, 1069, 1077, 1101, 1102, 1255, 1306], "compil": [387, 524, 974, 1101, 1255, 1296, 1305], "unidata": [387, 974, 1262], "htm": [387, 974], "nw": [388, 975], "wsr": [388, 527, 975, 1104], "88d": [388, 527, 975, 1104], "iii": [388, 975], "distribut": [388, 497, 531, 533, 535, 975, 1074, 1108, 1110, 1112, 1200, 1201, 1202, 1203, 1233, 1234, 1255, 1292, 1296, 1306], "roc": [388, 975], "wsr88d": [388, 389, 975, 976], "level_iii": [388, 975], "level3info": [388, 975], "asp": [388, 975], "radar_format": [389, 976], "callid": [389, 976], "skip_range_check": [389, 976], "rsl_radar": [389, 976], "id": [389, 394, 976, 981, 1255], "verifi": [389, 976, 1235, 1253], "ioerror": [389, 976], "time_ord": [390, 977, 1255], "full_xhdr": [390, 977], "noaa_hh_hdr": [390, 977], "ignore_xhdr": [390, 977], "ignore_sweep_start_m": [390, 977], "sigmet": [390, 977, 1255, 1296], "iri": [390, 977, 1255, 1296, 1305], "sequenti": [390, 977, 1020, 1271], "re": [390, 977], "manner": [390, 977], "determind": [390, 977], "maintain": [390, 977, 1255], "reverse_and_rol": [390, 977], "strictli": [390, 977], "increas": [390, 443, 499, 513, 523, 526, 977, 1019, 1076, 1090, 1100, 1103, 1271, 1302, 1306], "becom": [390, 977, 1292, 1299, 1302], "thisopt": [390, 977], "strict": [390, 977], "header": [390, 567, 568, 977, 1255], "decod": [390, 977, 1255], "hurrican": [390, 977, 1292], "hunter": [390, 977], "millisecond": [390, 977], "precis": [390, 977], "explic": [390, 977], "read_rsl": [390, 977, 1305], "error": [390, 394, 524, 525, 977, 981, 1101, 1102, 1210, 1238, 1239, 1255, 1305], "uf": [391, 396, 978, 983, 1255, 1296], "implement": [391, 397, 400, 402, 411, 421, 442, 518, 529, 978, 985, 998, 1018, 1095, 1106, 1255, 1257], "write_proj_coord_si": [393, 980], "proj_coord_si": [393, 980], "write_point_x_y_z": [393, 980], "write_point_lon_lat_alt": [393, 980], "projectioncoordinatesystem": [393, 980], "toolsui": [393, 980], "appropri": [393, 980], "understood": [393, 980], "rgb": [394, 981], "viridi": [394, 981, 1292], "color_level": [394, 981], "warp": [394, 981], "sld": [394, 981], "use_doublequot": [394, 981], "geotiff": [394, 981, 1255, 1296], "sphere": [394, 981, 1222, 1248], "latter": [394, 981], "usabl": [394, 981], "former": [394, 981], "gi": [394, 981], "while": [394, 981, 1300, 1308], "show": [394, 981, 1255, 1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1292, 1298, 1300, 1302, 1303, 1304, 1306], "lack": [394, 436, 981, 996, 1006], "gdal": [394, 981, 1255, 1296], "via": [394, 981], "conda": [394, 981, 1255, 1296, 1305, 1306, 1308], "rbg": [394, 981], "column": [394, 981, 1223, 1224, 1255, 1260, 1289], "categor": [394, 981, 1293], "gdalwarp": [394, 981], "command": [394, 981, 1255, 1296, 1299, 1306, 1308], "descriptor": [394, 981], "tiff": [394, 981], "don": [394, 981, 1255, 1266], "quot": [394, 981], "help": [394, 981, 1114, 1266, 1271, 1292, 1306, 1308], "translat": [394, 981], "sr": [394, 981], "mdv_field_nam": [395, 982, 1255], "field_write_ord": [395, 396, 982, 983], "sentinel": [395, 396, 982, 983], "writabl": [395, 982], "satisfi": [395, 982], "xy": [395, 443, 982, 1019], "irregular": [395, 982], "exce": [395, 982, 1292], "122": [395, 982, 1262, 1266, 1272, 1291], "uncompress": [395, 982], "sai": [395, 982, 1306], "uf_field_nam": [396, 983], "radar_field_nam": [396, 983], "volume_start": [396, 983], "templates_extra": [396, 983], "radar_beam_width_h": [396, 983], "radar_beam_width_v": [396, 983], "radar_receiver_bandwidth": [396, 983], "prt": [396, 983], "polarization_mod": [396, 983], "round": [396, 983, 1255], "_uf_scale_factor": [396, 983], "charact": [396, 983], "advanc": [396, 983], "usag": [396, 983], "templat": [396, 983, 1255, 1306], "mandatory_head": [396, 983], "optional_head": [396, 983], "field_head": [396, 983], "lazi": [397, 401, 407, 412, 414, 427, 434, 984, 985, 987, 994, 1255], "set_lazi": [397, 985], "callabl": [397, 434, 985, 994], "cach": [397, 425, 985], "tradit": [397, 401, 412, 414, 985], "supplement": [397, 985], "syntax": [397, 985, 1255], "prevent": [397, 443, 985, 1019, 1255, 1306], "comparison": [397, 457, 529, 985, 1034, 1106, 1255, 1266], "__cmp__": [397, 985], "__ge__": [397, 985], "__gt__": [397, 985], "__le__": [397, 985], "__lt__": [397, 985], "__ne__": [397, 985], "nor": [397, 985], "viewitem": [397, 985], "viewkei": [397, 985], "viewvalu": [397, 985], "fromkei": [397, 985], "tradition": [397, 422, 985], "referenc": [397, 985], "lazyloaddictionari": [397, 985], "henc": [397, 985], "key1": [397, 985], "value1": [397, 985], "key2": [397, 985], "value2": [397, 985], "lazy_func": [397, 985], "lambda": [397, 985], "lazykey1": [397, 985], "pep": [398, 1306], "585": [398, 1255], "__origin__": 398, "__args__": 398, "delattr": 400, "dir": [402, 1125], "format_spec": 404, "formatt": 404, "getattr": 406, "helper": [408, 418, 419, 1271], "pickl": [408, 418, 419, 1255], "subclass": 411, "noth": 411, "overridden": 411, "protocol": 419, "repr": 420, "setattr": 421, "memori": [423, 443, 529, 1019, 1106], "abstract": 425, "overrid": [425, 1283], "issubclass": 425, "invok": 425, "earli": 425, "abc": 425, "abcmeta": 425, "__subclasscheck__": 425, "notimpl": 425, "outcom": 425, "item": [426, 436, 986, 996, 999, 1006, 1255], "els": [428, 429, 988, 989, 1000], "value_cal": [434, 994], "zg": [438, 439, 440, 1013, 1014, 1015], "yg": [438, 439, 440, 1013, 1014, 1015], "xg": [438, 439, 440, 1013, 1014, 1015], "roi": [438, 439, 440, 443, 1013, 1014, 1015, 1019, 1255], "influenc": [438, 441, 442, 443, 513, 1013, 1017, 1018, 1019, 1090, 1302], "grow": [439, 440, 442, 443, 1014, 1015, 1018, 1019, 1306], "virtual": [440, 442, 443, 1015, 1018, 1019], "grid_shap": [441, 442, 443, 1017, 1018, 1019, 1187, 1267, 1268, 1272, 1292, 1302], "grid_limit": [441, 442, 443, 1017, 1018, 1019, 1187, 1267, 1268, 1272, 1292, 1302], "gridding_algo": [441, 1017], "map_gates_to_grid": [441, 1017, 1255], "map_to_grid": [441, 442, 1017, 1018, 1255], "significantli": [441, 443, 1017, 1019], "faster": [441, 443, 1017, 1019, 1255], "barn": [441, 443, 1017, 1019, 1255, 1302], "1964": [441, 1017], "techniqu": [441, 510, 1017, 1087], "maxim": [441, 1017, 1020], "numer": [441, 1017, 1255], "meteorologi": [441, 452, 466, 471, 485, 523, 536, 1017, 1025, 1029, 1043, 1048, 1062, 1100, 1113, 1219], "climatologi": [441, 536, 1017, 1113], "396": [441, 1017], "409": [441, 1017, 1255], "cressman": [441, 443, 1017, 1019, 1302], "1959": [441, 1017], "monthli": [441, 1017], "review": [441, 1017, 1255], "367": [441, 1017], "374": [441, 1017, 1255], "paulei": [441, 1017, 1302], "1990": [441, 1017, 1302], "discret": [441, 513, 1017, 1090], "respons": [441, 1017], "118": [441, 1017], "1145": [441, 1017, 1255], "1164": [441, 1017, 1255], "grid_origin": [442, 443, 1018, 1019, 1268, 1272], "grid_origin_alt": [442, 443, 1018, 1019], "map_roi": [442, 443, 1018, 1019], "weighting_funct": [442, 443, 1018, 1019, 1302], "barnes2": [442, 443, 1018, 1019, 1255], "toa": [442, 443, 447, 526, 1018, 1019, 1023, 1103], "17000": [442, 443, 1018, 1019, 1302], "roi_func": [442, 443, 1018, 1019, 1255, 1302], "dist_beam": [442, 443, 1018, 1019, 1302], "constant_roi": [442, 443, 1018, 1019, 1255], "z_factor": [442, 443, 1018, 1019], "xy_factor": [442, 443, 1018, 1019], "02": [442, 443, 499, 1018, 1019, 1076, 1274, 1288, 1292, 1295], "min_radiu": [442, 443, 1018, 1019, 1255, 1302], "h_factor": [442, 443, 1018, 1019], "nb": [442, 443, 1018, 1019], "bsp": [442, 443, 1018, 1019], "linearli": [442, 1018], "roifunct": [442, 1018], "dist": [442, 443, 1018, 1019, 1233, 1234], "get_roi": [442, 1018], "cython": [442, 1018, 1255], "grid_siz": [442, 443, 1018, 1019], "grid_from_radar": [442, 443, 1018, 1019, 1267, 1268, 1272, 1292, 1302], "copy_field_data": [443, 1019], "kd_tree": [443, 1019], "leafsiz": [443, 1019], "nearbi": [443, 1019, 1268], "coodin": [443, 1019], "azimut": [443, 1019], "similarili": [443, 1019], "example_roi_func_const": [443, 1019], "example_roi_func_dist": [443, 1019], "example_roi_func_dist_beam": [443, 1019], "foreach": [443, 1019], "metet": [443, 1019], "dist_mean": [443, 1019], "preserv": [443, 1019, 1300], "slower": [443, 513, 523, 1019, 1090, 1100], "leaf": [443, 1019], "lookup": [443, 1019], "tree": [443, 1009, 1019], "affect": [443, 499, 517, 1019, 1076, 1094], "optim": [443, 521, 522, 523, 1019, 1098, 1099, 1100, 1255], "natur": [443, 1019], "mx": 444, "mn": 444, "relh_slop": [444, 457, 533, 1034, 1110], "005": 444, "destandard": 444, "h_iso0": [444, 457, 520, 1034, 1097], "slope": [444, 457, 513, 524, 533, 1034, 1090, 1101, 1110], "sigmoid": [444, 457, 533, 1034, 1110], "field_std": 444, "hlowerleft": 445, "hupperright": 445, "matrix": [445, 457, 524, 725, 734, 1034, 1101, 1255], "freq": [446, 473, 474, 494, 514, 515, 1022, 1050, 1051, 1071, 1091, 1092], "rng": [446, 517, 1022, 1094, 1205, 1206, 1221], "empir": [446, 1022], "satur": [446, 1022], "latm": [446, 1022], "floor": [447, 1023], "nyq": [448, 1024, 1300], "check_nyq_uniform": [448, 1024], "deriv": [448, 523, 525, 1024, 1100, 1102], "try": [448, 523, 529, 1024, 1100, 1106, 1302, 1303], "vel_dict": [448, 449, 450, 1024, 1026, 1027], "entri": [448, 1024, 1304], "sdbz_field": [449, 451, 458, 460, 475, 1026, 1028, 1035, 1037, 1052], "spectral": [449, 451, 458, 460, 468, 475, 477, 483, 484, 485, 486, 487, 488, 489, 569, 1026, 1028, 1035, 1037, 1045, 1052, 1054, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1219, 1255], "signal_field": [450, 452, 465, 466, 476, 485, 486, 487, 488, 490, 491, 496, 1027, 1029, 1042, 1043, 1053, 1062, 1063, 1064, 1065, 1067, 1068, 1073], "negative_awai": [450, 469, 1027, 1046], "negative_toward": [450, 469, 1027, 1046], "width_dict": [451, 452, 1028, 1029], "subtract_nois": [452, 461, 468, 469, 476, 477, 478, 484, 487, 488, 489, 1029, 1038, 1045, 1046, 1053, 1054, 1055, 1061, 1064, 1065, 1066], "noise_field": [452, 467, 471, 472, 476, 481, 487, 488, 1029, 1044, 1048, 1049, 1053, 1058, 1064, 1065], "lag": [452, 461, 469, 478, 490, 491, 1029, 1038, 1046, 1055, 1067, 1068], "denomin": [452, 1029], "varianc": [452, 1029, 1219, 1220, 1225, 1236, 1237], "srivastava": [452, 1029], "jameson": [452, 1029], "februari": [452, 1029], "1979": [452, 1029], "rhohv_snow": [453, 529, 1030, 1106], "rhohv_rain": [453, 529, 1030, 1106], "rhohv_ml": [453, 529, 1030, 1106], "93": [453, 473, 494, 513, 529, 1030, 1050, 1071, 1090, 1106], "zh_snow": [453, 529, 1030, 1106], "zh_rain": [453, 529, 1030, 1106], "zh_ml": [453, 529, 1030, 1106], "27": [453, 529, 1030, 1106], "zv_snow": [453, 529, 1030, 1106], "zv_rain": [453, 529, 1030, 1106], "zv_ml": [453, 529, 1030, 1106], "26": [453, 462, 529, 1030, 1039, 1106], "beam_factor": [453, 529, 1030, 1106], "npts_diagram": [453, 529, 1030, 1106], "81": [453, 529, 1030, 1106, 1304], "rng_bottom_max": [453, 529, 1030, 1106], "200000": [453, 529, 1030, 1106, 1279, 1292], "theoretical_cross_correlation_ratio": [453, 1030], "diagram": [453, 1030], "rhohv_theo_dict": [453, 1030], "sigma_bird": [454, 1031], "vol_refl_field": [454, 494, 1031, 1071], "bird_density_field": [454, 1031], "densiti": [454, 533, 1031, 1110, 1293], "volumetr": [454, 494, 1031, 1071], "bird_density_dict": [454, 1031], "filt_field": [455, 1032], "unfilt_field": [455, 1032], "ccor_field": [455, 1032], "ccor": [455, 1032], "unfilt": [455, 1032], "ccor_dict": [455, 1032], "cdr_field": [456, 1033], "circular": [456, 1033, 1233, 1234, 1255, 1292], "depolar": [456, 1033], "cdr": [456, 1033], "features_matrix": [457, 1034], "var_nam": [457, 500, 520, 533, 1034, 1077, 1097, 1110], "hydro_nam": [457, 500, 520, 533, 1034, 1077, 1097, 1110], "ag": [457, 520, 529, 1034, 1097, 1106, 1293], "lr": [457, 520, 1034, 1097, 1293], "rp": [457, 520, 1034, 1097, 1293], "rn": [457, 520, 1034, 1097, 1293], "mh": [457, 520, 1034, 1097, 1293], "ih": [457, 520, 1034, 1097, 1293], "hdg": [457, 520, 1034, 1097, 1293], "nsamples_it": [457, 1034], "20000": [457, 498, 499, 531, 1034, 1075, 1076, 1108, 1279, 1302], "external_iter": [457, 1034], "internal_iter": [457, 1034], "cv_approach": [457, 1034], "num_samples_arr": [457, 1034], "n_samples_syn": [457, 1034], "nmedoids_min": [457, 500, 1034, 1077], "acceptance_threshold": [457, 500, 1034, 1077], "001": [457, 533, 1034, 1110, 1227, 1282], "parallel": [457, 523, 524, 525, 1034, 1100, 1101, 1102], "sample_data": [457, 1034], "kmax_it": [457, 500, 1034, 1077], "nsamples_smal": [457, 1034], "40000": [457, 1034, 1268, 1272, 1279, 1302], "sampling_size_clara": [457, 1034], "niter_clara": [457, 1034], "keep_labeled_data": [457, 1034], "use_median": [457, 500, 1034, 1077], "allow_label_dupl": [457, 1034], "centroid": [457, 498, 520, 531, 1034, 1075, 1097, 1108], "nsampl": [457, 531, 533, 1034, 1108, 1110], "nvariabl": [457, 520, 1034, 1097], "extern": [457, 1034], "loop": [457, 1034, 1255, 1294], "medoid": [457, 500, 1034, 1077], "inter": [457, 500, 1034, 1077], "dispers": [457, 500, 1034, 1077], "cluster": [457, 520, 1034, 1097], "critic": [457, 1034], "approach": [457, 513, 520, 527, 529, 1034, 1090, 1097, 1104, 1106], "reject": [457, 1034], "intermedi": [457, 500, 1034, 1077], "kmedoid": [457, 500, 1034, 1077], "clara": [457, 1034], "exceed": [457, 510, 1034, 1087], "kept": [457, 499, 1034, 1076], "labeled_data": [457, 1034], "medoids_dict": [457, 500, 1034, 1077], "final_medoids_dict": [457, 500, 1034, 1077], "sphidp_field": [458, 1035], "phase_offset": [459, 469, 1036, 1046], "signal_h_field": [459, 461, 468, 469, 477, 478, 483, 484, 489, 1036, 1038, 1045, 1046, 1054, 1055, 1060, 1061, 1066], "signal_v_field": [459, 461, 468, 469, 477, 478, 483, 484, 489, 1036, 1038, 1045, 1046, 1054, 1055, 1060, 1061, 1066], "sdbzv_field": [460, 1037], "zdr_dict": [460, 461, 1037, 1038], "noise_h_field": [461, 468, 469, 477, 478, 484, 489, 1038, 1045, 1046, 1054, 1055, 1061, 1066], "noise_v_field": [461, 468, 469, 477, 478, 484, 489, 1038, 1045, 1046, 1054, 1055, 1061, 1066], "ref_tim": [462, 470, 479, 492, 493, 495, 1039, 1047, 1056, 1069, 1070, 1072], "latlon_tol": [462, 492, 495, 1039, 1069, 1072, 1205, 1232], "0005": [462, 492, 495, 1039, 1069, 1072], "delta_rng": [462, 492, 1039, 1069, 1221], "delta_azi": [462, 492, 1039, 1069, 1207, 1221], "hmax": [462, 470, 479, 492, 495, 1039, 1047, 1056, 1069, 1072, 1232], "hre": [462, 470, 479, 492, 495, 527, 1039, 1047, 1056, 1069, 1072, 1104], "250": [462, 492, 499, 1039, 1069, 1076, 1304], "avg_typ": [462, 470, 479, 492, 1039, 1047, 1056, 1069, 1207, 1209], "interp_kind": [462, 470, 479, 492, 495, 1039, 1047, 1056, 1069, 1072, 1247], "qvp": [462, 470, 479, 492, 495, 530, 1039, 1047, 1056, 1069, 1072, 1107, 1255], "enhanc": [462, 1039, 1308], "interest": [462, 492, 495, 1039, 1069, 1072, 1266, 1292], "central": [462, 492, 1039, 1069, 1221], "evp": [462, 492, 1039, 1069], "regardless": [462, 470, 479, 492, 495, 510, 1039, 1047, 1056, 1069, 1072, 1087], "elimin": [462, 470, 479, 492, 495, 1039, 1047, 1056, 1069, 1072, 1300, 1302], "kaltenboeck": [462, 1039], "2016": [462, 470, 499, 520, 1039, 1047, 1076, 1097, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "storm": [462, 532, 1039, 1109, 1191, 1193, 1274, 1292, 1302], "methodologi": [462, 536, 1039, 1113, 1300], "meteorologisch": [462, 1039], "zeitschrift": [462, 1039], "207": [462, 1039], "222": [462, 1039, 1258, 1275], "fields_in_list": [463, 482, 1040, 1059], "fields_out_list": [463, 482, 1040, 1059], "fourier": [463, 482, 1040, 1059], "ones": [463, 482, 1040, 1059, 1271], "get_window": [463, 482, 1040, 1059], "ifft": [463, 1040], "l_field": [464, 1041], "logarithm": [464, 1041], "ll": [464, 1041], "log10": [464, 1041, 1266], "mph_dict": [465, 1042], "navg": [466, 485, 1043, 1062, 1219], "nnoise_min": [466, 485, 1043, 1062, 1219], "dbadu_to_dbm_hh": [466, 485, 487, 488, 1043, 1062, 1064, 1065], "dbadu_to_dbm_vv": [466, 485, 487, 488, 1043, 1062, 1064, 1065], "sehkon": [466, 485, 1043, 1062, 1219], "1974": [466, 471, 485, 1043, 1048, 1062, 1219], "noise_dict": [466, 471, 472, 485, 1043, 1048, 1049, 1062], "808": [466, 471, 485, 1043, 1048, 1062, 1219], "811": [466, 471, 485, 1043, 1048, 1062, 1219, 1255], "noisedbz_v": [467, 1044], "ref_dist": [467, 1044], "noisedbz": [467, 1044], "fields_list": [468, 469, 1045, 1046], "use_pwr": [468, 1045], "smooth_window": [468, 484, 487, 488, 1045, 1061, 1064, 1065], "srhohv_field": [468, 477, 483, 1045, 1054, 1060], "pwr_h_field": [468, 477, 484, 1045, 1054, 1061], "pwr_v_field": [468, 477, 484, 1045, 1054, 1061], "quasi": [470, 479, 530, 1047, 1056, 1107], "zhang": [470, 492, 501, 530, 1047, 1069, 1078, 1107], "reev": [470, 530, 1047, 1107], "kumjian": [470, 479, 530, 1047, 1056, 1107], "tschallen": [470, 530, 1047, 1107], "tr\u00f6mel": [470, 1047], "simmer": [470, 501, 530, 1047, 1078, 1107], "jtech": [470, 492, 1047, 1069], "33": [470, 1047, 1304], "551": [470, 1047], "562": [470, 1047, 1255], "pwr_field": [471, 472, 480, 488, 1048, 1049, 1057, 1065], "get_noise_po": [471, 472, 1048, 1049, 1220], "noisi": [471, 472, 1048, 1049], "noise_pos_dict": [471, 472, 1048, 1049], "reserv": [471, 1048, 1205, 1206, 1232], "ngates_min": [472, 1049, 1220], "curti": [472, 1049, 1220], "torr": [472, 1049, 1220], "2737": [472, 1049, 1220], "2753": [472, 1049, 1220], "kw2": [473, 1050], "rcs_field": [473, 474, 1050, 1051], "water": [473, 494, 513, 1050, 1071, 1090], "rc": [473, 474, 513, 1050, 1051, 1090], "rcs_dict": [473, 474, 1050, 1051], "lmf": [474, 480, 1051, 1057], "radconst": [474, 480, 1051, 1057], "tx_pwr": [474, 1051], "lrx": [474, 480, 1051, 1057], "ltx": [474, 1051], "lradom": [474, 480, 1051, 1057], "neglect_gas_att": [474, 1051], "feed": [474, 480, 1051, 1057], "neglect": [474, 1051], "dbz_dict": [475, 476, 1052, 1053], "use_rhohv": [477, 483, 1054, 1060], "srhohv": [477, 483, 1054, 1060], "srho_hv": [477, 1054], "rhohv_dict": [477, 478, 1054, 1055], "weight_pow": [479, 1056], "ab": [479, 1056], "grng": [479, 1056], "tobin": [479, 1056], "2017": [479, 492, 1056, 1069], "surfac": [479, 497, 1056, 1074, 1292], "ic": [479, 492, 1056, 1069, 1282, 1293], "pellet": [479, 1056], "forecast": [479, 1056], "2065": [479, 1056], "2082": [479, 1056], "THE": [480, 1057], "s_pwr_dict": [480, 1057], "sphidp_dict": [483, 1060], "compute_pow": [484, 488, 1061, 1065], "szdr_dict": [484, 1061], "phase_dict": [486, 1063], "pwr_dict": [487, 1064], "sdbz_dict": [488, 1065], "srhohv_dict": [489, 1066], "statist": [490, 491, 520, 1067, 1068, 1097, 1209, 1255], "fluctuat": [490, 491, 1067, 1068], "st1_dict": [490, 1067], "st1": [490, 1067], "st2_dict": [491, 1068], "st2": [491, 1068], "bukovc": [492, 1069], "winter": [492, 1069, 1274, 1292], "liquid": [492, 1069], "reveal": [492, 1069], "2dvd": [492, 1069], "oklahoma": [492, 1069, 1187], "56": [492, 1069], "1345": [492, 1069], "1363": [492, 1069, 1255], "along_azi": [493, 1070], "fixed_rang": [493, 1070], "fixed_azimuth": [493, 1070], "fixed_elev": [493, 1070], "rng_tol": [493, 1070], "value_start": [493, 1070], "value_stop": [493, 1070], "acoord": [493, 1070], "along_el": [493, 1070], "along_rng": [493, 1070], "stop": [493, 1070], "kw": [494, 1071], "vol_refl_dict": [494, 1071], "10log10": [494, 1071], "wide": [496, 1073], "wbn_dict": [496, 1073], "dx": [497, 513, 532, 1074, 1090, 1109, 1292], "dy": [497, 532, 1074, 1109, 1292], "level_m": [497, 1074], "always_core_thr": [497, 960, 1074, 1292], "42": [497, 532, 1074, 1109, 1292], "bkg_rad_km": [497, 1074, 1292], "use_cosin": [497, 960, 1074, 1292], "max_diff": [497, 960, 1074, 1292], "zero_diff_cos_v": [497, 960, 1074, 1292], "55": [497, 1074, 1286, 1292], "scalar_diff": [497, 960, 1074, 1292], "use_addit": [497, 960, 1074, 1292], "calc_thr": [497, 1074, 1292], "weak_echo_thr": [497, 1074, 1292], "min_dbz_us": [497, 1074, 1292], "db_averag": [497, 1074, 1292], "remove_small_object": [497, 1074, 1292], "min_km2_siz": [497, 1074, 1292], "val_for_max_conv_rad": [497, 1074, 1292], "max_conv_rad_km": [497, 1074, 1292], "cs_core": [497, 1074], "nosfcecho": [497, 1074, 1292], "weakecho": [497, 1074, 1292], "sf": [497, 1074, 1292], "conv": [497, 1074, 1292], "estimate_flag": [497, 1074, 1292], "estimate_offset": [497, 1074, 1292], "partit": [497, 532, 1074, 1109], "convect": [497, 532, 960, 1074, 1109, 1255, 1260, 1289], "stratiform": [497, 532, 960, 1074, 1109, 1255, 1260, 1289], "yuter": [497, 532, 960, 1074, 1109, 1230, 1274, 1292], "1997": [497, 960, 1074, 1292], "pars": [497, 1074, 1255], "classifi": [497, 520, 960, 1074, 1097, 1255, 1292, 1293], "cosin": [497, 960, 1074, 1292], "simpler": [497, 1074, 1292], "scalar": [497, 960, 1074, 1255, 1292], "eqn": [497, 960, 1074], "b1": [497, 960, 1074], "percentag": [497, 1074, 1232], "weak": [497, 1074, 1292], "underestim": [497, 1074, 1292], "wih": [497, 1074], "convsf_dict": [497, 1074, 1292], "raindrop": [497, 1074, 1292], "pacif": [497, 1074, 1292], "warm": [497, 523, 1074, 1100, 1292], "pool": [497, 1074, 1292], "implic": [497, 1074, 1292], "appl": [497, 525, 530, 532, 535, 1074, 1102, 1107, 1109, 1112, 1292, 1306], "meteor": [497, 525, 530, 532, 535, 1074, 1102, 1107, 1109, 1112, 1292, 1306], "36": [497, 1074, 1266, 1268, 1272, 1286, 1290, 1292, 1302], "847": [497, 1074, 1255, 1292], "867": [497, 1074, 1255, 1292], "doi": [497, 499, 520, 524, 525, 527, 1074, 1076, 1097, 1101, 1102, 1104, 1230, 1274, 1292, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "org": [497, 518, 1025, 1074, 1095, 1230, 1255, 1274, 1292, 1296, 1306], "1175": [497, 525, 527, 1074, 1102, 1104, 1255, 1292], "1520": [497, 1074, 1292], "0450": [497, 1074, 1292], "036": [497, 1074, 1292], "3c0847": [497, 1074, 1292], "morsdo": [497, 1074, 1292], "3e2": [497, 1074, 1292], "smith": [497, 1074, 1292], "wilheit": [497, 1074, 1292], "zipser": [497, 1074, 1292], "character": [497, 499, 532, 1074, 1076, 1109, 1292], "tropic": [497, 1074, 1292], "kwajex": [497, 1074, 1292], "385": [497, 1074, 1255, 1292], "415": [497, 1074, 1292], "jam2206": [497, 1074, 1292], "lapse_r": [498, 516, 520, 1075, 1093, 1097], "nsamples_max": [498, 1075], "prepar": [498, 1075, 1298, 1299, 1300, 1302, 1303, 1304], "refl_std": [498, 1075], "zdr_std": [498, 1075], "kdp_std": [498, 1075], "rhohv_std": [498, 1075], "relh_std": [498, 1075], "fill_valu": [499, 513, 523, 524, 525, 532, 1076, 1090, 1100, 1101, 1102, 1109, 1231, 1298, 1299, 1304], "ml_field": [499, 527, 528, 529, 1076, 1104, 1105, 1106], "ml_pos_field": [499, 527, 528, 529, 1076, 1104, 1105, 1106], "max_rang": [499, 1020, 1076], "detect_threshold": [499, 1076], "interp_hol": [499, 1076], "max_length_hol": [499, 1076], "check_min_length": [499, 1076], "get_iso0": [499, 527, 528, 529, 1076, 1104, 1105, 1106], "ml": [499, 527, 1076, 1104], "plai": [499, 1076, 1305], "sensit": [499, 1076], "erron": [499, 1076, 1300], "hole": [499, 1076], "ml_obj": [499, 527, 528, 529, 1076, 1104, 1105, 1106], "ml_dict": [499, 527, 528, 529, 1076, 1104, 1105, 1106], "iso0_dict": [499, 527, 528, 529, 1076, 1104, 1105, 1106], "all_ml": [499, 1076], "scipion": [499, 1076], "bern": [499, 520, 524, 1076, 1097, 1101], "q": [499, 1076, 1255], "meteorol": [499, 530, 1076, 1107, 1292], "soc": [499, 1076], "142": [499, 1076], "108": [499, 1076], "124": [499, 1076], "1002": [499, 1076, 1255], "qj": [499, 1076], "2672": [499, 1076], "niter": [500, 1077], "nvar": [500, 512, 1077, 1089], "medoids_arr": [500, 1077], "a_field": [501, 502, 505, 1078, 1079, 1082], "rr_field": [501, 502, 503, 504, 505, 506, 507, 1078, 1079, 1080, 1081, 1082, 1083, 1084], "diederich": [501, 1078], "tromel": [501, 530, 1078, 1107], "wavelenght": [501, 1078], "hydrometeorologi": [501, 1078], "487": [501, 1078], "502": [501, 1078, 1255], "alphazr": [502, 1079], "0376": [502, 504, 505, 506, 1079, 1081, 1082, 1083], "betazr": [502, 1079], "6112": [502, 504, 505, 506, 1079, 1081, 1082, 1083], "alphaz": [502, 505, 506, 1079, 1082, 1083], "betaz": [502, 505, 506, 1079, 1082, 1083], "alphaa": [502, 505, 1079, 1082], "betaa": [502, 505, 1079, 1082], "mp_factor": [502, 1079], "master_field": [502, 505, 506, 1079, 1082, 1083], "thresh_max": [502, 505, 506, 1079, 1082, 1083], "act": [502, 505, 506, 580, 1079, 1082, 1083, 1255, 1292, 1298], "master": [502, 505, 506, 1079, 1082, 1083, 1255, 1283, 1306], "slave": [502, 505, 506, 1079, 1082, 1083], "blend": [505, 506, 1082, 1083, 1282], "rain_mast": [505, 506, 1082, 1083], "alphakdp": [506, 1083], "betakdp": [506, 1083], "mm": [506, 1083, 1292], "polynomi": [507, 1084], "develop": [507, 1084, 1255, 1296, 1305, 1306], "mcgill": [507, 1084, 1296], "az_tol": [508, 509, 1085, 1086, 1212], "wind_field": [508, 509, 511, 1085, 1086, 1088], "windshear_field": [508, 509, 1085, 1086], "windshear": [508, 509, 1085, 1086], "npoints_min": [510, 1087], "azi_spacing_max": [510, 1087], "vel_diff_max": [510, 1087], "rad_vel_field": [510, 1087], "u_vel_field": [510, 1087], "v_vel_field": [510, 1087], "w_vel_field": [510, 1087], "vel_est_field": [510, 1087], "vel_std_field": [510, 1087], "vel_diff_field": [510, 1087], "vad": [510, 535, 536, 1087, 1112, 1113, 1255, 1260, 1289, 1306], "recomput": [510, 1087], "difer": [510, 1087], "vert_proj": [511, 1088], "neglig": [511, 1088], "v_r": [511, 1088], "v_el": [511, 1088], "v_az": [511, 1088], "perpendicular": [511, 1088], "v_h": [511, 1088], "know": [511, 1088, 1308], "hold": [511, 1088], "sonde_dset": [512, 1089], "time_kei": [512, 1089], "height_kei": [512, 1089], "vap": [512, 1089], "startard": [512, 1089], "ncvar": [512, 1089], "return_d": [512, 1089], "radar_spec": [513, 1090], "dem_grid": [513, 1090], "terrain_altitude_field": [513, 1090], "bent_terrain_altitude_field": [513, 1090], "terrain_slope_field": [513, 1090], "terrain_aspect_field": [513, 1090], "elevation_angle_field": [513, 1090], "visibility_field": [513, 1090], "min_vis_elevation_field": [513, 1090], "min_vis_altitude_field": [513, 1090], "incident_angle_field": [513, 1090], "effective_area_field": [513, 1090], "sigma_0_field": [513, 1090], "rcs_clutter_field": [513, 1090], "dbm_clutter_field": [513, 1090], "dbz_clutter_field": [513, 1090], "visibility_polar_field": [513, 1090], "az_conv": [513, 1090], "daz": [513, 1090], "012": [513, 1090], "atm_att": [513, 1090], "mosotti_kw": [513, 1090], "9644": [513, 1090], "raster_oversampl": [513, 1090], "sigma0_method": [513, 1090], "gabella": [513, 520, 1090, 1097], "clip": [513, 1090], "return_pyart_object": [513, 1090], "verbos": [513, 523, 540, 550, 551, 565, 566, 1090, 1100, 1255, 1306], "frequenti": [513, 1090], "ghz": [513, 1090], "tau": [513, 1090], "terrain": [513, 1090, 1271], "backscatt": [513, 523, 530, 1090, 1100, 1107], "incid": [513, 1090], "topographi": [513, 1090], "rx": [513, 1090], "equival": [513, 529, 1009, 1090, 1106, 1255, 1262, 1273, 1281, 1287], "One": [513, 1090, 1298, 1304, 1306, 1308], "clausiu": [513, 1090], "mosotti": [513, 1090], "materi": [513, 1090, 1296], "sigma": [513, 531, 1090, 1108, 1191, 1282, 1283], "naught": [513, 1090], "undefin": [513, 1090], "oversampl": [513, 1090], "delrieu": [513, 1090], "lot": [513, 1090], "directli": [513, 1090, 1271], "bent_terrain_altitude_d": [513, 1090], "terrain_slope_d": [513, 1090], "terrain_aspect_d": [513, 1090], "elevation_d": [513, 1090], "min_vis_elevation_d": [513, 1090], "min_vis_altitude_d": [513, 1090], "visibility_d": [513, 1090], "incident_angle_d": [513, 1090], "effective_area_d": [513, 1090], "sigma_0_d": [513, 1090], "rcs_clutter_d": [513, 1090], "dbm_clutter_d": [513, 1090], "dbz_clutter_d": [513, 1090], "visibility_polar_d": [513, 1090], "perona": [513, 1090], "1998": [513, 1090], "orograph": [513, 1090], "geometr": [513, 1090], "1485": [513, 1090], "1494": [513, 1090], "freq_band": [515, 1092], "temp_ref_field": [516, 1093], "heigh_over_iso0": [516, 1093], "iso0_ref": [516, 1093], "insuffici": [516, 1093], "rng_left_km": [517, 1094], "rng_right_km": [517, 1094], "ang": [517, 1094, 1282, 1283], "ang_r": [517, 1094], "ml_bottom": [517, 1094], "msl": [517, 527, 1094, 1104, 1232], "grid1": [518, 1095], "grid2": [518, 1095], "return_valu": [518, 1095], "displac": [518, 1095], "en": [518, 1095, 1296, 1305, 1306], "wikipedia": [518, 1095], "wiki": [518, 1025, 1095], "phase_correl": [518, 1095], "inspir": [518, 1095], "christoph": [518, 1095], "gohlk": [518, 1095], "lfd": [518, 1095], "uci": [518, 1095], "imreg": [518, 1095], "advect": [518, 519, 1095, 1096, 1255], "trim_edg": [519, 1096], "field_list": [519, 1011, 1096], "shifted_grid": [519, 1096], "subset": [519, 1096, 1255, 1260, 1289, 1290], "mass_cent": [520, 1097], "entropy_field": [520, 1097], "compute_entropi": [520, 1097], "output_dist": [520, 1097], "besic": [520, 528, 1097, 1105], "nclass": [520, 1097], "decai": [520, 1097], "entropi": [520, 1097], "fields_dict": [520, 1097], "figuera": [520, 1097, 1296, 1306], "ventura": [520, 1097, 1296, 1306], "grazioli": [520, 524, 1097, 1101, 1296, 1306], "germann": [520, 1097, 1296, 1306], "semi": [520, 1097], "supervis": [520, 1097], "mea": [520, 1097, 1230, 1274], "4425": [520, 1097], "4445": [520, 1097], "5194": [520, 1097, 1230, 1274], "amt": [520, 1097, 1230, 1274], "piecewis": [521, 522, 1098, 1099], "lenght": [521, 522, 1098, 1099], "kdp_dict": [521, 522, 523, 524, 525, 1098, 1099, 1100, 1101, 1102], "cg": [523, 1100], "clpf": [523, 1100], "length_scal": [523, 1100], "first_guess": [523, 1100], "finite_ord": [523, 1100], "variat": [523, 1100, 1255], "maesaka": [523, 1100], "2012": [523, 525, 1100, 1102], "monoton": [523, 526, 1100, 1103, 1271], "propag": [523, 524, 525, 1100, 1101, 1102], "notat": [523, 1100], "primari": [523, 1100], "proport": [523, 1100], "analys": [523, 524, 525, 1100, 1101, 1102], "nonlinear": [523, 1100], "conjug": [523, 1100], "gradient": [523, 1100, 1255, 1271], "broyden": [523, 1100], "fletcher": [523, 1100], "goldfarb": [523, 1100], "shanno": [523, 1100], "bfg": [523, 1100], "howev": [523, 1100, 1300], "100k": [523, 1100], "parameter": [523, 1100], "attentu": [523, 1100], "constraint": [523, 1100], "bring": [523, 1100], "guess": [523, 1100], "root": [523, 1100, 1305, 1308], "signifi": [523, 532, 1100, 1109], "everywher": [523, 1100], "exactli": [523, 1100, 1266], "avoid": [523, 1100, 1255, 1308], "converg": [523, 1100], "closer": [523, 1100], "finit": [523, 1100], "accuraci": [523, 1100], "maxit": [523, 1100], "met": [523, 1100], "achiev": [523, 1100], "somewhat": [523, 1100], "thread": [523, 1100], "cpu": [523, 1100], "multiprocess": [523, 1100], "capabl": [523, 1100, 1300, 1304], "relev": [523, 1100], "phidpf_dict": [523, 1100], "phidpr_dict": [523, 524, 525, 1100, 1101, 1102], "forward": [523, 1100, 1222, 1223], "iwanami": [523, 1100], "maki": [523, 1100], "seventh": [523, 1100], "european": [523, 1100], "confer": [523, 1100, 1296], "hydrologi": [523, 1100], "rcov": [524, 1101], "pcov": [524, 1101], "prefilter_psidp": [524, 525, 1101, 1102], "filter_opt": [524, 525, 1101, 1102], "kalman": [524, 1101], "schneeb": [524, 1101], "psidp": [524, 525, 1101, 1102], "char": [524, 525, 1101, 1102], "capit": [524, 525, 1101, 1102], "intercept": [524, 1101], "3x3": [524, 1101], "covari": [524, 1101], "4x4": [524, 1101], "filter_psidp": [524, 525, 1101, 1102, 1255], "enabl": [524, 525, 1101, 1102, 1255], "everi": [524, 525, 535, 578, 1101, 1102, 1112, 1296], "kdp_std_dict": [524, 1101], "dev": [524, 1101, 1302, 1306], "ensembl": [524, 1101], "ieee": [524, 1101], "geosci": [524, 1101], "remot": [524, 1101, 1255, 1262, 1306], "sen": [524, 1101], "52": [524, 530, 1101, 1107], "5137": [524, 1101], "5149": [524, 1101], "1109": [524, 1101, 1255], "tgr": [524, 1101], "2287017": [524, 1101], "windsiz": [525, 1102], "n_iter": [525, 1102], "interp": [525, 1102], "vulpiani": [525, 1102, 1255], "pre": [525, 1102, 1255], "ex": [525, 1102, 1271, 1306], "advantag": [525, 1102], "eat": [525, 1102], "gianfranco": [525, 1102], "mario": [525, 1102], "montopoli": [525, 1102], "luca": [525, 1102], "delli": [525, 1102], "passeri": [525, 1102], "antonio": [525, 1102], "gioia": [525, 1102], "pietro": [525, 1102], "giordano": [525, 1102], "frank": [525, 1102], "marzano": [525, 1102], "On": [525, 1102], "dual": [525, 1102, 1255], "mountain": [525, 1102], "climatol": [525, 1102, 1292], "51": [525, 1102], "405": [525, 1102, 1255], "425": [525, 1102, 1255], "05024": [525, 1102], "profile_field": [526, 1103], "height_field": [526, 1103], "3re": [526, 1103], "whole": [526, 1103, 1255], "height_dict": [526, 1103], "profile_dict": [526, 1103], "nvol": [527, 1104], "maxh": [527, 1104], "rhomin": [527, 1104], "rhomax": [527, 1104], "94": [527, 1104, 1304], "zhmin": [527, 1104], "hwindow": [527, 1104], "mlzhmin": [527, 1104], "mlzhmax": [527, 1104], "mlzdrmin": [527, 1104], "mlzdrmax": [527, 1104], "htol": [527, 1104], "ml_bottom_diff_max": [527, 1104], "time_accu_max": [527, 1104], "1800": [527, 1104, 1298], "nml_points_min": [527, 1104], "wlength": [527, 1104], "percentile_bottom": [527, 1104], "percentile_top": [527, 1104], "time_nodata_allow": [527, 1104], "3600": [527, 1104, 1298], "ml_global": [527, 1104], "aggreg": [527, 529, 1104, 1106, 1293], "ml_bottom_dif_max": [527, 1104], "percentil": [527, 1104], "stack": [527, 1104, 1305, 1306], "Its": [527, 1104], "kraus": [527, 1104], "design": [527, 1104, 1230, 1282, 1292, 1306], "prototyp": [527, 1104], "clim": [527, 530, 1104, 1107], "1354": [527, 1104], "1364": [527, 1104], "2007jamc1634": [527, 1104], "force_continu": [528, 1105], "dist_max": [528, 1105], "350": [528, 1105], "heightand": [528, 1105], "1400": [529, 1106], "4500": [529, 1106, 1298], "ns_factor": [529, 1106], "rhohv_corr_min": [529, 1106], "rhohv_nash_min": [529, 1106], "ang_iso0": [529, 1106], "age_iso0": [529, 1106], "ml_thickness_iso0": [529, 1106], "ml_memori": [529, 1106], "rhohv_field_ob": [529, 1106], "rhohv_field_theo": [529, 1106], "nse": [529, 1106], "hour": [529, 1106, 1262, 1263], "ml_found_obj": [529, 1106], "instantan": [529, 1106, 1255], "desired_angl": [530, 1107, 1255], "wanted_angl": [530, 1107], "dictonari": [530, 1107], "troemel": [530, 1107], "2529": [530, 1107], "2548": [530, 1107], "54": [530, 1107, 1263], "2344": [530, 1107], "2359": [530, 1107], "submit": [530, 1107, 1296], "technol": [530, 1107], "fm": [531, 1108], "rg": [531, 533, 1108, 1110], "nbin": [531, 1108, 1255], "110": [531, 1108, 1259, 1295], "pdf_zh_max": [531, 1108], "pdf_relh_max": [531, 1108], "sigma_zh": [531, 1108], "sigma_relh": [531, 1108], "random": [531, 533, 1108, 1110], "platykurtic_dbz": [531, 1108], "platykurtic_h_iso0": [531, 1108], "nfeatur": [531, 1108], "histogram": [531, 1108, 1266, 1300], "platykurtik": [531, 1108], "guassian": [531, 1108], "quantiz": [531, 1108], "platykurt": [531, 1108], "fm_sampl": [531, 1108], "intens": [532, 1109], "work_level": [532, 1109], "peak_rel": [532, 1109], "area_rel": [532, 1109], "medium": [532, 1109], "bkg_rad": [532, 1109], "11000": [532, 1109, 1302], "use_intens": [532, 1109], "steiner": [532, 1109, 1255, 1292], "1995": [532, 1109, 1292], "greater": [532, 1109, 1292], "bright": [532, 1109], "sgp": [532, 1109, 1187], "peaked": [532, 1109], "eclass": [532, 1109], "climatolog": [532, 1109, 1292], "gaug": [532, 1109, 1292], "1978": [532, 1109, 1292], "2007": [532, 1109, 1292], "par_var": [533, 1110], "probabl": [533, 1110, 1225, 1226, 1227, 1239], "membership": [533, 1110], "synthetic_ob": [533, 1110], "z_want": [535, 536, 1112, 1113, 1294, 1306], "valid_ray_min": [535, 1112, 1306], "brown": [535, 1112, 1255, 1306], "amount": [535, 1112, 1302, 1306], "_averag1d": [535, 1112, 1306], "idw": [535, 1112], "wexler": [535, 1112, 1306], "1968": [535, 1112, 1306], "kinemat": [535, 1112, 1306], "105": [535, 1112, 1306], "113": [535, 1112, 1306], "linespac": [536, 1113], "michelson": [536, 1113], "andersson": [536, 1113], "koistinen": [536, 1113], "collier": [536, 1113], "riedl": [536, 1113], "szturc": [536, 1113], "gjertsen": [536, 1113], "nielsen": [536, 1113], "overgaard": [536, 1113], "baltex": [536, 1113], "centr": [536, 1113], "smhi": [536, 1113], "swedish": [536, 1113], "meteorolog": [536, 1025, 1113], "hydrolog": [536, 1113], "institut": [536, 1113, 1304], "norrkop": [536, 1113], "statu": [537, 1306], "dependeci": 537, "sy": 537, "descript": [538, 580, 582, 594, 676, 747, 748, 785, 961, 984, 1008, 1021, 1114, 1199, 1247, 1296, 1306], "polish": 538, "risk": 538, "bug": [538, 1296, 1305, 1306], "prioriti": [538, 1308], "momentpm": 540, "momentm": 540, "share": 540, "extra": [540, 550, 551, 565, 566, 1255], "momentspm": 540, "momentsm": 540, "metranet_lib": 540, "keep_all_rai": 550, "physic_valu": [550, 551, 565, 566], "masked_arrai": [550, 551, 565, 566, 1298, 1304], "duplic": 550, "ret_data": [550, 551, 565, 566], "radardata": [550, 551, 565, 566], "reorder_angl": 551, "reorder": 551, "properli": [565, 566, 1253, 1263], "cpi_head": 567, "3d": 569, "sinarame_h5": [574, 578, 1255], "folder": [578, 1306], "commun": [580, 1306, 1308], "interact": 594, "az_data": 725, "az_ref": 725, "el_data": 725, "el_ref": 725, "sunhit": [725, 734], "npar": [725, 734], "do_elcorr": 725, "radian": [725, 1200, 1202, 1243], "concret": 998, "__getitem__": 998, "__setitem__": 998, "__delitem__": 998, "__iter__": 998, "__len__": 998, "robust": 1008, "src_radar": 1009, "dest_radar": 1009, "distance_toler": [1009, 1266], "gatefilter_src": [1009, 1266], "time_toler": [1009, 1266], "kd": 1009, "easi": [1009, 1025, 1296], "src_radar_i": 1009, "src_radar_x": 1009, "destin": [1009, 1011, 1266], "src_radar_tim": 1009, "dest_radar_tim": 1009, "gate_mapp": 1009, "src": 1009, "dest": 1009, "dest_index": 1009, "radar_map": 1009, "mapped_radar": [1009, 1266], "adequ": [1009, 1266], "getter": [1010, 1012], "earth_radiu": 1016, "radar_sweep": 1020, "cart_r": 1020, "dictionnari": 1020, "sever": [1020, 1255], "signific": 1020, "coord": [1020, 1273], "cart_data": 1020, "am": [1025, 1296, 1306], "glossari": 1025, "dry": [1025, 1293], "world": [1025, 1260, 1270], "aloft": 1025, "oppos": [1025, 1274], "nwp": [1025, 1293], "why": [1025, 1306], "think": 1025, "turn": [1025, 1271, 1292, 1296], "spin": 1025, "author": [1025, 1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294], "randi": 1025, "chase": 1025, "dopplerchas": [1025, 1255], "american": 1025, "2022": [1025, 1230, 1262, 1274, 1292, 1296, 1306], "ametsoc": 1025, "suffix": 1125, "tmp": 1125, "temporari": [1125, 1255], "my_cwd": 1125, "getcwd": 1125, "tmpdir": 1125, "_": [1125, 1262, 1263, 1293], "txt": [1125, 1255, 1305], "wt": 1125, "assert": [1125, 1255, 1306], "isfil": 1125, "path_to_fil": 1186, "local": [1186, 1220, 1225, 1229, 1255, 1296, 1305, 1306], "site": [1187, 1290, 1299, 1302, 1305], "radarspectra": [1190, 1231, 1245], "mu": 1191, "sapr": 1192, "dp_phase_shift": [1192, 1298], "diff_phas": [1192, 1298], "differential_reflect": [1192, 1275, 1282, 1303, 1304], "rectangular": [1193, 1194], "miscellan": 1199, "depreci": [1199, 1255], "caution": 1199, "std": [1202, 1203, 1234, 1246], "convolut": 1204, "ndimag": [1204, 1255, 1282, 1283], "generic_filt": 1204, "pi": [1204, 1300], "std_dev": 1204, "radar1": [1205, 1206, 1232, 1240], "radar2": [1205, 1206, 1232, 1240], "h_tol": [1205, 1232], "coloc_gates_field": [1205, 1206], "coloc": [1205, 1206], "coloc_dict": [1205, 1206], "azi": [1205, 1206, 1221], "coloc_rad1": [1205, 1206], "distance_upper_bound": 1206, "neighbour": [1206, 1221], "ckdtree": 1206, "bound": 1206, "lin_tran": 1207, "span": 1207, "consdier": 1207, "vec1": [1208, 1210], "vec2": [1208, 1210], "pearson": 1208, "corr": [1208, 1210], "stat": [1209, 1255], "nvalid": 1209, "arr1": 1210, "arr2": 1210, "obs_data": 1211, "mod_data": 1211, "nash": 1211, "sutcliff": 1211, "nash_coeff": 1211, "target_elev": [1213, 1228], "el_tol": [1213, 1228], "radar_ppi": 1213, "epoch": [1214, 1215, 1216, 1217, 1218], "articl": 1219, "var": [1219, 1220, 1251, 1252], "nnois": [1219, 1220], "pwr_w_rai": 1220, "pct": [1220, 1226, 1238], "270436": 1220, "flat_reg_wlen": [1220, 1225, 1236], "flat_reg_var_max": [1220, 1236, 1237], "439551": 1220, "snr_thr": [1220, 1227], "769572": 1220, "ngates_final_min": 1220, "ngates_median": 1220, "83": 1220, "decibel": 1220, "flat": [1220, 1225, 1236, 1237, 1262], "inds_rai": 1220, "inds_ray_aux": 1221, "ind_rng_aux": 1221, "target_latitud": [1222, 1248], "target_longitud": [1222, 1248], "bear": 1222, "alongitudeg": 1222, "great": [1222, 1248], "circl": [1222, 1248, 1292], "known": [1222, 1255, 1304, 1306], "6371000": [1222, 1248], "calculatitude": 1222, "degress": [1222, 1248], "sphere_dist": 1224, "for_azimuth": 1224, "get_column_rai": 1224, "xarari": 1224, "prob_thr": [1225, 1226], "var_thr": 1225, "0001": 1226, "pct_out": 1226, "pfa_thr": 1227, "alarm": [1227, 1239], "xwind": 1229, "ywind": 1229, "win_std": 1229, "mute_field": [1230, 1274], "mute_threshold": [1230, 1274], "field_threshold": [1230, 1274], "discern": 1230, "mute": [1230, 1255, 1260, 1270, 1292], "tomkin": [1230, 1274, 1292], "miller": [1230, 1274], "allen": [1230, 1274], "identif": [1230, 1274], "5515": [1230, 1274], "5525": [1230, 1274], "kind": [1231, 1247], "psr_interp": 1231, "vol_d_tol": 1232, "vismin": 1232, "azmin": 1232, "azmax": 1232, "visib_field": 1232, "intersec_field": 1232, "regard": [1232, 1255], "decim": 1232, "diamet": 1232, "intersec_rad1_dict": 1232, "interval_min": [1233, 1234], "interval_max": [1233, 1234], "endpoint": [1233, 1234], "to_vpt": 1235, "verticl": 1235, "prescrib": 1236, "ivic_flat_reg_wind_len": 1236, "throw": [1238, 1239, 1255], "pfa": [1238, 1239], "1e": [1238, 1239, 1298, 1304], "matlab": 1238, "get_ivic_pct": 1238, "particularli": 1238, "pct_tabl": 1238, "snr_thr_out": 1239, "coerce_angl": 1240, "slightli": [1240, 1273], "slight": 1240, "misposit": 1240, "spectra1": 1241, "spectra2": 1241, "tup": 1242, "guarante": 1242, "broadcast": 1242, "broadcasted_arrai": 1242, "angles1": 1243, "angles2": 1243, "angle1": 1244, "angle2": 1244, "eg": 1246, "ma": [1246, 1266, 1267, 1292, 1299, 1303, 1306], "sim_vel_field": 1247, "slinear": 1247, "quadrat": 1247, "cubic": 1247, "interp1d": [1247, 1306], "sim_vel": [1247, 1306], "coverag": [1249, 1250, 1255], "11pt": 1251, "stdev": 1251, "texarrai": 1251, "pyradarobj": 1251, "tex": 1252, "single_scan": 1253, "is_vpt": 1253, "mislabel": 1253, "releas": [1254, 1296, 1299, 1302, 1305, 1306], "nov": 1254, "2023": 1254, "guid": [1254, 1255, 1296], "broken": [1254, 1255], "lint": 1255, "1407": 1255, "mgrover1": 1255, "readm": [1255, 1305], "1397": 1255, "xradar": 1255, "1417": 1255, "1416": 1255, "blog": 1255, "post": 1255, "visual": [1255, 1271, 1274, 1282, 1290], "wisconsin": 1255, "1413": 1255, "accessor": 1255, "1411": 1255, "1409": 1255, "plot_ppi_map": [1255, 1262, 1263, 1266, 1273, 1279, 1290, 1299, 1300, 1303], "1401": 1255, "joshua": 1255, "hampton": 1255, "del": [1255, 1273], "old": 1255, "conda_recip": 1255, "1399": 1255, "ci": 1255, "zssherman": 1255, "page": 1255, "enh": 1255, "ruff": 1255, "1388": 1255, "wrong": 1255, "1390": 1255, "1385": 1255, "jrobrien91": 1255, "1383": 1255, "mnt": 1255, "1392": 1255, "drop": 1255, "pkg_resourc": 1255, "runtim": 1255, "1394": 1255, "neutrinocero": 1255, "mail": [1255, 1306], "1393": 1255, "codeown": 1255, "1391": 1255, "1384": 1255, "kmuehlbauer": 1255, "1382": 1255, "gatemapp": [1255, 1260, 1265], "api": 1255, "1379": 1255, "mismatch": 1255, "shade": 1255, "1381": 1255, "wrap": 1255, "get_gate_area": 1255, "1375": 1255, "wheel": 1255, "1380": [1255, 1298], "1372": 1255, "exec_modul": 1255, "load_modul": 1255, "1369": 1255, "badg": 1255, "read_sigmet": 1255, "1351": 1255, "zouihao": 1255, "unus": 1255, "1343": 1255, "rcjackson": 1255, "cookbook": [1255, 1296, 1307], "1342": 1255, "range_step": 1255, "1338": 1255, "max_num_g": 1255, "1337": 1255, "1327": 1255, "revert": 1255, "setuptool": 1255, "unwant": 1255, "cleanup": 1255, "And": 1255, "1357": 1255, "1355": 1255, "1339": 1255, "lauratomkin": 1255, "1361": 1255, "commit": [1255, 1306], "hook": 1255, "black": [1255, 1272, 1290], "1341": 1255, "spc": 1255, "hail": [1255, 1293], "1335": 1255, "manipul": [1255, 1273, 1297], "1300": 1255, "dopplershift": 1255, "kylejgillett": 1255, "melovato": 1255, "notebook": [1255, 1260, 1299, 1302, 1303, 1306, 1308], "app": 1255, "tsbiscaro": 1255, "1324": 1255, "1319": 1255, "1314": 1255, "add_filt": 1255, "1326": 1255, "1320": [1255, 1298], "1325": 1255, "jthielen": 1255, "1303": 1255, "jjhelmu": [1255, 1308], "wx4stg": 1255, "antiviru": 1255, "workflow": 1255, "similiar": 1255, "adam": 1255, "1307": 1255, "1299": 1255, "convolve1d": 1255, "1313": 1255, "1306": 1255, "1317": 1255, "wolfidan": 1255, "1311": 1255, "jfigui": 1255, "citat": [1255, 1274], "1304": 1255, "gamaanderson": 1255, "hhuangwx": 1255, "josephhardine": 1255, "mdr": 1255, "ngui": 1255, "scolli": 1255, "tjlang": 1255, "1294": 1255, "1290": 1255, "1285": 1255, "toggl": 1255, "1279": 1255, "backward": 1255, "1278": 1255, "1284": 1255, "tracer": 1255, "1296": 1255, "1292": 1255, "1287": 1255, "cibuildwheel": 1255, "1267": 1255, "ocefpaf": 1255, "packag": [1255, 1263, 1296, 1299, 1302, 1305, 1306, 1308], "1275": 1255, "1276": 1255, "1265": 1255, "dcedgren": 1255, "jilling": 1255, "zhaobudaola": 1255, "1263": 1255, "1235": 1255, "1215": 1255, "columnsect": [1255, 1290], "1261": 1255, "1241": 1255, "pin": 1255, "1240": 1255, "gatefi": 1255, "1226": 1255, "join_radar": 1255, "repititon": 1255, "iparam": 1255, "1218": 1255, "1216": 1255, "trmm_rsl": 1255, "1239": 1255, "cftime": 1255, "1211": 1255, "incorrect": [1255, 1300], "1231": 1255, "ci_setup": 1255, "1213": 1255, "1264": 1255, "basic": [1255, 1296, 1297, 1299], "1251": 1255, "1234": 1255, "1228": 1255, "subset_radar": 1255, "radar_util": 1255, "1227": 1255, "pyrad": [1255, 1296, 1306], "1220": 1255, "tst": 1255, "1214": 1255, "srbrodzik": 1255, "1208": 1255, "1204": 1255, "1201": [1255, 1262], "1198": 1255, "1196": 1255, "catch": 1255, "1191": 1255, "main": [1255, 1277, 1306], "1207": 1255, "pypi": 1255, "1206": 1255, "unitest": 1255, "1200": [1255, 1298], "1199": 1255, "echoclass": 1255, "1197": 1255, "delet": [1255, 1273, 1306], "convv": 1255, "awhil": 1255, "back": 1255, "1195": 1255, "1190": 1255, "dp": 1255, "1184": 1255, "solver": [1255, 1296], "1183": 1255, "1176": 1255, "1187": 1255, "revis": 1255, "270": [1255, 1287, 1306], "1185": 1255, "1181": 1255, "suit": [1255, 1302, 1306], "1178": 1255, "1171": 1255, "1180": 1255, "1177": 1255, "1173": 1255, "sobitp59": 1255, "rogu": 1255, "1170": 1255, "1160": 1255, "1152": 1255, "1151": 1255, "mispel": 1255, "1158": 1255, "1148": 1255, "1167": 1255, "galleri": [1255, 1296], "1154": 1255, "unittest": 1255, "1153": 1255, "scm": [1255, 1306], "1136": 1255, "trigger": 1255, "1126": 1255, "action": 1255, "1118": 1255, "1115": 1255, "abil": [1255, 1296, 1308], "1111": 1255, "maco": 1255, "1147": 1255, "prune": 1255, "1143": 1255, "linux": [1255, 1296, 1306, 1308], "1141": 1255, "1140": [1255, 1298], "1139": 1255, "1137": 1255, "1131": 1255, "1130": 1255, "push": [1255, 1306], "1129": 1255, "1128": 1255, "1127": 1255, "1125": 1255, "1124": 1255, "1123": 1255, "1120": 1255, "1119": 1255, "dpr": 1255, "1116": 1255, "typo": 1255, "postcard": 1255, "1104": 1255, "1103": 1255, "1122": 1255, "gridmapdisplai": [1255, 1260, 1270, 1272, 1292, 1302], "1100": 1255, "pytz": 1255, "1099": 1255, "quick": [1255, 1262], "few": [1255, 1308], "jupyt": [1255, 1260, 1308], "1146": 1255, "contribut": [1255, 1306, 1307], "pull": [1255, 1263, 1296, 1306], "1106": 1255, "1133": 1255, "aw": [1255, 1260, 1261, 1263], "1117": 1255, "1113": 1255, "submodul": [1255, 1296, 1302], "setup": [1255, 1262, 1266, 1271, 1272, 1277, 1290, 1296, 1305], "1110": 1255, "forgotten": 1255, "1108": 1255, "test_echo_class": 1255, "1107": 1255, "1101": 1255, "1098": 1255, "1097": 1255, "1094": 1255, "mac": [1255, 1296], "1080": [1255, 1298], "registri": 1255, "1087": 1255, "1096": 1255, "1093": 1255, "1090": 1255, "plt": [1255, 1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1298, 1299, 1300, 1302, 1303], "1089": 1255, "1088": 1255, "1085": 1255, "1084": 1255, "analyt": 1255, "1081": 1255, "1079": 1255, "1077": 1255, "pmi": 1255, "log": 1255, "csp": 1255, "1018": 1255, "ritvj": 1255, "doesn": [1255, 1298], "mandat": 1255, "1014": 1255, "reallynicegui": 1255, "hasattr": 1255, "1034": 1255, "overlap": [1255, 1273, 1282], "mapdisplai": 1255, "1029": 1255, "azimuth_rhi_plot": 1255, "1025": 1255, "1019": 1255, "rxm25": 1255, "1075": 1255, "panda": [1255, 1308], "1064": 1255, "mute_radar": 1255, "1033": 1255, "scan_nam": 1255, "1030": 1255, "radxgrid": 1255, "1027": 1255, "1026": 1255, "roadmap": 1255, "repo": 1255, "1059": 1255, "1043": 1255, "dep": 1255, "1032": 1255, "sidebar": 1255, "1074": 1255, "datetime_util": 1255, "1072": 1255, "rxm": 1255, "1071": 1255, "rtanamachi": 1255, "pydata": 1255, "theme": 1255, "1069": 1255, "adc": 1255, "1068": 1255, "1067": 1255, "1066": 1255, "subplot": [1255, 1262, 1266, 1271, 1272, 1273, 1285, 1290, 1291, 1292, 1293, 1294, 1300], "1063": 1255, "codecov": 1255, "1061": 1255, "1060": 1255, "1058": 1255, "1056": 1255, "1055": 1255, "now": [1255, 1263, 1266, 1271, 1273, 1290, 1292, 1298, 1300, 1305], "1053": 1255, "1051": 1255, "1050": 1255, "1048": 1255, "branch": [1255, 1306, 1308], "1040": 1255, "1039": 1255, "1038": 1255, "1031": 1255, "approxim": 1255, "geometri": 1255, "1024": 1255, "1020": [1255, 1298], "humphreyscart": 1255, "tkralph": 1255, "1003": 1255, "997": 1255, "incompat": 1255, "1007": 1255, "1001": 1255, "param": 1255, "995": 1255, "handl": 1255, "1010": 1255, "travi": 1255, "sty": [1255, 1306], "pep8": [1255, 1306], "1009": 1255, "1005": 1255, "988": 1255, "quba1": 1255, "984": 1255, "tdwr": 1255, "969": 1255, "copy_field_dtyp": 1255, "mapper": 1255, "956": 1255, "994": 1255, "979": 1255, "h5py": [1255, 1296], "978": 1255, "june1st": 1255, "switch": [1255, 1306], "989": 1255, "973": 1255, "maint": [1255, 1306], "966": 1255, "991": 1255, "983": 1255, "amarouan": 1255, "abdelhak": 1255, "bmgxyz": 1255, "address": 1255, "962": 1255, "mwilson14": 1255, "963": 1255, "nonetyp": 1255, "959": 1255, "config": [1255, 1298, 1308], "964": 1255, "176": 1255, "919": 1255, "rda": 1255, "19": [1255, 1304], "903": 1255, "add_gate_area": 1255, "950": 1255, "blotchi": 1255, "947": 1255, "946": 1255, "944": 1255, "694": 1255, "938": 1255, "vlouf": 1255, "934": 1255, "925": 1255, "feet": 1255, "924": 1255, "917": 1255, "appveyor": [1255, 1306], "937": 1255, "927": 1255, "liter": 1255, "said": 1255, "949": 1255, "948": 1255, "929": 1255, "926": 1255, "920": 1255, "adamtheisen": 1255, "915": 1255, "911": 1255, "grwise1": 1255, "jsignel": 1255, "rumpki": 1255, "broke": 1255, "913": [1255, 1264], "msg29": 1255, "909": 1255, "907": [1255, 1288], "mpl": [1255, 1293, 1299, 1302], "framework": [1255, 1296, 1306], "910": 1255, "912": 1255, "sphinx": [1255, 1260], "napoleon": 1255, "902": 1255, "rtd": 1255, "893": 1255, "892": 1255, "odimh5": 1255, "898": 1255, "h5": 1255, "895": 1255, "896": 1255, "864": 1255, "louiswick": 1255, "hilderbrand": 1255, "877": 1255, "geo": 1255, "lambert": 1255, "886": 1255, "crash": 1255, "878": 1255, "891": 1255, "zflamig": 1255, "futur": [1255, 1306], "890": 1255, "889": 1255, "885": 1255, "dstex": 1255, "forg": [1255, 1296, 1305, 1306, 1308], "880": 1255, "soon": 1255, "2020": [1255, 1274, 1296, 1305, 1306], "879": 1255, "plot_grid": [1255, 1272, 1286, 1292, 1302], "to_xarrai": 1255, "873": 1255, "876": 1255, "elementwis": 1255, "statement": [1255, 1306], "anaconda": [1255, 1296, 1305, 1306], "faq": 1255, "868": 1255, "mvanlierwalq": 1255, "848": 1255, "grid_io": 1255, "846": 1255, "jhemedin": 1255, "get_gate_lat_lon_alt": 1255, "841": [1255, 1288], "865": 1255, "homeyerrainbow": [1255, 1271], "856": 1255, "840": [1255, 1298], "caus": 1255, "852": 1255, "849": 1255, "get_dataset": 1255, "845": 1255, "docstr": 1255, "838": 1255, "836": 1255, "cheatsheet": 1255, "fortran": 1255, "bit": [1255, 1305], "environ": [1255, 1296, 1305, 1307], "contr": 1255, "843": 1255, "spell": 1255, "835": 1255, "read_d3r_gcpex_nc": 1255, "842": 1255, "eccc": 1255, "837": 1255, "taylbm": 1255, "kenkeho": 1255, "swnesbitt": 1255, "827": 1255, "env": [1255, 1296, 1299, 1302, 1308], "822": 1255, "806": 1255, "term": 1255, "804": 1255, "778": 1255, "773": 1255, "688": 1255, "incomplet": 1255, "msg5": 1255, "832": 1255, "820": 1255, "812": 1255, "deal": 1255, "809": 1255, "contiuum": 1255, "gh": 1255, "795": 1255, "explicit": 1255, "py2": 1255, "790": 1255, "sh": 1255, "kai": 1255, "muehlbauer": 1255, "789": 1255, "777": 1255, "indexerror": 1255, "check_outli": 1255, "776": 1255, "juhi24": 1255, "770": 1255, "imp": 1255, "newer": [1255, 1305], "675": 1255, "824": 1255, "minu": 1255, "803": 1255, "738": 1255, "799": 1255, "mention": [1255, 1306, 1308], "792": 1255, "graph": [1255, 1257, 1258, 1262, 1263, 1266, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1298, 1299, 1300, 1302, 1303], "favor": 1255, "791": 1255, "786": 1255, "784": 1255, "itself": [1255, 1304], "inc": 1255, "794": 1255, "rst": 1255, "preformat": 1255, "779": 1255, "eaxmpl": 1255, "834": 1255, "833": 1255, "elsewher": 1255, "831": 1255, "828": 1255, "821": 1255, "pytest": [1255, 1296, 1305, 1306], "818": 1255, "atteun": 1255, "817": 1255, "simulated_veloc": [1255, 1303], "802": 1255, "grab": [1255, 1285], "801": 1255, "796": 1255, "793": 1255, "787": 1255, "783": 1255, "781": 1255, "balanc": [1255, 1271], "cvd": 1255, "friendli": [1255, 1271], "775": 1255, "774": 1255, "769": 1255, "nl2": 1255, "765": 1255, "miaoneng": 1255, "gewitterblitz": 1255, "liliaow567": 1255, "764": 1255, "coveral": 1255, "767": 1255, "messsag": 1255, "761": 1255, "757": 1255, "set_raster": 1255, "748": 1255, "754": 1255, "755": 1255, "recompil": 1255, "758": 1255, "ngoldbaum": 1255, "reciev": 1255, "752": 1255, "maskedarrai": 1255, "gate_id": [1255, 1303], "749": 1255, "750": 1255, "746": 1255, "744": 1255, "zxdawn": 1255, "netcdftim": 1255, "736": 1255, "731": 1255, "dot_product": 1255, "726": 1255, "729": 1255, "def": [1255, 1271, 1306], "test_rhi_elev": 1255, "twice": 1255, "724": 1255, "728": 1255, "727": 1255, "nosetest": 1255, "715": 1255, "vradh": 1255, "vradv": 1255, "quantiti": 1255, "739": 1255, "es5nhc": 1255, "735": 1255, "wave100": 1255, "734": 1255, "733": 1255, "730": 1255, "wradlib": [1255, 1296], "723": 1255, "comp": 1255, "721": 1255, "cameron": 1255, "homey": 1255, "716": 1255, "cameronhomey": 1255, "jamessong": 1255, "winash12": 1255, "687": 1255, "csnardi": 1255, "645": 1255, "docbuild": 1255, "failur": 1255, "709": 1255, "mhpicel": 1255, "let": [1255, 1262, 1263, 1266, 1271, 1273, 1290, 1292, 1298, 1300, 1302, 1303, 1304, 1306, 1308], "705": 1255, "fromstr": 1255, "704": 1255, "692": 1255, "651": 1255, "email": 1255, "711": 1255, "calculate_velocity_textur": [1255, 1300], "retreiv": 1255, "672": 1255, "notic": [1255, 1266, 1273], "bucket": [1255, 1262], "673": 1255, "653": 1255, "638": 1255, "635": 1255, "frombuff": 1255, "702": 1255, "minor": [1255, 1299, 1302], "grid_mapp": 1255, "707": 1255, "706": 1255, "goharkai": 1255, "infinit": 1255, "693": 1255, "freemansw1": 1255, "683": 1255, "674": 1255, "668": 1255, "jhelmu": [1255, 1257, 1258, 1267, 1268, 1275, 1276, 1278, 1280, 1284, 1287], "contact": 1255, "land": 1255, "667": [1255, 1298], "665": 1255, "662": 1255, "661": 1255, "attributeerror": 1255, "656": 1255, "oserror": 1255, "overflowerror": 1255, "too": 1255, "648": 1255, "happier": 1255, "647": 1255, "639": 1255, "634": 1255, "620": 1255, "itsjm": 1255, "kirknorth": 1255, "617": 1255, "616": 1255, "631": 1255, "swap": 1255, "plot_rai": 1255, "618": 1255, "_get_angl": 1255, "613": 1255, "607": 1255, "linspac": [1255, 1271, 1274, 1292, 1298, 1306], "603": 1255, "627": 1255, "623": 1255, "596": 1255, "595": 1255, "632": 1255, "630": 1255, "625": 1255, "tulipasilva": 1255, "622": 1255, "normbw": 1255, "quit": 1255, "614": 1255, "git": [1255, 1296, 1305, 1306, 1308], "611": 1255, "writer": [1255, 1296], "sinaram": 1255, "608": 1255, "mrugna": 1255, "605": 1255, "bld": 1255, "kludg": 1255, "604": 1255, "acknowledg": 1255, "602": 1255, "qpe": 1255, "598": 1255, "mustafaalicelik": 1255, "580": 1255, "577": 1255, "576": 1255, "575": 1255, "546": 1255, "unpickl": 1255, "543": 1255, "vcp": 1255, "541": 1255, "noaaport": 1255, "seper": 1255, "540": [1255, 1298], "521": 1255, "459": [1255, 1288], "590": 1255, "bugfix": 1255, "l3": 1255, "135": 1255, "eet": 1255, "582": 1255, "much": [1255, 1300, 1302, 1303], "574": 1255, "570": 1255, "558": 1255, "l2": 1255, "ctm": 1255, "553": 1255, "542": 1255, "aux_io": 1255, "read_gam": 1255, "535": [1255, 1269], "midnight": 1255, "00": [1255, 1259, 1264, 1269, 1288, 1295], "523": 1255, "importerror": 1255, "522": 1255, "519": 1255, "512": 1255, "510": 1255, "divis": 1255, "phase_proc": 1255, "zerodivis": 1255, "494": 1255, "485": 1255, "unsupport": 1255, "481": 1255, "579": 1255, "578": 1255, "prefer": [1255, 1296, 1305], "568": 1255, "563": 1255, "559": 1255, "549": 1255, "clean": 1255, "547": 1255, "gamicfil": 1255, "gamic_hdf5": 1255, "536": 1255, "524": 1255, "513": 1255, "balltre": 1255, "504": 1255, "501": 1255, "tag": 1255, "482": 1255, "479": 1255, "594": 1255, "567": 1255, "cite": [1255, 1298, 1299, 1300, 1302, 1303, 1304], "561": 1255, "despeckle_field": 1255, "544": 1255, "axislabel_flag": 1255, "539": 1255, "529": 1255, "_get_x_z": 1255, "491": [1255, 1288], "opt": 1255, "486": 1255, "586": 1255, "secondari": 1255, "583": 1255, "572": 1255, "fixup": 1255, "565": 1255, "569": 1255, "560": 1255, "rainbow_wrl": 1255, "555": 1255, "recip": 1255, "554": 1255, "nose_arg": 1255, "548": 1255, "538": 1255, "532": 1255, "531": 1255, "528": 1255, "output_to_geotiff": 1255, "514": 1255, "511": 1255, "507": 1255, "506": 1255, "radarmapdisplai": [1255, 1262, 1263, 1266, 1273, 1279, 1290, 1298, 1299, 1300, 1302, 1303], "498": 1255, "libgfortran": 1255, "497": 1255, "495": 1255, "493": 1255, "489": 1255, "488": 1255, "argentinean": 1255, "480": [1255, 1298], "bdolan44": 1255, "dara74k": 1255, "gavi": 1255, "jacaicedob": 1255, "wx": 1255, "pfhein": 1255, "tamisalex": 1255, "469": 1255, "468": 1255, "467": 1255, "luminos": 1255, "464": 1255, "455": 1255, "hclass": 1255, "447": 1255, "439": 1255, "434": 1255, "433": 1255, "427": 1255, "411": 1255, "404": 1255, "388": 1255, "cross_section_ppi": [1255, 1287], "380": 1255, "dim": 1255, "477": 1255, "472": 1255, "471": 1255, "plot_range_r": [1255, 1276, 1277, 1279], "470": 1255, "460": 1255, "get_field_colormap": 1255, "446": 1255, "444": 1255, "example_cfradial_rhi": 1255, "441": 1255, "417": 1255, "struct": 1255, "pack": 1255, "410": 1255, "383": 1255, "unicod": 1255, "382": 1255, "gatefit": 1255, "372": 1255, "465": 1255, "refactor": 1255, "463": 1255, "decor": 1255, "block": 1255, "416": 1255, "392": 1255, "radxcovert": 1255, "clarifi": 1255, "475": 1255, "406": 1255, "add_field_lik": [1255, 1266], "397": 1255, "391": 1255, "376": 1255, "370": 1255, "corner_to_point": 1255, "473": 1255, "466": [1255, 1295], "456": 1255, "resolv": 1255, "outstand": 1255, "412": 1255, "413": 1255, "454": 1255, "453": 1255, "449": 1255, "438": 1255, "437": 1255, "430": 1255, "426": 1255, "miniconda": [1255, 1296, 1306], "reactiv": 1255, "422": 1255, "plot_map_one_radar_to_grid": [1255, 1269], "420": [1255, 1298], "419": 1255, "408": 1255, "radardisplai": [1255, 1257, 1258, 1271, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1291, 1293], "resilli": 1255, "403": [1255, 1288], "write_mdv_grid": 1255, "402": 1255, "dealias_region_bas": [1255, 1258, 1300], "401": 1255, "399": 1255, "395": 1255, "documen": 1255, "add_2d_latlon_axi": 1255, "394": 1255, "378": 1255, "acess": 1255, "377": 1255, "373": 1255, "deeplycloudi": 1255, "368": 1255, "358": [1255, 1306], "edge_netcdf": 1255, "read_edge_netcdf": 1255, "357": [1255, 1306], "dealias_fourdd": 1255, "348": 1255, "346": 1255, "336": 1255, "creation": 1255, "330": [1255, 1296, 1306], "326": [1255, 1295], "308": 1255, "361": 1255, "refl_filter_flag": 1255, "map_gate_to_grid": 1255, "334": 1255, "region_dealia": 1255, "327": 1255, "libm": 1255, "posix": 1255, "319": 1255, "unnecessari": 1255, "inmemoryfil": 1255, "365": 1255, "359": [1255, 1306], "354": 1255, "_rsl_interfac": 1255, "pyx": 1255, "342": 1255, "latest": [1255, 1296, 1306], "binstar": 1255, "337": 1255, "320": 1255, "317": 1255, "362": 1255, "plot_grid_three_panel": 1255, "353": 1255, "confus": 1255, "331": 1255, "363": 1255, "340": 1255, "externalis": 1255, "339": 1255, "333": 1255, "332": [1255, 1288], "324": 1255, "323": 1255, "271": 1255, "binar": 1255, "266": 1255, "313": 1255, "312": 1255, "290": 1255, "286": 1255, "280": 1255, "273": 1255, "272": 1255, "261": 1255, "256": [1255, 1271, 1293], "dealias_phase_unwrap": 1255, "radarmapdispl": 1255, "249": 1255, "discontin": 1255, "315": 1255, "misc": 1255, "314": 1255, "303": 1255, "288": 1255, "fault": 1255, "276": 1255, "dealias_unwrap_phas": 1255, "275": 1255, "corrupt": 1255, "269": 1255, "307": 1255, "283": 1255, "inconsist": 1255, "274": 1255, "254": 1255, "fallback": 1255, "245": 1255, "316": 1255, "ngates_vart": 1255, "301": 1255, "310": 1255, "py3": [1255, 1308], "nexrad_level2": 1255, "nexrad_level3": 1255, "309": 1255, "306": 1255, "1byte": 1255, "305": 1255, "weathergod": 1255, "296": 1255, "293": 1255, "292": 1255, "289": 1255, "291": 1255, "138": 1255, "284": [1255, 1264, 1288], "277": 1255, "alter": 1255, "267": 1255, "latlon": 1255, "264": 1255, "262": 1255, "260": [1255, 1295], "259": 1255, "258": 1255, "241": [1255, 1267], "rebuild": 1255, "237": 1255, "sphx_glr_examples_correct_plot_attenu": [1256, 1259, 1260], "sphx_glr_examples_correct_plot_dealia": [1256, 1259, 1260], "__doc__": [1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1292], "jonathan": [1257, 1258, 1267, 1268, 1275, 1276, 1278, 1280, 1284, 1287, 1308], "helmu": [1257, 1258, 1267, 1268, 1275, 1276, 1278, 1280, 1284, 1287, 1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306, 1308], "anl": [1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1282, 1283, 1284, 1285, 1287, 1290, 1291], "licens": [1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1296, 1306], "bsd": [1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1296, 1306], "claus": [1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1306], "pyplot": [1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1298, 1299, 1300, 1302, 1303], "pyart": [1257, 1258, 1262, 1263, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1308], "get_test_data": [1257, 1258, 1266, 1267, 1268, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1291, 1292], "sgpcsaprsurcmaci7": [1257, 1299], "c0": [1257, 1280, 1281, 1285, 1299], "20110520": [1257, 1299], "095101": [1257, 1299], "read_cfradi": [1257, 1266, 1268, 1272, 1280, 1281, 1285, 1293, 1294], "pop": 1257, "specific_attenu": [1257, 1293, 1298, 1303], "corrected_reflectivity_horizont": [1257, 1268, 1272, 1290, 1298], "calculate_attenu": 1257, "add_field": [1257, 1258, 1292, 1293, 1299, 1300, 1306], "figsiz": [1257, 1258, 1262, 1263, 1266, 1271, 1272, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1291, 1292, 1293, 1299, 1300, 1302, 1303], "ax1": [1257, 1258, 1272, 1286, 1287, 1292], "add_subplot": [1257, 1258, 1267, 1268, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1287], "131": [1257, 1292], "raw": [1257, 1258, 1296], "ax2": [1257, 1258, 1266, 1272, 1286, 1287, 1291, 1292, 1300], "132": [1257, 1292], "ax3": [1257, 1258, 1286, 1292], "133": [1257, 1292], "suptitl": [1257, 1258, 1285, 1294], "fontsiz": [1257, 1258, 1271, 1273, 1282, 1283], "ial": 1258, "095636": [1258, 1300], "sonde_fil": 1258, "sgpinterpolatedsondec1": 1258, "c1": [1258, 1303], "20110510": 1258, "000000": 1258, "cdf": 1258, "read_arm_sonde_vap": 1258, "exclude_transit": [1258, 1267, 1268, 1272, 1291], "exclude_invalid": 1258, "exclude_outsid": 1258, "80": [1258, 1286, 1291], "dealias_data": 1258, "corrected_veloc": [1258, 1294, 1300, 1303], "sixth": 1258, "221": [1258, 1275], "223": [1258, 1275], "ax4": 1258, "224": [1258, 1275], "496": 1259, "examples_correct": 1259, "plot_dealia": 1259, "386": 1259, "mb": [1259, 1264, 1269, 1288, 1295], "plot_attenu": 1259, "download": [1260, 1296, 1306, 1308], "varieti": [1260, 1261, 1306], "sphx_glr_examples_io_plot_older_nexrad_data_aw": [1260, 1261, 1264], "sphx_glr_examples_io_plot_nexrad_data_aw": [1260, 1261, 1264], "sphx_glr_examples_mapping_plot_map_one_radar_to_grid": [1260, 1265, 1269], "sphx_glr_examples_mapping_plot_map_two_radars_to_grid": [1260, 1265, 1269], "sphx_glr_examples_mapping_plot_compare_two_radars_gatemapp": [1260, 1265, 1269], "sphx_glr_examples_plotting_plot_rhi_mdv": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_ppi_mdv": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_ppi_cfradi": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_nexrad_reflect": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_xsect": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_rhi_cfradial_singlescan": [1260, 1270, 1288], "panel": [1260, 1270], "sphx_glr_examples_plotting_plot_rhi_two_panel": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_nexrad_multiple_mo": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_rhi_cfradi": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_three_panel_gridmapdisplai": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_ppi_with_r": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_nexrad_image_muted_reflect": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_cross_sect": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_rhi_data_overlai": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_modify_colorbar": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_rhi_contours_differential_reflect": [1260, 1270, 1288], "sphx_glr_examples_plotting_plot_choose_a_colormap": [1260, 1270, 1288], "sphx_glr_examples_retrieve_plot_column_subset": [1260, 1289, 1295], "sphx_glr_examples_retrieve_plot_composite_reflect": [1260, 1289, 1295], "sphx_glr_examples_retrieve_plot_vad": [1260, 1289, 1295], "sphx_glr_examples_retrieve_plot_hydrometeor": [1260, 1289, 1295], "sphx_glr_examples_retrieve_plot_convective_stratiform": [1260, 1289, 1295], "examples_python": 1260, "zip": [1260, 1271, 1296], "examples_jupyt": 1260, "next": 1262, "grover": [1262, 1266, 1271, 1272, 1277, 1285, 1290, 1291], "mgrover": [1262, 1266, 1271, 1272, 1277, 1285, 1290, 1291], "ccr": [1262, 1263, 1266, 1272, 1273, 1279, 1286, 1290, 1292, 1299, 1300, 1303], "administr": 1262, "level2": [1262, 1263, 1274, 1292], "organ": 1262, "year": [1262, 1263, 1306], "month": [1262, 1263], "radarsit": [1262, 1263], "minut": [1262, 1263, 1266], "_v06": 1262, "houston": 1262, "texa": 1262, "khgx": 1262, "march": 1262, "utc": [1262, 1263, 1285], "aws_nexrad_level2_fil": [1262, 1263], "03": [1262, 1288, 1295], "khgx20220322_120125_v06": 1262, "read_nexrad_arch": [1262, 1263, 1274, 1275, 1276, 1292], "summari": 1262, "121": [1262, 1266, 1272, 1291], "relect": 1262, "z_": [1262, 1266, 1273], "v_": 1262, "70": [1262, 1266, 1272], "n0u": 1262, "noq": 1262, "level3": 1262, "aws_nexrad_level3_velocity_fil": 1262, "hgx_n0u_2022_03_22_12_01_25": 1262, "aws_nexrad_level3_reflectivity_fil": 1262, "hgx_n0q_2022_03_22_12_01_25": 1262, "read_nexrad_level3": 1262, "radar_level3_veloc": 1262, "radar_level3_reflect": 1262, "confirm": [1262, 1298], "reflectivity_displai": 1262, "velocity_displai": 1262, "zachari": 1263, "sherman": 1263, "zsherman": [1263, 1308], "our": [1263, 1266, 1271, 1272, 1290, 1292], "tendenc": 1263, "usual": [1263, 1306], "gz": 1263, "handford": 1263, "ca": 1263, "khnx": 1263, "juli": 1263, "0203": 1263, "v06": 1263, "khnx20060724_020338": 1263, "filepath": 1263, "clearli": 1263, "lucki": 1263, "plote": [1263, 1279], "central_latitud": [1263, 1279, 1292, 1299], "central_longitud": [1263, 1279, 1292, 1299], "examples_io": 1264, "plot_nexrad_data_aw": 1264, "629": 1264, "plot_older_nexrad_data_aw": 1264, "09": [1264, 1288, 1292], "bobbi": 1266, "jackson": 1266, "rjackson": 1266, "filterwarn": 1266, "xsapr": [1266, 1268, 1272], "xsapr_sw_fil": [1266, 1268, 1272], "swx_20120520_0641": [1266, 1268, 1271, 1272, 1273, 1277, 1287, 1290, 1291, 1292], "xsapr_se_fil": [1266, 1268, 1272], "sex_20120520_0641": [1266, 1268, 1272], "radar_sw": [1266, 1268, 1272], "radar_s": [1266, 1268, 1272], "southwestern": 1266, "southeastern": 1266, "gmapper": 1266, "radar_sw_mapped_to_radar_s": 1266, "disp1": 1266, "37": [1266, 1290, 1303], "98": [1266, 1290, 1303], "arang": [1266, 1279, 1282, 1283, 1290, 1293, 1294, 1306], "96": [1266, 1303], "disp2": 1266, "remap": 1266, "difficult": 1266, "eyebal": 1266, "fortun": 1266, "mind": [1266, 1306], "cours": [1266, 1306], "reflectivity_se_radar": 1266, "reflectivity_sw_radar": 1266, "reflectivity_differ": 1266, "reflectivity_bia": 1266, "111": [1266, 1267, 1268, 1273, 1276, 1277, 1278, 1282, 1283, 1284, 1290], "pyart_bal": [1266, 1285, 1300], "southwest": 1266, "xspar": 1266, "southeast": 1266, "neccessarili": 1266, "incl_gat": 1266, "argwher": 1266, "refl_s": 1266, "refl_sw": 1266, "values_without_mask": 1266, "logical_and": 1266, "flatten": 1266, "hist": [1266, 1300], "histogram2d": 1266, "masked_wher": [1266, 1303], "meshgrid": 1266, "pyart_homeyerrainbow": [1266, 1271, 1272, 1273, 1278, 1281, 1285, 1286, 1291], "log_": 1266, "xlabel": [1266, 1280, 1281, 1300], "ylabel": [1266, 1280, 1281, 1300], "110635": [1267, 1278, 1302], "123000": 1267, "xsarp": [1268, 1280, 1281], "gatefilter_s": [1268, 1272], "exclude_abov": [1268, 1272, 1300], "gatefilter_sw": [1268, 1272], "201": [1268, 1292, 1302], "57861": [1268, 1272], "363611": [1268, 1272], "48": 1268, "238": 1269, "examples_map": 1269, "plot_compare_two_radars_gatemapp": 1269, "505": 1269, "plot_map_two_radars_to_grid": 1269, "198": 1269, "vstack": 1271, "plot_color_gradi": 1271, "cmap_categori": 1271, "cmap_list": 1271, "nrow": 1271, "len": [1271, 1285, 1293, 1298], "figh": 1271, "subplots_adjust": [1271, 1280, 1281], "set_titl": [1271, 1292], "14": [1271, 1273, 1304], "cmap_nam": 1271, "auto": 1271, "pyart_": 1271, "va": 1271, "transax": 1271, "spine": 1271, "set_axis_off": 1271, "colorblind": 1271, "langrainbow12": 1271, "chasespectr": 1271, "spectralextend": 1271, "perceptu": [1271, 1274], "light": [1271, 1293], "bu10": 1271, "bu7": 1271, "gray5": 1271, "gray9": 1271, "diverg": 1271, "meaning": 1271, "bluebrown11": 1271, "brbu10": 1271, "brbu12": 1271, "budor12": 1271, "budor18": 1271, "budrd12": 1271, "budrd18": 1271, "bugr14": 1271, "bugy8": 1271, "buor10": 1271, "buor12": 1271, "buor8": 1271, "buorr14": 1271, "grmg16": 1271, "rdylbu11b": 1271, "There": [1271, 1305, 1308], "bluebrown10": 1271, "nwsref": 1271, "carbone11": 1271, "carbone17": 1271, "carbone42": 1271, "cat12": 1271, "ewilson17": 1271, "nwsvel": 1271, "nws_spw": 1271, "pd17": 1271, "rrate11": 1271, "refdiff": 1271, "scook18": 1271, "stepseq25": 1271, "symgray12": 1271, "theodore16": 1271, "wild25": 1271, "spectral_r": 1271, "rememb": 1271, "front": 1271, "shown": 1271, "181": 1272, "scatter": [1272, 1290], "tab": 1272, "blue": [1272, 1282, 1283], "legend": 1272, "plot_cross_sect": [1272, 1288], "colobar": 1273, "joe": 1273, "brien": 1273, "obrienj": 1273, "perfect": 1273, "gridlin": 1273, "gl": 1273, "draw_label": 1273, "grai": [1273, 1274], "gca": 1273, "set_major_loc": 1273, "nullloc": 1273, "top_label": 1273, "right_label": 1273, "xlabel_styl": 1273, "ylabel_styl": 1273, "axsb": 1273, "ppi_map": 1273, "cbar": 1273, "set_label": 1273, "set_tick": 1273, "reduc": [1274, 1305], "promin": 1274, "deemphas": 1274, "depict": 1274, "ultim": 1274, "misinterpret": 1274, "laura": [1274, 1292], "lmtomkin": [1274, 1292], "ncsu": [1274, 1292], "mcolor": [1274, 1292], "nexrad_fil": [1274, 1292], "kbgm": 1274, "kbgm20200207_132642_v06": 1274, "image_mute_radar": [1274, 1292], "cross_correlation_ratio": [1274, 1275, 1292, 1303, 1304], "magma_cmap": 1274, "get_cmap": [1274, 1292], "magma_r": [1274, 1292], "grays_cmap": 1274, "gray_r": 1274, "nonmuted_cmap": 1274, "linearsegmentedcolormap": [1274, 1292], "from_list": [1274, 1292], "muted_cmap": 1274, "nonmuted_reflect": [1274, 1292], "muted_reflect": 1274, "300": [1274, 1275, 1298], "set_aspect": [1274, 1292, 1293], "katx20130717_195021_v06": [1275, 1304], "differential_phas": [1275, 1303, 1304], "level2_katx_20130717_1950": 1276, "ar2v": 1276, "super": [1276, 1299, 1302], "plot_cross_hair": 1277, "150": [1278, 1300], "jason": [1279, 1286], "hemeding": [1279, 1286], "nsaxsaprppic1": 1279, "a1": 1279, "20140201": 1279, "184802": 1279, "157": 1279, "156": 1279, "71": 1279, "158": 1279, "154": 1279, "69": 1279, "72": 1279, "40km": 1279, "plot_line_xi": 1279, "plot_point": 1279, "sgpxsaprrhicmaci5": [1280, 1281, 1285], "20110524": [1280, 1281, 1285], "015604_nc4": [1280, 1281, 1285], "instrument_nam": [1280, 1281, 1304], "hspace": [1280, 1281], "agl": 1280, "fac": 1280, "nplot": [1280, 1281, 1285], "snum": 1280, "hsrhi": [1280, 1281], "3f": [1280, 1281], "time_start": 1280, "num2dat": 1280, "only_use_cftime_datetim": 1280, "only_use_python_datetim": 1280, "figure_titl": 1280, "isoformat": 1280, "differnenti": 1282, "cori": [1282, 1283], "weber": [1282, 1283], "cweber": [1282, 1283], "220629": 1282, "white": 1282, "matplolib": 1282, "visabl": 1282, "border": 1282, "flow": 1282, "paramt": 1282, "compens": 1282, "patch": 1282, "nearli": 1282, "00015": 1282, "veri": [1282, 1292], "antialias": [1282, 1283], "moir": 1282, "get_start": [1282, 1283], "get_end": [1282, 1283], "blur": 1282, "nice": [1282, 1305], "arbirarli": 1282, "impact": 1282, "gaussian_filt": [1282, 1283], "levels_rain": 1282, "levels_ic": 1282, "contours_ic": 1282, "contours_rain": 1282, "red": [1282, 1283], "fmt": [1282, 1283], "0000": [1282, 1283], "clabel": [1282, 1283], "inlin": [1282, 1283], "spyi": 1283, "034142": 1283, "ramp": 1283, "com": [1283, 1305, 1306, 1308], "blob": 1283, "pyart_budrd18": 1283, "comment": [1283, 1304], "coutour": 1283, "solid": 1283, "dot": 1283, "major": 1283, "axhlin": 1283, "dash": 1283, "axvlin": 1283, "00b4ff": 1283, "ff6800": 1283, "set_ylabel": [1283, 1294], "cp": 1283, "110041": 1284, "fields_to_plot": 1285, "plot_num": 1285, "u00b0": 1285, "20110520100000_nexrad_grid": 1286, "read_grid": 1286, "map_panel_ax": 1286, "x_cut_panel_ax": 1286, "y_cut_panel_ax": 1286, "add_ax": 1286, "ref": 1286, "plot_crosshair": 1286, "plot_longitude_slic": 1286, "set_ylim": [1286, 1293], "set_xlim": [1286, 1293], "plot_latitude_slic": [1286, 1302], "225": 1287, "xsect": 1287, "211": 1287, "212": 1287, "tight_layout": 1287, "298": 1288, "examples_plot": 1288, "plot_rhi_data_overlai": 1288, "452": 1288, "213": 1288, "plot_three_panel_gridmapdisplai": 1288, "508": 1288, "plot_ppi_with_r": 1288, "plot_nexrad_image_muted_reflect": 1288, "04": 1288, "343": 1288, "plot_nexrad_multiple_mo": 1288, "884": 1288, "plot_modify_colorbar": 1288, "151": 1288, "plot_ppi_mdv": 1288, "plot_choose_a_colormap": 1288, "206": 1288, "plot_nexrad_reflect": 1288, "052": 1288, "plot_rhi_cfradi": 1288, "plot_rhi_contours_differential_reflect": 1288, "plot_rhi_cfradial_singlescan": 1288, "plot_xsect": 1288, "plot_ppi_cfradi": 1288, "plot_rhi_mdv": 1288, "922": 1288, "plot_rhi_two_panel": 1288, "850": 1288, "maxwel": [1290, 1291], "site_lon": 1290, "73": 1290, "site_lat": 1290, "latitdu": 1290, "get_field_loc": 1290, "compz": 1291, "composite_reflect": 1291, "composite_displai": 1291, "classifc": 1292, "summer": 1292, "ian": 1292, "footprint": 1292, "yield": 1292, "smoother": 1292, "rescal": 1292, "simpli": [1292, 1300, 1302, 1305, 1306, 1308], "plot_convstrat_schem": 1292, "pick": 1292, "radii": 1292, "dilat": 1292, "event": 1292, "extract_sweep": [1292, 1294], "conv_strat_yut": 1292, "convsf_mask": 1292, "masked_equ": 1292, "convsf": 1292, "magma_r_cmap": 1292, "ref_cmap": 1292, "albersequalarea": 1292, "convsf_und": 1292, "overestim": 1292, "convsf_ov": 1292, "uncertainti": 1292, "underest": 1292, "overest": 1292, "ktbw": 1292, "ktbw20220928_190142_v06": 1292, "rasumussen": 1292, "reflecit": 1292, "kokx": 1292, "kokx20210207_161413_v06": 1292, "nonmuted_ref": 1292, "masked_invalid": 1292, "nonmuted_ref_linear": 1292, "mm6": 1292, "m3": 1292, "snow_rat": 1292, "57": 1292, "67": 1292, "snow_rate_dict": 1292, "standard_nam": [1292, 1299, 1304], "hr": 1292, "40500": 1292, "purpos": 1292, "034": 1292, "ccotd": 1292, "rasmussen": 1292, "dixon": 1292, "vasiloff": 1292, "hage": 1292, "knight": 1292, "vivekanandan": 1292, "xu": 1292, "nowcast": 1292, "042": 1292, "3c0020": 1292, "snuart": 1292, "daniel": [1293, 1294], "open_radar_data": [1293, 1294], "fetch": [1293, 1294, 1306], "mll2217907250u": 1293, "003": 1293, "preinterpol": 1293, "20220628072500_savevol_cosmo_lookup_temp": 1293, "nwp_temp": 1293, "calculate_attenuation_zphi": 1293, "uncorrected_differential_phas": 1293, "pia": 1293, "pida": 1293, "corrected_reflect": [1293, 1303], "corrected_differential_reflect": [1293, 1303], "kdp_maesaka": 1293, "specific_differential_phas": [1293, 1303], "hydro": 1293, "hydroclass_semisupervis": 1293, "uncorrected_cross_correlation_ratio": 1293, "radar_echo_classif": 1293, "boundarynorm": 1293, "crystal": 1293, "rime": 1293, "particl": 1293, "graupel": 1293, "mla2119412050u": 1294, "zlevel": 1294, "u_allsweep": 1294, "v_allsweep": 1294, "idx": 1294, "radar_1sweep": 1294, "vad_brown": 1294, "u_avg": 1294, "nanmean": 1294, "v_avg": 1294, "rad2deg": 1294, "sharei": 1294, "set_xlabel": 1294, "859": 1295, "examples_retriev": 1295, "plot_convective_stratiform": 1295, "697": 1295, "plot_composite_reflect": 1295, "plot_vad": 1295, "plot_hydrometeor": 1295, "plot_column_subset": 1295, "depth": [1296, 1304, 1306], "conceptu": 1296, "understand": 1296, "search": [1296, 1305], "demonstr": 1296, "toolkit": [1296, 1298, 1299, 1300, 1302, 1303, 1304], "basi": 1296, "exploit": 1296, "superproject": 1296, "propos": 1296, "bleed": 1296, "among": 1296, "europ": 1296, "fmi": 1296, "windcub": 1296, "leospher": 1296, "gecsx": 1296, "research": [1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "facil": [1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "colli": [1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "languag": [1296, 1306], "e25": [1296, 1306], "5334": [1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "jor": [1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "119": [1296, 1298, 1299, 1300, 1302, 1303, 1304, 1306], "lainer": [1296, 1306], "schauweck": [1296, 1306], "ii": [1296, 1304], "sophist": 1296, "tutori": 1296, "erad": 1296, "easiest": [1296, 1306], "januari": 1296, "1st": 1296, "yml": [1296, 1308], "Or": 1296, "pyart_env": [1296, 1299, 1302, 1308], "pyart_mch": [1296, 1305, 1306, 1308], "termin": [1296, 1306, 1308], "prompt": [1296, 1306], "wish": 1296, "unreleas": 1296, "clone": [1296, 1305], "repositori": [1296, 1305, 1306, 1308], "Then": [1296, 1305, 1306], "scientif": [1296, 1306], "charg": 1296, "resourc": [1296, 1305], "lassen": 1296, "radtec": 1296, "rsl_path": [1296, 1305], "usr": 1296, "anaconda3": [1296, 1299, 1302, 1305, 1308], "fastest": 1296, "cbc": 1296, "glpk": 1296, "coincbc": [1296, 1305, 1308], "coin_install_dir": [1296, 1305, 1308], "discuss": 1296, "appreci": 1296, "sometim": 1298, "might": [1298, 1308], "hypothet": 1298, "partli": [1298, 1299, 1300, 1302, 1303, 1304], "depart": [1298, 1299, 1300, 1302, 1303, 1304], "energi": [1298, 1299, 1300, 1302, 1303, 1304], "radiat": [1298, 1299, 1300, 1302, 1303, 1304, 1306], "offic": [1298, 1299, 1300, 1302, 1303, 1304], "scienc": [1298, 1299, 1300, 1302, 1303, 1304], "jj": [1298, 1299, 1300, 1302, 1303, 1304], "sm": [1298, 1299, 1300, 1302, 1303, 1304], "test_radar": [1298, 1306], "idea": [1298, 1300], "dict_kei": [1298, 1303], "recalculated_diff_phas": 1298, "unf_dp_phase_shift": 1298, "rain_rate_a": [1298, 1303], "diff_reflect": 1298, "time_coverage_start": [1298, 1304], "time_coverage_end": 1298, "volume_numb": 1298, "platform_typ": 1298, "instrument_typ": 1298, "primary_axi": 1298, "make_empty_ppi_radar": 1298, "59416667": 1298, "As": [1298, 1300, 1302, 1303, 1306], "isn": 1298, "120": 1298, "240": 1298, "660": 1298, "720": 1298, "780": 1298, "900": 1298, "960": 1298, "1260": 1298, "1440": 1298, "1500": 1298, "1560": 1298, "1620": 1298, "1680": 1298, "1740": 1298, "1860": 1298, "1920": 1298, "1980": 1298, "2040": 1298, "2100": 1298, "2160": 1298, "2220": 1298, "2280": 1298, "2340": 1298, "2400": 1298, "2460": 1298, "2520": 1298, "2580": 1298, "2640": 1298, "2700": 1298, "2760": 1298, "2820": 1298, "2880": 1298, "2940": 1298, "3060": 1298, "3120": 1298, "3180": 1298, "3240": 1298, "3300": 1298, "3360": 1298, "3420": 1298, "3480": 1298, "3540": 1298, "3660": 1298, "3720": 1298, "3780": 1298, "3840": 1298, "3900": 1298, "3960": 1298, "4020": 1298, "4080": 1298, "4140": 1298, "4200": 1298, "4260": 1298, "4320": 1298, "4380": 1298, "4440": 1298, "4560": 1298, "4620": 1298, "4680": 1298, "4740": 1298, "4800": 1298, "4860": 1298, "4920": 1298, "4980": 1298, "5040": 1298, "5100": 1298, "5160": 1298, "5220": 1298, "5280": 1298, "5340": 1298, "5400": 1298, "5460": 1298, "5520": 1298, "5580": 1298, "5640": 1298, "5700": 1298, "5760": 1298, "5820": 1298, "5880": 1298, "5940": 1298, "6060": 1298, "6120": 1298, "6180": 1298, "6240": 1298, "6300": 1298, "6360": 1298, "6420": 1298, "6480": 1298, "6540": 1298, "6600": 1298, "6660": 1298, "6720": 1298, "6780": 1298, "6840": 1298, "6900": 1298, "6960": 1298, "7020": 1298, "7080": 1298, "7140": 1298, "7200": [1298, 1304], "7260": 1298, "7320": 1298, "7380": 1298, "7440": 1298, "7500": 1298, "7560": 1298, "7620": 1298, "7680": 1298, "7740": 1298, "7800": 1298, "7860": 1298, "7920": 1298, "7980": 1298, "8040": 1298, "8100": 1298, "8160": 1298, "8220": 1298, "8280": 1298, "8340": 1298, "8400": 1298, "8460": 1298, "8520": 1298, "8580": 1298, "8640": 1298, "8700": 1298, "8760": 1298, "8820": 1298, "8880": 1298, "8940": 1298, "9000": [1298, 1302], "9060": 1298, "9120": 1298, "9180": 1298, "9240": 1298, "9300": 1298, "9360": 1298, "9420": 1298, "9480": 1298, "9540": 1298, "9600": 1298, "9660": 1298, "9720": 1298, "9780": 1298, "9840": 1298, "9900": 1298, "9960": 1298, "10020": 1298, "10080": 1298, "10140": 1298, "10200": 1298, "10260": 1298, "10320": 1298, "10380": 1298, "10440": 1298, "10500": 1298, "10560": 1298, "10620": 1298, "10680": 1298, "10740": 1298, "10800": 1298, "10860": 1298, "10920": 1298, "10980": 1298, "11040": 1298, "11100": 1298, "11160": 1298, "11220": 1298, "11280": 1298, "11340": 1298, "11400": 1298, "11460": 1298, "11520": 1298, "11580": 1298, "11640": 1298, "11700": 1298, "11760": 1298, "11820": 1298, "11880": 1298, "11940": 1298, "12000": [1298, 1302], "12060": 1298, "12120": 1298, "12180": 1298, "12240": 1298, "12300": 1298, "12360": 1298, "12420": 1298, "12480": 1298, "12540": 1298, "12600": 1298, "12660": 1298, "12720": 1298, "12780": 1298, "12840": 1298, "12900": 1298, "12960": 1298, "13020": 1298, "13080": 1298, "13140": 1298, "13200": 1298, "13260": 1298, "13320": 1298, "13380": 1298, "13440": 1298, "13500": 1298, "13560": 1298, "13620": 1298, "13680": 1298, "13740": 1298, "13800": 1298, "13860": 1298, "13920": 1298, "13980": 1298, "14040": 1298, "14100": 1298, "14160": 1298, "14220": 1298, "14280": 1298, "14340": 1298, "14400": 1298, "14460": 1298, "14520": 1298, "14580": 1298, "14640": 1298, "14700": 1298, "14760": 1298, "14820": 1298, "14880": 1298, "14940": 1298, "15060": 1298, "15120": 1298, "15180": 1298, "15240": 1298, "15300": 1298, "15360": 1298, "15420": 1298, "15480": 1298, "15540": 1298, "15600": 1298, "15660": 1298, "15720": 1298, "15780": 1298, "15840": 1298, "15900": 1298, "15960": 1298, "16020": 1298, "16080": 1298, "16140": 1298, "16200": 1298, "16260": 1298, "16320": 1298, "16380": 1298, "16440": 1298, "16500": 1298, "16560": 1298, "16620": 1298, "16680": 1298, "16740": 1298, "16800": 1298, "16860": 1298, "16920": 1298, "16980": 1298, "17040": 1298, "17100": 1298, "17160": 1298, "17220": 1298, "17280": 1298, "17340": 1298, "17400": 1298, "17460": 1298, "17520": 1298, "17580": 1298, "17640": 1298, "17700": 1298, "17760": 1298, "17820": 1298, "17880": 1298, "17940": 1298, "18000": [1298, 1302], "18060": 1298, "18120": 1298, "18180": 1298, "18240": 1298, "18300": 1298, "18360": 1298, "18420": 1298, "18480": 1298, "18540": 1298, "18600": 1298, "18660": 1298, "18720": 1298, "18780": 1298, "18840": 1298, "18900": 1298, "18960": 1298, "19020": 1298, "19080": 1298, "19140": 1298, "19200": 1298, "19260": 1298, "19320": 1298, "19380": 1298, "19440": 1298, "19500": 1298, "19560": 1298, "19620": 1298, "19680": 1298, "19740": 1298, "19800": 1298, "19860": 1298, "19920": 1298, "19980": 1298, "20040": 1298, "20100": 1298, "20160": 1298, "20220": 1298, "20280": 1298, "20340": 1298, "20400": 1298, "20460": 1298, "20520": 1298, "20580": 1298, "20640": 1298, "20700": 1298, "20760": 1298, "20820": 1298, "20880": 1298, "20940": 1298, "21000": [1298, 1302], "21060": 1298, "21120": 1298, "21180": 1298, "21240": 1298, "21300": 1298, "21360": 1298, "21420": 1298, "21480": 1298, "21540": 1298, "21600": 1298, "21660": 1298, "21720": 1298, "21780": 1298, "21840": 1298, "21900": 1298, "21960": 1298, "22020": 1298, "22080": 1298, "22140": 1298, "22200": 1298, "22260": 1298, "22320": 1298, "22380": 1298, "22440": 1298, "22500": 1298, "22560": 1298, "22620": 1298, "22680": 1298, "22740": 1298, "22800": 1298, "22860": 1298, "22920": 1298, "22980": 1298, "23040": 1298, "23100": 1298, "23160": 1298, "23220": 1298, "23280": 1298, "23340": 1298, "23400": 1298, "23460": 1298, "23520": 1298, "23580": 1298, "23640": 1298, "23700": 1298, "23760": 1298, "23820": 1298, "23880": 1298, "23940": 1298, "24000": [1298, 1302], "24060": 1298, "24120": 1298, "24180": 1298, "24240": 1298, "24300": 1298, "24360": 1298, "24420": 1298, "24480": 1298, "24540": 1298, "24600": 1298, "24660": 1298, "24720": 1298, "24780": 1298, "24840": 1298, "24900": 1298, "24960": 1298, "25020": 1298, "25080": 1298, "25140": 1298, "25200": 1298, "25260": 1298, "25320": 1298, "25380": 1298, "25440": 1298, "25500": 1298, "25560": 1298, "25620": 1298, "25680": 1298, "25740": 1298, "25800": 1298, "25860": 1298, "25920": 1298, "25980": 1298, "26040": 1298, "26100": 1298, "26160": 1298, "26220": 1298, "26280": 1298, "26340": 1298, "26400": 1298, "26460": 1298, "26520": 1298, "26580": 1298, "26640": 1298, "26700": 1298, "26760": 1298, "26820": 1298, "26880": 1298, "26940": 1298, "27000": [1298, 1302], "27060": 1298, "27120": 1298, "27180": 1298, "27240": 1298, "27300": 1298, "27360": 1298, "27420": 1298, "27480": 1298, "27540": 1298, "27600": 1298, "27660": 1298, "27720": 1298, "27780": 1298, "27840": 1298, "27900": 1298, "27960": 1298, "28020": 1298, "28080": 1298, "28140": 1298, "28200": 1298, "28260": 1298, "28320": 1298, "28380": 1298, "28440": 1298, "28500": 1298, "28560": 1298, "28620": 1298, "28680": 1298, "28740": 1298, "28800": 1298, "28860": 1298, "28920": 1298, "28980": 1298, "29040": 1298, "29100": 1298, "29160": 1298, "29220": 1298, "29280": 1298, "29340": 1298, "29400": 1298, "29460": 1298, "29520": 1298, "29580": 1298, "29640": 1298, "29700": 1298, "29760": 1298, "29820": 1298, "29880": 1298, "29940": 1298, "30000": [1298, 1302], "30060": 1298, "30120": 1298, "30180": 1298, "30240": 1298, "30300": 1298, "30360": 1298, "30420": 1298, "30480": 1298, "30540": 1298, "30600": 1298, "30660": 1298, "30720": 1298, "30780": 1298, "30840": 1298, "30900": 1298, "30960": 1298, "31020": 1298, "31080": 1298, "31140": 1298, "31200": 1298, "31260": 1298, "31320": 1298, "31380": 1298, "31440": 1298, "31500": 1298, "31560": 1298, "31620": 1298, "31680": 1298, "31740": 1298, "31800": 1298, "31860": 1298, "31920": 1298, "31980": 1298, "32040": 1298, "32100": 1298, "32160": 1298, "32220": 1298, "32280": 1298, "32340": 1298, "32400": 1298, "32460": 1298, "32520": 1298, "32580": 1298, "32640": 1298, "32700": 1298, "32760": 1298, "32820": 1298, "32880": 1298, "32940": 1298, "33000": [1298, 1302], "33060": 1298, "33120": 1298, "33180": 1298, "33240": 1298, "33300": 1298, "33360": 1298, "33420": 1298, "33480": 1298, "33540": 1298, "33600": 1298, "33660": 1298, "33720": 1298, "33780": 1298, "33840": 1298, "33900": 1298, "33960": 1298, "34020": 1298, "34080": 1298, "34140": 1298, "34200": 1298, "34260": 1298, "34320": 1298, "34380": 1298, "34440": 1298, "34500": 1298, "34560": 1298, "34620": 1298, "34680": 1298, "34740": 1298, "34800": 1298, "34860": 1298, "34920": 1298, "34980": 1298, "35040": 1298, "35100": 1298, "35160": 1298, "35220": 1298, "35280": 1298, "35340": 1298, "35400": 1298, "35460": 1298, "35520": 1298, "35580": 1298, "35640": 1298, "35700": 1298, "35760": 1298, "35820": 1298, "35880": 1298, "35940": 1298, "36000": [1298, 1302], "36060": 1298, "36120": 1298, "36180": 1298, "36240": 1298, "36300": 1298, "36360": 1298, "36420": 1298, "36480": 1298, "36540": 1298, "36600": 1298, "36660": 1298, "36720": 1298, "36780": 1298, "36840": 1298, "36900": 1298, "36960": 1298, "37020": 1298, "37080": 1298, "37140": 1298, "37200": 1298, "37260": 1298, "37320": 1298, "37380": 1298, "37440": 1298, "37500": 1298, "37560": 1298, "37620": 1298, "37680": 1298, "37740": 1298, "37800": 1298, "37860": 1298, "37920": 1298, "37980": 1298, "38040": 1298, "38100": 1298, "38160": 1298, "38220": 1298, "38280": 1298, "38340": 1298, "38400": 1298, "38460": 1298, "38520": 1298, "38580": 1298, "38640": 1298, "38700": 1298, "38760": 1298, "38820": 1298, "38880": 1298, "38940": 1298, "39000": [1298, 1302], "39060": 1298, "39120": 1298, "39180": 1298, "39240": 1298, "39300": 1298, "39360": 1298, "39420": 1298, "39480": 1298, "39540": 1298, "39600": 1298, "39660": 1298, "39720": 1298, "39780": 1298, "39840": 1298, "39900": 1298, "39960": 1298, "squeez": 1298, "59416776": 1298, "59416886": 1298, "59489769": 1298, "59489879": 1298, "5948999": 1298, "59415662": 1298, "59414657": 1298, "5874659": 1298, "58745576": 1298, "58744563": 1298, "59414621": 1298, "59412575": 1298, "5805231": 1298, "58050246": 1298, "58048182": 1298, "59419881": 1298, "59423095": 1298, "61560159": 1298, "61563401": 1298, "61566644": 1298, "59418877": 1298, "59421087": 1298, "6089062": 1298, "6089285": 1298, "60895079": 1298, "59417836": 1298, "59419005": 1298, "60196382": 1298, "60197561": 1298, "60198741": 1298, "get_metadata": 1298, "ref_dict": 1298, "reflecitivity_horizont": 1298, "21875": 1298, "34375": 1298, "0078125": 1298, "2109375": 1298, "1171875": 1298, "59375": 1298, "421875": 1298, "5625": 1298, "7109375": 1298, "609375": 1298, "5078125": 1298, "3828125": 1298, "6875": 1298, "328125": 1298, "3203125": 1298, "859375": 1298, "6484375": 1298, "8515625": 1298, "9375": [1298, 1304], "0234375": 1298, "6328125": 1298, "2890625": 1298, "546875": 1298, "578125": 1298, "6796875": 1298, "ref_field": 1299, "ref_gt_0": 1299, "mask_dict": 1299, "reflectivity_mask": 1299, "coolwarm": 1299, "sherm": [1299, 1302], "lib": [1299, 1302, 1305], "782": [1299, 1302], "matplotlibdeprecationwarn": [1299, 1302], "set_xtick": [1299, 1302], "position": [1299, 1302], "deprec": [1299, 1302], "later": [1299, 1302], "xtick": [1299, 1302], "829": [1299, 1302], "set_ytick": [1299, 1302], "ytick": [1299, 1302], "write_cfradi": 1299, "2pi": 1300, "wave": 1300, "3pi": 1300, "phenomena": [1300, 1304], "maximium": 1300, "unambi": 1300, "preprocess": 1300, "thankfulli": [1300, 1302], "surround": [1300, 1302], "presenc": 1300, "524973": 1300, "vel_textur": 1300, "velocity_textur": [1300, 1303], "vleociti": 1300, "At": 1300, "velocity_dealias": 1300, "realist": 1300, "gates_to_grid": 1302, "deprecationwarn": 1302, "99000": 1302, "98000": 1302, "97000": 1302, "96000": 1302, "95000": 1302, "94000": 1302, "93000": 1302, "92000": 1302, "91000": 1302, "90000": 1302, "89000": 1302, "88000": 1302, "87000": 1302, "86000": 1302, "85000": 1302, "84000": 1302, "83000": 1302, "82000": 1302, "81000": 1302, "80000": 1302, "79000": 1302, "78000": 1302, "77000": 1302, "76000": 1302, "75000": 1302, "74000": 1302, "73000": 1302, "72000": 1302, "71000": 1302, "70000": 1302, "69000": 1302, "68000": 1302, "67000": 1302, "66000": 1302, "65000": 1302, "64000": 1302, "63000": 1302, "62000": 1302, "61000": 1302, "59000": 1302, "58000": 1302, "57000": 1302, "56000": 1302, "55000": 1302, "54000": 1302, "53000": 1302, "52000": 1302, "51000": 1302, "49000": 1302, "48000": 1302, "47000": 1302, "46000": 1302, "45000": 1302, "44000": 1302, "43000": 1302, "42000": 1302, "41000": 1302, "38000": 1302, "37000": 1302, "35000": 1302, "34000": 1302, "32000": 1302, "31000": 1302, "29000": 1302, "28000": 1302, "26000": 1302, "23000": 1302, "22000": 1302, "19000": 1302, "16000": 1302, "14000": 1302, "13000": 1302, "8000": 1302, "7000": 1302, "longitudn": 1302, "latitudn": 1302, "suffer": 1302, "artifici": 1302, "feather": 1302, "grid_bett": 1302, "1750": 1302, "sgpxsaprcmacsuri5": 1303, "20171004": 1303, "203018": 1303, "total_pow": 1303, "spectrum_width": [1303, 1304], "xsapr_clutt": 1303, "sounding_temperatur": 1303, "signal_to_noise_ratio": 1303, "unfolded_differential_phas": 1303, "corrected_differential_phas": 1303, "filtered_corrected_differential_phas": 1303, "corrected_specific_diff_phas": 1303, "filtered_corrected_specific_diff_phas": 1303, "path_integrated_attenu": 1303, "specific_differential_attenu": 1303, "path_integrated_differential_attenu": 1303, "trip": 1303, "nonhydrometeor": 1303, "analyz": [1303, 1306], "exclude_equ": 1303, "cleaner": 1303, "tell": 1303, "refl_arrai": 1303, "reflectivity_w_mask": 1303, "iter_slic": [1303, 1304], "9344453454202706": 1303, "620691732853737": 1303, "3756584054113996": 1303, "597935968662154": 1303, "696735014111216": 1303, "061894569912447": 1303, "721673265240488": 1303, "086695918593689": 1303, "33930700509078": 1303, "599363169483158": 1303, "836875745223637": 1303, "051601529570966": 1303, "22435547210836": 1303, "378109469982695": 1303, "553820234067336": 1303, "648943841665002": 1303, "837593740986444": 1303, "049614721040282": 1303, "331202567459613": 1303, "585432697375357": 1303, "87002341270722": 1303, "993012637722325": 1303, "061966001642219": 1303, "122799449619672": 1303, "861035552720102": 1303, "74608994279257": 1303, "148801770281325": 1303, "70860719727862": 1303, "989513966551444": 1303, "188644935344827": 1303, "89301878240611": 1303, "172644371021923": 1303, "79879842243138": 1303, "912806090219976": 1303, "766281467013889": 1303, "920522471877334": 1303, "898600907318164": 1303, "971026055481874": 1303, "110503947133682": 1303, "094456418731509": 1303, "0822160050675675": 1303, "036430544969512": 1303, "259332430219459": 1303, "2438254054588604": 1303, "473482666015625": 1303, "574283685503023": 1303, "866719139946832": 1303, "771468742643597": 1303, "beam_azimuth_angl": 1304, "azimuth_angle_from_true_north": 1304, "radial_azimuth_coordin": 1304, "beam_elevation_angl": 1304, "elevation_angle_from_horizontal_plan": 1304, "radial_elevation_coordin": 1304, "1832": 1304, "log_differential_reflectivity_hv": 1304, "875": 1304, "9999": 1304, "differential_phase_hv": 1304, "equivalent_reflectivity_factor": 1304, "cross_correlation_ratio_hv": 1304, "correlation_ratio": 1304, "meters_per_second": 1304, "doppler_spectrum_width": 1304, "63": 1304, "radial_velocity_of_scatterers_away_from_instru": 1304, "95": 1304, "target_fixed_angl": 1304, "unambiguous_rang": 1304, "unambigu": 1304, "degrees_north": 1304, "degrees_east": 1304, "projection_range_coordin": 1304, "range_to_measurement_volum": 1304, "radial_range_coordin": 1304, "spacing_is_const": 1304, "meters_to_center_of_first_g": 1304, "2125": 1304, "meters_between_g": 1304, "int32": 1304, "s20": 1304, "unitless": 1304, "coplan": 1304, "vertical_point": 1304, "idl": 1304, "azimuth_surveil": 1304, "elevation_surveil": 1304, "sunscan": 1304, "manual_ppi": 1304, "manual_rhi": 1304, "17t19": 1304, "21z": 1304, "time_in_seconds_since_volume_start": 1304, "calendar": 1304, "gregorian": 1304, "histori": 1304, "katx": 1304, "original_contain": 1304, "vcp_pattern": 1304, "7470703": 1304, "7196045": 1304, "6893921": 1304, "511719": 1304, "get_slic": 1304, "sweep_1": 1304, "52734375": 1304, "indici": 1304, "slice_indic": 1304, "9066728410400056": 1304, "478547577741713": 1304, "587792083929423": 1304, "871031288639269": 1304, "971692217963673": 1304, "830616390843327": 1304, "108188248095756": 1304, "483419908190385": 1304, "88976917057903": 1304, "852766685681688": 1304, "410455582269897": 1304, "66444787446138": 1304, "997862391449566": 1304, "172098402018502": 1304, "489752513534416": 1304, "712565619531706": 1304, "commonli": 1304, "8x": 1305, "But": 1305, "bash": 1305, "export": [1305, 1308], "pythonpath": 1305, "pth": 1305, "build_ext": 1305, "pip": [1305, 1306, 1308], "segfault": 1305, "Theres": 1305, "reinstal": 1305, "remedi": 1305, "fno": 1305, "protector": 1305, "d_fortify_sourc": 1305, "cflag": 1305, "makefil": 1305, "troubl": 1305, "my": 1305, "define_macro": 1305, "macro": 1305, "extra_compile_arg": 1305, "m32": 1305, "extra_link_arg": 1305, "m64": 1305, "proj_lib": 1305, "xx": 1305, "usernam": 1305, "xxx": 1305, "mpl_toolkit": 1305, "offici": 1306, "openradar": 1306, "ev": 1306, "pyart_short_cours": 1306, "youtub": 1306, "watch": 1306, "diip": 1306, "q3bkzw": 1306, "auto_exampl": 1306, "book": 1306, "popular": 1306, "pycodestyl": 1306, "pylint": 1306, "0008": 1306, "highli": 1306, "tast": 1306, "readthedoc": 1306, "brief": 1306, "third": 1306, "parti": 1306, "glob": 1306, "explain": 1306, "velocity_azimuth_displai": 1306, "_inverse_dist_squar": 1306, "_average1d": 1306, "seen": 1306, "explan": 1306, "__init__": 1306, "ran": 1306, "rerun": 1306, "test_vad": 1306, "make_target_radar": 1306, "ones_lik": 1306, "z_start": 1306, "z_end": 1306, "z_count": 1306, "vad_height": 1306, "vad_spe": 1306, "98665725": 1306, "94020686": 1306, "88107152": 1306, "81939374": 1306, "75851962": 1306, "vad_direct": 1306, "84659496": 1306, "30240553": 1306, "58658589": 1306, "81073051": 1306, "01353486": 1306, "01335138": 1306, "06014712": 1306, "12039762": 1306, "18410404": 1306, "24791911": 1306, "98663937": 1306, "9398407": 1306, "87958641": 1306, "81587601": 1306, "75205693": 1306, "assert_almost_equ": 1306, "pyarg": 1306, "test_cfradi": 1306, "cd": 1306, "fork": 1306, "cartopy_map": 1306, "branch_nam": 1306, "checkout": 1306, "task": 1306, "untrack": 1306, "acronym": 1306, "finish": [1306, 1308], "quotat": 1306, "enter": 1306, "acronymn": 1306, "gitwash": 1306, "development_workflow": 1306, "editor": [1306, 1308], "whitespac": 1306, "vim": 1306, "thing": 1306, "ff": 1306, "checker": 1306, "travisci": 1306, "sit": 1306, "blog_post": 1306, "instruct": 1307, "contributor": 1307, "conflict": 1308, "ask": 1308, "exit": 1308, "led": 1308, "recent": 1308, "manag": 1308, "activ": 1308, "deactiv": 1308, "enviro": 1308, "scratch": 1308, "ipython": 1308, "spyder": 1308, "though": 1308, "yourusernam": 1308, "youranacondadir": 1308, "machin": 1308, "gitter": 1308, "im": 1308}, "objects": {"pyart": [[537, 0, 1, "", "_debug_info"], [538, 1, 0, "-", "aux_io"], [580, 1, 0, "-", "bridge"], [582, 1, 0, "-", "config"], [594, 1, 0, "-", "core"], [676, 1, 0, "-", "correct"], [747, 1, 0, "-", "exceptions"], [748, 1, 0, "-", "filters"], [785, 1, 0, "-", "graph"], [961, 1, 0, "-", "io"], [984, 1, 0, "-", "lazydict"], [1008, 1, 0, "-", "map"], [1021, 1, 0, "-", "retrieve"], [1114, 1, 0, "-", "testing"], [1199, 1, 0, "-", "util"]], "pyart.aux_io": [[539, 0, 1, "", "convert_data"], [540, 0, 1, "", "get_library"], [541, 0, 1, "", "read_bin"], [542, 0, 1, "", "read_bin_mf"], [543, 0, 1, "", "read_cartesian_metranet"], [544, 0, 1, "", "read_cf1"], [545, 0, 1, "", "read_cf1_cartesian"], [546, 0, 1, "", "read_cf1_cartesian_mf"], [547, 0, 1, "", "read_d3r_gcpex_nc"], [548, 0, 1, "", "read_dat_mf"], [549, 0, 1, "", "read_edge_netcdf"], [550, 0, 1, "", "read_file_c"], [551, 0, 1, "", "read_file_py"], [552, 0, 1, "", "read_gamic"], [553, 0, 1, "", "read_gif"], [554, 0, 1, "", "read_grib"], [555, 0, 1, "", "read_hpl"], [556, 0, 1, "", "read_iq"], [557, 0, 1, "", "read_kazr"], [558, 0, 1, "", "read_metranet"], [559, 0, 1, "", "read_noxp_iphex_nc"], [560, 0, 1, "", "read_odim_grid_h5"], [561, 0, 1, "", "read_odim_h5"], [562, 0, 1, "", "read_odim_vp_h5"], [563, 0, 1, "", "read_pattern"], [564, 0, 1, "", "read_png"], [565, 0, 1, "", "read_product_c"], [566, 0, 1, "", "read_product_py"], [567, 0, 1, "", "read_psr_cpi_header"], [568, 0, 1, "", "read_psr_header"], [569, 0, 1, "", "read_psr_spectra"], [570, 0, 1, "", "read_radx"], [571, 0, 1, "", "read_rainbow_psr"], [572, 0, 1, "", "read_rainbow_psr_spectra"], [573, 0, 1, "", "read_rainbow_wrl"], [574, 0, 1, "", "read_sinarame_h5"], [575, 0, 1, "", "read_spectra"], [576, 0, 1, "", "write_odim_grid_h5"], [577, 0, 1, "", "write_odim_h5"], [578, 0, 1, "", "write_sinarame_cfradial"], [579, 0, 1, "", "write_spectra"]], "pyart.bridge": [[581, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[583, 2, 1, "", "FileMetadata"], [587, 0, 1, "", "get_field_colormap"], [588, 0, 1, "", "get_field_limits"], [589, 0, 1, "", "get_field_mapping"], [590, 0, 1, "", "get_field_name"], [591, 0, 1, "", "get_fillvalue"], [592, 0, 1, "", "get_metadata"], [593, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[584, 3, 1, "", "__call__"], [585, 3, 1, "", "get_field_name"], [586, 3, 1, "", "get_metadata"]], "pyart.core": [[595, 2, 1, "", "Grid"], [605, 2, 1, "", "HorizontalWindProfile"], [609, 2, 1, "", "Radar"], [638, 2, 1, "", "RadarSpectra"], [667, 0, 1, "", "antenna_to_cartesian"], [668, 0, 1, "", "antenna_vectors_to_cartesian"], [669, 0, 1, "", "cartesian_to_antenna"], [670, 0, 1, "", "cartesian_to_geographic"], [671, 0, 1, "", "cartesian_to_geographic_aeqd"], [672, 0, 1, "", "cartesian_vectors_to_geographic"], [673, 0, 1, "", "geographic_to_cartesian"], [674, 0, 1, "", "geographic_to_cartesian_aeqd"], [675, 0, 1, "", "wgs84_to_swissCH1903"]], "pyart.core.Grid": [[596, 3, 1, "", "add_field"], [597, 3, 1, "", "get_point_longitude_latitude"], [598, 3, 1, "", "get_projparams"], [599, 3, 1, "", "init_point_altitude"], [600, 3, 1, "", "init_point_longitude_latitude"], [601, 3, 1, "", "init_point_x_y_z"], [602, 4, 1, "", "projection_proj"], [603, 3, 1, "", "to_xarray"], [604, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[606, 3, 1, "", "from_u_and_v"], [607, 4, 1, "", "u_wind"], [608, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[610, 3, 1, "", "add_field"], [611, 3, 1, "", "add_field_like"], [612, 3, 1, "", "add_filter"], [613, 3, 1, "", "check_field_exists"], [614, 3, 1, "", "extract_sweeps"], [615, 3, 1, "", "get_azimuth"], [616, 3, 1, "", "get_elevation"], [617, 3, 1, "", "get_end"], [618, 3, 1, "", "get_field"], [619, 3, 1, "", "get_gate_area"], [620, 3, 1, "", "get_gate_lat_lon_alt"], [621, 3, 1, "", "get_gate_x_y_z"], [622, 3, 1, "", "get_nyquist_vel"], [623, 3, 1, "", "get_slice"], [624, 3, 1, "", "get_start"], [625, 3, 1, "", "get_start_end"], [626, 3, 1, "", "info"], [627, 3, 1, "", "init_gate_altitude"], [628, 3, 1, "", "init_gate_longitude_latitude"], [629, 3, 1, "", "init_gate_x_y_z"], [630, 3, 1, "", "init_rays_per_sweep"], [631, 3, 1, "", "iter_azimuth"], [632, 3, 1, "", "iter_elevation"], [633, 3, 1, "", "iter_end"], [634, 3, 1, "", "iter_field"], [635, 3, 1, "", "iter_slice"], [636, 3, 1, "", "iter_start"], [637, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[639, 3, 1, "", "add_field"], [640, 3, 1, "", "add_field_like"], [641, 3, 1, "", "add_filter"], [642, 3, 1, "", "check_field_exists"], [643, 3, 1, "", "extract_sweeps"], [644, 3, 1, "", "get_azimuth"], [645, 3, 1, "", "get_elevation"], [646, 3, 1, "", "get_end"], [647, 3, 1, "", "get_field"], [648, 3, 1, "", "get_gate_area"], [649, 3, 1, "", "get_gate_lat_lon_alt"], [650, 3, 1, "", "get_gate_x_y_z"], [651, 3, 1, "", "get_nyquist_vel"], [652, 3, 1, "", "get_slice"], [653, 3, 1, "", "get_start"], [654, 3, 1, "", "get_start_end"], [655, 3, 1, "", "info"], [656, 3, 1, "", "init_gate_altitude"], [657, 3, 1, "", "init_gate_longitude_latitude"], [658, 3, 1, "", "init_gate_x_y_z"], [659, 3, 1, "", "init_rays_per_sweep"], [660, 3, 1, "", "iter_azimuth"], [661, 3, 1, "", "iter_elevation"], [662, 3, 1, "", "iter_end"], [663, 3, 1, "", "iter_field"], [664, 3, 1, "", "iter_slice"], [665, 3, 1, "", "iter_start"], [666, 3, 1, "", "iter_start_end"]], "pyart.correct": [[677, 2, 1, "", "GateFilter"], [705, 0, 1, "", "calculate_attenuation"], [706, 0, 1, "", "calculate_attenuation_philinear"], [707, 0, 1, "", "calculate_attenuation_zphi"], [708, 0, 1, "", "compute_apparent_vpr"], [709, 0, 1, "", "compute_theoretical_vpr"], [710, 0, 1, "", "correct_bias"], [711, 0, 1, "", "correct_noise_rhohv"], [712, 0, 1, "", "correct_sys_phase"], [713, 0, 1, "", "correct_visibility"], [714, 0, 1, "", "correct_vpr"], [715, 0, 1, "", "correct_vpr_spatialised"], [716, 0, 1, "", "dealias_fourdd"], [717, 0, 1, "", "dealias_region_based"], [718, 0, 1, "", "dealias_unwrap_phase"], [719, 0, 1, "", "despeckle_field"], [720, 0, 1, "", "det_sys_phase_ray"], [721, 0, 1, "", "est_rhohv_rain"], [722, 0, 1, "", "est_zdr_precip"], [723, 0, 1, "", "est_zdr_snow"], [724, 0, 1, "", "find_objects"], [725, 0, 1, "", "gauss_fit"], [726, 0, 1, "", "get_mask_fzl"], [727, 0, 1, "", "get_sun_hits"], [728, 0, 1, "", "get_sun_hits_ivic"], [729, 0, 1, "", "get_sun_hits_psr"], [730, 0, 1, "", "moment_based_gate_filter"], [731, 0, 1, "", "phase_proc_lp"], [732, 0, 1, "", "phase_proc_lp_gf"], [733, 0, 1, "", "ptoa_to_sf"], [734, 0, 1, "", "retrieval_result"], [735, 0, 1, "", "scanning_losses"], [736, 0, 1, "", "selfconsistency_bias"], [737, 0, 1, "", "selfconsistency_bias2"], [738, 0, 1, "", "selfconsistency_kdp_phidp"], [739, 0, 1, "", "smooth_masked"], [740, 0, 1, "", "smooth_phidp_double_window"], [741, 0, 1, "", "smooth_phidp_single_window"], [742, 0, 1, "", "solar_flux_lookup"], [743, 0, 1, "", "sun_position_mfr"], [744, 0, 1, "", "sun_position_pysolar"], [745, 0, 1, "", "sun_power"], [746, 0, 1, "", "sun_retrieval"]], "pyart.correct.GateFilter": [[678, 3, 1, "", "copy"], [679, 3, 1, "", "exclude_above"], [680, 3, 1, "", "exclude_all"], [681, 3, 1, "", "exclude_below"], [682, 3, 1, "", "exclude_equal"], [683, 3, 1, "", "exclude_gates"], [684, 3, 1, "", "exclude_inside"], [685, 3, 1, "", "exclude_invalid"], [686, 3, 1, "", "exclude_masked"], [687, 3, 1, "", "exclude_none"], [688, 3, 1, "", "exclude_not_equal"], [689, 3, 1, "", "exclude_outside"], [690, 3, 1, "", "exclude_transition"], [691, 4, 1, "", "gate_excluded"], [692, 4, 1, "", "gate_included"], [693, 3, 1, "", "include_above"], [694, 3, 1, "", "include_all"], [695, 3, 1, "", "include_below"], [696, 3, 1, "", "include_equal"], [697, 3, 1, "", "include_gates"], [698, 3, 1, "", "include_inside"], [699, 3, 1, "", "include_none"], [700, 3, 1, "", "include_not_equal"], [701, 3, 1, "", "include_not_masked"], [702, 3, 1, "", "include_not_transition"], [703, 3, 1, "", "include_outside"], [704, 3, 1, "", "include_valid"]], "pyart.exceptions": [[161, 5, 1, "", "DeprecatedAttribute"], [162, 5, 1, "", "DeprecatedFunctionName"], [163, 5, 1, "", "MissingOptionalDependency"], [164, 0, 1, "", "_deprecated_alias"]], "pyart.filters": [[749, 2, 1, "", "GateFilter"], [777, 0, 1, "", "birds_gate_filter"], [778, 0, 1, "", "class_based_gate_filter"], [779, 0, 1, "", "iso0_based_gate_filter"], [780, 0, 1, "", "moment_and_texture_based_gate_filter"], [781, 0, 1, "", "moment_based_gate_filter"], [782, 0, 1, "", "snr_based_gate_filter"], [783, 0, 1, "", "temp_based_gate_filter"], [784, 0, 1, "", "visibility_based_gate_filter"]], "pyart.filters.GateFilter": [[750, 3, 1, "", "copy"], [751, 3, 1, "", "exclude_above"], [752, 3, 1, "", "exclude_all"], [753, 3, 1, "", "exclude_below"], [754, 3, 1, "", "exclude_equal"], [755, 3, 1, "", "exclude_gates"], [756, 3, 1, "", "exclude_inside"], [757, 3, 1, "", "exclude_invalid"], [758, 3, 1, "", "exclude_masked"], [759, 3, 1, "", "exclude_none"], [760, 3, 1, "", "exclude_not_equal"], [761, 3, 1, "", "exclude_outside"], [762, 3, 1, "", "exclude_transition"], [763, 4, 1, "", "gate_excluded"], [764, 4, 1, "", "gate_included"], [765, 3, 1, "", "include_above"], [766, 3, 1, "", "include_all"], [767, 3, 1, "", "include_below"], [768, 3, 1, "", "include_equal"], [769, 3, 1, "", "include_gates"], [770, 3, 1, "", "include_inside"], [771, 3, 1, "", "include_none"], [772, 3, 1, "", "include_not_equal"], [773, 3, 1, "", "include_not_masked"], [774, 3, 1, "", "include_not_transition"], [775, 3, 1, "", "include_outside"], [776, 3, 1, "", "include_valid"]], "pyart.graph": [[786, 2, 1, "", "AirborneRadarDisplay"], [820, 2, 1, "", "GridMapDisplay"], [839, 2, 1, "", "GridMapDisplayBasemap"], [853, 2, 1, "", "RadarDisplay"], [886, 2, 1, "", "RadarMapDisplay"], [923, 2, 1, "", "RadarMapDisplayBasemap"], [960, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[787, 3, 1, "", "generate_az_rhi_title"], [788, 3, 1, "", "generate_filename"], [789, 3, 1, "", "generate_ray_title"], [790, 3, 1, "", "generate_title"], [791, 3, 1, "", "generate_vpt_title"], [792, 3, 1, "", "generate_xsection_title"], [793, 3, 1, "", "label_xaxis_r"], [794, 3, 1, "", "label_xaxis_rays"], [795, 3, 1, "", "label_xaxis_time"], [796, 3, 1, "", "label_xaxis_x"], [797, 3, 1, "", "label_xaxis_xsection"], [798, 3, 1, "", "label_yaxis_field"], [799, 3, 1, "", "label_yaxis_xsection"], [800, 3, 1, "", "label_yaxis_y"], [801, 3, 1, "", "label_yaxis_z"], [802, 3, 1, "", "plot"], [803, 3, 1, "", "plot_azimuth_to_rhi"], [804, 3, 1, "", "plot_colorbar"], [805, 3, 1, "", "plot_cr_raster"], [806, 3, 1, "", "plot_cross_hair"], [807, 3, 1, "", "plot_grid_lines"], [808, 3, 1, "", "plot_label"], [809, 3, 1, "", "plot_labels"], [810, 3, 1, "", "plot_ppi"], [811, 3, 1, "", "plot_range_ring"], [812, 3, 1, "", "plot_range_rings"], [813, 3, 1, "", "plot_ray"], [814, 3, 1, "", "plot_rhi"], [815, 3, 1, "", "plot_sweep_grid"], [816, 3, 1, "", "plot_vpt"], [817, 3, 1, "", "plot_xsection"], [818, 3, 1, "", "set_aspect_ratio"], [819, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[821, 3, 1, "", "cartopy_coastlines"], [822, 3, 1, "", "cartopy_political_boundaries"], [823, 3, 1, "", "cartopy_states"], [824, 3, 1, "", "generate_filename"], [825, 3, 1, "", "generate_grid_title"], [826, 3, 1, "", "generate_latitudinal_level_title"], [827, 3, 1, "", "generate_longitudinal_level_title"], [828, 3, 1, "", "plot_colorbar"], [829, 3, 1, "", "plot_cross_section"], [830, 3, 1, "", "plot_cross_section_level"], [831, 3, 1, "", "plot_crosshairs"], [832, 3, 1, "", "plot_grid"], [833, 3, 1, "", "plot_grid_contour"], [834, 3, 1, "", "plot_grid_raw"], [835, 3, 1, "", "plot_latitude_slice"], [836, 3, 1, "", "plot_latitudinal_level"], [837, 3, 1, "", "plot_longitude_slice"], [838, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[840, 3, 1, "", "generate_filename"], [841, 3, 1, "", "generate_grid_title"], [842, 3, 1, "", "generate_latitudinal_level_title"], [843, 3, 1, "", "generate_longitudinal_level_title"], [844, 3, 1, "", "get_basemap"], [845, 3, 1, "", "plot_basemap"], [846, 3, 1, "", "plot_colorbar"], [847, 3, 1, "", "plot_crosshairs"], [848, 3, 1, "", "plot_grid"], [849, 3, 1, "", "plot_latitude_slice"], [850, 3, 1, "", "plot_latitudinal_level"], [851, 3, 1, "", "plot_longitude_slice"], [852, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[854, 3, 1, "", "generate_az_rhi_title"], [855, 3, 1, "", "generate_filename"], [856, 3, 1, "", "generate_ray_title"], [857, 3, 1, "", "generate_title"], [858, 3, 1, "", "generate_vpt_title"], [859, 3, 1, "", "generate_xsection_title"], [860, 3, 1, "", "label_xaxis_r"], [861, 3, 1, "", "label_xaxis_rays"], [862, 3, 1, "", "label_xaxis_time"], [863, 3, 1, "", "label_xaxis_x"], [864, 3, 1, "", "label_xaxis_xsection"], [865, 3, 1, "", "label_yaxis_field"], [866, 3, 1, "", "label_yaxis_xsection"], [867, 3, 1, "", "label_yaxis_y"], [868, 3, 1, "", "label_yaxis_z"], [869, 3, 1, "", "plot"], [870, 3, 1, "", "plot_azimuth_to_rhi"], [871, 3, 1, "", "plot_colorbar"], [872, 3, 1, "", "plot_cr_raster"], [873, 3, 1, "", "plot_cross_hair"], [874, 3, 1, "", "plot_grid_lines"], [875, 3, 1, "", "plot_label"], [876, 3, 1, "", "plot_labels"], [877, 3, 1, "", "plot_ppi"], [878, 3, 1, "", "plot_range_ring"], [879, 3, 1, "", "plot_range_rings"], [880, 3, 1, "", "plot_ray"], [881, 3, 1, "", "plot_rhi"], [882, 3, 1, "", "plot_vpt"], [883, 3, 1, "", "plot_xsection"], [884, 3, 1, "", "set_aspect_ratio"], [885, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[887, 3, 1, "", "generate_az_rhi_title"], [888, 3, 1, "", "generate_filename"], [889, 3, 1, "", "generate_ray_title"], [890, 3, 1, "", "generate_title"], [891, 3, 1, "", "generate_vpt_title"], [892, 3, 1, "", "generate_xsection_title"], [893, 3, 1, "", "label_xaxis_r"], [894, 3, 1, "", "label_xaxis_rays"], [895, 3, 1, "", "label_xaxis_time"], [896, 3, 1, "", "label_xaxis_x"], [897, 3, 1, "", "label_xaxis_xsection"], [898, 3, 1, "", "label_yaxis_field"], [899, 3, 1, "", "label_yaxis_xsection"], [900, 3, 1, "", "label_yaxis_y"], [901, 3, 1, "", "label_yaxis_z"], [902, 3, 1, "", "plot"], [903, 3, 1, "", "plot_azimuth_to_rhi"], [904, 3, 1, "", "plot_colorbar"], [905, 3, 1, "", "plot_cr_raster"], [906, 3, 1, "", "plot_cross_hair"], [907, 3, 1, "", "plot_grid_lines"], [908, 3, 1, "", "plot_label"], [909, 3, 1, "", "plot_labels"], [910, 3, 1, "", "plot_line_geo"], [911, 3, 1, "", "plot_line_xy"], [912, 3, 1, "", "plot_point"], [913, 3, 1, "", "plot_ppi"], [914, 3, 1, "", "plot_ppi_map"], [915, 3, 1, "", "plot_range_ring"], [916, 3, 1, "", "plot_range_rings"], [917, 3, 1, "", "plot_ray"], [918, 3, 1, "", "plot_rhi"], [919, 3, 1, "", "plot_vpt"], [920, 3, 1, "", "plot_xsection"], [921, 3, 1, "", "set_aspect_ratio"], [922, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[924, 3, 1, "", "generate_az_rhi_title"], [925, 3, 1, "", "generate_filename"], [926, 3, 1, "", "generate_ray_title"], [927, 3, 1, "", "generate_title"], [928, 3, 1, "", "generate_vpt_title"], [929, 3, 1, "", "generate_xsection_title"], [930, 3, 1, "", "label_xaxis_r"], [931, 3, 1, "", "label_xaxis_rays"], [932, 3, 1, "", "label_xaxis_time"], [933, 3, 1, "", "label_xaxis_x"], [934, 3, 1, "", "label_xaxis_xsection"], [935, 3, 1, "", "label_yaxis_field"], [936, 3, 1, "", "label_yaxis_xsection"], [937, 3, 1, "", "label_yaxis_y"], [938, 3, 1, "", "label_yaxis_z"], [939, 3, 1, "", "plot"], [940, 3, 1, "", "plot_azimuth_to_rhi"], [941, 3, 1, "", "plot_colorbar"], [942, 3, 1, "", "plot_cr_raster"], [943, 3, 1, "", "plot_cross_hair"], [944, 3, 1, "", "plot_grid_lines"], [945, 3, 1, "", "plot_label"], [946, 3, 1, "", "plot_labels"], [947, 3, 1, "", "plot_line_geo"], [948, 3, 1, "", "plot_line_xy"], [949, 3, 1, "", "plot_point"], [950, 3, 1, "", "plot_ppi"], [951, 3, 1, "", "plot_ppi_map"], [952, 3, 1, "", "plot_range_ring"], [953, 3, 1, "", "plot_range_rings"], [954, 3, 1, "", "plot_ray"], [955, 3, 1, "", "plot_rhi"], [956, 3, 1, "", "plot_vpt"], [957, 3, 1, "", "plot_xsection"], [958, 3, 1, "", "set_aspect_ratio"], [959, 3, 1, "", "set_limits"]], "pyart.io": [[962, 0, 1, "", "make_time_unit_str"], [963, 0, 1, "", "prepare_for_read"], [964, 0, 1, "", "read"], [965, 0, 1, "", "read_arm_sonde"], [966, 0, 1, "", "read_arm_sonde_vap"], [967, 0, 1, "", "read_cfradial"], [968, 0, 1, "", "read_cfradial2"], [969, 0, 1, "", "read_chl"], [970, 0, 1, "", "read_grid"], [971, 0, 1, "", "read_grid_mdv"], [972, 0, 1, "", "read_mdv"], [973, 0, 1, "", "read_nexrad_archive"], [974, 0, 1, "", "read_nexrad_cdm"], [975, 0, 1, "", "read_nexrad_level3"], [976, 0, 1, "", "read_rsl"], [977, 0, 1, "", "read_sigmet"], [978, 0, 1, "", "read_uf"], [979, 0, 1, "", "write_cfradial"], [980, 0, 1, "", "write_grid"], [981, 0, 1, "", "write_grid_geotiff"], [982, 0, 1, "", "write_grid_mdv"], [983, 0, 1, "", "write_uf"]], "pyart.lazydict": [[985, 2, 1, "", "LazyLoadDict"], [998, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[398, 3, 1, "", "__class_getitem__"], [399, 3, 1, "", "__contains__"], [400, 3, 1, "", "__delattr__"], [401, 3, 1, "", "__delitem__"], [402, 3, 1, "", "__dir__"], [403, 3, 1, "", "__eq__"], [404, 3, 1, "", "__format__"], [405, 3, 1, "", "__ge__"], [406, 3, 1, "", "__getattribute__"], [407, 3, 1, "", "__getitem__"], [408, 3, 1, "", "__getstate__"], [409, 3, 1, "", "__gt__"], [410, 3, 1, "", "__init__"], [411, 3, 1, "", "__init_subclass__"], [412, 3, 1, "", "__iter__"], [413, 3, 1, "", "__le__"], [414, 3, 1, "", "__len__"], [415, 3, 1, "", "__lt__"], [416, 3, 1, "", "__ne__"], [417, 3, 1, "", "__new__"], [418, 3, 1, "", "__reduce__"], [419, 3, 1, "", "__reduce_ex__"], [420, 3, 1, "", "__repr__"], [421, 3, 1, "", "__setattr__"], [422, 3, 1, "", "__setitem__"], [423, 3, 1, "", "__sizeof__"], [424, 3, 1, "", "__str__"], [425, 3, 1, "", "__subclasshook__"], [986, 3, 1, "", "clear"], [987, 3, 1, "", "copy"], [988, 3, 1, "", "get"], [989, 3, 1, "", "has_key"], [990, 3, 1, "", "items"], [991, 3, 1, "", "keys"], [992, 3, 1, "", "pop"], [993, 3, 1, "", "popitem"], [994, 3, 1, "", "set_lazy"], [995, 3, 1, "", "setdefault"], [996, 3, 1, "", "update"], [997, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[999, 3, 1, "", "clear"], [1000, 3, 1, "", "get"], [1001, 3, 1, "", "items"], [1002, 3, 1, "", "keys"], [1003, 3, 1, "", "pop"], [1004, 3, 1, "", "popitem"], [1005, 3, 1, "", "setdefault"], [1006, 3, 1, "", "update"], [1007, 3, 1, "", "values"]], "pyart.map": [[1009, 2, 1, "", "GateMapper"], [1013, 0, 1, "", "example_roi_func_constant"], [1014, 0, 1, "", "example_roi_func_dist"], [1015, 0, 1, "", "example_roi_func_dist_beam"], [1016, 0, 1, "", "get_earth_radius"], [1017, 0, 1, "", "grid_from_radars"], [1018, 0, 1, "", "map_gates_to_grid"], [1019, 0, 1, "", "map_to_grid"], [1020, 0, 1, "", "polar_to_cartesian"]], "pyart.map.GateMapper": [[1010, 4, 1, "", "distance_tolerance"], [1011, 3, 1, "", "mapped_radar"], [1012, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[444, 0, 1, "", "_destandardize"], [445, 0, 1, "", "_get_res_vol_sides"], [1022, 0, 1, "", "atmospheric_gas_att"], [1023, 0, 1, "", "calculate_snr_from_reflectivity"], [1024, 0, 1, "", "calculate_velocity_texture"], [1025, 0, 1, "", "composite_reflectivity"], [1026, 0, 1, "", "compute_Doppler_velocity"], [1027, 0, 1, "", "compute_Doppler_velocity_iq"], [1028, 0, 1, "", "compute_Doppler_width"], [1029, 0, 1, "", "compute_Doppler_width_iq"], [1030, 0, 1, "", "compute_apparent_profile"], [1031, 0, 1, "", "compute_bird_density"], [1032, 0, 1, "", "compute_ccor"], [1033, 0, 1, "", "compute_cdr"], [1034, 0, 1, "", "compute_centroids"], [1035, 0, 1, "", "compute_differential_phase"], [1036, 0, 1, "", "compute_differential_phase_iq"], [1037, 0, 1, "", "compute_differential_reflectivity"], [1038, 0, 1, "", "compute_differential_reflectivity_iq"], [1039, 0, 1, "", "compute_evp"], [1040, 0, 1, "", "compute_iq"], [1041, 0, 1, "", "compute_l"], [1042, 0, 1, "", "compute_mean_phase_iq"], [1043, 0, 1, "", "compute_noise_power"], [1044, 0, 1, "", "compute_noisedBZ"], [1045, 0, 1, "", "compute_pol_variables"], [1046, 0, 1, "", "compute_pol_variables_iq"], [1047, 0, 1, "", "compute_qvp"], [1048, 0, 1, "", "compute_radial_noise_hs"], [1049, 0, 1, "", "compute_radial_noise_ivic"], [1050, 0, 1, "", "compute_rcs"], [1051, 0, 1, "", "compute_rcs_from_pr"], [1052, 0, 1, "", "compute_reflectivity"], [1053, 0, 1, "", "compute_reflectivity_iq"], [1054, 0, 1, "", "compute_rhohv"], [1055, 0, 1, "", "compute_rhohv_iq"], [1056, 0, 1, "", "compute_rqvp"], [1057, 0, 1, "", "compute_signal_power"], [1058, 0, 1, "", "compute_snr"], [1059, 0, 1, "", "compute_spectra"], [1060, 0, 1, "", "compute_spectral_differential_phase"], [1061, 0, 1, "", "compute_spectral_differential_reflectivity"], [1062, 0, 1, "", "compute_spectral_noise"], [1063, 0, 1, "", "compute_spectral_phase"], [1064, 0, 1, "", "compute_spectral_power"], [1065, 0, 1, "", "compute_spectral_reflectivity"], [1066, 0, 1, "", "compute_spectral_rhohv"], [1067, 0, 1, "", "compute_st1_iq"], [1068, 0, 1, "", "compute_st2_iq"], [1069, 0, 1, "", "compute_svp"], [1070, 0, 1, "", "compute_ts_along_coord"], [1071, 0, 1, "", "compute_vol_refl"], [1072, 0, 1, "", "compute_vp"], [1073, 0, 1, "", "compute_wbn_iq"], [1074, 0, 1, "", "conv_strat_yuter"], [1075, 0, 1, "", "data_for_centroids"], [1076, 0, 1, "", "detect_ml"], [1077, 0, 1, "", "determine_medoids"], [1078, 0, 1, "", "est_rain_rate_a"], [1079, 0, 1, "", "est_rain_rate_hydro"], [1080, 0, 1, "", "est_rain_rate_kdp"], [1081, 0, 1, "", "est_rain_rate_z"], [1082, 0, 1, "", "est_rain_rate_za"], [1083, 0, 1, "", "est_rain_rate_zkdp"], [1084, 0, 1, "", "est_rain_rate_zpoly"], [1085, 0, 1, "", "est_vertical_windshear"], [1086, 0, 1, "", "est_vertical_windshear_lidar"], [1087, 0, 1, "", "est_wind_profile"], [1088, 0, 1, "", "est_wind_vel"], [1089, 0, 1, "", "fetch_radar_time_profile"], [1090, 0, 1, "", "gecsx"], [1091, 0, 1, "", "get_coeff_attg"], [1092, 0, 1, "", "get_freq_band"], [1093, 0, 1, "", "get_iso0_val"], [1094, 0, 1, "", "get_ml_rng_limits"], [1095, 0, 1, "", "grid_displacement_pc"], [1096, 0, 1, "", "grid_shift"], [1097, 0, 1, "", "hydroclass_semisupervised"], [1098, 0, 1, "", "kdp_leastsquare_double_window"], [1099, 0, 1, "", "kdp_leastsquare_single_window"], [1100, 0, 1, "", "kdp_maesaka"], [1101, 0, 1, "", "kdp_schneebeli"], [1102, 0, 1, "", "kdp_vulpiani"], [1103, 0, 1, "", "map_profile_to_gates"], [1104, 0, 1, "", "melting_layer_giangrande"], [1105, 0, 1, "", "melting_layer_hydroclass"], [1106, 0, 1, "", "melting_layer_mf"], [1107, 0, 1, "", "quasi_vertical_profile"], [1108, 0, 1, "", "select_samples"], [1109, 0, 1, "", "steiner_conv_strat"], [1110, 0, 1, "", "synthetic_obs_distribution"], [1111, 0, 1, "", "texture_of_complex_phase"], [1112, 0, 1, "", "vad_browning"], [1113, 0, 1, "", "vad_michelson"]], "pyart.testing": [[1115, 2, 1, "", "Grid"], [1125, 2, 1, "", "InTemporaryDirectory"], [1127, 2, 1, "", "Radar"], [1156, 2, 1, "", "RadarSpectra"], [1185, 0, 1, "", "get_metadata"], [1186, 0, 1, "", "get_test_data"], [1187, 0, 1, "", "make_empty_grid"], [1188, 0, 1, "", "make_empty_ppi_radar"], [1189, 0, 1, "", "make_empty_rhi_radar"], [1190, 0, 1, "", "make_empty_spectra_radar"], [1191, 0, 1, "", "make_normal_storm"], [1192, 0, 1, "", "make_single_ray_radar"], [1193, 0, 1, "", "make_storm_grid"], [1194, 0, 1, "", "make_target_grid"], [1195, 0, 1, "", "make_target_radar"], [1196, 0, 1, "", "make_target_spectra_radar"], [1197, 0, 1, "", "make_velocity_aliased_radar"], [1198, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[1116, 3, 1, "", "add_field"], [1117, 3, 1, "", "get_point_longitude_latitude"], [1118, 3, 1, "", "get_projparams"], [1119, 3, 1, "", "init_point_altitude"], [1120, 3, 1, "", "init_point_longitude_latitude"], [1121, 3, 1, "", "init_point_x_y_z"], [1122, 4, 1, "", "projection_proj"], [1123, 3, 1, "", "to_xarray"], [1124, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[1126, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[1128, 3, 1, "", "add_field"], [1129, 3, 1, "", "add_field_like"], [1130, 3, 1, "", "add_filter"], [1131, 3, 1, "", "check_field_exists"], [1132, 3, 1, "", "extract_sweeps"], [1133, 3, 1, "", "get_azimuth"], [1134, 3, 1, "", "get_elevation"], [1135, 3, 1, "", "get_end"], [1136, 3, 1, "", "get_field"], [1137, 3, 1, "", "get_gate_area"], [1138, 3, 1, "", "get_gate_lat_lon_alt"], [1139, 3, 1, "", "get_gate_x_y_z"], [1140, 3, 1, "", "get_nyquist_vel"], [1141, 3, 1, "", "get_slice"], [1142, 3, 1, "", "get_start"], [1143, 3, 1, "", "get_start_end"], [1144, 3, 1, "", "info"], [1145, 3, 1, "", "init_gate_altitude"], [1146, 3, 1, "", "init_gate_longitude_latitude"], [1147, 3, 1, "", "init_gate_x_y_z"], [1148, 3, 1, "", "init_rays_per_sweep"], [1149, 3, 1, "", "iter_azimuth"], [1150, 3, 1, "", "iter_elevation"], [1151, 3, 1, "", "iter_end"], [1152, 3, 1, "", "iter_field"], [1153, 3, 1, "", "iter_slice"], [1154, 3, 1, "", "iter_start"], [1155, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[1157, 3, 1, "", "add_field"], [1158, 3, 1, "", "add_field_like"], [1159, 3, 1, "", "add_filter"], [1160, 3, 1, "", "check_field_exists"], [1161, 3, 1, "", "extract_sweeps"], [1162, 3, 1, "", "get_azimuth"], [1163, 3, 1, "", "get_elevation"], [1164, 3, 1, "", "get_end"], [1165, 3, 1, "", "get_field"], [1166, 3, 1, "", "get_gate_area"], [1167, 3, 1, "", "get_gate_lat_lon_alt"], [1168, 3, 1, "", "get_gate_x_y_z"], [1169, 3, 1, "", "get_nyquist_vel"], [1170, 3, 1, "", "get_slice"], [1171, 3, 1, "", "get_start"], [1172, 3, 1, "", "get_start_end"], [1173, 3, 1, "", "info"], [1174, 3, 1, "", "init_gate_altitude"], [1175, 3, 1, "", "init_gate_longitude_latitude"], [1176, 3, 1, "", "init_gate_x_y_z"], [1177, 3, 1, "", "init_rays_per_sweep"], [1178, 3, 1, "", "iter_azimuth"], [1179, 3, 1, "", "iter_elevation"], [1180, 3, 1, "", "iter_end"], [1181, 3, 1, "", "iter_field"], [1182, 3, 1, "", "iter_slice"], [1183, 3, 1, "", "iter_start"], [1184, 3, 1, "", "iter_start_end"]], "pyart.util": [[1200, 0, 1, "", "angular_mean"], [1201, 0, 1, "", "angular_mean_deg"], [1202, 0, 1, "", "angular_std"], [1203, 0, 1, "", "angular_std_deg"], [1204, 0, 1, "", "angular_texture_2d"], [1205, 0, 1, "", "colocated_gates"], [1206, 0, 1, "", "colocated_gates2"], [1207, 0, 1, "", "compute_azimuthal_average"], [1208, 0, 1, "", "compute_corr"], [1209, 0, 1, "", "compute_directional_stats"], [1210, 0, 1, "", "compute_mse"], [1211, 0, 1, "", "compute_nse"], [1212, 0, 1, "", "cross_section_ppi"], [1213, 0, 1, "", "cross_section_rhi"], [1214, 0, 1, "", "datetime_from_dataset"], [1215, 0, 1, "", "datetime_from_grid"], [1216, 0, 1, "", "datetime_from_radar"], [1217, 0, 1, "", "datetimes_from_dataset"], [1218, 0, 1, "", "datetimes_from_radar"], [1219, 0, 1, "", "estimate_noise_hs74"], [1220, 0, 1, "", "estimate_noise_ivic13"], [1221, 0, 1, "", "find_neighbour_gates"], [1222, 0, 1, "", "for_azimuth"], [1223, 0, 1, "", "get_column_rays"], [1224, 0, 1, "", "get_field_location"], [1225, 0, 1, "", "get_ivic_flat_reg_var_max"], [1226, 0, 1, "", "get_ivic_pct"], [1227, 0, 1, "", "get_ivic_snr_thr"], [1228, 0, 1, "", "get_target_elevations"], [1229, 0, 1, "", "grid_texture_2d"], [1230, 0, 1, "", "image_mute_radar"], [1231, 0, 1, "", "interpol_spectra"], [1232, 0, 1, "", "intersection"], [1233, 0, 1, "", "interval_mean"], [1234, 0, 1, "", "interval_std"], [1235, 0, 1, "", "is_vpt"], [1236, 0, 1, "", "ivic_flat_reg_var_max_table"], [1237, 0, 1, "", "ivic_flat_reg_wind_len_table"], [1238, 0, 1, "", "ivic_pct_table"], [1239, 0, 1, "", "ivic_snr_thr_table"], [1240, 0, 1, "", "join_radar"], [1241, 0, 1, "", "join_spectra"], [1242, 0, 1, "", "ma_broadcast_to"], [1243, 0, 1, "", "mean_of_two_angles"], [1244, 0, 1, "", "mean_of_two_angles_deg"], [1245, 0, 1, "", "radar_from_spectra"], [1246, 0, 1, "", "rolling_window"], [1247, 0, 1, "", "simulated_vel_from_profile"], [1248, 0, 1, "", "sphere_distance"], [1249, 0, 1, "", "subset_radar"], [1250, 0, 1, "", "subset_radar_spectra"], [1251, 0, 1, "", "texture"], [1252, 0, 1, "", "texture_along_ray"], [1253, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255], "aux_io": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "read_bin": [0, 541], "read_bin_mf": [1, 542], "read_cartesian_metranet": [2, 543], "read_cf1": [3, 544], "read_cf1_cartesian": [4, 545], "read_cf1_cartesian_mf": [5, 546], "read_d3r_gcpex_nc": [6, 547], "read_dat_mf": [7, 548], "read_gam": [8, 552], "read_gif": [9, 553], "read_grib": [10, 554], "read_hpl": [11, 555], "read_iq": [12, 556], "read_kazr": [13, 557], "read_metranet": [14, 558], "read_noxp_iphex_nc": [15, 559], "read_odim_grid_h5": [16, 560], "read_odim_h5": [17, 561], "read_odim_vp_h5": [18, 562], "read_pattern": [19, 563], "read_png": [20, 564], "read_radx": [21, 570], "read_rainbow_psr": [22, 571], "read_rainbow_psr_spectra": [23, 572], "read_rainbow_wrl": [24, 573], "read_spectra": [25, 575], "write_odim_grid_h5": [26, 576], "write_odim_h5": [27, 577], "write_spectra": [28, 579], "bridg": [29, 580, 581], "texture_of_complex_phas": [29, 534, 581, 1111], "config": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593], "filemetadata": [30, 31, 32, 33, 583, 584, 585, 586], "__call__": [31, 584], "get_field_nam": [32, 37, 585, 590], "get_metadata": [33, 39, 586, 592, 1185], "get_field_colormap": [34, 587], "get_field_limit": [35, 588], "get_field_map": [36, 589], "get_fillvalu": [38, 591], "load_config": [40, 593], "core": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675], "grid": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 785, 961, 1008, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1267, 1268, 1272, 1302], "add_field": [42, 56, 85, 596, 610, 639, 1116, 1128, 1157], "get_point_longitude_latitud": [43, 597, 1117], "get_projparam": [44, 598, 1118], "init_point_altitud": [45, 599, 1119], "init_point_longitude_latitud": [46, 600, 1120], "init_point_x_y_z": [47, 601, 1121], "projection_proj": [48, 602, 1122], "to_xarrai": [49, 603, 1123], "write": [50, 538, 604, 961, 1124], "horizontalwindprofil": [51, 52, 53, 54, 605, 606, 607, 608], "from_u_and_v": [52, 606], "u_wind": [53, 607], "v_wind": [54, 608], "radar": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 538, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 676, 748, 785, 961, 1021, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1266, 1267, 1268, 1290, 1299, 1304, 1306], "add_field_lik": [57, 86, 611, 640, 1129, 1158], "add_filt": [58, 87, 612, 641, 1130, 1159], "check_field_exist": [59, 88, 613, 642, 1131, 1160], "extract_sweep": [60, 89, 614, 643, 1132, 1161], "get_azimuth": [61, 90, 615, 644, 1133, 1162], "get_elev": [62, 91, 616, 645, 1134, 1163], "get_end": [63, 92, 617, 646, 1135, 1164], "get_field": [64, 93, 618, 647, 1136, 1165], "get_gate_area": [65, 94, 619, 648, 1137, 1166], "get_gate_lat_lon_alt": [66, 95, 620, 649, 1138, 1167], "get_gate_x_y_z": [67, 96, 621, 650, 1139, 1168], "get_nyquist_vel": [68, 97, 622, 651, 1140, 1169], "get_slic": [69, 98, 623, 652, 1141, 1170], "get_start": [70, 99, 624, 653, 1142, 1171], "get_start_end": [71, 100, 625, 654, 1143, 1172], "info": [72, 101, 626, 655, 1144, 1173], "init_gate_altitud": [73, 102, 627, 656, 1145, 1174], "init_gate_longitude_latitud": [74, 103, 628, 657, 1146, 1175], "init_gate_x_y_z": [75, 104, 629, 658, 1147, 1176], "init_rays_per_sweep": [76, 105, 630, 659, 1148, 1177], "iter_azimuth": [77, 106, 631, 660, 1149, 1178], "iter_elev": [78, 107, 632, 661, 1150, 1179], "iter_end": [79, 108, 633, 662, 1151, 1180], "iter_field": [80, 109, 634, 663, 1152, 1181], "iter_slic": [81, 110, 635, 664, 1153, 1182], "iter_start": [82, 111, 636, 665, 1154, 1183], "iter_start_end": [83, 112, 637, 666, 1155, 1184], "radarspectra": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184], "antenna_to_cartesian": [113, 667], "antenna_vectors_to_cartesian": [114, 668], "cartesian_to_antenna": [115, 669], "cartesian_to_geograph": [116, 670], "cartesian_to_geographic_aeqd": [117, 671], "cartesian_vectors_to_geograph": [118, 672], "geographic_to_cartesian": [119, 673], "geographic_to_cartesian_aeqd": [120, 674], "wgs84_to_swissch1903": [121, 675], "test": [121, 675, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1306], "exampl": [121, 675, 1008, 1256, 1260, 1261, 1265, 1270, 1289, 1292], "correct": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 1256, 1257, 1260], "calculate_attenu": [122, 705], "calculate_attenuation_philinear": [123, 706], "calculate_attenuation_zphi": [124, 707], "compute_apparent_vpr": [125, 708], "compute_theoretical_vpr": [126, 709], "correct_bia": [127, 710], "correct_noise_rhohv": [128, 711], "correct_sys_phas": [129, 712], "correct_vis": [130, 713], "correct_vpr": [131, 714], "correct_vpr_spatialis": [132, 715], "dealias_fourdd": [133, 716], "dealias_region_bas": [134, 717], "dealias_unwrap_phas": [135, 718], "despeckle_field": [136, 719], "det_sys_phase_rai": [137, 720], "est_rhohv_rain": [138, 721], "est_zdr_precip": [139, 722], "est_zdr_snow": [140, 723], "find_object": [141, 724], "get_mask_fzl": [142, 726], "get_sun_hit": [143, 727], "get_sun_hits_iv": [144, 728], "get_sun_hits_psr": [145, 729], "phase_proc_lp": [146, 731], "phase_proc_lp_gf": [147, 732], "ptoa_to_sf": [148, 733], "scanning_loss": [149, 735], "selfconsistency_bia": [150, 736], "selfconsistency_bias2": [151, 737], "selfconsistency_kdp_phidp": [152, 738], "smooth_mask": [153, 739], "smooth_phidp_double_window": [154, 740], "smooth_phidp_single_window": [155, 741], "solar_flux_lookup": [156, 742], "sun_position_mfr": [157, 743], "sun_position_pysolar": [158, 744], "sun_pow": [159, 745], "sun_retriev": [160, 746], "except": [161, 162, 163, 164, 747], "deprecatedattribut": 161, "deprecatedfunctionnam": 162, "missingoptionaldepend": 163, "_deprecated_alia": 164, "filter": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784], "gatefilt": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 1303], "copi": [166, 427, 678, 750, 987], "exclude_abov": [167, 679, 751], "exclude_al": [168, 680, 752], "exclude_below": [169, 681, 753], "exclude_equ": [170, 682, 754], "exclude_g": [171, 683, 755], "exclude_insid": [172, 684, 756], "exclude_invalid": [173, 685, 757], "exclude_mask": [174, 686, 758], "exclude_non": [175, 687, 759], "exclude_not_equ": [176, 688, 760], "exclude_outsid": [177, 689, 761], "exclude_transit": [178, 690, 762], "gate_exclud": [179, 691, 763], "gate_includ": [180, 692, 764], "include_abov": [181, 693, 765], "include_al": [182, 694, 766], "include_below": [183, 695, 767], "include_equ": [184, 696, 768], "include_g": [185, 697, 769], "include_insid": [186, 698, 770], "include_non": [187, 699, 771], "include_not_equ": [188, 700, 772], "include_not_mask": [189, 701, 773], "include_not_transit": [190, 702, 774], "include_outsid": [191, 703, 775], "include_valid": [192, 704, 776], "birds_gate_filt": [193, 777], "class_based_gate_filt": [194, 778], "iso0_based_gate_filt": [195, 779], "moment_and_texture_based_gate_filt": [196, 780], "moment_based_gate_filt": [197, 730, 781], "snr_based_gate_filt": [198, 782], "temp_based_gate_filt": [199, 783], "visibility_based_gate_filt": [200, 784], "graph": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "airborneradardisplai": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "generate_az_rhi_titl": [202, 269, 302, 339, 787, 854, 887, 924], "generate_filenam": [203, 239, 255, 270, 303, 340, 788, 824, 840, 855, 888, 925], "generate_ray_titl": [204, 271, 304, 341, 789, 856, 889, 926], "generate_titl": [205, 272, 305, 342, 790, 857, 890, 927], "generate_vpt_titl": [206, 273, 306, 343, 791, 858, 891, 928], "generate_xsection_titl": [207, 274, 307, 344, 792, 859, 892, 929], "label_xaxis_r": [208, 275, 308, 345, 793, 860, 893, 930], "label_xaxis_rai": [209, 276, 309, 346, 794, 861, 894, 931], "label_xaxis_tim": [210, 277, 310, 347, 795, 862, 895, 932], "label_xaxis_x": [211, 278, 311, 348, 796, 863, 896, 933], "label_xaxis_xsect": [212, 279, 312, 349, 797, 864, 897, 934], "label_yaxis_field": [213, 280, 313, 350, 798, 865, 898, 935], "label_yaxis_xsect": [214, 281, 314, 351, 799, 866, 899, 936], "label_yaxis_i": [215, 282, 315, 352, 800, 867, 900, 937], "label_yaxis_z": [216, 283, 316, 353, 801, 868, 901, 938], "plot": [217, 284, 317, 354, 785, 802, 869, 902, 939, 1260, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1291, 1293, 1294], "plot_azimuth_to_rhi": [218, 285, 318, 355, 803, 870, 903, 940], "plot_colorbar": [219, 243, 261, 286, 319, 356, 804, 828, 846, 871, 904, 941], "plot_cr_rast": [220, 287, 320, 357, 805, 872, 905, 942], "plot_cross_hair": [221, 288, 321, 358, 806, 873, 906, 943], "plot_grid_lin": [222, 289, 322, 359, 807, 874, 907, 944], "plot_label": [223, 224, 290, 291, 323, 324, 360, 361, 808, 809, 875, 876, 908, 909, 945, 946], "plot_ppi": [225, 292, 328, 365, 810, 877, 913, 950], "plot_range_r": [226, 227, 293, 294, 330, 331, 367, 368, 811, 812, 878, 879, 915, 916, 952, 953], "plot_rai": [228, 295, 332, 369, 813, 880, 917, 954], "plot_rhi": [229, 296, 333, 370, 814, 881, 918, 955], "plot_sweep_grid": [230, 815], "plot_vpt": [231, 297, 334, 371, 816, 882, 919, 956], "plot_xsect": [232, 298, 335, 372, 817, 883, 920, 957], "set_aspect_ratio": [233, 299, 336, 373, 818, 884, 921, 958], "set_limit": [234, 300, 337, 374, 819, 885, 922, 959], "gridmapdisplai": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 1286], "cartopy_coastlin": [236, 821], "cartopy_political_boundari": [237, 822], "cartopy_st": [238, 823], "generate_grid_titl": [240, 256, 825, 841], "generate_latitudinal_level_titl": [241, 257, 826, 842], "generate_longitudinal_level_titl": [242, 258, 827, 843], "plot_cross_sect": [244, 829], "plot_cross_section_level": [245, 830], "plot_crosshair": [246, 262, 831, 847], "plot_grid": [247, 263, 832, 848], "plot_grid_contour": [248, 833], "plot_grid_raw": [249, 834], "plot_latitude_slic": [250, 264, 835, 849], "plot_latitudinal_level": [251, 265, 836, 850], "plot_longitude_slic": [252, 266, 837, 851], "plot_longitudinal_level": [253, 267, 838, 852], "gridmapdisplaybasemap": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852], "get_basemap": [259, 844], "plot_basemap": [260, 845], "radardisplai": [268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885], "radarmapdisplai": [301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922], "plot_line_geo": [325, 362, 910, 947], "plot_line_xi": [326, 363, 911, 948], "plot_point": [327, 364, 912, 949], "plot_ppi_map": [329, 366, 914, 951], "radarmapdisplaybasemap": [338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959], "io": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983], "make_time_unit_str": [375, 962], "prepare_for_read": [376, 963], "read": [377, 538, 961, 964, 1262, 1263], "read_arm_sond": [378, 965], "read_arm_sonde_vap": [379, 966], "read_cfradi": [380, 967], "read_cfradial2": [381, 968], "read_chl": [382, 969], "read_grid": [383, 970], "read_grid_mdv": [384, 971], "read_mdv": [385, 972], "read_nexrad_arch": [386, 973], "read_nexrad_cdm": [387, 974], "read_nexrad_level3": [388, 975], "read_rsl": [389, 976], "read_sigmet": [390, 977], "read_uf": [391, 978], "write_cfradi": [392, 979], "write_grid": [393, 980], "write_grid_geotiff": [394, 981], "write_grid_mdv": [395, 982], "write_uf": [396, 983], "lazydict": [397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007], "lazyloaddict": [397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997], "__class_getitem__": 398, "__contains__": 399, "__delattr__": 400, "__delitem__": 401, "__dir__": 402, "__eq__": 403, "__format__": 404, "__ge__": 405, "__getattribute__": 406, "__getitem__": 407, "__getstate__": 408, "__gt__": 409, "__init__": 410, "__init_subclass__": 411, "__iter__": 412, "__le__": 413, "__len__": 414, "__lt__": 415, "__ne__": 416, "__new__": 417, "__reduce__": 418, "__reduce_ex__": 419, "__repr__": 420, "__setattr__": 421, "__setitem__": 422, "__sizeof__": 423, "__str__": 424, "__subclasshook__": 425, "clear": [426, 986, 999], "get": [428, 988, 1000, 1296], "has_kei": [429, 989], "item": [430, 990, 1001], "kei": [431, 991, 1002], "pop": [432, 992, 1003], "popitem": [433, 993, 1004], "set_lazi": [434, 994], "setdefault": [435, 995, 1005], "updat": [436, 996, 1006], "valu": [437, 997, 1007], "map": [438, 439, 440, 441, 442, 443, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1260, 1265, 1267, 1268, 1279, 1302], "example_roi_func_const": [438, 1013], "example_roi_func_dist": [439, 1014], "example_roi_func_dist_beam": [440, 1015], "grid_from_radar": [441, 1017], "map_gates_to_grid": [442, 1018], "map_to_grid": [443, 1019], "retriev": [444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1260, 1289], "_destandard": 444, "_get_res_vol_sid": 445, "atmospheric_gas_att": [446, 1022], "calculate_snr_from_reflect": [447, 1023], "calculate_velocity_textur": [448, 1024], "compute_doppler_veloc": [449, 1026], "compute_doppler_velocity_iq": [450, 1027], "compute_doppler_width": [451, 1028], "compute_doppler_width_iq": [452, 1029], "compute_apparent_profil": [453, 1030], "compute_bird_dens": [454, 1031], "compute_ccor": [455, 1032], "compute_cdr": [456, 1033], "compute_centroid": [457, 1034], "compute_differential_phas": [458, 1035], "compute_differential_phase_iq": [459, 1036], "compute_differential_reflect": [460, 1037], "compute_differential_reflectivity_iq": [461, 1038], "compute_evp": [462, 1039], "compute_iq": [463, 1040], "compute_l": [464, 1041], "compute_mean_phase_iq": [465, 1042], "compute_noise_pow": [466, 1043], "compute_noisedbz": [467, 1044], "compute_pol_vari": [468, 1045], "compute_pol_variables_iq": [469, 1046], "compute_qvp": [470, 1047], "compute_radial_noise_h": [471, 1048], "compute_radial_noise_iv": [472, 1049], "compute_rc": [473, 1050], "compute_rcs_from_pr": [474, 1051], "compute_reflect": [475, 1052], "compute_reflectivity_iq": [476, 1053], "compute_rhohv": [477, 1054], "compute_rhohv_iq": [478, 1055], "compute_rqvp": [479, 1056], "compute_signal_pow": [480, 1057], "compute_snr": [481, 1058], "compute_spectra": [482, 1059], "compute_spectral_differential_phas": [483, 1060], "compute_spectral_differential_reflect": [484, 1061], "compute_spectral_nois": [485, 1062], "compute_spectral_phas": [486, 1063], "compute_spectral_pow": [487, 1064], "compute_spectral_reflect": [488, 1065], "compute_spectral_rhohv": [489, 1066], "compute_st1_iq": [490, 1067], "compute_st2_iq": [491, 1068], "compute_svp": [492, 1069], "compute_ts_along_coord": [493, 1070], "compute_vol_refl": [494, 1071], "compute_vp": [495, 1072], "compute_wbn_iq": [496, 1073], "conv_strat_yut": [497, 1074], "data_for_centroid": [498, 1075], "detect_ml": [499, 1076], "paremet": [499, 1076], "determine_medoid": [500, 1077], "est_rain_rate_a": [501, 1078], "est_rain_rate_hydro": [502, 1079], "est_rain_rate_kdp": [503, 1080], "est_rain_rate_z": [504, 1081], "est_rain_rate_za": [505, 1082], "est_rain_rate_zkdp": [506, 1083], "est_rain_rate_zpoli": [507, 1084], "est_vertical_windshear": [508, 1085], "est_vertical_windshear_lidar": [509, 1086], "est_wind_profil": [510, 1087], "est_wind_vel": [511, 1088], "fetch_radar_time_profil": [512, 1089], "gecsx": [513, 1090], "get_coeff_attg": [514, 1091], "get_freq_band": [515, 1092], "get_iso0_v": [516, 1093], "get_ml_rng_limit": [517, 1094], "grid_displacement_pc": [518, 1095], "grid_shift": [519, 1096], "hydroclass_semisupervis": [520, 1097], "kdp_leastsquare_double_window": [521, 1098], "kdp_leastsquare_single_window": [522, 1099], "kdp_maesaka": [523, 1100], "kdp_schneeb": [524, 1101], "kdp_vulpiani": [525, 1102], "map_profile_to_g": [526, 1103], "melting_layer_giangrand": [527, 1104], "melting_layer_hydroclass": [528, 1105], "melting_layer_mf": [529, 1106], "quasi_vertical_profil": [530, 1107], "select_sampl": [531, 1108], "steiner_conv_strat": [532, 1109], "synthetic_obs_distribut": [533, 1110], "vad_brown": [535, 1112], "vad_michelson": [536, 1113], "_debug_info": 537, "auxiliari": 538, "input": [538, 961, 1260, 1261], "output": [538, 961, 1260, 1261], "data": [538, 748, 785, 961, 1262, 1263, 1302, 1303], "convert_data": 539, "get_librari": 540, "read_edge_netcdf": 549, "read_file_c": 550, "read_file_pi": 551, "read_product_c": 565, "read_product_pi": 566, "read_psr_cpi_head": 567, "read_psr_head": 568, "read_psr_spectra": 569, "read_sinarame_h5": 574, "write_sinarame_cfradi": 578, "other": [580, 676, 1255], "toolkit": [580, 1306], "phase": 580, "function": [580, 676], "class": 594, "coordin": 594, "transform": 594, "veloc": [676, 1258, 1300], "unfold": 676, "helper": 676, "gauss_fit": 725, "retrieval_result": 734, "plot_convstrat_schem": 960, "sond": 961, "special": 961, "us": [961, 1258, 1266, 1286], "mutablemap": [998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007], "roi": 1008, "region": [1008, 1258], "interest": 1008, "gatemapp": [1009, 1010, 1011, 1012, 1266], "distance_toler": 1010, "mapped_radar": 1011, "time_toler": 1012, "get_earth_radiu": 1016, "polar_to_cartesian": 1020, "composite_reflect": 1025, "intemporarydirectori": [1125, 1126], "cleanup": 1126, "get_test_data": 1186, "make_empty_grid": 1187, "make_empty_ppi_radar": 1188, "make_empty_rhi_radar": 1189, "make_empty_spectra_radar": 1190, "make_normal_storm": 1191, "make_single_ray_radar": 1192, "make_storm_grid": 1193, "make_target_grid": 1194, "make_target_radar": 1195, "make_target_spectra_radar": 1196, "make_velocity_aliased_radar": 1197, "make_velocity_aliased_rhi_radar": 1198, "util": [1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253], "angular_mean": 1200, "angular_mean_deg": 1201, "angular_std": 1202, "angular_std_deg": 1203, "angular_texture_2d": 1204, "colocated_g": 1205, "colocated_gates2": 1206, "compute_azimuthal_averag": 1207, "compute_corr": 1208, "compute_directional_stat": 1209, "compute_ms": 1210, "compute_ns": 1211, "cross_section_ppi": 1212, "cross_section_rhi": 1213, "datetime_from_dataset": 1214, "datetime_from_grid": 1215, "datetime_from_radar": 1216, "datetimes_from_dataset": 1217, "datetimes_from_radar": 1218, "estimate_noise_hs74": 1219, "estimate_noise_ivic13": 1220, "find_neighbour_g": 1221, "for_azimuth": 1222, "assumpt": [1222, 1248], "get_column_rai": 1223, "get_field_loc": 1224, "get_ivic_flat_reg_var_max": 1225, "get_ivic_pct": 1226, "get_ivic_snr_thr": 1227, "get_target_elev": 1228, "grid_texture_2d": 1229, "image_mute_radar": 1230, "interpol_spectra": 1231, "intersect": 1232, "interval_mean": 1233, "interval_std": 1234, "is_vpt": 1235, "ivic_flat_reg_var_max_t": 1236, "ivic_flat_reg_wind_len_t": 1237, "ivic_pct_t": 1238, "ivic_snr_thr_t": 1239, "join_radar": 1240, "join_spectra": 1241, "ma_broadcast_to": 1242, "mean_of_two_angl": 1243, "mean_of_two_angles_deg": 1244, "radar_from_spectra": 1245, "rolling_window": 1246, "simulated_vel_from_profil": 1247, "sphere_dist": 1248, "paramet": 1248, "subset_radar": 1249, "subset_radar_spectra": 1250, "textur": 1251, "texture_along_rai": 1252, "to_vpt": 1253, "api": 1254, "refer": [1254, 1292], "manual": 1254, "changelog": 1255, "py": [1255, 1296, 1303, 1304, 1306], "art": [1255, 1296, 1303, 1304, 1306], "v1": 1255, "15": 1255, "0": 1255, "bug": 1255, "fix": [1255, 1263], "merg": 1255, "pr": 1255, "contributor": [1255, 1306], "thi": 1255, "releas": 1255, "14": 1255, "6": 1255, "enhanc": 1255, "made": 1255, "mainten": 1255, "upkeep": 1255, "improv": 1255, "5": 1255, "4": 1255, "3": [1255, 1262, 1286], "2": [1255, 1262, 1263], "document": 1255, "1": 1255, "13": 1255, "12": 1255, "7": 1255, "11": 1255, "8": 1255, "deprec": 1255, "featur": 1255, "10": 1255, "9": 1255, "picasso": 1255, "moment": [1256, 1260, 1275], "reflect": [1257, 1274, 1276, 1282, 1283, 1291], "attenu": 1257, "dealia": 1258, "doppler": 1258, "base": 1258, "algorithm": [1258, 1292], "comput": [1259, 1264, 1269, 1288, 1295], "time": [1259, 1264, 1269, 1288, 1295], "galleri": [1260, 1297], "nexrad": [1262, 1263, 1275, 1276], "from": [1262, 1272, 1275, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1287, 1305], "aw": 1262, "cloud": 1262, "level": [1262, 1263], "configur": 1262, "our": 1262, "filepath": 1262, "older": 1263, "latitud": 1263, "longitud": 1263, "issu": 1263, "compar": 1266, "two": [1266, 1268, 1285], "singl": 1267, "cartesian": [1267, 1268, 1302], "choos": 1271, "colormap": 1271, "your": [1271, 1273], "cross": [1272, 1287], "section": [1272, 1287], "modifi": 1273, "colorbar": 1273, "creat": [1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1298, 1308], "an": [1274, 1282, 1283, 1308], "imag": 1274, "mute": 1274, "multipl": [1275, 1280, 1281], "file": [1275, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1298, 1299, 1306], "ppi": [1277, 1278, 1279, 1287], "cfradial": 1277, "mdv": [1278, 1282, 1283, 1284], "cartopi": 1279, "panel": [1280, 1281, 1285, 1286], "rhi": [1280, 1281, 1282, 1283, 1284, 1285], "cf": [1280, 1281], "radial": [1280, 1281], "contour": [1282, 1283], "line": [1282, 1283], "volum": 1287, "extract": 1290, "column": 1290, "abov": 1290, "point": 1290, "calcul": [1291, 1293, 1294], "composit": 1291, "convect": 1292, "stratiform": 1292, "classif": [1292, 1293], "how": 1292, "work": 1292, "summari": 1292, "recommend": 1292, "best": 1292, "practic": 1292, "hydrometeor": 1293, "vad": 1294, "profil": 1294, "about": 1296, "meteoswiss": 1296, "fork": 1296, "cite": [1296, 1306], "what": 1296, "can": 1296, "do": 1296, "short": 1296, "cours": 1296, "instal": [1296, 1305, 1306], "depend": [1296, 1305, 1308], "option": [1296, 1305, 1308], "help": 1296, "contribut": 1296, "notebook": 1297, "basic": 1298, "ingest": 1298, "netcdf": 1298, "field": 1299, "manipul": 1299, "save": 1299, "object": [1299, 1304], "dealias": 1300, "mask": 1303, "With": 1303, "The": [1304, 1306], "index": 1304, "requir": 1305, "obtain": 1305, "latest": 1305, "sourc": 1305, "frequent": 1305, "ask": 1305, "question": 1305, "": 1306, "guid": [1306, 1307], "python": 1306, "arm": 1306, "import": 1306, "link": 1306, "resourc": 1306, "code": 1306, "style": 1306, "setup": 1306, "github": 1306, "blog": 1306, "post": 1306, "user": 1307, "set": 1308, "up": 1308, "environ": 1308, "anaconda": 1308, "channel": 1308, "ad": 1308, "path": 1308, "more": 1308, "inform": 1308}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"pyart.aux_io.read_bin": [[0, "pyart-aux-io-read-bin"], [541, "pyart-aux-io-read-bin"]], "pyart.aux_io.read_bin_mf": [[1, "pyart-aux-io-read-bin-mf"], [542, "pyart-aux-io-read-bin-mf"]], "pyart.aux_io.read_cartesian_metranet": [[2, "pyart-aux-io-read-cartesian-metranet"], [543, "pyart-aux-io-read-cartesian-metranet"]], "pyart.aux_io.read_cf1": [[3, "pyart-aux-io-read-cf1"], [544, "pyart-aux-io-read-cf1"]], "pyart.aux_io.read_cf1_cartesian": [[4, "pyart-aux-io-read-cf1-cartesian"], [545, "pyart-aux-io-read-cf1-cartesian"]], "pyart.aux_io.read_cf1_cartesian_mf": [[5, "pyart-aux-io-read-cf1-cartesian-mf"], [546, "pyart-aux-io-read-cf1-cartesian-mf"]], "pyart.aux_io.read_d3r_gcpex_nc": [[6, "pyart-aux-io-read-d3r-gcpex-nc"], [547, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_dat_mf": [[7, "pyart-aux-io-read-dat-mf"], [548, "pyart-aux-io-read-dat-mf"]], "pyart.aux_io.read_gamic": [[8, "pyart-aux-io-read-gamic"], [552, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_gif": [[9, "pyart-aux-io-read-gif"], [553, "pyart-aux-io-read-gif"]], "pyart.aux_io.read_grib": [[10, "pyart-aux-io-read-grib"], [554, "pyart-aux-io-read-grib"]], "pyart.aux_io.read_hpl": [[11, "pyart-aux-io-read-hpl"], [555, "pyart-aux-io-read-hpl"]], "pyart.aux_io.read_iq": [[12, "pyart-aux-io-read-iq"], [556, "pyart-aux-io-read-iq"]], "pyart.aux_io.read_kazr": [[13, "pyart-aux-io-read-kazr"], [557, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_metranet": [[14, "pyart-aux-io-read-metranet"], [558, "pyart-aux-io-read-metranet"]], "pyart.aux_io.read_noxp_iphex_nc": [[15, "pyart-aux-io-read-noxp-iphex-nc"], [559, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_grid_h5": [[16, "pyart-aux-io-read-odim-grid-h5"], [560, "pyart-aux-io-read-odim-grid-h5"]], "pyart.aux_io.read_odim_h5": [[17, "pyart-aux-io-read-odim-h5"], [561, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_odim_vp_h5": [[18, "pyart-aux-io-read-odim-vp-h5"], [562, "pyart-aux-io-read-odim-vp-h5"]], "pyart.aux_io.read_pattern": [[19, "pyart-aux-io-read-pattern"], [563, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_png": [[20, "pyart-aux-io-read-png"], [564, "pyart-aux-io-read-png"]], "pyart.aux_io.read_radx": [[21, "pyart-aux-io-read-radx"], [570, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_rainbow_psr": [[22, "pyart-aux-io-read-rainbow-psr"], [571, "pyart-aux-io-read-rainbow-psr"]], "pyart.aux_io.read_rainbow_psr_spectra": [[23, "pyart-aux-io-read-rainbow-psr-spectra"], [572, "pyart-aux-io-read-rainbow-psr-spectra"]], "pyart.aux_io.read_rainbow_wrl": [[24, "pyart-aux-io-read-rainbow-wrl"], [573, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_spectra": [[25, "pyart-aux-io-read-spectra"], [575, "pyart-aux-io-read-spectra"]], "pyart.aux_io.write_odim_grid_h5": [[26, "pyart-aux-io-write-odim-grid-h5"], [576, "pyart-aux-io-write-odim-grid-h5"]], "pyart.aux_io.write_odim_h5": [[27, "pyart-aux-io-write-odim-h5"], [577, "pyart-aux-io-write-odim-h5"]], "pyart.aux_io.write_spectra": [[28, "pyart-aux-io-write-spectra"], [579, "pyart-aux-io-write-spectra"]], "pyart.bridge.texture_of_complex_phase": [[29, "pyart-bridge-texture-of-complex-phase"], [581, "pyart-bridge-texture-of-complex-phase"]], "pyart.config.FileMetadata": [[30, "pyart-config-filemetadata"], [583, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[31, "pyart-config-filemetadata-call"], [584, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[32, "pyart-config-filemetadata-get-field-name"], [585, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[33, "pyart-config-filemetadata-get-metadata"], [586, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[34, "pyart-config-get-field-colormap"], [587, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[35, "pyart-config-get-field-limits"], [588, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[36, "pyart-config-get-field-mapping"], [589, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[37, "pyart-config-get-field-name"], [590, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[38, "pyart-config-get-fillvalue"], [591, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[39, "pyart-config-get-metadata"], [592, "pyart-config-get-metadata"]], "pyart.config.load_config": [[40, "pyart-config-load-config"], [593, "pyart-config-load-config"]], "pyart.core.Grid": [[41, "pyart-core-grid"], [595, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[42, "pyart-core-grid-add-field"], [596, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[43, "pyart-core-grid-get-point-longitude-latitude"], [597, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[44, "pyart-core-grid-get-projparams"], [598, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[45, "pyart-core-grid-init-point-altitude"], [599, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[46, "pyart-core-grid-init-point-longitude-latitude"], [600, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[47, "pyart-core-grid-init-point-x-y-z"], [601, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[48, "pyart-core-grid-projection-proj"], [602, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[49, "pyart-core-grid-to-xarray"], [603, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[50, "pyart-core-grid-write"], [604, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[51, "pyart-core-horizontalwindprofile"], [605, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[52, "pyart-core-horizontalwindprofile-from-u-and-v"], [606, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[53, "pyart-core-horizontalwindprofile-u-wind"], [607, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[54, "pyart-core-horizontalwindprofile-v-wind"], [608, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[55, "pyart-core-radar"], [609, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[56, "pyart-core-radar-add-field"], [610, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[57, "pyart-core-radar-add-field-like"], [611, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[58, "pyart-core-radar-add-filter"], [612, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[59, "pyart-core-radar-check-field-exists"], [613, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[60, "pyart-core-radar-extract-sweeps"], [614, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[61, "pyart-core-radar-get-azimuth"], [615, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[62, "pyart-core-radar-get-elevation"], [616, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[63, "pyart-core-radar-get-end"], [617, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[64, "pyart-core-radar-get-field"], [618, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[65, "pyart-core-radar-get-gate-area"], [619, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[66, "pyart-core-radar-get-gate-lat-lon-alt"], [620, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[67, "pyart-core-radar-get-gate-x-y-z"], [621, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[68, "pyart-core-radar-get-nyquist-vel"], [622, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[69, "pyart-core-radar-get-slice"], [623, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[70, "pyart-core-radar-get-start"], [624, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[71, "pyart-core-radar-get-start-end"], [625, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[72, "pyart-core-radar-info"], [626, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[73, "pyart-core-radar-init-gate-altitude"], [627, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[74, "pyart-core-radar-init-gate-longitude-latitude"], [628, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[75, "pyart-core-radar-init-gate-x-y-z"], [629, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[76, "pyart-core-radar-init-rays-per-sweep"], [630, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[77, "pyart-core-radar-iter-azimuth"], [631, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[78, "pyart-core-radar-iter-elevation"], [632, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[79, "pyart-core-radar-iter-end"], [633, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[80, "pyart-core-radar-iter-field"], [634, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[81, "pyart-core-radar-iter-slice"], [635, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[82, "pyart-core-radar-iter-start"], [636, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[83, "pyart-core-radar-iter-start-end"], [637, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[84, "pyart-core-radarspectra"], [638, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.add_field": [[85, "pyart-core-radarspectra-add-field"], [639, "pyart-core-radarspectra-add-field"]], "pyart.core.RadarSpectra.add_field_like": [[86, "pyart-core-radarspectra-add-field-like"], [640, "pyart-core-radarspectra-add-field-like"]], "pyart.core.RadarSpectra.add_filter": [[87, "pyart-core-radarspectra-add-filter"], [641, "pyart-core-radarspectra-add-filter"]], "pyart.core.RadarSpectra.check_field_exists": [[88, "pyart-core-radarspectra-check-field-exists"], [642, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.extract_sweeps": [[89, "pyart-core-radarspectra-extract-sweeps"], [643, "pyart-core-radarspectra-extract-sweeps"]], "pyart.core.RadarSpectra.get_azimuth": [[90, "pyart-core-radarspectra-get-azimuth"], [644, "pyart-core-radarspectra-get-azimuth"]], "pyart.core.RadarSpectra.get_elevation": [[91, "pyart-core-radarspectra-get-elevation"], [645, "pyart-core-radarspectra-get-elevation"]], "pyart.core.RadarSpectra.get_end": [[92, "pyart-core-radarspectra-get-end"], [646, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_field": [[93, "pyart-core-radarspectra-get-field"], [647, "pyart-core-radarspectra-get-field"]], "pyart.core.RadarSpectra.get_gate_area": [[94, "pyart-core-radarspectra-get-gate-area"], [648, "pyart-core-radarspectra-get-gate-area"]], "pyart.core.RadarSpectra.get_gate_lat_lon_alt": [[95, "pyart-core-radarspectra-get-gate-lat-lon-alt"], [649, "pyart-core-radarspectra-get-gate-lat-lon-alt"]], "pyart.core.RadarSpectra.get_gate_x_y_z": [[96, "pyart-core-radarspectra-get-gate-x-y-z"], [650, "pyart-core-radarspectra-get-gate-x-y-z"]], "pyart.core.RadarSpectra.get_nyquist_vel": [[97, "pyart-core-radarspectra-get-nyquist-vel"], [651, "pyart-core-radarspectra-get-nyquist-vel"]], "pyart.core.RadarSpectra.get_slice": [[98, "pyart-core-radarspectra-get-slice"], [652, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[99, "pyart-core-radarspectra-get-start"], [653, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[100, "pyart-core-radarspectra-get-start-end"], [654, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.info": [[101, "pyart-core-radarspectra-info"], [655, "pyart-core-radarspectra-info"]], "pyart.core.RadarSpectra.init_gate_altitude": [[102, "pyart-core-radarspectra-init-gate-altitude"], [656, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[103, "pyart-core-radarspectra-init-gate-longitude-latitude"], [657, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[104, "pyart-core-radarspectra-init-gate-x-y-z"], [658, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[105, "pyart-core-radarspectra-init-rays-per-sweep"], [659, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[106, "pyart-core-radarspectra-iter-azimuth"], [660, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[107, "pyart-core-radarspectra-iter-elevation"], [661, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[108, "pyart-core-radarspectra-iter-end"], [662, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[109, "pyart-core-radarspectra-iter-field"], [663, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[110, "pyart-core-radarspectra-iter-slice"], [664, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[111, "pyart-core-radarspectra-iter-start"], [665, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[112, "pyart-core-radarspectra-iter-start-end"], [666, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.antenna_to_cartesian": [[113, "pyart-core-antenna-to-cartesian"], [667, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[114, "pyart-core-antenna-vectors-to-cartesian"], [668, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[115, "pyart-core-cartesian-to-antenna"], [669, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[116, "pyart-core-cartesian-to-geographic"], [670, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[117, "pyart-core-cartesian-to-geographic-aeqd"], [671, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[118, "pyart-core-cartesian-vectors-to-geographic"], [672, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[119, "pyart-core-geographic-to-cartesian"], [673, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[120, "pyart-core-geographic-to-cartesian-aeqd"], [674, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.core.wgs84_to_swissCH1903": [[121, "pyart-core-wgs84-to-swissch1903"], [675, "pyart-core-wgs84-to-swissch1903"]], "Test example": [[121, "test-example"], [675, "test-example"]], "pyart.correct.calculate_attenuation": [[122, "pyart-correct-calculate-attenuation"], [705, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[123, "pyart-correct-calculate-attenuation-philinear"], [706, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[124, "pyart-correct-calculate-attenuation-zphi"], [707, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.compute_apparent_vpr": [[125, "pyart-correct-compute-apparent-vpr"], [708, "pyart-correct-compute-apparent-vpr"]], "pyart.correct.compute_theoretical_vpr": [[126, "pyart-correct-compute-theoretical-vpr"], [709, "pyart-correct-compute-theoretical-vpr"]], "pyart.correct.correct_bias": [[127, "pyart-correct-correct-bias"], [710, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[128, "pyart-correct-correct-noise-rhohv"], [711, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.correct_sys_phase": [[129, "pyart-correct-correct-sys-phase"], [712, "pyart-correct-correct-sys-phase"]], "pyart.correct.correct_visibility": [[130, "pyart-correct-correct-visibility"], [713, "pyart-correct-correct-visibility"]], "pyart.correct.correct_vpr": [[131, "pyart-correct-correct-vpr"], [714, "pyart-correct-correct-vpr"]], "pyart.correct.correct_vpr_spatialised": [[132, "pyart-correct-correct-vpr-spatialised"], [715, "pyart-correct-correct-vpr-spatialised"]], "pyart.correct.dealias_fourdd": [[133, "pyart-correct-dealias-fourdd"], [716, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[134, "pyart-correct-dealias-region-based"], [717, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[135, "pyart-correct-dealias-unwrap-phase"], [718, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[136, "pyart-correct-despeckle-field"], [719, "pyart-correct-despeckle-field"]], "pyart.correct.det_sys_phase_ray": [[137, "pyart-correct-det-sys-phase-ray"], [720, "pyart-correct-det-sys-phase-ray"]], "pyart.correct.est_rhohv_rain": [[138, "pyart-correct-est-rhohv-rain"], [721, "pyart-correct-est-rhohv-rain"]], "pyart.correct.est_zdr_precip": [[139, "pyart-correct-est-zdr-precip"], [722, "pyart-correct-est-zdr-precip"]], "pyart.correct.est_zdr_snow": [[140, "pyart-correct-est-zdr-snow"], [723, "pyart-correct-est-zdr-snow"]], "pyart.correct.find_objects": [[141, "pyart-correct-find-objects"], [724, "pyart-correct-find-objects"]], "pyart.correct.get_mask_fzl": [[142, "pyart-correct-get-mask-fzl"], [726, "pyart-correct-get-mask-fzl"]], "pyart.correct.get_sun_hits": [[143, "pyart-correct-get-sun-hits"], [727, "pyart-correct-get-sun-hits"]], "pyart.correct.get_sun_hits_ivic": [[144, "pyart-correct-get-sun-hits-ivic"], [728, "pyart-correct-get-sun-hits-ivic"]], "pyart.correct.get_sun_hits_psr": [[145, "pyart-correct-get-sun-hits-psr"], [729, "pyart-correct-get-sun-hits-psr"]], "pyart.correct.phase_proc_lp": [[146, "pyart-correct-phase-proc-lp"], [731, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[147, "pyart-correct-phase-proc-lp-gf"], [732, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.ptoa_to_sf": [[148, "pyart-correct-ptoa-to-sf"], [733, "pyart-correct-ptoa-to-sf"]], "pyart.correct.scanning_losses": [[149, "pyart-correct-scanning-losses"], [735, "pyart-correct-scanning-losses"]], "pyart.correct.selfconsistency_bias": [[150, "pyart-correct-selfconsistency-bias"], [736, "pyart-correct-selfconsistency-bias"]], "pyart.correct.selfconsistency_bias2": [[151, "pyart-correct-selfconsistency-bias2"], [737, "pyart-correct-selfconsistency-bias2"]], "pyart.correct.selfconsistency_kdp_phidp": [[152, "pyart-correct-selfconsistency-kdp-phidp"], [738, "pyart-correct-selfconsistency-kdp-phidp"]], "pyart.correct.smooth_masked": [[153, "pyart-correct-smooth-masked"], [739, "pyart-correct-smooth-masked"]], "pyart.correct.smooth_phidp_double_window": [[154, "pyart-correct-smooth-phidp-double-window"], [740, "pyart-correct-smooth-phidp-double-window"]], "pyart.correct.smooth_phidp_single_window": [[155, "pyart-correct-smooth-phidp-single-window"], [741, "pyart-correct-smooth-phidp-single-window"]], "pyart.correct.solar_flux_lookup": [[156, "pyart-correct-solar-flux-lookup"], [742, "pyart-correct-solar-flux-lookup"]], "pyart.correct.sun_position_mfr": [[157, "pyart-correct-sun-position-mfr"], [743, "pyart-correct-sun-position-mfr"]], "pyart.correct.sun_position_pysolar": [[158, "pyart-correct-sun-position-pysolar"], [744, "pyart-correct-sun-position-pysolar"]], "pyart.correct.sun_power": [[159, "pyart-correct-sun-power"], [745, "pyart-correct-sun-power"]], "pyart.correct.sun_retrieval": [[160, "pyart-correct-sun-retrieval"], [746, "pyart-correct-sun-retrieval"]], "pyart.exceptions.DeprecatedAttribute": [[161, "pyart-exceptions-deprecatedattribute"]], "pyart.exceptions.DeprecatedFunctionName": [[162, "pyart-exceptions-deprecatedfunctionname"]], "pyart.exceptions.MissingOptionalDependency": [[163, "pyart-exceptions-missingoptionaldependency"]], "pyart.exceptions._deprecated_alias": [[164, "pyart-exceptions-deprecated-alias"]], "pyart.filters.GateFilter": [[165, "pyart-filters-gatefilter"], [749, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[166, "pyart-filters-gatefilter-copy"], [750, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[167, "pyart-filters-gatefilter-exclude-above"], [751, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[168, "pyart-filters-gatefilter-exclude-all"], [752, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[169, "pyart-filters-gatefilter-exclude-below"], [753, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[170, "pyart-filters-gatefilter-exclude-equal"], [754, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[171, "pyart-filters-gatefilter-exclude-gates"], [755, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[172, "pyart-filters-gatefilter-exclude-inside"], [756, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[173, "pyart-filters-gatefilter-exclude-invalid"], [757, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[174, "pyart-filters-gatefilter-exclude-masked"], [758, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[175, "pyart-filters-gatefilter-exclude-none"], [759, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[176, "pyart-filters-gatefilter-exclude-not-equal"], [760, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[177, "pyart-filters-gatefilter-exclude-outside"], [761, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[178, "pyart-filters-gatefilter-exclude-transition"], [762, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[179, "pyart-filters-gatefilter-gate-excluded"], [763, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[180, "pyart-filters-gatefilter-gate-included"], [764, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[181, "pyart-filters-gatefilter-include-above"], [765, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[182, "pyart-filters-gatefilter-include-all"], [766, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[183, "pyart-filters-gatefilter-include-below"], [767, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[184, "pyart-filters-gatefilter-include-equal"], [768, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[185, "pyart-filters-gatefilter-include-gates"], [769, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[186, "pyart-filters-gatefilter-include-inside"], [770, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[187, "pyart-filters-gatefilter-include-none"], [771, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[188, "pyart-filters-gatefilter-include-not-equal"], [772, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[189, "pyart-filters-gatefilter-include-not-masked"], [773, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[190, "pyart-filters-gatefilter-include-not-transition"], [774, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[191, "pyart-filters-gatefilter-include-outside"], [775, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[192, "pyart-filters-gatefilter-include-valid"], [776, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.birds_gate_filter": [[193, "pyart-filters-birds-gate-filter"], [777, "pyart-filters-birds-gate-filter"]], "pyart.filters.class_based_gate_filter": [[194, "pyart-filters-class-based-gate-filter"], [778, "pyart-filters-class-based-gate-filter"]], "pyart.filters.iso0_based_gate_filter": [[195, "pyart-filters-iso0-based-gate-filter"], [779, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[196, "pyart-filters-moment-and-texture-based-gate-filter"], [780, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[197, "pyart-filters-moment-based-gate-filter"], [781, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.snr_based_gate_filter": [[198, "pyart-filters-snr-based-gate-filter"], [782, "pyart-filters-snr-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[199, "pyart-filters-temp-based-gate-filter"], [783, "pyart-filters-temp-based-gate-filter"]], "pyart.filters.visibility_based_gate_filter": [[200, "pyart-filters-visibility-based-gate-filter"], [784, "pyart-filters-visibility-based-gate-filter"]], "pyart.graph.AirborneRadarDisplay": [[201, "pyart-graph-airborneradardisplay"], [786, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[202, "pyart-graph-airborneradardisplay-generate-az-rhi-title"], [787, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[203, "pyart-graph-airborneradardisplay-generate-filename"], [788, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[204, "pyart-graph-airborneradardisplay-generate-ray-title"], [789, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[205, "pyart-graph-airborneradardisplay-generate-title"], [790, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[206, "pyart-graph-airborneradardisplay-generate-vpt-title"], [791, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.generate_xsection_title": [[207, "pyart-graph-airborneradardisplay-generate-xsection-title"], [792, "pyart-graph-airborneradardisplay-generate-xsection-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[208, "pyart-graph-airborneradardisplay-label-xaxis-r"], [793, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[209, "pyart-graph-airborneradardisplay-label-xaxis-rays"], [794, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[210, "pyart-graph-airborneradardisplay-label-xaxis-time"], [795, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[211, "pyart-graph-airborneradardisplay-label-xaxis-x"], [796, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection": [[212, "pyart-graph-airborneradardisplay-label-xaxis-xsection"], [797, "pyart-graph-airborneradardisplay-label-xaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[213, "pyart-graph-airborneradardisplay-label-yaxis-field"], [798, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection": [[214, "pyart-graph-airborneradardisplay-label-yaxis-xsection"], [799, "pyart-graph-airborneradardisplay-label-yaxis-xsection"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[215, "pyart-graph-airborneradardisplay-label-yaxis-y"], [800, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[216, "pyart-graph-airborneradardisplay-label-yaxis-z"], [801, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[217, "pyart-graph-airborneradardisplay-plot"], [802, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[218, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"], [803, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[219, "pyart-graph-airborneradardisplay-plot-colorbar"], [804, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[220, "pyart-graph-airborneradardisplay-plot-cr-raster"], [805, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[221, "pyart-graph-airborneradardisplay-plot-cross-hair"], [806, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[222, "pyart-graph-airborneradardisplay-plot-grid-lines"], [807, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[223, "pyart-graph-airborneradardisplay-plot-label"], [808, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[224, "pyart-graph-airborneradardisplay-plot-labels"], [809, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[225, "pyart-graph-airborneradardisplay-plot-ppi"], [810, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[226, "pyart-graph-airborneradardisplay-plot-range-ring"], [811, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[227, "pyart-graph-airborneradardisplay-plot-range-rings"], [812, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[228, "pyart-graph-airborneradardisplay-plot-ray"], [813, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[229, "pyart-graph-airborneradardisplay-plot-rhi"], [814, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[230, "pyart-graph-airborneradardisplay-plot-sweep-grid"], [815, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[231, "pyart-graph-airborneradardisplay-plot-vpt"], [816, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.plot_xsection": [[232, "pyart-graph-airborneradardisplay-plot-xsection"], [817, "pyart-graph-airborneradardisplay-plot-xsection"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[233, "pyart-graph-airborneradardisplay-set-aspect-ratio"], [818, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[234, "pyart-graph-airborneradardisplay-set-limits"], [819, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[235, "pyart-graph-gridmapdisplay"], [820, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[236, "pyart-graph-gridmapdisplay-cartopy-coastlines"], [821, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[237, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"], [822, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[238, "pyart-graph-gridmapdisplay-cartopy-states"], [823, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[239, "pyart-graph-gridmapdisplay-generate-filename"], [824, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[240, "pyart-graph-gridmapdisplay-generate-grid-title"], [825, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[241, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"], [826, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[242, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"], [827, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[243, "pyart-graph-gridmapdisplay-plot-colorbar"], [828, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[244, "pyart-graph-gridmapdisplay-plot-cross-section"], [829, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_cross_section_level": [[245, "pyart-graph-gridmapdisplay-plot-cross-section-level"], [830, "pyart-graph-gridmapdisplay-plot-cross-section-level"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[246, "pyart-graph-gridmapdisplay-plot-crosshairs"], [831, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[247, "pyart-graph-gridmapdisplay-plot-grid"], [832, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_grid_contour": [[248, "pyart-graph-gridmapdisplay-plot-grid-contour"], [833, "pyart-graph-gridmapdisplay-plot-grid-contour"]], "pyart.graph.GridMapDisplay.plot_grid_raw": [[249, "pyart-graph-gridmapdisplay-plot-grid-raw"], [834, "pyart-graph-gridmapdisplay-plot-grid-raw"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[250, "pyart-graph-gridmapdisplay-plot-latitude-slice"], [835, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[251, "pyart-graph-gridmapdisplay-plot-latitudinal-level"], [836, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[252, "pyart-graph-gridmapdisplay-plot-longitude-slice"], [837, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[253, "pyart-graph-gridmapdisplay-plot-longitudinal-level"], [838, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[254, "pyart-graph-gridmapdisplaybasemap"], [839, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[255, "pyart-graph-gridmapdisplaybasemap-generate-filename"], [840, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[256, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"], [841, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[257, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"], [842, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[258, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"], [843, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[259, "pyart-graph-gridmapdisplaybasemap-get-basemap"], [844, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[260, "pyart-graph-gridmapdisplaybasemap-plot-basemap"], [845, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[261, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"], [846, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[262, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"], [847, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[263, "pyart-graph-gridmapdisplaybasemap-plot-grid"], [848, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[264, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"], [849, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[265, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"], [850, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[266, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"], [851, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[267, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"], [852, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[268, "pyart-graph-radardisplay"], [853, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[269, "pyart-graph-radardisplay-generate-az-rhi-title"], [854, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[270, "pyart-graph-radardisplay-generate-filename"], [855, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[271, "pyart-graph-radardisplay-generate-ray-title"], [856, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[272, "pyart-graph-radardisplay-generate-title"], [857, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[273, "pyart-graph-radardisplay-generate-vpt-title"], [858, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.generate_xsection_title": [[274, "pyart-graph-radardisplay-generate-xsection-title"], [859, "pyart-graph-radardisplay-generate-xsection-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[275, "pyart-graph-radardisplay-label-xaxis-r"], [860, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[276, "pyart-graph-radardisplay-label-xaxis-rays"], [861, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[277, "pyart-graph-radardisplay-label-xaxis-time"], [862, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[278, "pyart-graph-radardisplay-label-xaxis-x"], [863, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_xaxis_xsection": [[279, "pyart-graph-radardisplay-label-xaxis-xsection"], [864, "pyart-graph-radardisplay-label-xaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[280, "pyart-graph-radardisplay-label-yaxis-field"], [865, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_xsection": [[281, "pyart-graph-radardisplay-label-yaxis-xsection"], [866, "pyart-graph-radardisplay-label-yaxis-xsection"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[282, "pyart-graph-radardisplay-label-yaxis-y"], [867, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[283, "pyart-graph-radardisplay-label-yaxis-z"], [868, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[284, "pyart-graph-radardisplay-plot"], [869, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[285, "pyart-graph-radardisplay-plot-azimuth-to-rhi"], [870, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[286, "pyart-graph-radardisplay-plot-colorbar"], [871, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[287, "pyart-graph-radardisplay-plot-cr-raster"], [872, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[288, "pyart-graph-radardisplay-plot-cross-hair"], [873, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[289, "pyart-graph-radardisplay-plot-grid-lines"], [874, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[290, "pyart-graph-radardisplay-plot-label"], [875, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[291, "pyart-graph-radardisplay-plot-labels"], [876, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[292, "pyart-graph-radardisplay-plot-ppi"], [877, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[293, "pyart-graph-radardisplay-plot-range-ring"], [878, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[294, "pyart-graph-radardisplay-plot-range-rings"], [879, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[295, "pyart-graph-radardisplay-plot-ray"], [880, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[296, "pyart-graph-radardisplay-plot-rhi"], [881, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[297, "pyart-graph-radardisplay-plot-vpt"], [882, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.plot_xsection": [[298, "pyart-graph-radardisplay-plot-xsection"], [883, "pyart-graph-radardisplay-plot-xsection"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[299, "pyart-graph-radardisplay-set-aspect-ratio"], [884, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[300, "pyart-graph-radardisplay-set-limits"], [885, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[301, "pyart-graph-radarmapdisplay"], [886, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[302, "pyart-graph-radarmapdisplay-generate-az-rhi-title"], [887, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[303, "pyart-graph-radarmapdisplay-generate-filename"], [888, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[304, "pyart-graph-radarmapdisplay-generate-ray-title"], [889, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[305, "pyart-graph-radarmapdisplay-generate-title"], [890, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[306, "pyart-graph-radarmapdisplay-generate-vpt-title"], [891, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.generate_xsection_title": [[307, "pyart-graph-radarmapdisplay-generate-xsection-title"], [892, "pyart-graph-radarmapdisplay-generate-xsection-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[308, "pyart-graph-radarmapdisplay-label-xaxis-r"], [893, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[309, "pyart-graph-radarmapdisplay-label-xaxis-rays"], [894, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[310, "pyart-graph-radarmapdisplay-label-xaxis-time"], [895, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[311, "pyart-graph-radarmapdisplay-label-xaxis-x"], [896, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_xaxis_xsection": [[312, "pyart-graph-radarmapdisplay-label-xaxis-xsection"], [897, "pyart-graph-radarmapdisplay-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[313, "pyart-graph-radarmapdisplay-label-yaxis-field"], [898, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_xsection": [[314, "pyart-graph-radarmapdisplay-label-yaxis-xsection"], [899, "pyart-graph-radarmapdisplay-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[315, "pyart-graph-radarmapdisplay-label-yaxis-y"], [900, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[316, "pyart-graph-radarmapdisplay-label-yaxis-z"], [901, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[317, "pyart-graph-radarmapdisplay-plot"], [902, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[318, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"], [903, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[319, "pyart-graph-radarmapdisplay-plot-colorbar"], [904, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[320, "pyart-graph-radarmapdisplay-plot-cr-raster"], [905, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[321, "pyart-graph-radarmapdisplay-plot-cross-hair"], [906, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[322, "pyart-graph-radarmapdisplay-plot-grid-lines"], [907, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[323, "pyart-graph-radarmapdisplay-plot-label"], [908, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[324, "pyart-graph-radarmapdisplay-plot-labels"], [909, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[325, "pyart-graph-radarmapdisplay-plot-line-geo"], [910, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[326, "pyart-graph-radarmapdisplay-plot-line-xy"], [911, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[327, "pyart-graph-radarmapdisplay-plot-point"], [912, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[328, "pyart-graph-radarmapdisplay-plot-ppi"], [913, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[329, "pyart-graph-radarmapdisplay-plot-ppi-map"], [914, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[330, "pyart-graph-radarmapdisplay-plot-range-ring"], [915, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[331, "pyart-graph-radarmapdisplay-plot-range-rings"], [916, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[332, "pyart-graph-radarmapdisplay-plot-ray"], [917, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[333, "pyart-graph-radarmapdisplay-plot-rhi"], [918, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[334, "pyart-graph-radarmapdisplay-plot-vpt"], [919, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.plot_xsection": [[335, "pyart-graph-radarmapdisplay-plot-xsection"], [920, "pyart-graph-radarmapdisplay-plot-xsection"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[336, "pyart-graph-radarmapdisplay-set-aspect-ratio"], [921, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[337, "pyart-graph-radarmapdisplay-set-limits"], [922, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[338, "pyart-graph-radarmapdisplaybasemap"], [923, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[339, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"], [924, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[340, "pyart-graph-radarmapdisplaybasemap-generate-filename"], [925, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[341, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"], [926, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[342, "pyart-graph-radarmapdisplaybasemap-generate-title"], [927, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[343, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"], [928, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title": [[344, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"], [929, "pyart-graph-radarmapdisplaybasemap-generate-xsection-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[345, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"], [930, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[346, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"], [931, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[347, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"], [932, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[348, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"], [933, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection": [[349, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"], [934, "pyart-graph-radarmapdisplaybasemap-label-xaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[350, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"], [935, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection": [[351, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"], [936, "pyart-graph-radarmapdisplaybasemap-label-yaxis-xsection"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[352, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"], [937, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[353, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"], [938, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[354, "pyart-graph-radarmapdisplaybasemap-plot"], [939, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[355, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"], [940, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[356, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"], [941, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[357, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"], [942, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[358, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"], [943, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[359, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"], [944, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[360, "pyart-graph-radarmapdisplaybasemap-plot-label"], [945, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[361, "pyart-graph-radarmapdisplaybasemap-plot-labels"], [946, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[362, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"], [947, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[363, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"], [948, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[364, "pyart-graph-radarmapdisplaybasemap-plot-point"], [949, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[365, "pyart-graph-radarmapdisplaybasemap-plot-ppi"], [950, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[366, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"], [951, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[367, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"], [952, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[368, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"], [953, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[369, "pyart-graph-radarmapdisplaybasemap-plot-ray"], [954, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[370, "pyart-graph-radarmapdisplaybasemap-plot-rhi"], [955, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[371, "pyart-graph-radarmapdisplaybasemap-plot-vpt"], [956, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.plot_xsection": [[372, "pyart-graph-radarmapdisplaybasemap-plot-xsection"], [957, "pyart-graph-radarmapdisplaybasemap-plot-xsection"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[373, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"], [958, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[374, "pyart-graph-radarmapdisplaybasemap-set-limits"], [959, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.io.make_time_unit_str": [[375, "pyart-io-make-time-unit-str"], [962, "pyart-io-make-time-unit-str"]], "pyart.io.prepare_for_read": [[376, "pyart-io-prepare-for-read"], [963, "pyart-io-prepare-for-read"]], "pyart.io.read": [[377, "pyart-io-read"], [964, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[378, "pyart-io-read-arm-sonde"], [965, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[379, "pyart-io-read-arm-sonde-vap"], [966, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[380, "pyart-io-read-cfradial"], [967, "pyart-io-read-cfradial"]], "pyart.io.read_cfradial2": [[381, "pyart-io-read-cfradial2"], [968, "pyart-io-read-cfradial2"]], "pyart.io.read_chl": [[382, "pyart-io-read-chl"], [969, "pyart-io-read-chl"]], "pyart.io.read_grid": [[383, "pyart-io-read-grid"], [970, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[384, "pyart-io-read-grid-mdv"], [971, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[385, "pyart-io-read-mdv"], [972, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[386, "pyart-io-read-nexrad-archive"], [973, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[387, "pyart-io-read-nexrad-cdm"], [974, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[388, "pyart-io-read-nexrad-level3"], [975, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[389, "pyart-io-read-rsl"], [976, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[390, "pyart-io-read-sigmet"], [977, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[391, "pyart-io-read-uf"], [978, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[392, "pyart-io-write-cfradial"], [979, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[393, "pyart-io-write-grid"], [980, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[394, "pyart-io-write-grid-geotiff"], [981, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[395, "pyart-io-write-grid-mdv"], [982, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[396, "pyart-io-write-uf"], [983, "pyart-io-write-uf"]], "pyart.lazydict.LazyLoadDict": [[397, "pyart-lazydict-lazyloaddict"], [985, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.__class_getitem__": [[398, "pyart-lazydict-lazyloaddict-class-getitem"]], "pyart.lazydict.LazyLoadDict.__contains__": [[399, "pyart-lazydict-lazyloaddict-contains"]], "pyart.lazydict.LazyLoadDict.__delattr__": [[400, "pyart-lazydict-lazyloaddict-delattr"]], "pyart.lazydict.LazyLoadDict.__delitem__": [[401, "pyart-lazydict-lazyloaddict-delitem"]], "pyart.lazydict.LazyLoadDict.__dir__": [[402, "pyart-lazydict-lazyloaddict-dir"]], "pyart.lazydict.LazyLoadDict.__eq__": [[403, "pyart-lazydict-lazyloaddict-eq"]], "pyart.lazydict.LazyLoadDict.__format__": [[404, "pyart-lazydict-lazyloaddict-format"]], "pyart.lazydict.LazyLoadDict.__ge__": [[405, "pyart-lazydict-lazyloaddict-ge"]], "pyart.lazydict.LazyLoadDict.__getattribute__": [[406, "pyart-lazydict-lazyloaddict-getattribute"]], "pyart.lazydict.LazyLoadDict.__getitem__": [[407, "pyart-lazydict-lazyloaddict-getitem"]], "pyart.lazydict.LazyLoadDict.__getstate__": [[408, "pyart-lazydict-lazyloaddict-getstate"]], "pyart.lazydict.LazyLoadDict.__gt__": [[409, "pyart-lazydict-lazyloaddict-gt"]], "pyart.lazydict.LazyLoadDict.__init__": [[410, "pyart-lazydict-lazyloaddict-init"]], "pyart.lazydict.LazyLoadDict.__init_subclass__": [[411, "pyart-lazydict-lazyloaddict-init-subclass"]], "pyart.lazydict.LazyLoadDict.__iter__": [[412, "pyart-lazydict-lazyloaddict-iter"]], "pyart.lazydict.LazyLoadDict.__le__": [[413, "pyart-lazydict-lazyloaddict-le"]], "pyart.lazydict.LazyLoadDict.__len__": [[414, "pyart-lazydict-lazyloaddict-len"]], "pyart.lazydict.LazyLoadDict.__lt__": [[415, "pyart-lazydict-lazyloaddict-lt"]], "pyart.lazydict.LazyLoadDict.__ne__": [[416, "pyart-lazydict-lazyloaddict-ne"]], "pyart.lazydict.LazyLoadDict.__new__": [[417, "pyart-lazydict-lazyloaddict-new"]], "pyart.lazydict.LazyLoadDict.__reduce__": [[418, "pyart-lazydict-lazyloaddict-reduce"]], "pyart.lazydict.LazyLoadDict.__reduce_ex__": [[419, "pyart-lazydict-lazyloaddict-reduce-ex"]], "pyart.lazydict.LazyLoadDict.__repr__": [[420, "pyart-lazydict-lazyloaddict-repr"]], "pyart.lazydict.LazyLoadDict.__setattr__": [[421, "pyart-lazydict-lazyloaddict-setattr"]], "pyart.lazydict.LazyLoadDict.__setitem__": [[422, "pyart-lazydict-lazyloaddict-setitem"]], "pyart.lazydict.LazyLoadDict.__sizeof__": [[423, "pyart-lazydict-lazyloaddict-sizeof"]], "pyart.lazydict.LazyLoadDict.__str__": [[424, "pyart-lazydict-lazyloaddict-str"]], "pyart.lazydict.LazyLoadDict.__subclasshook__": [[425, "pyart-lazydict-lazyloaddict-subclasshook"]], "pyart.lazydict.LazyLoadDict.clear": [[426, "pyart-lazydict-lazyloaddict-clear"], [986, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[427, "pyart-lazydict-lazyloaddict-copy"], [987, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[428, "pyart-lazydict-lazyloaddict-get"], [988, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[429, "pyart-lazydict-lazyloaddict-has-key"], [989, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[430, "pyart-lazydict-lazyloaddict-items"], [990, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[431, "pyart-lazydict-lazyloaddict-keys"], [991, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[432, "pyart-lazydict-lazyloaddict-pop"], [992, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[433, "pyart-lazydict-lazyloaddict-popitem"], [993, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[434, "pyart-lazydict-lazyloaddict-set-lazy"], [994, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[435, "pyart-lazydict-lazyloaddict-setdefault"], [995, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[436, "pyart-lazydict-lazyloaddict-update"], [996, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[437, "pyart-lazydict-lazyloaddict-values"], [997, "pyart-lazydict-lazyloaddict-values"]], "pyart.map.example_roi_func_constant": [[438, "pyart-map-example-roi-func-constant"], [1013, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[439, "pyart-map-example-roi-func-dist"], [1014, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[440, "pyart-map-example-roi-func-dist-beam"], [1015, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[441, "pyart-map-grid-from-radars"], [1017, "pyart-map-grid-from-radars"]], "pyart.map.map_gates_to_grid": [[442, "pyart-map-map-gates-to-grid"], [1018, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[443, "pyart-map-map-to-grid"], [1019, "pyart-map-map-to-grid"]], "pyart.retrieve._destandardize": [[444, "pyart-retrieve-destandardize"]], "pyart.retrieve._get_res_vol_sides": [[445, "pyart-retrieve-get-res-vol-sides"]], "pyart.retrieve.atmospheric_gas_att": [[446, "pyart-retrieve-atmospheric-gas-att"], [1022, "pyart-retrieve-atmospheric-gas-att"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[447, "pyart-retrieve-calculate-snr-from-reflectivity"], [1023, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[448, "pyart-retrieve-calculate-velocity-texture"], [1024, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.compute_Doppler_velocity": [[449, "pyart-retrieve-compute-doppler-velocity"], [1026, "pyart-retrieve-compute-doppler-velocity"]], "pyart.retrieve.compute_Doppler_velocity_iq": [[450, "pyart-retrieve-compute-doppler-velocity-iq"], [1027, "pyart-retrieve-compute-doppler-velocity-iq"]], "pyart.retrieve.compute_Doppler_width": [[451, "pyart-retrieve-compute-doppler-width"], [1028, "pyart-retrieve-compute-doppler-width"]], "pyart.retrieve.compute_Doppler_width_iq": [[452, "pyart-retrieve-compute-doppler-width-iq"], [1029, "pyart-retrieve-compute-doppler-width-iq"]], "pyart.retrieve.compute_apparent_profile": [[453, "pyart-retrieve-compute-apparent-profile"], [1030, "pyart-retrieve-compute-apparent-profile"]], "pyart.retrieve.compute_bird_density": [[454, "pyart-retrieve-compute-bird-density"], [1031, "pyart-retrieve-compute-bird-density"]], "pyart.retrieve.compute_ccor": [[455, "pyart-retrieve-compute-ccor"], [1032, "pyart-retrieve-compute-ccor"]], "pyart.retrieve.compute_cdr": [[456, "pyart-retrieve-compute-cdr"], [1033, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_centroids": [[457, "pyart-retrieve-compute-centroids"], [1034, "pyart-retrieve-compute-centroids"]], "pyart.retrieve.compute_differential_phase": [[458, "pyart-retrieve-compute-differential-phase"], [1035, "pyart-retrieve-compute-differential-phase"]], "pyart.retrieve.compute_differential_phase_iq": [[459, "pyart-retrieve-compute-differential-phase-iq"], [1036, "pyart-retrieve-compute-differential-phase-iq"]], "pyart.retrieve.compute_differential_reflectivity": [[460, "pyart-retrieve-compute-differential-reflectivity"], [1037, "pyart-retrieve-compute-differential-reflectivity"]], "pyart.retrieve.compute_differential_reflectivity_iq": [[461, "pyart-retrieve-compute-differential-reflectivity-iq"], [1038, "pyart-retrieve-compute-differential-reflectivity-iq"]], "pyart.retrieve.compute_evp": [[462, "pyart-retrieve-compute-evp"], [1039, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_iq": [[463, "pyart-retrieve-compute-iq"], [1040, "pyart-retrieve-compute-iq"]], "pyart.retrieve.compute_l": [[464, "pyart-retrieve-compute-l"], [1041, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_mean_phase_iq": [[465, "pyart-retrieve-compute-mean-phase-iq"], [1042, "pyart-retrieve-compute-mean-phase-iq"]], "pyart.retrieve.compute_noise_power": [[466, "pyart-retrieve-compute-noise-power"], [1043, "pyart-retrieve-compute-noise-power"]], "pyart.retrieve.compute_noisedBZ": [[467, "pyart-retrieve-compute-noisedbz"], [1044, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_pol_variables": [[468, "pyart-retrieve-compute-pol-variables"], [1045, "pyart-retrieve-compute-pol-variables"]], "pyart.retrieve.compute_pol_variables_iq": [[469, "pyart-retrieve-compute-pol-variables-iq"], [1046, "pyart-retrieve-compute-pol-variables-iq"]], "pyart.retrieve.compute_qvp": [[470, "pyart-retrieve-compute-qvp"], [1047, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_radial_noise_hs": [[471, "pyart-retrieve-compute-radial-noise-hs"], [1048, "pyart-retrieve-compute-radial-noise-hs"]], "pyart.retrieve.compute_radial_noise_ivic": [[472, "pyart-retrieve-compute-radial-noise-ivic"], [1049, "pyart-retrieve-compute-radial-noise-ivic"]], "pyart.retrieve.compute_rcs": [[473, "pyart-retrieve-compute-rcs"], [1050, "pyart-retrieve-compute-rcs"]], "pyart.retrieve.compute_rcs_from_pr": [[474, "pyart-retrieve-compute-rcs-from-pr"], [1051, "pyart-retrieve-compute-rcs-from-pr"]], "pyart.retrieve.compute_reflectivity": [[475, "pyart-retrieve-compute-reflectivity"], [1052, "pyart-retrieve-compute-reflectivity"]], "pyart.retrieve.compute_reflectivity_iq": [[476, "pyart-retrieve-compute-reflectivity-iq"], [1053, "pyart-retrieve-compute-reflectivity-iq"]], "pyart.retrieve.compute_rhohv": [[477, "pyart-retrieve-compute-rhohv"], [1054, "pyart-retrieve-compute-rhohv"]], "pyart.retrieve.compute_rhohv_iq": [[478, "pyart-retrieve-compute-rhohv-iq"], [1055, "pyart-retrieve-compute-rhohv-iq"]], "pyart.retrieve.compute_rqvp": [[479, "pyart-retrieve-compute-rqvp"], [1056, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_signal_power": [[480, "pyart-retrieve-compute-signal-power"], [1057, "pyart-retrieve-compute-signal-power"]], "pyart.retrieve.compute_snr": [[481, "pyart-retrieve-compute-snr"], [1058, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_spectra": [[482, "pyart-retrieve-compute-spectra"], [1059, "pyart-retrieve-compute-spectra"]], "pyart.retrieve.compute_spectral_differential_phase": [[483, "pyart-retrieve-compute-spectral-differential-phase"], [1060, "pyart-retrieve-compute-spectral-differential-phase"]], "pyart.retrieve.compute_spectral_differential_reflectivity": [[484, "pyart-retrieve-compute-spectral-differential-reflectivity"], [1061, "pyart-retrieve-compute-spectral-differential-reflectivity"]], "pyart.retrieve.compute_spectral_noise": [[485, "pyart-retrieve-compute-spectral-noise"], [1062, "pyart-retrieve-compute-spectral-noise"]], "pyart.retrieve.compute_spectral_phase": [[486, "pyart-retrieve-compute-spectral-phase"], [1063, "pyart-retrieve-compute-spectral-phase"]], "pyart.retrieve.compute_spectral_power": [[487, "pyart-retrieve-compute-spectral-power"], [1064, "pyart-retrieve-compute-spectral-power"]], "pyart.retrieve.compute_spectral_reflectivity": [[488, "pyart-retrieve-compute-spectral-reflectivity"], [1065, "pyart-retrieve-compute-spectral-reflectivity"]], "pyart.retrieve.compute_spectral_rhohv": [[489, "pyart-retrieve-compute-spectral-rhohv"], [1066, "pyart-retrieve-compute-spectral-rhohv"]], "pyart.retrieve.compute_st1_iq": [[490, "pyart-retrieve-compute-st1-iq"], [1067, "pyart-retrieve-compute-st1-iq"]], "pyart.retrieve.compute_st2_iq": [[491, "pyart-retrieve-compute-st2-iq"], [1068, "pyart-retrieve-compute-st2-iq"]], "pyart.retrieve.compute_svp": [[492, "pyart-retrieve-compute-svp"], [1069, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[493, "pyart-retrieve-compute-ts-along-coord"], [1070, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vol_refl": [[494, "pyart-retrieve-compute-vol-refl"], [1071, "pyart-retrieve-compute-vol-refl"]], "pyart.retrieve.compute_vp": [[495, "pyart-retrieve-compute-vp"], [1072, "pyart-retrieve-compute-vp"]], "pyart.retrieve.compute_wbn_iq": [[496, "pyart-retrieve-compute-wbn-iq"], [1073, "pyart-retrieve-compute-wbn-iq"]], "pyart.retrieve.conv_strat_yuter": [[497, "pyart-retrieve-conv-strat-yuter"], [1074, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.data_for_centroids": [[498, "pyart-retrieve-data-for-centroids"], [1075, "pyart-retrieve-data-for-centroids"]], "pyart.retrieve.detect_ml": [[499, "pyart-retrieve-detect-ml"], [1076, "pyart-retrieve-detect-ml"]], "Paremeters": [[499, "paremeters"], [1076, "paremeters"]], "pyart.retrieve.determine_medoids": [[500, "pyart-retrieve-determine-medoids"], [1077, "pyart-retrieve-determine-medoids"]], "pyart.retrieve.est_rain_rate_a": [[501, "pyart-retrieve-est-rain-rate-a"], [1078, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[502, "pyart-retrieve-est-rain-rate-hydro"], [1079, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[503, "pyart-retrieve-est-rain-rate-kdp"], [1080, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[504, "pyart-retrieve-est-rain-rate-z"], [1081, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[505, "pyart-retrieve-est-rain-rate-za"], [1082, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[506, "pyart-retrieve-est-rain-rate-zkdp"], [1083, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[507, "pyart-retrieve-est-rain-rate-zpoly"], [1084, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.est_vertical_windshear": [[508, "pyart-retrieve-est-vertical-windshear"], [1085, "pyart-retrieve-est-vertical-windshear"]], "pyart.retrieve.est_vertical_windshear_lidar": [[509, "pyart-retrieve-est-vertical-windshear-lidar"], [1086, "pyart-retrieve-est-vertical-windshear-lidar"]], "pyart.retrieve.est_wind_profile": [[510, "pyart-retrieve-est-wind-profile"], [1087, "pyart-retrieve-est-wind-profile"]], "pyart.retrieve.est_wind_vel": [[511, "pyart-retrieve-est-wind-vel"], [1088, "pyart-retrieve-est-wind-vel"]], "pyart.retrieve.fetch_radar_time_profile": [[512, "pyart-retrieve-fetch-radar-time-profile"], [1089, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.gecsx": [[513, "pyart-retrieve-gecsx"], [1090, "pyart-retrieve-gecsx"]], "pyart.retrieve.get_coeff_attg": [[514, "pyart-retrieve-get-coeff-attg"], [1091, "pyart-retrieve-get-coeff-attg"]], "pyart.retrieve.get_freq_band": [[515, "pyart-retrieve-get-freq-band"], [1092, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.get_iso0_val": [[516, "pyart-retrieve-get-iso0-val"], [1093, "pyart-retrieve-get-iso0-val"]], "pyart.retrieve.get_ml_rng_limits": [[517, "pyart-retrieve-get-ml-rng-limits"], [1094, "pyart-retrieve-get-ml-rng-limits"]], "pyart.retrieve.grid_displacement_pc": [[518, "pyart-retrieve-grid-displacement-pc"], [1095, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[519, "pyart-retrieve-grid-shift"], [1096, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[520, "pyart-retrieve-hydroclass-semisupervised"], [1097, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_leastsquare_double_window": [[521, "pyart-retrieve-kdp-leastsquare-double-window"], [1098, "pyart-retrieve-kdp-leastsquare-double-window"]], "pyart.retrieve.kdp_leastsquare_single_window": [[522, "pyart-retrieve-kdp-leastsquare-single-window"], [1099, "pyart-retrieve-kdp-leastsquare-single-window"]], "pyart.retrieve.kdp_maesaka": [[523, "pyart-retrieve-kdp-maesaka"], [1100, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[524, "pyart-retrieve-kdp-schneebeli"], [1101, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[525, "pyart-retrieve-kdp-vulpiani"], [1102, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[526, "pyart-retrieve-map-profile-to-gates"], [1103, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.melting_layer_giangrande": [[527, "pyart-retrieve-melting-layer-giangrande"], [1104, "pyart-retrieve-melting-layer-giangrande"]], "pyart.retrieve.melting_layer_hydroclass": [[528, "pyart-retrieve-melting-layer-hydroclass"], [1105, "pyart-retrieve-melting-layer-hydroclass"]], "pyart.retrieve.melting_layer_mf": [[529, "pyart-retrieve-melting-layer-mf"], [1106, "pyart-retrieve-melting-layer-mf"]], "pyart.retrieve.quasi_vertical_profile": [[530, "pyart-retrieve-quasi-vertical-profile"], [1107, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.select_samples": [[531, "pyart-retrieve-select-samples"], [1108, "pyart-retrieve-select-samples"]], "pyart.retrieve.steiner_conv_strat": [[532, "pyart-retrieve-steiner-conv-strat"], [1109, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.synthetic_obs_distribution": [[533, "pyart-retrieve-synthetic-obs-distribution"], [1110, "pyart-retrieve-synthetic-obs-distribution"]], "pyart.retrieve.texture_of_complex_phase": [[534, "pyart-retrieve-texture-of-complex-phase"], [1111, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[535, "pyart-retrieve-vad-browning"], [1112, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[536, "pyart-retrieve-vad-michelson"], [1113, "pyart-retrieve-vad-michelson"]], "pyart._debug_info": [[537, "pyart-debug-info"]], "pyart.aux_io": [[538, "pyart-aux-io"]], "Auxiliary input and output (pyart.aux_io)": [[538, "auxiliary-input-and-output-pyart-aux-io"]], "Reading radar data": [[538, "reading-radar-data"], [961, "reading-radar-data"]], "Writing radar data": [[538, "writing-radar-data"], [961, "writing-radar-data"]], "pyart.aux_io.convert_data": [[539, "pyart-aux-io-convert-data"]], "pyart.aux_io.get_library": [[540, "pyart-aux-io-get-library"]], "pyart.aux_io.read_edge_netcdf": [[549, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_file_c": [[550, "pyart-aux-io-read-file-c"]], "pyart.aux_io.read_file_py": [[551, "pyart-aux-io-read-file-py"]], "pyart.aux_io.read_product_c": [[565, "pyart-aux-io-read-product-c"]], "pyart.aux_io.read_product_py": [[566, "pyart-aux-io-read-product-py"]], "pyart.aux_io.read_psr_cpi_header": [[567, "pyart-aux-io-read-psr-cpi-header"]], "pyart.aux_io.read_psr_header": [[568, "pyart-aux-io-read-psr-header"]], "pyart.aux_io.read_psr_spectra": [[569, "pyart-aux-io-read-psr-spectra"]], "pyart.aux_io.read_sinarame_h5": [[574, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[578, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[580, "pyart-bridge"]], "Bridging to other toolkits (pyart.bridge)": [[580, "bridging-to-other-toolkits-pyart-bridge"]], "Phase functions": [[580, "phase-functions"]], "pyart.config": [[582, "pyart-config"], [582, "module-pyart.config"]], "pyart.core": [[594, "pyart-core"]], "Core (pyart.core)": [[594, "core-pyart-core"]], "Core classes": [[594, "core-classes"]], "Coordinate transformations": [[594, "coordinate-transformations"]], "pyart.correct": [[676, "pyart-correct"]], "Radar Corrections (pyart.correct)": [[676, "radar-corrections-pyart-correct"]], "Velocity unfolding": [[676, "velocity-unfolding"]], "Other corrections": [[676, "other-corrections"]], "Helper functions": [[676, "helper-functions"]], "pyart.correct.GateFilter": [[677, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[678, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[679, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[680, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[681, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[682, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[683, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[684, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[685, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[686, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[687, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[688, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[689, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[690, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[691, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[692, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[693, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[694, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[695, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[696, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[697, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[698, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[699, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[700, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[701, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[702, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[703, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[704, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.gauss_fit": [[725, "pyart-correct-gauss-fit"]], "pyart.correct.moment_based_gate_filter": [[730, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.retrieval_result": [[734, "pyart-correct-retrieval-result"]], "pyart.exceptions": [[747, "pyart-exceptions"], [747, "module-pyart.exceptions"]], "pyart.filters": [[748, "pyart-filters"]], "Filters (pyart.filters)": [[748, "filters-pyart-filters"]], "Filtering radar data": [[748, "filtering-radar-data"]], "pyart.graph": [[785, "pyart-graph"]], "Graphing (pyart.graph)": [[785, "graphing-pyart-graph"]], "Plotting radar data": [[785, "plotting-radar-data"]], "Plotting grid data": [[785, "plotting-grid-data"]], "pyart.graph.plot_convstrat_scheme": [[960, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[961, "pyart-io"]], "Input and output (pyart.io)": [[961, "input-and-output-pyart-io"]], "Reading grid data": [[961, "reading-grid-data"]], "Writing grid data": [[961, "writing-grid-data"]], "Reading Sonde data": [[961, "reading-sonde-data"]], "Special use": [[961, "special-use"]], "pyart.lazydict": [[984, "pyart-lazydict"], [984, "module-pyart.lazydict"]], "pyart.lazydict.MutableMapping": [[998, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[999, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[1000, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[1001, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[1002, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[1003, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[1004, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[1005, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[1006, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[1007, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[1008, "pyart-map"]], "Mapping (pyart.map)": [[1008, "mapping-pyart-map"]], "Mapping to grid": [[1008, "mapping-to-grid"]], "Examples of ROI (region of interest)": [[1008, "examples-of-roi-region-of-interest"]], "pyart.map.GateMapper": [[1009, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[1010, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[1011, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[1012, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.get_earth_radius": [[1016, "pyart-map-get-earth-radius"]], "pyart.map.polar_to_cartesian": [[1020, "pyart-map-polar-to-cartesian"]], "pyart.retrieve": [[1021, "pyart-retrieve"]], "Radar Retrievals (pyart.retrieve)": [[1021, "radar-retrievals-pyart-retrieve"]], "Radar retrievals": [[1021, "radar-retrievals"]], "pyart.retrieve.composite_reflectivity": [[1025, "pyart-retrieve-composite-reflectivity"]], "pyart.testing": [[1114, "pyart-testing"]], "pyart.testing.Grid": [[1115, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[1116, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[1117, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[1118, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[1119, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[1120, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[1121, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[1122, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[1123, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[1124, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[1125, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[1126, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[1127, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[1128, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[1129, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[1130, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[1131, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[1132, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[1133, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[1134, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[1135, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[1136, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[1137, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[1138, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[1139, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[1140, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[1141, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[1142, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[1143, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[1144, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[1145, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[1146, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[1147, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[1148, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[1149, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[1150, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[1151, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[1152, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[1153, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[1154, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[1155, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[1156, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.add_field": [[1157, "pyart-testing-radarspectra-add-field"]], "pyart.testing.RadarSpectra.add_field_like": [[1158, "pyart-testing-radarspectra-add-field-like"]], "pyart.testing.RadarSpectra.add_filter": [[1159, "pyart-testing-radarspectra-add-filter"]], "pyart.testing.RadarSpectra.check_field_exists": [[1160, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.extract_sweeps": [[1161, "pyart-testing-radarspectra-extract-sweeps"]], "pyart.testing.RadarSpectra.get_azimuth": [[1162, "pyart-testing-radarspectra-get-azimuth"]], "pyart.testing.RadarSpectra.get_elevation": [[1163, "pyart-testing-radarspectra-get-elevation"]], "pyart.testing.RadarSpectra.get_end": [[1164, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_field": [[1165, "pyart-testing-radarspectra-get-field"]], "pyart.testing.RadarSpectra.get_gate_area": [[1166, "pyart-testing-radarspectra-get-gate-area"]], "pyart.testing.RadarSpectra.get_gate_lat_lon_alt": [[1167, "pyart-testing-radarspectra-get-gate-lat-lon-alt"]], "pyart.testing.RadarSpectra.get_gate_x_y_z": [[1168, "pyart-testing-radarspectra-get-gate-x-y-z"]], "pyart.testing.RadarSpectra.get_nyquist_vel": [[1169, "pyart-testing-radarspectra-get-nyquist-vel"]], "pyart.testing.RadarSpectra.get_slice": [[1170, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[1171, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[1172, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.info": [[1173, "pyart-testing-radarspectra-info"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[1174, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[1175, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[1176, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[1177, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[1178, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[1179, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[1180, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[1181, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[1182, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[1183, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[1184, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.get_metadata": [[1185, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[1186, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[1187, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[1188, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[1189, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[1190, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_normal_storm": [[1191, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[1192, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[1193, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[1194, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[1195, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[1196, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[1197, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[1198, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[1199, "pyart-util"]], "pyart.util.angular_mean": [[1200, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[1201, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[1202, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[1203, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[1204, "pyart-util-angular-texture-2d"]], "pyart.util.colocated_gates": [[1205, "pyart-util-colocated-gates"]], "pyart.util.colocated_gates2": [[1206, "pyart-util-colocated-gates2"]], "pyart.util.compute_azimuthal_average": [[1207, "pyart-util-compute-azimuthal-average"]], "pyart.util.compute_corr": [[1208, "pyart-util-compute-corr"]], "pyart.util.compute_directional_stats": [[1209, "pyart-util-compute-directional-stats"]], "pyart.util.compute_mse": [[1210, "pyart-util-compute-mse"]], "pyart.util.compute_nse": [[1211, "pyart-util-compute-nse"]], "pyart.util.cross_section_ppi": [[1212, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[1213, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[1214, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[1215, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[1216, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[1217, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[1218, "pyart-util-datetimes-from-radar"]], "pyart.util.estimate_noise_hs74": [[1219, "pyart-util-estimate-noise-hs74"]], "pyart.util.estimate_noise_ivic13": [[1220, "pyart-util-estimate-noise-ivic13"]], "pyart.util.find_neighbour_gates": [[1221, "pyart-util-find-neighbour-gates"]], "pyart.util.for_azimuth": [[1222, "pyart-util-for-azimuth"]], "Assumptions": [[1222, "assumptions"], [1248, "assumptions"]], "pyart.util.get_column_rays": [[1223, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[1224, "pyart-util-get-field-location"]], "pyart.util.get_ivic_flat_reg_var_max": [[1225, "pyart-util-get-ivic-flat-reg-var-max"]], "pyart.util.get_ivic_pct": [[1226, "pyart-util-get-ivic-pct"]], "pyart.util.get_ivic_snr_thr": [[1227, "pyart-util-get-ivic-snr-thr"]], "pyart.util.get_target_elevations": [[1228, "pyart-util-get-target-elevations"]], "pyart.util.grid_texture_2d": [[1229, "pyart-util-grid-texture-2d"]], "pyart.util.image_mute_radar": [[1230, "pyart-util-image-mute-radar"]], "pyart.util.interpol_spectra": [[1231, "pyart-util-interpol-spectra"]], "pyart.util.intersection": [[1232, "pyart-util-intersection"]], "pyart.util.interval_mean": [[1233, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[1234, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[1235, "pyart-util-is-vpt"]], "pyart.util.ivic_flat_reg_var_max_table": [[1236, "pyart-util-ivic-flat-reg-var-max-table"]], "pyart.util.ivic_flat_reg_wind_len_table": [[1237, "pyart-util-ivic-flat-reg-wind-len-table"]], "pyart.util.ivic_pct_table": [[1238, "pyart-util-ivic-pct-table"]], "pyart.util.ivic_snr_thr_table": [[1239, "pyart-util-ivic-snr-thr-table"]], "pyart.util.join_radar": [[1240, "pyart-util-join-radar"]], "pyart.util.join_spectra": [[1241, "pyart-util-join-spectra"]], "pyart.util.ma_broadcast_to": [[1242, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[1243, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[1244, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.radar_from_spectra": [[1245, "pyart-util-radar-from-spectra"]], "pyart.util.rolling_window": [[1246, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[1247, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[1248, "pyart-util-sphere-distance"]], "Parameter": [[1248, "parameter"]], "pyart.util.subset_radar": [[1249, "pyart-util-subset-radar"]], "pyart.util.subset_radar_spectra": [[1250, "pyart-util-subset-radar-spectra"]], "pyart.util.texture": [[1251, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[1252, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[1253, "pyart-util-to-vpt"]], "API Reference Manual": [[1254, "api-reference-manual"]], "Changelog": [[1255, "changelog"]], "Py-ART v1.15.0": [[1255, "py-art-v1-15-0"]], "Bugs fixed": [[1255, "bugs-fixed"], [1255, "id1"], [1255, "id6"], [1255, "id11"], [1255, "id19"], [1255, "id24"], [1255, "id29"], [1255, "id36"], [1255, "id41"], [1255, "id45"], [1255, "id49"], [1255, "id54"], [1255, "id59"], [1255, "id64"], [1255, "id69"], [1255, "id75"], [1255, "id81"], [1255, "id85"], [1255, "id89"], [1255, "id93"], [1255, "id98"], [1255, "id102"], [1255, "id106"], [1255, "id110"], [1255, "id116"], [1255, "id122"], [1255, "id126"], [1255, "id131"], [1255, "id138"], [1255, "id145"], [1255, "id151"], [1255, "id158"], [1255, "id164"]], "Other merged PRs": [[1255, "other-merged-prs"], [1255, "id2"], [1255, "id7"], [1255, "id13"], [1255, "id16"], [1255, "id21"], [1255, "id26"], [1255, "id33"], [1255, "id39"], [1255, "id43"], [1255, "id46"], [1255, "id52"], [1255, "id56"], [1255, "id62"], [1255, "id66"], [1255, "id72"], [1255, "id78"], [1255, "id83"], [1255, "id91"], [1255, "id96"], [1255, "id103"], [1255, "id113"], [1255, "id119"], [1255, "id124"], [1255, "id128"], [1255, "id135"], [1255, "id142"], [1255, "id148"], [1255, "id155"], [1255, "id161"], [1255, "id167"]], "Contributors to this release": [[1255, "contributors-to-this-release"], [1255, "id3"], [1255, "id4"], [1255, "id8"], [1255, "id10"], [1255, "id14"], [1255, "id17"], [1255, "id22"], [1255, "id27"], [1255, "id30"], [1255, "id34"], [1255, "id40"], [1255, "id44"], [1255, "id47"], [1255, "id53"], [1255, "id57"], [1255, "id63"], [1255, "id67"], [1255, "id73"], [1255, "id79"], [1255, "id84"], [1255, "id87"], [1255, "id92"], [1255, "id97"], [1255, "id100"], [1255, "id104"], [1255, "id108"], [1255, "id114"], [1255, "id120"], [1255, "id125"], [1255, "id129"], [1255, "id136"], [1255, "id143"], [1255, "id149"], [1255, "id156"], [1255, "id162"], [1255, "id168"], [1255, "id171"]], "Py-ART v1.14.6": [[1255, "py-art-v1-14-6"]], "Enhancements made": [[1255, "enhancements-made"], [1255, "id5"], [1255, "id15"], [1255, "id18"], [1255, "id23"], [1255, "id28"], [1255, "id31"], [1255, "id35"], [1255, "id48"], [1255, "id58"], [1255, "id68"], [1255, "id74"], [1255, "id80"], [1255, "id88"], [1255, "id101"], [1255, "id105"], [1255, "id109"], [1255, "id115"], [1255, "id121"], [1255, "id130"], [1255, "id137"], [1255, "id144"], [1255, "id150"], [1255, "id157"], [1255, "id163"], [1255, "id169"]], "Maintenance and upkeep improvements": [[1255, "maintenance-and-upkeep-improvements"], [1255, "id9"], [1255, "id12"], [1255, "id32"], [1255, "id37"], [1255, "id42"], [1255, "id50"], [1255, "id55"], [1255, "id60"], [1255, "id65"], [1255, "id70"], [1255, "id76"], [1255, "id82"], [1255, "id86"], [1255, "id90"], [1255, "id94"], [1255, "id99"], [1255, "id111"], [1255, "id117"], [1255, "id132"], [1255, "id139"], [1255, "id146"], [1255, "id152"], [1255, "id159"], [1255, "id165"], [1255, "id170"]], "Py-ART v1.14.5": [[1255, "py-art-v1-14-5"]], "Merged PRs": [[1255, "merged-prs"]], "Py-ART v1.14.4": [[1255, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[1255, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[1255, "py-art-v1-14-2"]], "Documentation improvements": [[1255, "documentation-improvements"], [1255, "id20"], [1255, "id25"], [1255, "id38"], [1255, "id51"], [1255, "id61"], [1255, "id71"], [1255, "id77"], [1255, "id95"], [1255, "id107"], [1255, "id112"], [1255, "id118"], [1255, "id123"], [1255, "id127"], [1255, "id133"], [1255, "id140"], [1255, "id147"], [1255, "id153"], [1255, "id160"], [1255, "id166"]], "Py-ART v1.14.1": [[1255, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[1255, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[1255, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[1255, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[1255, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[1255, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[1255, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[1255, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[1255, "py-art-v1-12-5"]], "PyART v1.12.4": [[1255, "pyart-v1-12-4"]], "PyART v1.12.2": [[1255, "pyart-v1-12-2"]], "PyART v1.12.0": [[1255, "pyart-v1-12-0"]], "PyART v1.11.8": [[1255, "pyart-v1-11-8"]], "Deprecated features": [[1255, "deprecated-features"], [1255, "id134"], [1255, "id141"], [1255, "id154"]], "PyART v1.11.6": [[1255, "pyart-v1-11-6"]], "PyART v1.11.5": [[1255, "pyart-v1-11-5"]], "PyART v1.11.3": [[1255, "pyart-v1-11-3"]], "PyART v1.11.2": [[1255, "pyart-v1-11-2"]], "PyART v1.11.1": [[1255, "pyart-v1-11-1"]], "PyART v1.11.0": [[1255, "pyart-v1-11-0"]], "PyART v1.10.4": [[1255, "pyart-v1-10-4"]], "PyART v1.10.3": [[1255, "pyart-v1-10-3"]], "PyART v1.10.2": [[1255, "pyart-v1-10-2"]], "PyART v1.10.1": [[1255, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[1255, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[1255, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[1255, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[1255, "pyart-v1-8-0"]], "PyART v1.7.0": [[1255, "pyart-v1-7-0"]], "PyART v1.6.0": [[1255, "pyart-v1-6-0"]], "PyART v1.5.0": [[1255, "pyart-v1-5-0"]], "PyART v1.4.0": [[1255, "pyart-v1-4-0"]], "PyART v1.3.0": [[1255, "pyart-v1-3-0"]], "Moment correction examples": [[1256, "moment-correction-examples"], [1260, "moment-correction-examples"]], "Correct reflectivity attenuation": [[1257, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[1258, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[1259, "computation-times"], [1264, "computation-times"], [1269, "computation-times"], [1288, "computation-times"], [1295, "computation-times"]], "Example Gallery": [[1260, "example-gallery"]], "Input/Output Examples": [[1260, "input-output-examples"], [1261, "input-output-examples"]], "Mapping examples": [[1260, "mapping-examples"], [1265, "mapping-examples"]], "Plotting examples": [[1260, "plotting-examples"], [1270, "plotting-examples"]], "Retrieval Examples": [[1260, "retrieval-examples"], [1289, "retrieval-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[1262, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[1262, "read-nexrad-level-2-data"]], "Configure our Filepath for NEXRAD Level 2 Data": [[1262, "configure-our-filepath-for-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[1262, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[1263, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[1263, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[1266, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[1267, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[1268, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[1271, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[1272, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[1273, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[1274, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[1275, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[1276, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[1277, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[1278, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[1279, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[1280, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [1281, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[1282, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [1283, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[1284, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[1285, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[1286, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[1287, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[1290, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[1291, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[1292, "convective-stratiform-classification"]], "How the algorithm works": [[1292, "how-the-algorithm-works"]], "Examples": [[1292, "examples"]], "Summary of recommendations and best practices": [[1292, "summary-of-recommendations-and-best-practices"]], "References": [[1292, "references"]], "Calculate and Plot hydrometeor classification": [[1293, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[1294, "calculate-and-plot-vad-profile"]], "About the MeteoSwiss fork of Py-ART": [[1296, "about-the-meteoswiss-fork-of-py-art"]], "Citing Py-ART": [[1296, "citing-py-art"]], "What can Py-ART do?": [[1296, "what-can-py-art-do"]], "Short Courses": [[1296, "short-courses"]], "Install": [[1296, "install"], [1306, "install"]], "Dependencies": [[1296, "dependencies"]], "Optional Dependences": [[1296, "optional-dependences"]], "Getting help": [[1296, "getting-help"]], "Contributing": [[1296, "contributing"]], "Notebook Gallery": [[1297, "notebook-gallery"]], "Notebooks": [[1297, null]], "Creating a basic ingest of a NetCDF file": [[1298, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[1299, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[1300, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[1302, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[1303, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[1304, "the-py-art-radar-object-and-indexing"]], "Installation": [[1305, "installation"]], "Required Dependencies": [[1305, "required-dependencies"]], "Optional Dependencies": [[1305, "optional-dependencies"]], "Obtaining the latest source": [[1305, "obtaining-the-latest-source"]], "Installing from Source": [[1305, "installing-from-source"]], "Frequently asked questions": [[1305, "frequently-asked-questions"]], "Contributor\u2019s Guide": [[1306, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[1306, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[1306, "important-links"]], "Citing": [[1306, "citing"]], "Resources": [[1306, "resources"]], "Code Style": [[1306, "code-style"]], "Python File Setup": [[1306, "python-file-setup"]], "Testing": [[1306, "testing"]], "GitHub": [[1306, "github"]], "Blog Posts": [[1306, "blog-posts"]], "User Guide": [[1307, "user-guide"]], "Setting up an Environment": [[1308, "setting-up-an-environment"]], "Anaconda": [[1308, "anaconda"]], "Setting a Channel": [[1308, "setting-a-channel"]], "Creating an Environment": [[1308, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[1308, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[1308, "more-information"]]}, "indexentries": {"read_bin() (in module pyart.aux_io)": [[0, "pyart.aux_io.read_bin"], [541, "pyart.aux_io.read_bin"]], "read_bin_mf() (in module pyart.aux_io)": [[1, "pyart.aux_io.read_bin_mf"], [542, "pyart.aux_io.read_bin_mf"]], "read_cartesian_metranet() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_cartesian_metranet"], [543, "pyart.aux_io.read_cartesian_metranet"]], "read_cf1() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_cf1"], [544, "pyart.aux_io.read_cf1"]], "read_cf1_cartesian() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_cf1_cartesian"], [545, "pyart.aux_io.read_cf1_cartesian"]], "read_cf1_cartesian_mf() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_cf1_cartesian_mf"], [546, "pyart.aux_io.read_cf1_cartesian_mf"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_d3r_gcpex_nc"], [547, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_dat_mf() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_dat_mf"], [548, "pyart.aux_io.read_dat_mf"]], "read_gamic() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_gamic"], [552, "pyart.aux_io.read_gamic"]], "read_gif() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_gif"], [553, "pyart.aux_io.read_gif"]], "read_grib() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_grib"], [554, "pyart.aux_io.read_grib"]], "read_hpl() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_hpl"], [555, "pyart.aux_io.read_hpl"]], "read_iq() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_iq"], [556, "pyart.aux_io.read_iq"]], "read_kazr() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_kazr"], [557, "pyart.aux_io.read_kazr"]], "read_metranet() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_metranet"], [558, "pyart.aux_io.read_metranet"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[15, "pyart.aux_io.read_noxp_iphex_nc"], [559, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_grid_h5() (in module pyart.aux_io)": [[16, "pyart.aux_io.read_odim_grid_h5"], [560, "pyart.aux_io.read_odim_grid_h5"]], "read_odim_h5() (in module pyart.aux_io)": [[17, "pyart.aux_io.read_odim_h5"], [561, "pyart.aux_io.read_odim_h5"]], "read_odim_vp_h5() (in module pyart.aux_io)": [[18, "pyart.aux_io.read_odim_vp_h5"], [562, "pyart.aux_io.read_odim_vp_h5"]], "read_pattern() (in module pyart.aux_io)": [[19, "pyart.aux_io.read_pattern"], [563, "pyart.aux_io.read_pattern"]], "read_png() (in module pyart.aux_io)": [[20, "pyart.aux_io.read_png"], [564, "pyart.aux_io.read_png"]], "read_radx() (in module pyart.aux_io)": [[21, "pyart.aux_io.read_radx"], [570, "pyart.aux_io.read_radx"]], "read_rainbow_psr() (in module pyart.aux_io)": [[22, "pyart.aux_io.read_rainbow_psr"], [571, "pyart.aux_io.read_rainbow_psr"]], "read_rainbow_psr_spectra() (in module pyart.aux_io)": [[23, "pyart.aux_io.read_rainbow_psr_spectra"], [572, "pyart.aux_io.read_rainbow_psr_spectra"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[24, "pyart.aux_io.read_rainbow_wrl"], [573, "pyart.aux_io.read_rainbow_wrl"]], "read_spectra() (in module pyart.aux_io)": [[25, "pyart.aux_io.read_spectra"], [575, "pyart.aux_io.read_spectra"]], "write_odim_grid_h5() (in module pyart.aux_io)": [[26, "pyart.aux_io.write_odim_grid_h5"], [576, "pyart.aux_io.write_odim_grid_h5"]], "write_odim_h5() (in module pyart.aux_io)": [[27, "pyart.aux_io.write_odim_h5"], [577, "pyart.aux_io.write_odim_h5"]], "write_spectra() (in module pyart.aux_io)": [[28, "pyart.aux_io.write_spectra"], [579, "pyart.aux_io.write_spectra"]], "texture_of_complex_phase() (in module pyart.bridge)": [[29, "pyart.bridge.texture_of_complex_phase"], [581, "pyart.bridge.texture_of_complex_phase"]], "filemetadata (class in pyart.config)": [[30, "pyart.config.FileMetadata"], [583, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[31, "pyart.config.FileMetadata.__call__"], [584, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[32, "pyart.config.FileMetadata.get_field_name"], [585, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[33, "pyart.config.FileMetadata.get_metadata"], [586, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[34, "pyart.config.get_field_colormap"], [587, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[35, "pyart.config.get_field_limits"], [588, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[36, "pyart.config.get_field_mapping"], [589, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[37, "pyart.config.get_field_name"], [590, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[38, "pyart.config.get_fillvalue"], [591, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[39, "pyart.config.get_metadata"], [592, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[40, "pyart.config.load_config"], [593, "pyart.config.load_config"]], "grid (class in pyart.core)": [[41, "pyart.core.Grid"], [595, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[42, "pyart.core.Grid.add_field"], [596, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[43, "pyart.core.Grid.get_point_longitude_latitude"], [597, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[44, "pyart.core.Grid.get_projparams"], [598, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[45, "pyart.core.Grid.init_point_altitude"], [599, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[46, "pyart.core.Grid.init_point_longitude_latitude"], [600, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[47, "pyart.core.Grid.init_point_x_y_z"], [601, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[48, "pyart.core.Grid.projection_proj"], [602, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[49, "pyart.core.Grid.to_xarray"], [603, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[50, "pyart.core.Grid.write"], [604, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[51, "pyart.core.HorizontalWindProfile"], [605, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[52, "pyart.core.HorizontalWindProfile.from_u_and_v"], [606, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[53, "pyart.core.HorizontalWindProfile.u_wind"], [607, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[54, "pyart.core.HorizontalWindProfile.v_wind"], [608, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[55, "pyart.core.Radar"], [609, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[56, "pyart.core.Radar.add_field"], [610, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[57, "pyart.core.Radar.add_field_like"], [611, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[58, "pyart.core.Radar.add_filter"], [612, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[59, "pyart.core.Radar.check_field_exists"], [613, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[60, "pyart.core.Radar.extract_sweeps"], [614, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_azimuth"], [615, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[62, "pyart.core.Radar.get_elevation"], [616, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[63, "pyart.core.Radar.get_end"], [617, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[64, "pyart.core.Radar.get_field"], [618, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[65, "pyart.core.Radar.get_gate_area"], [619, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[66, "pyart.core.Radar.get_gate_lat_lon_alt"], [620, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[67, "pyart.core.Radar.get_gate_x_y_z"], [621, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[68, "pyart.core.Radar.get_nyquist_vel"], [622, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[69, "pyart.core.Radar.get_slice"], [623, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[70, "pyart.core.Radar.get_start"], [624, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[71, "pyart.core.Radar.get_start_end"], [625, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[72, "pyart.core.Radar.info"], [626, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[73, "pyart.core.Radar.init_gate_altitude"], [627, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[74, "pyart.core.Radar.init_gate_longitude_latitude"], [628, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[75, "pyart.core.Radar.init_gate_x_y_z"], [629, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[76, "pyart.core.Radar.init_rays_per_sweep"], [630, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[77, "pyart.core.Radar.iter_azimuth"], [631, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[78, "pyart.core.Radar.iter_elevation"], [632, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[79, "pyart.core.Radar.iter_end"], [633, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[80, "pyart.core.Radar.iter_field"], [634, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[81, "pyart.core.Radar.iter_slice"], [635, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[82, "pyart.core.Radar.iter_start"], [636, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[83, "pyart.core.Radar.iter_start_end"], [637, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[84, "pyart.core.RadarSpectra"], [638, "pyart.core.RadarSpectra"]], "add_field() (pyart.core.radarspectra method)": [[85, "pyart.core.RadarSpectra.add_field"], [639, "pyart.core.RadarSpectra.add_field"]], "add_field_like() (pyart.core.radarspectra method)": [[86, "pyart.core.RadarSpectra.add_field_like"], [640, "pyart.core.RadarSpectra.add_field_like"]], "add_filter() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.add_filter"], [641, "pyart.core.RadarSpectra.add_filter"]], "check_field_exists() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.check_field_exists"], [642, "pyart.core.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.extract_sweeps"], [643, "pyart.core.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_azimuth"], [644, "pyart.core.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.get_elevation"], [645, "pyart.core.RadarSpectra.get_elevation"]], "get_end() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.get_end"], [646, "pyart.core.RadarSpectra.get_end"]], "get_field() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.get_field"], [647, "pyart.core.RadarSpectra.get_field"]], "get_gate_area() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.get_gate_area"], [648, "pyart.core.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"], [649, "pyart.core.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.get_gate_x_y_z"], [650, "pyart.core.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.get_nyquist_vel"], [651, "pyart.core.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.get_slice"], [652, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.get_start"], [653, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.get_start_end"], [654, "pyart.core.RadarSpectra.get_start_end"]], "info() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.info"], [655, "pyart.core.RadarSpectra.info"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[102, "pyart.core.RadarSpectra.init_gate_altitude"], [656, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[103, "pyart.core.RadarSpectra.init_gate_longitude_latitude"], [657, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[104, "pyart.core.RadarSpectra.init_gate_x_y_z"], [658, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[105, "pyart.core.RadarSpectra.init_rays_per_sweep"], [659, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[106, "pyart.core.RadarSpectra.iter_azimuth"], [660, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[107, "pyart.core.RadarSpectra.iter_elevation"], [661, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[108, "pyart.core.RadarSpectra.iter_end"], [662, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[109, "pyart.core.RadarSpectra.iter_field"], [663, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[110, "pyart.core.RadarSpectra.iter_slice"], [664, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[111, "pyart.core.RadarSpectra.iter_start"], [665, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[112, "pyart.core.RadarSpectra.iter_start_end"], [666, "pyart.core.RadarSpectra.iter_start_end"]], "antenna_to_cartesian() (in module pyart.core)": [[113, "pyart.core.antenna_to_cartesian"], [667, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[114, "pyart.core.antenna_vectors_to_cartesian"], [668, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[115, "pyart.core.cartesian_to_antenna"], [669, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[116, "pyart.core.cartesian_to_geographic"], [670, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[117, "pyart.core.cartesian_to_geographic_aeqd"], [671, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[118, "pyart.core.cartesian_vectors_to_geographic"], [672, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[119, "pyart.core.geographic_to_cartesian"], [673, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[120, "pyart.core.geographic_to_cartesian_aeqd"], [674, "pyart.core.geographic_to_cartesian_aeqd"]], "wgs84_to_swissch1903() (in module pyart.core)": [[121, "pyart.core.wgs84_to_swissCH1903"], [675, "pyart.core.wgs84_to_swissCH1903"]], "calculate_attenuation() (in module pyart.correct)": [[122, "pyart.correct.calculate_attenuation"], [705, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[123, "pyart.correct.calculate_attenuation_philinear"], [706, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[124, "pyart.correct.calculate_attenuation_zphi"], [707, "pyart.correct.calculate_attenuation_zphi"]], "compute_apparent_vpr() (in module pyart.correct)": [[125, "pyart.correct.compute_apparent_vpr"], [708, "pyart.correct.compute_apparent_vpr"]], "compute_theoretical_vpr() (in module pyart.correct)": [[126, "pyart.correct.compute_theoretical_vpr"], [709, "pyart.correct.compute_theoretical_vpr"]], "correct_bias() (in module pyart.correct)": [[127, "pyart.correct.correct_bias"], [710, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[128, "pyart.correct.correct_noise_rhohv"], [711, "pyart.correct.correct_noise_rhohv"]], "correct_sys_phase() (in module pyart.correct)": [[129, "pyart.correct.correct_sys_phase"], [712, "pyart.correct.correct_sys_phase"]], "correct_visibility() (in module pyart.correct)": [[130, "pyart.correct.correct_visibility"], [713, "pyart.correct.correct_visibility"]], "correct_vpr() (in module pyart.correct)": [[131, "pyart.correct.correct_vpr"], [714, "pyart.correct.correct_vpr"]], "correct_vpr_spatialised() (in module pyart.correct)": [[132, "pyart.correct.correct_vpr_spatialised"], [715, "pyart.correct.correct_vpr_spatialised"]], "dealias_fourdd() (in module pyart.correct)": [[133, "pyart.correct.dealias_fourdd"], [716, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[134, "pyart.correct.dealias_region_based"], [717, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[135, "pyart.correct.dealias_unwrap_phase"], [718, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[136, "pyart.correct.despeckle_field"], [719, "pyart.correct.despeckle_field"]], "det_sys_phase_ray() (in module pyart.correct)": [[137, "pyart.correct.det_sys_phase_ray"], [720, "pyart.correct.det_sys_phase_ray"]], "est_rhohv_rain() (in module pyart.correct)": [[138, "pyart.correct.est_rhohv_rain"], [721, "pyart.correct.est_rhohv_rain"]], "est_zdr_precip() (in module pyart.correct)": [[139, "pyart.correct.est_zdr_precip"], [722, "pyart.correct.est_zdr_precip"]], "est_zdr_snow() (in module pyart.correct)": [[140, "pyart.correct.est_zdr_snow"], [723, "pyart.correct.est_zdr_snow"]], "find_objects() (in module pyart.correct)": [[141, "pyart.correct.find_objects"], [724, "pyart.correct.find_objects"]], "get_mask_fzl() (in module pyart.correct)": [[142, "pyart.correct.get_mask_fzl"], [726, "pyart.correct.get_mask_fzl"]], "get_sun_hits() (in module pyart.correct)": [[143, "pyart.correct.get_sun_hits"], [727, "pyart.correct.get_sun_hits"]], "get_sun_hits_ivic() (in module pyart.correct)": [[144, "pyart.correct.get_sun_hits_ivic"], [728, "pyart.correct.get_sun_hits_ivic"]], "get_sun_hits_psr() (in module pyart.correct)": [[145, "pyart.correct.get_sun_hits_psr"], [729, "pyart.correct.get_sun_hits_psr"]], "phase_proc_lp() (in module pyart.correct)": [[146, "pyart.correct.phase_proc_lp"], [731, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[147, "pyart.correct.phase_proc_lp_gf"], [732, "pyart.correct.phase_proc_lp_gf"]], "ptoa_to_sf() (in module pyart.correct)": [[148, "pyart.correct.ptoa_to_sf"], [733, "pyart.correct.ptoa_to_sf"]], "scanning_losses() (in module pyart.correct)": [[149, "pyart.correct.scanning_losses"], [735, "pyart.correct.scanning_losses"]], "selfconsistency_bias() (in module pyart.correct)": [[150, "pyart.correct.selfconsistency_bias"], [736, "pyart.correct.selfconsistency_bias"]], "selfconsistency_bias2() (in module pyart.correct)": [[151, "pyart.correct.selfconsistency_bias2"], [737, "pyart.correct.selfconsistency_bias2"]], "selfconsistency_kdp_phidp() (in module pyart.correct)": [[152, "pyart.correct.selfconsistency_kdp_phidp"], [738, "pyart.correct.selfconsistency_kdp_phidp"]], "smooth_masked() (in module pyart.correct)": [[153, "pyart.correct.smooth_masked"], [739, "pyart.correct.smooth_masked"]], "smooth_phidp_double_window() (in module pyart.correct)": [[154, "pyart.correct.smooth_phidp_double_window"], [740, "pyart.correct.smooth_phidp_double_window"]], "smooth_phidp_single_window() (in module pyart.correct)": [[155, "pyart.correct.smooth_phidp_single_window"], [741, "pyart.correct.smooth_phidp_single_window"]], "solar_flux_lookup() (in module pyart.correct)": [[156, "pyart.correct.solar_flux_lookup"], [742, "pyart.correct.solar_flux_lookup"]], "sun_position_mfr() (in module pyart.correct)": [[157, "pyart.correct.sun_position_mfr"], [743, "pyart.correct.sun_position_mfr"]], "sun_position_pysolar() (in module pyart.correct)": [[158, "pyart.correct.sun_position_pysolar"], [744, "pyart.correct.sun_position_pysolar"]], "sun_power() (in module pyart.correct)": [[159, "pyart.correct.sun_power"], [745, "pyart.correct.sun_power"]], "sun_retrieval() (in module pyart.correct)": [[160, "pyart.correct.sun_retrieval"], [746, "pyart.correct.sun_retrieval"]], "deprecatedattribute": [[161, "pyart.exceptions.DeprecatedAttribute"]], "deprecatedfunctionname": [[162, "pyart.exceptions.DeprecatedFunctionName"]], "missingoptionaldependency": [[163, "pyart.exceptions.MissingOptionalDependency"]], "_deprecated_alias() (in module pyart.exceptions)": [[164, "pyart.exceptions._deprecated_alias"]], "gatefilter (class in pyart.filters)": [[165, "pyart.filters.GateFilter"], [749, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[166, "pyart.filters.GateFilter.copy"], [750, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[167, "pyart.filters.GateFilter.exclude_above"], [751, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[168, "pyart.filters.GateFilter.exclude_all"], [752, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[169, "pyart.filters.GateFilter.exclude_below"], [753, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[170, "pyart.filters.GateFilter.exclude_equal"], [754, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.exclude_gates"], [755, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_inside"], [756, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_invalid"], [757, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_masked"], [758, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_none"], [759, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_not_equal"], [760, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_outside"], [761, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_transition"], [762, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[179, "pyart.filters.GateFilter.gate_excluded"], [763, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[180, "pyart.filters.GateFilter.gate_included"], [764, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.include_above"], [765, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.include_all"], [766, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.include_below"], [767, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[184, "pyart.filters.GateFilter.include_equal"], [768, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.include_gates"], [769, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_inside"], [770, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_none"], [771, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_not_equal"], [772, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_not_masked"], [773, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_not_transition"], [774, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_outside"], [775, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_valid"], [776, "pyart.filters.GateFilter.include_valid"]], "birds_gate_filter() (in module pyart.filters)": [[193, "pyart.filters.birds_gate_filter"], [777, "pyart.filters.birds_gate_filter"]], "class_based_gate_filter() (in module pyart.filters)": [[194, "pyart.filters.class_based_gate_filter"], [778, "pyart.filters.class_based_gate_filter"]], "iso0_based_gate_filter() (in module pyart.filters)": [[195, "pyart.filters.iso0_based_gate_filter"], [779, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[196, "pyart.filters.moment_and_texture_based_gate_filter"], [780, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[197, "pyart.filters.moment_based_gate_filter"], [781, "pyart.filters.moment_based_gate_filter"]], "snr_based_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.snr_based_gate_filter"], [782, "pyart.filters.snr_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.temp_based_gate_filter"], [783, "pyart.filters.temp_based_gate_filter"]], "visibility_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.visibility_based_gate_filter"], [784, "pyart.filters.visibility_based_gate_filter"]], "airborneradardisplay (class in pyart.graph)": [[201, "pyart.graph.AirborneRadarDisplay"], [786, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[202, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"], [787, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[203, "pyart.graph.AirborneRadarDisplay.generate_filename"], [788, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[204, "pyart.graph.AirborneRadarDisplay.generate_ray_title"], [789, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[205, "pyart.graph.AirborneRadarDisplay.generate_title"], [790, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"], [791, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"], [792, "pyart.graph.AirborneRadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"], [793, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[209, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"], [794, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[210, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"], [795, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"], [796, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"], [797, "pyart.graph.AirborneRadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"], [798, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"], [799, "pyart.graph.AirborneRadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"], [800, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"], [801, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.plot"], [802, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"], [803, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.plot_colorbar"], [804, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[220, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"], [805, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[221, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"], [806, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"], [807, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_label"], [808, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_labels"], [809, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_ppi"], [810, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_range_ring"], [811, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_range_rings"], [812, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_ray"], [813, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_rhi"], [814, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"], [815, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_vpt"], [816, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_xsection"], [817, "pyart.graph.AirborneRadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[233, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"], [818, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[234, "pyart.graph.AirborneRadarDisplay.set_limits"], [819, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[235, "pyart.graph.GridMapDisplay"], [820, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.cartopy_coastlines"], [821, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"], [822, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.cartopy_states"], [823, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.generate_filename"], [824, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.generate_grid_title"], [825, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"], [826, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"], [827, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.plot_colorbar"], [828, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.plot_cross_section"], [829, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_cross_section_level() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.plot_cross_section_level"], [830, "pyart.graph.GridMapDisplay.plot_cross_section_level"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.plot_crosshairs"], [831, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_grid"], [832, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_grid_contour() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_grid_contour"], [833, "pyart.graph.GridMapDisplay.plot_grid_contour"]], "plot_grid_raw() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.plot_grid_raw"], [834, "pyart.graph.GridMapDisplay.plot_grid_raw"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.plot_latitude_slice"], [835, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_latitudinal_level"], [836, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_longitude_slice"], [837, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_longitudinal_level"], [838, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[254, "pyart.graph.GridMapDisplayBasemap"], [839, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[255, "pyart.graph.GridMapDisplayBasemap.generate_filename"], [840, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[256, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"], [841, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[257, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"], [842, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[258, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"], [843, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.get_basemap"], [844, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.plot_basemap"], [845, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"], [846, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"], [847, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.plot_grid"], [848, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"], [849, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"], [850, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"], [851, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"], [852, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[268, "pyart.graph.RadarDisplay"], [853, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.generate_az_rhi_title"], [854, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[270, "pyart.graph.RadarDisplay.generate_filename"], [855, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[271, "pyart.graph.RadarDisplay.generate_ray_title"], [856, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.generate_title"], [857, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.generate_vpt_title"], [858, "pyart.graph.RadarDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.generate_xsection_title"], [859, "pyart.graph.RadarDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.label_xaxis_r"], [860, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[276, "pyart.graph.RadarDisplay.label_xaxis_rays"], [861, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[277, "pyart.graph.RadarDisplay.label_xaxis_time"], [862, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.label_xaxis_x"], [863, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.label_xaxis_xsection"], [864, "pyart.graph.RadarDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.label_yaxis_field"], [865, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radardisplay method)": [[281, "pyart.graph.RadarDisplay.label_yaxis_xsection"], [866, "pyart.graph.RadarDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.label_yaxis_y"], [867, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.label_yaxis_z"], [868, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot"], [869, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"], [870, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot_colorbar"], [871, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_cr_raster"], [872, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[288, "pyart.graph.RadarDisplay.plot_cross_hair"], [873, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[289, "pyart.graph.RadarDisplay.plot_grid_lines"], [874, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[290, "pyart.graph.RadarDisplay.plot_label"], [875, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[291, "pyart.graph.RadarDisplay.plot_labels"], [876, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[292, "pyart.graph.RadarDisplay.plot_ppi"], [877, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[293, "pyart.graph.RadarDisplay.plot_range_ring"], [878, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[294, "pyart.graph.RadarDisplay.plot_range_rings"], [879, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[295, "pyart.graph.RadarDisplay.plot_ray"], [880, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[296, "pyart.graph.RadarDisplay.plot_rhi"], [881, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[297, "pyart.graph.RadarDisplay.plot_vpt"], [882, "pyart.graph.RadarDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radardisplay method)": [[298, "pyart.graph.RadarDisplay.plot_xsection"], [883, "pyart.graph.RadarDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[299, "pyart.graph.RadarDisplay.set_aspect_ratio"], [884, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[300, "pyart.graph.RadarDisplay.set_limits"], [885, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[301, "pyart.graph.RadarMapDisplay"], [886, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"], [887, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.generate_filename"], [888, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.generate_ray_title"], [889, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.generate_title"], [890, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.generate_vpt_title"], [891, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.generate_xsection_title"], [892, "pyart.graph.RadarMapDisplay.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.label_xaxis_r"], [893, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[309, "pyart.graph.RadarMapDisplay.label_xaxis_rays"], [894, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[310, "pyart.graph.RadarMapDisplay.label_xaxis_time"], [895, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.label_xaxis_x"], [896, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"], [897, "pyart.graph.RadarMapDisplay.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.label_yaxis_field"], [898, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"], [899, "pyart.graph.RadarMapDisplay.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.label_yaxis_y"], [900, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.label_yaxis_z"], [901, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot"], [902, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"], [903, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_colorbar"], [904, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_cr_raster"], [905, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[321, "pyart.graph.RadarMapDisplay.plot_cross_hair"], [906, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[322, "pyart.graph.RadarMapDisplay.plot_grid_lines"], [907, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_label"], [908, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_labels"], [909, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[325, "pyart.graph.RadarMapDisplay.plot_line_geo"], [910, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[326, "pyart.graph.RadarMapDisplay.plot_line_xy"], [911, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[327, "pyart.graph.RadarMapDisplay.plot_point"], [912, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[328, "pyart.graph.RadarMapDisplay.plot_ppi"], [913, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[329, "pyart.graph.RadarMapDisplay.plot_ppi_map"], [914, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[330, "pyart.graph.RadarMapDisplay.plot_range_ring"], [915, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[331, "pyart.graph.RadarMapDisplay.plot_range_rings"], [916, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[332, "pyart.graph.RadarMapDisplay.plot_ray"], [917, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[333, "pyart.graph.RadarMapDisplay.plot_rhi"], [918, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[334, "pyart.graph.RadarMapDisplay.plot_vpt"], [919, "pyart.graph.RadarMapDisplay.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplay method)": [[335, "pyart.graph.RadarMapDisplay.plot_xsection"], [920, "pyart.graph.RadarMapDisplay.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[336, "pyart.graph.RadarMapDisplay.set_aspect_ratio"], [921, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[337, "pyart.graph.RadarMapDisplay.set_limits"], [922, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[338, "pyart.graph.RadarMapDisplayBasemap"], [923, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"], [924, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.generate_filename"], [925, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"], [926, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[342, "pyart.graph.RadarMapDisplayBasemap.generate_title"], [927, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"], [928, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "generate_xsection_title() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"], [929, "pyart.graph.RadarMapDisplayBasemap.generate_xsection_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"], [930, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[346, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"], [931, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[347, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"], [932, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"], [933, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_xaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"], [934, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_xsection"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"], [935, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"], [936, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_xsection"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"], [937, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"], [938, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot"], [939, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"], [940, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"], [941, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"], [942, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"], [943, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"], [944, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_label"], [945, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[361, "pyart.graph.RadarMapDisplayBasemap.plot_labels"], [946, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[362, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"], [947, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[363, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"], [948, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[364, "pyart.graph.RadarMapDisplayBasemap.plot_point"], [949, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[365, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"], [950, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[366, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"], [951, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[367, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"], [952, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[368, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"], [953, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[369, "pyart.graph.RadarMapDisplayBasemap.plot_ray"], [954, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[370, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"], [955, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[371, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"], [956, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "plot_xsection() (pyart.graph.radarmapdisplaybasemap method)": [[372, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"], [957, "pyart.graph.RadarMapDisplayBasemap.plot_xsection"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[373, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"], [958, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[374, "pyart.graph.RadarMapDisplayBasemap.set_limits"], [959, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "make_time_unit_str() (in module pyart.io)": [[375, "pyart.io.make_time_unit_str"], [962, "pyart.io.make_time_unit_str"]], "prepare_for_read() (in module pyart.io)": [[376, "pyart.io.prepare_for_read"], [963, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[377, "pyart.io.read"], [964, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[378, "pyart.io.read_arm_sonde"], [965, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[379, "pyart.io.read_arm_sonde_vap"], [966, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[380, "pyart.io.read_cfradial"], [967, "pyart.io.read_cfradial"]], "read_cfradial2() (in module pyart.io)": [[381, "pyart.io.read_cfradial2"], [968, "pyart.io.read_cfradial2"]], "read_chl() (in module pyart.io)": [[382, "pyart.io.read_chl"], [969, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[383, "pyart.io.read_grid"], [970, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[384, "pyart.io.read_grid_mdv"], [971, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[385, "pyart.io.read_mdv"], [972, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[386, "pyart.io.read_nexrad_archive"], [973, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[387, "pyart.io.read_nexrad_cdm"], [974, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[388, "pyart.io.read_nexrad_level3"], [975, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[389, "pyart.io.read_rsl"], [976, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[390, "pyart.io.read_sigmet"], [977, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[391, "pyart.io.read_uf"], [978, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[392, "pyart.io.write_cfradial"], [979, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[393, "pyart.io.write_grid"], [980, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[394, "pyart.io.write_grid_geotiff"], [981, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[395, "pyart.io.write_grid_mdv"], [982, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[396, "pyart.io.write_uf"], [983, "pyart.io.write_uf"]], "lazyloaddict (class in pyart.lazydict)": [[397, "pyart.lazydict.LazyLoadDict"], [985, "pyart.lazydict.LazyLoadDict"]], "__class_getitem__() (pyart.lazydict.lazyloaddict class method)": [[398, "pyart.lazydict.LazyLoadDict.__class_getitem__"]], "__contains__() (pyart.lazydict.lazyloaddict method)": [[399, "pyart.lazydict.LazyLoadDict.__contains__"]], "__delattr__() (pyart.lazydict.lazyloaddict method)": [[400, "pyart.lazydict.LazyLoadDict.__delattr__"]], "__delitem__() (pyart.lazydict.lazyloaddict method)": [[401, "pyart.lazydict.LazyLoadDict.__delitem__"]], "__dir__() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.__dir__"]], "__eq__() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.__eq__"]], "__format__() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.__format__"]], "__ge__() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.__ge__"]], "__getattribute__() (pyart.lazydict.lazyloaddict method)": [[406, "pyart.lazydict.LazyLoadDict.__getattribute__"]], "__getitem__() (pyart.lazydict.lazyloaddict method)": [[407, "pyart.lazydict.LazyLoadDict.__getitem__"]], "__getstate__() (pyart.lazydict.lazyloaddict method)": [[408, "pyart.lazydict.LazyLoadDict.__getstate__"]], "__gt__() (pyart.lazydict.lazyloaddict method)": [[409, "pyart.lazydict.LazyLoadDict.__gt__"]], "__init__() (pyart.lazydict.lazyloaddict method)": [[410, "pyart.lazydict.LazyLoadDict.__init__"]], "__init_subclass__() (pyart.lazydict.lazyloaddict method)": [[411, "pyart.lazydict.LazyLoadDict.__init_subclass__"]], "__iter__() (pyart.lazydict.lazyloaddict method)": [[412, "pyart.lazydict.LazyLoadDict.__iter__"]], "__le__() (pyart.lazydict.lazyloaddict method)": [[413, "pyart.lazydict.LazyLoadDict.__le__"]], "__len__() (pyart.lazydict.lazyloaddict method)": [[414, "pyart.lazydict.LazyLoadDict.__len__"]], "__lt__() (pyart.lazydict.lazyloaddict method)": [[415, "pyart.lazydict.LazyLoadDict.__lt__"]], "__ne__() (pyart.lazydict.lazyloaddict method)": [[416, "pyart.lazydict.LazyLoadDict.__ne__"]], "__new__() (pyart.lazydict.lazyloaddict method)": [[417, "pyart.lazydict.LazyLoadDict.__new__"]], "__reduce__() (pyart.lazydict.lazyloaddict method)": [[418, "pyart.lazydict.LazyLoadDict.__reduce__"]], "__reduce_ex__() (pyart.lazydict.lazyloaddict method)": [[419, "pyart.lazydict.LazyLoadDict.__reduce_ex__"]], "__repr__() (pyart.lazydict.lazyloaddict method)": [[420, "pyart.lazydict.LazyLoadDict.__repr__"]], "__setattr__() (pyart.lazydict.lazyloaddict method)": [[421, "pyart.lazydict.LazyLoadDict.__setattr__"]], "__setitem__() (pyart.lazydict.lazyloaddict method)": [[422, "pyart.lazydict.LazyLoadDict.__setitem__"]], "__sizeof__() (pyart.lazydict.lazyloaddict method)": [[423, "pyart.lazydict.LazyLoadDict.__sizeof__"]], "__str__() (pyart.lazydict.lazyloaddict method)": [[424, "pyart.lazydict.LazyLoadDict.__str__"]], "__subclasshook__() (pyart.lazydict.lazyloaddict class method)": [[425, "pyart.lazydict.LazyLoadDict.__subclasshook__"]], "clear() (pyart.lazydict.lazyloaddict method)": [[426, "pyart.lazydict.LazyLoadDict.clear"], [986, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[427, "pyart.lazydict.LazyLoadDict.copy"], [987, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[428, "pyart.lazydict.LazyLoadDict.get"], [988, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[429, "pyart.lazydict.LazyLoadDict.has_key"], [989, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[430, "pyart.lazydict.LazyLoadDict.items"], [990, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[431, "pyart.lazydict.LazyLoadDict.keys"], [991, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[432, "pyart.lazydict.LazyLoadDict.pop"], [992, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[433, "pyart.lazydict.LazyLoadDict.popitem"], [993, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[434, "pyart.lazydict.LazyLoadDict.set_lazy"], [994, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[435, "pyart.lazydict.LazyLoadDict.setdefault"], [995, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[436, "pyart.lazydict.LazyLoadDict.update"], [996, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[437, "pyart.lazydict.LazyLoadDict.values"], [997, "pyart.lazydict.LazyLoadDict.values"]], "example_roi_func_constant() (in module pyart.map)": [[438, "pyart.map.example_roi_func_constant"], [1013, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[439, "pyart.map.example_roi_func_dist"], [1014, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[440, "pyart.map.example_roi_func_dist_beam"], [1015, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[441, "pyart.map.grid_from_radars"], [1017, "pyart.map.grid_from_radars"]], "map_gates_to_grid() (in module pyart.map)": [[442, "pyart.map.map_gates_to_grid"], [1018, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[443, "pyart.map.map_to_grid"], [1019, "pyart.map.map_to_grid"]], "_destandardize() (in module pyart.retrieve)": [[444, "pyart.retrieve._destandardize"]], "_get_res_vol_sides() (in module pyart.retrieve)": [[445, "pyart.retrieve._get_res_vol_sides"]], "atmospheric_gas_att() (in module pyart.retrieve)": [[446, "pyart.retrieve.atmospheric_gas_att"], [1022, "pyart.retrieve.atmospheric_gas_att"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[447, "pyart.retrieve.calculate_snr_from_reflectivity"], [1023, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[448, "pyart.retrieve.calculate_velocity_texture"], [1024, "pyart.retrieve.calculate_velocity_texture"]], "compute_doppler_velocity() (in module pyart.retrieve)": [[449, "pyart.retrieve.compute_Doppler_velocity"], [1026, "pyart.retrieve.compute_Doppler_velocity"]], "compute_doppler_velocity_iq() (in module pyart.retrieve)": [[450, "pyart.retrieve.compute_Doppler_velocity_iq"], [1027, "pyart.retrieve.compute_Doppler_velocity_iq"]], "compute_doppler_width() (in module pyart.retrieve)": [[451, "pyart.retrieve.compute_Doppler_width"], [1028, "pyart.retrieve.compute_Doppler_width"]], "compute_doppler_width_iq() (in module pyart.retrieve)": [[452, "pyart.retrieve.compute_Doppler_width_iq"], [1029, "pyart.retrieve.compute_Doppler_width_iq"]], "compute_apparent_profile() (in module pyart.retrieve)": [[453, "pyart.retrieve.compute_apparent_profile"], [1030, "pyart.retrieve.compute_apparent_profile"]], "compute_bird_density() (in module pyart.retrieve)": [[454, "pyart.retrieve.compute_bird_density"], [1031, "pyart.retrieve.compute_bird_density"]], "compute_ccor() (in module pyart.retrieve)": [[455, "pyart.retrieve.compute_ccor"], [1032, "pyart.retrieve.compute_ccor"]], "compute_cdr() (in module pyart.retrieve)": [[456, "pyart.retrieve.compute_cdr"], [1033, "pyart.retrieve.compute_cdr"]], "compute_centroids() (in module pyart.retrieve)": [[457, "pyart.retrieve.compute_centroids"], [1034, "pyart.retrieve.compute_centroids"]], "compute_differential_phase() (in module pyart.retrieve)": [[458, "pyart.retrieve.compute_differential_phase"], [1035, "pyart.retrieve.compute_differential_phase"]], "compute_differential_phase_iq() (in module pyart.retrieve)": [[459, "pyart.retrieve.compute_differential_phase_iq"], [1036, "pyart.retrieve.compute_differential_phase_iq"]], "compute_differential_reflectivity() (in module pyart.retrieve)": [[460, "pyart.retrieve.compute_differential_reflectivity"], [1037, "pyart.retrieve.compute_differential_reflectivity"]], "compute_differential_reflectivity_iq() (in module pyart.retrieve)": [[461, "pyart.retrieve.compute_differential_reflectivity_iq"], [1038, "pyart.retrieve.compute_differential_reflectivity_iq"]], "compute_evp() (in module pyart.retrieve)": [[462, "pyart.retrieve.compute_evp"], [1039, "pyart.retrieve.compute_evp"]], "compute_iq() (in module pyart.retrieve)": [[463, "pyart.retrieve.compute_iq"], [1040, "pyart.retrieve.compute_iq"]], "compute_l() (in module pyart.retrieve)": [[464, "pyart.retrieve.compute_l"], [1041, "pyart.retrieve.compute_l"]], "compute_mean_phase_iq() (in module pyart.retrieve)": [[465, "pyart.retrieve.compute_mean_phase_iq"], [1042, "pyart.retrieve.compute_mean_phase_iq"]], "compute_noise_power() (in module pyart.retrieve)": [[466, "pyart.retrieve.compute_noise_power"], [1043, "pyart.retrieve.compute_noise_power"]], "compute_noisedbz() (in module pyart.retrieve)": [[467, "pyart.retrieve.compute_noisedBZ"], [1044, "pyart.retrieve.compute_noisedBZ"]], "compute_pol_variables() (in module pyart.retrieve)": [[468, "pyart.retrieve.compute_pol_variables"], [1045, "pyart.retrieve.compute_pol_variables"]], "compute_pol_variables_iq() (in module pyart.retrieve)": [[469, "pyart.retrieve.compute_pol_variables_iq"], [1046, "pyart.retrieve.compute_pol_variables_iq"]], "compute_qvp() (in module pyart.retrieve)": [[470, "pyart.retrieve.compute_qvp"], [1047, "pyart.retrieve.compute_qvp"]], "compute_radial_noise_hs() (in module pyart.retrieve)": [[471, "pyart.retrieve.compute_radial_noise_hs"], [1048, "pyart.retrieve.compute_radial_noise_hs"]], "compute_radial_noise_ivic() (in module pyart.retrieve)": [[472, "pyart.retrieve.compute_radial_noise_ivic"], [1049, "pyart.retrieve.compute_radial_noise_ivic"]], "compute_rcs() (in module pyart.retrieve)": [[473, "pyart.retrieve.compute_rcs"], [1050, "pyart.retrieve.compute_rcs"]], "compute_rcs_from_pr() (in module pyart.retrieve)": [[474, "pyart.retrieve.compute_rcs_from_pr"], [1051, "pyart.retrieve.compute_rcs_from_pr"]], "compute_reflectivity() (in module pyart.retrieve)": [[475, "pyart.retrieve.compute_reflectivity"], [1052, "pyart.retrieve.compute_reflectivity"]], "compute_reflectivity_iq() (in module pyart.retrieve)": [[476, "pyart.retrieve.compute_reflectivity_iq"], [1053, "pyart.retrieve.compute_reflectivity_iq"]], "compute_rhohv() (in module pyart.retrieve)": [[477, "pyart.retrieve.compute_rhohv"], [1054, "pyart.retrieve.compute_rhohv"]], "compute_rhohv_iq() (in module pyart.retrieve)": [[478, "pyart.retrieve.compute_rhohv_iq"], [1055, "pyart.retrieve.compute_rhohv_iq"]], "compute_rqvp() (in module pyart.retrieve)": [[479, "pyart.retrieve.compute_rqvp"], [1056, "pyart.retrieve.compute_rqvp"]], "compute_signal_power() (in module pyart.retrieve)": [[480, "pyart.retrieve.compute_signal_power"], [1057, "pyart.retrieve.compute_signal_power"]], "compute_snr() (in module pyart.retrieve)": [[481, "pyart.retrieve.compute_snr"], [1058, "pyart.retrieve.compute_snr"]], "compute_spectra() (in module pyart.retrieve)": [[482, "pyart.retrieve.compute_spectra"], [1059, "pyart.retrieve.compute_spectra"]], "compute_spectral_differential_phase() (in module pyart.retrieve)": [[483, "pyart.retrieve.compute_spectral_differential_phase"], [1060, "pyart.retrieve.compute_spectral_differential_phase"]], "compute_spectral_differential_reflectivity() (in module pyart.retrieve)": [[484, "pyart.retrieve.compute_spectral_differential_reflectivity"], [1061, "pyart.retrieve.compute_spectral_differential_reflectivity"]], "compute_spectral_noise() (in module pyart.retrieve)": [[485, "pyart.retrieve.compute_spectral_noise"], [1062, "pyart.retrieve.compute_spectral_noise"]], "compute_spectral_phase() (in module pyart.retrieve)": [[486, "pyart.retrieve.compute_spectral_phase"], [1063, "pyart.retrieve.compute_spectral_phase"]], "compute_spectral_power() (in module pyart.retrieve)": [[487, "pyart.retrieve.compute_spectral_power"], [1064, "pyart.retrieve.compute_spectral_power"]], "compute_spectral_reflectivity() (in module pyart.retrieve)": [[488, "pyart.retrieve.compute_spectral_reflectivity"], [1065, "pyart.retrieve.compute_spectral_reflectivity"]], "compute_spectral_rhohv() (in module pyart.retrieve)": [[489, "pyart.retrieve.compute_spectral_rhohv"], [1066, "pyart.retrieve.compute_spectral_rhohv"]], "compute_st1_iq() (in module pyart.retrieve)": [[490, "pyart.retrieve.compute_st1_iq"], [1067, "pyart.retrieve.compute_st1_iq"]], "compute_st2_iq() (in module pyart.retrieve)": [[491, "pyart.retrieve.compute_st2_iq"], [1068, "pyart.retrieve.compute_st2_iq"]], "compute_svp() (in module pyart.retrieve)": [[492, "pyart.retrieve.compute_svp"], [1069, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[493, "pyart.retrieve.compute_ts_along_coord"], [1070, "pyart.retrieve.compute_ts_along_coord"]], "compute_vol_refl() (in module pyart.retrieve)": [[494, "pyart.retrieve.compute_vol_refl"], [1071, "pyart.retrieve.compute_vol_refl"]], "compute_vp() (in module pyart.retrieve)": [[495, "pyart.retrieve.compute_vp"], [1072, "pyart.retrieve.compute_vp"]], "compute_wbn_iq() (in module pyart.retrieve)": [[496, "pyart.retrieve.compute_wbn_iq"], [1073, "pyart.retrieve.compute_wbn_iq"]], "conv_strat_yuter() (in module pyart.retrieve)": [[497, "pyart.retrieve.conv_strat_yuter"], [1074, "pyart.retrieve.conv_strat_yuter"]], "data_for_centroids() (in module pyart.retrieve)": [[498, "pyart.retrieve.data_for_centroids"], [1075, "pyart.retrieve.data_for_centroids"]], "detect_ml() (in module pyart.retrieve)": [[499, "pyart.retrieve.detect_ml"], [1076, "pyart.retrieve.detect_ml"]], "determine_medoids() (in module pyart.retrieve)": [[500, "pyart.retrieve.determine_medoids"], [1077, "pyart.retrieve.determine_medoids"]], "est_rain_rate_a() (in module pyart.retrieve)": [[501, "pyart.retrieve.est_rain_rate_a"], [1078, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[502, "pyart.retrieve.est_rain_rate_hydro"], [1079, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[503, "pyart.retrieve.est_rain_rate_kdp"], [1080, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[504, "pyart.retrieve.est_rain_rate_z"], [1081, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[505, "pyart.retrieve.est_rain_rate_za"], [1082, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[506, "pyart.retrieve.est_rain_rate_zkdp"], [1083, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[507, "pyart.retrieve.est_rain_rate_zpoly"], [1084, "pyart.retrieve.est_rain_rate_zpoly"]], "est_vertical_windshear() (in module pyart.retrieve)": [[508, "pyart.retrieve.est_vertical_windshear"], [1085, "pyart.retrieve.est_vertical_windshear"]], "est_vertical_windshear_lidar() (in module pyart.retrieve)": [[509, "pyart.retrieve.est_vertical_windshear_lidar"], [1086, "pyart.retrieve.est_vertical_windshear_lidar"]], "est_wind_profile() (in module pyart.retrieve)": [[510, "pyart.retrieve.est_wind_profile"], [1087, "pyart.retrieve.est_wind_profile"]], "est_wind_vel() (in module pyart.retrieve)": [[511, "pyart.retrieve.est_wind_vel"], [1088, "pyart.retrieve.est_wind_vel"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[512, "pyart.retrieve.fetch_radar_time_profile"], [1089, "pyart.retrieve.fetch_radar_time_profile"]], "gecsx() (in module pyart.retrieve)": [[513, "pyart.retrieve.gecsx"], [1090, "pyart.retrieve.gecsx"]], "get_coeff_attg() (in module pyart.retrieve)": [[514, "pyart.retrieve.get_coeff_attg"], [1091, "pyart.retrieve.get_coeff_attg"]], "get_freq_band() (in module pyart.retrieve)": [[515, "pyart.retrieve.get_freq_band"], [1092, "pyart.retrieve.get_freq_band"]], "get_iso0_val() (in module pyart.retrieve)": [[516, "pyart.retrieve.get_iso0_val"], [1093, "pyart.retrieve.get_iso0_val"]], "get_ml_rng_limits() (in module pyart.retrieve)": [[517, "pyart.retrieve.get_ml_rng_limits"], [1094, "pyart.retrieve.get_ml_rng_limits"]], "grid_displacement_pc() (in module pyart.retrieve)": [[518, "pyart.retrieve.grid_displacement_pc"], [1095, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[519, "pyart.retrieve.grid_shift"], [1096, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[520, "pyart.retrieve.hydroclass_semisupervised"], [1097, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_leastsquare_double_window() (in module pyart.retrieve)": [[521, "pyart.retrieve.kdp_leastsquare_double_window"], [1098, "pyart.retrieve.kdp_leastsquare_double_window"]], "kdp_leastsquare_single_window() (in module pyart.retrieve)": [[522, "pyart.retrieve.kdp_leastsquare_single_window"], [1099, "pyart.retrieve.kdp_leastsquare_single_window"]], "kdp_maesaka() (in module pyart.retrieve)": [[523, "pyart.retrieve.kdp_maesaka"], [1100, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[524, "pyart.retrieve.kdp_schneebeli"], [1101, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[525, "pyart.retrieve.kdp_vulpiani"], [1102, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[526, "pyart.retrieve.map_profile_to_gates"], [1103, "pyart.retrieve.map_profile_to_gates"]], "melting_layer_giangrande() (in module pyart.retrieve)": [[527, "pyart.retrieve.melting_layer_giangrande"], [1104, "pyart.retrieve.melting_layer_giangrande"]], "melting_layer_hydroclass() (in module pyart.retrieve)": [[528, "pyart.retrieve.melting_layer_hydroclass"], [1105, "pyart.retrieve.melting_layer_hydroclass"]], "melting_layer_mf() (in module pyart.retrieve)": [[529, "pyart.retrieve.melting_layer_mf"], [1106, "pyart.retrieve.melting_layer_mf"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[530, "pyart.retrieve.quasi_vertical_profile"], [1107, "pyart.retrieve.quasi_vertical_profile"]], "select_samples() (in module pyart.retrieve)": [[531, "pyart.retrieve.select_samples"], [1108, "pyart.retrieve.select_samples"]], "steiner_conv_strat() (in module pyart.retrieve)": [[532, "pyart.retrieve.steiner_conv_strat"], [1109, "pyart.retrieve.steiner_conv_strat"]], "synthetic_obs_distribution() (in module pyart.retrieve)": [[533, "pyart.retrieve.synthetic_obs_distribution"], [1110, "pyart.retrieve.synthetic_obs_distribution"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[534, "pyart.retrieve.texture_of_complex_phase"], [1111, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[535, "pyart.retrieve.vad_browning"], [1112, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[536, "pyart.retrieve.vad_michelson"], [1113, "pyart.retrieve.vad_michelson"]], "_debug_info() (in module pyart)": [[537, "pyart._debug_info"]], "module": [[538, "module-pyart.aux_io"], [580, "module-pyart.bridge"], [582, "module-pyart.config"], [594, "module-pyart.core"], [676, "module-pyart.correct"], [747, "module-pyart.exceptions"], [748, "module-pyart.filters"], [785, "module-pyart.graph"], [961, "module-pyart.io"], [984, "module-pyart.lazydict"], [1008, "module-pyart.map"], [1021, "module-pyart.retrieve"], [1114, "module-pyart.testing"], [1199, "module-pyart.util"]], "pyart.aux_io": [[538, "module-pyart.aux_io"]], "convert_data() (in module pyart.aux_io)": [[539, "pyart.aux_io.convert_data"]], "get_library() (in module pyart.aux_io)": [[540, "pyart.aux_io.get_library"]], "read_edge_netcdf() (in module pyart.aux_io)": [[549, "pyart.aux_io.read_edge_netcdf"]], "read_file_c() (in module pyart.aux_io)": [[550, "pyart.aux_io.read_file_c"]], "read_file_py() (in module pyart.aux_io)": [[551, "pyart.aux_io.read_file_py"]], "read_product_c() (in module pyart.aux_io)": [[565, "pyart.aux_io.read_product_c"]], "read_product_py() (in module pyart.aux_io)": [[566, "pyart.aux_io.read_product_py"]], "read_psr_cpi_header() (in module pyart.aux_io)": [[567, "pyart.aux_io.read_psr_cpi_header"]], "read_psr_header() (in module pyart.aux_io)": [[568, "pyart.aux_io.read_psr_header"]], "read_psr_spectra() (in module pyart.aux_io)": [[569, "pyart.aux_io.read_psr_spectra"]], "read_sinarame_h5() (in module pyart.aux_io)": [[574, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[578, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[580, "module-pyart.bridge"]], "pyart.config": [[582, "module-pyart.config"]], "pyart.core": [[594, "module-pyart.core"]], "pyart.correct": [[676, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[677, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[678, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[679, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[680, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[681, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[682, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[683, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[684, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[685, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[686, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[687, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[688, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[689, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[690, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[691, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[692, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[693, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[694, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[695, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[696, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[697, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[698, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[699, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[700, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[701, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[702, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[703, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[704, "pyart.correct.GateFilter.include_valid"]], "gauss_fit() (in module pyart.correct)": [[725, "pyart.correct.gauss_fit"]], "moment_based_gate_filter() (in module pyart.correct)": [[730, "pyart.correct.moment_based_gate_filter"]], "retrieval_result() (in module pyart.correct)": [[734, "pyart.correct.retrieval_result"]], "pyart.exceptions": [[747, "module-pyart.exceptions"]], "pyart.filters": [[748, "module-pyart.filters"]], "pyart.graph": [[785, "module-pyart.graph"]], "plot_convstrat_scheme() (in module pyart.graph)": [[960, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[961, "module-pyart.io"]], "pyart.lazydict": [[984, "module-pyart.lazydict"]], "mutablemapping (class in pyart.lazydict)": [[998, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[999, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[1000, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[1001, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[1002, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[1003, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[1004, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[1005, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[1006, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[1007, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[1008, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[1009, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[1010, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[1011, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[1012, "pyart.map.GateMapper.time_tolerance"]], "get_earth_radius() (in module pyart.map)": [[1016, "pyart.map.get_earth_radius"]], "polar_to_cartesian() (in module pyart.map)": [[1020, "pyart.map.polar_to_cartesian"]], "pyart.retrieve": [[1021, "module-pyart.retrieve"]], "composite_reflectivity() (in module pyart.retrieve)": [[1025, "pyart.retrieve.composite_reflectivity"]], "pyart.testing": [[1114, "module-pyart.testing"]], "grid (class in pyart.testing)": [[1115, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[1116, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[1117, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[1118, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[1119, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[1120, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[1121, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[1122, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[1123, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[1124, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[1125, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[1126, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[1127, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[1128, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[1129, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[1130, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[1131, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[1132, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[1133, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[1134, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[1135, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[1136, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[1137, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[1138, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[1139, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[1140, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[1141, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[1142, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[1143, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[1144, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[1145, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[1146, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[1147, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[1148, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[1149, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[1150, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[1151, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[1152, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[1153, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[1154, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[1155, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[1156, "pyart.testing.RadarSpectra"]], "add_field() (pyart.testing.radarspectra method)": [[1157, "pyart.testing.RadarSpectra.add_field"]], "add_field_like() (pyart.testing.radarspectra method)": [[1158, "pyart.testing.RadarSpectra.add_field_like"]], "add_filter() (pyart.testing.radarspectra method)": [[1159, "pyart.testing.RadarSpectra.add_filter"]], "check_field_exists() (pyart.testing.radarspectra method)": [[1160, "pyart.testing.RadarSpectra.check_field_exists"]], "extract_sweeps() (pyart.testing.radarspectra method)": [[1161, "pyart.testing.RadarSpectra.extract_sweeps"]], "get_azimuth() (pyart.testing.radarspectra method)": [[1162, "pyart.testing.RadarSpectra.get_azimuth"]], "get_elevation() (pyart.testing.radarspectra method)": [[1163, "pyart.testing.RadarSpectra.get_elevation"]], "get_end() (pyart.testing.radarspectra method)": [[1164, "pyart.testing.RadarSpectra.get_end"]], "get_field() (pyart.testing.radarspectra method)": [[1165, "pyart.testing.RadarSpectra.get_field"]], "get_gate_area() (pyart.testing.radarspectra method)": [[1166, "pyart.testing.RadarSpectra.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radarspectra method)": [[1167, "pyart.testing.RadarSpectra.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radarspectra method)": [[1168, "pyart.testing.RadarSpectra.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radarspectra method)": [[1169, "pyart.testing.RadarSpectra.get_nyquist_vel"]], "get_slice() (pyart.testing.radarspectra method)": [[1170, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[1171, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[1172, "pyart.testing.RadarSpectra.get_start_end"]], "info() (pyart.testing.radarspectra method)": [[1173, "pyart.testing.RadarSpectra.info"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[1174, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[1175, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[1176, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[1177, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[1178, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[1179, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[1180, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[1181, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[1182, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[1183, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[1184, "pyart.testing.RadarSpectra.iter_start_end"]], "get_metadata() (in module pyart.testing)": [[1185, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[1186, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[1187, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[1188, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[1189, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[1190, "pyart.testing.make_empty_spectra_radar"]], "make_normal_storm() (in module pyart.testing)": [[1191, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[1192, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[1193, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[1194, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[1195, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[1196, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[1197, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[1198, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[1199, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[1200, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[1201, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[1202, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[1203, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[1204, "pyart.util.angular_texture_2d"]], "colocated_gates() (in module pyart.util)": [[1205, "pyart.util.colocated_gates"]], "colocated_gates2() (in module pyart.util)": [[1206, "pyart.util.colocated_gates2"]], "compute_azimuthal_average() (in module pyart.util)": [[1207, "pyart.util.compute_azimuthal_average"]], "compute_corr() (in module pyart.util)": [[1208, "pyart.util.compute_corr"]], "compute_directional_stats() (in module pyart.util)": [[1209, "pyart.util.compute_directional_stats"]], "compute_mse() (in module pyart.util)": [[1210, "pyart.util.compute_mse"]], "compute_nse() (in module pyart.util)": [[1211, "pyart.util.compute_nse"]], "cross_section_ppi() (in module pyart.util)": [[1212, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[1213, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[1214, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[1215, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[1216, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[1217, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[1218, "pyart.util.datetimes_from_radar"]], "estimate_noise_hs74() (in module pyart.util)": [[1219, "pyart.util.estimate_noise_hs74"]], "estimate_noise_ivic13() (in module pyart.util)": [[1220, "pyart.util.estimate_noise_ivic13"]], "find_neighbour_gates() (in module pyart.util)": [[1221, "pyart.util.find_neighbour_gates"]], "for_azimuth() (in module pyart.util)": [[1222, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[1223, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[1224, "pyart.util.get_field_location"]], "get_ivic_flat_reg_var_max() (in module pyart.util)": [[1225, "pyart.util.get_ivic_flat_reg_var_max"]], "get_ivic_pct() (in module pyart.util)": [[1226, "pyart.util.get_ivic_pct"]], "get_ivic_snr_thr() (in module pyart.util)": [[1227, "pyart.util.get_ivic_snr_thr"]], "get_target_elevations() (in module pyart.util)": [[1228, "pyart.util.get_target_elevations"]], "grid_texture_2d() (in module pyart.util)": [[1229, "pyart.util.grid_texture_2d"]], "image_mute_radar() (in module pyart.util)": [[1230, "pyart.util.image_mute_radar"]], "interpol_spectra() (in module pyart.util)": [[1231, "pyart.util.interpol_spectra"]], "intersection() (in module pyart.util)": [[1232, "pyart.util.intersection"]], "interval_mean() (in module pyart.util)": [[1233, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[1234, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[1235, "pyart.util.is_vpt"]], "ivic_flat_reg_var_max_table() (in module pyart.util)": [[1236, "pyart.util.ivic_flat_reg_var_max_table"]], "ivic_flat_reg_wind_len_table() (in module pyart.util)": [[1237, "pyart.util.ivic_flat_reg_wind_len_table"]], "ivic_pct_table() (in module pyart.util)": [[1238, "pyart.util.ivic_pct_table"]], "ivic_snr_thr_table() (in module pyart.util)": [[1239, "pyart.util.ivic_snr_thr_table"]], "join_radar() (in module pyart.util)": [[1240, "pyart.util.join_radar"]], "join_spectra() (in module pyart.util)": [[1241, "pyart.util.join_spectra"]], "ma_broadcast_to() (in module pyart.util)": [[1242, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[1243, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[1244, "pyart.util.mean_of_two_angles_deg"]], "radar_from_spectra() (in module pyart.util)": [[1245, "pyart.util.radar_from_spectra"]], "rolling_window() (in module pyart.util)": [[1246, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[1247, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[1248, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[1249, "pyart.util.subset_radar"]], "subset_radar_spectra() (in module pyart.util)": [[1250, "pyart.util.subset_radar_spectra"]], "texture() (in module pyart.util)": [[1251, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[1252, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[1253, "pyart.util.to_vpt"]]}})